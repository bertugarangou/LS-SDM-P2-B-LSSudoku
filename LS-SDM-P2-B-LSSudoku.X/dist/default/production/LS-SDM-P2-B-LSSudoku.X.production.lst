

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 29 19:02:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.32
    77                           ; Generated 02/02/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4321 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  001688                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _lletraInici
   117  001688  41                 	db	65
   118  001689  44                 	db	68
   119  00168A  47                 	db	71
   120  00168B  4A                 	db	74
   121  00168C  4D                 	db	77
   122  00168D  50                 	db	80
   123  00168E  54                 	db	84
   124  00168F  57                 	db	87
   125  001690  00                 	db	0
   126                           
   127                           ;initializer for GLCDMotor@max2
   128  001691  0F                 	db	15
   129                           
   130                           ;initializer for GLCDMotor@max1
   131  001692  0F                 	db	15
   132                           
   133                           ;initializer for _usuariLoguejat
   134  001693  FF                 	db	255
   135                           
   136                           ;initializer for _novaLletra
   137  001694  FF                 	db	255
   138                           
   139                           ;initializer for _NovaTecla
   140  001695  FF                 	db	255
   141                           
   142                           ;initializer for _ultimaTecla
   143  001696  FF                 	db	255
   144                           
   145                           ;initializer for _timerSMS
   146  001697  FF                 	db	255
   147                           
   148                           ;initializer for _novaTecla
   149  001698  FF                 	db	255
   150                           
   151                           ;initializer for _lletraASCII
   152  001699  FF                 	db	255
   153                           
   154                           	psect	idataBANK0
   155  0016BA                     __pidataBANK0:
   156                           	callstack 0
   157                           
   158                           ;initializer for _teclaPremuda
   159  0016BA  01                 	db	1
   160  0016BB  02                 	db	2
   161  0016BC  03                 	db	3
   162  0016BD  04                 	db	4
   163  0016BE  05                 	db	5
   164  0016BF  06                 	db	6
   165  0016C0  07                 	db	7
   166  0016C1  08                 	db	8
   167  0016C2  09                 	db	9
   168  0016C3  0A                 	db	10
   169  0016C4  00                 	db	0
   170  0016C5  0B                 	db	11
   171                           
   172                           	psect	smallconst
   173  000200                     __psmallconst:
   174                           	callstack 0
   175  000200  00                 	db	0
   176  000201                     _menuList:
   177                           	callstack 0
   178  000201  31                 	db	49
   179  000202  2E                 	db	46
   180  000203  50                 	db	80
   181  000204  6C                 	db	108
   182  000205  61                 	db	97
   183  000206  79                 	db	121
   184  000207  20                 	db	32
   185  000208  61                 	db	97
   186  000209  20                 	db	32
   187  00020A  47                 	db	71
   188  00020B  61                 	db	97
   189  00020C  6D                 	db	109
   190  00020D  65                 	db	101
   191  00020E  00                 	db	0
   192  00020F  00                 	db	0
   193  000210  00                 	db	0
   194  000211  00                 	db	0
   195  000212  00                 	db	0
   196  000213  00                 	db	0
   197  000214  00                 	db	0
   198  000215  00                 	db	0
   199  000216  00                 	db	0
   200  000217  00                 	db	0
   201  000218  00                 	db	0
   202  000219  00                 	db	0
   203  00021A  00                 	db	0
   204  00021B  00                 	db	0
   205  00021C  00                 	db	0
   206  00021D  00                 	db	0
   207  00021E  32                 	db	50
   208  00021F  2E                 	db	46
   209  000220  4D                 	db	77
   210  000221  6F                 	db	111
   211  000222  64                 	db	100
   212  000223  69                 	db	105
   213  000224  66                 	db	102
   214  000225  79                 	db	121
   215  000226  20                 	db	32
   216  000227  54                 	db	84
   217  000228  69                 	db	105
   218  000229  6D                 	db	109
   219  00022A  65                 	db	101
   220  00022B  00                 	db	0
   221  00022C  00                 	db	0
   222  00022D  00                 	db	0
   223  00022E  00                 	db	0
   224  00022F  00                 	db	0
   225  000230  00                 	db	0
   226  000231  00                 	db	0
   227  000232  00                 	db	0
   228  000233  00                 	db	0
   229  000234  00                 	db	0
   230  000235  00                 	db	0
   231  000236  00                 	db	0
   232  000237  00                 	db	0
   233  000238  00                 	db	0
   234  000239  00                 	db	0
   235  00023A  00                 	db	0
   236  00023B  33                 	db	51
   237  00023C  2E                 	db	46
   238  00023D  53                 	db	83
   239  00023E  68                 	db	104
   240  00023F  6F                 	db	111
   241  000240  77                 	db	119
   242  000241  20                 	db	32
   243  000242  47                 	db	71
   244  000243  65                 	db	101
   245  000244  6E                 	db	110
   246  000245  65                 	db	101
   247  000246  72                 	db	114
   248  000247  61                 	db	97
   249  000248  6C                 	db	108
   250  000249  20                 	db	32
   251  00024A  54                 	db	84
   252  00024B  6F                 	db	111
   253  00024C  70                 	db	112
   254  00024D  20                 	db	32
   255  00024E  35                 	db	53
   256  00024F  20                 	db	32
   257  000250  53                 	db	83
   258  000251  63                 	db	99
   259  000252  6F                 	db	111
   260  000253  72                 	db	114
   261  000254  65                 	db	101
   262  000255  73                 	db	115
   263  000256  20                 	db	32
   264  000257  00                 	db	0
   265  000258  34                 	db	52
   266  000259  2E                 	db	46
   267  00025A  4C                 	db	76
   268  00025B  6F                 	db	111
   269  00025C  67                 	db	103
   270  00025D  6F                 	db	111
   271  00025E  75                 	db	117
   272  00025F  74                 	db	116
   273  000260  00                 	db	0
   274  000261  00                 	db	0
   275  000262  00                 	db	0
   276  000263  00                 	db	0
   277  000264  00                 	db	0
   278  000265  00                 	db	0
   279  000266  00                 	db	0
   280  000267  00                 	db	0
   281  000268  00                 	db	0
   282  000269  00                 	db	0
   283  00026A  00                 	db	0
   284  00026B  00                 	db	0
   285  00026C  00                 	db	0
   286  00026D  00                 	db	0
   287  00026E  00                 	db	0
   288  00026F  00                 	db	0
   289  000270  00                 	db	0
   290  000271  00                 	db	0
   291  000272  00                 	db	0
   292  000273  00                 	db	0
   293  000274  00                 	db	0
   294  000275  35                 	db	53
   295  000276  2E                 	db	46
   296  000277  53                 	db	83
   297  000278  68                 	db	104
   298  000279  6F                 	db	111
   299  00027A  77                 	db	119
   300  00027B  20                 	db	32
   301  00027C  41                 	db	65
   302  00027D  6C                 	db	108
   303  00027E  6C                 	db	108
   304  00027F  20                 	db	32
   305  000280  55                 	db	85
   306  000281  73                 	db	115
   307  000282  65                 	db	101
   308  000283  72                 	db	114
   309  000284  73                 	db	115
   310  000285  00                 	db	0
   311  000286  00                 	db	0
   312  000287  00                 	db	0
   313  000288  00                 	db	0
   314  000289  00                 	db	0
   315  00028A  00                 	db	0
   316  00028B  00                 	db	0
   317  00028C  00                 	db	0
   318  00028D  00                 	db	0
   319  00028E  00                 	db	0
   320  00028F  00                 	db	0
   321  000290  00                 	db	0
   322  000291  00                 	db	0
   323  000292                     __end_of_menuList:
   324                           	callstack 0
   325  0000                     _EECON2	set	4007
   326  0000                     _EEDATA	set	4008
   327  0000                     _EEADR	set	4009
   328  0000                     _T0CONbits	set	4053
   329  0000                     _TMR0L	set	4054
   330  0000                     _TMR0H	set	4055
   331  0000                     _T0CON	set	4053
   332  0000                     _INTCONbits	set	4082
   333  0000                     _RCONbits	set	4048
   334  0000                     _PORTDbits	set	3971
   335  0000                     _EECON1bits	set	4006
   336  0000                     _LATD	set	3980
   337  0000                     _TRISD	set	3989
   338  0000                     _TRISC	set	3988
   339  0000                     _LATBbits	set	3978
   340  0000                     _TRISB	set	3987
   341  0000                     _TRISA	set	3986
   342  0000                     _PORTCbits	set	3970
   343  0000                     _LATDbits	set	3980
   344  0000                     _LATCbits	set	3979
   345  0000                     _TRISDbits	set	3989
   346  0000                     _TRISCbits	set	3988
   347  000292                     STR_2:
   348  000292  32                 	db	50	;'2'
   349  000293  2E                 	db	46
   350  000294  52                 	db	82	;'R'
   351  000295  45                 	db	69	;'E'
   352  000296  47                 	db	71	;'G'
   353  000297  49                 	db	73	;'I'
   354  000298  53                 	db	83	;'S'
   355  000299  54                 	db	84	;'T'
   356  00029A  45                 	db	69	;'E'
   357  00029B  52                 	db	82	;'R'
   358  00029C  00                 	db	0
   359  00029D                     STR_5:
   360  00029D  42                 	db	66	;'B'
   361  00029E  59                 	db	89	;'Y'
   362  00029F  45                 	db	69	;'E'
   363  0002A0  20                 	db	32
   364  0002A1  42                 	db	66	;'B'
   365  0002A2  59                 	db	89	;'Y'
   366  0002A3  45                 	db	69	;'E'
   367  0002A4  20                 	db	32
   368  0002A5  00                 	db	0
   369  0002A6                     STR_1:
   370  0002A6  31                 	db	49	;'1'
   371  0002A7  2E                 	db	46
   372  0002A8  4C                 	db	76	;'L'
   373  0002A9  4F                 	db	79	;'O'
   374  0002AA  47                 	db	71	;'G'
   375  0002AB  49                 	db	73	;'I'
   376  0002AC  4E                 	db	78	;'N'
   377  0002AD  00                 	db	0
   378  0002AE                     STR_4:
   379  0002AE  50                 	db	80	;'P'
   380  0002AF  53                 	db	83	;'S'
   381  0002B0  57                 	db	87	;'W'
   382  0002B1  44                 	db	68	;'D'
   383  0002B2  3A                 	db	58	;':'
   384  0002B3  20                 	db	32
   385  0002B4  00                 	db	0
   386  0002B5                     STR_3:
   387  0002B5  55                 	db	85	;'U'
   388  0002B6  53                 	db	83	;'S'
   389  0002B7  45                 	db	69	;'E'
   390  0002B8  52                 	db	82	;'R'
   391  0002B9  3A                 	db	58	;':'
   392  0002BA  20                 	db	32
   393  0002BB  00                 	db	0
   394  0002BC  00                 	db	0	; dummy byte at the end
   395  0000                     
   396                           ; #config settings
   397                           
   398                           	psect	cinit
   399  001146                     __pcinit:
   400                           	callstack 0
   401  001146                     start_initialization:
   402                           	callstack 0
   403  001146                     __initialization:
   404                           	callstack 0
   405                           
   406                           ; Initialize objects allocated to BANK0 (12 bytes)
   407                           ; load TBLPTR registers with __pidataBANK0
   408  001146  0EBA               	movlw	low __pidataBANK0
   409  001148  6EF6               	movwf	tblptrl,c
   410  00114A  0E16               	movlw	high __pidataBANK0
   411  00114C  6EF7               	movwf	tblptrh,c
   412  00114E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   413  001150  6EF8               	movwf	tblptru,c
   414  001152  EE00  F080         	lfsr	0,__pdataBANK0
   415  001156  EE10 F00C          	lfsr	1,12
   416  00115A                     copy_data0:
   417  00115A  0009               	tblrd		*+
   418  00115C  CFF5 FFEE          	movff	tablat,postinc0
   419  001160  50E5               	movf	postdec1,w,c
   420  001162  50E1               	movf	fsr1l,w,c
   421  001164  E1FA               	bnz	copy_data0
   422                           
   423                           ; Initialize objects allocated to COMRAM (18 bytes)
   424                           ; load TBLPTR registers with __pidataCOMRAM
   425  001166  0E88               	movlw	low __pidataCOMRAM
   426  001168  6EF6               	movwf	tblptrl,c
   427  00116A  0E16               	movlw	high __pidataCOMRAM
   428  00116C  6EF7               	movwf	tblptrh,c
   429  00116E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   430  001170  6EF8               	movwf	tblptru,c
   431  001172  EE00  F055         	lfsr	0,__pdataCOMRAM
   432  001176  EE10 F012          	lfsr	1,18
   433  00117A                     copy_data1:
   434  00117A  0009               	tblrd		*+
   435  00117C  CFF5 FFEE          	movff	tablat,postinc0
   436  001180  50E5               	movf	postdec1,w,c
   437  001182  50E1               	movf	fsr1l,w,c
   438  001184  E1FA               	bnz	copy_data1
   439                           
   440                           ; Clear objects allocated to BANK1 (184 bytes)
   441  001186  EE01  F000         	lfsr	0,__pbssBANK1
   442  00118A  0EB8               	movlw	184
   443  00118C                     clear_0:
   444  00118C  6AEE               	clrf	postinc0,c
   445  00118E  06E8               	decf	wreg,f,c
   446  001190  E1FD               	bnz	clear_0
   447                           
   448                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   449  001192  6A79               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   450                           
   451                           ; Clear objects allocated to COMRAM (84 bytes)
   452  001194  EE00  F001         	lfsr	0,__pbssCOMRAM
   453  001198  0E54               	movlw	84
   454  00119A                     clear_1:
   455  00119A  6AEE               	clrf	postinc0,c
   456  00119C  06E8               	decf	wreg,f,c
   457  00119E  E1FD               	bnz	clear_1
   458  0011A0                     end_of_initialization:
   459                           	callstack 0
   460  0011A0                     __end_of__initialization:
   461                           	callstack 0
   462  0011A0  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   463  0011A2  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   464  0011A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   465  0011A6  6EF8               	movwf	tblptru,c
   466  0011A8  0100               	movlb	0
   467  0011AA  EFC4  F009         	goto	_main	;jump to C main() function
   468                           
   469                           	psect	bitbssCOMRAM
   470  0003C8                     __pbitbssCOMRAM:
   471                           	callstack 0
   472  0003C8                     _newString:
   473                           	callstack 0
   474  0003C8                     	ds	1
   475  0003C9                     _ferMenu:
   476                           	callstack 0
   477  0003C9                     	ds	1
   478  0003CA                     _reproduir:
   479                           	callstack 0
   480  0003CA                     	ds	1
   481  0003CB                     _do_register:
   482                           	callstack 0
   483  0003CB                     	ds	1
   484  0003CC                     _do_check_exists:
   485                           	callstack 0
   486  0003CC                     	ds	1
   487  0003CD                     _loginNOTRegister:
   488                           	callstack 0
   489  0003CD                     	ds	1
   490  0003CE                     _setSMSon:
   491                           	callstack 0
   492  0003CE                     	ds	1
   493  0003CF                     _nou_s:
   494                           	callstack 0
   495  0003CF                     	ds	1
   496                           
   497                           	psect	bssCOMRAM
   498  000001                     __pbssCOMRAM:
   499                           	callstack 0
   500  000001                     _s_Timers:
   501                           	callstack 0
   502  000001                     	ds	24
   503  000019                     _tmpPassword:
   504                           	callstack 0
   505  000019                     	ds	9
   506  000022                     _h_Tics:
   507                           	callstack 0
   508  000022                     	ds	2
   509  000024                     _s_ptr:
   510                           	callstack 0
   511  000024                     	ds	2
   512  000026                     GLCDMotor@length2:
   513                           	callstack 0
   514  000026                     	ds	1
   515  000027                     GLCDMotor@length1:
   516                           	callstack 0
   517  000027                     	ds	1
   518  000028                     GLCDMotor@k2:
   519                           	callstack 0
   520  000028                     	ds	1
   521  000029                     GLCDMotor@k1:
   522                           	callstack 0
   523  000029                     	ds	1
   524  00002A                     GLCDMotor@min2:
   525                           	callstack 0
   526  00002A                     	ds	1
   527  00002B                     GLCDMotor@min1:
   528                           	callstack 0
   529  00002B                     	ds	1
   530  00002C                     GLCDMotor@j:
   531                           	callstack 0
   532  00002C                     	ds	1
   533  00002D                     GLCDMotor@state:
   534                           	callstack 0
   535  00002D                     	ds	1
   536  00002E                     _menuDaltGLCD:
   537                           	callstack 0
   538  00002E                     	ds	1
   539  00002F                     _timerGLCD:
   540                           	callstack 0
   541  00002F                     	ds	1
   542  000030                     motorAltaveu@state:
   543                           	callstack 0
   544  000030                     	ds	1
   545  000031                     _copsNota:
   546                           	callstack 0
   547  000031                     	ds	1
   548  000032                     _timerAltaveu:
   549                           	callstack 0
   550  000032                     	ds	1
   551  000033                     _nota:
   552                           	callstack 0
   553  000033                     	ds	1
   554  000034                     UmotorUsers@state:
   555                           	callstack 0
   556  000034                     	ds	1
   557  000035                     _j:
   558                           	callstack 0
   559  000035                     	ds	1
   560  000036                     _i:
   561                           	callstack 0
   562  000036                     	ds	1
   563  000037                     _indexNextUserStruct:
   564                           	callstack 0
   565  000037                     	ds	1
   566  000038                     _indexNextUser:
   567                           	callstack 0
   568  000038                     	ds	1
   569  000039                     _numUsuaris:
   570                           	callstack 0
   571  000039                     	ds	1
   572  00003A                     _currentUsrIndex:
   573                           	callstack 0
   574  00003A                     	ds	1
   575  00003B                     menu@state:
   576                           	callstack 0
   577  00003B                     	ds	1
   578  00003C                     _indexUsuari:
   579                           	callstack 0
   580  00003C                     	ds	1
   581  00003D                     _menuDalt:
   582                           	callstack 0
   583  00003D                     	ds	1
   584  00003E                     _timerMenu:
   585                           	callstack 0
   586  00003E                     	ds	1
   587  00003F                     _tmp:
   588                           	callstack 0
   589  00003F                     	ds	1
   590  000040                     _counter:
   591                           	callstack 0
   592  000040                     	ds	1
   593  000041                     TeTeclat@files:
   594                           	callstack 0
   595  000041                     	ds	1
   596  000042                     TeTeclat@cols:
   597                           	callstack 0
   598  000042                     	ds	1
   599  000043                     TeTeclat@state:
   600                           	callstack 0
   601  000043                     	ds	1
   602  000044                     _tiTeclat:
   603                           	callstack 0
   604  000044                     	ds	1
   605  000045                     SMotor@state:
   606                           	callstack 0
   607  000045                     	ds	1
   608  000046                     _sumaPulsacions:
   609                           	callstack 0
   610  000046                     	ds	1
   611  000047                     _Timer:
   612                           	callstack 0
   613  000047                     	ds	1
   614  000048                     _ColumnAct:
   615                           	callstack 0
   616  000048                     	ds	1
   617  000049                     _RowAct:
   618                           	callstack 0
   619  000049                     	ds	1
   620  00004A                     _Columns:
   621                           	callstack 0
   622  00004A                     	ds	1
   623  00004B                     _Rows:
   624                           	callstack 0
   625  00004B                     	ds	1
   626  00004C                     _tmpUsername:
   627                           	callstack 0
   628  00004C                     	ds	9
   629                           
   630                           	psect	dataCOMRAM
   631  000055                     __pdataCOMRAM:
   632                           	callstack 0
   633  000055                     _lletraInici:
   634                           	callstack 0
   635  000055                     	ds	9
   636  00005E                     GLCDMotor@max2:
   637                           	callstack 0
   638  00005E                     	ds	1
   639  00005F                     GLCDMotor@max1:
   640                           	callstack 0
   641  00005F                     	ds	1
   642  000060                     _usuariLoguejat:
   643                           	callstack 0
   644  000060                     	ds	1
   645  000061                     _novaLletra:
   646                           	callstack 0
   647  000061                     	ds	1
   648  000062                     _NovaTecla:
   649                           	callstack 0
   650  000062                     	ds	1
   651  000063                     _ultimaTecla:
   652                           	callstack 0
   653  000063                     	ds	1
   654  000064                     _timerSMS:
   655                           	callstack 0
   656  000064                     	ds	1
   657  000065                     _novaTecla:
   658                           	callstack 0
   659  000065                     	ds	1
   660  000066                     _lletraASCII:
   661                           	callstack 0
   662  000066                     	ds	1
   663                           
   664                           	psect	dataBANK0
   665  000080                     __pdataBANK0:
   666                           	callstack 0
   667  000080                     _teclaPremuda:
   668                           	callstack 0
   669  000080                     	ds	12
   670                           
   671                           	psect	bssBANK1
   672  000100                     __pbssBANK1:
   673                           	callstack 0
   674  000100                     _usuaris:
   675                           	callstack 0
   676  000100                     	ds	184
   677                           
   678                           	psect	cstackBANK0
   679  00008C                     __pcstackBANK0:
   680                           	callstack 0
   681  00008C                     LcInit@rows:
   682                           	callstack 0
   683  00008C                     LcGotoXY@Fisics:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x0
   687  00008C                     	ds	1
   688  00008D                     LcInit@i:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x1
   692  00008D                     	ds	1
   693  00008E                     _LcGotoXY$342:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697  00008E                     	ds	2
   698  000090                     LcGotoXY@Column:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x4
   702  000090                     	ds	1
   703                           
   704                           	psect	cstackCOMRAM
   705  000067                     __pcstackCOMRAM:
   706                           	callstack 0
   707  000067                     
   708                           ; 1 bytes @ 0x0
   709  000067                     	ds	1
   710  000068                     ??_high_rsi:
   711                           
   712                           ; 1 bytes @ 0x1
   713  000068                     	ds	4
   714  00006C                     ??_EscriuPrimeraOrdre:
   715  00006C                     ??_Uinit:
   716  00006C                     ??_UcheckExistsGetError:
   717  00006C                     ??_CantaPartAlta:
   718  00006C                     ??_CantaPartBaixa:
   719  00006C                     ?_TiGetTics:
   720                           	callstack 0
   721  00006C                     ?_UgetUserName:
   722                           	callstack 0
   723  00006C                     SsetNovaTecla@tecla:
   724                           	callstack 0
   725  00006C                     TiResetTics@Handle:
   726                           	callstack 0
   727  00006C                     MsetNovaTecla@tecla:
   728                           	callstack 0
   729  00006C                     MNovaLletra@lletra:
   730                           	callstack 0
   731  00006C                     UenviaChar@pos:
   732                           	callstack 0
   733  00006C                     UenviaPas@pos:
   734                           	callstack 0
   735  00006C                     escriureCharEEPROM@pos:
   736                           	callstack 0
   737  00006C                     compareStrings@a:
   738                           	callstack 0
   739  00006C                     escriureEEPROM@caca:
   740                           	callstack 0
   741  00006C                     GLCDMostraMenu@num:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x5
   745  00006C                     	ds	1
   746  00006D                     CantaPartAlta@c:
   747                           	callstack 0
   748  00006D                     CantaPartBaixa@c:
   749                           	callstack 0
   750  00006D                     EscriuPrimeraOrdre@ordre:
   751                           	callstack 0
   752  00006D                     UenviaChar@c:
   753                           	callstack 0
   754  00006D                     UenviaPas@c:
   755                           	callstack 0
   756  00006D                     escriureCharEEPROM@c:
   757                           	callstack 0
   758  00006D                     compareStrings@b:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x6
   762  00006D                     	ds	1
   763  00006E                     ??_TiGetTics:
   764  00006E                     CantaIR@IR:
   765                           	callstack 0
   766  00006E                     CantaData@Data:
   767                           	callstack 0
   768  00006E                     UgetUserName@quin:
   769                           	callstack 0
   770  00006E                     Uinit@i:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x7
   774  00006E                     	ds	1
   775  00006F                     ??_compareStrings:
   776  00006F                     Uinit@j:
   777                           	callstack 0
   778  00006F                     LcNewString@new_s:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x8
   782  00006F                     	ds	1
   783  000070                     TiGetTics@Handle:
   784                           	callstack 0
   785  000070                     Uinit@j_1056:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x9
   789  000070                     	ds	1
   790  000071                     ??_UmotorUsers:
   791  000071                     TiGetTics@actual:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0xA
   795  000071                     	ds	2
   796  000073                     ??_SMotor:
   797  000073                     ??_motorAltaveu:
   798  000073                     ??_TeTeclat:
   799  000073                     WaitForBusy@Busy:
   800                           	callstack 0
   801  000073                     Espera@ms:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xC
   805  000073                     	ds	1
   806  000074                     LcGotoXY@Row:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0xD
   810  000074                     	ds	1
   811  000075                     ??_Espera:
   812  000075                     LcPutChar@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0xE
   816  000075                     	ds	1
   817  000076                     Espera@Timer:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xF
   821  000076                     	ds	1
   822  000077                     ??_menu:
   823  000077                     ??_GLCDMotor:
   824  000077                     LcInit@columns:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x10
   828  000077                     	ds	1
   829  000078                     
   830                           ; 1 bytes @ 0x11
   831  000078                     	ds	1
   832  000079                     
   833                           ; 1 bytes @ 0x12
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 71 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1
   853 ;;      Params:         0       0       0
   854 ;;      Locals:         0       0       0
   855 ;;      Temps:          0       0       0
   856 ;;      Totals:         0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels required when called: 7
   859 ;; This function calls:
   860 ;;		_GLCDInit
   861 ;;		_GLCDMotor
   862 ;;		_LcInit
   863 ;;		_LcLCD
   864 ;;		_Minit
   865 ;;		_SMotor
   866 ;;		_Sinit
   867 ;;		_TeInit
   868 ;;		_TeTeclat
   869 ;;		_TiInitTimer
   870 ;;		_Uinit
   871 ;;		_UmotorUsers
   872 ;;		_escriureEEPROM
   873 ;;		_initAltaveu
   874 ;;		_init_ports
   875 ;;		_menu
   876 ;;		_motorAltaveu
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text0
   883  001388                     __ptext0:
   884                           	callstack 0
   885  001388                     _main:
   886                           	callstack 24
   887                           
   888                           ;main.c: 72:     init_ports();
   889                           
   890                           ;incstack = 0
   891  001388  EC1E  F00B         	call	_init_ports	;wreg free
   892                           
   893                           ;main.c: 73:     escriureEEPROM();
   894  00138C  ECBB  F00A         	call	_escriureEEPROM	;wreg free
   895                           
   896                           ;main.c: 74:     TiInitTimer();
   897  001390  EC6D  F00A         	call	_TiInitTimer	;wreg free
   898                           
   899                           ;main.c: 75:     TeInit();
   900  001394  EC91  F00B         	call	_TeInit	;wreg free
   901                           
   902                           ;main.c: 76:     Sinit();
   903  001398  EC95  F00B         	call	_Sinit	;wreg free
   904                           
   905                           ;main.c: 77:     SMotor();
   906  00139C  ECC8  F004         	call	_SMotor	;wreg free
   907                           
   908                           ;main.c: 78:     Uinit();
   909  0013A0  EC0C  F008         	call	_Uinit	;wreg free
   910                           
   911                           ;main.c: 79:     initAltaveu();
   912  0013A4  EC85  F00B         	call	_initAltaveu	;wreg free
   913                           
   914                           ;main.c: 80:     GLCDInit();
   915  0013A8  ECA1  F00B         	call	_GLCDInit	;wreg free
   916                           
   917                           ;main.c: 82:     LcInit(2,16);
   918  0013AC  0E10               	movlw	16
   919  0013AE  6E77               	movwf	LcInit@columns^0,c
   920  0013B0  0E02               	movlw	2
   921  0013B2  EC41  F007         	call	_LcInit
   922                           
   923                           ;main.c: 83:     Minit();
   924  0013B6  EC9D  F00B         	call	_Minit	;wreg free
   925  0013BA                     l4872:
   926                           
   927                           ;main.c: 88:         menu();
   928  0013BA  EC44  F003         	call	_menu	;wreg free
   929                           
   930                           ;main.c: 89:         motorAltaveu();
   931  0013BE  ECB1  F007         	call	_motorAltaveu	;wreg free
   932                           
   933                           ;main.c: 90:         UmotorUsers();
   934  0013C2  ECD4  F005         	call	_UmotorUsers	;wreg free
   935                           
   936                           ;main.c: 91:         GLCDMotor();
   937  0013C6  EC5F  F001         	call	_GLCDMotor	;wreg free
   938                           
   939                           ;main.c: 92:         TeTeclat();
   940  0013CA  EC8F  F006         	call	_TeTeclat	;wreg free
   941                           
   942                           ;main.c: 93:         SMotor();
   943  0013CE  ECC8  F004         	call	_SMotor	;wreg free
   944                           
   945                           ;main.c: 94:         LcLCD();
   946  0013D2  EC3F  F009         	call	_LcLCD	;wreg free
   947  0013D6  D7F1               	goto	l4872
   948  0013D8                     __end_of_main:
   949                           	callstack 0
   950                           
   951 ;; *************** function _motorAltaveu *****************
   952 ;; Defined at:
   953 ;;		line 17 in file "Altaveu.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1
   967 ;;      Params:         0       0       0
   968 ;;      Locals:         0       0       0
   969 ;;      Temps:          3       0       0
   970 ;;      Totals:         3       0       0
   971 ;;Total ram usage:        3 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; Hardware stack levels required when called: 3
   974 ;; This function calls:
   975 ;;		_TiGetTics
   976 ;;		_TiResetTics
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text1
   983  000F62                     __ptext1:
   984                           	callstack 0
   985  000F62                     _motorAltaveu:
   986                           	callstack 27
   987                           
   988                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
   989                           
   990                           ;incstack = 0
   991  000F62  D048               	goto	l4568
   992  000F64                     l665:
   993                           
   994                           ;Altaveu.c: 22:    if (reproduir) {
   995  000F64  A479               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   996  000F66  0012               	return	
   997                           
   998                           ;Altaveu.c: 23:     nota = 1;
   999  000F68  0E01               	movlw	1
  1000  000F6A  6E33               	movwf	_nota^0,c
  1001                           
  1002                           ;Altaveu.c: 24:     copsNota = 0;
  1003  000F6C  0E00               	movlw	0
  1004  000F6E  6E31               	movwf	_copsNota^0,c
  1005                           
  1006                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  1007  000F70  5032               	movf	_timerAltaveu^0,w,c
  1008  000F72  EC2E  F00B         	call	_TiResetTics
  1009  000F76                     l4532:
  1010                           
  1011                           ;Altaveu.c: 26:     state = 1;
  1012  000F76  0E01               	movlw	1
  1013  000F78  6E30               	movwf	motorAltaveu@state^0,c
  1014  000F7A  0012               	return	
  1015  000F7C                     l4534:
  1016                           
  1017                           ;Altaveu.c: 30:    if (nota > 5) {
  1018  000F7C  0E05               	movlw	5
  1019  000F7E  6433               	cpfsgt	_nota^0,c
  1020  000F80  D004               	goto	l4540
  1021                           
  1022                           ;Altaveu.c: 31:     reproduir = 0;
  1023  000F82  9479               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1024                           
  1025                           ;Altaveu.c: 32:     state = 0;
  1026  000F84  0E00               	movlw	0
  1027  000F86  6E30               	movwf	motorAltaveu@state^0,c
  1028                           
  1029                           ;Altaveu.c: 33:    }
  1030  000F88  0012               	return	
  1031  000F8A                     l4540:
  1032  000F8A  0EA8               	movlw	168
  1033  000F8C  1831               	xorwf	_copsNota^0,w,c
  1034  000F8E  A4D8               	btfss	status,2,c
  1035  000F90  D004               	goto	l4548
  1036                           
  1037                           ;Altaveu.c: 35:     nota++;
  1038  000F92  2A33               	incf	_nota^0,f,c
  1039                           
  1040                           ;Altaveu.c: 36:     copsNota = 0;
  1041  000F94  0E00               	movlw	0
  1042  000F96  6E31               	movwf	_copsNota^0,c
  1043  000F98  D7EE               	goto	l4532
  1044  000F9A                     l4548:
  1045  000F9A  5032               	movf	_timerAltaveu^0,w,c
  1046  000F9C  ECD2  F00A         	call	_TiGetTics
  1047  000FA0  5033               	movf	_nota^0,w,c
  1048  000FA2  6E73               	movwf	??_motorAltaveu^0,c
  1049  000FA4  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1050  000FA6  506C               	movf	?_TiGetTics^0,w,c
  1051  000FA8  5C73               	subwf	??_motorAltaveu^0,w,c
  1052  000FAA  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1053  000FAC  0A80               	xorlw	128
  1054  000FAE  6E75               	movwf	(??_motorAltaveu+2)^0,c
  1055  000FB0  506D               	movf	(?_TiGetTics+1)^0,w,c
  1056  000FB2  0A80               	xorlw	128
  1057  000FB4  5875               	subwfb	(??_motorAltaveu+2)^0,w,c
  1058  000FB6  B0D8               	btfsc	status,0,c
  1059  000FB8  0012               	return	
  1060                           
  1061                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1062  000FBA  808A               	bsf	138,0,c	;volatile
  1063                           
  1064                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1065  000FBC  5032               	movf	_timerAltaveu^0,w,c
  1066  000FBE  EC2E  F00B         	call	_TiResetTics
  1067                           
  1068                           ;Altaveu.c: 42:     state = 2;
  1069  000FC2  0E02               	movlw	2
  1070  000FC4  6E30               	movwf	motorAltaveu@state^0,c
  1071  000FC6  0012               	return	
  1072  000FC8                     l4556:
  1073                           
  1074                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1075  000FC8  5032               	movf	_timerAltaveu^0,w,c
  1076  000FCA  ECD2  F00A         	call	_TiGetTics
  1077  000FCE  5033               	movf	_nota^0,w,c
  1078  000FD0  6E73               	movwf	??_motorAltaveu^0,c
  1079  000FD2  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1080  000FD4  506C               	movf	?_TiGetTics^0,w,c
  1081  000FD6  5C73               	subwf	??_motorAltaveu^0,w,c
  1082  000FD8  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1083  000FDA  0A80               	xorlw	128
  1084  000FDC  6E75               	movwf	(??_motorAltaveu+2)^0,c
  1085  000FDE  506D               	movf	(?_TiGetTics+1)^0,w,c
  1086  000FE0  0A80               	xorlw	128
  1087  000FE2  5875               	subwfb	(??_motorAltaveu+2)^0,w,c
  1088  000FE4  B0D8               	btfsc	status,0,c
  1089  000FE6  0012               	return	
  1090                           
  1091                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1092  000FE8  908A               	bcf	138,0,c	;volatile
  1093                           
  1094                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1095  000FEA  5032               	movf	_timerAltaveu^0,w,c
  1096  000FEC  EC2E  F00B         	call	_TiResetTics
  1097                           
  1098                           ;Altaveu.c: 49:     copsNota++;
  1099  000FF0  2A31               	incf	_copsNota^0,f,c
  1100  000FF2  D7C1               	goto	l4532
  1101  000FF4                     l4568:
  1102  000FF4  5030               	movf	motorAltaveu@state^0,w,c
  1103  000FF6  6E73               	movwf	??_motorAltaveu^0,c
  1104  000FF8  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1105                           
  1106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1107                           ; Switch size 1, requested type "simple"
  1108                           ; Number of cases is 1, Range of values is 0 to 0
  1109                           ; switch strategies available:
  1110                           ; Name         Instructions Cycles
  1111                           ; simple_byte            4     3 (average)
  1112                           ;	Chosen strategy is simple_byte
  1113  000FFA  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1114  000FFC  0A00               	xorlw	0	; case 0
  1115  000FFE  A4D8               	btfss	status,2,c
  1116  001000  0012               	return	
  1117                           
  1118                           ; Switch size 1, requested type "simple"
  1119                           ; Number of cases is 3, Range of values is 0 to 2
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte           10     6 (average)
  1123                           ;	Chosen strategy is simple_byte
  1124  001002  5073               	movf	??_motorAltaveu^0,w,c
  1125  001004  0A00               	xorlw	0	; case 0
  1126  001006  B4D8               	btfsc	status,2,c
  1127  001008  D7AD               	goto	l665
  1128  00100A  0A01               	xorlw	1	; case 1
  1129  00100C  B4D8               	btfsc	status,2,c
  1130  00100E  D7B6               	goto	l4534
  1131  001010  0A03               	xorlw	3	; case 2
  1132  001012  A4D8               	btfss	status,2,c
  1133  001014  0012               	return	
  1134  001016  D7D8               	goto	l4556
  1135  001018                     __end_of_motorAltaveu:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _menu *****************
  1139 ;; Defined at:
  1140 ;;		line 28 in file "Menu.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1
  1154 ;;      Params:         0       0       0
  1155 ;;      Locals:         0       0       0
  1156 ;;      Temps:          2       0       0
  1157 ;;      Totals:         2       0       0
  1158 ;;Total ram usage:        2 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 6
  1161 ;; This function calls:
  1162 ;;		_GLCDMostraMenu
  1163 ;;		_LcClear
  1164 ;;		_LcGotoXY
  1165 ;;		_LcLliure
  1166 ;;		_LcNewString
  1167 ;;		_LcPutChar
  1168 ;;		_NoFerMenu
  1169 ;;		_SMSoff
  1170 ;;		_SMSon
  1171 ;;		_SiFerMenu
  1172 ;;		_TiGetTics
  1173 ;;		_TiResetTics
  1174 ;;		_URegister
  1175 ;;		_UcheckExists
  1176 ;;		_UcheckExistsGetError
  1177 ;;		_UcheckExistsNotFinished
  1178 ;;		_UenviaChar
  1179 ;;		_UenviaPas
  1180 ;;		_UgetNumUsuaris
  1181 ;;		_UgetUserName
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text2
  1188  000688                     __ptext2:
  1189                           	callstack 0
  1190  000688                     _menu:
  1191                           	callstack 24
  1192                           
  1193                           ;Menu.c: 29:  static char state = 0;;Menu.c: 31:  switch(state) {
  1194                           
  1195                           ;incstack = 0
  1196  000688  D14A               	goto	l4520
  1197  00068A                     l4302:
  1198                           
  1199                           ;Menu.c: 33:    LcClear();
  1200  00068A  ECFA  F00A         	call	_LcClear	;wreg free
  1201                           
  1202                           ;Menu.c: 34:    LcNewString("1.LOGIN");
  1203  00068E  0EA6               	movlw	low STR_1
  1204  000690  6E6F               	movwf	LcNewString@new_s^0,c
  1205  000692  506F               	movf	LcNewString@new_s^0,w,c
  1206  000694  A4D8               	btfss	status,2,c
  1207  000696  0E02               	movlw	high __smallconst
  1208  000698  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1209  00069A  EC75  F00B         	call	_LcNewString	;wreg free
  1210                           
  1211                           ;Menu.c: 35:    state = 1;
  1212  00069E  0E01               	movlw	1
  1213  0006A0  6E3B               	movwf	menu@state^0,c
  1214                           
  1215                           ;Menu.c: 36:   break;
  1216  0006A2  0012               	return	
  1217  0006A4                     l4308:
  1218                           
  1219                           ;Menu.c: 38:    if (LcLliure()) {
  1220  0006A4  EC7B  F00B         	call	_LcLliure	;wreg free
  1221  0006A8  A0D8               	btfss	status,0,c
  1222  0006AA  0012               	return	
  1223                           
  1224                           ;Menu.c: 39:     LcGotoXY(0,1);
  1225  0006AC  0E01               	movlw	1
  1226  0006AE  6E74               	movwf	LcGotoXY@Row^0,c
  1227  0006B0  0E00               	movlw	0
  1228  0006B2  EC0F  F00A         	call	_LcGotoXY
  1229                           
  1230                           ;Menu.c: 40:     LcNewString("2.REGISTER");
  1231  0006B6  0E92               	movlw	low STR_2
  1232  0006B8  6E6F               	movwf	LcNewString@new_s^0,c
  1233  0006BA  506F               	movf	LcNewString@new_s^0,w,c
  1234  0006BC  A4D8               	btfss	status,2,c
  1235  0006BE  0E02               	movlw	high __smallconst
  1236  0006C0  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1237  0006C2  EC75  F00B         	call	_LcNewString	;wreg free
  1238                           
  1239                           ;Menu.c: 41:     NovaTecla = -1;
  1240  0006C6  6862               	setf	_NovaTecla^0,c
  1241                           
  1242                           ;Menu.c: 42:     state = 2;
  1243  0006C8  0E02               	movlw	2
  1244  0006CA  6E3B               	movwf	menu@state^0,c
  1245  0006CC  0012               	return	
  1246  0006CE                     l4318:
  1247                           
  1248                           ;Menu.c: 46:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1249  0006CE  0462               	decf	_NovaTecla^0,w,c
  1250  0006D0  A4D8               	btfss	status,2,c
  1251  0006D2  D009               	goto	l4326
  1252  0006D4  ECAB  F00B         	call	_UgetNumUsuaris	;wreg free
  1253  0006D8  0900               	iorlw	0
  1254  0006DA  B4D8               	btfsc	status,2,c
  1255  0006DC  D004               	goto	l4326
  1256                           
  1257                           ;Menu.c: 47:     loginNOTRegister = 1;
  1258  0006DE  8A79               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1259  0006E0                     l4324:
  1260                           
  1261                           ;Menu.c: 48:     state = 3;
  1262  0006E0  0E03               	movlw	3
  1263  0006E2  6E3B               	movwf	menu@state^0,c
  1264                           
  1265                           ;Menu.c: 49:    }
  1266  0006E4  0012               	return	
  1267  0006E6                     l4326:
  1268  0006E6  0E02               	movlw	2
  1269  0006E8  1862               	xorwf	_NovaTecla^0,w,c
  1270  0006EA  A4D8               	btfss	status,2,c
  1271  0006EC  0012               	return	
  1272                           
  1273                           ;Menu.c: 51:     loginNOTRegister = 0;
  1274  0006EE  9A79               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1275  0006F0  D7F7               	goto	l4324
  1276  0006F2                     l451:
  1277                           
  1278                           ;Menu.c: 56:    NovaTecla = -1;
  1279  0006F2  6862               	setf	_NovaTecla^0,c
  1280                           
  1281                           ;Menu.c: 57:    novaLletra = -1;
  1282  0006F4  6861               	setf	_novaLletra^0,c
  1283                           
  1284                           ;Menu.c: 58:    LcClear();
  1285  0006F6  ECFA  F00A         	call	_LcClear	;wreg free
  1286                           
  1287                           ;Menu.c: 59:    LcNewString("USER: ");
  1288  0006FA  0EB5               	movlw	low STR_3
  1289  0006FC  6E6F               	movwf	LcNewString@new_s^0,c
  1290  0006FE  506F               	movf	LcNewString@new_s^0,w,c
  1291  000700  A4D8               	btfss	status,2,c
  1292  000702  0E02               	movlw	high __smallconst
  1293  000704  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1294  000706  EC75  F00B         	call	_LcNewString	;wreg free
  1295                           
  1296                           ;Menu.c: 60:    state = 4;
  1297  00070A  0E04               	movlw	4
  1298  00070C  6E3B               	movwf	menu@state^0,c
  1299                           
  1300                           ;Menu.c: 61:   break;
  1301  00070E  0012               	return	
  1302  000710                     l4338:
  1303                           
  1304                           ;Menu.c: 63:    if (LcLliure()) {
  1305  000710  EC7B  F00B         	call	_LcLliure	;wreg free
  1306  000714  A0D8               	btfss	status,0,c
  1307  000716  0012               	return	
  1308                           
  1309                           ;Menu.c: 64:     LcGotoXY(0,1);
  1310  000718  0E01               	movlw	1
  1311  00071A  6E74               	movwf	LcGotoXY@Row^0,c
  1312  00071C  0E00               	movlw	0
  1313  00071E  EC0F  F00A         	call	_LcGotoXY
  1314                           
  1315                           ;Menu.c: 65:     LcNewString("PSWD: ");
  1316  000722  0EAE               	movlw	low STR_4
  1317  000724  6E6F               	movwf	LcNewString@new_s^0,c
  1318  000726  506F               	movf	LcNewString@new_s^0,w,c
  1319  000728  A4D8               	btfss	status,2,c
  1320  00072A  0E02               	movlw	high __smallconst
  1321  00072C  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1322  00072E  EC75  F00B         	call	_LcNewString	;wreg free
  1323                           
  1324                           ;Menu.c: 66:     state = 5;
  1325  000732  0E05               	movlw	5
  1326  000734  6E3B               	movwf	menu@state^0,c
  1327  000736  0012               	return	
  1328  000738                     l4346:
  1329                           
  1330                           ;Menu.c: 70:    if (LcLliure()) {
  1331  000738  EC7B  F00B         	call	_LcLliure	;wreg free
  1332  00073C  A0D8               	btfss	status,0,c
  1333  00073E  0012               	return	
  1334                           
  1335                           ;Menu.c: 71:     LcGotoXY(6,0);
  1336  000740  0E00               	movlw	0
  1337  000742  6E74               	movwf	LcGotoXY@Row^0,c
  1338  000744  0E06               	movlw	6
  1339  000746  EC0F  F00A         	call	_LcGotoXY
  1340                           
  1341                           ;Menu.c: 72:     SMSon();
  1342  00074A  ECA5  F00B         	call	_SMSon	;wreg free
  1343                           
  1344                           ;Menu.c: 73:     tmp =0;
  1345  00074E  0E00               	movlw	0
  1346  000750  6E3F               	movwf	_tmp^0,c
  1347  000752                     l4354:
  1348                           
  1349                           ;Menu.c: 74:     state = 6;
  1350  000752  0E06               	movlw	6
  1351  000754  6E3B               	movwf	menu@state^0,c
  1352  000756  0012               	return	
  1353  000758                     l4356:
  1354                           
  1355                           ;Menu.c: 78:    if (novaLletra > 47 && NovaTecla != 10) {
  1356  000758  5061               	movf	_novaLletra^0,w,c
  1357  00075A  0A80               	xorlw	128
  1358  00075C  0F50               	addlw	-176
  1359  00075E  A0D8               	btfss	status,0,c
  1360  000760  D00F               	goto	l4366
  1361  000762  0E0A               	movlw	10
  1362  000764  1862               	xorwf	_NovaTecla^0,w,c
  1363  000766  B4D8               	btfsc	status,2,c
  1364  000768  D00B               	goto	l4366
  1365                           
  1366                           ;Menu.c: 79:     LcPutChar(novaLletra);
  1367  00076A  5061               	movf	_novaLletra^0,w,c
  1368  00076C  EC9B  F009         	call	_LcPutChar
  1369                           
  1370                           ;Menu.c: 80:     UenviaChar(novaLletra,tmp);
  1371  000770  C03F  F06C         	movff	_tmp,UenviaChar@pos
  1372  000774  5061               	movf	_novaLletra^0,w,c
  1373  000776  EC55  F00B         	call	_UenviaChar
  1374  00077A                     l4364:
  1375                           
  1376                           ;Menu.c: 81:     state = 7;
  1377  00077A  0E07               	movlw	7
  1378  00077C  6E3B               	movwf	menu@state^0,c
  1379                           
  1380                           ;Menu.c: 82:    }
  1381  00077E  0012               	return	
  1382  000780                     l4366:
  1383  000780  0E0B               	movlw	11
  1384  000782  1862               	xorwf	_NovaTecla^0,w,c
  1385  000784  A4D8               	btfss	status,2,c
  1386  000786  0012               	return	
  1387  000788  D7F8               	goto	l4364
  1388  00078A                     l4370:
  1389                           
  1390                           ;Menu.c: 88:    if (tmp != 7 && NovaTecla != 11) {
  1391  00078A  0E07               	movlw	7
  1392  00078C  183F               	xorwf	_tmp^0,w,c
  1393  00078E  B4D8               	btfsc	status,2,c
  1394  000790  D008               	goto	l4382
  1395  000792  0E0B               	movlw	11
  1396  000794  1862               	xorwf	_NovaTecla^0,w,c
  1397  000796  B4D8               	btfsc	status,2,c
  1398  000798  D004               	goto	l4382
  1399                           
  1400                           ;Menu.c: 89:     tmp++;
  1401  00079A  2A3F               	incf	_tmp^0,f,c
  1402                           
  1403                           ;Menu.c: 90:     NovaTecla = -1;
  1404  00079C  6862               	setf	_NovaTecla^0,c
  1405                           
  1406                           ;Menu.c: 91:     novaLletra = -1;
  1407  00079E  6861               	setf	_novaLletra^0,c
  1408  0007A0  D7D8               	goto	l4354
  1409  0007A2                     l4382:
  1410  0007A2  0E07               	movlw	7
  1411  0007A4  183F               	xorwf	_tmp^0,w,c
  1412  0007A6  B4D8               	btfsc	status,2,c
  1413  0007A8  D004               	goto	u4640
  1414  0007AA  0E0B               	movlw	11
  1415  0007AC  1862               	xorwf	_NovaTecla^0,w,c
  1416  0007AE  A4D8               	btfss	status,2,c
  1417  0007B0  0012               	return	
  1418  0007B2                     u4640:
  1419                           
  1420                           ;Menu.c: 95:     LcGotoXY(6,1);
  1421  0007B2  0E01               	movlw	1
  1422  0007B4  6E74               	movwf	LcGotoXY@Row^0,c
  1423  0007B6  0E06               	movlw	6
  1424  0007B8  EC0F  F00A         	call	_LcGotoXY
  1425                           
  1426                           ;Menu.c: 96:     UenviaChar('\0',tmp);
  1427  0007BC  C03F  F06C         	movff	_tmp,UenviaChar@pos
  1428  0007C0  0E00               	movlw	0
  1429  0007C2  EC55  F00B         	call	_UenviaChar
  1430                           
  1431                           ;Menu.c: 97:     NovaTecla = -1;
  1432  0007C6  6862               	setf	_NovaTecla^0,c
  1433                           
  1434                           ;Menu.c: 98:     novaLletra = -1;
  1435  0007C8  6861               	setf	_novaLletra^0,c
  1436                           
  1437                           ;Menu.c: 99:     tmp = 0;
  1438  0007CA  0E00               	movlw	0
  1439  0007CC  6E3F               	movwf	_tmp^0,c
  1440  0007CE                     l4396:
  1441                           
  1442                           ;Menu.c: 100:     state = 8;
  1443  0007CE  0E08               	movlw	8
  1444  0007D0  6E3B               	movwf	menu@state^0,c
  1445  0007D2  0012               	return	
  1446  0007D4                     l4398:
  1447                           
  1448                           ;Menu.c: 104:    if (novaLletra > 47 && NovaTecla != 10) {
  1449  0007D4  5061               	movf	_novaLletra^0,w,c
  1450  0007D6  0A80               	xorlw	128
  1451  0007D8  0F50               	addlw	-176
  1452  0007DA  A0D8               	btfss	status,0,c
  1453  0007DC  D00F               	goto	l4408
  1454  0007DE  0E0A               	movlw	10
  1455  0007E0  1862               	xorwf	_NovaTecla^0,w,c
  1456  0007E2  B4D8               	btfsc	status,2,c
  1457  0007E4  D00B               	goto	l4408
  1458                           
  1459                           ;Menu.c: 105:     LcPutChar(novaLletra);
  1460  0007E6  5061               	movf	_novaLletra^0,w,c
  1461  0007E8  EC9B  F009         	call	_LcPutChar
  1462                           
  1463                           ;Menu.c: 106:     UenviaPas(novaLletra,tmp);
  1464  0007EC  C03F  F06C         	movff	_tmp,UenviaPas@pos
  1465  0007F0  5061               	movf	_novaLletra^0,w,c
  1466  0007F2  EC4D  F00B         	call	_UenviaPas
  1467  0007F6                     l4406:
  1468                           
  1469                           ;Menu.c: 107:     state = 9;
  1470  0007F6  0E09               	movlw	9
  1471  0007F8  6E3B               	movwf	menu@state^0,c
  1472                           
  1473                           ;Menu.c: 108:    }
  1474  0007FA  0012               	return	
  1475  0007FC                     l4408:
  1476  0007FC  0E0B               	movlw	11
  1477  0007FE  1862               	xorwf	_NovaTecla^0,w,c
  1478  000800  A4D8               	btfss	status,2,c
  1479  000802  0012               	return	
  1480  000804  D7F8               	goto	l4406
  1481  000806                     l4412:
  1482                           
  1483                           ;Menu.c: 114:    if (tmp != 7 && NovaTecla != 11) {
  1484  000806  0E07               	movlw	7
  1485  000808  183F               	xorwf	_tmp^0,w,c
  1486  00080A  B4D8               	btfsc	status,2,c
  1487  00080C  D008               	goto	l4424
  1488  00080E  0E0B               	movlw	11
  1489  000810  1862               	xorwf	_NovaTecla^0,w,c
  1490  000812  B4D8               	btfsc	status,2,c
  1491  000814  D004               	goto	l4424
  1492                           
  1493                           ;Menu.c: 115:     tmp++;
  1494  000816  2A3F               	incf	_tmp^0,f,c
  1495                           
  1496                           ;Menu.c: 116:     NovaTecla = -1;
  1497  000818  6862               	setf	_NovaTecla^0,c
  1498                           
  1499                           ;Menu.c: 117:     novaLletra = -1;
  1500  00081A  6861               	setf	_novaLletra^0,c
  1501  00081C  D7D8               	goto	l4396
  1502  00081E                     l4424:
  1503  00081E  0E07               	movlw	7
  1504  000820  183F               	xorwf	_tmp^0,w,c
  1505  000822  B4D8               	btfsc	status,2,c
  1506  000824  D004               	goto	u4710
  1507  000826  0E0B               	movlw	11
  1508  000828  1862               	xorwf	_NovaTecla^0,w,c
  1509  00082A  A4D8               	btfss	status,2,c
  1510  00082C  0012               	return	
  1511  00082E                     u4710:
  1512                           
  1513                           ;Menu.c: 121:     UenviaPas('\0',tmp);
  1514  00082E  C03F  F06C         	movff	_tmp,UenviaPas@pos
  1515  000832  0E00               	movlw	0
  1516  000834  EC4D  F00B         	call	_UenviaPas
  1517                           
  1518                           ;Menu.c: 122:     NovaTecla = -1;
  1519  000838  6862               	setf	_NovaTecla^0,c
  1520                           
  1521                           ;Menu.c: 123:     novaLletra = -1;
  1522  00083A  6861               	setf	_novaLletra^0,c
  1523                           
  1524                           ;Menu.c: 124:     tmp = 0;
  1525  00083C  0E00               	movlw	0
  1526  00083E  6E3F               	movwf	_tmp^0,c
  1527                           
  1528                           ;Menu.c: 125:     UcheckExists();
  1529  000840  ECAD  F00B         	call	_UcheckExists	;wreg free
  1530                           
  1531                           ;Menu.c: 126:     SMSoff();
  1532  000844  ECA8  F00B         	call	_SMSoff	;wreg free
  1533                           
  1534                           ;Menu.c: 127:     state = 10;
  1535  000848  0E0A               	movlw	10
  1536  00084A  6E3B               	movwf	menu@state^0,c
  1537  00084C  0012               	return	
  1538  00084E                     l4442:
  1539                           
  1540                           ;Menu.c: 131:    if (!UcheckExistsNotFinished()) {
  1541  00084E  EC63  F00B         	call	_UcheckExistsNotFinished	;wreg free
  1542  000852  B0D8               	btfsc	status,0,c
  1543  000854  0012               	return	
  1544                           
  1545                           ;Menu.c: 132:     indexUsuari = UcheckExistsGetError();
  1546  000856  EC81  F00B         	call	_UcheckExistsGetError	;wreg free
  1547  00085A  A0D8               	btfss	status,0,c
  1548  00085C  D002               	goto	u4730
  1549  00085E  0E01               	movlw	1
  1550  000860  D001               	goto	u4740
  1551  000862                     u4730:
  1552  000862  0E00               	movlw	0
  1553  000864                     u4740:
  1554  000864  6E3C               	movwf	_indexUsuari^0,c
  1555                           
  1556                           ;Menu.c: 133:     state = 11;
  1557  000866  0E0B               	movlw	11
  1558  000868  6E3B               	movwf	menu@state^0,c
  1559  00086A  0012               	return	
  1560  00086C                     l4448:
  1561                           
  1562                           ;Menu.c: 138:     state = 12;
  1563  00086C  0E0C               	movlw	12
  1564  00086E  6E3B               	movwf	menu@state^0,c
  1565                           
  1566                           ;Menu.c: 139:    }
  1567  000870  0012               	return	
  1568  000872                     l4466:
  1569                           
  1570                           ;Menu.c: 149:     state = 0;
  1571  000872  0E00               	movlw	0
  1572  000874  6E3B               	movwf	menu@state^0,c
  1573  000876  0012               	return	
  1574  000878                     l4468:
  1575                           
  1576                           ;Menu.c: 154:    LcClear();
  1577  000878  ECFA  F00A         	call	_LcClear	;wreg free
  1578                           
  1579                           ;Menu.c: 155:    SiFerMenu();
  1580  00087C  ECB1  F00B         	call	_SiFerMenu	;wreg free
  1581                           
  1582                           ;Menu.c: 156:    GLCDMostraMenu(menuDalt);
  1583  000880  503D               	movf	_menuDalt^0,w,c
  1584  000882  EC69  F00B         	call	_GLCDMostraMenu
  1585                           
  1586                           ;Menu.c: 157:    NovaTecla = -1;
  1587  000886  6862               	setf	_NovaTecla^0,c
  1588                           
  1589                           ;Menu.c: 158:    state = 13;
  1590  000888  0E0D               	movlw	13
  1591  00088A  6E3B               	movwf	menu@state^0,c
  1592                           
  1593                           ;Menu.c: 159:   break;
  1594  00088C  0012               	return	
  1595  00088E                     l4478:
  1596                           
  1597                           ;Menu.c: 161:    if (NovaTecla == 8) {
  1598  00088E  0E08               	movlw	8
  1599  000890  1862               	xorwf	_NovaTecla^0,w,c
  1600  000892  A4D8               	btfss	status,2,c
  1601  000894  D005               	goto	l4486
  1602                           
  1603                           ;Menu.c: 162:     if(menuDalt < 4) menuDalt++;
  1604  000896  0E04               	movlw	4
  1605  000898  603D               	cpfslt	_menuDalt^0,c
  1606  00089A  D7E8               	goto	l4448
  1607  00089C  2A3D               	incf	_menuDalt^0,f,c
  1608  00089E  D7E6               	goto	l4448
  1609  0008A0                     l4486:
  1610  0008A0  0E02               	movlw	2
  1611  0008A2  1862               	xorwf	_NovaTecla^0,w,c
  1612  0008A4  A4D8               	btfss	status,2,c
  1613  0008A6  D005               	goto	l4494
  1614                           
  1615                           ;Menu.c: 166:     if(menuDalt > 0) menuDalt--;
  1616  0008A8  503D               	movf	_menuDalt^0,w,c
  1617  0008AA  B4D8               	btfsc	status,2,c
  1618  0008AC  D7DF               	goto	l4448
  1619  0008AE  063D               	decf	_menuDalt^0,f,c
  1620  0008B0  D7DD               	goto	l4448
  1621  0008B2                     l4494:
  1622  0008B2  0E0B               	movlw	11
  1623  0008B4  1862               	xorwf	_NovaTecla^0,w,c
  1624  0008B6  A4D8               	btfss	status,2,c
  1625  0008B8  0012               	return	
  1626  0008BA  0E03               	movlw	3
  1627  0008BC  183D               	xorwf	_menuDalt^0,w,c
  1628  0008BE  A4D8               	btfss	status,2,c
  1629  0008C0  0012               	return	
  1630                           
  1631                           ;Menu.c: 170:     NoFerMenu();
  1632  0008C2  ECB3  F00B         	call	_NoFerMenu	;wreg free
  1633                           
  1634                           ;Menu.c: 171:     LcClear();
  1635  0008C6  ECFA  F00A         	call	_LcClear	;wreg free
  1636                           
  1637                           ;Menu.c: 172:     LcNewString("BYE BYE ");
  1638  0008CA  0E9D               	movlw	low STR_5
  1639  0008CC  6E6F               	movwf	LcNewString@new_s^0,c
  1640  0008CE  506F               	movf	LcNewString@new_s^0,w,c
  1641  0008D0  A4D8               	btfss	status,2,c
  1642  0008D2  0E02               	movlw	high __smallconst
  1643  0008D4  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1644  0008D6  EC75  F00B         	call	_LcNewString	;wreg free
  1645                           
  1646                           ;Menu.c: 173:     state = 14;
  1647  0008DA  0E0E               	movlw	14
  1648  0008DC  6E3B               	movwf	menu@state^0,c
  1649  0008DE  0012               	return	
  1650  0008E0                     l4506:
  1651                           
  1652                           ;Menu.c: 177:    if (LcLliure()) {
  1653  0008E0  EC7B  F00B         	call	_LcLliure	;wreg free
  1654  0008E4  A0D8               	btfss	status,0,c
  1655  0008E6  0012               	return	
  1656                           
  1657                           ;Menu.c: 178:     LcNewString(UgetUserName(indexUsuari));
  1658  0008E8  503C               	movf	_indexUsuari^0,w,c
  1659  0008EA  EC3A  F00B         	call	_UgetUserName
  1660  0008EE  C06C  F06F         	movff	?_UgetUserName,LcNewString@new_s
  1661  0008F2  C06D  F070         	movff	?_UgetUserName+1,LcNewString@new_s+1
  1662  0008F6  EC75  F00B         	call	_LcNewString	;wreg free
  1663                           
  1664                           ;Menu.c: 179:     TiResetTics(timerMenu);
  1665  0008FA  503E               	movf	_timerMenu^0,w,c
  1666  0008FC  EC2E  F00B         	call	_TiResetTics
  1667                           
  1668                           ;Menu.c: 180:     state = 15;
  1669  000900  0E0F               	movlw	15
  1670  000902  6E3B               	movwf	menu@state^0,c
  1671  000904  0012               	return	
  1672  000906                     l4514:
  1673                           
  1674                           ;Menu.c: 184:    if (TiGetTics(timerMenu) > 2410) {
  1675  000906  503E               	movf	_timerMenu^0,w,c
  1676  000908  ECD2  F00A         	call	_TiGetTics
  1677  00090C  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  1678  00090E  0012               	return	
  1679  000910  0E6B               	movlw	107
  1680  000912  5C6C               	subwf	?_TiGetTics^0,w,c
  1681  000914  0E09               	movlw	9
  1682  000916  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  1683  000918  A0D8               	btfss	status,0,c
  1684  00091A  0012               	return	
  1685  00091C  D7AA               	goto	l4466
  1686  00091E                     l4520:
  1687  00091E  503B               	movf	menu@state^0,w,c
  1688  000920  6E77               	movwf	??_menu^0,c
  1689  000922  6A78               	clrf	(??_menu+1)^0,c
  1690                           
  1691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1692                           ; Switch size 1, requested type "simple"
  1693                           ; Number of cases is 1, Range of values is 0 to 0
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte            4     3 (average)
  1697                           ;	Chosen strategy is simple_byte
  1698  000924  5078               	movf	(??_menu+1)^0,w,c
  1699  000926  0A00               	xorlw	0	; case 0
  1700  000928  A4D8               	btfss	status,2,c
  1701  00092A  0012               	return	
  1702                           
  1703                           ; Switch size 1, requested type "simple"
  1704                           ; Number of cases is 16, Range of values is 0 to 15
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte           49    25 (average)
  1708                           ;	Chosen strategy is simple_byte
  1709  00092C  5077               	movf	??_menu^0,w,c
  1710  00092E  0A00               	xorlw	0	; case 0
  1711  000930  B4D8               	btfsc	status,2,c
  1712  000932  D6AB               	goto	l4302
  1713  000934  0A01               	xorlw	1	; case 1
  1714  000936  B4D8               	btfsc	status,2,c
  1715  000938  D6B5               	goto	l4308
  1716  00093A  0A03               	xorlw	3	; case 2
  1717  00093C  B4D8               	btfsc	status,2,c
  1718  00093E  D6C7               	goto	l4318
  1719  000940  0A01               	xorlw	1	; case 3
  1720  000942  B4D8               	btfsc	status,2,c
  1721  000944  D6D6               	goto	l451
  1722  000946  0A07               	xorlw	7	; case 4
  1723  000948  B4D8               	btfsc	status,2,c
  1724  00094A  D6E2               	goto	l4338
  1725  00094C  0A01               	xorlw	1	; case 5
  1726  00094E  B4D8               	btfsc	status,2,c
  1727  000950  D6F3               	goto	l4346
  1728  000952  0A03               	xorlw	3	; case 6
  1729  000954  B4D8               	btfsc	status,2,c
  1730  000956  D700               	goto	l4356
  1731  000958  0A01               	xorlw	1	; case 7
  1732  00095A  B4D8               	btfsc	status,2,c
  1733  00095C  D716               	goto	l4370
  1734  00095E  0A0F               	xorlw	15	; case 8
  1735  000960  B4D8               	btfsc	status,2,c
  1736  000962  D738               	goto	l4398
  1737  000964  0A01               	xorlw	1	; case 9
  1738  000966  B4D8               	btfsc	status,2,c
  1739  000968  D74E               	goto	l4412
  1740  00096A  0A03               	xorlw	3	; case 10
  1741  00096C  B4D8               	btfsc	status,2,c
  1742  00096E  D76F               	goto	l4442
  1743  000970  0A01               	xorlw	1	; case 11
  1744  000972  B4D8               	btfsc	status,2,c
  1745  000974  D77B               	goto	l4448
  1746  000976  0A07               	xorlw	7	; case 12
  1747  000978  B4D8               	btfsc	status,2,c
  1748  00097A  D77E               	goto	l4468
  1749  00097C  0A01               	xorlw	1	; case 13
  1750  00097E  B4D8               	btfsc	status,2,c
  1751  000980  D786               	goto	l4478
  1752  000982  0A03               	xorlw	3	; case 14
  1753  000984  B4D8               	btfsc	status,2,c
  1754  000986  D7AC               	goto	l4506
  1755  000988  0A01               	xorlw	1	; case 15
  1756  00098A  A4D8               	btfss	status,2,c
  1757  00098C  0012               	return	
  1758  00098E  D7BB               	goto	l4514
  1759  000990                     __end_of_menu:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _UgetUserName *****************
  1763 ;; Defined at:
  1764 ;;		line 25 in file "Usuaris.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  quin            1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  quin            1    7[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2    5[COMRAM] PTR unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, prodl, prodh
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1
  1778 ;;      Params:         2       0       0
  1779 ;;      Locals:         1       0       0
  1780 ;;      Temps:          0       0       0
  1781 ;;      Totals:         3       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 2
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_menu
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text3
  1793  001674                     __ptext3:
  1794                           	callstack 0
  1795  001674                     _UgetUserName:
  1796                           	callstack 27
  1797                           
  1798                           ;incstack = 0
  1799                           ;UgetUserName@quin stored from wreg
  1800  001674  6E6E               	movwf	UgetUserName@quin^0,c
  1801                           
  1802                           ;Usuaris.c: 26:     return usuaris[quin].username;
  1803  001676  506E               	movf	UgetUserName@quin^0,w,c
  1804  001678  0D17               	mullw	23
  1805  00167A  0E00               	movlw	low _usuaris
  1806  00167C  24F3               	addwf	243,w,c
  1807  00167E  6E6C               	movwf	?_UgetUserName^0,c
  1808  001680  0E01               	movlw	high _usuaris
  1809  001682  20F4               	addwfc	prodh,w,c
  1810  001684  6E6D               	movwf	(?_UgetUserName+1)^0,c
  1811  001686  0012               	return		;funcret
  1812  001688                     __end_of_UgetUserName:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _UgetNumUsuaris *****************
  1816 ;; Defined at:
  1817 ;;		line 28 in file "Usuaris.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1
  1831 ;;      Params:         0       0       0
  1832 ;;      Locals:         0       0       0
  1833 ;;      Temps:          0       0       0
  1834 ;;      Totals:         0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 2
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_menu
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text4
  1846  001756                     __ptext4:
  1847                           	callstack 0
  1848  001756                     _UgetNumUsuaris:
  1849                           	callstack 27
  1850                           
  1851                           ;Usuaris.c: 29:     return numUsuaris;
  1852                           
  1853                           ;incstack = 0
  1854  001756  5039               	movf	_numUsuaris^0,w,c
  1855  001758  0012               	return		;funcret
  1856  00175A                     __end_of_UgetNumUsuaris:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _UenviaPas *****************
  1860 ;; Defined at:
  1861 ;;		line 44 in file "Usuaris.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  c               1    wreg     unsigned char 
  1864 ;;  pos             1    5[COMRAM] unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    6[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1
  1876 ;;      Params:         1       0       0
  1877 ;;      Locals:         1       0       0
  1878 ;;      Temps:          0       0       0
  1879 ;;      Totals:         2       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 2
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_menu
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text5
  1891  00169A                     __ptext5:
  1892                           	callstack 0
  1893  00169A                     _UenviaPas:
  1894                           	callstack 27
  1895                           
  1896                           ;incstack = 0
  1897                           ;UenviaPas@c stored from wreg
  1898  00169A  6E6D               	movwf	UenviaPas@c^0,c
  1899                           
  1900                           ;Usuaris.c: 45:     tmpPassword[pos] = c;
  1901  00169C  506C               	movf	UenviaPas@pos^0,w,c
  1902  00169E  0F19               	addlw	low _tmpPassword
  1903  0016A0  6ED9               	movwf	fsr2l,c
  1904  0016A2  6ADA               	clrf	fsr2h,c
  1905  0016A4  C06D  FFDF         	movff	UenviaPas@c,indf2
  1906  0016A8  0012               	return		;funcret
  1907  0016AA                     __end_of_UenviaPas:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _UenviaChar *****************
  1911 ;; Defined at:
  1912 ;;		line 41 in file "Usuaris.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  c               1    wreg     unsigned char 
  1915 ;;  pos             1    5[COMRAM] unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  c               1    6[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1
  1927 ;;      Params:         1       0       0
  1928 ;;      Locals:         1       0       0
  1929 ;;      Temps:          0       0       0
  1930 ;;      Totals:         2       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 2
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_menu
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text6
  1942  0016AA                     __ptext6:
  1943                           	callstack 0
  1944  0016AA                     _UenviaChar:
  1945                           	callstack 27
  1946                           
  1947                           ;incstack = 0
  1948                           ;UenviaChar@c stored from wreg
  1949  0016AA  6E6D               	movwf	UenviaChar@c^0,c
  1950                           
  1951                           ;Usuaris.c: 42:     tmpUsername[pos] = c;
  1952  0016AC  506C               	movf	UenviaChar@pos^0,w,c
  1953  0016AE  0F4C               	addlw	low _tmpUsername
  1954  0016B0  6ED9               	movwf	fsr2l,c
  1955  0016B2  6ADA               	clrf	fsr2h,c
  1956  0016B4  C06D  FFDF         	movff	UenviaChar@c,indf2
  1957  0016B8  0012               	return		;funcret
  1958  0016BA                     __end_of_UenviaChar:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _UcheckExistsNotFinished *****************
  1962 ;; Defined at:
  1963 ;;		line 35 in file "Usuaris.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1
  1977 ;;      Params:         0       0       0
  1978 ;;      Locals:         0       0       0
  1979 ;;      Temps:          0       0       0
  1980 ;;      Totals:         0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 2
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_menu
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text7
  1992  0016C6                     __ptext7:
  1993                           	callstack 0
  1994  0016C6                     _UcheckExistsNotFinished:
  1995                           	callstack 27
  1996                           
  1997                           ;Usuaris.c: 36:     return do_check_exists;
  1998                           
  1999                           ;incstack = 0
  2000  0016C6  B879               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2001  0016C8  D002               	goto	l1658
  2002  0016CA  90D8               	bcf	status,0,c
  2003  0016CC  0012               	return	
  2004  0016CE                     l1658:
  2005  0016CE  80D8               	bsf	status,0,c
  2006  0016D0  0012               	return		;funcret
  2007  0016D2                     __end_of_UcheckExistsNotFinished:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _UcheckExistsGetError *****************
  2011 ;; Defined at:
  2012 ;;		line 38 in file "Usuaris.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1
  2026 ;;      Params:         0       0       0
  2027 ;;      Locals:         0       0       0
  2028 ;;      Temps:          1       0       0
  2029 ;;      Totals:         1       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 2
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_menu
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text8
  2041  001702                     __ptext8:
  2042                           	callstack 0
  2043  001702                     _UcheckExistsGetError:
  2044                           	callstack 27
  2045                           
  2046                           ;Usuaris.c: 39:     return usuariLoguejat;
  2047                           
  2048                           ;incstack = 0
  2049  001702  C060  F06C         	movff	_usuariLoguejat,??_UcheckExistsGetError
  2050  001706  306C               	rrcf	??_UcheckExistsGetError^0,w,c
  2051  001708  0012               	return		;funcret
  2052  00170A                     __end_of_UcheckExistsGetError:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _UcheckExists *****************
  2056 ;; Defined at:
  2057 ;;		line 32 in file "Usuaris.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		None
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1
  2071 ;;      Params:         0       0       0
  2072 ;;      Locals:         0       0       0
  2073 ;;      Temps:          0       0       0
  2074 ;;      Totals:         0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 2
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_menu
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text9
  2086  00175A                     __ptext9:
  2087                           	callstack 0
  2088  00175A                     _UcheckExists:
  2089                           	callstack 27
  2090                           
  2091                           ;Usuaris.c: 33:     do_check_exists = 1;
  2092                           
  2093                           ;incstack = 0
  2094  00175A  8879               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2095  00175C  0012               	return		;funcret
  2096  00175E                     __end_of_UcheckExists:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _URegister *****************
  2100 ;; Defined at:
  2101 ;;		line 52 in file "Usuaris.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		None
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1
  2115 ;;      Params:         0       0       0
  2116 ;;      Locals:         0       0       0
  2117 ;;      Temps:          0       0       0
  2118 ;;      Totals:         0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 2
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_menu
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text10
  2130  00175E                     __ptext10:
  2131                           	callstack 0
  2132  00175E                     _URegister:
  2133                           	callstack 27
  2134                           
  2135                           ;Usuaris.c: 53:     do_register = 1;
  2136                           
  2137                           ;incstack = 0
  2138  00175E  8679               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2139  001760  0012               	return		;funcret
  2140  001762                     __end_of_URegister:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _SiFerMenu *****************
  2144 ;; Defined at:
  2145 ;;		line 19 in file "GestioLCD.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		None
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1
  2159 ;;      Params:         0       0       0
  2160 ;;      Locals:         0       0       0
  2161 ;;      Temps:          0       0       0
  2162 ;;      Totals:         0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 2
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_menu
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text11
  2174  001762                     __ptext11:
  2175                           	callstack 0
  2176  001762                     _SiFerMenu:
  2177                           	callstack 27
  2178                           
  2179                           ;GestioLCD.c: 20:     ferMenu = 1;
  2180                           
  2181                           ;incstack = 0
  2182  001762  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2183  001764  0012               	return		;funcret
  2184  001766                     __end_of_SiFerMenu:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _SMSon *****************
  2188 ;; Defined at:
  2189 ;;		line 139 in file "Ssms.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		None
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1
  2203 ;;      Params:         0       0       0
  2204 ;;      Locals:         0       0       0
  2205 ;;      Temps:          0       0       0
  2206 ;;      Totals:         0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 2
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_menu
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text12
  2218  00174A                     __ptext12:
  2219                           	callstack 0
  2220  00174A                     _SMSon:
  2221                           	callstack 27
  2222                           
  2223                           ;Ssms.c: 140:     setSMSon = 1;
  2224                           
  2225                           ;incstack = 0
  2226  00174A  8C79               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2227                           
  2228                           ;Ssms.c: 141:     novaTecla = -1;
  2229  00174C  6865               	setf	_novaTecla^0,c
  2230  00174E  0012               	return		;funcret
  2231  001750                     __end_of_SMSon:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _SMSoff *****************
  2235 ;; Defined at:
  2236 ;;		line 144 in file "Ssms.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		None
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1
  2250 ;;      Params:         0       0       0
  2251 ;;      Locals:         0       0       0
  2252 ;;      Temps:          0       0       0
  2253 ;;      Totals:         0       0       0
  2254 ;;Total ram usage:        0 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 2
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_menu
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text13
  2265  001750                     __ptext13:
  2266                           	callstack 0
  2267  001750                     _SMSoff:
  2268                           	callstack 27
  2269                           
  2270                           ;Ssms.c: 145:     setSMSon = 0;
  2271                           
  2272                           ;incstack = 0
  2273  001750  9C79               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2274                           
  2275                           ;Ssms.c: 146:     novaTecla = -1;
  2276  001752  6865               	setf	_novaTecla^0,c
  2277  001754  0012               	return		;funcret
  2278  001756                     __end_of_SMSoff:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _NoFerMenu *****************
  2282 ;; Defined at:
  2283 ;;		line 22 in file "GestioLCD.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		None
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1
  2297 ;;      Params:         0       0       0
  2298 ;;      Locals:         0       0       0
  2299 ;;      Temps:          0       0       0
  2300 ;;      Totals:         0       0       0
  2301 ;;Total ram usage:        0 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 2
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_menu
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text14
  2312  001766                     __ptext14:
  2313                           	callstack 0
  2314  001766                     _NoFerMenu:
  2315                           	callstack 27
  2316                           
  2317                           ;GestioLCD.c: 23:     ferMenu = 0;
  2318                           
  2319                           ;incstack = 0
  2320  001766  9279               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2321  001768  0012               	return		;funcret
  2322  00176A                     __end_of_NoFerMenu:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _GLCDMostraMenu *****************
  2326 ;; Defined at:
  2327 ;;		line 30 in file "GestioLCD.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  num             1    wreg     unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  num             1    5[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1
  2341 ;;      Params:         0       0       0
  2342 ;;      Locals:         1       0       0
  2343 ;;      Temps:          0       0       0
  2344 ;;      Totals:         1       0       0
  2345 ;;Total ram usage:        1 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 2
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_menu
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text15
  2356  0016D2                     __ptext15:
  2357                           	callstack 0
  2358  0016D2                     _GLCDMostraMenu:
  2359                           	callstack 27
  2360                           
  2361                           ;incstack = 0
  2362                           ;GLCDMostraMenu@num stored from wreg
  2363  0016D2  6E6C               	movwf	GLCDMostraMenu@num^0,c
  2364                           
  2365                           ;GestioLCD.c: 31:     newString = 1;
  2366  0016D4  8079               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  2367                           
  2368                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  2369  0016D6  C06C  F02E         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  2370                           
  2371                           ;GestioLCD.c: 33:     ferMenu = 1;
  2372  0016DA  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2373  0016DC  0012               	return		;funcret
  2374  0016DE                     __end_of_GLCDMostraMenu:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _init_ports *****************
  2378 ;; Defined at:
  2379 ;;		line 21 in file "main.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1
  2393 ;;      Params:         0       0       0
  2394 ;;      Locals:         0       0       0
  2395 ;;      Temps:          0       0       0
  2396 ;;      Totals:         0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text16
  2408  00163C                     __ptext16:
  2409                           	callstack 0
  2410  00163C                     _init_ports:
  2411                           	callstack 28
  2412                           
  2413                           ;incstack = 0
  2414  00163C  0E03               	movlw	3
  2415  00163E  6E92               	movwf	146,c	;volatile
  2416  001640  0EE0               	movlw	224
  2417  001642  6E93               	movwf	147,c	;volatile
  2418  001644  968A               	bcf	138,3,c	;volatile
  2419  001646  908A               	bcf	138,0,c	;volatile
  2420  001648  928A               	bcf	138,1,c	;volatile
  2421                           
  2422                           ;main.c: 44:     TRISC = 0xC0;
  2423  00164A  0EC0               	movlw	192
  2424  00164C  6E94               	movwf	148,c	;volatile
  2425                           
  2426                           ;main.c: 54:     TRISD = 0x8F;
  2427  00164E  0E8F               	movlw	143
  2428  001650  6E95               	movwf	149,c	;volatile
  2429                           
  2430                           ;main.c: 55:     LATD = 0x00;
  2431  001652  0E00               	movlw	0
  2432  001654  6E8C               	movwf	140,c	;volatile
  2433                           
  2434                           ;main.c: 58:     EECON1bits.EEPGD = 1;
  2435  001656  8EA6               	bsf	166,7,c	;volsfr
  2436                           
  2437                           ;main.c: 59:     EECON1bits.CFGS = 0;
  2438  001658  9CA6               	bcf	166,6,c	;volsfr
  2439  00165A  0012               	return		;funcret
  2440  00165C                     __end_of_init_ports:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _initAltaveu *****************
  2444 ;; Defined at:
  2445 ;;		line 10 in file "Altaveu.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1
  2459 ;;      Params:         0       0       0
  2460 ;;      Locals:         0       0       0
  2461 ;;      Temps:          0       0       0
  2462 ;;      Totals:         0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 3
  2466 ;; This function calls:
  2467 ;;		_TiGetTimer
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text17
  2474  00170A                     __ptext17:
  2475                           	callstack 0
  2476  00170A                     _initAltaveu:
  2477                           	callstack 27
  2478                           
  2479                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2480                           
  2481                           ;incstack = 0
  2482  00170A  EC50  F00A         	call	_TiGetTimer	;wreg free
  2483  00170E  6E32               	movwf	_timerAltaveu^0,c
  2484  001710  0012               	return		;funcret
  2485  001712                     __end_of_initAltaveu:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _escriureEEPROM *****************
  2489 ;; Defined at:
  2490 ;;		line 185 in file "Usuaris.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  caca            1    5[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1
  2504 ;;      Params:         0       0       0
  2505 ;;      Locals:         1       0       0
  2506 ;;      Temps:          0       0       0
  2507 ;;      Totals:         1       0       0
  2508 ;;Total ram usage:        1 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text18
  2519  001576                     __ptext18:
  2520                           	callstack 0
  2521  001576                     _escriureEEPROM:
  2522                           	callstack 28
  2523                           
  2524                           ;Usuaris.c: 186:     for(unsigned char caca = 0; caca < 160; caca++){
  2525                           
  2526                           ;incstack = 0
  2527  001576  0E00               	movlw	0
  2528  001578  6E6C               	movwf	escriureEEPROM@caca^0,c
  2529  00157A                     l1818:
  2530                           
  2531                           ;Usuaris.c: 187:         EEADR = 0;
  2532  00157A  0E00               	movlw	0
  2533  00157C  6EA9               	movwf	169,c	;volatile
  2534                           
  2535                           ;Usuaris.c: 188:         EEDATA = 0;
  2536  00157E  0E00               	movlw	0
  2537  001580  6EA8               	movwf	168,c	;volatile
  2538                           
  2539                           ;Usuaris.c: 189:         EECON1bits.EEPGD = 0;
  2540  001582  9EA6               	bcf	166,7,c	;volsfr
  2541                           
  2542                           ;Usuaris.c: 190:         EECON1bits.CFGS = 0;
  2543  001584  9CA6               	bcf	166,6,c	;volsfr
  2544                           
  2545                           ;Usuaris.c: 191:         EECON1bits.WREN = 1;
  2546  001586  84A6               	bsf	166,2,c	;volsfr
  2547                           
  2548                           ;Usuaris.c: 192:         INTCONbits.GIE = 0;
  2549  001588  9EF2               	bcf	242,7,c	;volatile
  2550                           
  2551                           ;Usuaris.c: 193:         EECON2 = 85;
  2552  00158A  0E55               	movlw	85
  2553  00158C  6EA7               	movwf	167,c	;volsfr
  2554                           
  2555                           ;Usuaris.c: 194:         EECON2 = 170;
  2556  00158E  0EAA               	movlw	170
  2557  001590  6EA7               	movwf	167,c	;volsfr
  2558                           
  2559                           ;Usuaris.c: 195:          EECON1bits.WR = 1;
  2560  001592  82A6               	bsf	166,1,c	;volsfr
  2561  001594                     l634:
  2562                           
  2563                           ;Usuaris.c: 196:         while(EECON1bits.WR){
  2564  001594  B2A6               	btfsc	166,1,c	;volsfr
  2565  001596  D7FE               	goto	l634
  2566                           
  2567                           ;Usuaris.c: 201:     }
  2568  001598  2A6C               	incf	escriureEEPROM@caca^0,f,c
  2569  00159A  0E9F               	movlw	159
  2570  00159C  646C               	cpfsgt	escriureEEPROM@caca^0,c
  2571  00159E  D7ED               	goto	l1818
  2572                           
  2573                           ;Usuaris.c: 202:    INTCONbits.GIE = 1;
  2574  0015A0  8EF2               	bsf	242,7,c	;volatile
  2575  0015A2  0012               	return		;funcret
  2576  0015A4                     __end_of_escriureEEPROM:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _UmotorUsers *****************
  2580 ;; Defined at:
  2581 ;;		line 121 in file "Usuaris.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1
  2595 ;;      Params:         0       0       0
  2596 ;;      Locals:         0       0       0
  2597 ;;      Temps:          2       0       0
  2598 ;;      Totals:         2       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 3
  2602 ;; This function calls:
  2603 ;;		_compareStrings
  2604 ;;		_escriureCharEEPROM
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text19
  2611  000BA8                     __ptext19:
  2612                           	callstack 0
  2613  000BA8                     _UmotorUsers:
  2614                           	callstack 27
  2615                           
  2616                           ;Usuaris.c: 122: static char state = 0;;Usuaris.c: 124:  switch(state) {
  2617                           
  2618                           ;incstack = 0
  2619  000BA8  D0A5               	goto	l3554
  2620  000BAA                     l606:
  2621                           
  2622                           ;Usuaris.c: 126:    if (!do_check_exists && !do_register) {
  2623  000BAA  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2624  000BAC  B679               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2625  000BAE  D005               	goto	l607
  2626                           
  2627                           ;Usuaris.c: 127:     i = 0;
  2628  000BB0  0E00               	movlw	0
  2629  000BB2  6E36               	movwf	_i^0,c
  2630                           
  2631                           ;Usuaris.c: 128:     j = 0;
  2632  000BB4  0E00               	movlw	0
  2633  000BB6  6E35               	movwf	_j^0,c
  2634                           
  2635                           ;Usuaris.c: 129:    }
  2636  000BB8  0012               	return	
  2637  000BBA                     l607:
  2638  000BBA  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2639  000BBC  D004               	goto	l609
  2640                           
  2641                           ;Usuaris.c: 131:     usuariLoguejat = -1;
  2642  000BBE  6860               	setf	_usuariLoguejat^0,c
  2643  000BC0                     l3482:
  2644                           
  2645                           ;Usuaris.c: 132:     state = 1;
  2646  000BC0  0E01               	movlw	1
  2647  000BC2  6E34               	movwf	UmotorUsers@state^0,c
  2648                           
  2649                           ;Usuaris.c: 133:    }
  2650  000BC4  0012               	return	
  2651  000BC6                     l609:
  2652  000BC6  A679               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2653  000BC8  0012               	return	
  2654  000BCA                     u3090:
  2655                           
  2656                           ;Usuaris.c: 135:     state = 2;
  2657  000BCA  0E02               	movlw	2
  2658  000BCC  6E34               	movwf	UmotorUsers@state^0,c
  2659                           
  2660                           ;Usuaris.c: 137:   break;
  2661  000BCE  0012               	return	
  2662  000BD0                     l3486:
  2663                           
  2664                           ;Usuaris.c: 139:    if (i < numUsuaris) {
  2665  000BD0  5039               	movf	_numUsuaris^0,w,c
  2666  000BD2  5C36               	subwf	_i^0,w,c
  2667  000BD4  B0D8               	btfsc	status,0,c
  2668  000BD6  D012               	goto	l3496
  2669                           
  2670                           ;Usuaris.c: 140:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2671  000BD8  0E4C               	movlw	low _tmpUsername
  2672  000BDA  6E6C               	movwf	compareStrings@a^0,c
  2673  000BDC  5036               	movf	_i^0,w,c
  2674  000BDE  0D17               	mullw	23
  2675  000BE0  0E00               	movlw	low _usuaris
  2676  000BE2  24F3               	addwf	243,w,c
  2677  000BE4  6E6D               	movwf	compareStrings@b^0,c
  2678  000BE6  0E01               	movlw	high _usuaris
  2679  000BE8  20F4               	addwfc	prodh,w,c
  2680  000BEA  6E6E               	movwf	(compareStrings@b+1)^0,c
  2681  000BEC  ECEC  F009         	call	_compareStrings	;wreg free
  2682  000BF0  0900               	iorlw	0
  2683  000BF2  B4D8               	btfsc	status,2,c
  2684                           
  2685                           ;Usuaris.c: 141:      usuariLoguejat = i;
  2686  000BF4  C036  F060         	movff	_i,_usuariLoguejat
  2687                           
  2688                           ;Usuaris.c: 144:     i++;
  2689  000BF8  2A36               	incf	_i^0,f,c
  2690  000BFA  D7E2               	goto	l3482
  2691  000BFC                     l3496:
  2692  000BFC  5039               	movf	_numUsuaris^0,w,c
  2693  000BFE  1836               	xorwf	_i^0,w,c
  2694  000C00  A4D8               	btfss	status,2,c
  2695  000C02  0012               	return	
  2696                           
  2697                           ;Usuaris.c: 148:     do_check_exists = 0;
  2698  000C04  9879               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2699  000C06                     l3500:
  2700                           
  2701                           ;Usuaris.c: 149:     state = 0;
  2702  000C06  0E00               	movlw	0
  2703  000C08  6E34               	movwf	UmotorUsers@state^0,c
  2704  000C0A  0012               	return	
  2705  000C0C                     l3502:
  2706                           
  2707                           ;Usuaris.c: 153:    if (i != 8) {
  2708  000C0C  0E08               	movlw	8
  2709  000C0E  1836               	xorwf	_i^0,w,c
  2710  000C10  B4D8               	btfsc	status,2,c
  2711  000C12  D022               	goto	l3514
  2712                           
  2713                           ;Usuaris.c: 154:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2714  000C14  C038  F06C         	movff	_indexNextUser,escriureCharEEPROM@pos
  2715  000C18  5036               	movf	_i^0,w,c
  2716  000C1A  0F4C               	addlw	low _tmpUsername
  2717  000C1C  6ED9               	movwf	fsr2l,c
  2718  000C1E  6ADA               	clrf	fsr2h,c
  2719  000C20  50DF               	movf	indf2,w,c
  2720  000C22  ECE8  F00A         	call	_escriureCharEEPROM
  2721  000C26  2A38               	incf	_indexNextUser^0,f,c
  2722                           
  2723                           ;Usuaris.c: 155:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  2724  000C28  5036               	movf	_i^0,w,c
  2725  000C2A  0F4C               	addlw	low _tmpUsername
  2726  000C2C  6ED9               	movwf	fsr2l,c
  2727  000C2E  6ADA               	clrf	fsr2h,c
  2728  000C30  5037               	movf	_indexNextUserStruct^0,w,c
  2729  000C32  0D17               	mullw	23
  2730  000C34  0E00               	movlw	low _usuaris
  2731  000C36  6E71               	movwf	??_UmotorUsers^0,c
  2732  000C38  0E01               	movlw	high _usuaris
  2733  000C3A  6E72               	movwf	(??_UmotorUsers+1)^0,c
  2734  000C3C  50F3               	movf	243,w,c
  2735  000C3E  2671               	addwf	??_UmotorUsers^0,f,c
  2736  000C40  50F4               	movf	244,w,c
  2737  000C42  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  2738  000C44  5036               	movf	_i^0,w,c
  2739  000C46  2471               	addwf	??_UmotorUsers^0,w,c
  2740  000C48  6EE1               	movwf	fsr1l,c
  2741  000C4A  0E00               	movlw	0
  2742  000C4C  2072               	addwfc	(??_UmotorUsers+1)^0,w,c
  2743  000C4E  6EE2               	movwf	fsr1h,c
  2744  000C50  CFDF FFE7          	movff	indf2,indf1
  2745                           
  2746                           ;Usuaris.c: 156:     i++;
  2747  000C54  2A36               	incf	_i^0,f,c
  2748  000C56  D7B9               	goto	u3090
  2749  000C58                     l3514:
  2750  000C58  0E08               	movlw	8
  2751  000C5A  1836               	xorwf	_i^0,w,c
  2752  000C5C  A4D8               	btfss	status,2,c
  2753  000C5E  0012               	return	
  2754                           
  2755                           ;Usuaris.c: 160:     i = 0;
  2756  000C60  0E00               	movlw	0
  2757  000C62  6E36               	movwf	_i^0,c
  2758                           
  2759                           ;Usuaris.c: 161:     state = 3;
  2760  000C64  0E03               	movlw	3
  2761  000C66  6E34               	movwf	UmotorUsers@state^0,c
  2762  000C68  0012               	return	
  2763  000C6A                     l3518:
  2764                           
  2765                           ;Usuaris.c: 165:    if (i != 8) {
  2766  000C6A  0E08               	movlw	8
  2767  000C6C  1836               	xorwf	_i^0,w,c
  2768  000C6E  B4D8               	btfsc	status,2,c
  2769  000C70  D028               	goto	l3530
  2770                           
  2771                           ;Usuaris.c: 166:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2772  000C72  C038  F06C         	movff	_indexNextUser,escriureCharEEPROM@pos
  2773  000C76  5036               	movf	_i^0,w,c
  2774  000C78  0F19               	addlw	low _tmpPassword
  2775  000C7A  6ED9               	movwf	fsr2l,c
  2776  000C7C  6ADA               	clrf	fsr2h,c
  2777  000C7E  50DF               	movf	indf2,w,c
  2778  000C80  ECE8  F00A         	call	_escriureCharEEPROM
  2779  000C84  2A38               	incf	_indexNextUser^0,f,c
  2780                           
  2781                           ;Usuaris.c: 167:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  2782  000C86  5036               	movf	_i^0,w,c
  2783  000C88  0F19               	addlw	low _tmpPassword
  2784  000C8A  6ED9               	movwf	fsr2l,c
  2785  000C8C  6ADA               	clrf	fsr2h,c
  2786  000C8E  5037               	movf	_indexNextUserStruct^0,w,c
  2787  000C90  0D17               	mullw	23
  2788  000C92  0E00               	movlw	low _usuaris
  2789  000C94  6E71               	movwf	??_UmotorUsers^0,c
  2790  000C96  0E01               	movlw	high _usuaris
  2791  000C98  6E72               	movwf	(??_UmotorUsers+1)^0,c
  2792  000C9A  0E09               	movlw	9
  2793  000C9C  2671               	addwf	??_UmotorUsers^0,f,c
  2794  000C9E  0E00               	movlw	0
  2795  000CA0  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  2796  000CA2  50F3               	movf	243,w,c
  2797  000CA4  2671               	addwf	??_UmotorUsers^0,f,c
  2798  000CA6  50F4               	movf	244,w,c
  2799  000CA8  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  2800  000CAA  5036               	movf	_i^0,w,c
  2801  000CAC  2471               	addwf	??_UmotorUsers^0,w,c
  2802  000CAE  6EE1               	movwf	fsr1l,c
  2803  000CB0  0E00               	movlw	0
  2804  000CB2  2072               	addwfc	(??_UmotorUsers+1)^0,w,c
  2805  000CB4  6EE2               	movwf	fsr1h,c
  2806  000CB6  CFDF FFE7          	movff	indf2,indf1
  2807                           
  2808                           ;Usuaris.c: 168:     i++;
  2809  000CBA  2A36               	incf	_i^0,f,c
  2810                           
  2811                           ;Usuaris.c: 169:     state = 3;
  2812  000CBC  0E03               	movlw	3
  2813  000CBE  6E34               	movwf	UmotorUsers@state^0,c
  2814                           
  2815                           ;Usuaris.c: 170:    }
  2816  000CC0  0012               	return	
  2817  000CC2                     l3530:
  2818  000CC2  0E08               	movlw	8
  2819  000CC4  1836               	xorwf	_i^0,w,c
  2820  000CC6  A4D8               	btfss	status,2,c
  2821  000CC8  0012               	return	
  2822                           
  2823                           ;Usuaris.c: 172:     do_register = 0;
  2824  000CCA  9679               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2825                           
  2826                           ;Usuaris.c: 173:     indexNextUser++;
  2827  000CCC  2A38               	incf	_indexNextUser^0,f,c
  2828                           
  2829                           ;Usuaris.c: 174:     if(indexNextUser == 159) indexNextUser = 16;
  2830  000CCE  0E9F               	movlw	159
  2831  000CD0  1838               	xorwf	_indexNextUser^0,w,c
  2832  000CD2  A4D8               	btfss	status,2,c
  2833  000CD4  D002               	goto	l3540
  2834  000CD6  0E10               	movlw	16
  2835  000CD8  6E38               	movwf	_indexNextUser^0,c
  2836  000CDA                     l3540:
  2837                           
  2838                           ;Usuaris.c: 175:     indexNextUserStruct++;
  2839  000CDA  2A37               	incf	_indexNextUserStruct^0,f,c
  2840                           
  2841                           ;Usuaris.c: 176:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  2842  000CDC  0E08               	movlw	8
  2843  000CDE  1837               	xorwf	_indexNextUserStruct^0,w,c
  2844  000CE0  A4D8               	btfss	status,2,c
  2845  000CE2  D002               	goto	l3546
  2846  000CE4  0E00               	movlw	0
  2847  000CE6  6E37               	movwf	_indexNextUserStruct^0,c
  2848  000CE8                     l3546:
  2849                           
  2850                           ;Usuaris.c: 177:     if(numUsuaris != 8) numUsuaris++;
  2851  000CE8  0E08               	movlw	8
  2852  000CEA  1839               	xorwf	_numUsuaris^0,w,c
  2853  000CEC  B4D8               	btfsc	status,2,c
  2854  000CEE  D78B               	goto	l3500
  2855  000CF0  2A39               	incf	_numUsuaris^0,f,c
  2856  000CF2  D789               	goto	l3500
  2857  000CF4                     l3554:
  2858  000CF4  5034               	movf	UmotorUsers@state^0,w,c
  2859  000CF6  6E71               	movwf	??_UmotorUsers^0,c
  2860  000CF8  6A72               	clrf	(??_UmotorUsers+1)^0,c
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ;	Chosen strategy is simple_byte
  2869  000CFA  5072               	movf	(??_UmotorUsers+1)^0,w,c
  2870  000CFC  0A00               	xorlw	0	; case 0
  2871  000CFE  A4D8               	btfss	status,2,c
  2872  000D00  0012               	return	
  2873                           
  2874                           ; Switch size 1, requested type "simple"
  2875                           ; Number of cases is 4, Range of values is 0 to 3
  2876                           ; switch strategies available:
  2877                           ; Name         Instructions Cycles
  2878                           ; simple_byte           13     7 (average)
  2879                           ;	Chosen strategy is simple_byte
  2880  000D02  5071               	movf	??_UmotorUsers^0,w,c
  2881  000D04  0A00               	xorlw	0	; case 0
  2882  000D06  B4D8               	btfsc	status,2,c
  2883  000D08  D750               	goto	l606
  2884  000D0A  0A01               	xorlw	1	; case 1
  2885  000D0C  B4D8               	btfsc	status,2,c
  2886  000D0E  D760               	goto	l3486
  2887  000D10  0A03               	xorlw	3	; case 2
  2888  000D12  B4D8               	btfsc	status,2,c
  2889  000D14  D77B               	goto	l3502
  2890  000D16  0A01               	xorlw	1	; case 3
  2891  000D18  A4D8               	btfss	status,2,c
  2892  000D1A  0012               	return	
  2893  000D1C  D7A6               	goto	l3518
  2894  000D1E                     __end_of_UmotorUsers:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _escriureCharEEPROM *****************
  2898 ;; Defined at:
  2899 ;;		line 55 in file "Usuaris.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  c               1    wreg     unsigned char 
  2902 ;;  pos             1    5[COMRAM] unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  c               1    6[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1
  2914 ;;      Params:         1       0       0
  2915 ;;      Locals:         1       0       0
  2916 ;;      Temps:          0       0       0
  2917 ;;      Totals:         2       0       0
  2918 ;;Total ram usage:        2 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 2
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_UmotorUsers
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text20
  2929  0015D0                     __ptext20:
  2930                           	callstack 0
  2931  0015D0                     _escriureCharEEPROM:
  2932                           	callstack 27
  2933                           
  2934                           ;incstack = 0
  2935                           ;escriureCharEEPROM@c stored from wreg
  2936  0015D0  6E6D               	movwf	escriureCharEEPROM@c^0,c
  2937                           
  2938                           ;Usuaris.c: 56:     EEADR = c;
  2939  0015D2  C06D  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2940                           
  2941                           ;Usuaris.c: 57:     EEDATA = pos;
  2942  0015D6  C06C  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2943                           
  2944                           ;Usuaris.c: 58:     EECON1bits.EEPGD = 0;
  2945  0015DA  9EA6               	bcf	166,7,c	;volsfr
  2946                           
  2947                           ;Usuaris.c: 59:     EECON1bits.CFGS = 0;
  2948  0015DC  9CA6               	bcf	166,6,c	;volsfr
  2949                           
  2950                           ;Usuaris.c: 60:     EECON1bits.WREN = 1;
  2951  0015DE  84A6               	bsf	166,2,c	;volsfr
  2952                           
  2953                           ;Usuaris.c: 61:     INTCONbits.GIE = 0;
  2954  0015E0  9EF2               	bcf	242,7,c	;volatile
  2955                           
  2956                           ;Usuaris.c: 62:     EECON2 = 85;
  2957  0015E2  0E55               	movlw	85
  2958  0015E4  6EA7               	movwf	167,c	;volsfr
  2959                           
  2960                           ;Usuaris.c: 63:     EECON2 = 170;
  2961  0015E6  0EAA               	movlw	170
  2962  0015E8  6EA7               	movwf	167,c	;volsfr
  2963                           
  2964                           ;Usuaris.c: 64:      EECON1bits.WR = 1;
  2965  0015EA  82A6               	bsf	166,1,c	;volsfr
  2966  0015EC                     l568:
  2967  0015EC  B2A6               	btfsc	166,1,c	;volsfr
  2968  0015EE  D7FE               	goto	l568
  2969                           
  2970                           ;Usuaris.c: 66:    INTCONbits.GIE = 1;
  2971  0015F0  8EF2               	bsf	242,7,c	;volatile
  2972  0015F2  0012               	return		;funcret
  2973  0015F4                     __end_of_escriureCharEEPROM:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _compareStrings *****************
  2977 ;; Defined at:
  2978 ;;		line 111 in file "Usuaris.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2981 ;;		 -> tmpUsername(9), 
  2982 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2983 ;;		 -> usuaris.username(9), usuaris(184), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      unsigned char 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1
  2995 ;;      Params:         3       0       0
  2996 ;;      Locals:         0       0       0
  2997 ;;      Temps:          2       0       0
  2998 ;;      Totals:         5       0       0
  2999 ;;Total ram usage:        5 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 2
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_UmotorUsers
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text21
  3010  0013D8                     __ptext21:
  3011                           	callstack 0
  3012  0013D8                     _compareStrings:
  3013                           	callstack 27
  3014                           
  3015                           ;Usuaris.c: 112:     while (*a){
  3016                           
  3017                           ;incstack = 0
  3018  0013D8  D00E               	goto	l2958
  3019  0013DA                     l2952:
  3020                           
  3021                           ;Usuaris.c: 113:         if (*a != *b)break;
  3022  0013DA  C06D  FFD9         	movff	compareStrings@b,fsr2l
  3023  0013DE  C06E  FFDA         	movff	compareStrings@b+1,fsr2h
  3024  0013E2  506C               	movf	compareStrings@a^0,w,c
  3025  0013E4  6EE1               	movwf	fsr1l,c
  3026  0013E6  6AE2               	clrf	fsr1h,c
  3027  0013E8  50DE               	movf	postinc2,w,c
  3028  0013EA  18E6               	xorwf	postinc1,w,c
  3029  0013EC  A4D8               	btfss	status,2,c
  3030  0013EE  D009               	goto	u2280
  3031                           
  3032                           ;Usuaris.c: 114:         a++;
  3033  0013F0  2A6C               	incf	compareStrings@a^0,f,c
  3034                           
  3035                           ;Usuaris.c: 115:         b++;
  3036  0013F2  4A6D               	infsnz	compareStrings@b^0,f,c
  3037  0013F4  2A6E               	incf	(compareStrings@b+1)^0,f,c
  3038  0013F6                     l2958:
  3039                           
  3040                           ;Usuaris.c: 112:     while (*a){
  3041  0013F6  506C               	movf	compareStrings@a^0,w,c
  3042  0013F8  6ED9               	movwf	fsr2l,c
  3043  0013FA  6ADA               	clrf	fsr2h,c
  3044  0013FC  50DF               	movf	indf2,w,c
  3045  0013FE  A4D8               	btfss	status,2,c
  3046  001400  D7EC               	goto	l2952
  3047  001402                     u2280:
  3048                           
  3049                           ;Usuaris.c: 117:     return *(const unsigned char*)a - *(const unsigned char*)b;
  3050  001402  C06D  FFD9         	movff	compareStrings@b,fsr2l
  3051  001406  C06E  FFDA         	movff	compareStrings@b+1,fsr2h
  3052  00140A  50DF               	movf	indf2,w,c
  3053  00140C  6E6F               	movwf	??_compareStrings^0,c
  3054  00140E  506C               	movf	compareStrings@a^0,w,c
  3055  001410  6ED9               	movwf	fsr2l,c
  3056  001412  6ADA               	clrf	fsr2h,c
  3057  001414  50DF               	movf	indf2,w,c
  3058  001416  6E70               	movwf	(??_compareStrings+1)^0,c
  3059  001418  506F               	movf	??_compareStrings^0,w,c
  3060  00141A  5C70               	subwf	(??_compareStrings+1)^0,w,c
  3061  00141C  0012               	return		;funcret
  3062  00141E                     __end_of_compareStrings:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _Uinit *****************
  3066 ;; Defined at:
  3067 ;;		line 68 in file "Usuaris.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  j               1    9[COMRAM] unsigned char 
  3072 ;;  j               1    8[COMRAM] unsigned char 
  3073 ;;  i               1    7[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1
  3083 ;;      Params:         0       0       0
  3084 ;;      Locals:         3       0       0
  3085 ;;      Temps:          2       0       0
  3086 ;;      Totals:         5       0       0
  3087 ;;Total ram usage:        5 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 2
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text22
  3098  001018                     __ptext22:
  3099                           	callstack 0
  3100  001018                     _Uinit:
  3101                           	callstack 28
  3102                           
  3103                           ;Usuaris.c: 73:     EEADR = 0;
  3104                           
  3105                           ;incstack = 0
  3106  001018  0E00               	movlw	0
  3107  00101A  6EA9               	movwf	169,c	;volatile
  3108                           
  3109                           ;Usuaris.c: 74:     EECON1bits.EEPGD = 0;
  3110  00101C  9EA6               	bcf	166,7,c	;volsfr
  3111                           
  3112                           ;Usuaris.c: 75:     EECON1bits.CFGS = 0;
  3113  00101E  9CA6               	bcf	166,6,c	;volsfr
  3114                           
  3115                           ;Usuaris.c: 76:     EECON1bits.RD = 1;
  3116  001020  80A6               	bsf	166,0,c	;volsfr
  3117  001022                     l574:
  3118  001022  B0A6               	btfsc	166,0,c	;volsfr
  3119  001024  D7FE               	goto	l574
  3120                           
  3121                           ;Usuaris.c: 78:     numUsuaris = EEDATA;
  3122  001026  CFA8 F039          	movff	4008,_numUsuaris	;volatile
  3123                           
  3124                           ;Usuaris.c: 82:     EEADR++;
  3125  00102A  2AA9               	incf	169,f,c	;volatile
  3126                           
  3127                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  3128  00102C  9EA6               	bcf	166,7,c	;volsfr
  3129                           
  3130                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  3131  00102E  9CA6               	bcf	166,6,c	;volsfr
  3132  001030                     l577:
  3133  001030  B0A6               	btfsc	166,0,c	;volsfr
  3134  001032  D7FE               	goto	l577
  3135                           
  3136                           ;Usuaris.c: 87:     indexNextUser = EEDATA;
  3137  001034  CFA8 F038          	movff	4008,_indexNextUser	;volatile
  3138                           
  3139                           ;Usuaris.c: 88:     EEADR++;
  3140  001038  2AA9               	incf	169,f,c	;volatile
  3141                           
  3142                           ;Usuaris.c: 90:     for(char i = 0; i< numUsuaris; i++){
  3143  00103A  0E00               	movlw	0
  3144  00103C  6E6E               	movwf	Uinit@i^0,c
  3145  00103E  D041               	goto	l2076
  3146  001040                     l2046:
  3147                           
  3148                           ;Usuaris.c: 91:         for(char j = 0; j<9; j++){
  3149  001040  0E00               	movlw	0
  3150  001042  6E6F               	movwf	Uinit@j^0,c
  3151  001044                     l582:
  3152                           
  3153                           ;Usuaris.c: 92:             EECON1bits.EEPGD = 0;
  3154  001044  9EA6               	bcf	166,7,c	;volsfr
  3155                           
  3156                           ;Usuaris.c: 93:             EECON1bits.CFGS = 0;
  3157  001046  9CA6               	bcf	166,6,c	;volsfr
  3158                           
  3159                           ;Usuaris.c: 94:             EECON1bits.RD = 1;
  3160  001048  80A6               	bsf	166,0,c	;volsfr
  3161  00104A                     l584:
  3162  00104A  B0A6               	btfsc	166,0,c	;volsfr
  3163  00104C  D7FE               	goto	l584
  3164                           
  3165                           ;Usuaris.c: 96:             usuaris[i].username[j] = EEDATA;
  3166  00104E  506E               	movf	Uinit@i^0,w,c
  3167  001050  0D17               	mullw	23
  3168  001052  0E00               	movlw	low _usuaris
  3169  001054  6E6C               	movwf	??_Uinit^0,c
  3170  001056  0E01               	movlw	high _usuaris
  3171  001058  6E6D               	movwf	(??_Uinit+1)^0,c
  3172  00105A  50F3               	movf	243,w,c
  3173  00105C  266C               	addwf	??_Uinit^0,f,c
  3174  00105E  50F4               	movf	244,w,c
  3175  001060  226D               	addwfc	(??_Uinit+1)^0,f,c
  3176  001062  506F               	movf	Uinit@j^0,w,c
  3177  001064  246C               	addwf	??_Uinit^0,w,c
  3178  001066  6ED9               	movwf	fsr2l,c
  3179  001068  0E00               	movlw	0
  3180  00106A  206D               	addwfc	(??_Uinit+1)^0,w,c
  3181  00106C  6EDA               	movwf	fsr2h,c
  3182  00106E  CFA8 FFDF          	movff	4008,indf2	;volatile
  3183                           
  3184                           ;Usuaris.c: 97:             EEADR++;
  3185  001072  2AA9               	incf	169,f,c	;volatile
  3186                           
  3187                           ;Usuaris.c: 98:         }
  3188  001074  2A6F               	incf	Uinit@j^0,f,c
  3189  001076  0E08               	movlw	8
  3190  001078  646F               	cpfsgt	Uinit@j^0,c
  3191  00107A  D7E4               	goto	l582
  3192                           
  3193                           ;Usuaris.c: 99:         for(char j = 0; j<9; j++){
  3194  00107C  0E00               	movlw	0
  3195  00107E  6E70               	movwf	Uinit@j_1056^0,c
  3196  001080                     l587:
  3197                           
  3198                           ;Usuaris.c: 100:             EECON1bits.EEPGD = 0;
  3199  001080  9EA6               	bcf	166,7,c	;volsfr
  3200                           
  3201                           ;Usuaris.c: 101:             EECON1bits.CFGS = 0;
  3202  001082  9CA6               	bcf	166,6,c	;volsfr
  3203                           
  3204                           ;Usuaris.c: 102:             EECON1bits.RD = 1;
  3205  001084  80A6               	bsf	166,0,c	;volsfr
  3206  001086                     l589:
  3207  001086  B0A6               	btfsc	166,0,c	;volsfr
  3208  001088  D7FE               	goto	l589
  3209                           
  3210                           ;Usuaris.c: 104:             usuaris[i].password[j] = EEDATA;
  3211  00108A  506E               	movf	Uinit@i^0,w,c
  3212  00108C  0D17               	mullw	23
  3213  00108E  0E00               	movlw	low _usuaris
  3214  001090  6E6C               	movwf	??_Uinit^0,c
  3215  001092  0E01               	movlw	high _usuaris
  3216  001094  6E6D               	movwf	(??_Uinit+1)^0,c
  3217  001096  0E09               	movlw	9
  3218  001098  266C               	addwf	??_Uinit^0,f,c
  3219  00109A  0E00               	movlw	0
  3220  00109C  226D               	addwfc	(??_Uinit+1)^0,f,c
  3221  00109E  50F3               	movf	243,w,c
  3222  0010A0  266C               	addwf	??_Uinit^0,f,c
  3223  0010A2  50F4               	movf	244,w,c
  3224  0010A4  226D               	addwfc	(??_Uinit+1)^0,f,c
  3225  0010A6  5070               	movf	Uinit@j_1056^0,w,c
  3226  0010A8  246C               	addwf	??_Uinit^0,w,c
  3227  0010AA  6ED9               	movwf	fsr2l,c
  3228  0010AC  0E00               	movlw	0
  3229  0010AE  206D               	addwfc	(??_Uinit+1)^0,w,c
  3230  0010B0  6EDA               	movwf	fsr2h,c
  3231  0010B2  CFA8 FFDF          	movff	4008,indf2	;volatile
  3232                           
  3233                           ;Usuaris.c: 105:             EEADR++;
  3234  0010B6  2AA9               	incf	169,f,c	;volatile
  3235                           
  3236                           ;Usuaris.c: 106:         }
  3237  0010B8  2A70               	incf	Uinit@j_1056^0,f,c
  3238  0010BA  0E08               	movlw	8
  3239  0010BC  6470               	cpfsgt	Uinit@j_1056^0,c
  3240  0010BE  D7E0               	goto	l587
  3241                           
  3242                           ;Usuaris.c: 107:     }
  3243  0010C0  2A6E               	incf	Uinit@i^0,f,c
  3244  0010C2                     l2076:
  3245  0010C2  5039               	movf	_numUsuaris^0,w,c
  3246  0010C4  5C6E               	subwf	Uinit@i^0,w,c
  3247  0010C6  B0D8               	btfsc	status,0,c
  3248  0010C8  0012               	return	
  3249  0010CA  D7BA               	goto	l2046
  3250  0010CC                     __end_of_Uinit:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _TiInitTimer *****************
  3254 ;; Defined at:
  3255 ;;		line 18 in file "TiTTimer.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1
  3269 ;;      Params:         0       0       0
  3270 ;;      Locals:         0       0       0
  3271 ;;      Temps:          0       0       0
  3272 ;;      Totals:         0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text23
  3284  0014DA                     __ptext23:
  3285                           	callstack 0
  3286  0014DA                     _TiInitTimer:
  3287                           	callstack 28
  3288                           
  3289                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  3290                           
  3291                           ;incstack = 0
  3292  0014DA  9ED0               	bcf	208,7,c	;volatile
  3293                           
  3294                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  3295  0014DC  8EF2               	bsf	242,7,c	;volatile
  3296                           
  3297                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  3298  0014DE  8CF2               	bsf	242,6,c	;volatile
  3299                           
  3300                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  3301  0014E0  8AF2               	bsf	242,5,c	;volatile
  3302                           
  3303                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3304  0014E2  94F2               	bcf	242,2,c	;volatile
  3305                           
  3306                           ;TiTTimer.c: 25:     T0CON = 136;
  3307  0014E4  0E88               	movlw	136
  3308  0014E6  6ED5               	movwf	213,c	;volatile
  3309                           
  3310                           ;TiTTimer.c: 27:     TMR0H = 223;
  3311  0014E8  0EDF               	movlw	223
  3312  0014EA  6ED7               	movwf	215,c	;volatile
  3313                           
  3314                           ;TiTTimer.c: 28:     TMR0L = 148;
  3315  0014EC  0E94               	movlw	148
  3316  0014EE  6ED6               	movwf	214,c	;volatile
  3317                           
  3318                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  3319  0014F0  8ED5               	bsf	213,7,c	;volatile
  3320                           
  3321                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  3322  0014F2  0E00               	movlw	0
  3323  0014F4  6E40               	movwf	_counter^0,c
  3324  0014F6                     l1840:
  3325  0014F6  0E07               	movlw	7
  3326  0014F8  6440               	cpfsgt	_counter^0,c
  3327  0014FA  D001               	goto	l1844
  3328  0014FC  0012               	return	
  3329  0014FE                     l1844:
  3330                           
  3331                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  3332  0014FE  5040               	movf	_counter^0,w,c
  3333  001500  0D03               	mullw	3
  3334  001502  50F3               	movf	243,w,c
  3335  001504  0F03               	addlw	low (_s_Timers+2)
  3336  001506  6ED9               	movwf	fsr2l,c
  3337  001508  6ADA               	clrf	fsr2h,c
  3338  00150A  0E00               	movlw	0
  3339  00150C  6EDF               	movwf	indf2,c
  3340                           
  3341                           ;TiTTimer.c: 33:     }
  3342  00150E  2A40               	incf	_counter^0,f,c
  3343  001510  D7F2               	goto	l1840
  3344  001512                     __end_of_TiInitTimer:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function _TeTeclat *****************
  3348 ;; Defined at:
  3349 ;;		line 22 in file "TeTeclat.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1
  3363 ;;      Params:         0       0       0
  3364 ;;      Locals:         0       0       0
  3365 ;;      Temps:          3       0       0
  3366 ;;      Totals:         3       0       0
  3367 ;;Total ram usage:        3 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 3
  3370 ;; This function calls:
  3371 ;;		_MsetNovaTecla
  3372 ;;		_SsetNovaTecla
  3373 ;;		_TiGetTics
  3374 ;;		_TiResetTics
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text24
  3381  000D1E                     __ptext24:
  3382                           	callstack 0
  3383  000D1E                     _TeTeclat:
  3384                           	callstack 27
  3385                           
  3386                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  3387                           
  3388                           ;incstack = 0
  3389  000D1E  A083               	btfss	131,0,c	;volatile
  3390  000D20  D003               	goto	u5270
  3391  000D22  6A73               	clrf	??_TeTeclat^0,c
  3392  000D24  2A73               	incf	??_TeTeclat^0,f,c
  3393  000D26  D001               	goto	u5278
  3394  000D28                     u5270:
  3395  000D28  6A73               	clrf	??_TeTeclat^0,c
  3396  000D2A                     u5278:
  3397  000D2A  A283               	btfss	131,1,c	;volatile
  3398  000D2C  D002               	goto	u5280
  3399  000D2E  0E01               	movlw	1
  3400  000D30  D001               	goto	u5286
  3401  000D32                     u5280:
  3402  000D32  0E00               	movlw	0
  3403  000D34                     u5286:
  3404  000D34  0D02               	mullw	2
  3405  000D36  CFF3 F074          	movff	prodl,??_TeTeclat+1
  3406  000D3A  A483               	btfss	131,2,c	;volatile
  3407  000D3C  D002               	goto	u5290
  3408  000D3E  0E01               	movlw	1
  3409  000D40  D001               	goto	u5296
  3410  000D42                     u5290:
  3411  000D42  0E00               	movlw	0
  3412  000D44                     u5296:
  3413  000D44  0D03               	mullw	3
  3414  000D46  CFF3 F075          	movff	prodl,??_TeTeclat+2
  3415  000D4A  A683               	btfss	131,3,c	;volatile
  3416  000D4C  D002               	goto	u5300
  3417  000D4E  0E01               	movlw	1
  3418  000D50  D001               	goto	u5306
  3419  000D52                     u5300:
  3420  000D52  0E00               	movlw	0
  3421  000D54                     u5306:
  3422  000D54  0D04               	mullw	4
  3423  000D56  50F3               	movf	243,w,c
  3424  000D58  2475               	addwf	(??_TeTeclat+2)^0,w,c
  3425  000D5A  2474               	addwf	(??_TeTeclat+1)^0,w,c
  3426  000D5C  2473               	addwf	??_TeTeclat^0,w,c
  3427  000D5E  6E41               	movwf	TeTeclat@files^0,c
  3428                           
  3429                           ;TeTeclat.c: 27:  switch(state) {
  3430  000D60  D06F               	goto	l4844
  3431  000D62                     l4770:
  3432                           
  3433                           ;TeTeclat.c: 29:    if (files==0) {
  3434  000D62  5041               	movf	TeTeclat@files^0,w,c
  3435  000D64  A4D8               	btfss	status,2,c
  3436  000D66  D007               	goto	l4778
  3437                           
  3438                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  3439  000D68  888C               	bsf	140,4,c	;volatile
  3440                           
  3441                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  3442  000D6A  9A8C               	bcf	140,5,c	;volatile
  3443                           
  3444                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  3445  000D6C  9C8C               	bcf	140,6,c	;volatile
  3446                           
  3447                           ;TeTeclat.c: 33:     cols=0;
  3448  000D6E  0E00               	movlw	0
  3449  000D70  6E42               	movwf	TeTeclat@cols^0,c
  3450  000D72                     l4776:
  3451                           
  3452                           ;TeTeclat.c: 34:     state++;
  3453  000D72  2A43               	incf	TeTeclat@state^0,f,c
  3454                           
  3455                           ;TeTeclat.c: 35:    }
  3456  000D74  0012               	return	
  3457  000D76                     l4778:
  3458  000D76  5041               	movf	TeTeclat@files^0,w,c
  3459  000D78  B4D8               	btfsc	status,2,c
  3460  000D7A  0012               	return	
  3461                           
  3462                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  3463  000D7C  5044               	movf	_tiTeclat^0,w,c
  3464  000D7E  EC2E  F00B         	call	_TiResetTics
  3465  000D82                     l4782:
  3466                           
  3467                           ;TeTeclat.c: 38:     state = 3;
  3468  000D82  0E03               	movlw	3
  3469  000D84  6E43               	movwf	TeTeclat@state^0,c
  3470  000D86  0012               	return	
  3471  000D88                     l4784:
  3472                           
  3473                           ;TeTeclat.c: 42:    if (files==0) {
  3474  000D88  5041               	movf	TeTeclat@files^0,w,c
  3475  000D8A  A4D8               	btfss	status,2,c
  3476  000D8C  D005               	goto	l4792
  3477                           
  3478                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3479  000D8E  988C               	bcf	140,4,c	;volatile
  3480                           
  3481                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3482  000D90  8A8C               	bsf	140,5,c	;volatile
  3483                           
  3484                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3485  000D92  9C8C               	bcf	140,6,c	;volatile
  3486                           
  3487                           ;TeTeclat.c: 46:     cols=1;
  3488  000D94  0E01               	movlw	1
  3489  000D96  D7EC               	goto	L1
  3490  000D98                     l4792:
  3491  000D98  5041               	movf	TeTeclat@files^0,w,c
  3492  000D9A  B4D8               	btfsc	status,2,c
  3493  000D9C  0012               	return	
  3494                           
  3495                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3496  000D9E  5044               	movf	_tiTeclat^0,w,c
  3497  000DA0  EC2E  F00B         	call	_TiResetTics
  3498  000DA4  D7EE               	goto	l4782
  3499  000DA6                     l4798:
  3500                           
  3501                           ;TeTeclat.c: 55:    if (files==0) {
  3502  000DA6  5041               	movf	TeTeclat@files^0,w,c
  3503  000DA8  A4D8               	btfss	status,2,c
  3504  000DAA  D008               	goto	l4804
  3505                           
  3506                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3507  000DAC  988C               	bcf	140,4,c	;volatile
  3508                           
  3509                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3510  000DAE  9A8C               	bcf	140,5,c	;volatile
  3511                           
  3512                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3513  000DB0  8C8C               	bsf	140,6,c	;volatile
  3514                           
  3515                           ;TeTeclat.c: 59:     cols=2;
  3516  000DB2  0E02               	movlw	2
  3517  000DB4  6E42               	movwf	TeTeclat@cols^0,c
  3518                           
  3519                           ;TeTeclat.c: 60:     state = 0;
  3520  000DB6  0E00               	movlw	0
  3521  000DB8  6E43               	movwf	TeTeclat@state^0,c
  3522                           
  3523                           ;TeTeclat.c: 61:    }
  3524  000DBA  0012               	return	
  3525  000DBC                     l4804:
  3526  000DBC  5041               	movf	TeTeclat@files^0,w,c
  3527  000DBE  B4D8               	btfsc	status,2,c
  3528  000DC0  0012               	return	
  3529                           
  3530                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3531  000DC2  5044               	movf	_tiTeclat^0,w,c
  3532  000DC4  EC2E  F00B         	call	_TiResetTics
  3533  000DC8  D7D4               	goto	l4776
  3534  000DCA                     l4810:
  3535                           
  3536                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3537  000DCA  5044               	movf	_tiTeclat^0,w,c
  3538  000DCC  ECD2  F00A         	call	_TiGetTics
  3539  000DD0  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  3540  000DD2  0012               	return	
  3541  000DD4  D7CE               	goto	l4776
  3542  000DD6                     l4814:
  3543                           
  3544                           ;TeTeclat.c: 73:    if (files==0) {
  3545  000DD6  5041               	movf	TeTeclat@files^0,w,c
  3546  000DD8  A4D8               	btfss	status,2,c
  3547  000DDA  D003               	goto	l4818
  3548                           
  3549                           ;TeTeclat.c: 74:     state = 1;
  3550  000DDC  0E01               	movlw	1
  3551  000DDE  6E43               	movwf	TeTeclat@state^0,c
  3552                           
  3553                           ;TeTeclat.c: 75:    }
  3554  000DE0  0012               	return	
  3555  000DE2                     l4818:
  3556  000DE2  5041               	movf	TeTeclat@files^0,w,c
  3557  000DE4  B4D8               	btfsc	status,2,c
  3558  000DE6  0012               	return	
  3559                           
  3560                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3561  000DE8  5041               	movf	TeTeclat@files^0,w,c
  3562  000DEA  0D03               	mullw	3
  3563  000DEC  50F3               	movf	243,w,c
  3564  000DEE  0F7D               	addlw	low (_teclaPremuda+253)
  3565  000DF0  2442               	addwf	TeTeclat@cols^0,w,c
  3566  000DF2  6ED9               	movwf	fsr2l,c
  3567  000DF4  6ADA               	clrf	fsr2h,c
  3568  000DF6  50DF               	movf	indf2,w,c
  3569  000DF8  EC8D  F00B         	call	_MsetNovaTecla
  3570                           
  3571                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3572  000DFC  5041               	movf	TeTeclat@files^0,w,c
  3573  000DFE  0D03               	mullw	3
  3574  000E00  50F3               	movf	243,w,c
  3575  000E02  0F7D               	addlw	low (_teclaPremuda+253)
  3576  000E04  2442               	addwf	TeTeclat@cols^0,w,c
  3577  000E06  6ED9               	movwf	fsr2l,c
  3578  000E08  6ADA               	clrf	fsr2h,c
  3579  000E0A  50DF               	movf	indf2,w,c
  3580  000E0C  EC89  F00B         	call	_SsetNovaTecla
  3581  000E10  D7B0               	goto	l4776
  3582  000E12                     l4824:
  3583                           
  3584                           ;TeTeclat.c: 84:    if (files==0) {
  3585  000E12  5041               	movf	TeTeclat@files^0,w,c
  3586  000E14  A4D8               	btfss	status,2,c
  3587  000E16  0012               	return	
  3588                           
  3589                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3590  000E18  5044               	movf	_tiTeclat^0,w,c
  3591  000E1A  EC2E  F00B         	call	_TiResetTics
  3592  000E1E  D7A9               	goto	l4776
  3593  000E20                     l4830:
  3594                           
  3595                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3596  000E20  5044               	movf	_tiTeclat^0,w,c
  3597  000E22  ECD2  F00A         	call	_TiGetTics
  3598  000E26  D7D4               	goto	L2
  3599  000E28                     l4834:
  3600                           
  3601                           ;TeTeclat.c: 95:    if (files!=0) {
  3602  000E28  5041               	movf	TeTeclat@files^0,w,c
  3603  000E2A  B4D8               	btfsc	status,2,c
  3604  000E2C  D003               	goto	l4838
  3605                           
  3606                           ;TeTeclat.c: 96:     state = 5;
  3607  000E2E  0E05               	movlw	5
  3608  000E30  6E43               	movwf	TeTeclat@state^0,c
  3609                           
  3610                           ;TeTeclat.c: 97:    }
  3611  000E32  0012               	return	
  3612  000E34                     l4838:
  3613  000E34  5041               	movf	TeTeclat@files^0,w,c
  3614  000E36  A4D8               	btfss	status,2,c
  3615  000E38  0012               	return	
  3616                           
  3617                           ;TeTeclat.c: 99:     state = 0;
  3618  000E3A  0E00               	movlw	0
  3619  000E3C  6E43               	movwf	TeTeclat@state^0,c
  3620  000E3E  0012               	return	
  3621  000E40                     l4844:
  3622  000E40  5043               	movf	TeTeclat@state^0,w,c
  3623  000E42  6E73               	movwf	??_TeTeclat^0,c
  3624  000E44  6A74               	clrf	(??_TeTeclat+1)^0,c
  3625                           
  3626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 1, Range of values is 0 to 0
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte            4     3 (average)
  3632                           ;	Chosen strategy is simple_byte
  3633  000E46  5074               	movf	(??_TeTeclat+1)^0,w,c
  3634  000E48  0A00               	xorlw	0	; case 0
  3635  000E4A  A4D8               	btfss	status,2,c
  3636  000E4C  0012               	return	
  3637                           
  3638                           ; Switch size 1, requested type "simple"
  3639                           ; Number of cases is 8, Range of values is 0 to 7
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           25    13 (average)
  3643                           ;	Chosen strategy is simple_byte
  3644  000E4E  5073               	movf	??_TeTeclat^0,w,c
  3645  000E50  0A00               	xorlw	0	; case 0
  3646  000E52  B4D8               	btfsc	status,2,c
  3647  000E54  D786               	goto	l4770
  3648  000E56  0A01               	xorlw	1	; case 1
  3649  000E58  B4D8               	btfsc	status,2,c
  3650  000E5A  D796               	goto	l4784
  3651  000E5C  0A03               	xorlw	3	; case 2
  3652  000E5E  B4D8               	btfsc	status,2,c
  3653  000E60  D7A2               	goto	l4798
  3654  000E62  0A01               	xorlw	1	; case 3
  3655  000E64  B4D8               	btfsc	status,2,c
  3656  000E66  D7B1               	goto	l4810
  3657  000E68  0A07               	xorlw	7	; case 4
  3658  000E6A  B4D8               	btfsc	status,2,c
  3659  000E6C  D7B4               	goto	l4814
  3660  000E6E  0A01               	xorlw	1	; case 5
  3661  000E70  B4D8               	btfsc	status,2,c
  3662  000E72  D7CF               	goto	l4824
  3663  000E74  0A03               	xorlw	3	; case 6
  3664  000E76  B4D8               	btfsc	status,2,c
  3665  000E78  D7D3               	goto	l4830
  3666  000E7A  0A01               	xorlw	1	; case 7
  3667  000E7C  A4D8               	btfss	status,2,c
  3668  000E7E  0012               	return	
  3669  000E80  D7D3               	goto	l4834
  3670  000E82                     __end_of_TeTeclat:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _SsetNovaTecla *****************
  3674 ;; Defined at:
  3675 ;;		line 135 in file "Ssms.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  tecla           1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  tecla           1    5[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1
  3689 ;;      Params:         0       0       0
  3690 ;;      Locals:         1       0       0
  3691 ;;      Temps:          0       0       0
  3692 ;;      Totals:         1       0       0
  3693 ;;Total ram usage:        1 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_TeTeclat
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text25
  3704  001712                     __ptext25:
  3705                           	callstack 0
  3706  001712                     _SsetNovaTecla:
  3707                           	callstack 27
  3708                           
  3709                           ;incstack = 0
  3710                           ;SsetNovaTecla@tecla stored from wreg
  3711  001712  6E6C               	movwf	SsetNovaTecla@tecla^0,c
  3712                           
  3713                           ;Ssms.c: 136:     novaTecla = tecla;
  3714  001714  C06C  F065         	movff	SsetNovaTecla@tecla,_novaTecla
  3715  001718  0012               	return		;funcret
  3716  00171A                     __end_of_SsetNovaTecla:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _MsetNovaTecla *****************
  3720 ;; Defined at:
  3721 ;;		line 20 in file "Menu.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  tecla           1    wreg     unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  tecla           1    5[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1
  3735 ;;      Params:         0       0       0
  3736 ;;      Locals:         1       0       0
  3737 ;;      Temps:          0       0       0
  3738 ;;      Totals:         1       0       0
  3739 ;;Total ram usage:        1 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 2
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_TeTeclat
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text26
  3750  00171A                     __ptext26:
  3751                           	callstack 0
  3752  00171A                     _MsetNovaTecla:
  3753                           	callstack 27
  3754                           
  3755                           ;incstack = 0
  3756                           ;MsetNovaTecla@tecla stored from wreg
  3757  00171A  6E6C               	movwf	MsetNovaTecla@tecla^0,c
  3758                           
  3759                           ;Menu.c: 21:     NovaTecla = tecla;
  3760  00171C  C06C  F062         	movff	MsetNovaTecla@tecla,_NovaTecla
  3761  001720  0012               	return		;funcret
  3762  001722                     __end_of_MsetNovaTecla:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _TeInit *****************
  3766 ;; Defined at:
  3767 ;;		line 18 in file "TeTeclat.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1
  3781 ;;      Params:         0       0       0
  3782 ;;      Locals:         0       0       0
  3783 ;;      Temps:          0       0       0
  3784 ;;      Totals:         0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 3
  3788 ;; This function calls:
  3789 ;;		_TiGetTimer
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text27
  3796  001722                     __ptext27:
  3797                           	callstack 0
  3798  001722                     _TeInit:
  3799                           	callstack 27
  3800                           
  3801                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3802                           
  3803                           ;incstack = 0
  3804  001722  EC50  F00A         	call	_TiGetTimer	;wreg free
  3805  001726  6E44               	movwf	_tiTeclat^0,c
  3806  001728  0012               	return		;funcret
  3807  00172A                     __end_of_TeInit:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _Sinit *****************
  3811 ;; Defined at:
  3812 ;;		line 16 in file "Ssms.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1
  3826 ;;      Params:         0       0       0
  3827 ;;      Locals:         0       0       0
  3828 ;;      Temps:          0       0       0
  3829 ;;      Totals:         0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 3
  3833 ;; This function calls:
  3834 ;;		_TiGetTimer
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text28
  3841  00172A                     __ptext28:
  3842                           	callstack 0
  3843  00172A                     _Sinit:
  3844                           	callstack 27
  3845                           
  3846                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3847                           
  3848                           ;incstack = 0
  3849  00172A  EC50  F00A         	call	_TiGetTimer	;wreg free
  3850  00172E  6E64               	movwf	_timerSMS^0,c
  3851  001730  0012               	return		;funcret
  3852  001732                     __end_of_Sinit:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function _SMotor *****************
  3856 ;; Defined at:
  3857 ;;		line 20 in file "Ssms.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1
  3871 ;;      Params:         0       0       0
  3872 ;;      Locals:         0       0       0
  3873 ;;      Temps:          2       0       0
  3874 ;;      Totals:         2       0       0
  3875 ;;Total ram usage:        2 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 3
  3878 ;; This function calls:
  3879 ;;		_MNovaLletra
  3880 ;;		_TiGetTics
  3881 ;;		_TiResetTics
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text29
  3888  000990                     __ptext29:
  3889                           	callstack 0
  3890  000990                     _SMotor:
  3891                           	callstack 27
  3892                           
  3893                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3894                           
  3895                           ;incstack = 0
  3896  000990  D0EA               	goto	l4288
  3897  000992                     l4122:
  3898                           
  3899                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3900  000992  2865               	incf	_novaTecla^0,w,c
  3901  000994  A4D8               	btfss	status,2,c
  3902  000996  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3903  000998  D006               	goto	l4130
  3904                           
  3905                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3906  00099A  5064               	movf	_timerSMS^0,w,c
  3907  00099C  EC2E  F00B         	call	_TiResetTics
  3908                           
  3909                           ;Ssms.c: 27:     state = 3;
  3910  0009A0  0E03               	movlw	3
  3911  0009A2  6E45               	movwf	SMotor@state^0,c
  3912                           
  3913                           ;Ssms.c: 28:    }
  3914  0009A4  0012               	return	
  3915  0009A6                     l4130:
  3916  0009A6  2865               	incf	_novaTecla^0,w,c
  3917  0009A8  A4D8               	btfss	status,2,c
  3918  0009AA  0012               	return	
  3919  0009AC  5064               	movf	_timerSMS^0,w,c
  3920  0009AE  ECD2  F00A         	call	_TiGetTics
  3921  0009B2  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  3922  0009B4  0012               	return	
  3923  0009B6  0E5A               	movlw	90
  3924  0009B8  5C6C               	subwf	?_TiGetTics^0,w,c
  3925  0009BA  0E02               	movlw	2
  3926  0009BC  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  3927  0009BE  A0D8               	btfss	status,0,c
  3928  0009C0  0012               	return	
  3929  0009C2  2866               	incf	_lletraASCII^0,w,c
  3930  0009C4  B4D8               	btfsc	status,2,c
  3931  0009C6  0012               	return	
  3932  0009C8  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3933  0009CA  0012               	return	
  3934                           
  3935                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3936  0009CC  5066               	movf	_lletraASCII^0,w,c
  3937  0009CE  EC99  F00B         	call	_MNovaLletra
  3938                           
  3939                           ;Ssms.c: 31:     lletraASCII = -1;
  3940  0009D2  6866               	setf	_lletraASCII^0,c
  3941                           
  3942                           ;Ssms.c: 32:     ultimaTecla = -1;
  3943  0009D4  6863               	setf	_ultimaTecla^0,c
  3944  0009D6                     l4144:
  3945                           
  3946                           ;Ssms.c: 33:     state = 0;
  3947  0009D6  0E00               	movlw	0
  3948  0009D8  6E45               	movwf	SMotor@state^0,c
  3949  0009DA  0012               	return	
  3950  0009DC                     l4146:
  3951                           
  3952                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3953  0009DC  5063               	movf	_ultimaTecla^0,w,c
  3954  0009DE  1865               	xorwf	_novaTecla^0,w,c
  3955  0009E0  A4D8               	btfss	status,2,c
  3956  0009E2  D018               	goto	l4162
  3957  0009E4  5064               	movf	_timerSMS^0,w,c
  3958  0009E6  ECD2  F00A         	call	_TiGetTics
  3959  0009EA  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  3960  0009EC  D006               	goto	u4230
  3961  0009EE  0E5A               	movlw	90
  3962  0009F0  5C6C               	subwf	?_TiGetTics^0,w,c
  3963  0009F2  0E02               	movlw	2
  3964  0009F4  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  3965  0009F6  B0D8               	btfsc	status,0,c
  3966  0009F8  D00D               	goto	l4162
  3967  0009FA                     u4230:
  3968                           
  3969                           ;Ssms.c: 38:     novaTecla = -1;
  3970  0009FA  6865               	setf	_novaTecla^0,c
  3971                           
  3972                           ;Ssms.c: 39:     sumaPulsacions++;
  3973  0009FC  2A46               	incf	_sumaPulsacions^0,f,c
  3974                           
  3975                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  3976  0009FE  0E30               	movlw	48
  3977  000A00  1866               	xorwf	_lletraASCII^0,w,c
  3978  000A02  B4D8               	btfsc	status,2,c
  3979  000A04  D004               	goto	l4160
  3980  000A06  0E20               	movlw	32
  3981  000A08  1866               	xorwf	_lletraASCII^0,w,c
  3982  000A0A  A4D8               	btfss	status,2,c
  3983                           
  3984                           ;Ssms.c: 41:       lletraASCII++;
  3985  000A0C  2A66               	incf	_lletraASCII^0,f,c
  3986  000A0E                     l4160:
  3987                           
  3988                           ;Ssms.c: 43:     state = 2;
  3989  000A0E  0E02               	movlw	2
  3990  000A10  6E45               	movwf	SMotor@state^0,c
  3991                           
  3992                           ;Ssms.c: 44:    }
  3993  000A12  0012               	return	
  3994  000A14                     l4162:
  3995  000A14  2865               	incf	_novaTecla^0,w,c
  3996  000A16  B4D8               	btfsc	status,2,c
  3997  000A18  0012               	return	
  3998  000A1A  5063               	movf	_ultimaTecla^0,w,c
  3999  000A1C  1865               	xorwf	_novaTecla^0,w,c
  4000  000A1E  B4D8               	btfsc	status,2,c
  4001  000A20  0012               	return	
  4002                           
  4003                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  4004  000A22  5066               	movf	_lletraASCII^0,w,c
  4005  000A24  EC99  F00B         	call	_MNovaLletra
  4006                           
  4007                           ;Ssms.c: 47:     if(novaTecla == 0){
  4008  000A28  5065               	movf	_novaTecla^0,w,c
  4009  000A2A  A4D8               	btfss	status,2,c
  4010  000A2C  D007               	goto	l4176
  4011                           
  4012                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  4013  000A2E  0446               	decf	_sumaPulsacions^0,w,c
  4014  000A30  A4D8               	btfss	status,2,c
  4015  000A32  D002               	goto	l4174
  4016  000A34  0E30               	movlw	48
  4017  000A36  D007               	goto	L3
  4018  000A38                     l4174:
  4019  000A38  0E20               	movlw	32
  4020  000A3A  D005               	goto	L3
  4021  000A3C                     l4176:
  4022                           
  4023                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  4024  000A3C  5065               	movf	_novaTecla^0,w,c
  4025  000A3E  0F53               	addlw	low (_lletraInici+254)
  4026  000A40  6ED9               	movwf	fsr2l,c
  4027  000A42  6ADA               	clrf	fsr2h,c
  4028  000A44  50DF               	movf	indf2,w,c
  4029  000A46                     L3:
  4030  000A46  6E66               	movwf	_lletraASCII^0,c
  4031                           
  4032                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  4033  000A48  C065  F063         	movff	_novaTecla,_ultimaTecla
  4034                           
  4035                           ;Ssms.c: 54:     sumaPulsacions = 0;
  4036  000A4C  0E00               	movlw	0
  4037  000A4E  6E46               	movwf	_sumaPulsacions^0,c
  4038  000A50                     l4182:
  4039                           
  4040                           ;Ssms.c: 55:     novaTecla = -1;
  4041  000A50  6865               	setf	_novaTecla^0,c
  4042  000A52  D7C1               	goto	l4144
  4043  000A54                     l4186:
  4044                           
  4045                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  4046  000A54  0E07               	movlw	7
  4047  000A56  1863               	xorwf	_ultimaTecla^0,w,c
  4048  000A58  B4D8               	btfsc	status,2,c
  4049  000A5A  D00A               	goto	l4194
  4050  000A5C  0E09               	movlw	9
  4051  000A5E  1863               	xorwf	_ultimaTecla^0,w,c
  4052  000A60  B4D8               	btfsc	status,2,c
  4053  000A62  D006               	goto	l4194
  4054  000A64  5063               	movf	_ultimaTecla^0,w,c
  4055  000A66  B4D8               	btfsc	status,2,c
  4056  000A68  D003               	goto	l4194
  4057                           
  4058                           ;Ssms.c: 61:     state = 5;
  4059  000A6A  0E05               	movlw	5
  4060  000A6C  6E45               	movwf	SMotor@state^0,c
  4061                           
  4062                           ;Ssms.c: 62:    }
  4063  000A6E  0012               	return	
  4064  000A70                     l4194:
  4065  000A70  0E07               	movlw	7
  4066  000A72  1863               	xorwf	_ultimaTecla^0,w,c
  4067  000A74  B4D8               	btfsc	status,2,c
  4068  000A76  D004               	goto	u4340
  4069  000A78  0E09               	movlw	9
  4070  000A7A  1863               	xorwf	_ultimaTecla^0,w,c
  4071  000A7C  A4D8               	btfss	status,2,c
  4072  000A7E  D003               	goto	l4200
  4073  000A80                     u4340:
  4074                           
  4075                           ;Ssms.c: 64:     state = 6;
  4076  000A80  0E06               	movlw	6
  4077  000A82  6E45               	movwf	SMotor@state^0,c
  4078                           
  4079                           ;Ssms.c: 65:    }
  4080  000A84  0012               	return	
  4081  000A86                     l4200:
  4082  000A86  5063               	movf	_ultimaTecla^0,w,c
  4083  000A88  A4D8               	btfss	status,2,c
  4084  000A8A  0012               	return	
  4085                           
  4086                           ;Ssms.c: 67:     state = 7;
  4087  000A8C  0E07               	movlw	7
  4088  000A8E  6E45               	movwf	SMotor@state^0,c
  4089  000A90  0012               	return	
  4090  000A92                     l4204:
  4091                           
  4092                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  4093  000A92  5065               	movf	_novaTecla^0,w,c
  4094  000A94  0A80               	xorlw	128
  4095  000A96  0F7E               	addlw	-130
  4096  000A98  B0D8               	btfsc	status,0,c
  4097  000A9A  D003               	goto	u4370
  4098  000A9C  5065               	movf	_novaTecla^0,w,c
  4099  000A9E  A4D8               	btfss	status,2,c
  4100  000AA0  D008               	goto	l4212
  4101  000AA2                     u4370:
  4102  000AA2  5065               	movf	_novaTecla^0,w,c
  4103  000AA4  0A80               	xorlw	128
  4104  000AA6  0F76               	addlw	-138
  4105  000AA8  B0D8               	btfsc	status,0,c
  4106  000AAA  D003               	goto	l4212
  4107                           
  4108                           ;Ssms.c: 72:     state = 1;
  4109  000AAC  0E01               	movlw	1
  4110  000AAE  6E45               	movwf	SMotor@state^0,c
  4111                           
  4112                           ;Ssms.c: 73:    }
  4113  000AB0  0012               	return	
  4114  000AB2                     l4212:
  4115  000AB2  5065               	movf	_novaTecla^0,w,c
  4116  000AB4  0A80               	xorlw	128
  4117  000AB6  0F7E               	addlw	-130
  4118  000AB8  B0D8               	btfsc	status,0,c
  4119  000ABA  D008               	goto	l4222
  4120  000ABC  2866               	incf	_lletraASCII^0,w,c
  4121  000ABE  A4D8               	btfss	status,2,c
  4122  000AC0  D005               	goto	l4222
  4123                           
  4124                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  4125  000AC2  5065               	movf	_novaTecla^0,w,c
  4126  000AC4  0F30               	addlw	48
  4127  000AC6  EC99  F00B         	call	_MNovaLletra
  4128  000ACA  D7C2               	goto	l4182
  4129  000ACC                     l4222:
  4130  000ACC  5065               	movf	_novaTecla^0,w,c
  4131  000ACE  0A80               	xorlw	128
  4132  000AD0  0F7E               	addlw	-130
  4133  000AD2  B0D8               	btfsc	status,0,c
  4134  000AD4  0012               	return	
  4135  000AD6  2866               	incf	_lletraASCII^0,w,c
  4136  000AD8  B4D8               	btfsc	status,2,c
  4137  000ADA  0012               	return	
  4138                           
  4139                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  4140  000ADC  5066               	movf	_lletraASCII^0,w,c
  4141  000ADE  EC99  F00B         	call	_MNovaLletra
  4142                           
  4143                           ;Ssms.c: 81:     lletraASCII = -1;
  4144  000AE2  6866               	setf	_lletraASCII^0,c
  4145                           
  4146                           ;Ssms.c: 82:     state = 4;
  4147  000AE4  0E04               	movlw	4
  4148  000AE6  6E45               	movwf	SMotor@state^0,c
  4149  000AE8  0012               	return	
  4150  000AEA                     l4232:
  4151                           
  4152                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  4153  000AEA  5065               	movf	_novaTecla^0,w,c
  4154  000AEC  0F30               	addlw	48
  4155  000AEE  EC99  F00B         	call	_MNovaLletra
  4156  000AF2  D7AE               	goto	l4182
  4157  000AF4                     l4238:
  4158                           
  4159                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  4160  000AF4  0E04               	movlw	4
  4161  000AF6  1846               	xorwf	_sumaPulsacions^0,w,c
  4162  000AF8  A4D8               	btfss	status,2,c
  4163  000AFA  D009               	goto	l4246
  4164  000AFC                     u4430:
  4165                           
  4166                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  4167  000AFC  5063               	movf	_ultimaTecla^0,w,c
  4168  000AFE  0F53               	addlw	low (_lletraInici+254)
  4169  000B00  6ED9               	movwf	fsr2l,c
  4170  000B02  6ADA               	clrf	fsr2h,c
  4171  000B04  50DF               	movf	indf2,w,c
  4172  000B06  6E66               	movwf	_lletraASCII^0,c
  4173                           
  4174                           ;Ssms.c: 93:     sumaPulsacions = 0;
  4175  000B08  0E00               	movlw	0
  4176  000B0A  6E46               	movwf	_sumaPulsacions^0,c
  4177  000B0C  D764               	goto	l4144
  4178  000B0E                     l4246:
  4179  000B0E  0E03               	movlw	3
  4180  000B10  1846               	xorwf	_sumaPulsacions^0,w,c
  4181  000B12  A4D8               	btfss	status,2,c
  4182  000B14  D004               	goto	l4252
  4183  000B16                     u4440:
  4184                           
  4185                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  4186  000B16  5063               	movf	_ultimaTecla^0,w,c
  4187  000B18  0F30               	addlw	48
  4188  000B1A  6E66               	movwf	_lletraASCII^0,c
  4189  000B1C  D75C               	goto	l4144
  4190  000B1E                     l4252:
  4191  000B1E  0E03               	movlw	3
  4192  000B20                     L4:
  4193  000B20  6046               	cpfslt	_sumaPulsacions^0,c
  4194  000B22  0012               	return	
  4195  000B24  D758               	goto	l4144
  4196  000B26                     l4256:
  4197                           
  4198                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  4199  000B26  0E04               	movlw	4
  4200  000B28  1846               	xorwf	_sumaPulsacions^0,w,c
  4201  000B2A  B4D8               	btfsc	status,2,c
  4202  000B2C  D7F4               	goto	u4440
  4203  000B2E  0E05               	movlw	5
  4204  000B30  1846               	xorwf	_sumaPulsacions^0,w,c
  4205  000B32  B4D8               	btfsc	status,2,c
  4206  000B34  D7E3               	goto	u4430
  4207  000B36  0E04               	movlw	4
  4208  000B38  D7F3               	goto	L4
  4209  000B3A                     l4274:
  4210                           
  4211                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  4212  000B3A  0E02               	movlw	2
  4213  000B3C  1846               	xorwf	_sumaPulsacions^0,w,c
  4214  000B3E  A4D8               	btfss	status,2,c
  4215  000B40  D005               	goto	l4278
  4216                           
  4217                           ;Ssms.c: 120:     lletraASCII = ' ';
  4218  000B42  0E20               	movlw	32
  4219  000B44  6E66               	movwf	_lletraASCII^0,c
  4220                           
  4221                           ;Ssms.c: 121:     state = 0;
  4222  000B46  0E00               	movlw	0
  4223  000B48  6E45               	movwf	SMotor@state^0,c
  4224                           
  4225                           ;Ssms.c: 122:    }
  4226  000B4A  0012               	return	
  4227  000B4C                     l4278:
  4228  000B4C  0E03               	movlw	3
  4229  000B4E  1846               	xorwf	_sumaPulsacions^0,w,c
  4230  000B50  A4D8               	btfss	status,2,c
  4231  000B52  D007               	goto	l4282
  4232                           
  4233                           ;Ssms.c: 124:     lletraASCII = '0';
  4234  000B54  0E30               	movlw	48
  4235  000B56  6E66               	movwf	_lletraASCII^0,c
  4236                           
  4237                           ;Ssms.c: 125:     sumaPulsacions = 0;
  4238  000B58  0E00               	movlw	0
  4239  000B5A  6E46               	movwf	_sumaPulsacions^0,c
  4240                           
  4241                           ;Ssms.c: 126:     state = 0;
  4242  000B5C  0E00               	movlw	0
  4243  000B5E  6E45               	movwf	SMotor@state^0,c
  4244                           
  4245                           ;Ssms.c: 127:    }
  4246  000B60  0012               	return	
  4247  000B62                     l4282:
  4248  000B62  0E02               	movlw	2
  4249  000B64  D7DD               	goto	L4
  4250  000B66                     l4288:
  4251  000B66  5045               	movf	SMotor@state^0,w,c
  4252  000B68  6E73               	movwf	??_SMotor^0,c
  4253  000B6A  6A74               	clrf	(??_SMotor+1)^0,c
  4254                           
  4255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4256                           ; Switch size 1, requested type "simple"
  4257                           ; Number of cases is 1, Range of values is 0 to 0
  4258                           ; switch strategies available:
  4259                           ; Name         Instructions Cycles
  4260                           ; simple_byte            4     3 (average)
  4261                           ;	Chosen strategy is simple_byte
  4262  000B6C  5074               	movf	(??_SMotor+1)^0,w,c
  4263  000B6E  0A00               	xorlw	0	; case 0
  4264  000B70  A4D8               	btfss	status,2,c
  4265  000B72  0012               	return	
  4266                           
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 8, Range of values is 0 to 7
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte           25    13 (average)
  4272                           ;	Chosen strategy is simple_byte
  4273  000B74  5073               	movf	??_SMotor^0,w,c
  4274  000B76  0A00               	xorlw	0	; case 0
  4275  000B78  B4D8               	btfsc	status,2,c
  4276  000B7A  D70B               	goto	l4122
  4277  000B7C  0A01               	xorlw	1	; case 1
  4278  000B7E  B4D8               	btfsc	status,2,c
  4279  000B80  D72D               	goto	l4146
  4280  000B82  0A03               	xorlw	3	; case 2
  4281  000B84  B4D8               	btfsc	status,2,c
  4282  000B86  D766               	goto	l4186
  4283  000B88  0A01               	xorlw	1	; case 3
  4284  000B8A  B4D8               	btfsc	status,2,c
  4285  000B8C  D782               	goto	l4204
  4286  000B8E  0A07               	xorlw	7	; case 4
  4287  000B90  B4D8               	btfsc	status,2,c
  4288  000B92  D7AB               	goto	l4232
  4289  000B94  0A01               	xorlw	1	; case 5
  4290  000B96  B4D8               	btfsc	status,2,c
  4291  000B98  D7AD               	goto	l4238
  4292  000B9A  0A03               	xorlw	3	; case 6
  4293  000B9C  B4D8               	btfsc	status,2,c
  4294  000B9E  D7C3               	goto	l4256
  4295  000BA0  0A01               	xorlw	1	; case 7
  4296  000BA2  A4D8               	btfss	status,2,c
  4297  000BA4  0012               	return	
  4298  000BA6  D7C9               	goto	l4274
  4299  000BA8                     __end_of_SMotor:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _MNovaLletra *****************
  4303 ;; Defined at:
  4304 ;;		line 24 in file "Menu.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  lletra          1    wreg     unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  lletra          1    5[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1
  4318 ;;      Params:         0       0       0
  4319 ;;      Locals:         1       0       0
  4320 ;;      Temps:          0       0       0
  4321 ;;      Totals:         1       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 2
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_SMotor
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text30
  4333  001732                     __ptext30:
  4334                           	callstack 0
  4335  001732                     _MNovaLletra:
  4336                           	callstack 27
  4337                           
  4338                           ;incstack = 0
  4339                           ;MNovaLletra@lletra stored from wreg
  4340  001732  6E6C               	movwf	MNovaLletra@lletra^0,c
  4341                           
  4342                           ;Menu.c: 25:     novaLletra = lletra;
  4343  001734  C06C  F061         	movff	MNovaLletra@lletra,_novaLletra
  4344  001738  0012               	return		;funcret
  4345  00173A                     __end_of_MNovaLletra:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _Minit *****************
  4349 ;; Defined at:
  4350 ;;		line 17 in file "Menu.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1
  4364 ;;      Params:         0       0       0
  4365 ;;      Locals:         0       0       0
  4366 ;;      Temps:          0       0       0
  4367 ;;      Totals:         0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 3
  4371 ;; This function calls:
  4372 ;;		_TiGetTimer
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text31
  4379  00173A                     __ptext31:
  4380                           	callstack 0
  4381  00173A                     _Minit:
  4382                           	callstack 27
  4383                           
  4384                           ;Menu.c: 18:     timerMenu = TiGetTimer();
  4385                           
  4386                           ;incstack = 0
  4387  00173A  EC50  F00A         	call	_TiGetTimer	;wreg free
  4388  00173E  6E3E               	movwf	_timerMenu^0,c
  4389  001740  0012               	return		;funcret
  4390  001742                     __end_of_Minit:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _LcLCD *****************
  4394 ;; Defined at:
  4395 ;;		line 244 in file "LcTLCD.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1
  4409 ;;      Params:         0       0       0
  4410 ;;      Locals:         0       0       0
  4411 ;;      Temps:          0       0       0
  4412 ;;      Totals:         0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; Hardware stack levels required when called: 6
  4416 ;; This function calls:
  4417 ;;		_LcPutChar
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text32
  4424  00127E                     __ptext32:
  4425                           	callstack 0
  4426  00127E                     _LcLCD:
  4427                           	callstack 24
  4428                           
  4429                           ;LcTLCD.c: 245:     if(nou_s == 1){
  4430                           
  4431                           ;incstack = 0
  4432  00127E  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4433  001280  0012               	return	
  4434                           
  4435                           ;LcTLCD.c: 246:         LcPutChar(*s_ptr);
  4436  001282  C024  FFF6         	movff	_s_ptr,tblptrl
  4437  001286  C025  FFF7         	movff	_s_ptr+1,tblptrh
  4438  00128A  6AF8               	clrf	tblptru,c
  4439  00128C  0E01               	movlw	(high __ramtop+-1)
  4440  00128E  64F7               	cpfsgt	tblptrh,c
  4441  001290  D003               	bra	u4137
  4442  001292  0008               	tblrd		*
  4443  001294  50F5               	movf	tablat,w,c
  4444  001296  D005               	bra	u4130
  4445  001298                     u4137:
  4446  001298  CFF6 FFE1          	movff	tblptrl,fsr1l
  4447  00129C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4448  0012A0  50E7               	movf	indf1,w,c
  4449  0012A2                     u4130:
  4450  0012A2  EC9B  F009         	call	_LcPutChar
  4451                           
  4452                           ;LcTLCD.c: 247:         s_ptr++;
  4453  0012A6  4A24               	infsnz	_s_ptr^0,f,c
  4454  0012A8  2A25               	incf	(_s_ptr+1)^0,f,c
  4455                           
  4456                           ;LcTLCD.c: 248:         if(*s_ptr == '\0'){
  4457  0012AA  C024  FFF6         	movff	_s_ptr,tblptrl
  4458  0012AE  C025  FFF7         	movff	_s_ptr+1,tblptrh
  4459  0012B2  6AF8               	clrf	tblptru,c
  4460  0012B4  0E01               	movlw	(high __ramtop+-1)
  4461  0012B6  64F7               	cpfsgt	tblptrh,c
  4462  0012B8  D003               	bra	u4147
  4463  0012BA  0008               	tblrd		*
  4464  0012BC  50F5               	movf	tablat,w,c
  4465  0012BE  D005               	bra	u4140
  4466  0012C0                     u4147:
  4467  0012C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4468  0012C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4469  0012C8  50E7               	movf	indf1,w,c
  4470  0012CA                     u4140:
  4471  0012CA  0900               	iorlw	0
  4472  0012CC  A4D8               	btfss	status,2,c
  4473  0012CE  0012               	return	
  4474                           
  4475                           ;LcTLCD.c: 249:             nou_s = 0;
  4476  0012D0  9E79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4477                           
  4478                           ;LcTLCD.c: 250:             s_ptr=0;
  4479  0012D2  0E00               	movlw	0
  4480  0012D4  6E24               	movwf	_s_ptr^0,c
  4481  0012D6  0E00               	movlw	0
  4482  0012D8  6E25               	movwf	(_s_ptr+1)^0,c
  4483  0012DA  0012               	return		;funcret
  4484  0012DC                     __end_of_LcLCD:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _LcInit *****************
  4488 ;; Defined at:
  4489 ;;		line 41 in file "LcTLCD.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  rows            1    wreg     unsigned char 
  4492 ;;  columns         1   16[COMRAM] unsigned char 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  rows            1    0[BANK0 ] unsigned char 
  4495 ;;  i               2    1[BANK0 ] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1
  4505 ;;      Params:         1       0       0
  4506 ;;      Locals:         0       3       0
  4507 ;;      Temps:          0       0       0
  4508 ;;      Totals:         1       3       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 5
  4512 ;; This function calls:
  4513 ;;		_CantaIR
  4514 ;;		_EscriuPrimeraOrdre
  4515 ;;		_Espera
  4516 ;;		_LcCursorOff
  4517 ;;		_TiGetTimer
  4518 ;;		_WaitForBusy
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text33
  4525  000E82                     __ptext33:
  4526                           	callstack 0
  4527  000E82                     _LcInit:
  4528                           	callstack 25
  4529                           
  4530                           ;incstack = 0
  4531                           ;LcInit@rows stored from wreg
  4532  000E82  0100               	movlb	0	; () banked
  4533  000E84  6F8C               	movwf	LcInit@rows& (0+255),b
  4534                           
  4535                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4536  000E86  EC50  F00A         	call	_TiGetTimer	;wreg free
  4537  000E8A  6E47               	movwf	_Timer^0,c
  4538                           
  4539                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4540  000E8C  C08C  F04B         	movff	LcInit@rows,_Rows
  4541  000E90  C077  F04A         	movff	LcInit@columns,_Columns
  4542                           
  4543                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4544  000E94  0E00               	movlw	0
  4545  000E96  6E48               	movwf	_ColumnAct^0,c
  4546  000E98  C048  F049         	movff	_ColumnAct,_RowAct
  4547                           
  4548                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4549  000E9C  9894               	bcf	148,4,c	;volatile
  4550  000E9E  9E95               	bcf	149,7,c	;volatile
  4551  000EA0  9A94               	bcf	148,5,c	;volatile
  4552                           
  4553                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4554  000EA2  0E00               	movlw	0
  4555  000EA4  0100               	movlb	0	; () banked
  4556  000EA6  6F8E               	movwf	(LcInit@i+1)& (0+255),b
  4557  000EA8  0E00               	movlw	0
  4558  000EAA  6F8D               	movwf	LcInit@i& (0+255),b
  4559  000EAC                     l4070:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4563  000EAC  0E00               	movlw	0
  4564  000EAE  6E74               	movwf	(Espera@ms+1)^0,c
  4565  000EB0  0E64               	movlw	100
  4566  000EB2  6E73               	movwf	Espera@ms^0,c
  4567  000EB4  5047               	movf	_Timer^0,w,c
  4568  000EB6  EC0C  F00B         	call	_Espera
  4569                           
  4570                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4571  000EBA  0E03               	movlw	3
  4572  000EBC  EC66  F008         	call	_EscriuPrimeraOrdre
  4573                           
  4574                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4575  000EC0  0E00               	movlw	0
  4576  000EC2  6E74               	movwf	(Espera@ms+1)^0,c
  4577  000EC4  0E05               	movlw	5
  4578  000EC6  6E73               	movwf	Espera@ms^0,c
  4579  000EC8  5047               	movf	_Timer^0,w,c
  4580  000ECA  EC0C  F00B         	call	_Espera
  4581                           
  4582                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4583  000ECE  0E03               	movlw	3
  4584  000ED0  EC66  F008         	call	_EscriuPrimeraOrdre
  4585                           
  4586                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4587  000ED4  0E00               	movlw	0
  4588  000ED6  6E74               	movwf	(Espera@ms+1)^0,c
  4589  000ED8  0E01               	movlw	1
  4590  000EDA  6E73               	movwf	Espera@ms^0,c
  4591  000EDC  5047               	movf	_Timer^0,w,c
  4592  000EDE  EC0C  F00B         	call	_Espera
  4593                           
  4594                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4595  000EE2  0E03               	movlw	3
  4596  000EE4  EC66  F008         	call	_EscriuPrimeraOrdre
  4597                           
  4598                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4599  000EE8  0E00               	movlw	0
  4600  000EEA  6E74               	movwf	(Espera@ms+1)^0,c
  4601  000EEC  0E01               	movlw	1
  4602  000EEE  6E73               	movwf	Espera@ms^0,c
  4603  000EF0  5047               	movf	_Timer^0,w,c
  4604  000EF2  EC0C  F00B         	call	_Espera
  4605                           
  4606                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4607  000EF6  0E02               	movlw	2
  4608  000EF8  EC66  F008         	call	_EscriuPrimeraOrdre
  4609                           
  4610                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4611  000EFC  0E00               	movlw	0
  4612  000EFE  6E74               	movwf	(Espera@ms+1)^0,c
  4613  000F00  0E04               	movlw	4
  4614  000F02  6E73               	movwf	Espera@ms^0,c
  4615  000F04  5047               	movf	_Timer^0,w,c
  4616  000F06  EC0C  F00B         	call	_Espera
  4617                           
  4618                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4619  000F0A  0E28               	movlw	40
  4620  000F0C  ECA2  F00A         	call	_CantaIR
  4621                           
  4622                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4623  000F10  EC30  F00A         	call	_WaitForBusy	;wreg free
  4624  000F14  0E08               	movlw	8
  4625  000F16  ECA2  F00A         	call	_CantaIR
  4626                           
  4627                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4628  000F1A  EC30  F00A         	call	_WaitForBusy	;wreg free
  4629  000F1E  0E01               	movlw	1
  4630  000F20  ECA2  F00A         	call	_CantaIR
  4631                           
  4632                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4633  000F24  0E00               	movlw	0
  4634  000F26  6E74               	movwf	(Espera@ms+1)^0,c
  4635  000F28  0E03               	movlw	3
  4636  000F2A  6E73               	movwf	Espera@ms^0,c
  4637  000F2C  5047               	movf	_Timer^0,w,c
  4638  000F2E  EC0C  F00B         	call	_Espera
  4639                           
  4640                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4641  000F32  EC30  F00A         	call	_WaitForBusy	;wreg free
  4642  000F36  0E06               	movlw	6
  4643  000F38  ECA2  F00A         	call	_CantaIR
  4644                           
  4645                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4646  000F3C  EC30  F00A         	call	_WaitForBusy	;wreg free
  4647  000F40  0E0F               	movlw	15
  4648  000F42  ECA2  F00A         	call	_CantaIR
  4649                           
  4650                           ;LcTLCD.c: 74:  }
  4651  000F46  0100               	movlb	0	; () banked
  4652  000F48  4B8D               	infsnz	LcInit@i& (0+255),f,b
  4653  000F4A  2B8E               	incf	(LcInit@i+1)& (0+255),f,b
  4654                           
  4655                           ; BSR set to: 0
  4656  000F4C  BF8E               	btfsc	(LcInit@i+1)& (0+255),7,b
  4657  000F4E  D7AE               	goto	l4070
  4658  000F50  518E               	movf	(LcInit@i+1)& (0+255),w,b
  4659  000F52  E104               	bnz	u4110
  4660  000F54  0E02               	movlw	2
  4661  000F56  5D8D               	subwf	LcInit@i& (0+255),w,b
  4662  000F58  A0D8               	btfss	status,0,c
  4663  000F5A  D7A8               	goto	l4070
  4664  000F5C                     u4110:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;LcTLCD.c: 79:     LcCursorOff();
  4668  000F5C  EC6F  F00B         	call	_LcCursorOff	;wreg free
  4669  000F60  0012               	return		;funcret
  4670  000F62                     __end_of_LcInit:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _LcCursorOff *****************
  4674 ;; Defined at:
  4675 ;;		line 97 in file "LcTLCD.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 3F/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1
  4689 ;;      Params:         0       0       0
  4690 ;;      Locals:         0       0       0
  4691 ;;      Temps:          0       0       0
  4692 ;;      Totals:         0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 4
  4696 ;; This function calls:
  4697 ;;		_CantaIR
  4698 ;;		_WaitForBusy
  4699 ;; This function is called by:
  4700 ;;		_LcInit
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text34
  4705  0016DE                     __ptext34:
  4706                           	callstack 0
  4707  0016DE                     _LcCursorOff:
  4708                           	callstack 25
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;LcTLCD.c: 100:  WaitForBusy();
  4712                           
  4713                           ;incstack = 0
  4714  0016DE  EC30  F00A         	call	_WaitForBusy	;wreg free
  4715                           
  4716                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4717  0016E2  0E0C               	movlw	12
  4718  0016E4  ECA2  F00A         	call	_CantaIR
  4719  0016E8  0012               	return		;funcret
  4720  0016EA                     __end_of_LcCursorOff:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _EscriuPrimeraOrdre *****************
  4724 ;; Defined at:
  4725 ;;		line 228 in file "LcTLCD.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  ordre           1    wreg     unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  ordre           1    6[COMRAM] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1
  4739 ;;      Params:         0       0       0
  4740 ;;      Locals:         1       0       0
  4741 ;;      Temps:          1       0       0
  4742 ;;      Totals:         2       0       0
  4743 ;;Total ram usage:        2 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_LcInit
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text35
  4754  0010CC                     __ptext35:
  4755                           	callstack 0
  4756  0010CC                     _EscriuPrimeraOrdre:
  4757                           	callstack 27
  4758                           
  4759                           ;incstack = 0
  4760                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4761  0010CC  6E6D               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4762                           
  4763                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4764  0010CE  9694               	bcf	148,3,c	;volatile
  4765  0010D0  9494               	bcf	148,2,c	;volatile
  4766  0010D2  9294               	bcf	148,1,c	;volatile
  4767  0010D4  9094               	bcf	148,0,c	;volatile
  4768  0010D6  9A8B               	bcf	139,5,c	;volatile
  4769  0010D8  9E8C               	bcf	140,7,c	;volatile
  4770                           
  4771                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4772  0010DA  888B               	bsf	139,4,c	;volatile
  4773  0010DC  888B               	bsf	139,4,c	;volatile
  4774                           
  4775                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4776  0010DE  A66D               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4777  0010E0  D003               	goto	u3980
  4778  0010E2  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4779  0010E4  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  4780  0010E6  D001               	goto	u3998
  4781  0010E8                     u3980:
  4782  0010E8  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4783  0010EA                     u3998:
  4784  0010EA  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4785  0010EC  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4786  0010EE  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4787  0010F0  508B               	movf	139,w,c	;volatile
  4788  0010F2  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4789  0010F4  0BF7               	andlw	-9
  4790  0010F6  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4791  0010F8  6E8B               	movwf	139,c	;volatile
  4792                           
  4793                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4794  0010FA  A46D               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4795  0010FC  D003               	goto	u4000
  4796  0010FE  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4797  001100  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  4798  001102  D001               	goto	u4018
  4799  001104                     u4000:
  4800  001104  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4801  001106                     u4018:
  4802  001106  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4803  001108  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4804  00110A  508B               	movf	139,w,c	;volatile
  4805  00110C  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4806  00110E  0BFB               	andlw	-5
  4807  001110  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4808  001112  6E8B               	movwf	139,c	;volatile
  4809                           
  4810                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4811  001114  A26D               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4812  001116  D003               	goto	u4020
  4813  001118  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4814  00111A  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  4815  00111C  D001               	goto	u4038
  4816  00111E                     u4020:
  4817  00111E  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4818  001120                     u4038:
  4819  001120  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4820  001122  508B               	movf	139,w,c	;volatile
  4821  001124  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4822  001126  0BFD               	andlw	-3
  4823  001128  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4824  00112A  6E8B               	movwf	139,c	;volatile
  4825                           
  4826                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4827  00112C  A06D               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4828  00112E  D003               	goto	u4040
  4829  001130  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4830  001132  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  4831  001134  D001               	goto	u4058
  4832  001136                     u4040:
  4833  001136  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  4834  001138                     u4058:
  4835  001138  508B               	movf	139,w,c	;volatile
  4836  00113A  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4837  00113C  0BFE               	andlw	-2
  4838  00113E  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4839  001140  6E8B               	movwf	139,c	;volatile
  4840                           
  4841                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4842  001142  988B               	bcf	139,4,c	;volatile
  4843  001144  0012               	return		;funcret
  4844  001146                     __end_of_EscriuPrimeraOrdre:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _GLCDMotor *****************
  4848 ;; Defined at:
  4849 ;;		line 36 in file "GestioLCD.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1
  4863 ;;      Params:         0       0       0
  4864 ;;      Locals:         0       0       0
  4865 ;;      Temps:          2       0       0
  4866 ;;      Totals:         2       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 6
  4870 ;; This function calls:
  4871 ;;		_LcClear
  4872 ;;		_LcGotoXY
  4873 ;;		_LcLliure
  4874 ;;		_LcNewString
  4875 ;;		_LcPutChar
  4876 ;;		_TiGetTics
  4877 ;;		_TiResetTics
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text36
  4884  0002BE                     __ptext36:
  4885                           	callstack 0
  4886  0002BE                     _GLCDMotor:
  4887                           	callstack 24
  4888                           
  4889                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  4890                           
  4891                           ;incstack = 0
  4892  0002BE  D1B7               	goto	l4762
  4893  0002C0                     l4576:
  4894                           
  4895                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  4896  0002C0  0E11               	movlw	17
  4897  0002C2  6027               	cpfslt	GLCDMotor@length1^0,c
  4898  0002C4  D017               	goto	l4586
  4899  0002C6  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4900  0002C8  D015               	goto	l4586
  4901                           
  4902                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  4903  0002CA  0E00               	movlw	0
  4904  0002CC  6E74               	movwf	LcGotoXY@Row^0,c
  4905  0002CE  0E00               	movlw	0
  4906  0002D0  EC0F  F00A         	call	_LcGotoXY
  4907                           
  4908                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  4909  0002D4  502E               	movf	_menuDaltGLCD^0,w,c
  4910  0002D6  0D1D               	mullw	29
  4911  0002D8  50F3               	movf	243,w,c
  4912  0002DA  0F01               	addlw	low _menuList
  4913  0002DC  6E77               	movwf	??_GLCDMotor^0,c
  4914  0002DE  C077  F06F         	movff	??_GLCDMotor,LcNewString@new_s
  4915  0002E2  506F               	movf	LcNewString@new_s^0,w,c
  4916  0002E4  A4D8               	btfss	status,2,c
  4917  0002E6  0E02               	movlw	high __smallconst
  4918  0002E8  6E70               	movwf	(LcNewString@new_s+1)^0,c
  4919  0002EA  EC75  F00B         	call	_LcNewString	;wreg free
  4920                           
  4921                           ;GestioLCD.c: 53:     state = 5;
  4922  0002EE  0E05               	movlw	5
  4923  0002F0  6E2D               	movwf	GLCDMotor@state^0,c
  4924                           
  4925                           ;GestioLCD.c: 54:    }
  4926  0002F2  0012               	return	
  4927  0002F4                     l4586:
  4928  0002F4  0E10               	movlw	16
  4929  0002F6  6427               	cpfsgt	GLCDMotor@length1^0,c
  4930  0002F8  0012               	return	
  4931  0002FA  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4932  0002FC  0012               	return	
  4933  0002FE                     u4910:
  4934                           
  4935                           ;GestioLCD.c: 56:     state++;
  4936  0002FE  2A2D               	incf	GLCDMotor@state^0,f,c
  4937  000300  0012               	return	
  4938  000302                     l4592:
  4939                           
  4940                           ;GestioLCD.c: 60:    if (j>=16) {
  4941  000302  0E0F               	movlw	15
  4942  000304  642C               	cpfsgt	GLCDMotor@j^0,c
  4943  000306  D02B               	goto	l4606
  4944                           
  4945                           ;GestioLCD.c: 61:     min1++;
  4946  000308  2A2B               	incf	GLCDMotor@min1^0,f,c
  4947                           
  4948                           ;GestioLCD.c: 62:     max1++;
  4949  00030A  2A5F               	incf	GLCDMotor@max1^0,f,c
  4950                           
  4951                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  4952  00030C  502E               	movf	_menuDaltGLCD^0,w,c
  4953  00030E  0D1D               	mullw	29
  4954  000310  50F3               	movf	243,w,c
  4955  000312  0F01               	addlw	low _menuList
  4956  000314  245F               	addwf	GLCDMotor@max1^0,w,c
  4957  000316  6E77               	movwf	??_GLCDMotor^0,c
  4958  000318  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  4959  00031C                     	if	1	;There is more than 1 active tblptr byte
  4960  00031C  0E02               	movlw	high __smallconst
  4961  00031E  6EF7               	movwf	tblptrh,c
  4962  000320                     	endif
  4963  000320                     	if	0	;tblptru may be non-zero
  4964  000320                     	endif
  4965  000320                     	if	0	;tblptru may be non-zero
  4966  000320                     	endif
  4967  000320  0008               	tblrd		*
  4968  000322  50F5               	movf	tablat,w,c
  4969  000324  0900               	iorlw	0
  4970  000326  A4D8               	btfss	status,2,c
  4971  000328  D002               	goto	l4600
  4972  00032A  0E00               	movlw	0
  4973  00032C  6E5F               	movwf	GLCDMotor@max1^0,c
  4974  00032E                     l4600:
  4975                           
  4976                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  4977  00032E  502E               	movf	_menuDaltGLCD^0,w,c
  4978  000330  0D1D               	mullw	29
  4979  000332  50F3               	movf	243,w,c
  4980  000334  0F01               	addlw	low _menuList
  4981  000336  242B               	addwf	GLCDMotor@min1^0,w,c
  4982  000338  6E77               	movwf	??_GLCDMotor^0,c
  4983  00033A  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  4984  00033E                     	if	1	;There is more than 1 active tblptr byte
  4985  00033E  0E02               	movlw	high __smallconst
  4986  000340  6EF7               	movwf	tblptrh,c
  4987  000342                     	endif
  4988  000342                     	if	0	;tblptru may be non-zero
  4989  000342                     	endif
  4990  000342                     	if	0	;tblptru may be non-zero
  4991  000342                     	endif
  4992  000342  0008               	tblrd		*
  4993  000344  50F5               	movf	tablat,w,c
  4994  000346  0900               	iorlw	0
  4995  000348  A4D8               	btfss	status,2,c
  4996  00034A  D002               	goto	l746
  4997  00034C  0E00               	movlw	0
  4998  00034E  6E2B               	movwf	GLCDMotor@min1^0,c
  4999  000350                     l746:
  5000                           
  5001                           ;GestioLCD.c: 65:     j=0;
  5002  000350  0E00               	movlw	0
  5003  000352  6E2C               	movwf	GLCDMotor@j^0,c
  5004                           
  5005                           ;GestioLCD.c: 66:     k1=min1;
  5006  000354  C02B  F029         	movff	GLCDMotor@min1,GLCDMotor@k1
  5007                           
  5008                           ;GestioLCD.c: 67:     state = 6;
  5009  000358  0E06               	movlw	6
  5010  00035A  6E2D               	movwf	GLCDMotor@state^0,c
  5011                           
  5012                           ;GestioLCD.c: 68:    }
  5013  00035C  0012               	return	
  5014  00035E                     l4606:
  5015  00035E  0E10               	movlw	16
  5016  000360  602C               	cpfslt	GLCDMotor@j^0,c
  5017  000362  0012               	return	
  5018                           
  5019                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  5020  000364  0E00               	movlw	0
  5021  000366  6E74               	movwf	LcGotoXY@Row^0,c
  5022  000368  502C               	movf	GLCDMotor@j^0,w,c
  5023  00036A  EC0F  F00A         	call	_LcGotoXY
  5024                           
  5025                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  5026  00036E  502E               	movf	_menuDaltGLCD^0,w,c
  5027  000370  0D1D               	mullw	29
  5028  000372  50F3               	movf	243,w,c
  5029  000374  0F01               	addlw	low _menuList
  5030  000376  2429               	addwf	GLCDMotor@k1^0,w,c
  5031  000378  6E77               	movwf	??_GLCDMotor^0,c
  5032  00037A  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5033  00037E                     	if	1	;There is more than 1 active tblptr byte
  5034  00037E  0E02               	movlw	high __smallconst
  5035  000380  6EF7               	movwf	tblptrh,c
  5036  000382                     	endif
  5037  000382                     	if	0	;tblptru may be non-zero
  5038  000382                     	endif
  5039  000382                     	if	0	;tblptru may be non-zero
  5040  000382                     	endif
  5041  000382  0008               	tblrd		*
  5042  000384  50F5               	movf	tablat,w,c
  5043  000386  EC9B  F009         	call	_LcPutChar
  5044                           
  5045                           ;GestioLCD.c: 72:     j++;
  5046  00038A  2A2C               	incf	GLCDMotor@j^0,f,c
  5047                           
  5048                           ;GestioLCD.c: 73:     k1++;
  5049  00038C  2A29               	incf	GLCDMotor@k1^0,f,c
  5050                           
  5051                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  5052  00038E  502E               	movf	_menuDaltGLCD^0,w,c
  5053  000390  0D1D               	mullw	29
  5054  000392  50F3               	movf	243,w,c
  5055  000394  0F01               	addlw	low _menuList
  5056  000396  2429               	addwf	GLCDMotor@k1^0,w,c
  5057  000398  6E77               	movwf	??_GLCDMotor^0,c
  5058  00039A  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5059  00039E                     	if	1	;There is more than 1 active tblptr byte
  5060  00039E  0E02               	movlw	high __smallconst
  5061  0003A0  6EF7               	movwf	tblptrh,c
  5062  0003A2                     	endif
  5063  0003A2                     	if	0	;tblptru may be non-zero
  5064  0003A2                     	endif
  5065  0003A2                     	if	0	;tblptru may be non-zero
  5066  0003A2                     	endif
  5067  0003A2  0008               	tblrd		*
  5068  0003A4  50F5               	movf	tablat,w,c
  5069  0003A6  0900               	iorlw	0
  5070  0003A8  A4D8               	btfss	status,2,c
  5071  0003AA  0012               	return	
  5072  0003AC  0E00               	movlw	0
  5073  0003AE  6E29               	movwf	GLCDMotor@k1^0,c
  5074  0003B0  0012               	return	
  5075  0003B2                     l4620:
  5076                           
  5077                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  5078  0003B2  0E04               	movlw	4
  5079  0003B4  602E               	cpfslt	_menuDaltGLCD^0,c
  5080  0003B6  D012               	goto	u5010
  5081  0003B8  D7A2               	goto	u4910
  5082  0003BA                     u4980:
  5083                           
  5084                           ;GestioLCD.c: 82:     state = 0;
  5085  0003BA  0E00               	movlw	0
  5086  0003BC  6E2D               	movwf	GLCDMotor@state^0,c
  5087  0003BE  0012               	return	
  5088  0003C0                     l4628:
  5089                           
  5090                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  5091  0003C0  EC7B  F00B         	call	_LcLliure	;wreg free
  5092  0003C4  A0D8               	btfss	status,0,c
  5093  0003C6  D006               	goto	l4634
  5094  0003C8  0E04               	movlw	4
  5095  0003CA  602E               	cpfslt	_menuDaltGLCD^0,c
  5096  0003CC  D003               	goto	l4634
  5097                           
  5098                           ;GestioLCD.c: 87:     state = 7;
  5099  0003CE  0E07               	movlw	7
  5100  0003D0  6E2D               	movwf	GLCDMotor@state^0,c
  5101                           
  5102                           ;GestioLCD.c: 88:    }
  5103  0003D2  0012               	return	
  5104  0003D4                     l4634:
  5105  0003D4  EC7B  F00B         	call	_LcLliure	;wreg free
  5106  0003D8  A0D8               	btfss	status,0,c
  5107  0003DA  0012               	return	
  5108  0003DC                     u5010:
  5109  0003DC  0E03               	movlw	3
  5110  0003DE  642E               	cpfsgt	_menuDaltGLCD^0,c
  5111  0003E0  0012               	return	
  5112  0003E2  D7EB               	goto	u4980
  5113  0003E4                     l758:
  5114                           
  5115                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  5116  0003E4  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5117  0003E6  0012               	return	
  5118  0003E8  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5119  0003EA  0012               	return	
  5120                           
  5121                           ;GestioLCD.c: 95:     length1 = 0;
  5122  0003EC  0E00               	movlw	0
  5123  0003EE  6E27               	movwf	GLCDMotor@length1^0,c
  5124                           
  5125                           ;GestioLCD.c: 96:     length2 = 0;
  5126  0003F0  0E00               	movlw	0
  5127  0003F2  6E26               	movwf	GLCDMotor@length2^0,c
  5128                           
  5129                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  5130  0003F4  0E00               	movlw	0
  5131  0003F6  6E74               	movwf	LcGotoXY@Row^0,c
  5132  0003F8  0E00               	movlw	0
  5133  0003FA  EC0F  F00A         	call	_LcGotoXY
  5134                           
  5135                           ;GestioLCD.c: 98:     min1 = 0;
  5136  0003FE  0E00               	movlw	0
  5137  000400  6E2B               	movwf	GLCDMotor@min1^0,c
  5138                           
  5139                           ;GestioLCD.c: 99:     max1 = 15;
  5140  000402  0E0F               	movlw	15
  5141  000404  6E5F               	movwf	GLCDMotor@max1^0,c
  5142                           
  5143                           ;GestioLCD.c: 100:     min2 = 0;
  5144  000406  0E00               	movlw	0
  5145  000408  6E2A               	movwf	GLCDMotor@min2^0,c
  5146                           
  5147                           ;GestioLCD.c: 101:     max2 = 15;
  5148  00040A  0E0F               	movlw	15
  5149  00040C  6E5E               	movwf	GLCDMotor@max2^0,c
  5150                           
  5151                           ;GestioLCD.c: 102:     j = 0;
  5152  00040E  0E00               	movlw	0
  5153  000410  6E2C               	movwf	GLCDMotor@j^0,c
  5154                           
  5155                           ;GestioLCD.c: 103:     k1 = 0;
  5156  000412  0E00               	movlw	0
  5157  000414  6E29               	movwf	GLCDMotor@k1^0,c
  5158                           
  5159                           ;GestioLCD.c: 104:     k2 = 0;
  5160  000416  0E00               	movlw	0
  5161  000418  6E28               	movwf	GLCDMotor@k2^0,c
  5162                           
  5163                           ;GestioLCD.c: 105:     newString = 0;
  5164  00041A  9079               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  5165  00041C  D770               	goto	u4910
  5166  00041E                     l4664:
  5167                           
  5168                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  5169  00041E  502E               	movf	_menuDaltGLCD^0,w,c
  5170  000420  0D1D               	mullw	29
  5171  000422  50F3               	movf	243,w,c
  5172  000424  0F01               	addlw	low _menuList
  5173  000426  2427               	addwf	GLCDMotor@length1^0,w,c
  5174  000428  6E77               	movwf	??_GLCDMotor^0,c
  5175  00042A  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5176  00042E                     	if	1	;There is more than 1 active tblptr byte
  5177  00042E  0E02               	movlw	high __smallconst
  5178  000430  6EF7               	movwf	tblptrh,c
  5179  000432                     	endif
  5180  000432                     	if	0	;tblptru may be non-zero
  5181  000432                     	endif
  5182  000432                     	if	0	;tblptru may be non-zero
  5183  000432                     	endif
  5184  000432  0008               	tblrd		*
  5185  000434  50F5               	movf	tablat,w,c
  5186  000436  0900               	iorlw	0
  5187  000438  A4D8               	btfss	status,2,c
  5188  00043A  D004               	goto	l4670
  5189  00043C  0E03               	movlw	3
  5190  00043E  642E               	cpfsgt	_menuDaltGLCD^0,c
  5191  000440  D001               	goto	l4670
  5192  000442  D75D               	goto	u4910
  5193  000444                     l4670:
  5194  000444  502E               	movf	_menuDaltGLCD^0,w,c
  5195  000446  0D1D               	mullw	29
  5196  000448  50F3               	movf	243,w,c
  5197  00044A  0F01               	addlw	low _menuList
  5198  00044C  2427               	addwf	GLCDMotor@length1^0,w,c
  5199  00044E  6E77               	movwf	??_GLCDMotor^0,c
  5200  000450  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5201  000454                     	if	1	;There is more than 1 active tblptr byte
  5202  000454  0E02               	movlw	high __smallconst
  5203  000456  6EF7               	movwf	tblptrh,c
  5204  000458                     	endif
  5205  000458                     	if	0	;tblptru may be non-zero
  5206  000458                     	endif
  5207  000458                     	if	0	;tblptru may be non-zero
  5208  000458                     	endif
  5209  000458  0008               	tblrd		*
  5210  00045A  50F5               	movf	tablat,w,c
  5211  00045C  0900               	iorlw	0
  5212  00045E  B4D8               	btfsc	status,2,c
  5213  000460  D002               	goto	l4674
  5214                           
  5215                           ;GestioLCD.c: 114:     length1++;
  5216  000462  2A27               	incf	GLCDMotor@length1^0,f,c
  5217                           
  5218                           ;GestioLCD.c: 115:    }
  5219  000464  0012               	return	
  5220  000466                     l4674:
  5221  000466  0E04               	movlw	4
  5222  000468  602E               	cpfslt	_menuDaltGLCD^0,c
  5223  00046A  0012               	return	
  5224  00046C  502E               	movf	_menuDaltGLCD^0,w,c
  5225  00046E  0D1D               	mullw	29
  5226  000470  50F3               	movf	243,w,c
  5227  000472  0F01               	addlw	low _menuList
  5228  000474  2427               	addwf	GLCDMotor@length1^0,w,c
  5229  000476  6E77               	movwf	??_GLCDMotor^0,c
  5230  000478  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5231  00047C                     	if	1	;There is more than 1 active tblptr byte
  5232  00047C  0E02               	movlw	high __smallconst
  5233  00047E  6EF7               	movwf	tblptrh,c
  5234  000480                     	endif
  5235  000480                     	if	0	;tblptru may be non-zero
  5236  000480                     	endif
  5237  000480                     	if	0	;tblptru may be non-zero
  5238  000480                     	endif
  5239  000480  0008               	tblrd		*
  5240  000482  50F5               	movf	tablat,w,c
  5241  000484  0900               	iorlw	0
  5242  000486  A4D8               	btfss	status,2,c
  5243  000488  0012               	return	
  5244                           
  5245                           ;GestioLCD.c: 117:     state = 13;
  5246  00048A  0E0D               	movlw	13
  5247  00048C  6E2D               	movwf	GLCDMotor@state^0,c
  5248  00048E  0012               	return	
  5249  000490                     l4680:
  5250                           
  5251                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  5252  000490  0E11               	movlw	17
  5253  000492  6026               	cpfslt	GLCDMotor@length2^0,c
  5254  000494  D019               	goto	l4690
  5255  000496  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5256  000498  D017               	goto	l4690
  5257                           
  5258                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  5259  00049A  0E01               	movlw	1
  5260  00049C  6E74               	movwf	LcGotoXY@Row^0,c
  5261  00049E  0E00               	movlw	0
  5262  0004A0  EC0F  F00A         	call	_LcGotoXY
  5263                           
  5264                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  5265  0004A4  502E               	movf	_menuDaltGLCD^0,w,c
  5266  0004A6  0D1D               	mullw	29
  5267  0004A8  CFF3 F077          	movff	prodl,??_GLCDMotor
  5268  0004AC  0E1D               	movlw	29
  5269  0004AE  2677               	addwf	??_GLCDMotor^0,f,c
  5270  0004B0  5077               	movf	??_GLCDMotor^0,w,c
  5271  0004B2  0F01               	addlw	low _menuList
  5272  0004B4  6E78               	movwf	(??_GLCDMotor+1)^0,c
  5273  0004B6  C078  F06F         	movff	??_GLCDMotor+1,LcNewString@new_s
  5274  0004BA  506F               	movf	LcNewString@new_s^0,w,c
  5275  0004BC  A4D8               	btfss	status,2,c
  5276  0004BE  0E02               	movlw	high __smallconst
  5277  0004C0  6E70               	movwf	(LcNewString@new_s+1)^0,c
  5278  0004C2  EC75  F00B         	call	_LcNewString	;wreg free
  5279  0004C6  D71B               	goto	u4910
  5280  0004C8                     l4690:
  5281  0004C8  0E10               	movlw	16
  5282  0004CA  6426               	cpfsgt	GLCDMotor@length2^0,c
  5283  0004CC  0012               	return	
  5284  0004CE  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5285  0004D0  0012               	return	
  5286                           
  5287                           ;GestioLCD.c: 127:     state = 9;
  5288  0004D2  0E09               	movlw	9
  5289  0004D4  6E2D               	movwf	GLCDMotor@state^0,c
  5290  0004D6  0012               	return	
  5291  0004D8                     l4696:
  5292                           
  5293                           ;GestioLCD.c: 131:    if (j<16) {
  5294  0004D8  0E10               	movlw	16
  5295  0004DA  602C               	cpfslt	GLCDMotor@j^0,c
  5296  0004DC  D02B               	goto	l4710
  5297                           
  5298                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  5299  0004DE  0E01               	movlw	1
  5300  0004E0  6E74               	movwf	LcGotoXY@Row^0,c
  5301  0004E2  502C               	movf	GLCDMotor@j^0,w,c
  5302  0004E4  EC0F  F00A         	call	_LcGotoXY
  5303                           
  5304                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  5305  0004E8  502E               	movf	_menuDaltGLCD^0,w,c
  5306  0004EA  0D1D               	mullw	29
  5307  0004EC  50F3               	movf	243,w,c
  5308  0004EE  0F01               	addlw	low _menuList
  5309  0004F0  2428               	addwf	GLCDMotor@k2^0,w,c
  5310  0004F2  6E77               	movwf	??_GLCDMotor^0,c
  5311  0004F4  0E1D               	movlw	29
  5312  0004F6  2677               	addwf	??_GLCDMotor^0,f,c
  5313  0004F8  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5314  0004FC                     	if	1	;There is more than 1 active tblptr byte
  5315  0004FC  0E02               	movlw	high __smallconst
  5316  0004FE  6EF7               	movwf	tblptrh,c
  5317  000500                     	endif
  5318  000500                     	if	0	;tblptru may be non-zero
  5319  000500                     	endif
  5320  000500                     	if	0	;tblptru may be non-zero
  5321  000500                     	endif
  5322  000500  0008               	tblrd		*
  5323  000502  50F5               	movf	tablat,w,c
  5324  000504  EC9B  F009         	call	_LcPutChar
  5325                           
  5326                           ;GestioLCD.c: 134:     j++;
  5327  000508  2A2C               	incf	GLCDMotor@j^0,f,c
  5328                           
  5329                           ;GestioLCD.c: 135:     k2++;
  5330  00050A  2A28               	incf	GLCDMotor@k2^0,f,c
  5331                           
  5332                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  5333  00050C  502E               	movf	_menuDaltGLCD^0,w,c
  5334  00050E  0D1D               	mullw	29
  5335  000510  50F3               	movf	243,w,c
  5336  000512  0F01               	addlw	low _menuList
  5337  000514  2428               	addwf	GLCDMotor@k2^0,w,c
  5338  000516  6E77               	movwf	??_GLCDMotor^0,c
  5339  000518  0E1D               	movlw	29
  5340  00051A  2677               	addwf	??_GLCDMotor^0,f,c
  5341  00051C  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5342  000520                     	if	1	;There is more than 1 active tblptr byte
  5343  000520  0E02               	movlw	high __smallconst
  5344  000522  6EF7               	movwf	tblptrh,c
  5345  000524                     	endif
  5346  000524                     	if	0	;tblptru may be non-zero
  5347  000524                     	endif
  5348  000524                     	if	0	;tblptru may be non-zero
  5349  000524                     	endif
  5350  000524  0008               	tblrd		*
  5351  000526  50F5               	movf	tablat,w,c
  5352  000528  0900               	iorlw	0
  5353  00052A  A4D8               	btfss	status,2,c
  5354  00052C  0012               	return	
  5355  00052E  0E00               	movlw	0
  5356  000530  6E28               	movwf	GLCDMotor@k2^0,c
  5357  000532  0012               	return	
  5358  000534                     l4710:
  5359  000534  0E0F               	movlw	15
  5360  000536  642C               	cpfsgt	GLCDMotor@j^0,c
  5361  000538  0012               	return	
  5362                           
  5363                           ;GestioLCD.c: 139:     min2++;
  5364  00053A  2A2A               	incf	GLCDMotor@min2^0,f,c
  5365                           
  5366                           ;GestioLCD.c: 140:     max2++;
  5367  00053C  2A5E               	incf	GLCDMotor@max2^0,f,c
  5368                           
  5369                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  5370  00053E  502E               	movf	_menuDaltGLCD^0,w,c
  5371  000540  0D1D               	mullw	29
  5372  000542  50F3               	movf	243,w,c
  5373  000544  0F01               	addlw	low _menuList
  5374  000546  245E               	addwf	GLCDMotor@max2^0,w,c
  5375  000548  6E77               	movwf	??_GLCDMotor^0,c
  5376  00054A  0E1D               	movlw	29
  5377  00054C  2677               	addwf	??_GLCDMotor^0,f,c
  5378  00054E  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5379  000552                     	if	1	;There is more than 1 active tblptr byte
  5380  000552  0E02               	movlw	high __smallconst
  5381  000554  6EF7               	movwf	tblptrh,c
  5382  000556                     	endif
  5383  000556                     	if	0	;tblptru may be non-zero
  5384  000556                     	endif
  5385  000556                     	if	0	;tblptru may be non-zero
  5386  000556                     	endif
  5387  000556  0008               	tblrd		*
  5388  000558  50F5               	movf	tablat,w,c
  5389  00055A  0900               	iorlw	0
  5390  00055C  A4D8               	btfss	status,2,c
  5391  00055E  D002               	goto	l4718
  5392  000560  0E00               	movlw	0
  5393  000562  6E5E               	movwf	GLCDMotor@max2^0,c
  5394  000564                     l4718:
  5395                           
  5396                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  5397  000564  502E               	movf	_menuDaltGLCD^0,w,c
  5398  000566  0D1D               	mullw	29
  5399  000568  50F3               	movf	243,w,c
  5400  00056A  0F01               	addlw	low _menuList
  5401  00056C  242A               	addwf	GLCDMotor@min2^0,w,c
  5402  00056E  6E77               	movwf	??_GLCDMotor^0,c
  5403  000570  0E1D               	movlw	29
  5404  000572  2677               	addwf	??_GLCDMotor^0,f,c
  5405  000574  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5406  000578                     	if	1	;There is more than 1 active tblptr byte
  5407  000578  0E02               	movlw	high __smallconst
  5408  00057A  6EF7               	movwf	tblptrh,c
  5409  00057C                     	endif
  5410  00057C                     	if	0	;tblptru may be non-zero
  5411  00057C                     	endif
  5412  00057C                     	if	0	;tblptru may be non-zero
  5413  00057C                     	endif
  5414  00057C  0008               	tblrd		*
  5415  00057E  50F5               	movf	tablat,w,c
  5416  000580  0900               	iorlw	0
  5417  000582  A4D8               	btfss	status,2,c
  5418  000584  D002               	goto	l776
  5419  000586  0E00               	movlw	0
  5420  000588  6E2A               	movwf	GLCDMotor@min2^0,c
  5421  00058A                     l776:
  5422                           
  5423                           ;GestioLCD.c: 143:     j=0;
  5424  00058A  0E00               	movlw	0
  5425  00058C  6E2C               	movwf	GLCDMotor@j^0,c
  5426                           
  5427                           ;GestioLCD.c: 144:     k2=min2;
  5428  00058E  C02A  F028         	movff	GLCDMotor@min2,GLCDMotor@k2
  5429  000592  D6B5               	goto	u4910
  5430  000594                     l4726:
  5431                           
  5432                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  5433  000594  502F               	movf	_timerGLCD^0,w,c
  5434  000596  ECD2  F00A         	call	_TiGetTics
  5435  00059A  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  5436  00059C  D00E               	goto	l778
  5437  00059E  0EB5               	movlw	181
  5438  0005A0  5C6C               	subwf	?_TiGetTics^0,w,c
  5439  0005A2  0E04               	movlw	4
  5440  0005A4  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  5441  0005A6  B0D8               	btfsc	status,0,c
  5442  0005A8  B079               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  5443  0005AA  D007               	goto	l778
  5444  0005AC  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5445  0005AE  D005               	goto	l778
  5446                           
  5447                           ;GestioLCD.c: 150:     LcClear();
  5448  0005B0  ECFA  F00A         	call	_LcClear	;wreg free
  5449  0005B4                     l4734:
  5450                           
  5451                           ;GestioLCD.c: 151:     state = 2;
  5452  0005B4  0E02               	movlw	2
  5453  0005B6  6E2D               	movwf	GLCDMotor@state^0,c
  5454                           
  5455                           ;GestioLCD.c: 152:    }
  5456  0005B8  0012               	return	
  5457  0005BA                     l778:
  5458  0005BA  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5459  0005BC  0012               	return	
  5460  0005BE  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5461  0005C0  0012               	return	
  5462                           
  5463                           ;GestioLCD.c: 154:     LcClear();
  5464  0005C2  ECFA  F00A         	call	_LcClear	;wreg free
  5465  0005C6  D6F9               	goto	u4980
  5466  0005C8                     l4742:
  5467                           
  5468                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  5469  0005C8  502F               	movf	_timerGLCD^0,w,c
  5470  0005CA  EC2E  F00B         	call	_TiResetTics
  5471  0005CE  D697               	goto	u4910
  5472  0005D0                     l4746:
  5473                           
  5474                           ;GestioLCD.c: 163:    if (LcLliure()) {
  5475  0005D0  EC7B  F00B         	call	_LcLliure	;wreg free
  5476  0005D4  A0D8               	btfss	status,0,c
  5477  0005D6  0012               	return	
  5478                           
  5479                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  5480  0005D8  502F               	movf	_timerGLCD^0,w,c
  5481  0005DA  EC2E  F00B         	call	_TiResetTics
  5482                           
  5483                           ;GestioLCD.c: 165:     state = 11;
  5484  0005DE  0E0B               	movlw	11
  5485  0005E0  6E2D               	movwf	GLCDMotor@state^0,c
  5486  0005E2  0012               	return	
  5487  0005E4                     l4752:
  5488                           
  5489                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  5490  0005E4  502E               	movf	_menuDaltGLCD^0,w,c
  5491  0005E6  0D1D               	mullw	29
  5492  0005E8  50F3               	movf	243,w,c
  5493  0005EA  0F01               	addlw	low _menuList
  5494  0005EC  2426               	addwf	GLCDMotor@length2^0,w,c
  5495  0005EE  6E77               	movwf	??_GLCDMotor^0,c
  5496  0005F0  0E1D               	movlw	29
  5497  0005F2  2677               	addwf	??_GLCDMotor^0,f,c
  5498  0005F4  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5499  0005F8                     	if	1	;There is more than 1 active tblptr byte
  5500  0005F8  0E02               	movlw	high __smallconst
  5501  0005FA  6EF7               	movwf	tblptrh,c
  5502  0005FC                     	endif
  5503  0005FC                     	if	0	;tblptru may be non-zero
  5504  0005FC                     	endif
  5505  0005FC                     	if	0	;tblptru may be non-zero
  5506  0005FC                     	endif
  5507  0005FC  0008               	tblrd		*
  5508  0005FE  50F5               	movf	tablat,w,c
  5509  000600  0900               	iorlw	0
  5510  000602  B4D8               	btfsc	status,2,c
  5511  000604  D002               	goto	l4756
  5512                           
  5513                           ;GestioLCD.c: 170:     length2++;
  5514  000606  2A26               	incf	GLCDMotor@length2^0,f,c
  5515                           
  5516                           ;GestioLCD.c: 171:    }
  5517  000608  0012               	return	
  5518  00060A                     l4756:
  5519  00060A  502E               	movf	_menuDaltGLCD^0,w,c
  5520  00060C  0D1D               	mullw	29
  5521  00060E  50F3               	movf	243,w,c
  5522  000610  0F01               	addlw	low _menuList
  5523  000612  2426               	addwf	GLCDMotor@length2^0,w,c
  5524  000614  6E77               	movwf	??_GLCDMotor^0,c
  5525  000616  0E1D               	movlw	29
  5526  000618  2677               	addwf	??_GLCDMotor^0,f,c
  5527  00061A  C077  FFF6         	movff	??_GLCDMotor,tblptrl
  5528  00061E                     	if	1	;There is more than 1 active tblptr byte
  5529  00061E  0E02               	movlw	high __smallconst
  5530  000620  6EF7               	movwf	tblptrh,c
  5531  000622                     	endif
  5532  000622                     	if	0	;tblptru may be non-zero
  5533  000622                     	endif
  5534  000622                     	if	0	;tblptru may be non-zero
  5535  000622                     	endif
  5536  000622  0008               	tblrd		*
  5537  000624  50F5               	movf	tablat,w,c
  5538  000626  0900               	iorlw	0
  5539  000628  A4D8               	btfss	status,2,c
  5540  00062A  0012               	return	
  5541  00062C  D7C3               	goto	l4734
  5542  00062E                     l4762:
  5543  00062E  502D               	movf	GLCDMotor@state^0,w,c
  5544  000630  6E77               	movwf	??_GLCDMotor^0,c
  5545  000632  6A78               	clrf	(??_GLCDMotor+1)^0,c
  5546                           
  5547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5548                           ; Switch size 1, requested type "simple"
  5549                           ; Number of cases is 1, Range of values is 0 to 0
  5550                           ; switch strategies available:
  5551                           ; Name         Instructions Cycles
  5552                           ; simple_byte            4     3 (average)
  5553                           ;	Chosen strategy is simple_byte
  5554  000634  5078               	movf	(??_GLCDMotor+1)^0,w,c
  5555  000636  0A00               	xorlw	0	; case 0
  5556  000638  A4D8               	btfss	status,2,c
  5557  00063A  0012               	return	
  5558                           
  5559                           ; Switch size 1, requested type "simple"
  5560                           ; Number of cases is 12, Range of values is 0 to 13
  5561                           ; switch strategies available:
  5562                           ; Name         Instructions Cycles
  5563                           ; simple_byte           37    19 (average)
  5564                           ;	Chosen strategy is simple_byte
  5565  00063C  5077               	movf	??_GLCDMotor^0,w,c
  5566  00063E  0A00               	xorlw	0	; case 0
  5567  000640  B4D8               	btfsc	status,2,c
  5568  000642  D6D0               	goto	l758
  5569  000644  0A01               	xorlw	1	; case 1
  5570  000646  B4D8               	btfsc	status,2,c
  5571  000648  D6EA               	goto	l4664
  5572  00064A  0A03               	xorlw	3	; case 2
  5573  00064C  B4D8               	btfsc	status,2,c
  5574  00064E  D638               	goto	l4576
  5575  000650  0A01               	xorlw	1	; case 3
  5576  000652  B4D8               	btfsc	status,2,c
  5577  000654  D656               	goto	l4592
  5578  000656  0A06               	xorlw	6	; case 5
  5579  000658  B4D8               	btfsc	status,2,c
  5580  00065A  D6B2               	goto	l4628
  5581  00065C  0A03               	xorlw	3	; case 6
  5582  00065E  B4D8               	btfsc	status,2,c
  5583  000660  D6A8               	goto	l4620
  5584  000662  0A01               	xorlw	1	; case 7
  5585  000664  B4D8               	btfsc	status,2,c
  5586  000666  D714               	goto	l4680
  5587  000668  0A0F               	xorlw	15	; case 8
  5588  00066A  B4D8               	btfsc	status,2,c
  5589  00066C  D7B1               	goto	l4746
  5590  00066E  0A01               	xorlw	1	; case 9
  5591  000670  B4D8               	btfsc	status,2,c
  5592  000672  D732               	goto	l4696
  5593  000674  0A03               	xorlw	3	; case 10
  5594  000676  B4D8               	btfsc	status,2,c
  5595  000678  D7A7               	goto	l4742
  5596  00067A  0A01               	xorlw	1	; case 11
  5597  00067C  B4D8               	btfsc	status,2,c
  5598  00067E  D78A               	goto	l4726
  5599  000680  0A06               	xorlw	6	; case 13
  5600  000682  A4D8               	btfss	status,2,c
  5601  000684  0012               	return	
  5602  000686  D7AE               	goto	l4752
  5603  000688                     __end_of_GLCDMotor:
  5604                           	callstack 0
  5605                           
  5606 ;; *************** function _LcPutChar *****************
  5607 ;; Defined at:
  5608 ;;		line 132 in file "LcTLCD.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  c               1    wreg     unsigned char 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  c               1   14[COMRAM] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1
  5622 ;;      Params:         0       0       0
  5623 ;;      Locals:         1       0       0
  5624 ;;      Temps:          0       0       0
  5625 ;;      Totals:         1       0       0
  5626 ;;Total ram usage:        1 bytes
  5627 ;; Hardware stack levels used: 1
  5628 ;; Hardware stack levels required when called: 5
  5629 ;; This function calls:
  5630 ;;		_CantaData
  5631 ;;		_LcGotoXY
  5632 ;;		_WaitForBusy
  5633 ;; This function is called by:
  5634 ;;		_LcLCD
  5635 ;;		_menu
  5636 ;;		_GLCDMotor
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text37
  5641  001336                     __ptext37:
  5642                           	callstack 0
  5643  001336                     _LcPutChar:
  5644                           	callstack 24
  5645                           
  5646                           ;incstack = 0
  5647                           ;LcPutChar@c stored from wreg
  5648  001336  6E75               	movwf	LcPutChar@c^0,c
  5649                           
  5650                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  5651  001338  EC30  F00A         	call	_WaitForBusy	;wreg free
  5652  00133C  5075               	movf	LcPutChar@c^0,w,c
  5653  00133E  EC89  F00A         	call	_CantaData
  5654                           
  5655                           ;LcTLCD.c: 136:  ++ColumnAct;
  5656  001342  2A48               	incf	_ColumnAct^0,f,c
  5657                           
  5658                           ;LcTLCD.c: 138:  if (Rows == 2) {
  5659  001344  0E02               	movlw	2
  5660  001346  184B               	xorwf	_Rows^0,w,c
  5661  001348  A4D8               	btfss	status,2,c
  5662  00134A  D010               	goto	l4046
  5663                           
  5664                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  5665  00134C  0E27               	movlw	39
  5666  00134E  6448               	cpfsgt	_ColumnAct^0,c
  5667  001350  D00D               	goto	l4046
  5668                           
  5669                           ;LcTLCD.c: 140:    ColumnAct = 0;
  5670  001352  0E00               	movlw	0
  5671  001354  6E48               	movwf	_ColumnAct^0,c
  5672                           
  5673                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  5674  001356  2A49               	incf	_RowAct^0,f,c
  5675  001358  0E01               	movlw	1
  5676  00135A  6449               	cpfsgt	_RowAct^0,c
  5677  00135C  D002               	goto	l4044
  5678  00135E  0E00               	movlw	0
  5679  001360  6E49               	movwf	_RowAct^0,c
  5680  001362                     l4044:
  5681                           
  5682                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  5683  001362  C049  F074         	movff	_RowAct,LcGotoXY@Row
  5684  001366  5048               	movf	_ColumnAct^0,w,c
  5685  001368  EC0F  F00A         	call	_LcGotoXY
  5686  00136C                     l4046:
  5687                           
  5688                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  5689  00136C  0449               	decf	_RowAct^0,w,c
  5690  00136E  A4D8               	btfss	status,2,c
  5691  001370  0012               	return	
  5692                           
  5693                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  5694  001372  0E27               	movlw	39
  5695  001374  6448               	cpfsgt	_ColumnAct^0,c
  5696  001376  D002               	goto	l4052
  5697  001378  0E00               	movlw	0
  5698  00137A  6E48               	movwf	_ColumnAct^0,c
  5699  00137C                     l4052:
  5700                           
  5701                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  5702  00137C  C049  F074         	movff	_RowAct,LcGotoXY@Row
  5703  001380  5048               	movf	_ColumnAct^0,w,c
  5704  001382  EC0F  F00A         	call	_LcGotoXY
  5705  001386  0012               	return		;funcret
  5706  001388                     __end_of_LcPutChar:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function _CantaData *****************
  5710 ;; Defined at:
  5711 ;;		line 194 in file "LcTLCD.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  Data            1    wreg     unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  Data            1    7[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1
  5725 ;;      Params:         0       0       0
  5726 ;;      Locals:         1       0       0
  5727 ;;      Temps:          0       0       0
  5728 ;;      Totals:         1       0       0
  5729 ;;Total ram usage:        1 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 3
  5732 ;; This function calls:
  5733 ;;		_CantaPartAlta
  5734 ;;		_CantaPartBaixa
  5735 ;; This function is called by:
  5736 ;;		_LcPutChar
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text38
  5741  001512                     __ptext38:
  5742                           	callstack 0
  5743  001512                     _CantaData:
  5744                           	callstack 25
  5745                           
  5746                           ;incstack = 0
  5747                           ;CantaData@Data stored from wreg
  5748  001512  6E6E               	movwf	CantaData@Data^0,c
  5749                           
  5750                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5751  001514  9694               	bcf	148,3,c	;volatile
  5752  001516  9494               	bcf	148,2,c	;volatile
  5753  001518  9294               	bcf	148,1,c	;volatile
  5754  00151A  9094               	bcf	148,0,c	;volatile
  5755                           
  5756                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  5757  00151C  8A8B               	bsf	139,5,c	;volatile
  5758                           
  5759                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  5760  00151E  9E8C               	bcf	140,7,c	;volatile
  5761                           
  5762                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  5763  001520  888B               	bsf	139,4,c	;volatile
  5764                           
  5765                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  5766  001522  506E               	movf	CantaData@Data^0,w,c
  5767  001524  EC0B  F009         	call	_CantaPartAlta
  5768                           
  5769                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  5770  001528  888B               	bsf	139,4,c	;volatile
  5771                           
  5772                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  5773  00152A  988B               	bcf	139,4,c	;volatile
  5774                           
  5775                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  5776  00152C  988B               	bcf	139,4,c	;volatile
  5777                           
  5778                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  5779  00152E  888B               	bsf	139,4,c	;volatile
  5780                           
  5781                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  5782  001530  506E               	movf	CantaData@Data^0,w,c
  5783  001532  ECD7  F008         	call	_CantaPartBaixa
  5784                           
  5785                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  5786  001536  888B               	bsf	139,4,c	;volatile
  5787                           
  5788                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  5789  001538  988B               	bcf	139,4,c	;volatile
  5790                           
  5791                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5792  00153A  8694               	bsf	148,3,c	;volatile
  5793  00153C  8494               	bsf	148,2,c	;volatile
  5794  00153E  8294               	bsf	148,1,c	;volatile
  5795  001540  8094               	bsf	148,0,c	;volatile
  5796  001542  0012               	return		;funcret
  5797  001544                     __end_of_CantaData:
  5798                           	callstack 0
  5799                           
  5800 ;; *************** function _LcNewString *****************
  5801 ;; Defined at:
  5802 ;;		line 239 in file "LcTLCD.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  5805 ;;		 -> menuList(145), usuaris.username(9), usuaris(184), STR_5(9), 
  5806 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1
  5818 ;;      Params:         2       0       0
  5819 ;;      Locals:         0       0       0
  5820 ;;      Temps:          0       0       0
  5821 ;;      Totals:         2       0       0
  5822 ;;Total ram usage:        2 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 2
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_menu
  5829 ;;		_GLCDMotor
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text39
  5834  0016EA                     __ptext39:
  5835                           	callstack 0
  5836  0016EA                     _LcNewString:
  5837                           	callstack 27
  5838                           
  5839                           ;LcTLCD.c: 240:     s_ptr = new_s;
  5840                           
  5841                           ;incstack = 0
  5842  0016EA  C06F  F024         	movff	LcNewString@new_s,_s_ptr
  5843  0016EE  C070  F025         	movff	LcNewString@new_s+1,_s_ptr+1
  5844                           
  5845                           ;LcTLCD.c: 241:     nou_s = 1;
  5846  0016F2  8E79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5847  0016F4  0012               	return		;funcret
  5848  0016F6                     __end_of_LcNewString:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _LcLliure *****************
  5852 ;; Defined at:
  5853 ;;		line 255 in file "LcTLCD.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;		None               void
  5860 ;; Registers used:
  5861 ;;		status,0
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1
  5867 ;;      Params:         0       0       0
  5868 ;;      Locals:         0       0       0
  5869 ;;      Temps:          0       0       0
  5870 ;;      Totals:         0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 2
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_menu
  5878 ;;		_GLCDMotor
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text40
  5883  0016F6                     __ptext40:
  5884                           	callstack 0
  5885  0016F6                     _LcLliure:
  5886                           	callstack 27
  5887                           
  5888                           ;LcTLCD.c: 256:     return !nou_s;
  5889                           
  5890                           ;incstack = 0
  5891  0016F6  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5892  0016F8  D002               	goto	l1630
  5893  0016FA  90D8               	bcf	status,0,c
  5894  0016FC  0012               	return	
  5895  0016FE                     l1630:
  5896  0016FE  80D8               	bsf	status,0,c
  5897  001700  0012               	return		;funcret
  5898  001702                     __end_of_LcLliure:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function _LcClear *****************
  5902 ;; Defined at:
  5903 ;;		line 82 in file "LcTLCD.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1
  5917 ;;      Params:         0       0       0
  5918 ;;      Locals:         0       0       0
  5919 ;;      Temps:          0       0       0
  5920 ;;      Totals:         0       0       0
  5921 ;;Total ram usage:        0 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 5
  5924 ;; This function calls:
  5925 ;;		_CantaIR
  5926 ;;		_Espera
  5927 ;;		_LcGotoXY
  5928 ;;		_WaitForBusy
  5929 ;; This function is called by:
  5930 ;;		_menu
  5931 ;;		_GLCDMotor
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text41
  5936  0015F4                     __ptext41:
  5937                           	callstack 0
  5938  0015F4                     _LcClear:
  5939                           	callstack 24
  5940                           
  5941                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  5942                           
  5943                           ;incstack = 0
  5944  0015F4  EC30  F00A         	call	_WaitForBusy	;wreg free
  5945  0015F8  0E01               	movlw	1
  5946  0015FA  ECA2  F00A         	call	_CantaIR
  5947                           
  5948                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  5949  0015FE  0E00               	movlw	0
  5950  001600  6E74               	movwf	(Espera@ms+1)^0,c
  5951  001602  0E03               	movlw	3
  5952  001604  6E73               	movwf	Espera@ms^0,c
  5953  001606  5047               	movf	_Timer^0,w,c
  5954  001608  EC0C  F00B         	call	_Espera
  5955                           
  5956                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  5957  00160C  0E00               	movlw	0
  5958  00160E  6E74               	movwf	LcGotoXY@Row^0,c
  5959  001610  0E00               	movlw	0
  5960  001612  EC0F  F00A         	call	_LcGotoXY
  5961  001616  0012               	return		;funcret
  5962  001618                     __end_of_LcClear:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function _LcGotoXY *****************
  5966 ;; Defined at:
  5967 ;;		line 104 in file "LcTLCD.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  Column          1    wreg     unsigned char 
  5970 ;;  Row             1   13[COMRAM] unsigned char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  Column          1    4[BANK0 ] unsigned char 
  5973 ;;  Fisics          2    0[BANK0 ] int 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1
  5983 ;;      Params:         1       0       0
  5984 ;;      Locals:         0       5       0
  5985 ;;      Temps:          0       0       0
  5986 ;;      Totals:         1       5       0
  5987 ;;Total ram usage:        6 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 4
  5990 ;; This function calls:
  5991 ;;		_CantaIR
  5992 ;;		_WaitForBusy
  5993 ;; This function is called by:
  5994 ;;		_LcClear
  5995 ;;		_LcPutChar
  5996 ;;		_menu
  5997 ;;		_GLCDMotor
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text42
  6002  00141E                     __ptext42:
  6003                           	callstack 0
  6004  00141E                     _LcGotoXY:
  6005                           	callstack 24
  6006                           
  6007                           ;incstack = 0
  6008                           ;LcGotoXY@Column stored from wreg
  6009  00141E  0100               	movlb	0	; () banked
  6010  001420  6F90               	movwf	LcGotoXY@Column& (0+255),b
  6011                           
  6012                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  6013  001422  5074               	movf	LcGotoXY@Row^0,w,c
  6014  001424  B4D8               	btfsc	status,2,c
  6015  001426  D005               	goto	l3962
  6016  001428  0E00               	movlw	0
  6017  00142A  0100               	movlb	0	; () banked
  6018  00142C  6F8F               	movwf	(_LcGotoXY$342+1)& (0+255),b
  6019  00142E  0E40               	movlw	64
  6020  001430  D004               	goto	L5
  6021  001432                     l3962:
  6022  001432  0E00               	movlw	0
  6023  001434  0100               	movlb	0	; () banked
  6024  001436  6F8F               	movwf	(_LcGotoXY$342+1)& (0+255),b
  6025  001438  0E00               	movlw	0
  6026  00143A                     L5:
  6027  00143A  6F8E               	movwf	_LcGotoXY$342& (0+255),b
  6028                           
  6029                           ; BSR set to: 0
  6030  00143C  5190               	movf	LcGotoXY@Column& (0+255),w,b
  6031  00143E  258E               	addwf	_LcGotoXY$342& (0+255),w,b
  6032  001440  6F8C               	movwf	LcGotoXY@Fisics& (0+255),b
  6033  001442  0E00               	movlw	0
  6034  001444  218F               	addwfc	(_LcGotoXY$342+1)& (0+255),w,b
  6035  001446  6F8D               	movwf	(LcGotoXY@Fisics+1)& (0+255),b
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;LcTLCD.c: 125:  WaitForBusy();
  6039  001448  EC30  F00A         	call	_WaitForBusy	;wreg free
  6040                           
  6041                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  6042  00144C  0100               	movlb	0	; () banked
  6043  00144E  518C               	movf	LcGotoXY@Fisics& (0+255),w,b
  6044  001450  0980               	iorlw	128
  6045  001452  ECA2  F00A         	call	_CantaIR
  6046                           
  6047                           ;LcTLCD.c: 128:  RowAct = Row;
  6048  001456  C074  F049         	movff	LcGotoXY@Row,_RowAct
  6049                           
  6050                           ;LcTLCD.c: 129:  ColumnAct = Column;
  6051  00145A  C090  F048         	movff	LcGotoXY@Column,_ColumnAct
  6052  00145E  0012               	return		;funcret
  6053  001460                     __end_of_LcGotoXY:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _WaitForBusy *****************
  6057 ;; Defined at:
  6058 ;;		line 210 in file "LcTLCD.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  Busy            1   12[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1
  6072 ;;      Params:         0       0       0
  6073 ;;      Locals:         1       0       0
  6074 ;;      Temps:          0       0       0
  6075 ;;      Totals:         1       0       0
  6076 ;;Total ram usage:        1 bytes
  6077 ;; Hardware stack levels used: 1
  6078 ;; Hardware stack levels required when called: 3
  6079 ;; This function calls:
  6080 ;;		_TiGetTics
  6081 ;;		_TiResetTics
  6082 ;; This function is called by:
  6083 ;;		_LcInit
  6084 ;;		_LcClear
  6085 ;;		_LcCursorOff
  6086 ;;		_LcGotoXY
  6087 ;;		_LcPutChar
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text43
  6092  001460                     __ptext43:
  6093                           	callstack 0
  6094  001460                     _WaitForBusy:
  6095                           	callstack 25
  6096                           
  6097                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6098                           
  6099                           ;incstack = 0
  6100  001460  8694               	bsf	148,3,c	;volatile
  6101  001462  8494               	bsf	148,2,c	;volatile
  6102  001464  8294               	bsf	148,1,c	;volatile
  6103  001466  8094               	bsf	148,0,c	;volatile
  6104                           
  6105                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  6106  001468  9A8B               	bcf	139,5,c	;volatile
  6107                           
  6108                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  6109  00146A  8E8C               	bsf	140,7,c	;volatile
  6110                           
  6111                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  6112  00146C  5047               	movf	_Timer^0,w,c
  6113  00146E  EC2E  F00B         	call	_TiResetTics
  6114  001472                     l3930:
  6115                           
  6116                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6117  001472  888B               	bsf	139,4,c	;volatile
  6118  001474  888B               	bsf	139,4,c	;volatile
  6119                           
  6120                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  6121  001476  0E00               	movlw	0
  6122  001478  B682               	btfsc	130,3,c	;volatile
  6123  00147A  0E01               	movlw	1
  6124  00147C  6E73               	movwf	WaitForBusy@Busy^0,c
  6125                           
  6126                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  6127  00147E  988B               	bcf	139,4,c	;volatile
  6128                           
  6129                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  6130  001480  988B               	bcf	139,4,c	;volatile
  6131                           
  6132                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6133  001482  888B               	bsf	139,4,c	;volatile
  6134  001484  888B               	bsf	139,4,c	;volatile
  6135                           
  6136                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  6137  001486  988B               	bcf	139,4,c	;volatile
  6138                           
  6139                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  6140  001488  988B               	bcf	139,4,c	;volatile
  6141                           
  6142                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  6143  00148A  5047               	movf	_Timer^0,w,c
  6144  00148C  ECD2  F00A         	call	_TiGetTics
  6145  001490  506C               	movf	?_TiGetTics^0,w,c
  6146  001492  106D               	iorwf	(?_TiGetTics+1)^0,w,c
  6147  001494  A4D8               	btfss	status,2,c
  6148  001496  0012               	return	
  6149                           
  6150                           ;LcTLCD.c: 225:  } while(Busy);
  6151  001498  5073               	movf	WaitForBusy@Busy^0,w,c
  6152  00149A  B4D8               	btfsc	status,2,c
  6153  00149C  0012               	return	
  6154  00149E  D7E9               	goto	l3930
  6155  0014A0                     __end_of_WaitForBusy:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function _CantaIR *****************
  6159 ;; Defined at:
  6160 ;;		line 178 in file "LcTLCD.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  IR              1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  IR              1    7[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1
  6174 ;;      Params:         0       0       0
  6175 ;;      Locals:         1       0       0
  6176 ;;      Temps:          0       0       0
  6177 ;;      Totals:         1       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 3
  6181 ;; This function calls:
  6182 ;;		_CantaPartAlta
  6183 ;;		_CantaPartBaixa
  6184 ;; This function is called by:
  6185 ;;		_LcInit
  6186 ;;		_LcClear
  6187 ;;		_LcCursorOff
  6188 ;;		_LcGotoXY
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text44
  6193  001544                     __ptext44:
  6194                           	callstack 0
  6195  001544                     _CantaIR:
  6196                           	callstack 24
  6197                           
  6198                           ;incstack = 0
  6199                           ;CantaIR@IR stored from wreg
  6200  001544  6E6E               	movwf	CantaIR@IR^0,c
  6201                           
  6202                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6203  001546  9694               	bcf	148,3,c	;volatile
  6204  001548  9494               	bcf	148,2,c	;volatile
  6205  00154A  9294               	bcf	148,1,c	;volatile
  6206  00154C  9094               	bcf	148,0,c	;volatile
  6207                           
  6208                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  6209  00154E  9A8B               	bcf	139,5,c	;volatile
  6210                           
  6211                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  6212  001550  9E8C               	bcf	140,7,c	;volatile
  6213                           
  6214                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  6215  001552  888B               	bsf	139,4,c	;volatile
  6216                           
  6217                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  6218  001554  506E               	movf	CantaIR@IR^0,w,c
  6219  001556  EC0B  F009         	call	_CantaPartAlta
  6220                           
  6221                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  6222  00155A  888B               	bsf	139,4,c	;volatile
  6223                           
  6224                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  6225  00155C  988B               	bcf	139,4,c	;volatile
  6226                           
  6227                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  6228  00155E  988B               	bcf	139,4,c	;volatile
  6229                           
  6230                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  6231  001560  888B               	bsf	139,4,c	;volatile
  6232                           
  6233                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  6234  001562  506E               	movf	CantaIR@IR^0,w,c
  6235  001564  ECD7  F008         	call	_CantaPartBaixa
  6236                           
  6237                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  6238  001568  888B               	bsf	139,4,c	;volatile
  6239                           
  6240                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  6241  00156A  988B               	bcf	139,4,c	;volatile
  6242                           
  6243                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6244  00156C  8694               	bsf	148,3,c	;volatile
  6245  00156E  8494               	bsf	148,2,c	;volatile
  6246  001570  8294               	bsf	148,1,c	;volatile
  6247  001572  8094               	bsf	148,0,c	;volatile
  6248  001574  0012               	return		;funcret
  6249  001576                     __end_of_CantaIR:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function _CantaPartBaixa *****************
  6253 ;; Defined at:
  6254 ;;		line 171 in file "LcTLCD.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  c               1    wreg     unsigned char 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  c               1    6[COMRAM] unsigned char 
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1
  6268 ;;      Params:         0       0       0
  6269 ;;      Locals:         1       0       0
  6270 ;;      Temps:          1       0       0
  6271 ;;      Totals:         2       0       0
  6272 ;;Total ram usage:        2 bytes
  6273 ;; Hardware stack levels used: 1
  6274 ;; Hardware stack levels required when called: 2
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_CantaIR
  6279 ;;		_CantaData
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text45
  6284  0011AE                     __ptext45:
  6285                           	callstack 0
  6286  0011AE                     _CantaPartBaixa:
  6287                           	callstack 24
  6288                           
  6289                           ;incstack = 0
  6290                           ;CantaPartBaixa@c stored from wreg
  6291  0011AE  6E6D               	movwf	CantaPartBaixa@c^0,c
  6292                           
  6293                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  6294  0011B0  A66D               	btfss	CantaPartBaixa@c^0,3,c
  6295  0011B2  D003               	goto	u3840
  6296  0011B4  6A6C               	clrf	??_CantaPartBaixa^0,c
  6297  0011B6  2A6C               	incf	??_CantaPartBaixa^0,f,c
  6298  0011B8  D001               	goto	u3858
  6299  0011BA                     u3840:
  6300  0011BA  6A6C               	clrf	??_CantaPartBaixa^0,c
  6301  0011BC                     u3858:
  6302  0011BC  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6303  0011BE  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6304  0011C0  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6305  0011C2  508B               	movf	139,w,c	;volatile
  6306  0011C4  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6307  0011C6  0BF7               	andlw	-9
  6308  0011C8  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6309  0011CA  6E8B               	movwf	139,c	;volatile
  6310                           
  6311                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  6312  0011CC  A46D               	btfss	CantaPartBaixa@c^0,2,c
  6313  0011CE  D003               	goto	u3860
  6314  0011D0  6A6C               	clrf	??_CantaPartBaixa^0,c
  6315  0011D2  2A6C               	incf	??_CantaPartBaixa^0,f,c
  6316  0011D4  D001               	goto	u3878
  6317  0011D6                     u3860:
  6318  0011D6  6A6C               	clrf	??_CantaPartBaixa^0,c
  6319  0011D8                     u3878:
  6320  0011D8  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6321  0011DA  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6322  0011DC  508B               	movf	139,w,c	;volatile
  6323  0011DE  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6324  0011E0  0BFB               	andlw	-5
  6325  0011E2  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6326  0011E4  6E8B               	movwf	139,c	;volatile
  6327                           
  6328                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  6329  0011E6  A26D               	btfss	CantaPartBaixa@c^0,1,c
  6330  0011E8  D003               	goto	u3880
  6331  0011EA  6A6C               	clrf	??_CantaPartBaixa^0,c
  6332  0011EC  2A6C               	incf	??_CantaPartBaixa^0,f,c
  6333  0011EE  D001               	goto	u3898
  6334  0011F0                     u3880:
  6335  0011F0  6A6C               	clrf	??_CantaPartBaixa^0,c
  6336  0011F2                     u3898:
  6337  0011F2  466C               	rlncf	??_CantaPartBaixa^0,f,c
  6338  0011F4  508B               	movf	139,w,c	;volatile
  6339  0011F6  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6340  0011F8  0BFD               	andlw	-3
  6341  0011FA  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6342  0011FC  6E8B               	movwf	139,c	;volatile
  6343                           
  6344                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  6345  0011FE  A06D               	btfss	CantaPartBaixa@c^0,0,c
  6346  001200  D003               	goto	u3900
  6347  001202  6A6C               	clrf	??_CantaPartBaixa^0,c
  6348  001204  2A6C               	incf	??_CantaPartBaixa^0,f,c
  6349  001206  D001               	goto	u3918
  6350  001208                     u3900:
  6351  001208  6A6C               	clrf	??_CantaPartBaixa^0,c
  6352  00120A                     u3918:
  6353  00120A  508B               	movf	139,w,c	;volatile
  6354  00120C  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6355  00120E  0BFE               	andlw	-2
  6356  001210  186C               	xorwf	??_CantaPartBaixa^0,w,c
  6357  001212  6E8B               	movwf	139,c	;volatile
  6358  001214  0012               	return		;funcret
  6359  001216                     __end_of_CantaPartBaixa:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _CantaPartAlta *****************
  6363 ;; Defined at:
  6364 ;;		line 164 in file "LcTLCD.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  c               1    wreg     unsigned char 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  c               1    6[COMRAM] unsigned char 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      void 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2, status,0
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1
  6378 ;;      Params:         0       0       0
  6379 ;;      Locals:         1       0       0
  6380 ;;      Temps:          1       0       0
  6381 ;;      Totals:         2       0       0
  6382 ;;Total ram usage:        2 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 2
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_CantaIR
  6389 ;;		_CantaData
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text46
  6394  001216                     __ptext46:
  6395                           	callstack 0
  6396  001216                     _CantaPartAlta:
  6397                           	callstack 24
  6398                           
  6399                           ;incstack = 0
  6400                           ;CantaPartAlta@c stored from wreg
  6401  001216  6E6D               	movwf	CantaPartAlta@c^0,c
  6402                           
  6403                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  6404  001218  AE6D               	btfss	CantaPartAlta@c^0,7,c
  6405  00121A  D003               	goto	u3760
  6406  00121C  6A6C               	clrf	??_CantaPartAlta^0,c
  6407  00121E  2A6C               	incf	??_CantaPartAlta^0,f,c
  6408  001220  D001               	goto	u3778
  6409  001222                     u3760:
  6410  001222  6A6C               	clrf	??_CantaPartAlta^0,c
  6411  001224                     u3778:
  6412  001224  466C               	rlncf	??_CantaPartAlta^0,f,c
  6413  001226  466C               	rlncf	??_CantaPartAlta^0,f,c
  6414  001228  466C               	rlncf	??_CantaPartAlta^0,f,c
  6415  00122A  508B               	movf	139,w,c	;volatile
  6416  00122C  186C               	xorwf	??_CantaPartAlta^0,w,c
  6417  00122E  0BF7               	andlw	-9
  6418  001230  186C               	xorwf	??_CantaPartAlta^0,w,c
  6419  001232  6E8B               	movwf	139,c	;volatile
  6420                           
  6421                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6422  001234  AC6D               	btfss	CantaPartAlta@c^0,6,c
  6423  001236  D003               	goto	u3780
  6424  001238  6A6C               	clrf	??_CantaPartAlta^0,c
  6425  00123A  2A6C               	incf	??_CantaPartAlta^0,f,c
  6426  00123C  D001               	goto	u3798
  6427  00123E                     u3780:
  6428  00123E  6A6C               	clrf	??_CantaPartAlta^0,c
  6429  001240                     u3798:
  6430  001240  466C               	rlncf	??_CantaPartAlta^0,f,c
  6431  001242  466C               	rlncf	??_CantaPartAlta^0,f,c
  6432  001244  508B               	movf	139,w,c	;volatile
  6433  001246  186C               	xorwf	??_CantaPartAlta^0,w,c
  6434  001248  0BFB               	andlw	-5
  6435  00124A  186C               	xorwf	??_CantaPartAlta^0,w,c
  6436  00124C  6E8B               	movwf	139,c	;volatile
  6437                           
  6438                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6439  00124E  AA6D               	btfss	CantaPartAlta@c^0,5,c
  6440  001250  D003               	goto	u3800
  6441  001252  6A6C               	clrf	??_CantaPartAlta^0,c
  6442  001254  2A6C               	incf	??_CantaPartAlta^0,f,c
  6443  001256  D001               	goto	u3818
  6444  001258                     u3800:
  6445  001258  6A6C               	clrf	??_CantaPartAlta^0,c
  6446  00125A                     u3818:
  6447  00125A  466C               	rlncf	??_CantaPartAlta^0,f,c
  6448  00125C  508B               	movf	139,w,c	;volatile
  6449  00125E  186C               	xorwf	??_CantaPartAlta^0,w,c
  6450  001260  0BFD               	andlw	-3
  6451  001262  186C               	xorwf	??_CantaPartAlta^0,w,c
  6452  001264  6E8B               	movwf	139,c	;volatile
  6453                           
  6454                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6455  001266  A86D               	btfss	CantaPartAlta@c^0,4,c
  6456  001268  D003               	goto	u3820
  6457  00126A  6A6C               	clrf	??_CantaPartAlta^0,c
  6458  00126C  2A6C               	incf	??_CantaPartAlta^0,f,c
  6459  00126E  D001               	goto	u3838
  6460  001270                     u3820:
  6461  001270  6A6C               	clrf	??_CantaPartAlta^0,c
  6462  001272                     u3838:
  6463  001272  508B               	movf	139,w,c	;volatile
  6464  001274  186C               	xorwf	??_CantaPartAlta^0,w,c
  6465  001276  0BFE               	andlw	-2
  6466  001278  186C               	xorwf	??_CantaPartAlta^0,w,c
  6467  00127A  6E8B               	movwf	139,c	;volatile
  6468  00127C  0012               	return		;funcret
  6469  00127E                     __end_of_CantaPartAlta:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function _Espera *****************
  6473 ;; Defined at:
  6474 ;;		line 159 in file "LcTLCD.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  Timer           1    wreg     unsigned char 
  6477 ;;  ms              2   12[COMRAM] int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  Timer           1   15[COMRAM] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1
  6489 ;;      Params:         2       0       0
  6490 ;;      Locals:         1       0       0
  6491 ;;      Temps:          1       0       0
  6492 ;;      Totals:         4       0       0
  6493 ;;Total ram usage:        4 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; Hardware stack levels required when called: 3
  6496 ;; This function calls:
  6497 ;;		_TiGetTics
  6498 ;;		_TiResetTics
  6499 ;; This function is called by:
  6500 ;;		_LcInit
  6501 ;;		_LcClear
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text47
  6506  001618                     __ptext47:
  6507                           	callstack 0
  6508  001618                     _Espera:
  6509                           	callstack 25
  6510                           
  6511                           ;incstack = 0
  6512                           ;Espera@Timer stored from wreg
  6513  001618  6E76               	movwf	Espera@Timer^0,c
  6514                           
  6515                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  6516  00161A  5076               	movf	Espera@Timer^0,w,c
  6517  00161C  EC2E  F00B         	call	_TiResetTics
  6518  001620                     l3956:
  6519  001620  5076               	movf	Espera@Timer^0,w,c
  6520  001622  ECD2  F00A         	call	_TiGetTics
  6521  001626  5073               	movf	Espera@ms^0,w,c
  6522  001628  5C6C               	subwf	?_TiGetTics^0,w,c
  6523  00162A  506D               	movf	(?_TiGetTics+1)^0,w,c
  6524  00162C  0A80               	xorlw	128
  6525  00162E  6E75               	movwf	??_Espera^0,c
  6526  001630  5074               	movf	(Espera@ms+1)^0,w,c
  6527  001632  0A80               	xorlw	128
  6528  001634  5875               	subwfb	??_Espera^0,w,c
  6529  001636  B0D8               	btfsc	status,0,c
  6530  001638  0012               	return	
  6531  00163A  D7F2               	goto	l3956
  6532  00163C                     __end_of_Espera:
  6533                           	callstack 0
  6534                           
  6535 ;; *************** function _TiResetTics *****************
  6536 ;; Defined at:
  6537 ;;		line 55 in file "TiTTimer.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  Handle          1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  Handle          1    5[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1
  6551 ;;      Params:         0       0       0
  6552 ;;      Locals:         1       0       0
  6553 ;;      Temps:          0       0       0
  6554 ;;      Totals:         1       0       0
  6555 ;;Total ram usage:        1 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 2
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_Espera
  6562 ;;		_WaitForBusy
  6563 ;;		_SMotor
  6564 ;;		_TeTeclat
  6565 ;;		_menu
  6566 ;;		_motorAltaveu
  6567 ;;		_GLCDMotor
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text48
  6572  00165C                     __ptext48:
  6573                           	callstack 0
  6574  00165C                     _TiResetTics:
  6575                           	callstack 27
  6576                           
  6577                           ;incstack = 0
  6578                           ;TiResetTics@Handle stored from wreg
  6579  00165C  6E6C               	movwf	TiResetTics@Handle^0,c
  6580                           
  6581                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  6582  00165E  506C               	movf	TiResetTics@Handle^0,w,c
  6583  001660  0D03               	mullw	3
  6584  001662  50F3               	movf	243,w,c
  6585  001664  0F01               	addlw	low _s_Timers
  6586  001666  6ED9               	movwf	fsr2l,c
  6587  001668  6ADA               	clrf	fsr2h,c
  6588  00166A  C022  FFDE         	movff	_h_Tics,postinc2
  6589  00166E  C023  FFDD         	movff	_h_Tics+1,postdec2
  6590  001672  0012               	return		;funcret
  6591  001674                     __end_of_TiResetTics:
  6592                           	callstack 0
  6593                           
  6594 ;; *************** function _TiGetTics *****************
  6595 ;; Defined at:
  6596 ;;		line 61 in file "TiTTimer.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  Handle          1    wreg     unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  Handle          1    9[COMRAM] unsigned char 
  6601 ;;  actual          2   10[COMRAM] volatile unsigned int 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  2    5[COMRAM] int 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1
  6611 ;;      Params:         2       0       0
  6612 ;;      Locals:         3       0       0
  6613 ;;      Temps:          2       0       0
  6614 ;;      Totals:         7       0       0
  6615 ;;Total ram usage:        7 bytes
  6616 ;; Hardware stack levels used: 1
  6617 ;; Hardware stack levels required when called: 2
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_Espera
  6622 ;;		_WaitForBusy
  6623 ;;		_SMotor
  6624 ;;		_TeTeclat
  6625 ;;		_menu
  6626 ;;		_motorAltaveu
  6627 ;;		_GLCDMotor
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text49
  6632  0015A4                     __ptext49:
  6633                           	callstack 0
  6634  0015A4                     _TiGetTics:
  6635                           	callstack 27
  6636                           
  6637                           ;incstack = 0
  6638                           ;TiGetTics@Handle stored from wreg
  6639  0015A4  6E70               	movwf	TiGetTics@Handle^0,c
  6640                           
  6641                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  6642  0015A6  C022  F071         	movff	_h_Tics,TiGetTics@actual	;volatile
  6643  0015AA  C023  F072         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  6644                           
  6645                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  6646  0015AE  5070               	movf	TiGetTics@Handle^0,w,c
  6647  0015B0  0D03               	mullw	3
  6648  0015B2  50F3               	movf	243,w,c
  6649  0015B4  0F01               	addlw	low _s_Timers
  6650  0015B6  6ED9               	movwf	fsr2l,c
  6651  0015B8  6ADA               	clrf	fsr2h,c
  6652  0015BA  CFDE F06E          	movff	postinc2,??_TiGetTics
  6653  0015BE  CFDD F06F          	movff	postdec2,??_TiGetTics+1
  6654  0015C2  506E               	movf	??_TiGetTics^0,w,c
  6655  0015C4  5C71               	subwf	TiGetTics@actual^0,w,c	;volatile
  6656  0015C6  6E6C               	movwf	?_TiGetTics^0,c
  6657  0015C8  506F               	movf	(??_TiGetTics+1)^0,w,c
  6658  0015CA  5872               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  6659  0015CC  6E6D               	movwf	(?_TiGetTics+1)^0,c
  6660  0015CE  0012               	return		;funcret
  6661  0015D0                     __end_of_TiGetTics:
  6662                           	callstack 0
  6663                           
  6664 ;; *************** function _GLCDInit *****************
  6665 ;; Defined at:
  6666 ;;		line 26 in file "GestioLCD.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1
  6680 ;;      Params:         0       0       0
  6681 ;;      Locals:         0       0       0
  6682 ;;      Temps:          0       0       0
  6683 ;;      Totals:         0       0       0
  6684 ;;Total ram usage:        0 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 3
  6687 ;; This function calls:
  6688 ;;		_TiGetTimer
  6689 ;; This function is called by:
  6690 ;;		_main
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text50
  6695  001742                     __ptext50:
  6696                           	callstack 0
  6697  001742                     _GLCDInit:
  6698                           	callstack 27
  6699                           
  6700                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  6701                           
  6702                           ;incstack = 0
  6703  001742  EC50  F00A         	call	_TiGetTimer	;wreg free
  6704  001746  6E2F               	movwf	_timerGLCD^0,c
  6705  001748  0012               	return		;funcret
  6706  00174A                     __end_of_GLCDInit:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _TiGetTimer *****************
  6710 ;; Defined at:
  6711 ;;		line 70 in file "TiTTimer.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      unsigned char 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1
  6725 ;;      Params:         0       0       0
  6726 ;;      Locals:         0       0       0
  6727 ;;      Temps:          1       0       0
  6728 ;;      Totals:         1       0       0
  6729 ;;Total ram usage:        1 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; Hardware stack levels required when called: 2
  6732 ;; This function calls:
  6733 ;;		Nothing
  6734 ;; This function is called by:
  6735 ;;		_LcInit
  6736 ;;		_Sinit
  6737 ;;		_TeInit
  6738 ;;		_Minit
  6739 ;;		_initAltaveu
  6740 ;;		_GLCDInit
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text51
  6745  0014A0                     __ptext51:
  6746                           	callstack 0
  6747  0014A0                     _TiGetTimer:
  6748                           	callstack 27
  6749                           
  6750                           ;TiTTimer.c: 74:     counter=0;
  6751                           
  6752                           ;incstack = 0
  6753  0014A0  0E00               	movlw	0
  6754  0014A2  6E40               	movwf	_counter^0,c
  6755                           
  6756                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6757  0014A4  D007               	goto	l4002
  6758  0014A6                     l3994:
  6759                           
  6760                           ;TiTTimer.c: 76:         counter++;
  6761  0014A6  2A40               	incf	_counter^0,f,c
  6762                           
  6763                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  6764  0014A8  0E08               	movlw	8
  6765  0014AA  1840               	xorwf	_counter^0,w,c
  6766  0014AC  A4D8               	btfss	status,2,c
  6767  0014AE  D002               	goto	l4002
  6768  0014B0  0EFF               	movlw	255
  6769  0014B2  0012               	return	
  6770  0014B4                     l4002:
  6771                           
  6772                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6773  0014B4  5040               	movf	_counter^0,w,c
  6774  0014B6  0D03               	mullw	3
  6775  0014B8  50F3               	movf	243,w,c
  6776  0014BA  0F03               	addlw	low (_s_Timers+2)
  6777  0014BC  6ED9               	movwf	fsr2l,c
  6778  0014BE  6ADA               	clrf	fsr2h,c
  6779  0014C0  04DE               	decf	postinc2,w,c
  6780  0014C2  B4D8               	btfsc	status,2,c
  6781  0014C4  D7F0               	goto	l3994
  6782                           
  6783                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  6784  0014C6  5040               	movf	_counter^0,w,c
  6785  0014C8  0D03               	mullw	3
  6786  0014CA  50F3               	movf	243,w,c
  6787  0014CC  0F03               	addlw	low (_s_Timers+2)
  6788  0014CE  6ED9               	movwf	fsr2l,c
  6789  0014D0  6ADA               	clrf	fsr2h,c
  6790  0014D2  0E01               	movlw	1
  6791  0014D4  6EDF               	movwf	indf2,c
  6792                           
  6793                           ;TiTTimer.c: 80:     return (counter);
  6794  0014D6  5040               	movf	_counter^0,w,c
  6795  0014D8  0012               	return		;funcret
  6796  0014DA                     __end_of_TiGetTimer:
  6797                           	callstack 0
  6798                           
  6799 ;; *************** function _high_rsi *****************
  6800 ;; Defined at:
  6801 ;;		line 17 in file "main.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;		None
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1
  6815 ;;      Params:         0       0       0
  6816 ;;      Locals:         0       0       0
  6817 ;;      Temps:          4       0       0
  6818 ;;      Totals:         4       0       0
  6819 ;;Total ram usage:        4 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 1
  6822 ;; This function calls:
  6823 ;;		__TiRSITimer
  6824 ;; This function is called by:
  6825 ;;		Interrupt level 2
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	intcode
  6830  000008                     __pintcode:
  6831                           	callstack 0
  6832  000008                     _high_rsi:
  6833                           	callstack 24
  6834                           
  6835                           ;incstack = 0
  6836  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6837  00000A  CFD9 F068          	movff	fsr2l,??_high_rsi
  6838  00000E  CFDA F069          	movff	fsr2h,??_high_rsi+1
  6839  000012  CFF3 F06A          	movff	prodl,??_high_rsi+2
  6840  000016  CFF4 F06B          	movff	prodh,??_high_rsi+3
  6841  00001A  EC6E  F009         	call	__TiRSITimer	;wreg free
  6842  00001E  C06B  FFF4         	movff	??_high_rsi+3,prodh
  6843  000022  C06A  FFF3         	movff	??_high_rsi+2,prodl
  6844  000026  C069  FFDA         	movff	??_high_rsi+1,fsr2h
  6845  00002A  C068  FFD9         	movff	??_high_rsi,fsr2l
  6846  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6847  000030  0011               	retfie		f
  6848  000032                     __end_of_high_rsi:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function __TiRSITimer *****************
  6852 ;; Defined at:
  6853 ;;		line 37 in file "TiTTimer.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1
  6867 ;;      Params:         0       0       0
  6868 ;;      Locals:         0       0       0
  6869 ;;      Temps:          1       0       0
  6870 ;;      Totals:         1       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_high_rsi
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text53
  6881  0012DC                     __ptext53:
  6882                           	callstack 0
  6883  0012DC                     __TiRSITimer:
  6884                           	callstack 24
  6885                           
  6886                           ;TiTTimer.c: 39:     TMR0H = 223;
  6887                           
  6888                           ;incstack = 0
  6889  0012DC  0EDF               	movlw	223
  6890  0012DE  6ED7               	movwf	215,c	;volatile
  6891                           
  6892                           ;TiTTimer.c: 40:     TMR0L = 148;
  6893  0012E0  0E94               	movlw	148
  6894  0012E2  6ED6               	movwf	214,c	;volatile
  6895                           
  6896                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  6897  0012E4  94F2               	bcf	242,2,c	;volatile
  6898                           
  6899                           ;TiTTimer.c: 42:     h_Tics++;
  6900  0012E6  4A22               	infsnz	_h_Tics^0,f,c
  6901  0012E8  2A23               	incf	(_h_Tics+1)^0,f,c
  6902                           
  6903                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  6904  0012EA  0E48               	movlw	72
  6905  0012EC  5C22               	subwf	_h_Tics^0,w,c
  6906  0012EE  0EEE               	movlw	238
  6907  0012F0  5823               	subwfb	(_h_Tics+1)^0,w,c
  6908  0012F2  A0D8               	btfss	status,0,c
  6909  0012F4  0012               	return	
  6910                           
  6911                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  6912  0012F6  0E00               	movlw	0
  6913  0012F8  6E40               	movwf	_counter^0,c
  6914  0012FA                     i2l1786:
  6915  0012FA  0E07               	movlw	7
  6916  0012FC  6440               	cpfsgt	_counter^0,c
  6917  0012FE  D001               	goto	i2l1790
  6918  001300  D015               	goto	i2l1798
  6919  001302                     i2l1790:
  6920                           
  6921                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  6922  001302  5040               	movf	_counter^0,w,c
  6923  001304  0D03               	mullw	3
  6924  001306  50F3               	movf	243,w,c
  6925  001308  0F03               	addlw	low (_s_Timers+2)
  6926  00130A  6ED9               	movwf	fsr2l,c
  6927  00130C  6ADA               	clrf	fsr2h,c
  6928  00130E  04DE               	decf	postinc2,w,c
  6929  001310  A4D8               	btfss	status,2,c
  6930  001312  D00A               	goto	i2l1794
  6931                           
  6932                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  6933  001314  5040               	movf	_counter^0,w,c
  6934  001316  0D03               	mullw	3
  6935  001318  50F3               	movf	243,w,c
  6936  00131A  0F01               	addlw	low _s_Timers
  6937  00131C  6ED9               	movwf	fsr2l,c
  6938  00131E  6ADA               	clrf	fsr2h,c
  6939  001320  5022               	movf	_h_Tics^0,w,c
  6940  001322  5EDE               	subwf	postinc2,f,c
  6941  001324  5023               	movf	(_h_Tics+1)^0,w,c
  6942  001326  5ADD               	subwfb	postdec2,f,c
  6943  001328                     i2l1794:
  6944                           
  6945                           ;TiTTimer.c: 50:         }
  6946  001328  2A40               	incf	_counter^0,f,c
  6947  00132A  D7E7               	goto	i2l1786
  6948  00132C                     i2l1798:
  6949                           
  6950                           ;TiTTimer.c: 51:         h_Tics=0;
  6951  00132C  0E00               	movlw	0
  6952  00132E  6E23               	movwf	(_h_Tics+1)^0,c
  6953  001330  0E00               	movlw	0
  6954  001332  6E22               	movwf	_h_Tics^0,c
  6955  001334  0012               	return		;funcret
  6956  001336                     __end_of__TiRSITimer:
  6957                           	callstack 0
  6958                           
  6959                           	psect	rparam
  6960  0000                     
  6961                           	psect	temp
  6962  00007A                     btemp:
  6963                           	callstack 0
  6964  00007A                     	ds	1
  6965  0000                     int$flags	set	btemp
  6966  0000                     wtemp8	set	btemp+1
  6967  0000                     ttemp5	set	btemp+1
  6968  0000                     ttemp6	set	btemp+4
  6969  0000                     ttemp7	set	btemp+8
  6970                           
  6971                           	psect	idloc
  6972                           
  6973                           ;Config register IDLOC0 @ 0x200000
  6974                           ;	unspecified, using default values
  6975  200000                     	org	2097152
  6976  200000  FF                 	db	255
  6977                           
  6978                           ;Config register IDLOC1 @ 0x200001
  6979                           ;	unspecified, using default values
  6980  200001                     	org	2097153
  6981  200001  FF                 	db	255
  6982                           
  6983                           ;Config register IDLOC2 @ 0x200002
  6984                           ;	unspecified, using default values
  6985  200002                     	org	2097154
  6986  200002  FF                 	db	255
  6987                           
  6988                           ;Config register IDLOC3 @ 0x200003
  6989                           ;	unspecified, using default values
  6990  200003                     	org	2097155
  6991  200003  FF                 	db	255
  6992                           
  6993                           ;Config register IDLOC4 @ 0x200004
  6994                           ;	unspecified, using default values
  6995  200004                     	org	2097156
  6996  200004  FF                 	db	255
  6997                           
  6998                           ;Config register IDLOC5 @ 0x200005
  6999                           ;	unspecified, using default values
  7000  200005                     	org	2097157
  7001  200005  FF                 	db	255
  7002                           
  7003                           ;Config register IDLOC6 @ 0x200006
  7004                           ;	unspecified, using default values
  7005  200006                     	org	2097158
  7006  200006  FF                 	db	255
  7007                           
  7008                           ;Config register IDLOC7 @ 0x200007
  7009                           ;	unspecified, using default values
  7010  200007                     	org	2097159
  7011  200007  FF                 	db	255
  7012                           
  7013                           	psect	config
  7014                           
  7015                           ; Padding undefined space
  7016  300000                     	org	3145728
  7017  300000  FF                 	db	255
  7018                           
  7019                           ;Config register CONFIG1H @ 0x300001
  7020                           ;	Oscillator
  7021                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  7022                           ;	Fail-Safe Clock Monitor Enable bit
  7023                           ;	FCMEN = 0x0, unprogrammed default
  7024                           ;	Internal/External Oscillator Switchover bit
  7025                           ;	IESO = 0x0, unprogrammed default
  7026  300001                     	org	3145729
  7027  300001  06                 	db	6
  7028                           
  7029                           ;Config register CONFIG2L @ 0x300002
  7030                           ;	unspecified, using default values
  7031                           ;	Power-up Timer Enable bit
  7032                           ;	PWRT = 0x1, unprogrammed default
  7033                           ;	Brown-out Reset Enable bits
  7034                           ;	BOR = 0x3, unprogrammed default
  7035                           ;	Brown-out Reset Voltage bits
  7036                           ;	BORV = 0x3, unprogrammed default
  7037  300002                     	org	3145730
  7038  300002  1F                 	db	31
  7039                           
  7040                           ;Config register CONFIG2H @ 0x300003
  7041                           ;	Watchdog Timer Enable bit
  7042                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7043                           ;	Watchdog Timer Postscale Select bits
  7044                           ;	WDTPS = 0xF, unprogrammed default
  7045  300003                     	org	3145731
  7046  300003  1E                 	db	30
  7047                           
  7048                           ; Padding undefined space
  7049  300004                     	org	3145732
  7050  300004  FF                 	db	255
  7051                           
  7052                           ;Config register CONFIG3H @ 0x300005
  7053                           ;	CCP2 MUX bit
  7054                           ;	CCP2MX = 0x1, unprogrammed default
  7055                           ;	PORTB A/D Enable bit
  7056                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  7057                           ;	Low-Power Timer1 Oscillator Enable bit
  7058                           ;	LPT1OSC = 0x0, unprogrammed default
  7059                           ;	MCLR Pin Enable bit
  7060                           ;	MCLRE = 0x1, unprogrammed default
  7061  300005                     	org	3145733
  7062  300005  81                 	db	129
  7063                           
  7064                           ;Config register CONFIG4L @ 0x300006
  7065                           ;	Stack Full/Underflow Reset Enable bit
  7066                           ;	STVREN = 0x1, unprogrammed default
  7067                           ;	Single-Supply ICSP Enable bit
  7068                           ;	LVP = OFF, Single-Supply ICSP disabled
  7069                           ;	Boot Block Size Select bits
  7070                           ;	BBSIZ = 0x0, unprogrammed default
  7071                           ;	Extended Instruction Set Enable bit
  7072                           ;	XINST = 0x0, unprogrammed default
  7073                           ;	Background Debugger Enable bit
  7074                           ;	DEBUG = 0x1, unprogrammed default
  7075  300006                     	org	3145734
  7076  300006  81                 	db	129
  7077                           
  7078                           ; Padding undefined space
  7079  300007                     	org	3145735
  7080  300007  FF                 	db	255
  7081                           
  7082                           ;Config register CONFIG5L @ 0x300008
  7083                           ;	unspecified, using default values
  7084                           ;	Code Protection bit
  7085                           ;	CP0 = 0x1, unprogrammed default
  7086                           ;	Code Protection bit
  7087                           ;	CP1 = 0x1, unprogrammed default
  7088  300008                     	org	3145736
  7089  300008  03                 	db	3
  7090                           
  7091                           ;Config register CONFIG5H @ 0x300009
  7092                           ;	unspecified, using default values
  7093                           ;	Boot Block Code Protection bitProtect Boot
  7094                           ;	CPB = 0x1, unprogrammed default
  7095                           ;	Data EEPROM Code Protection bit
  7096                           ;	CPD = 0x1, unprogrammed default
  7097  300009                     	org	3145737
  7098  300009  C0                 	db	192
  7099                           
  7100                           ;Config register CONFIG6L @ 0x30000A
  7101                           ;	unspecified, using default values
  7102                           ;	Write Protection bit
  7103                           ;	WRT0 = 0x1, unprogrammed default
  7104                           ;	Write Protection bit
  7105                           ;	WRT1 = 0x1, unprogrammed default
  7106  30000A                     	org	3145738
  7107  30000A  03                 	db	3
  7108                           
  7109                           ;Config register CONFIG6H @ 0x30000B
  7110                           ;	unspecified, using default values
  7111                           ;	Configuration Register Write Protection bit
  7112                           ;	WRTC = 0x1, unprogrammed default
  7113                           ;	Boot Block Write Protection bit
  7114                           ;	WRTB = 0x1, unprogrammed default
  7115                           ;	Data EEPROM Write Protection bit
  7116                           ;	WRTD = 0x1, unprogrammed default
  7117  30000B                     	org	3145739
  7118  30000B  E0                 	db	224
  7119                           
  7120                           ;Config register CONFIG7L @ 0x30000C
  7121                           ;	unspecified, using default values
  7122                           ;	Table Read Protection bit
  7123                           ;	EBTR0 = 0x1, unprogrammed default
  7124                           ;	Table Read Protection bit
  7125                           ;	EBTR1 = 0x1, unprogrammed default
  7126  30000C                     	org	3145740
  7127  30000C  03                 	db	3
  7128                           
  7129                           ;Config register CONFIG7H @ 0x30000D
  7130                           ;	unspecified, using default values
  7131                           ;	Boot Block Table Read Protection bit
  7132                           ;	EBTRB = 0x1, unprogrammed default
  7133  30000D                     	org	3145741
  7134  30000D  40                 	db	64
  7135                           tosu	equ	0xFFF
  7136                           tosh	equ	0xFFE
  7137                           tosl	equ	0xFFD
  7138                           stkptr	equ	0xFFC
  7139                           pclatu	equ	0xFFB
  7140                           pclath	equ	0xFFA
  7141                           pcl	equ	0xFF9
  7142                           tblptru	equ	0xFF8
  7143                           tblptrh	equ	0xFF7
  7144                           tblptrl	equ	0xFF6
  7145                           tablat	equ	0xFF5
  7146                           prodh	equ	0xFF4
  7147                           prodl	equ	0xFF3
  7148                           indf0	equ	0xFEF
  7149                           postinc0	equ	0xFEE
  7150                           postdec0	equ	0xFED
  7151                           preinc0	equ	0xFEC
  7152                           plusw0	equ	0xFEB
  7153                           fsr0h	equ	0xFEA
  7154                           fsr0l	equ	0xFE9
  7155                           wreg	equ	0xFE8
  7156                           indf1	equ	0xFE7
  7157                           postinc1	equ	0xFE6
  7158                           postdec1	equ	0xFE5
  7159                           preinc1	equ	0xFE4
  7160                           plusw1	equ	0xFE3
  7161                           fsr1h	equ	0xFE2
  7162                           fsr1l	equ	0xFE1
  7163                           bsr	equ	0xFE0
  7164                           indf2	equ	0xFDF
  7165                           postinc2	equ	0xFDE
  7166                           postdec2	equ	0xFDD
  7167                           preinc2	equ	0xFDC
  7168                           plusw2	equ	0xFDB
  7169                           fsr2h	equ	0xFDA
  7170                           fsr2l	equ	0xFD9
  7171                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    145
    Data        30
    BSS         268
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18     121
    BANK0           128      5      17
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_menu
    _motorAltaveu->_TiGetTics
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_Espera
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _menu->_LcGotoXY
    _GLCDMotor->_LcGotoXY
    _LcPutChar->_LcGotoXY
    _LcClear->_LcGotoXY

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20796
                           _GLCDInit
                          _GLCDMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    8030
                                             16 COMRAM     2     2      0
                     _GLCDMostraMenu
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     140
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     111
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2186
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    2007
                                             16 COMRAM     1     0      1
                                              0 BANK0      3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     440
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    7601
                                             16 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2186
                                             14 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     630
                                              8 COMRAM     2     0      2
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2974
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1715
                                             13 COMRAM     1     0      1
                                              0 BANK0      5     5      0
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _GLCDMostraMenu
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      11       4       13.3%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     12      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     142       7        0.0%
DATA                 0      0     142       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 29 19:02:02 2022

               TiResetTics@Handle 006C                  _loginNOTRegister 03CD  
                               _i 0036                                 _j 0035  
                UgetUserName@quin 006E         ??_UcheckExistsNotFinished 006C  
          __end_of_compareStrings 141E                               l451 06F2  
                             l606 0BAA                               l607 0BBA  
                             l609 0BC6                               l634 1594  
                             l582 1044                               l574 1022  
                             l584 104A                               l568 15EC  
                             l577 1030                               l665 0F64  
                             l746 0350                               l587 1080  
                             l589 1086                               l758 03E4  
                             l776 058A                               l778 05BA  
                             _tmp 003F                  ??_CantaPartBaixa 006C  
                             prod 000FF3                               wreg 000FE8  
                     _ultimaTecla 0063                __size_of_GLCDMotor 03CA  
                            l2046 1040                              l4002 14B4  
                            l2076 10C2                              l1630 16FE  
                            l4200 0A86                              l4130 09A6  
                            l4122 0992                              l4052 137C  
                            l4044 1362                              l4212 0AB2  
                            l4204 0A92                              l3500 0C06  
                            l4046 136C                              l4070 0EAC  
                            l4222 0ACC                              l3502 0C0C  
                            l4302 068A                              l4232 0AEA  
                            l4160 0A0E                              l4144 09D6  
                            l1840 14F6                              l4162 0A14  
                            l4146 09DC                              l3530 0CC2  
                            l3514 0C58                              l1818 157A  
                            l1658 16CE                              l4252 0B1E  
                            l1844 14FE                              l3540 0CDA  
                            l4412 0806                              l4324 06E0  
                            l4308 06A4                              l4246 0B0E  
                            l4238 0AF4                              l4182 0A50  
                            l4174 0A38                              l3518 0C6A  
                            l4406 07F6                              l4326 06E6  
                            l4318 06CE                              l4600 032E  
                            l4256 0B26                              l4176 0A3C  
                            l4424 081E                              l4408 07FC  
                            l4520 091E                              l4282 0B62  
                            l4274 0B3A                              l4194 0A70  
                            l4186 0A54                              l3546 0CE8  
                            l3482 0BC0                              l3554 0CF4  
                            l4514 0906                              l4506 08E0  
                            l4442 084E                              l4370 078A  
                            l4354 0752                              l4346 0738  
                            l4338 0710                              l4620 03B2  
                            l4364 077A                              l4356 0758  
                            l4540 0F8A                              l4532 0F76  
                            l4710 0534                              l4606 035E  
                            l4278 0B4C                              l3486 0BD0  
                            l4382 07A2                              l4366 0780  
                            l4534 0F7C                              l4288 0B66  
                            l2952 13DA                              l3496 0BFC  
                            l4448 086C                              l3930 1472  
                            l4634 03D4                              l4810 0DCA  
                            l4466 0872                              l4628 03C0  
                            l4804 0DBC                              l4468 0878  
                            l4396 07CE                              l4556 0FC8  
                            l4548 0F9A                              l4742 05C8  
                            l4734 05B4                              l4726 0594  
                            l4718 0564                              l4670 0444  
                            l4830 0E20                              l4814 0DD6  
                            l2958 13F6                              l4494 08B2  
                            l4486 08A0                              l4478 088E  
                            l4398 07D4                              l4752 05E4  
                            l4680 0490                              l4664 041E  
                            l4592 0302                              l4576 02C0  
                            l4824 0E12                              l4568 0FF4  
                            l3962 1432                              l4746 05D0  
                            l4690 04C8                              l4674 0466  
                            l4586 02F4                              l4762 062E  
                            l4834 0E28                              l4818 0DE2  
                            l4770 0D62                              l3956 1620  
                            l4756 060A                              l4844 0E40  
                            l4838 0E34                              l4782 0D82  
                            l4696 04D8                              l4792 0D98  
                            l4784 0D88                              l4776 0D72  
                            l4872 13BA                              l3994 14A6  
                            l4778 0D76                              l4798 0DA6  
                            STR_1 02A6                              STR_2 0292  
                            STR_3 02B5                              STR_4 02AE  
                            STR_5 029D                              u4000 1104  
                            _LATD 000F8C                              u4020 111E  
                            u4110 0F5C                              u4040 1136  
                            u2280 1402                              u5010 03DC  
                            u4018 1106                              u4130 12A2  
                            u3090 0BCA                              u4140 12CA  
                            u4038 1120                              u4230 09FA  
                            u4137 1298                              u4058 1138  
                            u4147 12C0                              u4340 0A80  
                            u5300 0D52                              u4430 0AFC  
                            u3800 1258                              u4440 0B16  
                            u4370 0AA2                              u5306 0D54  
                            u3820 1270                              u3900 1208  
                            u5270 0D28                              u4710 082E  
                            u3760 1222                              u3840 11BA  
                            u5280 0D32                              u4640 07B2  
                            u3818 125A                              u5290 0D42  
                            u4730 0862                              u3780 123E  
                            u3860 11D6                              u4740 0864  
                            u3838 1272                              u3918 120A  
                            u4910 02FE                              u5286 0D34  
                            u5278 0D2A                              u3880 11F0  
                            u5296 0D44                              u3778 1224  
                            u3858 11BC                              u3980 10E8  
                            u3798 1240                              u3878 11D8  
                            u3898 11F2                              u4980 03BA  
                            u3998 10EA                   ??_SsetNovaTecla 006C  
                            _Rows 004B                              _main 1388  
                            _menu 0688                              _nota 0033  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1618  
                            start 0032                   __end_of_CantaIR 1576  
                    ?_initAltaveu 0067                     LcInit@columns 0077  
                    ___param_bank 000000                  __end_of_GLCDInit 174A  
                     Espera@Timer 0076                             ?_main 0067  
         __size_of_escriureEEPROM 002E                             ?_menu 0067  
                           _EEADR 000FA9                     ??_TiInitTimer 006C  
                           _T0CON 000FD5                   ?_compareStrings 006C  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 127E                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 174A  
                     _MNovaLletra 1732                             _Minit 173A  
                           _Sinit 172A                             _Timer 0047  
                           _Uinit 1018                             _s_ptr 0024  
                           _nou_s 03CF                       _LcCursorOff 16DE  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03C8  
                           tablat 000FF5                       _LcNewString 16EA  
                   ??_TiResetTics 006C                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0008                  __end_of_LcGotoXY 1460  
                __end_of_LcLliure 1702                     ??__TiRSITimer 0067  
                      _TiGetTimer 14A0           EscriuPrimeraOrdre@ordre 006D  
                 __initialization 1146                __size_of_CantaData 0032  
                    __end_of_main 13D8                      __end_of_menu 0990  
               __end_of_GLCDMotor 0688                  __end_of_TeTeclat 0E82  
                   _indexNextUser 0038                            ??_main 0079  
                          ??_menu 0077                __size_of_LcPutChar 0052  
                   __activetblptr 000002                  GLCDMotor@length1 0027  
                GLCDMotor@length2 0026                            ?_LcLCD 0067  
                          ?_SMSon 0067                            ?_Minit 0067  
                          ?_Sinit 0067                            ?_Uinit 0067  
              __size_of_NoFerMenu 0004               __end_of_TiInitTimer 1512  
                          _EEDATA 000FA8                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_SiFerMenu 0004  
                       ??_LcClear 0077                         ??_CantaIR 006E  
                          i2l1790 1302                            i2l1794 1328  
                          i2l1786 12FA                            i2l1798 132C  
                  LcGotoXY@Fisics 008C                    LcGotoXY@Column 0090  
                   ??_WaitForBusy 0073                __size_of_TiGetTics 002C  
                  _sumaPulsacions 0046                            _SMSoff 1750  
                          _LcInit 0E82                    _UgetNumUsuaris 1756  
                          _SMotor 0990               escriureCharEEPROM@c 006D  
                          _TeInit 1722                            _Espera 1618  
                    _LcGotoXY$342 008E                            _RowAct 0049  
             __end_of_TiResetTics 1674                            Uinit@i 006E  
                          Uinit@j 006F                  __end_of_high_rsi 0032  
                          _h_Tics 0022               __end_of__TiRSITimer 1336  
                __end_of_menuList 0292                            clear_0 118C  
                          clear_1 119A                        _UenviaChar 16AA  
                          isa$std 000001                        UenviaPas@c 006D  
     __size_of_EscriuPrimeraOrdre 007A                      __pdataCOMRAM 0055  
          __size_of_CantaPartAlta 0068                __size_of_UenviaPas 0010  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentUsrIndex 003A                 __end_of_CantaData 1544  
                    TeTeclat@cols 0042                         ?_GLCDInit 0067  
                   ?_UcheckExists 0067                        __accesstop 0080  
         __end_of__initialization 11A0            __end_of_UgetNumUsuaris 175A  
               __end_of_LcPutChar 1388                     ___rparam_used 000001  
                   __end_of_LcLCD 12DC                       ?_TiGetTimer 0067  
                   __end_of_SMSon 1750                    __pcstackCOMRAM 0067  
                   __end_of_Minit 1742               __end_of_WaitForBusy 14A0  
                   __end_of_Sinit 1732                     __end_of_Uinit 10CC  
               __end_of_NoFerMenu 176A                      __pidataBANK0 16BA  
            __size_of_initAltaveu 0008                 __end_of_URegister 1762  
               __end_of_SiFerMenu 1766                    _escriureEEPROM 1576  
               __end_of_TiGetTics 15D0                       _TiInitTimer 14DA  
                         ??_LcLCD 0076                           ??_SMSon 006C  
                       ?_LcGotoXY 0074                         ?_LcLliure 0067  
                         ??_Minit 006D                           ??_Sinit 006D  
                         ??_Uinit 006C                    ??_UcheckExists 006C  
                      ??_GLCDInit 006D           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK1 0100                         ?_TeTeclat 0067  
                     _TiResetTics 165C                   ?_UgetNumUsuaris 0067  
                   ??_UmotorUsers 0071                           ?_SMSoff 0067  
                         ?_LcInit 0077                     _CantaPartAlta 1216  
                         ?_SMotor 0067                           ?_TeInit 0067  
                         ?_Espera 0073                 __end_of_UenviaPas 16AA  
                     __TiRSITimer 12DC               _indexNextUserStruct 0037  
                   ?_UgetUserName 006C                  ??_compareStrings 006F  
          __end_of_escriureEEPROM 15A4                       ?_UenviaChar 006C  
          __size_of_MsetNovaTecla 0008                           LcInit@i 008D  
                      ??_LcGotoXY 0075                      ?_MNovaLletra 0067  
                      ??_LcLliure 006C               __size_of_TiGetTimer 003A  
                    ?_LcCursorOff 0067                         ?_high_rsi 0067  
                         _LcClear 15F4                           _CantaIR 1544  
                    ?_LcNewString 006F                        ??_TeTeclat 0073  
                     _WaitForBusy 1460                    ?_CantaPartAlta 0067  
                         _Columns 004A             __end_of_SsetNovaTecla 171A  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E0  
                         __Hparam 0000                   __size_of_SMotor 0218  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000                    ??_UgetUserName 006E  
             __end_of_UmotorUsers 0D1E          ?_UcheckExistsNotFinished 0067  
                 ?_escriureEEPROM 0067                     ?_motorAltaveu 0067  
                    __psmallconst 0200                           __pcinit 1146  
    __end_of_UcheckExistsGetError 170A                           _ferMenu 03C9  
                      _init_ports 163C                           __ramtop 0200  
                         __ptext0 1388                           __ptext1 0F62  
                         __ptext2 0688                           __ptext3 1674  
                         __ptext4 1756                           __ptext5 169A  
                         __ptext6 16AA                           __ptext7 16C6  
                         __ptext8 1702                           __ptext9 175A  
                       _T0CONbits 000FD5                         _GLCDMotor 02BE  
                       CantaIR@IR 006E                           _counter 0040  
                     UenviaChar@c 006D        __end_of_escriureCharEEPROM 15F4  
                LcNewString@new_s 006F                   WaitForBusy@Busy 0073  
                     Uinit@j_1056 0070                 GLCDMostraMenu@num 006C  
                      ??_high_rsi 0068              end_of_initialization 11A0  
                         _usuaris 0100           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 0070  
                   _MsetNovaTecla 171A               __size_of_UenviaChar 0010  
                      _novaLletra 0061                   TiGetTics@actual 0071  
                      GLCDMotor@j 002C                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 0073                        _numUsuaris 0039  
            __end_of_UcheckExists 175E                     TeTeclat@files 0041  
                   TeTeclat@state 0043                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0067  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                  _GLCDMostraMenu 16D2                   ??_CantaPartAlta 006C  
                  ?_MsetNovaTecla 0067                         _CantaData 1512  
               __size_of_GLCDInit 0008                       _UmotorUsers 0BA8  
 __end_of_UcheckExistsNotFinished 16D2                    __end_of_SMSoff 1756  
                    ??_TiGetTimer 006C                    __end_of_LcInit 0F62  
                  __end_of_SMotor 0BA8                         _LcPutChar 1336  
                  __end_of_TeInit 172A                 motorAltaveu@state 0030  
                  __end_of_Espera 163C                    GLCDMotor@state 002D  
      __end_of_EscriuPrimeraOrdre 1146                     __pidataCOMRAM 1688  
                     ?_init_ports 0067                         _NoFerMenu 1766  
                       _ColumnAct 0048                         _URegister 175E  
                    ?_TiInitTimer 0067                         _SiFerMenu 1762  
             start_initialization 1146                         _TiGetTics 15A4  
          __end_of_GLCDMostraMenu 16DE                  ??_UgetNumUsuaris 006C  
                UmotorUsers@state 0034                 __size_of_LcGotoXY 0042  
            __end_of_UgetUserName 1688                __end_of_TiGetTimer 14DA  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                    ?_TiResetTics 0067              __size_of_LcCursorOff 000C  
                      ?_CantaData 0067              _UcheckExistsGetError 1702  
            __size_of_LcNewString 000C                          ??_SMSoff 006C  
                        ??_LcInit 0078                         _NovaTecla 0062  
               __size_of_TeTeclat 0164                          ??_SMotor 0073  
                        ??_TeInit 006D                      ?__TiRSITimer 0067  
                   ??_initAltaveu 006D                          ??_Espera 0075  
                      ?_LcPutChar 0067                         _UenviaPas 169A  
                     __pdataBANK0 0080                      _menuDaltGLCD 002E  
                    ??_UenviaChar 006D                        ?_NoFerMenu 0067  
                     ??_GLCDMotor 0077                        ?_URegister 0067  
                      ?_SiFerMenu 0067                       __pbssCOMRAM 0001  
                   __pcstackBANK0 008C                        ?_TiGetTics 006C  
                 ?_GLCDMostraMenu 0067                   ??_MsetNovaTecla 006C  
            __end_of_motorAltaveu 1018                          ?_LcClear 0067  
                        ?_CantaIR 0067                    _CantaPartBaixa 11AE  
           ?_UcheckExistsGetError 0067                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0067               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 006C                SsetNovaTecla@tecla 006C  
              __end_of_UenviaChar 16BA                  ??_escriureEEPROM 006C  
           __size_of_UcheckExists 0004                         __pintcode 0008  
                      ?_UenviaPas 006C                   CantaPartBaixa@c 006D  
             __end_of_initAltaveu 1712                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 1216                          _GLCDInit 1742  
              escriureEEPROM@caca 006C                       _do_register 03CB  
                       _newString 03C8                      _UcheckExists 175A  
                     ??_CantaData 006E                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   UenviaChar@pos 006C                _escriureCharEEPROM 15D0  
                       _novaTecla 0065                       ??_LcPutChar 0075  
                       _timerGLCD 002F                          _RCONbits 000FD0  
                       _reproduir 03CA                         _timerMenu 003E  
             ?_escriureCharEEPROM 006C                       ??_NoFerMenu 006C  
                     ??_URegister 006C                       ??_SiFerMenu 006C  
           __size_of_UgetUserName 0014            __size_of_SsetNovaTecla 0008  
                        Espera@ms 0073                          _LcGotoXY 141E  
                  _usuariLoguejat 0060                          _LcLliure 16F6  
                     ??_TiGetTics 006E           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                     GLCDMotor@max1 005F  
                   GLCDMotor@max2 005E                     GLCDMotor@min1 002B  
                   GLCDMotor@min2 002A                      _teclaPremuda 0080  
                     LcGotoXY@Row 0074                         copy_data0 115A  
                       copy_data1 117A              ??_escriureCharEEPROM 006D  
                 ?_CantaPartBaixa 0067            ??_UcheckExistsGetError 006C  
           escriureCharEEPROM@pos 006C                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0D1E  
                    ?_UmotorUsers 0067                        _EECON1bits 000FA6  
                     _indexUsuari 003C              __size_of_TiResetTics 0018  
                        __Hrparam 0000                       _initAltaveu 170A  
                       menu@state 003B                          __Lrparam 0000  
            __size_of__TiRSITimer 005A                      _UgetUserName 1674  
                     ??_UenviaPas 006D                      ??_init_ports 006C  
           __size_of_motorAltaveu 00B6                   _do_check_exists 03CC  
                        __ptext10 175E                          __ptext11 1762  
              _EscriuPrimeraOrdre 10CC                          __ptext20 15D0  
                        __ptext12 174A                          __ptext21 13D8  
                        __ptext13 1750                          __ptext30 1732  
                        __ptext22 1018                          __ptext14 1766  
                        __ptext31 173A                          __ptext23 14DA  
                        __ptext15 16D2                          __ptext40 16F6  
                        __ptext32 127E                          __ptext24 0D1E  
                        __ptext16 163C                          __ptext41 15F4  
                        __ptext33 0E82                          __ptext25 1712  
                        __ptext17 170A                          __ptext50 1742  
                        __ptext42 141E                          __ptext34 16DE  
                        __ptext26 171A                          __ptext18 1576  
                        __ptext51 14A0                          __ptext43 1460  
                        __ptext35 10CC                          __ptext27 1722  
                        __ptext19 0BA8                          __ptext44 1544  
                        __ptext36 02BE                          __ptext28 172A  
                        __ptext53 12DC                          __ptext45 11AE  
                        __ptext37 1336                          __ptext29 0990  
                        __ptext46 1216                          __ptext38 1512  
                        __ptext47 1618                          __ptext39 16EA  
                        __ptext48 165C                          __ptext49 15A4  
                  CantaPartAlta@c 006D                       _lletraASCII 0066  
                        _high_rsi 0008                          _copsNota 0031  
                        _s_Timers 0001                       _lletraInici 0055  
                        _menuDalt 003D                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0067                     __size_of_main 0050  
                   __size_of_menu 0308             __end_of_CantaPartAlta 127E  
                   CantaData@Data 006E                          _tiTeclat 0044  
              __end_of_init_ports 165C                          _setSMSon 03CE  
                   _SsetNovaTecla 1712              __size_of_WaitForBusy 0040  
                        _timerSMS 0064                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 006C  
                    _motorAltaveu 0F62              ??_EscriuPrimeraOrdre 006C  
                      LcInit@rows 008C                  ??_GLCDMostraMenu 006C  
         _UcheckExistsNotFinished 16C6                        _INTCONbits 000FF2  
                   ??_MNovaLletra 006C                     ??_LcCursorOff 0074  
                   ??_LcNewString 0071                          intlevel2 0000  
                    _timerAltaveu 0032                        LcPutChar@c 0075  
                  ?_SsetNovaTecla 0067                 MNovaLletra@lletra 006C  
                 compareStrings@a 006C                   compareStrings@b 006D  
                     GLCDMotor@k1 0029                       GLCDMotor@k2 0028  
                  _compareStrings 13D8                       _tmpPassword 0019  
             __end_of_MNovaLletra 173A             __end_of_MsetNovaTecla 1722  
                     _tmpUsername 004C               __end_of_LcCursorOff 16EA  
                     SMotor@state 0045           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 16F6              __size_of_UmotorUsers 0176  
