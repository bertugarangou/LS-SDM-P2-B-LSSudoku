

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 22 13:38:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.32
    59                           ; Generated 02/02/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4321 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  000DA4                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _lletraInici
    99  000DA4  41                 	db	65
   100  000DA5  44                 	db	68
   101  000DA6  47                 	db	71
   102  000DA7  4A                 	db	74
   103  000DA8  4D                 	db	77
   104  000DA9  50                 	db	80
   105  000DAA  54                 	db	84
   106  000DAB  57                 	db	87
   107  000DAC  00                 	db	0
   108                           
   109                           ;initializer for _novaLletra
   110  000DAD  FF                 	db	255
   111                           
   112                           ;initializer for _NovaTecla
   113  000DAE  FF                 	db	255
   114                           
   115                           ;initializer for _ultimaTecla
   116  000DAF  FF                 	db	255
   117                           
   118                           ;initializer for _timerSMS
   119  000DB0  FF                 	db	255
   120                           
   121                           ;initializer for _novaTecla
   122  000DB1  FF                 	db	255
   123                           
   124                           ;initializer for _lletraASCII
   125  000DB2  FF                 	db	255
   126                           
   127                           ;initializer for _teclaPremuda
   128  000DB3  01                 	db	1
   129  000DB4  02                 	db	2
   130  000DB5  03                 	db	3
   131  000DB6  04                 	db	4
   132  000DB7  05                 	db	5
   133  000DB8  06                 	db	6
   134  000DB9  07                 	db	7
   135  000DBA  08                 	db	8
   136  000DBB  09                 	db	9
   137  000DBC  0A                 	db	10
   138  000DBD  00                 	db	0
   139  000DBE  0B                 	db	11
   140  0000                     _PORTDbits	set	3971
   141  0000                     _LATD	set	3980
   142  0000                     _TRISD	set	3989
   143  0000                     _TRISC	set	3988
   144  0000                     _LATBbits	set	3978
   145  0000                     _TRISB	set	3987
   146  0000                     _TRISA	set	3986
   147  0000                     _PORTCbits	set	3970
   148  0000                     _LATDbits	set	3980
   149  0000                     _LATCbits	set	3979
   150  0000                     _TRISDbits	set	3989
   151  0000                     _TRISCbits	set	3988
   152  0000                     _EEDATA	set	4008
   153  0000                     _EEADR	set	4009
   154  0000                     _RCONbits	set	4048
   155  0000                     _EECON1bits	set	4006
   156  0000                     _T0CONbits	set	4053
   157  0000                     _TMR0L	set	4054
   158  0000                     _TMR0H	set	4055
   159  0000                     _T0CON	set	4053
   160  0000                     _INTCONbits	set	4082
   161                           
   162                           	psect	smallconst
   163  000200                     __psmallconst:
   164                           	callstack 0
   165  000200  00                 	db	0
   166  000201                     STR_2:
   167  000201  32                 	db	50	;'2'
   168  000202  2E                 	db	46
   169  000203  52                 	db	82	;'R'
   170  000204  45                 	db	69	;'E'
   171  000205  47                 	db	71	;'G'
   172  000206  49                 	db	73	;'I'
   173  000207  53                 	db	83	;'S'
   174  000208  54                 	db	84	;'T'
   175  000209  45                 	db	69	;'E'
   176  00020A  52                 	db	82	;'R'
   177  00020B  00                 	db	0
   178  00020C                     STR_1:
   179  00020C  31                 	db	49	;'1'
   180  00020D  2E                 	db	46
   181  00020E  4C                 	db	76	;'L'
   182  00020F  4F                 	db	79	;'O'
   183  000210  47                 	db	71	;'G'
   184  000211  49                 	db	73	;'I'
   185  000212  4E                 	db	78	;'N'
   186  000213  00                 	db	0
   187  000214                     STR_4:
   188  000214  50                 	db	80	;'P'
   189  000215  53                 	db	83	;'S'
   190  000216  57                 	db	87	;'W'
   191  000217  44                 	db	68	;'D'
   192  000218  3A                 	db	58	;':'
   193  000219  20                 	db	32
   194  00021A  00                 	db	0
   195  00021B                     STR_3:
   196  00021B  55                 	db	85	;'U'
   197  00021C  53                 	db	83	;'S'
   198  00021D  45                 	db	69	;'E'
   199  00021E  52                 	db	82	;'R'
   200  00021F  3A                 	db	58	;':'
   201  000220  20                 	db	32
   202  000221  00                 	db	0
   203  000222  00                 	db	0	; dummy byte at the end
   204  0000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208  000B10                     __pcinit:
   209                           	callstack 0
   210  000B10                     start_initialization:
   211                           	callstack 0
   212  000B10                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to COMRAM (27 bytes)
   216                           ; load TBLPTR registers with __pidataCOMRAM
   217  000B10  0EA4               	movlw	low __pidataCOMRAM
   218  000B12  6EF6               	movwf	tblptrl,c
   219  000B14  0E0D               	movlw	high __pidataCOMRAM
   220  000B16  6EF7               	movwf	tblptrh,c
   221  000B18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   222  000B1A  6EF8               	movwf	tblptru,c
   223  000B1C  EE00  F046         	lfsr	0,__pdataCOMRAM
   224  000B20  EE10 F01B          	lfsr	1,27
   225  000B24                     copy_data0:
   226  000B24  0009               	tblrd		*+
   227  000B26  CFF5 FFEE          	movff	tablat,postinc0
   228  000B2A  50E5               	movf	postdec1,w,c
   229  000B2C  50E1               	movf	fsr1l,w,c
   230  000B2E  E1FA               	bnz	copy_data0
   231                           
   232                           ; Clear objects allocated to BANK1 (184 bytes)
   233  000B30  EE01  F000         	lfsr	0,__pbssBANK1
   234  000B34  0EB8               	movlw	184
   235  000B36                     clear_0:
   236  000B36  6AEE               	clrf	postinc0,c
   237  000B38  06E8               	decf	wreg,f,c
   238  000B3A  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   241  000B3C  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   242                           
   243                           ; Clear objects allocated to COMRAM (69 bytes)
   244  000B3E  EE00  F001         	lfsr	0,__pbssCOMRAM
   245  000B42  0E45               	movlw	69
   246  000B44                     clear_1:
   247  000B44  6AEE               	clrf	postinc0,c
   248  000B46  06E8               	decf	wreg,f,c
   249  000B48  E1FD               	bnz	clear_1
   250  000B4A                     end_of_initialization:
   251                           	callstack 0
   252  000B4A                     __end_of__initialization:
   253                           	callstack 0
   254  000B4A  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  000B4C  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  000B4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  000B50  6EF8               	movwf	tblptru,c
   258  000B52  0100               	movlb	0
   259  000B54  EF06  F006         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bitbssCOMRAM
   262  0003B8                     __pbitbssCOMRAM:
   263                           	callstack 0
   264  0003B8                     _return_error:
   265                           	callstack 0
   266  0003B8                     	ds	1
   267  0003B9                     _do_check_exists:
   268                           	callstack 0
   269  0003B9                     	ds	1
   270  0003BA                     _loginNOTRegister:
   271                           	callstack 0
   272  0003BA                     	ds	1
   273  0003BB                     _setSMSon:
   274                           	callstack 0
   275  0003BB                     	ds	1
   276  0003BC                     _nou_s:
   277                           	callstack 0
   278  0003BC                     	ds	1
   279                           
   280                           	psect	bssCOMRAM
   281  000001                     __pbssCOMRAM:
   282                           	callstack 0
   283  000001                     _s_Timers:
   284                           	callstack 0
   285  000001                     	ds	24
   286  000019                     _tmpPassword:
   287                           	callstack 0
   288  000019                     	ds	2
   289  00001B                     _tmpUsername:
   290                           	callstack 0
   291  00001B                     	ds	2
   292  00001D                     _h_Tics:
   293                           	callstack 0
   294  00001D                     	ds	2
   295  00001F                     	ds	1
   296  000020                     _i:
   297                           	callstack 0
   298  000020                     	ds	1
   299  000021                     _indexLastUser:
   300                           	callstack 0
   301  000021                     	ds	1
   302  000022                     _numUsuaris:
   303                           	callstack 0
   304  000022                     	ds	1
   305  000023                     _currentUsrIndex:
   306                           	callstack 0
   307  000023                     	ds	1
   308  000024                     menu@state:
   309                           	callstack 0
   310  000024                     	ds	1
   311  000025                     _timerMenu:
   312                           	callstack 0
   313  000025                     	ds	1
   314  000026                     _j:
   315                           	callstack 0
   316  000026                     	ds	1
   317  000027                     _counter:
   318                           	callstack 0
   319  000027                     	ds	1
   320  000028                     TeTeclat@files:
   321                           	callstack 0
   322  000028                     	ds	1
   323  000029                     TeTeclat@cols:
   324                           	callstack 0
   325  000029                     	ds	1
   326  00002A                     TeTeclat@state:
   327                           	callstack 0
   328  00002A                     	ds	1
   329  00002B                     _tiTeclat:
   330                           	callstack 0
   331  00002B                     	ds	1
   332  00002C                     SMotor@state:
   333                           	callstack 0
   334  00002C                     	ds	1
   335  00002D                     _sumaPulsacions:
   336                           	callstack 0
   337  00002D                     	ds	1
   338  00002E                     _s_ptr:
   339                           	callstack 0
   340  00002E                     	ds	1
   341  00002F                     _Timer:
   342                           	callstack 0
   343  00002F                     	ds	1
   344  000030                     _ColumnAct:
   345                           	callstack 0
   346  000030                     	ds	1
   347  000031                     _RowAct:
   348                           	callstack 0
   349  000031                     	ds	1
   350  000032                     _Columns:
   351                           	callstack 0
   352  000032                     	ds	1
   353  000033                     _Rows:
   354                           	callstack 0
   355  000033                     	ds	1
   356  000034                     _password:
   357                           	callstack 0
   358  000034                     	ds	9
   359  00003D                     _username:
   360                           	callstack 0
   361  00003D                     	ds	9
   362                           
   363                           	psect	dataCOMRAM
   364  000046                     __pdataCOMRAM:
   365                           	callstack 0
   366  000046                     _lletraInici:
   367                           	callstack 0
   368  000046                     	ds	9
   369  00004F                     _novaLletra:
   370                           	callstack 0
   371  00004F                     	ds	1
   372  000050                     _NovaTecla:
   373                           	callstack 0
   374  000050                     	ds	1
   375  000051                     _ultimaTecla:
   376                           	callstack 0
   377  000051                     	ds	1
   378  000052                     _timerSMS:
   379                           	callstack 0
   380  000052                     	ds	1
   381  000053                     _novaTecla:
   382                           	callstack 0
   383  000053                     	ds	1
   384  000054                     _lletraASCII:
   385                           	callstack 0
   386  000054                     	ds	1
   387  000055                     _teclaPremuda:
   388                           	callstack 0
   389  000055                     	ds	12
   390                           
   391                           	psect	bssBANK1
   392  000100                     __pbssBANK1:
   393                           	callstack 0
   394  000100                     _usuaris:
   395                           	callstack 0
   396  000100                     	ds	184
   397                           
   398                           	psect	cstackCOMRAM
   399  000061                     __pcstackCOMRAM:
   400                           	callstack 0
   401  000061                     
   402                           ; 1 bytes @ 0x0
   403  000061                     	ds	1
   404  000062                     ??_high_rsi:
   405                           
   406                           ; 1 bytes @ 0x1
   407  000062                     	ds	4
   408  000066                     ??_EscriuPrimeraOrdre:
   409  000066                     ??_Uinit:
   410  000066                     ??_CantaPartAlta:
   411  000066                     ??_CantaPartBaixa:
   412  000066                     ?_TiGetTics:
   413                           	callstack 0
   414  000066                     LcNewString@new_s:
   415                           	callstack 0
   416  000066                     SsetNovaTecla@tecla:
   417                           	callstack 0
   418  000066                     TiResetTics@Handle:
   419                           	callstack 0
   420  000066                     MsetNovaTecla@tecla:
   421                           	callstack 0
   422  000066                     MNovaLletra@lletra:
   423                           	callstack 0
   424  000066                     UsetData@user:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x5
   428  000066                     	ds	1
   429  000067                     CantaPartAlta@c:
   430                           	callstack 0
   431  000067                     CantaPartBaixa@c:
   432                           	callstack 0
   433  000067                     EscriuPrimeraOrdre@ordre:
   434                           	callstack 0
   435  000067                     UsetData@pass:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x6
   439  000067                     	ds	1
   440  000068                     ??_TiGetTics:
   441  000068                     CantaIR@IR:
   442                           	callstack 0
   443  000068                     CantaData@Data:
   444                           	callstack 0
   445  000068                     Uinit@i:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x7
   449  000068                     	ds	1
   450  000069                     Uinit@j:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x8
   454  000069                     	ds	1
   455  00006A                     TiGetTics@Handle:
   456                           	callstack 0
   457  00006A                     Uinit@j_967:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x9
   461  00006A                     	ds	1
   462  00006B                     TiGetTics@actual:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xA
   466  00006B                     	ds	2
   467  00006D                     ??_SMotor:
   468  00006D                     ??_TeTeclat:
   469  00006D                     WaitForBusy@Busy:
   470                           	callstack 0
   471  00006D                     Espera@ms:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xC
   475  00006D                     	ds	1
   476  00006E                     LcGotoXY@Row:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0xD
   480  00006E                     	ds	1
   481  00006F                     ??_Espera:
   482  00006F                     LcGotoXY@Fisics:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xE
   486  00006F                     	ds	1
   487  000070                     Espera@Timer:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xF
   491  000070                     	ds	1
   492  000071                     LcInit@columns:
   493                           	callstack 0
   494  000071                     _LcGotoXY$342:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x10
   498  000071                     	ds	1
   499  000072                     LcInit@rows:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x11
   503  000072                     	ds	1
   504  000073                     LcGotoXY@Column:
   505                           	callstack 0
   506  000073                     LcInit@i:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x12
   510  000073                     	ds	1
   511  000074                     LcPutChar@c:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x13
   515  000074                     	ds	1
   516  000075                     ??_menu:
   517  000075                     
   518                           ; 1 bytes @ 0x14
   519  000075                     	ds	2
   520  000077                     
   521                           ; 1 bytes @ 0x16
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 69 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1
   541 ;;      Params:         0       0       0
   542 ;;      Locals:         0       0       0
   543 ;;      Temps:          0       0       0
   544 ;;      Totals:         0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels required when called: 7
   547 ;; This function calls:
   548 ;;		_LcInit
   549 ;;		_LcLCD
   550 ;;		_Minit
   551 ;;		_SMotor
   552 ;;		_Sinit
   553 ;;		_TeInit
   554 ;;		_TeTeclat
   555 ;;		_TiInitTimer
   556 ;;		_Uinit
   557 ;;		_init_ports
   558 ;;		_menu
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565  000C0C                     __ptext0:
   566                           	callstack 0
   567  000C0C                     _main:
   568                           	callstack 24
   569                           
   570                           ;main.c: 70:     init_ports();
   571                           
   572                           ;incstack = 0
   573  000C0C  ECC2  F006         	call	_init_ports	;wreg free
   574                           
   575                           ;main.c: 71:     TiInitTimer();
   576  000C10  EC22  F006         	call	_TiInitTimer	;wreg free
   577                           
   578                           ;main.c: 72:     TeInit();
   579  000C14  EC11  F007         	call	_TeInit	;wreg free
   580                           
   581                           ;main.c: 73:     Sinit();
   582  000C18  EC15  F007         	call	_Sinit	;wreg free
   583                           
   584                           ;main.c: 74:     SMotor();
   585  000C1C  EC3C  F002         	call	_SMotor	;wreg free
   586                           
   587                           ;main.c: 75:     Uinit();
   588  000C20  EC31  F004         	call	_Uinit	;wreg free
   589                           
   590                           ;main.c: 77:     LcInit(2,16);
   591  000C24  0E10               	movlw	16
   592  000C26  6E71               	movwf	LcInit@columns^0,c
   593  000C28  0E02               	movlw	2
   594  000C2A  ECC4  F003         	call	_LcInit
   595                           
   596                           ;main.c: 78:     Minit();
   597  000C2E  EC1D  F007         	call	_Minit	;wreg free
   598  000C32                     l2595:
   599                           
   600                           ;main.c: 82:         menu();
   601  000C32  EC12  F001         	call	_menu	;wreg free
   602                           
   603                           ;main.c: 85:         TeTeclat();
   604  000C36  EC12  F003         	call	_TeTeclat	;wreg free
   605                           
   606                           ;main.c: 86:         SMotor();
   607  000C3A  EC3C  F002         	call	_SMotor	;wreg free
   608                           
   609                           ;main.c: 87:         LcLCD();
   610  000C3E  EC70  F006         	call	_LcLCD	;wreg free
   611  000C42  D7F7               	goto	l2595
   612  000C44                     __end_of_main:
   613                           	callstack 0
   614                           
   615 ;; *************** function _menu *****************
   616 ;; Defined at:
   617 ;;		line 27 in file "Menu.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1
   631 ;;      Params:         0       0       0
   632 ;;      Locals:         0       0       0
   633 ;;      Temps:          2       0       0
   634 ;;      Totals:         2       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 6
   638 ;; This function calls:
   639 ;;		_LcClear
   640 ;;		_LcGotoXY
   641 ;;		_LcLliure
   642 ;;		_LcNewString
   643 ;;		_LcPutChar
   644 ;;		_SMSon
   645 ;;		_UcheckExists
   646 ;;		_UcheckExistsGetError
   647 ;;		_UgetNumUsuaris
   648 ;;		_UsetData
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text1
   655  000224                     __ptext1:
   656                           	callstack 0
   657  000224                     _menu:
   658                           	callstack 24
   659                           
   660                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
   661                           
   662                           ;incstack = 0
   663  000224  D0F6               	goto	l2491
   664  000226                     l2339:
   665                           
   666                           ;Menu.c: 32:    LcClear();
   667  000226  EC9E  F006         	call	_LcClear	;wreg free
   668                           
   669                           ;Menu.c: 33:    LcNewString("1.LOGIN");
   670  00022A  0E0C               	movlw	low STR_1
   671  00022C  6E66               	movwf	LcNewString@new_s^0,c
   672  00022E  EC05  F007         	call	_LcNewString	;wreg free
   673                           
   674                           ;Menu.c: 34:    state = 1;
   675  000232  0E01               	movlw	1
   676  000234  6E24               	movwf	menu@state^0,c
   677                           
   678                           ;Menu.c: 35:   break;
   679  000236  0012               	return	
   680  000238                     l2345:
   681                           
   682                           ;Menu.c: 37:    if (LcLliure()) {
   683  000238  ECF9  F006         	call	_LcLliure	;wreg free
   684  00023C  A0D8               	btfss	status,0,c
   685  00023E  0012               	return	
   686                           
   687                           ;Menu.c: 38:     LcGotoXY(0,1);
   688  000240  0E01               	movlw	1
   689  000242  6E6E               	movwf	LcGotoXY@Row^0,c
   690  000244  0E00               	movlw	0
   691  000246  ECCC  F005         	call	_LcGotoXY
   692                           
   693                           ;Menu.c: 39:     LcNewString("2.REGISTER");
   694  00024A  0E01               	movlw	low STR_2
   695  00024C  6E66               	movwf	LcNewString@new_s^0,c
   696  00024E  EC05  F007         	call	_LcNewString	;wreg free
   697                           
   698                           ;Menu.c: 40:     NovaTecla = -1;
   699  000252  6850               	setf	_NovaTecla^0,c
   700                           
   701                           ;Menu.c: 41:     state = 2;
   702  000254  0E02               	movlw	2
   703  000256  6E24               	movwf	menu@state^0,c
   704  000258  0012               	return	
   705  00025A                     l2355:
   706                           
   707                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   708  00025A  0450               	decf	_NovaTecla^0,w,c
   709  00025C  A4D8               	btfss	status,2,c
   710  00025E  D009               	goto	l2363
   711  000260  EC24  F007         	call	_UgetNumUsuaris	;wreg free
   712  000264  0900               	iorlw	0
   713  000266  B4D8               	btfsc	status,2,c
   714  000268  D004               	goto	l2363
   715                           
   716                           ;Menu.c: 46:     loginNOTRegister = 1;
   717  00026A  8477               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   718  00026C                     l2361:
   719                           
   720                           ;Menu.c: 47:     state = 3;
   721  00026C  0E03               	movlw	3
   722  00026E  6E24               	movwf	menu@state^0,c
   723                           
   724                           ;Menu.c: 48:    }
   725  000270  0012               	return	
   726  000272                     l2363:
   727  000272  0E02               	movlw	2
   728  000274  1850               	xorwf	_NovaTecla^0,w,c
   729  000276  A4D8               	btfss	status,2,c
   730  000278  0012               	return	
   731                           
   732                           ;Menu.c: 50:     loginNOTRegister = 0;
   733  00027A  9477               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   734  00027C  D7F7               	goto	l2361
   735  00027E                     l415:
   736                           
   737                           ;Menu.c: 55:    NovaTecla = -1;
   738  00027E  6850               	setf	_NovaTecla^0,c
   739                           
   740                           ;Menu.c: 56:    LcClear();
   741  000280  EC9E  F006         	call	_LcClear	;wreg free
   742                           
   743                           ;Menu.c: 57:    LcNewString("USER: ");
   744  000284  0E1B               	movlw	low STR_3
   745  000286  6E66               	movwf	LcNewString@new_s^0,c
   746  000288  EC05  F007         	call	_LcNewString	;wreg free
   747                           
   748                           ;Menu.c: 58:    state = 4;
   749  00028C  0E04               	movlw	4
   750  00028E  6E24               	movwf	menu@state^0,c
   751                           
   752                           ;Menu.c: 59:   break;
   753  000290  0012               	return	
   754  000292                     l2375:
   755                           
   756                           ;Menu.c: 61:    if (LcLliure()) {
   757  000292  ECF9  F006         	call	_LcLliure	;wreg free
   758  000296  A0D8               	btfss	status,0,c
   759  000298  0012               	return	
   760                           
   761                           ;Menu.c: 62:     LcGotoXY(0,1);
   762  00029A  0E01               	movlw	1
   763  00029C  6E6E               	movwf	LcGotoXY@Row^0,c
   764  00029E  0E00               	movlw	0
   765  0002A0  ECCC  F005         	call	_LcGotoXY
   766                           
   767                           ;Menu.c: 63:     LcNewString("PSWD: ");
   768  0002A4  0E14               	movlw	low STR_4
   769  0002A6  6E66               	movwf	LcNewString@new_s^0,c
   770  0002A8  EC05  F007         	call	_LcNewString	;wreg free
   771                           
   772                           ;Menu.c: 64:     state = 5;
   773  0002AC  0E05               	movlw	5
   774  0002AE  6E24               	movwf	menu@state^0,c
   775  0002B0  0012               	return	
   776  0002B2                     l2383:
   777                           
   778                           ;Menu.c: 68:    if (LcLliure()) {
   779  0002B2  ECF9  F006         	call	_LcLliure	;wreg free
   780  0002B6  A0D8               	btfss	status,0,c
   781  0002B8  0012               	return	
   782                           
   783                           ;Menu.c: 69:     LcGotoXY(6,0);
   784  0002BA  0E00               	movlw	0
   785  0002BC  6E6E               	movwf	LcGotoXY@Row^0,c
   786  0002BE  0E06               	movlw	6
   787  0002C0  ECCC  F005         	call	_LcGotoXY
   788                           
   789                           ;Menu.c: 70:     SMSon();
   790  0002C4  EC21  F007         	call	_SMSon	;wreg free
   791                           
   792                           ;Menu.c: 71:     j =0;
   793  0002C8  0E00               	movlw	0
   794  0002CA  6E26               	movwf	_j^0,c
   795  0002CC                     l2391:
   796                           
   797                           ;Menu.c: 72:     state = 6;
   798  0002CC  0E06               	movlw	6
   799  0002CE  6E24               	movwf	menu@state^0,c
   800  0002D0  0012               	return	
   801  0002D2                     l2393:
   802                           
   803                           ;Menu.c: 76:    if (novaLletra > 47 && NovaTecla < 11) {
   804  0002D2  504F               	movf	_novaLletra^0,w,c
   805  0002D4  0A80               	xorlw	128
   806  0002D6  0F50               	addlw	-176
   807  0002D8  A0D8               	btfss	status,0,c
   808  0002DA  D014               	goto	l2409
   809  0002DC  5050               	movf	_NovaTecla^0,w,c
   810  0002DE  0A80               	xorlw	128
   811  0002E0  0F75               	addlw	-139
   812  0002E2  B0D8               	btfsc	status,0,c
   813  0002E4  D00F               	goto	l2409
   814                           
   815                           ;Menu.c: 77:     LcPutChar(novaLletra);
   816  0002E6  504F               	movf	_novaLletra^0,w,c
   817  0002E8  EC5F  F005         	call	_LcPutChar
   818                           
   819                           ;Menu.c: 78:     username[j] = novaLletra;
   820  0002EC  5026               	movf	_j^0,w,c
   821  0002EE  0F3D               	addlw	low _username
   822  0002F0  6ED9               	movwf	fsr2l,c
   823  0002F2  6ADA               	clrf	fsr2h,c
   824  0002F4  C04F  FFDF         	movff	_novaLletra,indf2
   825                           
   826                           ;Menu.c: 79:     NovaTecla = -1;
   827  0002F8  6850               	setf	_NovaTecla^0,c
   828                           
   829                           ;Menu.c: 80:     novaLletra = -1;
   830  0002FA  684F               	setf	_novaLletra^0,c
   831                           
   832                           ;Menu.c: 81:     j++;
   833  0002FC  2A26               	incf	_j^0,f,c
   834                           
   835                           ;Menu.c: 82:     state = 7;
   836  0002FE  0E07               	movlw	7
   837  000300  6E24               	movwf	menu@state^0,c
   838                           
   839                           ;Menu.c: 83:    }
   840  000302  0012               	return	
   841  000304                     l2409:
   842  000304  0E0B               	movlw	11
   843  000306  1850               	xorwf	_NovaTecla^0,w,c
   844  000308  A4D8               	btfss	status,2,c
   845  00030A  0012               	return	
   846                           
   847                           ;Menu.c: 85:     j = 8;
   848  00030C  0E08               	movlw	8
   849  00030E  6E26               	movwf	_j^0,c
   850                           
   851                           ;Menu.c: 86:     state = 7;
   852  000310  0E07               	movlw	7
   853  000312  6E24               	movwf	menu@state^0,c
   854  000314  0012               	return	
   855  000316                     l2413:
   856                           
   857                           ;Menu.c: 90:    if (j != 8) {
   858  000316  0E08               	movlw	8
   859  000318  1826               	xorwf	_j^0,w,c
   860  00031A  A4D8               	btfss	status,2,c
   861  00031C  D7D7               	goto	l2391
   862  00031E  0E08               	movlw	8
   863  000320  1826               	xorwf	_j^0,w,c
   864  000322  A4D8               	btfss	status,2,c
   865  000324  0012               	return	
   866                           
   867                           ;Menu.c: 94:     LcGotoXY(6,1);
   868  000326  0E01               	movlw	1
   869  000328  6E6E               	movwf	LcGotoXY@Row^0,c
   870  00032A  0E06               	movlw	6
   871  00032C  ECCC  F005         	call	_LcGotoXY
   872                           
   873                           ;Menu.c: 95:     username[j] = novaLletra;
   874  000330  5026               	movf	_j^0,w,c
   875  000332  0F3D               	addlw	low _username
   876  000334  6ED9               	movwf	fsr2l,c
   877  000336  6ADA               	clrf	fsr2h,c
   878  000338  C04F  FFDF         	movff	_novaLletra,indf2
   879                           
   880                           ;Menu.c: 96:     NovaTecla = -1;
   881  00033C  6850               	setf	_NovaTecla^0,c
   882                           
   883                           ;Menu.c: 97:     novaLletra = -1;
   884  00033E  684F               	setf	_novaLletra^0,c
   885                           
   886                           ;Menu.c: 98:     j = 0;
   887  000340  0E00               	movlw	0
   888  000342  6E26               	movwf	_j^0,c
   889  000344                     l2429:
   890                           
   891                           ;Menu.c: 99:     state = 8;
   892  000344  0E08               	movlw	8
   893  000346  6E24               	movwf	menu@state^0,c
   894  000348  0012               	return	
   895  00034A                     l2431:
   896                           
   897                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla < 11) {
   898  00034A  504F               	movf	_novaLletra^0,w,c
   899  00034C  0A80               	xorlw	128
   900  00034E  0F50               	addlw	-176
   901  000350  A0D8               	btfss	status,0,c
   902  000352  D014               	goto	l2447
   903  000354  5050               	movf	_NovaTecla^0,w,c
   904  000356  0A80               	xorlw	128
   905  000358  0F75               	addlw	-139
   906  00035A  B0D8               	btfsc	status,0,c
   907  00035C  D00F               	goto	l2447
   908                           
   909                           ;Menu.c: 104:     LcPutChar(novaLletra);
   910  00035E  504F               	movf	_novaLletra^0,w,c
   911  000360  EC5F  F005         	call	_LcPutChar
   912                           
   913                           ;Menu.c: 105:     password[j] = novaLletra;
   914  000364  5026               	movf	_j^0,w,c
   915  000366  0F34               	addlw	low _password
   916  000368  6ED9               	movwf	fsr2l,c
   917  00036A  6ADA               	clrf	fsr2h,c
   918  00036C  C04F  FFDF         	movff	_novaLletra,indf2
   919                           
   920                           ;Menu.c: 106:     NovaTecla = -1;
   921  000370  6850               	setf	_NovaTecla^0,c
   922                           
   923                           ;Menu.c: 107:     novaLletra = -1;
   924  000372  684F               	setf	_novaLletra^0,c
   925                           
   926                           ;Menu.c: 108:     j++;
   927  000374  2A26               	incf	_j^0,f,c
   928                           
   929                           ;Menu.c: 109:     state = 9;
   930  000376  0E09               	movlw	9
   931  000378  6E24               	movwf	menu@state^0,c
   932                           
   933                           ;Menu.c: 110:    }
   934  00037A  0012               	return	
   935  00037C                     l2447:
   936  00037C  0E0B               	movlw	11
   937  00037E  1850               	xorwf	_NovaTecla^0,w,c
   938  000380  A4D8               	btfss	status,2,c
   939  000382  0012               	return	
   940                           
   941                           ;Menu.c: 112:     j = 8;
   942  000384  0E08               	movlw	8
   943  000386  6E26               	movwf	_j^0,c
   944                           
   945                           ;Menu.c: 113:     state = 9;
   946  000388  0E09               	movlw	9
   947  00038A  6E24               	movwf	menu@state^0,c
   948  00038C  0012               	return	
   949  00038E                     l2451:
   950                           
   951                           ;Menu.c: 117:    if (j != 8) {
   952  00038E  0E08               	movlw	8
   953  000390  1826               	xorwf	_j^0,w,c
   954  000392  A4D8               	btfss	status,2,c
   955  000394  D7D7               	goto	l2429
   956  000396  0E08               	movlw	8
   957  000398  1826               	xorwf	_j^0,w,c
   958  00039A  A4D8               	btfss	status,2,c
   959  00039C  0012               	return	
   960                           
   961                           ;Menu.c: 121:     password[j] = novaLletra;
   962  00039E  5026               	movf	_j^0,w,c
   963  0003A0  0F34               	addlw	low _password
   964  0003A2  6ED9               	movwf	fsr2l,c
   965  0003A4  6ADA               	clrf	fsr2h,c
   966  0003A6  C04F  FFDF         	movff	_novaLletra,indf2
   967                           
   968                           ;Menu.c: 122:     NovaTecla = -1;
   969  0003AA  6850               	setf	_NovaTecla^0,c
   970                           
   971                           ;Menu.c: 123:     novaLletra = -1;
   972  0003AC  684F               	setf	_novaLletra^0,c
   973                           
   974                           ;Menu.c: 124:     j = 0;
   975  0003AE  0E00               	movlw	0
   976  0003B0  6E26               	movwf	_j^0,c
   977                           
   978                           ;Menu.c: 125:     LcClear();
   979  0003B2  EC9E  F006         	call	_LcClear	;wreg free
   980                           
   981                           ;Menu.c: 126:     UsetData(username, password);
   982  0003B6  0E3D               	movlw	low _username
   983  0003B8  6E66               	movwf	UsetData@user^0,c
   984  0003BA  0E34               	movlw	low _password
   985  0003BC  6E67               	movwf	UsetData@pass^0,c
   986  0003BE  ECEC  F006         	call	_UsetData	;wreg free
   987                           
   988                           ;Menu.c: 127:     UcheckExists();
   989  0003C2  EC26  F007         	call	_UcheckExists	;wreg free
   990                           
   991                           ;Menu.c: 128:     state = 10;
   992  0003C6  0E0A               	movlw	10
   993  0003C8  6E24               	movwf	menu@state^0,c
   994  0003CA  0012               	return	
   995  0003CC                     l438:
   996                           
   997                           ;Menu.c: 137:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
   998  0003CC  B477               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   999  0003CE  D007               	goto	l439
  1000  0003D0  ECF3  F006         	call	_UcheckExistsGetError	;wreg free
  1001  0003D4  B0D8               	btfsc	status,0,c
  1002  0003D6  D003               	goto	l439
  1003                           
  1004                           ;Menu.c: 138:     state = 12;
  1005  0003D8  0E0C               	movlw	12
  1006  0003DA  6E24               	movwf	menu@state^0,c
  1007                           
  1008                           ;Menu.c: 139:    }
  1009  0003DC  0012               	return	
  1010  0003DE                     l439:
  1011  0003DE  A477               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1012  0003E0  D00B               	goto	l441
  1013  0003E2  0EE6               	movlw	low _UcheckExistsGetError
  1014  0003E4  6E75               	movwf	??_menu^0,c
  1015  0003E6  0E0D               	movlw	high _UcheckExistsGetError
  1016  0003E8  6E76               	movwf	(??_menu+1)^0,c
  1017  0003EA  0475               	decf	??_menu^0,w,c
  1018  0003EC  1076               	iorwf	(??_menu+1)^0,w,c
  1019  0003EE  A4D8               	btfss	status,2,c
  1020  0003F0  D003               	goto	l441
  1021                           
  1022                           ;Menu.c: 141:     state = 13;
  1023  0003F2  0E0D               	movlw	13
  1024  0003F4  6E24               	movwf	menu@state^0,c
  1025                           
  1026                           ;Menu.c: 142:    }
  1027  0003F6  0012               	return	
  1028  0003F8                     l441:
  1029  0003F8  B477               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1030  0003FA  0012               	return	
  1031                           
  1032                           ;Menu.c: 144:     state = 0;
  1033  0003FC  0E00               	movlw	0
  1034  0003FE  6E24               	movwf	menu@state^0,c
  1035  000400  0012               	return	
  1036  000402                     l2485:
  1037                           
  1038                           ;Menu.c: 148:             LcPutChar('r');
  1039  000402  0E72               	movlw	114
  1040  000404  EC5F  F005         	call	_LcPutChar
  1041                           
  1042                           ;Menu.c: 149:   break;
  1043  000408  0012               	return	
  1044  00040A                     l2487:
  1045                           
  1046                           ;Menu.c: 151:             LcPutChar('l');
  1047  00040A  0E6C               	movlw	108
  1048  00040C  EC5F  F005         	call	_LcPutChar
  1049                           
  1050                           ;Menu.c: 152:   break;
  1051  000410  0012               	return	
  1052  000412                     l2491:
  1053  000412  5024               	movf	menu@state^0,w,c
  1054  000414  6E75               	movwf	??_menu^0,c
  1055  000416  6A76               	clrf	(??_menu+1)^0,c
  1056                           
  1057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1058                           ; Switch size 1, requested type "simple"
  1059                           ; Number of cases is 1, Range of values is 0 to 0
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte            4     3 (average)
  1063                           ;	Chosen strategy is simple_byte
  1064  000418  5076               	movf	(??_menu+1)^0,w,c
  1065  00041A  0A00               	xorlw	0	; case 0
  1066  00041C  A4D8               	btfss	status,2,c
  1067  00041E  0012               	return	
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 14, Range of values is 0 to 13
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           43    22 (average)
  1074                           ;	Chosen strategy is simple_byte
  1075  000420  5075               	movf	??_menu^0,w,c
  1076  000422  0A00               	xorlw	0	; case 0
  1077  000424  B4D8               	btfsc	status,2,c
  1078  000426  D6FF               	goto	l2339
  1079  000428  0A01               	xorlw	1	; case 1
  1080  00042A  B4D8               	btfsc	status,2,c
  1081  00042C  D705               	goto	l2345
  1082  00042E  0A03               	xorlw	3	; case 2
  1083  000430  B4D8               	btfsc	status,2,c
  1084  000432  D713               	goto	l2355
  1085  000434  0A01               	xorlw	1	; case 3
  1086  000436  B4D8               	btfsc	status,2,c
  1087  000438  D722               	goto	l415
  1088  00043A  0A07               	xorlw	7	; case 4
  1089  00043C  B4D8               	btfsc	status,2,c
  1090  00043E  D729               	goto	l2375
  1091  000440  0A01               	xorlw	1	; case 5
  1092  000442  B4D8               	btfsc	status,2,c
  1093  000444  D736               	goto	l2383
  1094  000446  0A03               	xorlw	3	; case 6
  1095  000448  B4D8               	btfsc	status,2,c
  1096  00044A  D743               	goto	l2393
  1097  00044C  0A01               	xorlw	1	; case 7
  1098  00044E  B4D8               	btfsc	status,2,c
  1099  000450  D762               	goto	l2413
  1100  000452  0A0F               	xorlw	15	; case 8
  1101  000454  B4D8               	btfsc	status,2,c
  1102  000456  D779               	goto	l2431
  1103  000458  0A01               	xorlw	1	; case 9
  1104  00045A  B4D8               	btfsc	status,2,c
  1105  00045C  D798               	goto	l2451
  1106  00045E  0A03               	xorlw	3	; case 10
  1107  000460  B4D8               	btfsc	status,2,c
  1108  000462  0012               	return	
  1109  000464  0A01               	xorlw	1	; case 11
  1110  000466  B4D8               	btfsc	status,2,c
  1111  000468  D7B1               	goto	l438
  1112  00046A  0A07               	xorlw	7	; case 12
  1113  00046C  B4D8               	btfsc	status,2,c
  1114  00046E  D7C9               	goto	l2485
  1115  000470  0A01               	xorlw	1	; case 13
  1116  000472  A4D8               	btfss	status,2,c
  1117  000474  0012               	return	
  1118  000476  D7C9               	goto	l2487
  1119  000478                     __end_of_menu:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _UsetData *****************
  1123 ;; Defined at:
  1124 ;;		line 36 in file "Usuaris.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  user            1    5[COMRAM] PTR unsigned char 
  1127 ;;		 -> username(9), 
  1128 ;;  pass            1    6[COMRAM] PTR unsigned char 
  1129 ;;		 -> password(9), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1
  1141 ;;      Params:         2       0       0
  1142 ;;      Locals:         0       0       0
  1143 ;;      Temps:          0       0       0
  1144 ;;      Totals:         2       0       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 2
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_menu
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text2
  1156  000DD8                     __ptext2:
  1157                           	callstack 0
  1158  000DD8                     _UsetData:
  1159                           	callstack 27
  1160                           
  1161                           ;Usuaris.c: 37:     tmpUsername = user;
  1162                           
  1163                           ;incstack = 0
  1164  000DD8  C066  F01B         	movff	UsetData@user,_tmpUsername
  1165  000DDC  6A1C               	clrf	(_tmpUsername+1)^0,c
  1166                           
  1167                           ;Usuaris.c: 38:     tmpPassword = pass;
  1168  000DDE  C067  F019         	movff	UsetData@pass,_tmpPassword
  1169  000DE2  6A1A               	clrf	(_tmpPassword+1)^0,c
  1170  000DE4  0012               	return		;funcret
  1171  000DE6                     __end_of_UsetData:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _UgetNumUsuaris *****************
  1175 ;; Defined at:
  1176 ;;		line 23 in file "Usuaris.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      unsigned char 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1
  1190 ;;      Params:         0       0       0
  1191 ;;      Locals:         0       0       0
  1192 ;;      Temps:          0       0       0
  1193 ;;      Totals:         0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_menu
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text3
  1205  000E48                     __ptext3:
  1206                           	callstack 0
  1207  000E48                     _UgetNumUsuaris:
  1208                           	callstack 27
  1209                           
  1210                           ;Usuaris.c: 24:     return numUsuaris;
  1211                           
  1212                           ;incstack = 0
  1213  000E48  5022               	movf	_numUsuaris^0,w,c
  1214  000E4A  0012               	return		;funcret
  1215  000E4C                     __end_of_UgetNumUsuaris:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _UcheckExistsGetError *****************
  1219 ;; Defined at:
  1220 ;;		line 33 in file "Usuaris.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1
  1234 ;;      Params:         0       0       0
  1235 ;;      Locals:         0       0       0
  1236 ;;      Temps:          0       0       0
  1237 ;;      Totals:         0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 2
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_menu
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text4
  1249  000DE6                     __ptext4:
  1250                           	callstack 0
  1251  000DE6                     _UcheckExistsGetError:
  1252                           	callstack 27
  1253                           
  1254                           ;Usuaris.c: 34:     return return_error;
  1255                           
  1256                           ;incstack = 0
  1257  000DE6  B077               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1258  000DE8  D002               	goto	l1407
  1259  000DEA  90D8               	bcf	status,0,c
  1260  000DEC  0012               	return	
  1261  000DEE                     l1407:
  1262  000DEE  80D8               	bsf	status,0,c
  1263  000DF0  0012               	return		;funcret
  1264  000DF2                     __end_of_UcheckExistsGetError:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _UcheckExists *****************
  1268 ;; Defined at:
  1269 ;;		line 27 in file "Usuaris.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		None
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1
  1283 ;;      Params:         0       0       0
  1284 ;;      Locals:         0       0       0
  1285 ;;      Temps:          0       0       0
  1286 ;;      Totals:         0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 2
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_menu
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text5
  1298  000E4C                     __ptext5:
  1299                           	callstack 0
  1300  000E4C                     _UcheckExists:
  1301                           	callstack 27
  1302                           
  1303                           ;Usuaris.c: 28:     do_check_exists = 1;
  1304                           
  1305                           ;incstack = 0
  1306  000E4C  8277               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1307  000E4E  0012               	return		;funcret
  1308  000E50                     __end_of_UcheckExists:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _SMSon *****************
  1312 ;; Defined at:
  1313 ;;		line 114 in file "Ssms.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1
  1327 ;;      Params:         0       0       0
  1328 ;;      Locals:         0       0       0
  1329 ;;      Temps:          0       0       0
  1330 ;;      Totals:         0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 2
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_menu
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text6
  1342  000E42                     __ptext6:
  1343                           	callstack 0
  1344  000E42                     _SMSon:
  1345                           	callstack 27
  1346                           
  1347                           ;Ssms.c: 115:     setSMSon = 1;
  1348                           
  1349                           ;incstack = 0
  1350  000E42  8677               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1351                           
  1352                           ;Ssms.c: 116:     novaTecla = -1;
  1353  000E44  6853               	setf	_novaTecla^0,c
  1354  000E46  0012               	return		;funcret
  1355  000E48                     __end_of_SMSon:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _LcNewString *****************
  1359 ;; Defined at:
  1360 ;;		line 239 in file "LcTLCD.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1363 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1
  1375 ;;      Params:         1       0       0
  1376 ;;      Locals:         0       0       0
  1377 ;;      Temps:          0       0       0
  1378 ;;      Totals:         1       0       0
  1379 ;;Total ram usage:        1 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 2
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_menu
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text7
  1390  000E0A                     __ptext7:
  1391                           	callstack 0
  1392  000E0A                     _LcNewString:
  1393                           	callstack 27
  1394                           
  1395                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1396                           
  1397                           ;incstack = 0
  1398  000E0A  C066  F02E         	movff	LcNewString@new_s,_s_ptr
  1399                           
  1400                           ;LcTLCD.c: 241:     nou_s = 1;
  1401  000E0E  8877               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1402  000E10  0012               	return		;funcret
  1403  000E12                     __end_of_LcNewString:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _LcLliure *****************
  1407 ;; Defined at:
  1408 ;;		line 265 in file "LcTLCD.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;		None               void
  1415 ;; Registers used:
  1416 ;;		status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1
  1422 ;;      Params:         0       0       0
  1423 ;;      Locals:         0       0       0
  1424 ;;      Temps:          0       0       0
  1425 ;;      Totals:         0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 2
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_menu
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text8
  1437  000DF2                     __ptext8:
  1438                           	callstack 0
  1439  000DF2                     _LcLliure:
  1440                           	callstack 27
  1441                           
  1442                           ;LcTLCD.c: 266:     return !nou_s;
  1443                           
  1444                           ;incstack = 0
  1445  000DF2  A877               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1446  000DF4  D002               	goto	l1383
  1447  000DF6  90D8               	bcf	status,0,c
  1448  000DF8  0012               	return	
  1449  000DFA                     l1383:
  1450  000DFA  80D8               	bsf	status,0,c
  1451  000DFC  0012               	return		;funcret
  1452  000DFE                     __end_of_LcLliure:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _LcClear *****************
  1456 ;; Defined at:
  1457 ;;		line 82 in file "LcTLCD.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1
  1471 ;;      Params:         0       0       0
  1472 ;;      Locals:         0       0       0
  1473 ;;      Temps:          0       0       0
  1474 ;;      Totals:         0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 5
  1478 ;; This function calls:
  1479 ;;		_CantaIR
  1480 ;;		_Espera
  1481 ;;		_LcGotoXY
  1482 ;;		_WaitForBusy
  1483 ;; This function is called by:
  1484 ;;		_menu
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489  000D3C                     __ptext9:
  1490                           	callstack 0
  1491  000D3C                     _LcClear:
  1492                           	callstack 24
  1493                           
  1494                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1495                           
  1496                           ;incstack = 0
  1497  000D3C  ECAC  F005         	call	_WaitForBusy	;wreg free
  1498  000D40  0E01               	movlw	1
  1499  000D42  EC57  F006         	call	_CantaIR
  1500                           
  1501                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1502  000D46  0E00               	movlw	0
  1503  000D48  6E6E               	movwf	(Espera@ms+1)^0,c
  1504  000D4A  0E03               	movlw	3
  1505  000D4C  6E6D               	movwf	Espera@ms^0,c
  1506  000D4E  502F               	movf	_Timer^0,w,c
  1507  000D50  ECB0  F006         	call	_Espera
  1508                           
  1509                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1510  000D54  0E00               	movlw	0
  1511  000D56  6E6E               	movwf	LcGotoXY@Row^0,c
  1512  000D58  0E00               	movlw	0
  1513  000D5A  ECCC  F005         	call	_LcGotoXY
  1514  000D5E  0012               	return		;funcret
  1515  000D60                     __end_of_LcClear:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _init_ports *****************
  1519 ;; Defined at:
  1520 ;;		line 19 in file "main.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1
  1534 ;;      Params:         0       0       0
  1535 ;;      Locals:         0       0       0
  1536 ;;      Temps:          0       0       0
  1537 ;;      Totals:         0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text10
  1549  000D84                     __ptext10:
  1550                           	callstack 0
  1551  000D84                     _init_ports:
  1552                           	callstack 28
  1553                           
  1554                           ;incstack = 0
  1555  000D84  0E03               	movlw	3
  1556  000D86  6E92               	movwf	146,c	;volatile
  1557  000D88  0EE0               	movlw	224
  1558  000D8A  6E93               	movwf	147,c	;volatile
  1559  000D8C  968A               	bcf	138,3,c	;volatile
  1560  000D8E  908A               	bcf	138,0,c	;volatile
  1561  000D90  928A               	bcf	138,1,c	;volatile
  1562                           
  1563                           ;main.c: 42:     TRISC = 0xC0;
  1564  000D92  0EC0               	movlw	192
  1565  000D94  6E94               	movwf	148,c	;volatile
  1566                           
  1567                           ;main.c: 52:     TRISD = 0x8F;
  1568  000D96  0E8F               	movlw	143
  1569  000D98  6E95               	movwf	149,c	;volatile
  1570                           
  1571                           ;main.c: 53:     LATD = 0x00;
  1572  000D9A  0E00               	movlw	0
  1573  000D9C  6E8C               	movwf	140,c	;volatile
  1574                           
  1575                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1576  000D9E  8EA6               	bsf	166,7,c	;volsfr
  1577                           
  1578                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1579  000DA0  9CA6               	bcf	166,6,c	;volsfr
  1580  000DA2  0012               	return		;funcret
  1581  000DA4                     __end_of_init_ports:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _Uinit *****************
  1585 ;; Defined at:
  1586 ;;		line 40 in file "Usuaris.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  j               1    9[COMRAM] unsigned char 
  1591 ;;  j               1    8[COMRAM] unsigned char 
  1592 ;;  i               1    7[COMRAM] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1
  1602 ;;      Params:         0       0       0
  1603 ;;      Locals:         3       0       0
  1604 ;;      Temps:          2       0       0
  1605 ;;      Totals:         5       0       0
  1606 ;;Total ram usage:        5 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 2
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text11
  1617  000862                     __ptext11:
  1618                           	callstack 0
  1619  000862                     _Uinit:
  1620                           	callstack 28
  1621                           
  1622                           ;Usuaris.c: 45:     EEADR = 0;
  1623                           
  1624                           ;incstack = 0
  1625  000862  0E00               	movlw	0
  1626  000864  6EA9               	movwf	169,c	;volatile
  1627                           
  1628                           ;Usuaris.c: 46:     EECON1bits.EEPGD = 0;
  1629  000866  9EA6               	bcf	166,7,c	;volsfr
  1630                           
  1631                           ;Usuaris.c: 47:     EECON1bits.CFGS = 0;
  1632  000868  9CA6               	bcf	166,6,c	;volsfr
  1633                           
  1634                           ;Usuaris.c: 48:     EECON1bits.RD = 1;
  1635  00086A  80A6               	bsf	166,0,c	;volsfr
  1636  00086C                     l496:
  1637  00086C  B0A6               	btfsc	166,0,c	;volsfr
  1638  00086E  D7FE               	goto	l496
  1639                           
  1640                           ;Usuaris.c: 50:     numUsuaris = EEDATA;
  1641  000870  CFA8 F022          	movff	4008,_numUsuaris	;volatile
  1642                           
  1643                           ;Usuaris.c: 51:     numUsuaris = 8;
  1644  000874  0E08               	movlw	8
  1645  000876  6E22               	movwf	_numUsuaris^0,c
  1646                           
  1647                           ;Usuaris.c: 54:     EEADR++;EECON1bits.EEPGD = 0;
  1648  000878  2AA9               	incf	169,f,c	;volatile
  1649  00087A  9EA6               	bcf	166,7,c	;volsfr
  1650                           
  1651                           ;Usuaris.c: 55:     EECON1bits.CFGS = 0;
  1652  00087C  9CA6               	bcf	166,6,c	;volsfr
  1653  00087E                     l499:
  1654  00087E  B0A6               	btfsc	166,0,c	;volsfr
  1655  000880  D7FE               	goto	l499
  1656                           
  1657                           ;Usuaris.c: 58:     indexLastUser = EEDATA;
  1658  000882  CFA8 F021          	movff	4008,_indexLastUser	;volatile
  1659                           
  1660                           ;Usuaris.c: 59:     EEADR++;
  1661  000886  2AA9               	incf	169,f,c	;volatile
  1662                           
  1663                           ;Usuaris.c: 61:     for(char i = 0; i< numUsuaris; i++){
  1664  000888  0E00               	movlw	0
  1665  00088A  6E68               	movwf	Uinit@i^0,c
  1666  00088C  D041               	goto	l1715
  1667  00088E                     l1685:
  1668                           
  1669                           ;Usuaris.c: 62:         for(char j = 0; j<9; j++){
  1670  00088E  0E00               	movlw	0
  1671  000890  6E69               	movwf	Uinit@j^0,c
  1672  000892                     l504:
  1673                           
  1674                           ;Usuaris.c: 63:             EECON1bits.EEPGD = 0;
  1675  000892  9EA6               	bcf	166,7,c	;volsfr
  1676                           
  1677                           ;Usuaris.c: 64:             EECON1bits.CFGS = 0;
  1678  000894  9CA6               	bcf	166,6,c	;volsfr
  1679                           
  1680                           ;Usuaris.c: 65:             EECON1bits.RD = 1;
  1681  000896  80A6               	bsf	166,0,c	;volsfr
  1682  000898                     l506:
  1683  000898  B0A6               	btfsc	166,0,c	;volsfr
  1684  00089A  D7FE               	goto	l506
  1685                           
  1686                           ;Usuaris.c: 67:             usuaris[i].username[j] = EEDATA;
  1687  00089C  5068               	movf	Uinit@i^0,w,c
  1688  00089E  0D17               	mullw	23
  1689  0008A0  0E00               	movlw	low _usuaris
  1690  0008A2  6E66               	movwf	??_Uinit^0,c
  1691  0008A4  0E01               	movlw	high _usuaris
  1692  0008A6  6E67               	movwf	(??_Uinit+1)^0,c
  1693  0008A8  50F3               	movf	243,w,c
  1694  0008AA  2666               	addwf	??_Uinit^0,f,c
  1695  0008AC  50F4               	movf	244,w,c
  1696  0008AE  2267               	addwfc	(??_Uinit+1)^0,f,c
  1697  0008B0  5069               	movf	Uinit@j^0,w,c
  1698  0008B2  2466               	addwf	??_Uinit^0,w,c
  1699  0008B4  6ED9               	movwf	fsr2l,c
  1700  0008B6  0E00               	movlw	0
  1701  0008B8  2067               	addwfc	(??_Uinit+1)^0,w,c
  1702  0008BA  6EDA               	movwf	fsr2h,c
  1703  0008BC  CFA8 FFDF          	movff	4008,indf2	;volatile
  1704                           
  1705                           ;Usuaris.c: 68:             EEADR++;
  1706  0008C0  2AA9               	incf	169,f,c	;volatile
  1707                           
  1708                           ;Usuaris.c: 69:         }
  1709  0008C2  2A69               	incf	Uinit@j^0,f,c
  1710  0008C4  0E08               	movlw	8
  1711  0008C6  6469               	cpfsgt	Uinit@j^0,c
  1712  0008C8  D7E4               	goto	l504
  1713                           
  1714                           ;Usuaris.c: 70:         for(char j = 0; j<9; j++){
  1715  0008CA  0E00               	movlw	0
  1716  0008CC  6E6A               	movwf	Uinit@j_967^0,c
  1717  0008CE                     l509:
  1718                           
  1719                           ;Usuaris.c: 71:             EECON1bits.EEPGD = 0;
  1720  0008CE  9EA6               	bcf	166,7,c	;volsfr
  1721                           
  1722                           ;Usuaris.c: 72:             EECON1bits.CFGS = 0;
  1723  0008D0  9CA6               	bcf	166,6,c	;volsfr
  1724                           
  1725                           ;Usuaris.c: 73:             EECON1bits.RD = 1;
  1726  0008D2  80A6               	bsf	166,0,c	;volsfr
  1727  0008D4                     l511:
  1728  0008D4  B0A6               	btfsc	166,0,c	;volsfr
  1729  0008D6  D7FE               	goto	l511
  1730                           
  1731                           ;Usuaris.c: 75:             usuaris[i].password[j] = EEDATA;
  1732  0008D8  5068               	movf	Uinit@i^0,w,c
  1733  0008DA  0D17               	mullw	23
  1734  0008DC  0E00               	movlw	low _usuaris
  1735  0008DE  6E66               	movwf	??_Uinit^0,c
  1736  0008E0  0E01               	movlw	high _usuaris
  1737  0008E2  6E67               	movwf	(??_Uinit+1)^0,c
  1738  0008E4  0E09               	movlw	9
  1739  0008E6  2666               	addwf	??_Uinit^0,f,c
  1740  0008E8  0E00               	movlw	0
  1741  0008EA  2267               	addwfc	(??_Uinit+1)^0,f,c
  1742  0008EC  50F3               	movf	243,w,c
  1743  0008EE  2666               	addwf	??_Uinit^0,f,c
  1744  0008F0  50F4               	movf	244,w,c
  1745  0008F2  2267               	addwfc	(??_Uinit+1)^0,f,c
  1746  0008F4  506A               	movf	Uinit@j_967^0,w,c
  1747  0008F6  2466               	addwf	??_Uinit^0,w,c
  1748  0008F8  6ED9               	movwf	fsr2l,c
  1749  0008FA  0E00               	movlw	0
  1750  0008FC  2067               	addwfc	(??_Uinit+1)^0,w,c
  1751  0008FE  6EDA               	movwf	fsr2h,c
  1752  000900  CFA8 FFDF          	movff	4008,indf2	;volatile
  1753                           
  1754                           ;Usuaris.c: 76:             EEADR++;
  1755  000904  2AA9               	incf	169,f,c	;volatile
  1756                           
  1757                           ;Usuaris.c: 77:         }
  1758  000906  2A6A               	incf	Uinit@j_967^0,f,c
  1759  000908  0E08               	movlw	8
  1760  00090A  646A               	cpfsgt	Uinit@j_967^0,c
  1761  00090C  D7E0               	goto	l509
  1762                           
  1763                           ;Usuaris.c: 78:     }
  1764  00090E  2A68               	incf	Uinit@i^0,f,c
  1765  000910                     l1715:
  1766  000910  5022               	movf	_numUsuaris^0,w,c
  1767  000912  5C68               	subwf	Uinit@i^0,w,c
  1768  000914  B0D8               	btfsc	status,0,c
  1769  000916  0012               	return	
  1770  000918  D7BA               	goto	l1685
  1771  00091A                     __end_of_Uinit:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _TiInitTimer *****************
  1775 ;; Defined at:
  1776 ;;		line 18 in file "TiTTimer.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1
  1790 ;;      Params:         0       0       0
  1791 ;;      Locals:         0       0       0
  1792 ;;      Temps:          0       0       0
  1793 ;;      Totals:         0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text12
  1805  000C44                     __ptext12:
  1806                           	callstack 0
  1807  000C44                     _TiInitTimer:
  1808                           	callstack 28
  1809                           
  1810                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1811                           
  1812                           ;incstack = 0
  1813  000C44  9ED0               	bcf	208,7,c	;volatile
  1814                           
  1815                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1816  000C46  8EF2               	bsf	242,7,c	;volatile
  1817                           
  1818                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1819  000C48  8CF2               	bsf	242,6,c	;volatile
  1820                           
  1821                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1822  000C4A  8AF2               	bsf	242,5,c	;volatile
  1823                           
  1824                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1825  000C4C  94F2               	bcf	242,2,c	;volatile
  1826                           
  1827                           ;TiTTimer.c: 25:     T0CON = 136;
  1828  000C4E  0E88               	movlw	136
  1829  000C50  6ED5               	movwf	213,c	;volatile
  1830                           
  1831                           ;TiTTimer.c: 27:     TMR0H = 223;
  1832  000C52  0EDF               	movlw	223
  1833  000C54  6ED7               	movwf	215,c	;volatile
  1834                           
  1835                           ;TiTTimer.c: 28:     TMR0L = 148;
  1836  000C56  0E94               	movlw	148
  1837  000C58  6ED6               	movwf	214,c	;volatile
  1838                           
  1839                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1840  000C5A  8ED5               	bsf	213,7,c	;volatile
  1841                           
  1842                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1843  000C5C  0E00               	movlw	0
  1844  000C5E  6E27               	movwf	_counter^0,c
  1845  000C60                     l1515:
  1846  000C60  0E07               	movlw	7
  1847  000C62  6427               	cpfsgt	_counter^0,c
  1848  000C64  D001               	goto	l1519
  1849  000C66  0012               	return	
  1850  000C68                     l1519:
  1851                           
  1852                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1853  000C68  5027               	movf	_counter^0,w,c
  1854  000C6A  0D03               	mullw	3
  1855  000C6C  50F3               	movf	243,w,c
  1856  000C6E  0F03               	addlw	low (_s_Timers+2)
  1857  000C70  6ED9               	movwf	fsr2l,c
  1858  000C72  6ADA               	clrf	fsr2h,c
  1859  000C74  0E00               	movlw	0
  1860  000C76  6EDF               	movwf	indf2,c
  1861                           
  1862                           ;TiTTimer.c: 33:     }
  1863  000C78  2A27               	incf	_counter^0,f,c
  1864  000C7A  D7F2               	goto	l1515
  1865  000C7C                     __end_of_TiInitTimer:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _TeTeclat *****************
  1869 ;; Defined at:
  1870 ;;		line 22 in file "TeTeclat.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1
  1884 ;;      Params:         0       0       0
  1885 ;;      Locals:         0       0       0
  1886 ;;      Temps:          3       0       0
  1887 ;;      Totals:         3       0       0
  1888 ;;Total ram usage:        3 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 3
  1891 ;; This function calls:
  1892 ;;		_MsetNovaTecla
  1893 ;;		_SsetNovaTecla
  1894 ;;		_TiGetTics
  1895 ;;		_TiResetTics
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text13
  1902  000624                     __ptext13:
  1903                           	callstack 0
  1904  000624                     _TeTeclat:
  1905                           	callstack 27
  1906                           
  1907                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1908                           
  1909                           ;incstack = 0
  1910  000624  A083               	btfss	131,0,c	;volatile
  1911  000626  D003               	goto	u1910
  1912  000628  6A6D               	clrf	??_TeTeclat^0,c
  1913  00062A  2A6D               	incf	??_TeTeclat^0,f,c
  1914  00062C  D001               	goto	u1918
  1915  00062E                     u1910:
  1916  00062E  6A6D               	clrf	??_TeTeclat^0,c
  1917  000630                     u1918:
  1918  000630  A283               	btfss	131,1,c	;volatile
  1919  000632  D002               	goto	u1920
  1920  000634  0E01               	movlw	1
  1921  000636  D001               	goto	u1926
  1922  000638                     u1920:
  1923  000638  0E00               	movlw	0
  1924  00063A                     u1926:
  1925  00063A  0D02               	mullw	2
  1926  00063C  CFF3 F06E          	movff	prodl,??_TeTeclat+1
  1927  000640  A483               	btfss	131,2,c	;volatile
  1928  000642  D002               	goto	u1930
  1929  000644  0E01               	movlw	1
  1930  000646  D001               	goto	u1936
  1931  000648                     u1930:
  1932  000648  0E00               	movlw	0
  1933  00064A                     u1936:
  1934  00064A  0D03               	mullw	3
  1935  00064C  CFF3 F06F          	movff	prodl,??_TeTeclat+2
  1936  000650  A683               	btfss	131,3,c	;volatile
  1937  000652  D002               	goto	u1940
  1938  000654  0E01               	movlw	1
  1939  000656  D001               	goto	u1946
  1940  000658                     u1940:
  1941  000658  0E00               	movlw	0
  1942  00065A                     u1946:
  1943  00065A  0D04               	mullw	4
  1944  00065C  50F3               	movf	243,w,c
  1945  00065E  246F               	addwf	(??_TeTeclat+2)^0,w,c
  1946  000660  246E               	addwf	(??_TeTeclat+1)^0,w,c
  1947  000662  246D               	addwf	??_TeTeclat^0,w,c
  1948  000664  6E28               	movwf	TeTeclat@files^0,c
  1949                           
  1950                           ;TeTeclat.c: 27:  switch(state) {
  1951  000666  D06F               	goto	l2573
  1952  000668                     l2499:
  1953                           
  1954                           ;TeTeclat.c: 29:    if (files==0) {
  1955  000668  5028               	movf	TeTeclat@files^0,w,c
  1956  00066A  A4D8               	btfss	status,2,c
  1957  00066C  D007               	goto	l2507
  1958                           
  1959                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1960  00066E  888C               	bsf	140,4,c	;volatile
  1961                           
  1962                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1963  000670  9A8C               	bcf	140,5,c	;volatile
  1964                           
  1965                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1966  000672  9C8C               	bcf	140,6,c	;volatile
  1967                           
  1968                           ;TeTeclat.c: 33:     cols=0;
  1969  000674  0E00               	movlw	0
  1970  000676  6E29               	movwf	TeTeclat@cols^0,c
  1971  000678                     l2505:
  1972                           
  1973                           ;TeTeclat.c: 34:     state++;
  1974  000678  2A2A               	incf	TeTeclat@state^0,f,c
  1975                           
  1976                           ;TeTeclat.c: 35:    }
  1977  00067A  0012               	return	
  1978  00067C                     l2507:
  1979  00067C  5028               	movf	TeTeclat@files^0,w,c
  1980  00067E  B4D8               	btfsc	status,2,c
  1981  000680  0012               	return	
  1982                           
  1983                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1984  000682  502B               	movf	_tiTeclat^0,w,c
  1985  000684  ECE0  F006         	call	_TiResetTics
  1986  000688                     l2511:
  1987                           
  1988                           ;TeTeclat.c: 38:     state = 3;
  1989  000688  0E03               	movlw	3
  1990  00068A  6E2A               	movwf	TeTeclat@state^0,c
  1991  00068C  0012               	return	
  1992  00068E                     l2513:
  1993                           
  1994                           ;TeTeclat.c: 42:    if (files==0) {
  1995  00068E  5028               	movf	TeTeclat@files^0,w,c
  1996  000690  A4D8               	btfss	status,2,c
  1997  000692  D005               	goto	l2521
  1998                           
  1999                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  2000  000694  988C               	bcf	140,4,c	;volatile
  2001                           
  2002                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  2003  000696  8A8C               	bsf	140,5,c	;volatile
  2004                           
  2005                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  2006  000698  9C8C               	bcf	140,6,c	;volatile
  2007                           
  2008                           ;TeTeclat.c: 46:     cols=1;
  2009  00069A  0E01               	movlw	1
  2010  00069C  D7EC               	goto	L1
  2011  00069E                     l2521:
  2012  00069E  5028               	movf	TeTeclat@files^0,w,c
  2013  0006A0  B4D8               	btfsc	status,2,c
  2014  0006A2  0012               	return	
  2015                           
  2016                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  2017  0006A4  502B               	movf	_tiTeclat^0,w,c
  2018  0006A6  ECE0  F006         	call	_TiResetTics
  2019  0006AA  D7EE               	goto	l2511
  2020  0006AC                     l2527:
  2021                           
  2022                           ;TeTeclat.c: 55:    if (files==0) {
  2023  0006AC  5028               	movf	TeTeclat@files^0,w,c
  2024  0006AE  A4D8               	btfss	status,2,c
  2025  0006B0  D008               	goto	l2533
  2026                           
  2027                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  2028  0006B2  988C               	bcf	140,4,c	;volatile
  2029                           
  2030                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  2031  0006B4  9A8C               	bcf	140,5,c	;volatile
  2032                           
  2033                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  2034  0006B6  8C8C               	bsf	140,6,c	;volatile
  2035                           
  2036                           ;TeTeclat.c: 59:     cols=2;
  2037  0006B8  0E02               	movlw	2
  2038  0006BA  6E29               	movwf	TeTeclat@cols^0,c
  2039                           
  2040                           ;TeTeclat.c: 60:     state = 0;
  2041  0006BC  0E00               	movlw	0
  2042  0006BE  6E2A               	movwf	TeTeclat@state^0,c
  2043                           
  2044                           ;TeTeclat.c: 61:    }
  2045  0006C0  0012               	return	
  2046  0006C2                     l2533:
  2047  0006C2  5028               	movf	TeTeclat@files^0,w,c
  2048  0006C4  B4D8               	btfsc	status,2,c
  2049  0006C6  0012               	return	
  2050                           
  2051                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  2052  0006C8  502B               	movf	_tiTeclat^0,w,c
  2053  0006CA  ECE0  F006         	call	_TiResetTics
  2054  0006CE  D7D4               	goto	l2505
  2055  0006D0                     l2539:
  2056                           
  2057                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  2058  0006D0  502B               	movf	_tiTeclat^0,w,c
  2059  0006D2  EC88  F006         	call	_TiGetTics
  2060  0006D6  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2061  0006D8  0012               	return	
  2062  0006DA  D7CE               	goto	l2505
  2063  0006DC                     l2543:
  2064                           
  2065                           ;TeTeclat.c: 73:    if (files==0) {
  2066  0006DC  5028               	movf	TeTeclat@files^0,w,c
  2067  0006DE  A4D8               	btfss	status,2,c
  2068  0006E0  D003               	goto	l2547
  2069                           
  2070                           ;TeTeclat.c: 74:     state = 1;
  2071  0006E2  0E01               	movlw	1
  2072  0006E4  6E2A               	movwf	TeTeclat@state^0,c
  2073                           
  2074                           ;TeTeclat.c: 75:    }
  2075  0006E6  0012               	return	
  2076  0006E8                     l2547:
  2077  0006E8  5028               	movf	TeTeclat@files^0,w,c
  2078  0006EA  B4D8               	btfsc	status,2,c
  2079  0006EC  0012               	return	
  2080                           
  2081                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  2082  0006EE  5028               	movf	TeTeclat@files^0,w,c
  2083  0006F0  0D03               	mullw	3
  2084  0006F2  50F3               	movf	243,w,c
  2085  0006F4  0F52               	addlw	low (_teclaPremuda+253)
  2086  0006F6  2429               	addwf	TeTeclat@cols^0,w,c
  2087  0006F8  6ED9               	movwf	fsr2l,c
  2088  0006FA  6ADA               	clrf	fsr2h,c
  2089  0006FC  50DF               	movf	indf2,w,c
  2090  0006FE  EC0D  F007         	call	_MsetNovaTecla
  2091                           
  2092                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  2093  000702  5028               	movf	TeTeclat@files^0,w,c
  2094  000704  0D03               	mullw	3
  2095  000706  50F3               	movf	243,w,c
  2096  000708  0F52               	addlw	low (_teclaPremuda+253)
  2097  00070A  2429               	addwf	TeTeclat@cols^0,w,c
  2098  00070C  6ED9               	movwf	fsr2l,c
  2099  00070E  6ADA               	clrf	fsr2h,c
  2100  000710  50DF               	movf	indf2,w,c
  2101  000712  EC09  F007         	call	_SsetNovaTecla
  2102  000716  D7B0               	goto	l2505
  2103  000718                     l2553:
  2104                           
  2105                           ;TeTeclat.c: 84:    if (files==0) {
  2106  000718  5028               	movf	TeTeclat@files^0,w,c
  2107  00071A  A4D8               	btfss	status,2,c
  2108  00071C  0012               	return	
  2109                           
  2110                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  2111  00071E  502B               	movf	_tiTeclat^0,w,c
  2112  000720  ECE0  F006         	call	_TiResetTics
  2113  000724  D7A9               	goto	l2505
  2114  000726                     l2559:
  2115                           
  2116                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  2117  000726  502B               	movf	_tiTeclat^0,w,c
  2118  000728  EC88  F006         	call	_TiGetTics
  2119  00072C  D7D4               	goto	L2
  2120  00072E                     l2563:
  2121                           
  2122                           ;TeTeclat.c: 95:    if (files!=0) {
  2123  00072E  5028               	movf	TeTeclat@files^0,w,c
  2124  000730  B4D8               	btfsc	status,2,c
  2125  000732  D003               	goto	l2567
  2126                           
  2127                           ;TeTeclat.c: 96:     state = 5;
  2128  000734  0E05               	movlw	5
  2129  000736  6E2A               	movwf	TeTeclat@state^0,c
  2130                           
  2131                           ;TeTeclat.c: 97:    }
  2132  000738  0012               	return	
  2133  00073A                     l2567:
  2134  00073A  5028               	movf	TeTeclat@files^0,w,c
  2135  00073C  A4D8               	btfss	status,2,c
  2136  00073E  0012               	return	
  2137                           
  2138                           ;TeTeclat.c: 99:     state = 0;
  2139  000740  0E00               	movlw	0
  2140  000742  6E2A               	movwf	TeTeclat@state^0,c
  2141  000744  0012               	return	
  2142  000746                     l2573:
  2143  000746  502A               	movf	TeTeclat@state^0,w,c
  2144  000748  6E6D               	movwf	??_TeTeclat^0,c
  2145  00074A  6A6E               	clrf	(??_TeTeclat+1)^0,c
  2146                           
  2147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2148                           ; Switch size 1, requested type "simple"
  2149                           ; Number of cases is 1, Range of values is 0 to 0
  2150                           ; switch strategies available:
  2151                           ; Name         Instructions Cycles
  2152                           ; simple_byte            4     3 (average)
  2153                           ;	Chosen strategy is simple_byte
  2154  00074C  506E               	movf	(??_TeTeclat+1)^0,w,c
  2155  00074E  0A00               	xorlw	0	; case 0
  2156  000750  A4D8               	btfss	status,2,c
  2157  000752  0012               	return	
  2158                           
  2159                           ; Switch size 1, requested type "simple"
  2160                           ; Number of cases is 8, Range of values is 0 to 7
  2161                           ; switch strategies available:
  2162                           ; Name         Instructions Cycles
  2163                           ; simple_byte           25    13 (average)
  2164                           ;	Chosen strategy is simple_byte
  2165  000754  506D               	movf	??_TeTeclat^0,w,c
  2166  000756  0A00               	xorlw	0	; case 0
  2167  000758  B4D8               	btfsc	status,2,c
  2168  00075A  D786               	goto	l2499
  2169  00075C  0A01               	xorlw	1	; case 1
  2170  00075E  B4D8               	btfsc	status,2,c
  2171  000760  D796               	goto	l2513
  2172  000762  0A03               	xorlw	3	; case 2
  2173  000764  B4D8               	btfsc	status,2,c
  2174  000766  D7A2               	goto	l2527
  2175  000768  0A01               	xorlw	1	; case 3
  2176  00076A  B4D8               	btfsc	status,2,c
  2177  00076C  D7B1               	goto	l2539
  2178  00076E  0A07               	xorlw	7	; case 4
  2179  000770  B4D8               	btfsc	status,2,c
  2180  000772  D7B4               	goto	l2543
  2181  000774  0A01               	xorlw	1	; case 5
  2182  000776  B4D8               	btfsc	status,2,c
  2183  000778  D7CF               	goto	l2553
  2184  00077A  0A03               	xorlw	3	; case 6
  2185  00077C  B4D8               	btfsc	status,2,c
  2186  00077E  D7D3               	goto	l2559
  2187  000780  0A01               	xorlw	1	; case 7
  2188  000782  A4D8               	btfss	status,2,c
  2189  000784  0012               	return	
  2190  000786  D7D3               	goto	l2563
  2191  000788                     __end_of_TeTeclat:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _SsetNovaTecla *****************
  2195 ;; Defined at:
  2196 ;;		line 110 in file "Ssms.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  tecla           1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  tecla           1    5[COMRAM] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1
  2210 ;;      Params:         0       0       0
  2211 ;;      Locals:         1       0       0
  2212 ;;      Temps:          0       0       0
  2213 ;;      Totals:         1       0       0
  2214 ;;Total ram usage:        1 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 2
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_TeTeclat
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text14
  2225  000E12                     __ptext14:
  2226                           	callstack 0
  2227  000E12                     _SsetNovaTecla:
  2228                           	callstack 27
  2229                           
  2230                           ;incstack = 0
  2231                           ;SsetNovaTecla@tecla stored from wreg
  2232  000E12  6E66               	movwf	SsetNovaTecla@tecla^0,c
  2233                           
  2234                           ;Ssms.c: 111:     novaTecla = tecla;
  2235  000E14  C066  F053         	movff	SsetNovaTecla@tecla,_novaTecla
  2236  000E18  0012               	return		;funcret
  2237  000E1A                     __end_of_SsetNovaTecla:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _MsetNovaTecla *****************
  2241 ;; Defined at:
  2242 ;;		line 19 in file "Menu.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  tecla           1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  tecla           1    5[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1
  2256 ;;      Params:         0       0       0
  2257 ;;      Locals:         1       0       0
  2258 ;;      Temps:          0       0       0
  2259 ;;      Totals:         1       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 2
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_TeTeclat
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text15
  2271  000E1A                     __ptext15:
  2272                           	callstack 0
  2273  000E1A                     _MsetNovaTecla:
  2274                           	callstack 27
  2275                           
  2276                           ;incstack = 0
  2277                           ;MsetNovaTecla@tecla stored from wreg
  2278  000E1A  6E66               	movwf	MsetNovaTecla@tecla^0,c
  2279                           
  2280                           ;Menu.c: 20:     NovaTecla = tecla;
  2281  000E1C  C066  F050         	movff	MsetNovaTecla@tecla,_NovaTecla
  2282  000E20  0012               	return		;funcret
  2283  000E22                     __end_of_MsetNovaTecla:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _TeInit *****************
  2287 ;; Defined at:
  2288 ;;		line 18 in file "TeTeclat.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1
  2302 ;;      Params:         0       0       0
  2303 ;;      Locals:         0       0       0
  2304 ;;      Temps:          0       0       0
  2305 ;;      Totals:         0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 3
  2309 ;; This function calls:
  2310 ;;		_TiGetTimer
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text16
  2317  000E22                     __ptext16:
  2318                           	callstack 0
  2319  000E22                     _TeInit:
  2320                           	callstack 27
  2321                           
  2322                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  2323                           
  2324                           ;incstack = 0
  2325  000E22  ECE9  F005         	call	_TiGetTimer	;wreg free
  2326  000E26  6E2B               	movwf	_tiTeclat^0,c
  2327  000E28  0012               	return		;funcret
  2328  000E2A                     __end_of_TeInit:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _Sinit *****************
  2332 ;; Defined at:
  2333 ;;		line 16 in file "Ssms.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1
  2347 ;;      Params:         0       0       0
  2348 ;;      Locals:         0       0       0
  2349 ;;      Temps:          0       0       0
  2350 ;;      Totals:         0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 3
  2354 ;; This function calls:
  2355 ;;		_TiGetTimer
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text17
  2362  000E2A                     __ptext17:
  2363                           	callstack 0
  2364  000E2A                     _Sinit:
  2365                           	callstack 27
  2366                           
  2367                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2368                           
  2369                           ;incstack = 0
  2370  000E2A  ECE9  F005         	call	_TiGetTimer	;wreg free
  2371  000E2E  6E52               	movwf	_timerSMS^0,c
  2372  000E30  0012               	return		;funcret
  2373  000E32                     __end_of_Sinit:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _SMotor *****************
  2377 ;; Defined at:
  2378 ;;		line 21 in file "Ssms.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1
  2392 ;;      Params:         0       0       0
  2393 ;;      Locals:         0       0       0
  2394 ;;      Temps:          2       0       0
  2395 ;;      Totals:         2       0       0
  2396 ;;Total ram usage:        2 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 3
  2399 ;; This function calls:
  2400 ;;		_MNovaLletra
  2401 ;;		_TiGetTics
  2402 ;;		_TiResetTics
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text18
  2409  000478                     __ptext18:
  2410                           	callstack 0
  2411  000478                     _SMotor:
  2412                           	callstack 27
  2413                           
  2414                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  2415                           
  2416                           ;incstack = 0
  2417  000478  D0B7               	goto	l2331
  2418  00047A                     l2203:
  2419                           
  2420                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  2421  00047A  2853               	incf	_novaTecla^0,w,c
  2422  00047C  A4D8               	btfss	status,2,c
  2423  00047E  A677               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2424  000480  D006               	goto	l2211
  2425                           
  2426                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  2427  000482  5052               	movf	_timerSMS^0,w,c
  2428  000484  ECE0  F006         	call	_TiResetTics
  2429                           
  2430                           ;Ssms.c: 27:     state = 3;
  2431  000488  0E03               	movlw	3
  2432  00048A  6E2C               	movwf	SMotor@state^0,c
  2433                           
  2434                           ;Ssms.c: 28:    }
  2435  00048C  0012               	return	
  2436  00048E                     l2211:
  2437  00048E  2853               	incf	_novaTecla^0,w,c
  2438  000490  A4D8               	btfss	status,2,c
  2439  000492  0012               	return	
  2440  000494  5052               	movf	_timerSMS^0,w,c
  2441  000496  EC88  F006         	call	_TiGetTics
  2442  00049A  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2443  00049C  0012               	return	
  2444  00049E  0E5A               	movlw	90
  2445  0004A0  5C66               	subwf	?_TiGetTics^0,w,c
  2446  0004A2  0E02               	movlw	2
  2447  0004A4  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  2448  0004A6  A0D8               	btfss	status,0,c
  2449  0004A8  0012               	return	
  2450  0004AA  2854               	incf	_lletraASCII^0,w,c
  2451  0004AC  B4D8               	btfsc	status,2,c
  2452  0004AE  0012               	return	
  2453  0004B0  A677               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2454  0004B2  0012               	return	
  2455                           
  2456                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  2457  0004B4  5054               	movf	_lletraASCII^0,w,c
  2458  0004B6  EC19  F007         	call	_MNovaLletra
  2459                           
  2460                           ;Ssms.c: 31:     lletraASCII = -1;
  2461  0004BA  6854               	setf	_lletraASCII^0,c
  2462                           
  2463                           ;Ssms.c: 32:     ultimaTecla = -1;
  2464  0004BC  6851               	setf	_ultimaTecla^0,c
  2465  0004BE  0012               	return	
  2466  0004C0                     l2225:
  2467                           
  2468                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  2469  0004C0  5051               	movf	_ultimaTecla^0,w,c
  2470  0004C2  1853               	xorwf	_novaTecla^0,w,c
  2471  0004C4  A4D8               	btfss	status,2,c
  2472  0004C6  D010               	goto	l2233
  2473  0004C8  5052               	movf	_timerSMS^0,w,c
  2474  0004CA  EC88  F006         	call	_TiGetTics
  2475  0004CE  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2476  0004D0  D006               	goto	u1510
  2477  0004D2  0E5A               	movlw	90
  2478  0004D4  5C66               	subwf	?_TiGetTics^0,w,c
  2479  0004D6  0E02               	movlw	2
  2480  0004D8  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  2481  0004DA  B0D8               	btfsc	status,0,c
  2482  0004DC  D005               	goto	l2233
  2483  0004DE                     u1510:
  2484                           
  2485                           ;Ssms.c: 37:     novaTecla = -1;
  2486  0004DE  6853               	setf	_novaTecla^0,c
  2487                           
  2488                           ;Ssms.c: 38:     sumaPulsacions++;
  2489  0004E0  2A2D               	incf	_sumaPulsacions^0,f,c
  2490                           
  2491                           ;Ssms.c: 39:     lletraASCII++;
  2492  0004E2  2A54               	incf	_lletraASCII^0,f,c
  2493                           
  2494                           ;Ssms.c: 40:     state++;
  2495  0004E4  2A2C               	incf	SMotor@state^0,f,c
  2496                           
  2497                           ;Ssms.c: 41:    }
  2498  0004E6  0012               	return	
  2499  0004E8                     l2233:
  2500  0004E8  2853               	incf	_novaTecla^0,w,c
  2501  0004EA  B4D8               	btfsc	status,2,c
  2502  0004EC  0012               	return	
  2503  0004EE  5051               	movf	_ultimaTecla^0,w,c
  2504  0004F0  1853               	xorwf	_novaTecla^0,w,c
  2505  0004F2  B4D8               	btfsc	status,2,c
  2506  0004F4  0012               	return	
  2507                           
  2508                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  2509  0004F6  5054               	movf	_lletraASCII^0,w,c
  2510  0004F8  EC19  F007         	call	_MNovaLletra
  2511                           
  2512                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  2513  0004FC  5053               	movf	_novaTecla^0,w,c
  2514  0004FE  0F44               	addlw	low (_lletraInici+254)
  2515  000500  6ED9               	movwf	fsr2l,c
  2516  000502  6ADA               	clrf	fsr2h,c
  2517  000504  50DF               	movf	indf2,w,c
  2518  000506  6E54               	movwf	_lletraASCII^0,c
  2519                           
  2520                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  2521  000508  C053  F051         	movff	_novaTecla,_ultimaTecla
  2522                           
  2523                           ;Ssms.c: 46:     sumaPulsacions = 0;
  2524  00050C  0E00               	movlw	0
  2525  00050E  6E2D               	movwf	_sumaPulsacions^0,c
  2526                           
  2527                           ;Ssms.c: 47:     novaTecla = -1;
  2528  000510  6853               	setf	_novaTecla^0,c
  2529                           
  2530                           ;Ssms.c: 48:     state--;
  2531  000512  062C               	decf	SMotor@state^0,f,c
  2532  000514  0012               	return	
  2533  000516                     l2249:
  2534                           
  2535                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2536  000516  0E07               	movlw	7
  2537  000518  1851               	xorwf	_ultimaTecla^0,w,c
  2538  00051A  B4D8               	btfsc	status,2,c
  2539  00051C  D007               	goto	l2255
  2540  00051E  0E09               	movlw	9
  2541  000520  1851               	xorwf	_ultimaTecla^0,w,c
  2542  000522  B4D8               	btfsc	status,2,c
  2543  000524  D003               	goto	l2255
  2544                           
  2545                           ;Ssms.c: 53:     state = 5;
  2546  000526  0E05               	movlw	5
  2547  000528  6E2C               	movwf	SMotor@state^0,c
  2548                           
  2549                           ;Ssms.c: 54:    }
  2550  00052A  0012               	return	
  2551  00052C                     l2255:
  2552  00052C  0E07               	movlw	7
  2553  00052E  1851               	xorwf	_ultimaTecla^0,w,c
  2554  000530  B4D8               	btfsc	status,2,c
  2555  000532  D004               	goto	u1570
  2556  000534  0E09               	movlw	9
  2557  000536  1851               	xorwf	_ultimaTecla^0,w,c
  2558  000538  A4D8               	btfss	status,2,c
  2559  00053A  0012               	return	
  2560  00053C                     u1570:
  2561                           
  2562                           ;Ssms.c: 56:     state = 6;
  2563  00053C  0E06               	movlw	6
  2564  00053E  6E2C               	movwf	SMotor@state^0,c
  2565  000540  0012               	return	
  2566  000542                     l2261:
  2567                           
  2568                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  2569  000542  5053               	movf	_novaTecla^0,w,c
  2570  000544  0A80               	xorlw	128
  2571  000546  0F7E               	addlw	-130
  2572  000548  A0D8               	btfss	status,0,c
  2573  00054A  D008               	goto	l2267
  2574  00054C  5053               	movf	_novaTecla^0,w,c
  2575  00054E  0A80               	xorlw	128
  2576  000550  0F76               	addlw	-138
  2577  000552  B0D8               	btfsc	status,0,c
  2578  000554  D003               	goto	l2267
  2579                           
  2580                           ;Ssms.c: 61:     state = 1;
  2581  000556  0E01               	movlw	1
  2582  000558  6E2C               	movwf	SMotor@state^0,c
  2583                           
  2584                           ;Ssms.c: 62:    }
  2585  00055A  0012               	return	
  2586  00055C                     l2267:
  2587  00055C  5053               	movf	_novaTecla^0,w,c
  2588  00055E  0A80               	xorlw	128
  2589  000560  0F7E               	addlw	-130
  2590  000562  B0D8               	btfsc	status,0,c
  2591  000564  D00B               	goto	l2277
  2592  000566  2854               	incf	_lletraASCII^0,w,c
  2593  000568  A4D8               	btfss	status,2,c
  2594  00056A  D008               	goto	l2277
  2595                           
  2596                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  2597  00056C  5053               	movf	_novaTecla^0,w,c
  2598  00056E  0F30               	addlw	48
  2599  000570  EC19  F007         	call	_MNovaLletra
  2600  000574                     l2273:
  2601                           
  2602                           ;Ssms.c: 65:     novaTecla = -1;
  2603  000574  6853               	setf	_novaTecla^0,c
  2604  000576                     l2275:
  2605                           
  2606                           ;Ssms.c: 66:     state = 0;
  2607  000576  0E00               	movlw	0
  2608  000578  6E2C               	movwf	SMotor@state^0,c
  2609                           
  2610                           ;Ssms.c: 67:    }
  2611  00057A  0012               	return	
  2612  00057C                     l2277:
  2613  00057C  5053               	movf	_novaTecla^0,w,c
  2614  00057E  0A80               	xorlw	128
  2615  000580  0F7E               	addlw	-130
  2616  000582  B0D8               	btfsc	status,0,c
  2617  000584  0012               	return	
  2618  000586  2854               	incf	_lletraASCII^0,w,c
  2619  000588  B4D8               	btfsc	status,2,c
  2620  00058A  0012               	return	
  2621                           
  2622                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  2623  00058C  5054               	movf	_lletraASCII^0,w,c
  2624  00058E  EC19  F007         	call	_MNovaLletra
  2625                           
  2626                           ;Ssms.c: 70:     lletraASCII = -1;
  2627  000592  6854               	setf	_lletraASCII^0,c
  2628                           
  2629                           ;Ssms.c: 71:     state++;
  2630  000594  2A2C               	incf	SMotor@state^0,f,c
  2631  000596  0012               	return	
  2632  000598                     l2287:
  2633                           
  2634                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  2635  000598  5053               	movf	_novaTecla^0,w,c
  2636  00059A  0F30               	addlw	48
  2637  00059C  EC19  F007         	call	_MNovaLletra
  2638  0005A0  D7E9               	goto	l2273
  2639  0005A2                     l2293:
  2640                           
  2641                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  2642  0005A2  0E04               	movlw	4
  2643  0005A4  182D               	xorwf	_sumaPulsacions^0,w,c
  2644  0005A6  A4D8               	btfss	status,2,c
  2645  0005A8  D009               	goto	l2301
  2646  0005AA                     u1640:
  2647                           
  2648                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  2649  0005AA  5051               	movf	_ultimaTecla^0,w,c
  2650  0005AC  0F44               	addlw	low (_lletraInici+254)
  2651  0005AE  6ED9               	movwf	fsr2l,c
  2652  0005B0  6ADA               	clrf	fsr2h,c
  2653  0005B2  50DF               	movf	indf2,w,c
  2654  0005B4  6E54               	movwf	_lletraASCII^0,c
  2655                           
  2656                           ;Ssms.c: 82:     sumaPulsacions = 0;
  2657  0005B6  0E00               	movlw	0
  2658  0005B8  6E2D               	movwf	_sumaPulsacions^0,c
  2659  0005BA  D7DD               	goto	l2275
  2660  0005BC                     l2301:
  2661  0005BC  0E03               	movlw	3
  2662  0005BE  182D               	xorwf	_sumaPulsacions^0,w,c
  2663  0005C0  A4D8               	btfss	status,2,c
  2664  0005C2  D004               	goto	l2307
  2665  0005C4                     u1650:
  2666                           
  2667                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  2668  0005C4  5051               	movf	_ultimaTecla^0,w,c
  2669  0005C6  0F30               	addlw	48
  2670  0005C8  6E54               	movwf	_lletraASCII^0,c
  2671  0005CA  D7D5               	goto	l2275
  2672  0005CC                     l2307:
  2673  0005CC  0E03               	movlw	3
  2674  0005CE  602D               	cpfslt	_sumaPulsacions^0,c
  2675  0005D0  0012               	return	
  2676  0005D2  D7D1               	goto	l2275
  2677  0005D4                     l2311:
  2678                           
  2679                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  2680  0005D4  0E04               	movlw	4
  2681  0005D6  182D               	xorwf	_sumaPulsacions^0,w,c
  2682  0005D8  B4D8               	btfsc	status,2,c
  2683  0005DA  D7F4               	goto	u1650
  2684  0005DC  0E05               	movlw	5
  2685  0005DE  182D               	xorwf	_sumaPulsacions^0,w,c
  2686  0005E0  B4D8               	btfsc	status,2,c
  2687  0005E2  D7E3               	goto	u1640
  2688  0005E4  0E04               	movlw	4
  2689  0005E6  D7F3               	goto	L3
  2690  0005E8                     l2331:
  2691  0005E8  502C               	movf	SMotor@state^0,w,c
  2692  0005EA  6E6D               	movwf	??_SMotor^0,c
  2693  0005EC  6A6E               	clrf	(??_SMotor+1)^0,c
  2694                           
  2695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2696                           ; Switch size 1, requested type "simple"
  2697                           ; Number of cases is 1, Range of values is 0 to 0
  2698                           ; switch strategies available:
  2699                           ; Name         Instructions Cycles
  2700                           ; simple_byte            4     3 (average)
  2701                           ;	Chosen strategy is simple_byte
  2702  0005EE  506E               	movf	(??_SMotor+1)^0,w,c
  2703  0005F0  0A00               	xorlw	0	; case 0
  2704  0005F2  A4D8               	btfss	status,2,c
  2705  0005F4  0012               	return	
  2706                           
  2707                           ; Switch size 1, requested type "simple"
  2708                           ; Number of cases is 7, Range of values is 0 to 6
  2709                           ; switch strategies available:
  2710                           ; Name         Instructions Cycles
  2711                           ; simple_byte           22    12 (average)
  2712                           ;	Chosen strategy is simple_byte
  2713  0005F6  506D               	movf	??_SMotor^0,w,c
  2714  0005F8  0A00               	xorlw	0	; case 0
  2715  0005FA  B4D8               	btfsc	status,2,c
  2716  0005FC  D73E               	goto	l2203
  2717  0005FE  0A01               	xorlw	1	; case 1
  2718  000600  B4D8               	btfsc	status,2,c
  2719  000602  D75E               	goto	l2225
  2720  000604  0A03               	xorlw	3	; case 2
  2721  000606  B4D8               	btfsc	status,2,c
  2722  000608  D786               	goto	l2249
  2723  00060A  0A01               	xorlw	1	; case 3
  2724  00060C  B4D8               	btfsc	status,2,c
  2725  00060E  D799               	goto	l2261
  2726  000610  0A07               	xorlw	7	; case 4
  2727  000612  B4D8               	btfsc	status,2,c
  2728  000614  D7C1               	goto	l2287
  2729  000616  0A01               	xorlw	1	; case 5
  2730  000618  B4D8               	btfsc	status,2,c
  2731  00061A  D7C3               	goto	l2293
  2732  00061C  0A03               	xorlw	3	; case 6
  2733  00061E  A4D8               	btfss	status,2,c
  2734  000620  0012               	return	
  2735  000622  D7D8               	goto	l2311
  2736  000624                     __end_of_SMotor:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _MNovaLletra *****************
  2740 ;; Defined at:
  2741 ;;		line 23 in file "Menu.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  lletra          1    wreg     unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  lletra          1    5[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1
  2755 ;;      Params:         0       0       0
  2756 ;;      Locals:         1       0       0
  2757 ;;      Temps:          0       0       0
  2758 ;;      Totals:         1       0       0
  2759 ;;Total ram usage:        1 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_SMotor
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text19
  2770  000E32                     __ptext19:
  2771                           	callstack 0
  2772  000E32                     _MNovaLletra:
  2773                           	callstack 27
  2774                           
  2775                           ;incstack = 0
  2776                           ;MNovaLletra@lletra stored from wreg
  2777  000E32  6E66               	movwf	MNovaLletra@lletra^0,c
  2778                           
  2779                           ;Menu.c: 24:     novaLletra = lletra;
  2780  000E34  C066  F04F         	movff	MNovaLletra@lletra,_novaLletra
  2781  000E38  0012               	return		;funcret
  2782  000E3A                     __end_of_MNovaLletra:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _Minit *****************
  2786 ;; Defined at:
  2787 ;;		line 16 in file "Menu.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1
  2801 ;;      Params:         0       0       0
  2802 ;;      Locals:         0       0       0
  2803 ;;      Temps:          0       0       0
  2804 ;;      Totals:         0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 3
  2808 ;; This function calls:
  2809 ;;		_TiGetTimer
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text20
  2816  000E3A                     __ptext20:
  2817                           	callstack 0
  2818  000E3A                     _Minit:
  2819                           	callstack 27
  2820                           
  2821                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  2822                           
  2823                           ;incstack = 0
  2824  000E3A  ECE9  F005         	call	_TiGetTimer	;wreg free
  2825  000E3E  6E25               	movwf	_timerMenu^0,c
  2826  000E40  0012               	return		;funcret
  2827  000E42                     __end_of_Minit:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _LcLCD *****************
  2831 ;; Defined at:
  2832 ;;		line 254 in file "LcTLCD.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1
  2846 ;;      Params:         0       0       0
  2847 ;;      Locals:         0       0       0
  2848 ;;      Temps:          0       0       0
  2849 ;;      Totals:         0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 6
  2853 ;; This function calls:
  2854 ;;		_LcPutChar
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text21
  2861  000CE0                     __ptext21:
  2862                           	callstack 0
  2863  000CE0                     _LcLCD:
  2864                           	callstack 24
  2865                           
  2866                           ;LcTLCD.c: 255:     if(nou_s == 1){
  2867                           
  2868                           ;incstack = 0
  2869  000CE0  A877               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2870  000CE2  0012               	return	
  2871                           
  2872                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  2873  000CE4  C02E  FFF6         	movff	_s_ptr,tblptrl
  2874  000CE8                     	if	1	;There is more than 1 active tblptr byte
  2875  000CE8  0E02               	movlw	high __smallconst
  2876  000CEA  6EF7               	movwf	tblptrh,c
  2877  000CEC                     	endif
  2878  000CEC                     	if	0	;tblptru may be non-zero
  2879  000CEC                     	endif
  2880  000CEC                     	if	0	;tblptru may be non-zero
  2881  000CEC                     	endif
  2882  000CEC  0008               	tblrd		*
  2883  000CEE  50F5               	movf	tablat,w,c
  2884  000CF0  EC5F  F005         	call	_LcPutChar
  2885                           
  2886                           ;LcTLCD.c: 257:         s_ptr++;
  2887  000CF4  2A2E               	incf	_s_ptr^0,f,c
  2888                           
  2889                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  2890  000CF6  C02E  FFF6         	movff	_s_ptr,tblptrl
  2891  000CFA                     	if	1	;There is more than 1 active tblptr byte
  2892  000CFA  0E02               	movlw	high __smallconst
  2893  000CFC  6EF7               	movwf	tblptrh,c
  2894  000CFE                     	endif
  2895  000CFE                     	if	0	;tblptru may be non-zero
  2896  000CFE                     	endif
  2897  000CFE                     	if	0	;tblptru may be non-zero
  2898  000CFE                     	endif
  2899  000CFE  0008               	tblrd		*
  2900  000D00  50F5               	movf	tablat,w,c
  2901  000D02  0900               	iorlw	0
  2902  000D04  A4D8               	btfss	status,2,c
  2903  000D06  0012               	return	
  2904                           
  2905                           ;LcTLCD.c: 259:             nou_s = 0;
  2906  000D08  9877               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2907                           
  2908                           ;LcTLCD.c: 260:             s_ptr=0;
  2909  000D0A  0E00               	movlw	0
  2910  000D0C  6E2E               	movwf	_s_ptr^0,c
  2911  000D0E  0012               	return		;funcret
  2912  000D10                     __end_of_LcLCD:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _LcPutChar *****************
  2916 ;; Defined at:
  2917 ;;		line 132 in file "LcTLCD.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  c               1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  c               1   19[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1
  2931 ;;      Params:         0       0       0
  2932 ;;      Locals:         1       0       0
  2933 ;;      Temps:          0       0       0
  2934 ;;      Totals:         1       0       0
  2935 ;;Total ram usage:        1 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 5
  2938 ;; This function calls:
  2939 ;;		_CantaData
  2940 ;;		_LcGotoXY
  2941 ;;		_WaitForBusy
  2942 ;; This function is called by:
  2943 ;;		_LcLCD
  2944 ;;		_menu
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text22
  2949  000ABE                     __ptext22:
  2950                           	callstack 0
  2951  000ABE                     _LcPutChar:
  2952                           	callstack 24
  2953                           
  2954                           ;incstack = 0
  2955                           ;LcPutChar@c stored from wreg
  2956  000ABE  6E74               	movwf	LcPutChar@c^0,c
  2957                           
  2958                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  2959  000AC0  ECAC  F005         	call	_WaitForBusy	;wreg free
  2960  000AC4  5074               	movf	LcPutChar@c^0,w,c
  2961  000AC6  EC3E  F006         	call	_CantaData
  2962                           
  2963                           ;LcTLCD.c: 136:  ++ColumnAct;
  2964  000ACA  2A30               	incf	_ColumnAct^0,f,c
  2965                           
  2966                           ;LcTLCD.c: 138:  if (Rows == 2) {
  2967  000ACC  0E02               	movlw	2
  2968  000ACE  1833               	xorwf	_Rows^0,w,c
  2969  000AD0  A4D8               	btfss	status,2,c
  2970  000AD2  D010               	goto	l2125
  2971                           
  2972                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  2973  000AD4  0E27               	movlw	39
  2974  000AD6  6430               	cpfsgt	_ColumnAct^0,c
  2975  000AD8  D00D               	goto	l2125
  2976                           
  2977                           ;LcTLCD.c: 140:    ColumnAct = 0;
  2978  000ADA  0E00               	movlw	0
  2979  000ADC  6E30               	movwf	_ColumnAct^0,c
  2980                           
  2981                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  2982  000ADE  2A31               	incf	_RowAct^0,f,c
  2983  000AE0  0E01               	movlw	1
  2984  000AE2  6431               	cpfsgt	_RowAct^0,c
  2985  000AE4  D002               	goto	l2123
  2986  000AE6  0E00               	movlw	0
  2987  000AE8  6E31               	movwf	_RowAct^0,c
  2988  000AEA                     l2123:
  2989                           
  2990                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  2991  000AEA  C031  F06E         	movff	_RowAct,LcGotoXY@Row
  2992  000AEE  5030               	movf	_ColumnAct^0,w,c
  2993  000AF0  ECCC  F005         	call	_LcGotoXY
  2994  000AF4                     l2125:
  2995                           
  2996                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  2997  000AF4  0431               	decf	_RowAct^0,w,c
  2998  000AF6  A4D8               	btfss	status,2,c
  2999  000AF8  0012               	return	
  3000                           
  3001                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  3002  000AFA  0E27               	movlw	39
  3003  000AFC  6430               	cpfsgt	_ColumnAct^0,c
  3004  000AFE  D002               	goto	l2131
  3005  000B00  0E00               	movlw	0
  3006  000B02  6E30               	movwf	_ColumnAct^0,c
  3007  000B04                     l2131:
  3008                           
  3009                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  3010  000B04  C031  F06E         	movff	_RowAct,LcGotoXY@Row
  3011  000B08  5030               	movf	_ColumnAct^0,w,c
  3012  000B0A  ECCC  F005         	call	_LcGotoXY
  3013  000B0E  0012               	return		;funcret
  3014  000B10                     __end_of_LcPutChar:
  3015                           	callstack 0
  3016                           
  3017 ;; *************** function _LcGotoXY *****************
  3018 ;; Defined at:
  3019 ;;		line 104 in file "LcTLCD.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  Column          1    wreg     unsigned char 
  3022 ;;  Row             1   13[COMRAM] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  Column          1   18[COMRAM] unsigned char 
  3025 ;;  Fisics          2   14[COMRAM] int 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1
  3035 ;;      Params:         1       0       0
  3036 ;;      Locals:         5       0       0
  3037 ;;      Temps:          0       0       0
  3038 ;;      Totals:         6       0       0
  3039 ;;Total ram usage:        6 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 4
  3042 ;; This function calls:
  3043 ;;		_CantaIR
  3044 ;;		_WaitForBusy
  3045 ;; This function is called by:
  3046 ;;		_LcClear
  3047 ;;		_LcPutChar
  3048 ;;		_menu
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text23
  3053  000B98                     __ptext23:
  3054                           	callstack 0
  3055  000B98                     _LcGotoXY:
  3056                           	callstack 24
  3057                           
  3058                           ;incstack = 0
  3059                           ;LcGotoXY@Column stored from wreg
  3060  000B98  6E73               	movwf	LcGotoXY@Column^0,c
  3061                           
  3062                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  3063  000B9A  506E               	movf	LcGotoXY@Row^0,w,c
  3064  000B9C  B4D8               	btfsc	status,2,c
  3065  000B9E  D004               	goto	l2065
  3066  000BA0  0E00               	movlw	0
  3067  000BA2  6E72               	movwf	(_LcGotoXY$342+1)^0,c
  3068  000BA4  0E40               	movlw	64
  3069  000BA6  D003               	goto	L4
  3070  000BA8                     l2065:
  3071  000BA8  0E00               	movlw	0
  3072  000BAA  6E72               	movwf	(_LcGotoXY$342+1)^0,c
  3073  000BAC  0E00               	movlw	0
  3074  000BAE                     L4:
  3075  000BAE  6E71               	movwf	_LcGotoXY$342^0,c
  3076  000BB0  5073               	movf	LcGotoXY@Column^0,w,c
  3077  000BB2  2471               	addwf	_LcGotoXY$342^0,w,c
  3078  000BB4  6E6F               	movwf	LcGotoXY@Fisics^0,c
  3079  000BB6  0E00               	movlw	0
  3080  000BB8  2072               	addwfc	(_LcGotoXY$342+1)^0,w,c
  3081  000BBA  6E70               	movwf	(LcGotoXY@Fisics+1)^0,c
  3082                           
  3083                           ;LcTLCD.c: 125:  WaitForBusy();
  3084  000BBC  ECAC  F005         	call	_WaitForBusy	;wreg free
  3085                           
  3086                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  3087  000BC0  506F               	movf	LcGotoXY@Fisics^0,w,c
  3088  000BC2  0980               	iorlw	128
  3089  000BC4  EC57  F006         	call	_CantaIR
  3090                           
  3091                           ;LcTLCD.c: 128:  RowAct = Row;
  3092  000BC8  C06E  F031         	movff	LcGotoXY@Row,_RowAct
  3093                           
  3094                           ;LcTLCD.c: 129:  ColumnAct = Column;
  3095  000BCC  C073  F030         	movff	LcGotoXY@Column,_ColumnAct
  3096  000BD0  0012               	return		;funcret
  3097  000BD2                     __end_of_LcGotoXY:
  3098                           	callstack 0
  3099                           
  3100 ;; *************** function _CantaData *****************
  3101 ;; Defined at:
  3102 ;;		line 194 in file "LcTLCD.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  Data            1    wreg     unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  Data            1    7[COMRAM] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1
  3116 ;;      Params:         0       0       0
  3117 ;;      Locals:         1       0       0
  3118 ;;      Temps:          0       0       0
  3119 ;;      Totals:         1       0       0
  3120 ;;Total ram usage:        1 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 3
  3123 ;; This function calls:
  3124 ;;		_CantaPartAlta
  3125 ;;		_CantaPartBaixa
  3126 ;; This function is called by:
  3127 ;;		_LcPutChar
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text24
  3132  000C7C                     __ptext24:
  3133                           	callstack 0
  3134  000C7C                     _CantaData:
  3135                           	callstack 25
  3136                           
  3137                           ;incstack = 0
  3138                           ;CantaData@Data stored from wreg
  3139  000C7C  6E68               	movwf	CantaData@Data^0,c
  3140                           
  3141                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3142  000C7E  9694               	bcf	148,3,c	;volatile
  3143  000C80  9494               	bcf	148,2,c	;volatile
  3144  000C82  9294               	bcf	148,1,c	;volatile
  3145  000C84  9094               	bcf	148,0,c	;volatile
  3146                           
  3147                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  3148  000C86  8A8B               	bsf	139,5,c	;volatile
  3149                           
  3150                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  3151  000C88  9E8C               	bcf	140,7,c	;volatile
  3152                           
  3153                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  3154  000C8A  888B               	bsf	139,4,c	;volatile
  3155                           
  3156                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  3157  000C8C  5068               	movf	CantaData@Data^0,w,c
  3158  000C8E  ECFE  F004         	call	_CantaPartAlta
  3159                           
  3160                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  3161  000C92  888B               	bsf	139,4,c	;volatile
  3162                           
  3163                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  3164  000C94  988B               	bcf	139,4,c	;volatile
  3165                           
  3166                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  3167  000C96  988B               	bcf	139,4,c	;volatile
  3168                           
  3169                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  3170  000C98  888B               	bsf	139,4,c	;volatile
  3171                           
  3172                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  3173  000C9A  5068               	movf	CantaData@Data^0,w,c
  3174  000C9C  ECCA  F004         	call	_CantaPartBaixa
  3175                           
  3176                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  3177  000CA0  888B               	bsf	139,4,c	;volatile
  3178                           
  3179                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3180  000CA2  988B               	bcf	139,4,c	;volatile
  3181                           
  3182                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3183  000CA4  8694               	bsf	148,3,c	;volatile
  3184  000CA6  8494               	bsf	148,2,c	;volatile
  3185  000CA8  8294               	bsf	148,1,c	;volatile
  3186  000CAA  8094               	bsf	148,0,c	;volatile
  3187  000CAC  0012               	return		;funcret
  3188  000CAE                     __end_of_CantaData:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _LcInit *****************
  3192 ;; Defined at:
  3193 ;;		line 41 in file "LcTLCD.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  rows            1    wreg     unsigned char 
  3196 ;;  columns         1   16[COMRAM] unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  rows            1   17[COMRAM] unsigned char 
  3199 ;;  i               2   18[COMRAM] int 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1
  3209 ;;      Params:         1       0       0
  3210 ;;      Locals:         3       0       0
  3211 ;;      Temps:          0       0       0
  3212 ;;      Totals:         4       0       0
  3213 ;;Total ram usage:        4 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 5
  3216 ;; This function calls:
  3217 ;;		_CantaIR
  3218 ;;		_EscriuPrimeraOrdre
  3219 ;;		_Espera
  3220 ;;		_LcCursorOff
  3221 ;;		_TiGetTimer
  3222 ;;		_WaitForBusy
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text25
  3229  000788                     __ptext25:
  3230                           	callstack 0
  3231  000788                     _LcInit:
  3232                           	callstack 25
  3233                           
  3234                           ;incstack = 0
  3235                           ;LcInit@rows stored from wreg
  3236  000788  6E72               	movwf	LcInit@rows^0,c
  3237                           
  3238                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3239  00078A  ECE9  F005         	call	_TiGetTimer	;wreg free
  3240  00078E  6E2F               	movwf	_Timer^0,c
  3241                           
  3242                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3243  000790  C072  F033         	movff	LcInit@rows,_Rows
  3244  000794  C071  F032         	movff	LcInit@columns,_Columns
  3245                           
  3246                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3247  000798  0E00               	movlw	0
  3248  00079A  6E30               	movwf	_ColumnAct^0,c
  3249  00079C  C030  F031         	movff	_ColumnAct,_RowAct
  3250                           
  3251                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3252  0007A0  9894               	bcf	148,4,c	;volatile
  3253  0007A2  9E95               	bcf	149,7,c	;volatile
  3254  0007A4  9A94               	bcf	148,5,c	;volatile
  3255                           
  3256                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3257  0007A6  0E00               	movlw	0
  3258  0007A8  6E74               	movwf	(LcInit@i+1)^0,c
  3259  0007AA  0E00               	movlw	0
  3260  0007AC  6E73               	movwf	LcInit@i^0,c
  3261  0007AE                     l2155:
  3262                           
  3263                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3264  0007AE  0E00               	movlw	0
  3265  0007B0  6E6E               	movwf	(Espera@ms+1)^0,c
  3266  0007B2  0E64               	movlw	100
  3267  0007B4  6E6D               	movwf	Espera@ms^0,c
  3268  0007B6  502F               	movf	_Timer^0,w,c
  3269  0007B8  ECB0  F006         	call	_Espera
  3270                           
  3271                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3272  0007BC  0E03               	movlw	3
  3273  0007BE  EC8D  F004         	call	_EscriuPrimeraOrdre
  3274                           
  3275                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3276  0007C2  0E00               	movlw	0
  3277  0007C4  6E6E               	movwf	(Espera@ms+1)^0,c
  3278  0007C6  0E05               	movlw	5
  3279  0007C8  6E6D               	movwf	Espera@ms^0,c
  3280  0007CA  502F               	movf	_Timer^0,w,c
  3281  0007CC  ECB0  F006         	call	_Espera
  3282                           
  3283                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3284  0007D0  0E03               	movlw	3
  3285  0007D2  EC8D  F004         	call	_EscriuPrimeraOrdre
  3286                           
  3287                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3288  0007D6  0E00               	movlw	0
  3289  0007D8  6E6E               	movwf	(Espera@ms+1)^0,c
  3290  0007DA  0E01               	movlw	1
  3291  0007DC  6E6D               	movwf	Espera@ms^0,c
  3292  0007DE  502F               	movf	_Timer^0,w,c
  3293  0007E0  ECB0  F006         	call	_Espera
  3294                           
  3295                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3296  0007E4  0E03               	movlw	3
  3297  0007E6  EC8D  F004         	call	_EscriuPrimeraOrdre
  3298                           
  3299                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3300  0007EA  0E00               	movlw	0
  3301  0007EC  6E6E               	movwf	(Espera@ms+1)^0,c
  3302  0007EE  0E01               	movlw	1
  3303  0007F0  6E6D               	movwf	Espera@ms^0,c
  3304  0007F2  502F               	movf	_Timer^0,w,c
  3305  0007F4  ECB0  F006         	call	_Espera
  3306                           
  3307                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  3308  0007F8  0E02               	movlw	2
  3309  0007FA  EC8D  F004         	call	_EscriuPrimeraOrdre
  3310                           
  3311                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  3312  0007FE  0E00               	movlw	0
  3313  000800  6E6E               	movwf	(Espera@ms+1)^0,c
  3314  000802  0E04               	movlw	4
  3315  000804  6E6D               	movwf	Espera@ms^0,c
  3316  000806  502F               	movf	_Timer^0,w,c
  3317  000808  ECB0  F006         	call	_Espera
  3318                           
  3319                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  3320  00080C  0E28               	movlw	40
  3321  00080E  EC57  F006         	call	_CantaIR
  3322                           
  3323                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  3324  000812  ECAC  F005         	call	_WaitForBusy	;wreg free
  3325  000816  0E08               	movlw	8
  3326  000818  EC57  F006         	call	_CantaIR
  3327                           
  3328                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  3329  00081C  ECAC  F005         	call	_WaitForBusy	;wreg free
  3330  000820  0E01               	movlw	1
  3331  000822  EC57  F006         	call	_CantaIR
  3332                           
  3333                           ;LcTLCD.c: 71:   Espera(Timer,3);
  3334  000826  0E00               	movlw	0
  3335  000828  6E6E               	movwf	(Espera@ms+1)^0,c
  3336  00082A  0E03               	movlw	3
  3337  00082C  6E6D               	movwf	Espera@ms^0,c
  3338  00082E  502F               	movf	_Timer^0,w,c
  3339  000830  ECB0  F006         	call	_Espera
  3340                           
  3341                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  3342  000834  ECAC  F005         	call	_WaitForBusy	;wreg free
  3343  000838  0E06               	movlw	6
  3344  00083A  EC57  F006         	call	_CantaIR
  3345                           
  3346                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  3347  00083E  ECAC  F005         	call	_WaitForBusy	;wreg free
  3348  000842  0E0F               	movlw	15
  3349  000844  EC57  F006         	call	_CantaIR
  3350                           
  3351                           ;LcTLCD.c: 74:  }
  3352  000848  4A73               	infsnz	LcInit@i^0,f,c
  3353  00084A  2A74               	incf	(LcInit@i+1)^0,f,c
  3354  00084C  BE74               	btfsc	(LcInit@i+1)^0,7,c
  3355  00084E  D7AF               	goto	l2155
  3356  000850  5074               	movf	(LcInit@i+1)^0,w,c
  3357  000852  E104               	bnz	u1410
  3358  000854  0E02               	movlw	2
  3359  000856  5C73               	subwf	LcInit@i^0,w,c
  3360  000858  A0D8               	btfss	status,0,c
  3361  00085A  D7A9               	goto	l2155
  3362  00085C                     u1410:
  3363                           
  3364                           ;LcTLCD.c: 79:     LcCursorOff();
  3365  00085C  ECFF  F006         	call	_LcCursorOff	;wreg free
  3366  000860  0012               	return		;funcret
  3367  000862                     __end_of_LcInit:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _TiGetTimer *****************
  3371 ;; Defined at:
  3372 ;;		line 70 in file "TiTTimer.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1
  3386 ;;      Params:         0       0       0
  3387 ;;      Locals:         0       0       0
  3388 ;;      Temps:          1       0       0
  3389 ;;      Totals:         1       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_LcInit
  3397 ;;		_Sinit
  3398 ;;		_TeInit
  3399 ;;		_Minit
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text26
  3404  000BD2                     __ptext26:
  3405                           	callstack 0
  3406  000BD2                     _TiGetTimer:
  3407                           	callstack 27
  3408                           
  3409                           ;TiTTimer.c: 74:     counter=0;
  3410                           
  3411                           ;incstack = 0
  3412  000BD2  0E00               	movlw	0
  3413  000BD4  6E27               	movwf	_counter^0,c
  3414                           
  3415                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3416  000BD6  D007               	goto	l1323
  3417  000BD8                     l1315:
  3418                           
  3419                           ;TiTTimer.c: 76:         counter++;
  3420  000BD8  2A27               	incf	_counter^0,f,c
  3421                           
  3422                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  3423  000BDA  0E08               	movlw	8
  3424  000BDC  1827               	xorwf	_counter^0,w,c
  3425  000BDE  A4D8               	btfss	status,2,c
  3426  000BE0  D002               	goto	l1323
  3427  000BE2  0EFF               	movlw	255
  3428  000BE4  0012               	return	
  3429  000BE6                     l1323:
  3430                           
  3431                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3432  000BE6  5027               	movf	_counter^0,w,c
  3433  000BE8  0D03               	mullw	3
  3434  000BEA  50F3               	movf	243,w,c
  3435  000BEC  0F03               	addlw	low (_s_Timers+2)
  3436  000BEE  6ED9               	movwf	fsr2l,c
  3437  000BF0  6ADA               	clrf	fsr2h,c
  3438  000BF2  04DE               	decf	postinc2,w,c
  3439  000BF4  B4D8               	btfsc	status,2,c
  3440  000BF6  D7F0               	goto	l1315
  3441                           
  3442                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  3443  000BF8  5027               	movf	_counter^0,w,c
  3444  000BFA  0D03               	mullw	3
  3445  000BFC  50F3               	movf	243,w,c
  3446  000BFE  0F03               	addlw	low (_s_Timers+2)
  3447  000C00  6ED9               	movwf	fsr2l,c
  3448  000C02  6ADA               	clrf	fsr2h,c
  3449  000C04  0E01               	movlw	1
  3450  000C06  6EDF               	movwf	indf2,c
  3451                           
  3452                           ;TiTTimer.c: 80:     return (counter);
  3453  000C08  5027               	movf	_counter^0,w,c
  3454  000C0A  0012               	return		;funcret
  3455  000C0C                     __end_of_TiGetTimer:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _LcCursorOff *****************
  3459 ;; Defined at:
  3460 ;;		line 97 in file "LcTLCD.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1
  3474 ;;      Params:         0       0       0
  3475 ;;      Locals:         0       0       0
  3476 ;;      Temps:          0       0       0
  3477 ;;      Totals:         0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		_CantaIR
  3483 ;;		_WaitForBusy
  3484 ;; This function is called by:
  3485 ;;		_LcInit
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text27
  3490  000DFE                     __ptext27:
  3491                           	callstack 0
  3492  000DFE                     _LcCursorOff:
  3493                           	callstack 25
  3494                           
  3495                           ;LcTLCD.c: 100:  WaitForBusy();
  3496                           
  3497                           ;incstack = 0
  3498  000DFE  ECAC  F005         	call	_WaitForBusy	;wreg free
  3499                           
  3500                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  3501  000E02  0E0C               	movlw	12
  3502  000E04  EC57  F006         	call	_CantaIR
  3503  000E08  0012               	return		;funcret
  3504  000E0A                     __end_of_LcCursorOff:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _WaitForBusy *****************
  3508 ;; Defined at:
  3509 ;;		line 210 in file "LcTLCD.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  Busy            1   12[COMRAM] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1
  3523 ;;      Params:         0       0       0
  3524 ;;      Locals:         1       0       0
  3525 ;;      Temps:          0       0       0
  3526 ;;      Totals:         1       0       0
  3527 ;;Total ram usage:        1 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 3
  3530 ;; This function calls:
  3531 ;;		_TiGetTics
  3532 ;;		_TiResetTics
  3533 ;; This function is called by:
  3534 ;;		_LcInit
  3535 ;;		_LcClear
  3536 ;;		_LcCursorOff
  3537 ;;		_LcGotoXY
  3538 ;;		_LcPutChar
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text28
  3543  000B58                     __ptext28:
  3544                           	callstack 0
  3545  000B58                     _WaitForBusy:
  3546                           	callstack 25
  3547                           
  3548                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3549                           
  3550                           ;incstack = 0
  3551  000B58  8694               	bsf	148,3,c	;volatile
  3552  000B5A  8494               	bsf	148,2,c	;volatile
  3553  000B5C  8294               	bsf	148,1,c	;volatile
  3554  000B5E  8094               	bsf	148,0,c	;volatile
  3555                           
  3556                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  3557  000B60  9A8B               	bcf	139,5,c	;volatile
  3558                           
  3559                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  3560  000B62  8E8C               	bsf	140,7,c	;volatile
  3561                           
  3562                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  3563  000B64  502F               	movf	_Timer^0,w,c
  3564  000B66  ECE0  F006         	call	_TiResetTics
  3565  000B6A                     l2033:
  3566                           
  3567                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3568  000B6A  888B               	bsf	139,4,c	;volatile
  3569  000B6C  888B               	bsf	139,4,c	;volatile
  3570                           
  3571                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  3572  000B6E  0E00               	movlw	0
  3573  000B70  B682               	btfsc	130,3,c	;volatile
  3574  000B72  0E01               	movlw	1
  3575  000B74  6E6D               	movwf	WaitForBusy@Busy^0,c
  3576                           
  3577                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  3578  000B76  988B               	bcf	139,4,c	;volatile
  3579                           
  3580                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  3581  000B78  988B               	bcf	139,4,c	;volatile
  3582                           
  3583                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3584  000B7A  888B               	bsf	139,4,c	;volatile
  3585  000B7C  888B               	bsf	139,4,c	;volatile
  3586                           
  3587                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  3588  000B7E  988B               	bcf	139,4,c	;volatile
  3589                           
  3590                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  3591  000B80  988B               	bcf	139,4,c	;volatile
  3592                           
  3593                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  3594  000B82  502F               	movf	_Timer^0,w,c
  3595  000B84  EC88  F006         	call	_TiGetTics
  3596  000B88  5066               	movf	?_TiGetTics^0,w,c
  3597  000B8A  1067               	iorwf	(?_TiGetTics+1)^0,w,c
  3598  000B8C  A4D8               	btfss	status,2,c
  3599  000B8E  0012               	return	
  3600                           
  3601                           ;LcTLCD.c: 225:  } while(Busy);
  3602  000B90  506D               	movf	WaitForBusy@Busy^0,w,c
  3603  000B92  B4D8               	btfsc	status,2,c
  3604  000B94  0012               	return	
  3605  000B96  D7E9               	goto	l2033
  3606  000B98                     __end_of_WaitForBusy:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _CantaIR *****************
  3610 ;; Defined at:
  3611 ;;		line 178 in file "LcTLCD.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  IR              1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  IR              1    7[COMRAM] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1
  3625 ;;      Params:         0       0       0
  3626 ;;      Locals:         1       0       0
  3627 ;;      Temps:          0       0       0
  3628 ;;      Totals:         1       0       0
  3629 ;;Total ram usage:        1 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 3
  3632 ;; This function calls:
  3633 ;;		_CantaPartAlta
  3634 ;;		_CantaPartBaixa
  3635 ;; This function is called by:
  3636 ;;		_LcInit
  3637 ;;		_LcClear
  3638 ;;		_LcCursorOff
  3639 ;;		_LcGotoXY
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text29
  3644  000CAE                     __ptext29:
  3645                           	callstack 0
  3646  000CAE                     _CantaIR:
  3647                           	callstack 24
  3648                           
  3649                           ;incstack = 0
  3650                           ;CantaIR@IR stored from wreg
  3651  000CAE  6E68               	movwf	CantaIR@IR^0,c
  3652                           
  3653                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3654  000CB0  9694               	bcf	148,3,c	;volatile
  3655  000CB2  9494               	bcf	148,2,c	;volatile
  3656  000CB4  9294               	bcf	148,1,c	;volatile
  3657  000CB6  9094               	bcf	148,0,c	;volatile
  3658                           
  3659                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  3660  000CB8  9A8B               	bcf	139,5,c	;volatile
  3661                           
  3662                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  3663  000CBA  9E8C               	bcf	140,7,c	;volatile
  3664                           
  3665                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  3666  000CBC  888B               	bsf	139,4,c	;volatile
  3667                           
  3668                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  3669  000CBE  5068               	movf	CantaIR@IR^0,w,c
  3670  000CC0  ECFE  F004         	call	_CantaPartAlta
  3671                           
  3672                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  3673  000CC4  888B               	bsf	139,4,c	;volatile
  3674                           
  3675                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  3676  000CC6  988B               	bcf	139,4,c	;volatile
  3677                           
  3678                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  3679  000CC8  988B               	bcf	139,4,c	;volatile
  3680                           
  3681                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  3682  000CCA  888B               	bsf	139,4,c	;volatile
  3683                           
  3684                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  3685  000CCC  5068               	movf	CantaIR@IR^0,w,c
  3686  000CCE  ECCA  F004         	call	_CantaPartBaixa
  3687                           
  3688                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  3689  000CD2  888B               	bsf	139,4,c	;volatile
  3690                           
  3691                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  3692  000CD4  988B               	bcf	139,4,c	;volatile
  3693                           
  3694                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3695  000CD6  8694               	bsf	148,3,c	;volatile
  3696  000CD8  8494               	bsf	148,2,c	;volatile
  3697  000CDA  8294               	bsf	148,1,c	;volatile
  3698  000CDC  8094               	bsf	148,0,c	;volatile
  3699  000CDE  0012               	return		;funcret
  3700  000CE0                     __end_of_CantaIR:
  3701                           	callstack 0
  3702                           
  3703 ;; *************** function _CantaPartBaixa *****************
  3704 ;; Defined at:
  3705 ;;		line 171 in file "LcTLCD.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  c               1    wreg     unsigned char 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  c               1    6[COMRAM] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1
  3719 ;;      Params:         0       0       0
  3720 ;;      Locals:         1       0       0
  3721 ;;      Temps:          1       0       0
  3722 ;;      Totals:         2       0       0
  3723 ;;Total ram usage:        2 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; Hardware stack levels required when called: 2
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_CantaIR
  3730 ;;		_CantaData
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text30
  3735  000994                     __ptext30:
  3736                           	callstack 0
  3737  000994                     _CantaPartBaixa:
  3738                           	callstack 24
  3739                           
  3740                           ;incstack = 0
  3741                           ;CantaPartBaixa@c stored from wreg
  3742  000994  6E67               	movwf	CantaPartBaixa@c^0,c
  3743                           
  3744                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  3745  000996  A667               	btfss	CantaPartBaixa@c^0,3,c
  3746  000998  D003               	goto	u1240
  3747  00099A  6A66               	clrf	??_CantaPartBaixa^0,c
  3748  00099C  2A66               	incf	??_CantaPartBaixa^0,f,c
  3749  00099E  D001               	goto	u1258
  3750  0009A0                     u1240:
  3751  0009A0  6A66               	clrf	??_CantaPartBaixa^0,c
  3752  0009A2                     u1258:
  3753  0009A2  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3754  0009A4  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3755  0009A6  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3756  0009A8  508B               	movf	139,w,c	;volatile
  3757  0009AA  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3758  0009AC  0BF7               	andlw	-9
  3759  0009AE  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3760  0009B0  6E8B               	movwf	139,c	;volatile
  3761                           
  3762                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  3763  0009B2  A467               	btfss	CantaPartBaixa@c^0,2,c
  3764  0009B4  D003               	goto	u1260
  3765  0009B6  6A66               	clrf	??_CantaPartBaixa^0,c
  3766  0009B8  2A66               	incf	??_CantaPartBaixa^0,f,c
  3767  0009BA  D001               	goto	u1278
  3768  0009BC                     u1260:
  3769  0009BC  6A66               	clrf	??_CantaPartBaixa^0,c
  3770  0009BE                     u1278:
  3771  0009BE  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3772  0009C0  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3773  0009C2  508B               	movf	139,w,c	;volatile
  3774  0009C4  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3775  0009C6  0BFB               	andlw	-5
  3776  0009C8  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3777  0009CA  6E8B               	movwf	139,c	;volatile
  3778                           
  3779                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  3780  0009CC  A267               	btfss	CantaPartBaixa@c^0,1,c
  3781  0009CE  D003               	goto	u1280
  3782  0009D0  6A66               	clrf	??_CantaPartBaixa^0,c
  3783  0009D2  2A66               	incf	??_CantaPartBaixa^0,f,c
  3784  0009D4  D001               	goto	u1298
  3785  0009D6                     u1280:
  3786  0009D6  6A66               	clrf	??_CantaPartBaixa^0,c
  3787  0009D8                     u1298:
  3788  0009D8  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3789  0009DA  508B               	movf	139,w,c	;volatile
  3790  0009DC  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3791  0009DE  0BFD               	andlw	-3
  3792  0009E0  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3793  0009E2  6E8B               	movwf	139,c	;volatile
  3794                           
  3795                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  3796  0009E4  A067               	btfss	CantaPartBaixa@c^0,0,c
  3797  0009E6  D003               	goto	u1300
  3798  0009E8  6A66               	clrf	??_CantaPartBaixa^0,c
  3799  0009EA  2A66               	incf	??_CantaPartBaixa^0,f,c
  3800  0009EC  D001               	goto	u1318
  3801  0009EE                     u1300:
  3802  0009EE  6A66               	clrf	??_CantaPartBaixa^0,c
  3803  0009F0                     u1318:
  3804  0009F0  508B               	movf	139,w,c	;volatile
  3805  0009F2  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3806  0009F4  0BFE               	andlw	-2
  3807  0009F6  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3808  0009F8  6E8B               	movwf	139,c	;volatile
  3809  0009FA  0012               	return		;funcret
  3810  0009FC                     __end_of_CantaPartBaixa:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _CantaPartAlta *****************
  3814 ;; Defined at:
  3815 ;;		line 164 in file "LcTLCD.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  c               1    wreg     unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  c               1    6[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1
  3829 ;;      Params:         0       0       0
  3830 ;;      Locals:         1       0       0
  3831 ;;      Temps:          1       0       0
  3832 ;;      Totals:         2       0       0
  3833 ;;Total ram usage:        2 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_CantaIR
  3840 ;;		_CantaData
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text31
  3845  0009FC                     __ptext31:
  3846                           	callstack 0
  3847  0009FC                     _CantaPartAlta:
  3848                           	callstack 24
  3849                           
  3850                           ;incstack = 0
  3851                           ;CantaPartAlta@c stored from wreg
  3852  0009FC  6E67               	movwf	CantaPartAlta@c^0,c
  3853                           
  3854                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  3855  0009FE  AE67               	btfss	CantaPartAlta@c^0,7,c
  3856  000A00  D003               	goto	u1160
  3857  000A02  6A66               	clrf	??_CantaPartAlta^0,c
  3858  000A04  2A66               	incf	??_CantaPartAlta^0,f,c
  3859  000A06  D001               	goto	u1178
  3860  000A08                     u1160:
  3861  000A08  6A66               	clrf	??_CantaPartAlta^0,c
  3862  000A0A                     u1178:
  3863  000A0A  4666               	rlncf	??_CantaPartAlta^0,f,c
  3864  000A0C  4666               	rlncf	??_CantaPartAlta^0,f,c
  3865  000A0E  4666               	rlncf	??_CantaPartAlta^0,f,c
  3866  000A10  508B               	movf	139,w,c	;volatile
  3867  000A12  1866               	xorwf	??_CantaPartAlta^0,w,c
  3868  000A14  0BF7               	andlw	-9
  3869  000A16  1866               	xorwf	??_CantaPartAlta^0,w,c
  3870  000A18  6E8B               	movwf	139,c	;volatile
  3871                           
  3872                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  3873  000A1A  AC67               	btfss	CantaPartAlta@c^0,6,c
  3874  000A1C  D003               	goto	u1180
  3875  000A1E  6A66               	clrf	??_CantaPartAlta^0,c
  3876  000A20  2A66               	incf	??_CantaPartAlta^0,f,c
  3877  000A22  D001               	goto	u1198
  3878  000A24                     u1180:
  3879  000A24  6A66               	clrf	??_CantaPartAlta^0,c
  3880  000A26                     u1198:
  3881  000A26  4666               	rlncf	??_CantaPartAlta^0,f,c
  3882  000A28  4666               	rlncf	??_CantaPartAlta^0,f,c
  3883  000A2A  508B               	movf	139,w,c	;volatile
  3884  000A2C  1866               	xorwf	??_CantaPartAlta^0,w,c
  3885  000A2E  0BFB               	andlw	-5
  3886  000A30  1866               	xorwf	??_CantaPartAlta^0,w,c
  3887  000A32  6E8B               	movwf	139,c	;volatile
  3888                           
  3889                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  3890  000A34  AA67               	btfss	CantaPartAlta@c^0,5,c
  3891  000A36  D003               	goto	u1200
  3892  000A38  6A66               	clrf	??_CantaPartAlta^0,c
  3893  000A3A  2A66               	incf	??_CantaPartAlta^0,f,c
  3894  000A3C  D001               	goto	u1218
  3895  000A3E                     u1200:
  3896  000A3E  6A66               	clrf	??_CantaPartAlta^0,c
  3897  000A40                     u1218:
  3898  000A40  4666               	rlncf	??_CantaPartAlta^0,f,c
  3899  000A42  508B               	movf	139,w,c	;volatile
  3900  000A44  1866               	xorwf	??_CantaPartAlta^0,w,c
  3901  000A46  0BFD               	andlw	-3
  3902  000A48  1866               	xorwf	??_CantaPartAlta^0,w,c
  3903  000A4A  6E8B               	movwf	139,c	;volatile
  3904                           
  3905                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  3906  000A4C  A867               	btfss	CantaPartAlta@c^0,4,c
  3907  000A4E  D003               	goto	u1220
  3908  000A50  6A66               	clrf	??_CantaPartAlta^0,c
  3909  000A52  2A66               	incf	??_CantaPartAlta^0,f,c
  3910  000A54  D001               	goto	u1238
  3911  000A56                     u1220:
  3912  000A56  6A66               	clrf	??_CantaPartAlta^0,c
  3913  000A58                     u1238:
  3914  000A58  508B               	movf	139,w,c	;volatile
  3915  000A5A  1866               	xorwf	??_CantaPartAlta^0,w,c
  3916  000A5C  0BFE               	andlw	-2
  3917  000A5E  1866               	xorwf	??_CantaPartAlta^0,w,c
  3918  000A60  6E8B               	movwf	139,c	;volatile
  3919  000A62  0012               	return		;funcret
  3920  000A64                     __end_of_CantaPartAlta:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _Espera *****************
  3924 ;; Defined at:
  3925 ;;		line 159 in file "LcTLCD.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  Timer           1    wreg     unsigned char 
  3928 ;;  ms              2   12[COMRAM] int 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  Timer           1   15[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1
  3940 ;;      Params:         2       0       0
  3941 ;;      Locals:         1       0       0
  3942 ;;      Temps:          1       0       0
  3943 ;;      Totals:         4       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 3
  3947 ;; This function calls:
  3948 ;;		_TiGetTics
  3949 ;;		_TiResetTics
  3950 ;; This function is called by:
  3951 ;;		_LcInit
  3952 ;;		_LcClear
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text32
  3957  000D60                     __ptext32:
  3958                           	callstack 0
  3959  000D60                     _Espera:
  3960                           	callstack 25
  3961                           
  3962                           ;incstack = 0
  3963                           ;Espera@Timer stored from wreg
  3964  000D60  6E70               	movwf	Espera@Timer^0,c
  3965                           
  3966                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  3967  000D62  5070               	movf	Espera@Timer^0,w,c
  3968  000D64  ECE0  F006         	call	_TiResetTics
  3969  000D68                     l2059:
  3970  000D68  5070               	movf	Espera@Timer^0,w,c
  3971  000D6A  EC88  F006         	call	_TiGetTics
  3972  000D6E  506D               	movf	Espera@ms^0,w,c
  3973  000D70  5C66               	subwf	?_TiGetTics^0,w,c
  3974  000D72  5067               	movf	(?_TiGetTics+1)^0,w,c
  3975  000D74  0A80               	xorlw	128
  3976  000D76  6E6F               	movwf	??_Espera^0,c
  3977  000D78  506E               	movf	(Espera@ms+1)^0,w,c
  3978  000D7A  0A80               	xorlw	128
  3979  000D7C  586F               	subwfb	??_Espera^0,w,c
  3980  000D7E  B0D8               	btfsc	status,0,c
  3981  000D80  0012               	return	
  3982  000D82  D7F2               	goto	l2059
  3983  000D84                     __end_of_Espera:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _TiResetTics *****************
  3987 ;; Defined at:
  3988 ;;		line 55 in file "TiTTimer.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  Handle          1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  Handle          1    5[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1
  4002 ;;      Params:         0       0       0
  4003 ;;      Locals:         1       0       0
  4004 ;;      Temps:          0       0       0
  4005 ;;      Totals:         1       0       0
  4006 ;;Total ram usage:        1 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_Espera
  4013 ;;		_WaitForBusy
  4014 ;;		_SMotor
  4015 ;;		_TeTeclat
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text33
  4020  000DC0                     __ptext33:
  4021                           	callstack 0
  4022  000DC0                     _TiResetTics:
  4023                           	callstack 25
  4024                           
  4025                           ;incstack = 0
  4026                           ;TiResetTics@Handle stored from wreg
  4027  000DC0  6E66               	movwf	TiResetTics@Handle^0,c
  4028                           
  4029                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  4030  000DC2  5066               	movf	TiResetTics@Handle^0,w,c
  4031  000DC4  0D03               	mullw	3
  4032  000DC6  50F3               	movf	243,w,c
  4033  000DC8  0F01               	addlw	low _s_Timers
  4034  000DCA  6ED9               	movwf	fsr2l,c
  4035  000DCC  6ADA               	clrf	fsr2h,c
  4036  000DCE  C01D  FFDE         	movff	_h_Tics,postinc2
  4037  000DD2  C01E  FFDD         	movff	_h_Tics+1,postdec2
  4038  000DD6  0012               	return		;funcret
  4039  000DD8                     __end_of_TiResetTics:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function _TiGetTics *****************
  4043 ;; Defined at:
  4044 ;;		line 61 in file "TiTTimer.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  Handle          1    wreg     unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  Handle          1    9[COMRAM] unsigned char 
  4049 ;;  actual          2   10[COMRAM] volatile unsigned int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    5[COMRAM] int 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1
  4059 ;;      Params:         2       0       0
  4060 ;;      Locals:         3       0       0
  4061 ;;      Temps:          2       0       0
  4062 ;;      Totals:         7       0       0
  4063 ;;Total ram usage:        7 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 2
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_Espera
  4070 ;;		_WaitForBusy
  4071 ;;		_SMotor
  4072 ;;		_TeTeclat
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text34
  4077  000D10                     __ptext34:
  4078                           	callstack 0
  4079  000D10                     _TiGetTics:
  4080                           	callstack 25
  4081                           
  4082                           ;incstack = 0
  4083                           ;TiGetTics@Handle stored from wreg
  4084  000D10  6E6A               	movwf	TiGetTics@Handle^0,c
  4085                           
  4086                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  4087  000D12  C01D  F06B         	movff	_h_Tics,TiGetTics@actual	;volatile
  4088  000D16  C01E  F06C         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  4089                           
  4090                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  4091  000D1A  506A               	movf	TiGetTics@Handle^0,w,c
  4092  000D1C  0D03               	mullw	3
  4093  000D1E  50F3               	movf	243,w,c
  4094  000D20  0F01               	addlw	low _s_Timers
  4095  000D22  6ED9               	movwf	fsr2l,c
  4096  000D24  6ADA               	clrf	fsr2h,c
  4097  000D26  CFDE F068          	movff	postinc2,??_TiGetTics
  4098  000D2A  CFDD F069          	movff	postdec2,??_TiGetTics+1
  4099  000D2E  5068               	movf	??_TiGetTics^0,w,c
  4100  000D30  5C6B               	subwf	TiGetTics@actual^0,w,c	;volatile
  4101  000D32  6E66               	movwf	?_TiGetTics^0,c
  4102  000D34  5069               	movf	(??_TiGetTics+1)^0,w,c
  4103  000D36  586C               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  4104  000D38  6E67               	movwf	(?_TiGetTics+1)^0,c
  4105  000D3A  0012               	return		;funcret
  4106  000D3C                     __end_of_TiGetTics:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _EscriuPrimeraOrdre *****************
  4110 ;; Defined at:
  4111 ;;		line 228 in file "LcTLCD.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  ordre           1    wreg     unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  ordre           1    6[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1
  4125 ;;      Params:         0       0       0
  4126 ;;      Locals:         1       0       0
  4127 ;;      Temps:          1       0       0
  4128 ;;      Totals:         2       0       0
  4129 ;;Total ram usage:        2 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; Hardware stack levels required when called: 2
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_LcInit
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text35
  4140  00091A                     __ptext35:
  4141                           	callstack 0
  4142  00091A                     _EscriuPrimeraOrdre:
  4143                           	callstack 27
  4144                           
  4145                           ;incstack = 0
  4146                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4147  00091A  6E67               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4148                           
  4149                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4150  00091C  9694               	bcf	148,3,c	;volatile
  4151  00091E  9494               	bcf	148,2,c	;volatile
  4152  000920  9294               	bcf	148,1,c	;volatile
  4153  000922  9094               	bcf	148,0,c	;volatile
  4154  000924  9A8B               	bcf	139,5,c	;volatile
  4155  000926  9E8C               	bcf	140,7,c	;volatile
  4156                           
  4157                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4158  000928  888B               	bsf	139,4,c	;volatile
  4159  00092A  888B               	bsf	139,4,c	;volatile
  4160                           
  4161                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4162  00092C  A667               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4163  00092E  D003               	goto	u230
  4164  000930  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4165  000932  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4166  000934  D001               	goto	u248
  4167  000936                     u230:
  4168  000936  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4169  000938                     u248:
  4170  000938  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4171  00093A  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4172  00093C  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4173  00093E  508B               	movf	139,w,c	;volatile
  4174  000940  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4175  000942  0BF7               	andlw	-9
  4176  000944  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4177  000946  6E8B               	movwf	139,c	;volatile
  4178                           
  4179                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4180  000948  A467               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4181  00094A  D003               	goto	u250
  4182  00094C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4183  00094E  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4184  000950  D001               	goto	u268
  4185  000952                     u250:
  4186  000952  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4187  000954                     u268:
  4188  000954  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4189  000956  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4190  000958  508B               	movf	139,w,c	;volatile
  4191  00095A  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4192  00095C  0BFB               	andlw	-5
  4193  00095E  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4194  000960  6E8B               	movwf	139,c	;volatile
  4195                           
  4196                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4197  000962  A267               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4198  000964  D003               	goto	u270
  4199  000966  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4200  000968  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4201  00096A  D001               	goto	u288
  4202  00096C                     u270:
  4203  00096C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4204  00096E                     u288:
  4205  00096E  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4206  000970  508B               	movf	139,w,c	;volatile
  4207  000972  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4208  000974  0BFD               	andlw	-3
  4209  000976  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4210  000978  6E8B               	movwf	139,c	;volatile
  4211                           
  4212                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4213  00097A  A067               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4214  00097C  D003               	goto	u290
  4215  00097E  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4216  000980  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4217  000982  D001               	goto	u308
  4218  000984                     u290:
  4219  000984  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4220  000986                     u308:
  4221  000986  508B               	movf	139,w,c	;volatile
  4222  000988  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4223  00098A  0BFE               	andlw	-2
  4224  00098C  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4225  00098E  6E8B               	movwf	139,c	;volatile
  4226                           
  4227                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4228  000990  988B               	bcf	139,4,c	;volatile
  4229  000992  0012               	return		;funcret
  4230  000994                     __end_of_EscriuPrimeraOrdre:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function _high_rsi *****************
  4234 ;; Defined at:
  4235 ;;		line 15 in file "main.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;		None
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;		None
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1
  4249 ;;      Params:         0       0       0
  4250 ;;      Locals:         0       0       0
  4251 ;;      Temps:          4       0       0
  4252 ;;      Totals:         4       0       0
  4253 ;;Total ram usage:        4 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 1
  4256 ;; This function calls:
  4257 ;;		__TiRSITimer
  4258 ;; This function is called by:
  4259 ;;		Interrupt level 2
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	intcode
  4264  000008                     __pintcode:
  4265                           	callstack 0
  4266  000008                     _high_rsi:
  4267                           	callstack 24
  4268                           
  4269                           ;incstack = 0
  4270  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4271  00000A  CFD9 F062          	movff	fsr2l,??_high_rsi
  4272  00000E  CFDA F063          	movff	fsr2h,??_high_rsi+1
  4273  000012  CFF3 F064          	movff	prodl,??_high_rsi+2
  4274  000016  CFF4 F065          	movff	prodh,??_high_rsi+3
  4275                           
  4276                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4277  00001A  EC32  F005         	call	__TiRSITimer	;wreg free
  4278  00001E  C065  FFF4         	movff	??_high_rsi+3,prodh
  4279  000022  C064  FFF3         	movff	??_high_rsi+2,prodl
  4280  000026  C063  FFDA         	movff	??_high_rsi+1,fsr2h
  4281  00002A  C062  FFD9         	movff	??_high_rsi,fsr2l
  4282  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4283  000030  0011               	retfie		f
  4284  000032                     __end_of_high_rsi:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function __TiRSITimer *****************
  4288 ;; Defined at:
  4289 ;;		line 37 in file "TiTTimer.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1
  4303 ;;      Params:         0       0       0
  4304 ;;      Locals:         0       0       0
  4305 ;;      Temps:          1       0       0
  4306 ;;      Totals:         1       0       0
  4307 ;;Total ram usage:        1 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_high_rsi
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text37
  4317  000A64                     __ptext37:
  4318                           	callstack 0
  4319  000A64                     __TiRSITimer:
  4320                           	callstack 24
  4321                           
  4322                           ;TiTTimer.c: 39:     TMR0H = 223;
  4323                           
  4324                           ;incstack = 0
  4325  000A64  0EDF               	movlw	223
  4326  000A66  6ED7               	movwf	215,c	;volatile
  4327                           
  4328                           ;TiTTimer.c: 40:     TMR0L = 148;
  4329  000A68  0E94               	movlw	148
  4330  000A6A  6ED6               	movwf	214,c	;volatile
  4331                           
  4332                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  4333  000A6C  94F2               	bcf	242,2,c	;volatile
  4334                           
  4335                           ;TiTTimer.c: 42:     h_Tics++;
  4336  000A6E  4A1D               	infsnz	_h_Tics^0,f,c
  4337  000A70  2A1E               	incf	(_h_Tics+1)^0,f,c
  4338                           
  4339                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  4340  000A72  0E48               	movlw	72
  4341  000A74  5C1D               	subwf	_h_Tics^0,w,c
  4342  000A76  0EEE               	movlw	238
  4343  000A78  581E               	subwfb	(_h_Tics+1)^0,w,c
  4344  000A7A  A0D8               	btfss	status,0,c
  4345  000A7C  0012               	return	
  4346                           
  4347                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  4348  000A7E  0E00               	movlw	0
  4349  000A80  6E27               	movwf	_counter^0,c
  4350  000A82                     i2l1483:
  4351  000A82  0E07               	movlw	7
  4352  000A84  6427               	cpfsgt	_counter^0,c
  4353  000A86  D001               	goto	i2l1487
  4354  000A88  D015               	goto	i2l1495
  4355  000A8A                     i2l1487:
  4356                           
  4357                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  4358  000A8A  5027               	movf	_counter^0,w,c
  4359  000A8C  0D03               	mullw	3
  4360  000A8E  50F3               	movf	243,w,c
  4361  000A90  0F03               	addlw	low (_s_Timers+2)
  4362  000A92  6ED9               	movwf	fsr2l,c
  4363  000A94  6ADA               	clrf	fsr2h,c
  4364  000A96  04DE               	decf	postinc2,w,c
  4365  000A98  A4D8               	btfss	status,2,c
  4366  000A9A  D00A               	goto	i2l1491
  4367                           
  4368                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  4369  000A9C  5027               	movf	_counter^0,w,c
  4370  000A9E  0D03               	mullw	3
  4371  000AA0  50F3               	movf	243,w,c
  4372  000AA2  0F01               	addlw	low _s_Timers
  4373  000AA4  6ED9               	movwf	fsr2l,c
  4374  000AA6  6ADA               	clrf	fsr2h,c
  4375  000AA8  501D               	movf	_h_Tics^0,w,c
  4376  000AAA  5EDE               	subwf	postinc2,f,c
  4377  000AAC  501E               	movf	(_h_Tics+1)^0,w,c
  4378  000AAE  5ADD               	subwfb	postdec2,f,c
  4379  000AB0                     i2l1491:
  4380                           
  4381                           ;TiTTimer.c: 50:         }
  4382  000AB0  2A27               	incf	_counter^0,f,c
  4383  000AB2  D7E7               	goto	i2l1483
  4384  000AB4                     i2l1495:
  4385                           
  4386                           ;TiTTimer.c: 51:         h_Tics=0;
  4387  000AB4  0E00               	movlw	0
  4388  000AB6  6E1E               	movwf	(_h_Tics+1)^0,c
  4389  000AB8  0E00               	movlw	0
  4390  000ABA  6E1D               	movwf	_h_Tics^0,c
  4391  000ABC  0012               	return		;funcret
  4392  000ABE                     __end_of__TiRSITimer:
  4393                           	callstack 0
  4394                           
  4395                           	psect	text38
  4396  000000                     __ptext38:
  4397                           	callstack 0
  4398                           
  4399                           	psect	rparam
  4400  0000                     
  4401                           	psect	temp
  4402  000078                     btemp:
  4403                           	callstack 0
  4404  000078                     	ds	1
  4405  0000                     int$flags	set	btemp
  4406  0000                     wtemp8	set	btemp+1
  4407  0000                     ttemp5	set	btemp+1
  4408  0000                     ttemp6	set	btemp+4
  4409  0000                     ttemp7	set	btemp+8
  4410                           
  4411                           	psect	idloc
  4412                           
  4413                           ;Config register IDLOC0 @ 0x200000
  4414                           ;	unspecified, using default values
  4415  200000                     	org	2097152
  4416  200000  FF                 	db	255
  4417                           
  4418                           ;Config register IDLOC1 @ 0x200001
  4419                           ;	unspecified, using default values
  4420  200001                     	org	2097153
  4421  200001  FF                 	db	255
  4422                           
  4423                           ;Config register IDLOC2 @ 0x200002
  4424                           ;	unspecified, using default values
  4425  200002                     	org	2097154
  4426  200002  FF                 	db	255
  4427                           
  4428                           ;Config register IDLOC3 @ 0x200003
  4429                           ;	unspecified, using default values
  4430  200003                     	org	2097155
  4431  200003  FF                 	db	255
  4432                           
  4433                           ;Config register IDLOC4 @ 0x200004
  4434                           ;	unspecified, using default values
  4435  200004                     	org	2097156
  4436  200004  FF                 	db	255
  4437                           
  4438                           ;Config register IDLOC5 @ 0x200005
  4439                           ;	unspecified, using default values
  4440  200005                     	org	2097157
  4441  200005  FF                 	db	255
  4442                           
  4443                           ;Config register IDLOC6 @ 0x200006
  4444                           ;	unspecified, using default values
  4445  200006                     	org	2097158
  4446  200006  FF                 	db	255
  4447                           
  4448                           ;Config register IDLOC7 @ 0x200007
  4449                           ;	unspecified, using default values
  4450  200007                     	org	2097159
  4451  200007  FF                 	db	255
  4452                           
  4453                           	psect	config
  4454                           
  4455                           ; Padding undefined space
  4456  300000                     	org	3145728
  4457  300000  FF                 	db	255
  4458                           
  4459                           ;Config register CONFIG1H @ 0x300001
  4460                           ;	Oscillator
  4461                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4462                           ;	Fail-Safe Clock Monitor Enable bit
  4463                           ;	FCMEN = 0x0, unprogrammed default
  4464                           ;	Internal/External Oscillator Switchover bit
  4465                           ;	IESO = 0x0, unprogrammed default
  4466  300001                     	org	3145729
  4467  300001  06                 	db	6
  4468                           
  4469                           ;Config register CONFIG2L @ 0x300002
  4470                           ;	unspecified, using default values
  4471                           ;	Power-up Timer Enable bit
  4472                           ;	PWRT = 0x1, unprogrammed default
  4473                           ;	Brown-out Reset Enable bits
  4474                           ;	BOR = 0x3, unprogrammed default
  4475                           ;	Brown-out Reset Voltage bits
  4476                           ;	BORV = 0x3, unprogrammed default
  4477  300002                     	org	3145730
  4478  300002  1F                 	db	31
  4479                           
  4480                           ;Config register CONFIG2H @ 0x300003
  4481                           ;	Watchdog Timer Enable bit
  4482                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4483                           ;	Watchdog Timer Postscale Select bits
  4484                           ;	WDTPS = 0xF, unprogrammed default
  4485  300003                     	org	3145731
  4486  300003  1E                 	db	30
  4487                           
  4488                           ; Padding undefined space
  4489  300004                     	org	3145732
  4490  300004  FF                 	db	255
  4491                           
  4492                           ;Config register CONFIG3H @ 0x300005
  4493                           ;	CCP2 MUX bit
  4494                           ;	CCP2MX = 0x1, unprogrammed default
  4495                           ;	PORTB A/D Enable bit
  4496                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  4497                           ;	Low-Power Timer1 Oscillator Enable bit
  4498                           ;	LPT1OSC = 0x0, unprogrammed default
  4499                           ;	MCLR Pin Enable bit
  4500                           ;	MCLRE = 0x1, unprogrammed default
  4501  300005                     	org	3145733
  4502  300005  81                 	db	129
  4503                           
  4504                           ;Config register CONFIG4L @ 0x300006
  4505                           ;	Stack Full/Underflow Reset Enable bit
  4506                           ;	STVREN = 0x1, unprogrammed default
  4507                           ;	Single-Supply ICSP Enable bit
  4508                           ;	LVP = OFF, Single-Supply ICSP disabled
  4509                           ;	Boot Block Size Select bits
  4510                           ;	BBSIZ = 0x0, unprogrammed default
  4511                           ;	Extended Instruction Set Enable bit
  4512                           ;	XINST = 0x0, unprogrammed default
  4513                           ;	Background Debugger Enable bit
  4514                           ;	DEBUG = 0x1, unprogrammed default
  4515  300006                     	org	3145734
  4516  300006  81                 	db	129
  4517                           
  4518                           ; Padding undefined space
  4519  300007                     	org	3145735
  4520  300007  FF                 	db	255
  4521                           
  4522                           ;Config register CONFIG5L @ 0x300008
  4523                           ;	unspecified, using default values
  4524                           ;	Code Protection bit
  4525                           ;	CP0 = 0x1, unprogrammed default
  4526                           ;	Code Protection bit
  4527                           ;	CP1 = 0x1, unprogrammed default
  4528  300008                     	org	3145736
  4529  300008  03                 	db	3
  4530                           
  4531                           ;Config register CONFIG5H @ 0x300009
  4532                           ;	unspecified, using default values
  4533                           ;	Boot Block Code Protection bitProtect Boot
  4534                           ;	CPB = 0x1, unprogrammed default
  4535                           ;	Data EEPROM Code Protection bit
  4536                           ;	CPD = 0x1, unprogrammed default
  4537  300009                     	org	3145737
  4538  300009  C0                 	db	192
  4539                           
  4540                           ;Config register CONFIG6L @ 0x30000A
  4541                           ;	unspecified, using default values
  4542                           ;	Write Protection bit
  4543                           ;	WRT0 = 0x1, unprogrammed default
  4544                           ;	Write Protection bit
  4545                           ;	WRT1 = 0x1, unprogrammed default
  4546  30000A                     	org	3145738
  4547  30000A  03                 	db	3
  4548                           
  4549                           ;Config register CONFIG6H @ 0x30000B
  4550                           ;	unspecified, using default values
  4551                           ;	Configuration Register Write Protection bit
  4552                           ;	WRTC = 0x1, unprogrammed default
  4553                           ;	Boot Block Write Protection bit
  4554                           ;	WRTB = 0x1, unprogrammed default
  4555                           ;	Data EEPROM Write Protection bit
  4556                           ;	WRTD = 0x1, unprogrammed default
  4557  30000B                     	org	3145739
  4558  30000B  E0                 	db	224
  4559                           
  4560                           ;Config register CONFIG7L @ 0x30000C
  4561                           ;	unspecified, using default values
  4562                           ;	Table Read Protection bit
  4563                           ;	EBTR0 = 0x1, unprogrammed default
  4564                           ;	Table Read Protection bit
  4565                           ;	EBTR1 = 0x1, unprogrammed default
  4566  30000C                     	org	3145740
  4567  30000C  03                 	db	3
  4568                           
  4569                           ;Config register CONFIG7H @ 0x30000D
  4570                           ;	unspecified, using default values
  4571                           ;	Boot Block Table Read Protection bit
  4572                           ;	EBTRB = 0x1, unprogrammed default
  4573  30000D                     	org	3145741
  4574  30000D  40                 	db	64
  4575                           tosu	equ	0xFFF
  4576                           tosh	equ	0xFFE
  4577                           tosl	equ	0xFFD
  4578                           stkptr	equ	0xFFC
  4579                           pclatu	equ	0xFFB
  4580                           pclath	equ	0xFFA
  4581                           pcl	equ	0xFF9
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           indf0	equ	0xFEF
  4589                           postinc0	equ	0xFEE
  4590                           postdec0	equ	0xFED
  4591                           preinc0	equ	0xFEC
  4592                           plusw0	equ	0xFEB
  4593                           fsr0h	equ	0xFEA
  4594                           fsr0l	equ	0xFE9
  4595                           wreg	equ	0xFE8
  4596                           indf1	equ	0xFE7
  4597                           postinc1	equ	0xFE6
  4598                           postdec1	equ	0xFE5
  4599                           preinc1	equ	0xFE4
  4600                           plusw1	equ	0xFE3
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           bsr	equ	0xFE0
  4604                           indf2	equ	0xFDF
  4605                           postinc2	equ	0xFDE
  4606                           postdec2	equ	0xFDD
  4607                           preinc2	equ	0xFDC
  4608                           plusw2	equ	0xFDB
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      0       0
    BANK1           244      0     184

Pointer List with Targets:

    UsetData@pass	PTR unsigned char  size(1) Largest target is 9
		 -> password(COMRAM[9]), 

    tmpPassword	PTR unsigned char  size(2) Largest target is 9
		 -> password(COMRAM[9]), NULL(NULL[0]), 

    UsetData@user	PTR unsigned char  size(1) Largest target is 9
		 -> username(COMRAM[9]), 

    tmpUsername	PTR unsigned char  size(2) Largest target is 9
		 -> username(COMRAM[9]), NULL(NULL[0]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8146
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    4949
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
                     _UgetNumUsuaris
                           _UsetData
 ---------------------------------------------------------------------------------
 (2) _UsetData                                             2     0      2     196
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UgetNumUsuaris
     _UsetData

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      B8       6       75.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      77       1       94.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F       7        0.0%
DATA                 0      0     12F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 22 13:38:22 2022

            TiResetTics@Handle 0066               _loginNOTRegister 03BA                              _i 0020  
                            _j 0026                            l511 08D4                            l415 027E  
                          l504 0892                            l441 03F8                            l506 0898  
                          l509 08CE                            l438 03CC                            l439 03DE  
                          l496 086C                            l499 087E                            u230 0936  
                          u250 0952                            u308 0986                            u270 096C  
                          u248 0938                            u290 0984                            u268 0954  
                          u288 096E               ??_CantaPartBaixa 0066                            wreg 000FE8  
                  _ultimaTecla 0051                           l2033 0B6A                           l1315 0BD8  
                         l1323 0BE6                           l2131 0B04                           l2123 0AEA  
                         l2211 048E                           l2203 047A                           l2125 0AF4  
                         l2301 05BC                           l2311 05D4                           l1407 0DEE  
                         l2065 0BA8                           l2233 04E8                           l2225 04C0  
                         l2059 0D68                           l2155 07AE                           l2307 05CC  
                         l2331 05E8                           l1515 0C60                           l2261 0542  
                         l2413 0316                           l2255 052C                           l2511 0688  
                         l1519 0C68                           l1383 0DFA                           l2431 034A  
                         l2273 0574                           l2249 0516                           l2521 069E  
                         l2513 068E                           l2505 0678                           l2409 0304  
                         l2361 026C                           l2345 0238                           l2275 0576  
                         l2267 055C                           l2507 067C                           l1715 0910  
                         l2451 038E                           l2363 0272                           l2355 025A  
                         l2339 0226                           l2293 05A2                           l2277 057C  
                         l2533 06C2                           l2429 0344                           l2287 0598  
                         l2543 06DC                           l2527 06AC                           l2447 037C  
                         l2391 02CC                           l2383 02B2                           l2375 0292  
                         l2553 0718                           l2393 02D2                           l2563 072E  
                         l2547 06E8                           l2539 06D0                           l2491 0412  
                         l2573 0746                           l1685 088E                           l2485 0402  
                         l2567 073A                           l2559 0726                           l2487 040A  
                         l2499 0668                           l2595 0C32                           STR_1 020C  
                         STR_2 0201                           STR_3 021B                           STR_4 0214  
                         u1200 0A3E                           u1220 0A56                           u1300 09EE  
                         u1160 0A08                           u1240 09A0                           u1218 0A40  
                         u1410 085C                           u1180 0A24                           u1260 09BC  
                         u1238 0A58                           u1318 09F0                           u1510 04DE  
                         u1280 09D6                           _LATD 000F8C                           u1178 0A0A  
                         u1258 09A2                           u1198 0A26                           u1278 09BE  
                         u1640 05AA                           u1298 09D8                           u1650 05C4  
                         u1570 053C                           u1910 062E                           u1920 0638  
                         u1930 0648                           u1940 0658                           u1926 063A  
                         u1918 0630                           u1936 064A                           u1946 065A  
              ??_SsetNovaTecla 0066                           _Rows 0033                   UsetData@pass 0067  
                         _main 0C0C                           _menu 0224                   UsetData@user 0066  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0078                           prodh 000FF4  
                         prodl 000FF3                __end_of_LcClear 0D60                           start 0032  
              __end_of_CantaIR 0CE0                  LcInit@columns 0071                   ___param_bank 000000  
                  Espera@Timer 0070                          ?_main 0061                          ?_menu 0061  
                        _EEADR 000FA9                  ??_TiInitTimer 0066                          _T0CON 000FD5  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _LcLCD 0CE0  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _SMSon 0E42                    _MNovaLletra 0E32  
                        _Minit 0E3A                          _Sinit 0E2A                          _Timer 002F  
                        _Uinit 0862                          _s_ptr 002E                          _nou_s 03BC  
                  _LcCursorOff 0DFE                 __pbitbssCOMRAM 03B8                          tablat 000FF5  
                  _LcNewString 0E0A                  ??_TiResetTics 0066                          ttemp5 0079  
                        ttemp6 007C                          ttemp7 0080                          status 000FD8  
                        wtemp8 0079  __size_of_UcheckExistsGetError 000C               __end_of_LcGotoXY 0BD2  
             __end_of_LcLliure 0DFE                  ??__TiRSITimer 0061                     _TiGetTimer 0BD2  
      EscriuPrimeraOrdre@ordre 0067                __initialization 0B10                  _indexLastUser 0021  
           __size_of_CantaData 0032                   __end_of_main 0C44                   __end_of_menu 0478  
             __end_of_TeTeclat 0788                         ??_main 0077                         ??_menu 0075  
           __size_of_LcPutChar 0052                  __activetblptr 000002                         ?_LcLCD 0061  
                       ?_SMSon 0061                         ?_Minit 0061                         ?_Sinit 0061  
                       ?_Uinit 0061               __end_of_UsetData 0DE6            __end_of_TiInitTimer 0C7C  
                       _EEDATA 000FA8                      ??_LcClear 0074                      ??_CantaIR 0068  
                       i2l1491 0AB0                         i2l1483 0A82                         i2l1495 0AB4  
                       i2l1487 0A8A                 LcGotoXY@Fisics 006F                 LcGotoXY@Column 0073  
                ??_WaitForBusy 006D             __size_of_TiGetTics 002C                 _sumaPulsacions 002D  
                       _LcInit 0788                 _UgetNumUsuaris 0E48                         _SMotor 0478  
                       _TeInit 0E22                         _Espera 0D60                   _LcGotoXY$342 0071  
                       _RowAct 0031            __end_of_TiResetTics 0DD8                         Uinit@i 0068  
                       Uinit@j 0069               __end_of_high_rsi 0032                         _h_Tics 001D  
          __end_of__TiRSITimer 0ABE                         clear_0 0B36                         clear_1 0B44  
                       isa$std 000001    __size_of_EscriuPrimeraOrdre 007A                     Uinit@j_967 006A  
                 __pdataCOMRAM 0046         __size_of_CantaPartAlta 0068                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
              _currentUsrIndex 0023              __end_of_CantaData 0CAE                   TeTeclat@cols 0029  
                ?_UcheckExists 0061                     __accesstop 0080        __end_of__initialization 0B4A  
       __end_of_UgetNumUsuaris 0E4C              __end_of_LcPutChar 0B10                  ___rparam_used 000001  
                __end_of_LcLCD 0D10                    ?_TiGetTimer 0061                  __end_of_SMSon 0E48  
               __pcstackCOMRAM 0061                  __end_of_Minit 0E42            __end_of_WaitForBusy 0B98  
                __end_of_Sinit 0E32                  __end_of_Uinit 091A              __end_of_TiGetTics 0D3C  
                  _TiInitTimer 0C44                        ??_LcLCD 0075                        ??_SMSon 0066  
                    ?_LcGotoXY 006E                      ?_LcLliure 0061                        ??_Minit 0067  
                      ??_Sinit 0067                        ??_Uinit 0066                 ??_UcheckExists 0066  
                   __pbssBANK1 0100                      ?_TeTeclat 0061                    _TiResetTics 0DC0  
              ?_UgetNumUsuaris 0061                        ?_LcInit 0071                  _CantaPartAlta 09FC  
                      ?_SMotor 0061                        ?_TeInit 0061                        ?_Espera 006D  
                  __TiRSITimer 0A64                      ?_UsetData 0066         __size_of_MsetNovaTecla 0008  
                      LcInit@i 0073                     ??_LcGotoXY 006F                   ?_MNovaLletra 0061  
                   ??_LcLliure 0066            __size_of_TiGetTimer 003A                   ?_LcCursorOff 0061  
                    ?_high_rsi 0061                        _LcClear 0D3C                        _CantaIR 0CAE  
                 ?_LcNewString 0066                     ??_TeTeclat 006D                    _WaitForBusy 0B58  
               ?_CantaPartAlta 0061                        _Columns 0032          __end_of_SsetNovaTecla 0E1A  
              __size_of_LcInit 00DA                        __Hparam 0000                __size_of_SMotor 01AC  
              __size_of_TeInit 0008                __size_of_Espera 0024                        __Lparam 0000  
                   ??_UsetData 0068                   __psmallconst 0200                        __pcinit 0B10  
 __end_of_UcheckExistsGetError 0DF2                     _init_ports 0D84                        __ramtop 0200  
                      __ptext0 0C0C                        __ptext1 0224                        __ptext2 0DD8  
                      __ptext3 0E48                        __ptext4 0DE6                        __ptext5 0E4C  
                      __ptext6 0E42                        __ptext7 0E0A                        __ptext8 0DF2  
                      __ptext9 0D3C                      _T0CONbits 000FD5                      CantaIR@IR 0068  
                      _counter 0027               LcNewString@new_s 0066                WaitForBusy@Busy 006D  
                   ??_high_rsi 0062           end_of_initialization 0B4A                        _usuaris 0100  
      __size_of_CantaPartBaixa 0068                  __Lmediumconst 0000                TiGetTics@Handle 006A  
                _MsetNovaTecla 0E1A                     _novaLletra 004F                TiGetTics@actual 006B  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                     _numUsuaris 0022           __end_of_UcheckExists 0E50  
                TeTeclat@files 0028                  TeTeclat@state 002A                      _PORTCbits 000F82  
                    _PORTDbits 000F83                      _TRISCbits 000F94                      _TRISDbits 000F95  
              ??_CantaPartAlta 0066                 ?_MsetNovaTecla 0061                      _CantaData 0C7C  
                 ??_TiGetTimer 0066                 __end_of_LcInit 0862                 __end_of_SMotor 0624  
                    _LcPutChar 0ABE                 __end_of_TeInit 0E2A                 __end_of_Espera 0D84  
   __end_of_EscriuPrimeraOrdre 0994                  __pidataCOMRAM 0DA4                    ?_init_ports 0061  
                    _ColumnAct 0030                   ?_TiInitTimer 0061            start_initialization 0B10  
                    _TiGetTics 0D10               ??_UgetNumUsuaris 0066               UmotorUsers@state 001F  
            __size_of_LcGotoXY 003A             __end_of_TiGetTimer 0C0C           __size_of_MNovaLletra 0008  
            __size_of_LcLliure 000C                   ?_TiResetTics 0061           __size_of_LcCursorOff 000C  
                   ?_CantaData 0061           _UcheckExistsGetError 0DE6           __size_of_LcNewString 0008  
                     ??_LcInit 0072                      _NovaTecla 0050              __size_of_TeTeclat 0164  
                     ??_SMotor 006D                       ??_TeInit 0067                   ?__TiRSITimer 0061  
                     ??_Espera 006F                     ?_LcPutChar 0061              __size_of_UsetData 000E  
                  __pbssCOMRAM 0001                     ?_TiGetTics 0066                ??_MsetNovaTecla 0066  
                     ?_LcClear 0061                       ?_CantaIR 0061                 _CantaPartBaixa 0994  
        ?_UcheckExistsGetError 0061              __size_of_high_rsi 002A                   ?_WaitForBusy 0061  
          __size_of_init_ports 0020             MsetNovaTecla@tecla 0066             SsetNovaTecla@tecla 0066  
        __size_of_UcheckExists 0004                      __pintcode 0008                CantaPartBaixa@c 0067  
                  __smallconst 0200                 __size_of_LcLCD 0030                 __size_of_SMSon 0006  
               __size_of_Minit 0008                 __size_of_Sinit 0008                 __size_of_Uinit 00B8  
       __end_of_CantaPartBaixa 09FC                   _UcheckExists 0E4C                    ??_CantaData 0068  
                     _LATBbits 000F8A                       _LATCbits 000F8B                       _LATDbits 000F8C  
                    _novaTecla 0053                    ??_LcPutChar 0074                       _RCONbits 000FD0  
                    _timerMenu 0025         __size_of_SsetNovaTecla 0008                       Espera@ms 006D  
                     _LcGotoXY 0B98                       _LcLliure 0DF2                    ??_TiGetTics 0068  
         __size_of_TiInitTimer 0038                   _teclaPremuda 0055                    LcGotoXY@Row 006E  
                    copy_data0 0B24                ?_CantaPartBaixa 0061         ??_UcheckExistsGetError 0066  
             __size_of_LcClear 0024               __size_of_CantaIR 0032                       _TeTeclat 0624  
                   _EECON1bits 000FA6           __size_of_TiResetTics 0018                       __Hrparam 0000  
                    menu@state 0024                       __Lrparam 0000           __size_of__TiRSITimer 005A  
                     _UsetData 0DD8                   ??_init_ports 0066                _do_check_exists 03B9  
                     __ptext10 0D84                       __ptext11 0862             _EscriuPrimeraOrdre 091A  
                     __ptext20 0E3A                       __ptext12 0C44                       __ptext21 0CE0  
                     __ptext13 0624                       __ptext30 0994                       __ptext22 0ABE  
                     __ptext14 0E12                       __ptext31 09FC                       __ptext23 0B98  
                     __ptext15 0E1A                       __ptext32 0D60                       __ptext24 0C7C  
                     __ptext16 0E22                       __ptext33 0DC0                       __ptext25 0788  
                     __ptext17 0E2A                       __ptext34 0D10                       __ptext26 0BD2  
                     __ptext18 0478                       __ptext35 091A                       __ptext27 0DFE  
                     __ptext19 0E32                       __ptext28 0B58                       __ptext37 0A64  
                     __ptext29 0CAE                       __ptext38 0000                 CantaPartAlta@c 0067  
                  _lletraASCII 0054                       _high_rsi 0008                       _s_Timers 0001  
                  _lletraInici 0046            ?_EscriuPrimeraOrdre 0061                  __size_of_main 0038  
                __size_of_menu 0254          __end_of_CantaPartAlta 0A64                  CantaData@Data 0068  
                     _tiTeclat 002B             __end_of_init_ports 0DA4                       _setSMSon 03BB  
                _SsetNovaTecla 0E12           __size_of_WaitForBusy 0040                       _password 0034  
                     _timerSMS 0052                       isa$xinst 000000                       int$flags 0078  
                     _username 003D           ??_EscriuPrimeraOrdre 0066                     LcInit@rows 0072  
                   _INTCONbits 000FF2                  ??_MNovaLletra 0066                  ??_LcCursorOff 006E  
                ??_LcNewString 0067                       intlevel2 0000                     LcPutChar@c 0074  
               ?_SsetNovaTecla 0061              MNovaLletra@lletra 0066                   _return_error 03B8  
                  _tmpPassword 0019            __end_of_MNovaLletra 0E3A          __end_of_MsetNovaTecla 0E22  
                  _tmpUsername 001B            __end_of_LcCursorOff 0E0A                    SMotor@state 002C  
      __size_of_UgetNumUsuaris 0004            __end_of_LcNewString 0E12  
