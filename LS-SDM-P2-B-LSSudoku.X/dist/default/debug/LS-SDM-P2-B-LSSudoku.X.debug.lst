

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 29 19:45:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76  0000                     
    77                           ; Version 2.32
    78                           ; Generated 02/02/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4321 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  001732                     __pidataCOMRAM:
   115                           	callstack 0
   116                           
   117                           ;initializer for _lletraInici
   118  001732  41                 	db	65
   119  001733  44                 	db	68
   120  001734  47                 	db	71
   121  001735  4A                 	db	74
   122  001736  4D                 	db	77
   123  001737  50                 	db	80
   124  001738  54                 	db	84
   125  001739  57                 	db	87
   126  00173A  00                 	db	0
   127                           
   128                           ;initializer for GLCDMotor@max2
   129  00173B  0F                 	db	15
   130                           
   131                           ;initializer for GLCDMotor@max1
   132  00173C  0F                 	db	15
   133                           
   134                           ;initializer for _usuariLoguejat
   135  00173D  FF                 	db	255
   136                           
   137                           ;initializer for _novaDireccio
   138  00173E  FF                 	db	255
   139                           
   140                           ;initializer for _novaLletra
   141  00173F  FF                 	db	255
   142                           
   143                           ;initializer for _NovaTecla
   144  001740  FF                 	db	255
   145                           
   146                           ;initializer for _ultimaTecla
   147  001741  FF                 	db	255
   148                           
   149                           ;initializer for _timerSMS
   150  001742  FF                 	db	255
   151                           
   152                           ;initializer for _novaTecla
   153  001743  FF                 	db	255
   154                           
   155                           ;initializer for _lletraASCII
   156  001744  FF                 	db	255
   157                           
   158                           ;initializer for _teclaPremuda
   159  001745  01                 	db	1
   160  001746  02                 	db	2
   161  001747  03                 	db	3
   162  001748  04                 	db	4
   163  001749  05                 	db	5
   164  00174A  06                 	db	6
   165  00174B  07                 	db	7
   166  00174C  08                 	db	8
   167  00174D  09                 	db	9
   168  00174E  0A                 	db	10
   169  00174F  00                 	db	0
   170  001750  0B                 	db	11
   171                           
   172                           	psect	smallconst
   173  000200                     __psmallconst:
   174                           	callstack 0
   175  000200  00                 	db	0
   176  000201                     _menuList:
   177                           	callstack 0
   178  000201  31                 	db	49
   179  000202  2E                 	db	46
   180  000203  50                 	db	80
   181  000204  6C                 	db	108
   182  000205  61                 	db	97
   183  000206  79                 	db	121
   184  000207  20                 	db	32
   185  000208  61                 	db	97
   186  000209  20                 	db	32
   187  00020A  47                 	db	71
   188  00020B  61                 	db	97
   189  00020C  6D                 	db	109
   190  00020D  65                 	db	101
   191  00020E  00                 	db	0
   192  00020F  00                 	db	0
   193  000210  00                 	db	0
   194  000211  00                 	db	0
   195  000212  00                 	db	0
   196  000213  00                 	db	0
   197  000214  00                 	db	0
   198  000215  00                 	db	0
   199  000216  00                 	db	0
   200  000217  00                 	db	0
   201  000218  00                 	db	0
   202  000219  00                 	db	0
   203  00021A  00                 	db	0
   204  00021B  00                 	db	0
   205  00021C  00                 	db	0
   206  00021D  00                 	db	0
   207  00021E  32                 	db	50
   208  00021F  2E                 	db	46
   209  000220  4D                 	db	77
   210  000221  6F                 	db	111
   211  000222  64                 	db	100
   212  000223  69                 	db	105
   213  000224  66                 	db	102
   214  000225  79                 	db	121
   215  000226  20                 	db	32
   216  000227  54                 	db	84
   217  000228  69                 	db	105
   218  000229  6D                 	db	109
   219  00022A  65                 	db	101
   220  00022B  00                 	db	0
   221  00022C  00                 	db	0
   222  00022D  00                 	db	0
   223  00022E  00                 	db	0
   224  00022F  00                 	db	0
   225  000230  00                 	db	0
   226  000231  00                 	db	0
   227  000232  00                 	db	0
   228  000233  00                 	db	0
   229  000234  00                 	db	0
   230  000235  00                 	db	0
   231  000236  00                 	db	0
   232  000237  00                 	db	0
   233  000238  00                 	db	0
   234  000239  00                 	db	0
   235  00023A  00                 	db	0
   236  00023B  33                 	db	51
   237  00023C  2E                 	db	46
   238  00023D  53                 	db	83
   239  00023E  68                 	db	104
   240  00023F  6F                 	db	111
   241  000240  77                 	db	119
   242  000241  20                 	db	32
   243  000242  47                 	db	71
   244  000243  65                 	db	101
   245  000244  6E                 	db	110
   246  000245  65                 	db	101
   247  000246  72                 	db	114
   248  000247  61                 	db	97
   249  000248  6C                 	db	108
   250  000249  20                 	db	32
   251  00024A  54                 	db	84
   252  00024B  6F                 	db	111
   253  00024C  70                 	db	112
   254  00024D  20                 	db	32
   255  00024E  35                 	db	53
   256  00024F  20                 	db	32
   257  000250  53                 	db	83
   258  000251  63                 	db	99
   259  000252  6F                 	db	111
   260  000253  72                 	db	114
   261  000254  65                 	db	101
   262  000255  73                 	db	115
   263  000256  20                 	db	32
   264  000257  00                 	db	0
   265  000258  34                 	db	52
   266  000259  2E                 	db	46
   267  00025A  4C                 	db	76
   268  00025B  6F                 	db	111
   269  00025C  67                 	db	103
   270  00025D  6F                 	db	111
   271  00025E  75                 	db	117
   272  00025F  74                 	db	116
   273  000260  00                 	db	0
   274  000261  00                 	db	0
   275  000262  00                 	db	0
   276  000263  00                 	db	0
   277  000264  00                 	db	0
   278  000265  00                 	db	0
   279  000266  00                 	db	0
   280  000267  00                 	db	0
   281  000268  00                 	db	0
   282  000269  00                 	db	0
   283  00026A  00                 	db	0
   284  00026B  00                 	db	0
   285  00026C  00                 	db	0
   286  00026D  00                 	db	0
   287  00026E  00                 	db	0
   288  00026F  00                 	db	0
   289  000270  00                 	db	0
   290  000271  00                 	db	0
   291  000272  00                 	db	0
   292  000273  00                 	db	0
   293  000274  00                 	db	0
   294  000275  35                 	db	53
   295  000276  2E                 	db	46
   296  000277  53                 	db	83
   297  000278  68                 	db	104
   298  000279  6F                 	db	111
   299  00027A  77                 	db	119
   300  00027B  20                 	db	32
   301  00027C  41                 	db	65
   302  00027D  6C                 	db	108
   303  00027E  6C                 	db	108
   304  00027F  20                 	db	32
   305  000280  55                 	db	85
   306  000281  73                 	db	115
   307  000282  65                 	db	101
   308  000283  72                 	db	114
   309  000284  73                 	db	115
   310  000285  00                 	db	0
   311  000286  00                 	db	0
   312  000287  00                 	db	0
   313  000288  00                 	db	0
   314  000289  00                 	db	0
   315  00028A  00                 	db	0
   316  00028B  00                 	db	0
   317  00028C  00                 	db	0
   318  00028D  00                 	db	0
   319  00028E  00                 	db	0
   320  00028F  00                 	db	0
   321  000290  00                 	db	0
   322  000291  00                 	db	0
   323  000292                     __end_of_menuList:
   324                           	callstack 0
   325  0000                     _PORTDbits	set	3971
   326  0000                     _LATD	set	3980
   327  0000                     _TRISD	set	3989
   328  0000                     _TRISC	set	3988
   329  0000                     _LATBbits	set	3978
   330  0000                     _TRISB	set	3987
   331  0000                     _TRISA	set	3986
   332  0000                     _PORTCbits	set	3970
   333  0000                     _LATDbits	set	3980
   334  0000                     _LATCbits	set	3979
   335  0000                     _TRISDbits	set	3989
   336  0000                     _TRISCbits	set	3988
   337  0000                     _ADCON0bits	set	4034
   338  0000                     _ADRESH	set	4036
   339  0000                     _ADCON2	set	4032
   340  0000                     _ADCON1	set	4033
   341  0000                     _ADCON0	set	4034
   342  0000                     _EECON2	set	4007
   343  0000                     _EEDATA	set	4008
   344  0000                     _EEADR	set	4009
   345  0000                     _RCONbits	set	4048
   346  0000                     _EECON1bits	set	4006
   347  0000                     _T0CONbits	set	4053
   348  0000                     _TMR0L	set	4054
   349  0000                     _TMR0H	set	4055
   350  0000                     _T0CON	set	4053
   351  0000                     _INTCONbits	set	4082
   352  000292                     STR_2:
   353  000292  32                 	db	50	;'2'
   354  000293  2E                 	db	46
   355  000294  52                 	db	82	;'R'
   356  000295  45                 	db	69	;'E'
   357  000296  47                 	db	71	;'G'
   358  000297  49                 	db	73	;'I'
   359  000298  53                 	db	83	;'S'
   360  000299  54                 	db	84	;'T'
   361  00029A  45                 	db	69	;'E'
   362  00029B  52                 	db	82	;'R'
   363  00029C  00                 	db	0
   364  00029D                     STR_5:
   365  00029D  42                 	db	66	;'B'
   366  00029E  59                 	db	89	;'Y'
   367  00029F  45                 	db	69	;'E'
   368  0002A0  20                 	db	32
   369  0002A1  42                 	db	66	;'B'
   370  0002A2  59                 	db	89	;'Y'
   371  0002A3  45                 	db	69	;'E'
   372  0002A4  20                 	db	32
   373  0002A5  00                 	db	0
   374  0002A6                     STR_1:
   375  0002A6  31                 	db	49	;'1'
   376  0002A7  2E                 	db	46
   377  0002A8  4C                 	db	76	;'L'
   378  0002A9  4F                 	db	79	;'O'
   379  0002AA  47                 	db	71	;'G'
   380  0002AB  49                 	db	73	;'I'
   381  0002AC  4E                 	db	78	;'N'
   382  0002AD  00                 	db	0
   383  0002AE                     STR_4:
   384  0002AE  50                 	db	80	;'P'
   385  0002AF  53                 	db	83	;'S'
   386  0002B0  57                 	db	87	;'W'
   387  0002B1  44                 	db	68	;'D'
   388  0002B2  3A                 	db	58	;':'
   389  0002B3  20                 	db	32
   390  0002B4  00                 	db	0
   391  0002B5                     STR_3:
   392  0002B5  55                 	db	85	;'U'
   393  0002B6  53                 	db	83	;'S'
   394  0002B7  45                 	db	69	;'E'
   395  0002B8  52                 	db	82	;'R'
   396  0002B9  3A                 	db	58	;':'
   397  0002BA  20                 	db	32
   398  0002BB  00                 	db	0
   399  0002BC  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           ; #config settings
   402                           
   403                           	psect	cinit
   404  00140E                     __pcinit:
   405                           	callstack 0
   406  00140E                     start_initialization:
   407                           	callstack 0
   408  00140E                     __initialization:
   409                           	callstack 0
   410                           
   411                           ; Initialize objects allocated to COMRAM (31 bytes)
   412                           ; load TBLPTR registers with __pidataCOMRAM
   413  00140E  0E32               	movlw	low __pidataCOMRAM
   414  001410  6EF6               	movwf	tblptrl,c
   415  001412  0E17               	movlw	high __pidataCOMRAM
   416  001414  6EF7               	movwf	tblptrh,c
   417  001416  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   418  001418  6EF8               	movwf	tblptru,c
   419  00141A  EE00  F03F         	lfsr	0,__pdataCOMRAM
   420  00141E  EE10 F01F          	lfsr	1,31
   421  001422                     copy_data0:
   422  001422  0009               	tblrd		*+
   423  001424  CFF5 FFEE          	movff	tablat,postinc0
   424  001428  50E5               	movf	postdec1,w,c
   425  00142A  50E1               	movf	fsr1l,w,c
   426  00142C  E1FA               	bnz	copy_data0
   427                           
   428                           ; Clear objects allocated to BANK1 (184 bytes)
   429  00142E  EE01  F000         	lfsr	0,__pbssBANK1
   430  001432  0EB8               	movlw	184
   431  001434                     clear_0:
   432  001434  6AEE               	clrf	postinc0,c
   433  001436  06E8               	decf	wreg,f,c
   434  001438  E1FD               	bnz	clear_0
   435                           
   436                           ; Clear objects allocated to BANK0 (24 bytes)
   437  00143A  EE00  F080         	lfsr	0,__pbssBANK0
   438  00143E  0E18               	movlw	24
   439  001440                     clear_1:
   440  001440  6AEE               	clrf	postinc0,c
   441  001442  06E8               	decf	wreg,f,c
   442  001444  E1FD               	bnz	clear_1
   443                           
   444                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   445  001446  6A75               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   446  001448  6A74               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   447                           
   448                           ; Clear objects allocated to COMRAM (62 bytes)
   449  00144A  EE00  F001         	lfsr	0,__pbssCOMRAM
   450  00144E  0E3E               	movlw	62
   451  001450                     clear_2:
   452  001450  6AEE               	clrf	postinc0,c
   453  001452  06E8               	decf	wreg,f,c
   454  001454  E1FD               	bnz	clear_2
   455  001456                     end_of_initialization:
   456                           	callstack 0
   457  001456                     __end_of__initialization:
   458                           	callstack 0
   459  001456  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   460  001458  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   461  00145A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   462  00145C  6EF8               	movwf	tblptru,c
   463  00145E  0100               	movlb	0
   464  001460  EFDB  F009         	goto	_main	;jump to C main() function
   465                           
   466                           	psect	bitbssCOMRAM
   467  0003A0                     __pbitbssCOMRAM:
   468                           	callstack 0
   469  0003A0                     _cap2:
   470                           	callstack 0
   471  0003A0                     	ds	1
   472  0003A1                     _cap1:
   473                           	callstack 0
   474  0003A1                     	ds	1
   475  0003A2                     _newString:
   476                           	callstack 0
   477  0003A2                     	ds	1
   478  0003A3                     _ferMenu:
   479                           	callstack 0
   480  0003A3                     	ds	1
   481  0003A4                     _reproduir:
   482                           	callstack 0
   483  0003A4                     	ds	1
   484  0003A5                     _do_register:
   485                           	callstack 0
   486  0003A5                     	ds	1
   487  0003A6                     _do_check_exists:
   488                           	callstack 0
   489  0003A6                     	ds	1
   490  0003A7                     _loginNOTRegister:
   491                           	callstack 0
   492  0003A7                     	ds	1
   493  0003A8                     _setSMSon:
   494                           	callstack 0
   495  0003A8                     	ds	1
   496  0003A9                     _nou_s:
   497                           	callstack 0
   498  0003A9                     	ds	1
   499                           
   500                           	psect	bssCOMRAM
   501  000001                     __pbssCOMRAM:
   502                           	callstack 0
   503  000001                     _tmpPassword:
   504                           	callstack 0
   505  000001                     	ds	9
   506  00000A                     _h_Tics:
   507                           	callstack 0
   508  00000A                     	ds	2
   509  00000C                     _s_ptr:
   510                           	callstack 0
   511  00000C                     	ds	2
   512  00000E                     JoystickMotor@state:
   513                           	callstack 0
   514  00000E                     	ds	1
   515  00000F                     _ultimaTeclaAD:
   516                           	callstack 0
   517  00000F                     	ds	1
   518  000010                     GLCDMotor@length2:
   519                           	callstack 0
   520  000010                     	ds	1
   521  000011                     GLCDMotor@length1:
   522                           	callstack 0
   523  000011                     	ds	1
   524  000012                     GLCDMotor@k2:
   525                           	callstack 0
   526  000012                     	ds	1
   527  000013                     GLCDMotor@k1:
   528                           	callstack 0
   529  000013                     	ds	1
   530  000014                     GLCDMotor@min2:
   531                           	callstack 0
   532  000014                     	ds	1
   533  000015                     GLCDMotor@min1:
   534                           	callstack 0
   535  000015                     	ds	1
   536  000016                     GLCDMotor@j:
   537                           	callstack 0
   538  000016                     	ds	1
   539  000017                     GLCDMotor@state:
   540                           	callstack 0
   541  000017                     	ds	1
   542  000018                     _menuDaltGLCD:
   543                           	callstack 0
   544  000018                     	ds	1
   545  000019                     _timerGLCD:
   546                           	callstack 0
   547  000019                     	ds	1
   548  00001A                     motorAltaveu@state:
   549                           	callstack 0
   550  00001A                     	ds	1
   551  00001B                     _copsNota:
   552                           	callstack 0
   553  00001B                     	ds	1
   554  00001C                     _timerAltaveu:
   555                           	callstack 0
   556  00001C                     	ds	1
   557  00001D                     _nota:
   558                           	callstack 0
   559  00001D                     	ds	1
   560  00001E                     UmotorUsers@state:
   561                           	callstack 0
   562  00001E                     	ds	1
   563  00001F                     _j:
   564                           	callstack 0
   565  00001F                     	ds	1
   566  000020                     _i:
   567                           	callstack 0
   568  000020                     	ds	1
   569  000021                     _indexNextUserStruct:
   570                           	callstack 0
   571  000021                     	ds	1
   572  000022                     _indexNextUser:
   573                           	callstack 0
   574  000022                     	ds	1
   575  000023                     _numUsuaris:
   576                           	callstack 0
   577  000023                     	ds	1
   578  000024                     _currentUsrIndex:
   579                           	callstack 0
   580  000024                     	ds	1
   581  000025                     menu@state:
   582                           	callstack 0
   583  000025                     	ds	1
   584  000026                     _indexUsuari:
   585                           	callstack 0
   586  000026                     	ds	1
   587  000027                     _menuDalt:
   588                           	callstack 0
   589  000027                     	ds	1
   590  000028                     _timerMenu:
   591                           	callstack 0
   592  000028                     	ds	1
   593  000029                     _tmp:
   594                           	callstack 0
   595  000029                     	ds	1
   596  00002A                     _counter:
   597                           	callstack 0
   598  00002A                     	ds	1
   599  00002B                     TeTeclat@files:
   600                           	callstack 0
   601  00002B                     	ds	1
   602  00002C                     TeTeclat@cols:
   603                           	callstack 0
   604  00002C                     	ds	1
   605  00002D                     TeTeclat@state:
   606                           	callstack 0
   607  00002D                     	ds	1
   608  00002E                     _tiTeclat:
   609                           	callstack 0
   610  00002E                     	ds	1
   611  00002F                     SMotor@state:
   612                           	callstack 0
   613  00002F                     	ds	1
   614  000030                     _sumaPulsacions:
   615                           	callstack 0
   616  000030                     	ds	1
   617  000031                     _Timer:
   618                           	callstack 0
   619  000031                     	ds	1
   620  000032                     _ColumnAct:
   621                           	callstack 0
   622  000032                     	ds	1
   623  000033                     _RowAct:
   624                           	callstack 0
   625  000033                     	ds	1
   626  000034                     _Columns:
   627                           	callstack 0
   628  000034                     	ds	1
   629  000035                     _Rows:
   630                           	callstack 0
   631  000035                     	ds	1
   632  000036                     _tmpUsername:
   633                           	callstack 0
   634  000036                     	ds	9
   635                           
   636                           	psect	dataCOMRAM
   637  00003F                     __pdataCOMRAM:
   638                           	callstack 0
   639  00003F                     _lletraInici:
   640                           	callstack 0
   641  00003F                     	ds	9
   642  000048                     GLCDMotor@max2:
   643                           	callstack 0
   644  000048                     	ds	1
   645  000049                     GLCDMotor@max1:
   646                           	callstack 0
   647  000049                     	ds	1
   648  00004A                     _usuariLoguejat:
   649                           	callstack 0
   650  00004A                     	ds	1
   651  00004B                     _novaDireccio:
   652                           	callstack 0
   653  00004B                     	ds	1
   654  00004C                     _novaLletra:
   655                           	callstack 0
   656  00004C                     	ds	1
   657  00004D                     _NovaTecla:
   658                           	callstack 0
   659  00004D                     	ds	1
   660  00004E                     _ultimaTecla:
   661                           	callstack 0
   662  00004E                     	ds	1
   663  00004F                     _timerSMS:
   664                           	callstack 0
   665  00004F                     	ds	1
   666  000050                     _novaTecla:
   667                           	callstack 0
   668  000050                     	ds	1
   669  000051                     _lletraASCII:
   670                           	callstack 0
   671  000051                     	ds	1
   672  000052                     _teclaPremuda:
   673                           	callstack 0
   674  000052                     	ds	12
   675                           
   676                           	psect	bssBANK0
   677  000080                     __pbssBANK0:
   678                           	callstack 0
   679  000080                     _s_Timers:
   680                           	callstack 0
   681  000080                     	ds	24
   682                           
   683                           	psect	bssBANK1
   684  000100                     __pbssBANK1:
   685                           	callstack 0
   686  000100                     _usuaris:
   687                           	callstack 0
   688  000100                     	ds	184
   689                           
   690                           	psect	cstackCOMRAM
   691  00005E                     __pcstackCOMRAM:
   692                           	callstack 0
   693  00005E                     
   694                           ; 1 bytes @ 0x0
   695  00005E                     	ds	1
   696  00005F                     ??_high_rsi:
   697                           
   698                           ; 1 bytes @ 0x1
   699  00005F                     	ds	4
   700  000063                     ??_EscriuPrimeraOrdre:
   701  000063                     ??_Uinit:
   702  000063                     ??_UcheckExistsGetError:
   703  000063                     ??_CantaPartAlta:
   704  000063                     ??_CantaPartBaixa:
   705  000063                     ?_TiGetTics:
   706                           	callstack 0
   707  000063                     ?_UgetUserName:
   708                           	callstack 0
   709  000063                     SsetNovaTecla@tecla:
   710                           	callstack 0
   711  000063                     TiResetTics@Handle:
   712                           	callstack 0
   713  000063                     MsetNovaTecla@tecla:
   714                           	callstack 0
   715  000063                     MNovaLletra@lletra:
   716                           	callstack 0
   717  000063                     MNouJoystick@posicio:
   718                           	callstack 0
   719  000063                     UenviaChar@pos:
   720                           	callstack 0
   721  000063                     UenviaPas@pos:
   722                           	callstack 0
   723  000063                     escriureCharEEPROM@pos:
   724                           	callstack 0
   725  000063                     compareStrings@a:
   726                           	callstack 0
   727  000063                     escriureEEPROM@caca:
   728                           	callstack 0
   729  000063                     GLCDMostraMenu@num:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x5
   733  000063                     	ds	1
   734  000064                     ??_JoystickMotor:
   735  000064                     CantaPartAlta@c:
   736                           	callstack 0
   737  000064                     CantaPartBaixa@c:
   738                           	callstack 0
   739  000064                     EscriuPrimeraOrdre@ordre:
   740                           	callstack 0
   741  000064                     UenviaChar@c:
   742                           	callstack 0
   743  000064                     UenviaPas@c:
   744                           	callstack 0
   745  000064                     escriureCharEEPROM@c:
   746                           	callstack 0
   747  000064                     compareStrings@b:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751  000064                     	ds	1
   752  000065                     ??_TiGetTics:
   753  000065                     CantaIR@IR:
   754                           	callstack 0
   755  000065                     CantaData@Data:
   756                           	callstack 0
   757  000065                     UgetUserName@quin:
   758                           	callstack 0
   759  000065                     Uinit@i:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x7
   763  000065                     	ds	1
   764  000066                     ??_compareStrings:
   765  000066                     Uinit@j:
   766                           	callstack 0
   767  000066                     LcNewString@new_s:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x8
   771  000066                     	ds	1
   772  000067                     TiGetTics@Handle:
   773                           	callstack 0
   774  000067                     Uinit@j_1067:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x9
   778  000067                     	ds	1
   779  000068                     ??_UmotorUsers:
   780  000068                     TiGetTics@actual:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xA
   784  000068                     	ds	2
   785  00006A                     ??_SMotor:
   786  00006A                     ??_motorAltaveu:
   787  00006A                     ??_TeTeclat:
   788  00006A                     WaitForBusy@Busy:
   789                           	callstack 0
   790  00006A                     Espera@ms:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xC
   794  00006A                     	ds	1
   795  00006B                     LcGotoXY@Row:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0xD
   799  00006B                     	ds	1
   800  00006C                     ??_Espera:
   801  00006C                     LcGotoXY@Fisics:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xE
   805  00006C                     	ds	1
   806  00006D                     Espera@Timer:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0xF
   810  00006D                     	ds	1
   811  00006E                     LcInit@columns:
   812                           	callstack 0
   813  00006E                     _LcGotoXY$342:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x10
   817  00006E                     	ds	1
   818  00006F                     LcInit@rows:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x11
   822  00006F                     	ds	1
   823  000070                     LcGotoXY@Column:
   824                           	callstack 0
   825  000070                     LcInit@i:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x12
   829  000070                     	ds	1
   830  000071                     LcPutChar@c:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x13
   834  000071                     	ds	1
   835  000072                     ??_menu:
   836  000072                     ??_GLCDMotor:
   837  000072                     
   838                           ; 1 bytes @ 0x14
   839  000072                     	ds	2
   840  000074                     
   841                           ; 1 bytes @ 0x16
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 72 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1
   861 ;;      Params:         0       0       0
   862 ;;      Locals:         0       0       0
   863 ;;      Temps:          0       0       0
   864 ;;      Totals:         0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels required when called: 7
   867 ;; This function calls:
   868 ;;		_GLCDInit
   869 ;;		_GLCDMotor
   870 ;;		_JoystickInit
   871 ;;		_JoystickMotor
   872 ;;		_LcInit
   873 ;;		_LcLCD
   874 ;;		_Minit
   875 ;;		_SMotor
   876 ;;		_Sinit
   877 ;;		_TeInit
   878 ;;		_TeTeclat
   879 ;;		_TiInitTimer
   880 ;;		_Uinit
   881 ;;		_UmotorUsers
   882 ;;		_escriureEEPROM
   883 ;;		_initAltaveu
   884 ;;		_init_ports
   885 ;;		_menu
   886 ;;		_motorAltaveu
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  0013B6                     __ptext0:
   894                           	callstack 0
   895  0013B6                     _main:
   896                           	callstack 24
   897                           
   898                           ;main.c: 73:     init_ports();
   899                           
   900                           ;incstack = 0
   901  0013B6  EC89  F00B         	call	_init_ports	;wreg free
   902                           
   903                           ;main.c: 74:     escriureEEPROM();
   904  0013BA  EC26  F00B         	call	_escriureEEPROM	;wreg free
   905                           
   906                           ;main.c: 75:     TiInitTimer();
   907  0013BE  ECD8  F00A         	call	_TiInitTimer	;wreg free
   908                           
   909                           ;main.c: 76:     TeInit();
   910  0013C2  EC06  F00C         	call	_TeInit	;wreg free
   911                           
   912                           ;main.c: 77:     Sinit();
   913  0013C6  EC0A  F00C         	call	_Sinit	;wreg free
   914                           
   915                           ;main.c: 78:     SMotor();
   916  0013CA  ECC9  F004         	call	_SMotor	;wreg free
   917                           
   918                           ;main.c: 79:     Uinit();
   919  0013CE  EC80  F008         	call	_Uinit	;wreg free
   920                           
   921                           ;main.c: 80:     initAltaveu();
   922  0013D2  ECFA  F00B         	call	_initAltaveu	;wreg free
   923                           
   924                           ;main.c: 81:     GLCDInit();
   925  0013D6  EC1A  F00C         	call	_GLCDInit	;wreg free
   926                           
   927                           ;main.c: 82:     JoystickInit();
   928  0013DA  ECBF  F00B         	call	_JoystickInit	;wreg free
   929                           
   930                           ;main.c: 84:     LcInit(2,16);
   931  0013DE  0E10               	movlw	16
   932  0013E0  6E6E               	movwf	LcInit@columns^0,c
   933  0013E2  0E02               	movlw	2
   934  0013E4  ECB8  F007         	call	_LcInit
   935                           
   936                           ;main.c: 85:     Minit();
   937  0013E8  EC12  F00C         	call	_Minit	;wreg free
   938  0013EC                     l4084:
   939                           
   940                           ;main.c: 89:         JoystickMotor();
   941  0013EC  EC42  F007         	call	_JoystickMotor	;wreg free
   942                           
   943                           ;main.c: 90:         menu();
   944  0013F0  EC44  F003         	call	_menu	;wreg free
   945                           
   946                           ;main.c: 91:         motorAltaveu();
   947  0013F4  EC25  F008         	call	_motorAltaveu	;wreg free
   948                           
   949                           ;main.c: 92:         UmotorUsers();
   950  0013F8  ECD5  F005         	call	_UmotorUsers	;wreg free
   951                           
   952                           ;main.c: 93:         GLCDMotor();
   953  0013FC  EC5F  F001         	call	_GLCDMotor	;wreg free
   954                           
   955                           ;main.c: 94:         TeTeclat();
   956  001400  EC90  F006         	call	_TeTeclat	;wreg free
   957                           
   958                           ;main.c: 95:         SMotor();
   959  001404  ECC9  F004         	call	_SMotor	;wreg free
   960                           
   961                           ;main.c: 96:         LcLCD();
   962  001408  EC7F  F009         	call	_LcLCD	;wreg free
   963  00140C  D7EF               	goto	l4084
   964  00140E                     __end_of_main:
   965                           	callstack 0
   966                           
   967 ;; *************** function _motorAltaveu *****************
   968 ;; Defined at:
   969 ;;		line 17 in file "Altaveu.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1
   983 ;;      Params:         0       0       0
   984 ;;      Locals:         0       0       0
   985 ;;      Temps:          3       0       0
   986 ;;      Totals:         3       0       0
   987 ;;Total ram usage:        3 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		_TiGetTics
   992 ;;		_TiResetTics
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text1
   999  00104A                     __ptext1:
  1000                           	callstack 0
  1001  00104A                     _motorAltaveu:
  1002                           	callstack 27
  1003                           
  1004                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  1005                           
  1006                           ;incstack = 0
  1007  00104A  D048               	goto	l3690
  1008  00104C                     l674:
  1009                           
  1010                           ;Altaveu.c: 22:    if (reproduir) {
  1011  00104C  A874               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1012  00104E  0012               	return	
  1013                           
  1014                           ;Altaveu.c: 23:     nota = 1;
  1015  001050  0E01               	movlw	1
  1016  001052  6E1D               	movwf	_nota^0,c
  1017                           
  1018                           ;Altaveu.c: 24:     copsNota = 0;
  1019  001054  0E00               	movlw	0
  1020  001056  6E1B               	movwf	_copsNota^0,c
  1021                           
  1022                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  1023  001058  501C               	movf	_timerAltaveu^0,w,c
  1024  00105A  ECA9  F00B         	call	_TiResetTics
  1025  00105E                     l3654:
  1026                           
  1027                           ;Altaveu.c: 26:     state = 1;
  1028  00105E  0E01               	movlw	1
  1029  001060  6E1A               	movwf	motorAltaveu@state^0,c
  1030  001062  0012               	return	
  1031  001064                     l3656:
  1032                           
  1033                           ;Altaveu.c: 30:    if (nota > 5) {
  1034  001064  0E05               	movlw	5
  1035  001066  641D               	cpfsgt	_nota^0,c
  1036  001068  D004               	goto	l3662
  1037                           
  1038                           ;Altaveu.c: 31:     reproduir = 0;
  1039  00106A  9874               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1040                           
  1041                           ;Altaveu.c: 32:     state = 0;
  1042  00106C  0E00               	movlw	0
  1043  00106E  6E1A               	movwf	motorAltaveu@state^0,c
  1044                           
  1045                           ;Altaveu.c: 33:    }
  1046  001070  0012               	return	
  1047  001072                     l3662:
  1048  001072  0EA8               	movlw	168
  1049  001074  181B               	xorwf	_copsNota^0,w,c
  1050  001076  A4D8               	btfss	status,2,c
  1051  001078  D004               	goto	l3670
  1052                           
  1053                           ;Altaveu.c: 35:     nota++;
  1054  00107A  2A1D               	incf	_nota^0,f,c
  1055                           
  1056                           ;Altaveu.c: 36:     copsNota = 0;
  1057  00107C  0E00               	movlw	0
  1058  00107E  6E1B               	movwf	_copsNota^0,c
  1059  001080  D7EE               	goto	l3654
  1060  001082                     l3670:
  1061  001082  501C               	movf	_timerAltaveu^0,w,c
  1062  001084  EC3D  F00B         	call	_TiGetTics
  1063  001088  501D               	movf	_nota^0,w,c
  1064  00108A  6E6A               	movwf	??_motorAltaveu^0,c
  1065  00108C  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  1066  00108E  5063               	movf	?_TiGetTics^0,w,c
  1067  001090  5C6A               	subwf	??_motorAltaveu^0,w,c
  1068  001092  506B               	movf	(??_motorAltaveu+1)^0,w,c
  1069  001094  0A80               	xorlw	128
  1070  001096  6E6C               	movwf	(??_motorAltaveu+2)^0,c
  1071  001098  5064               	movf	(?_TiGetTics+1)^0,w,c
  1072  00109A  0A80               	xorlw	128
  1073  00109C  586C               	subwfb	(??_motorAltaveu+2)^0,w,c
  1074  00109E  B0D8               	btfsc	status,0,c
  1075  0010A0  0012               	return	
  1076                           
  1077                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1078  0010A2  808A               	bsf	138,0,c	;volatile
  1079                           
  1080                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1081  0010A4  501C               	movf	_timerAltaveu^0,w,c
  1082  0010A6  ECA9  F00B         	call	_TiResetTics
  1083                           
  1084                           ;Altaveu.c: 42:     state = 2;
  1085  0010AA  0E02               	movlw	2
  1086  0010AC  6E1A               	movwf	motorAltaveu@state^0,c
  1087  0010AE  0012               	return	
  1088  0010B0                     l3678:
  1089                           
  1090                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1091  0010B0  501C               	movf	_timerAltaveu^0,w,c
  1092  0010B2  EC3D  F00B         	call	_TiGetTics
  1093  0010B6  501D               	movf	_nota^0,w,c
  1094  0010B8  6E6A               	movwf	??_motorAltaveu^0,c
  1095  0010BA  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  1096  0010BC  5063               	movf	?_TiGetTics^0,w,c
  1097  0010BE  5C6A               	subwf	??_motorAltaveu^0,w,c
  1098  0010C0  506B               	movf	(??_motorAltaveu+1)^0,w,c
  1099  0010C2  0A80               	xorlw	128
  1100  0010C4  6E6C               	movwf	(??_motorAltaveu+2)^0,c
  1101  0010C6  5064               	movf	(?_TiGetTics+1)^0,w,c
  1102  0010C8  0A80               	xorlw	128
  1103  0010CA  586C               	subwfb	(??_motorAltaveu+2)^0,w,c
  1104  0010CC  B0D8               	btfsc	status,0,c
  1105  0010CE  0012               	return	
  1106                           
  1107                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1108  0010D0  908A               	bcf	138,0,c	;volatile
  1109                           
  1110                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1111  0010D2  501C               	movf	_timerAltaveu^0,w,c
  1112  0010D4  ECA9  F00B         	call	_TiResetTics
  1113                           
  1114                           ;Altaveu.c: 49:     copsNota++;
  1115  0010D8  2A1B               	incf	_copsNota^0,f,c
  1116  0010DA  D7C1               	goto	l3654
  1117  0010DC                     l3690:
  1118  0010DC  501A               	movf	motorAltaveu@state^0,w,c
  1119  0010DE  6E6A               	movwf	??_motorAltaveu^0,c
  1120  0010E0  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  1121                           
  1122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 0 to 0
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ;	Chosen strategy is simple_byte
  1129  0010E2  506B               	movf	(??_motorAltaveu+1)^0,w,c
  1130  0010E4  0A00               	xorlw	0	; case 0
  1131  0010E6  A4D8               	btfss	status,2,c
  1132  0010E8  0012               	return	
  1133                           
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 3, Range of values is 0 to 2
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           10     6 (average)
  1139                           ;	Chosen strategy is simple_byte
  1140  0010EA  506A               	movf	??_motorAltaveu^0,w,c
  1141  0010EC  0A00               	xorlw	0	; case 0
  1142  0010EE  B4D8               	btfsc	status,2,c
  1143  0010F0  D7AD               	goto	l674
  1144  0010F2  0A01               	xorlw	1	; case 1
  1145  0010F4  B4D8               	btfsc	status,2,c
  1146  0010F6  D7B6               	goto	l3656
  1147  0010F8  0A03               	xorlw	3	; case 2
  1148  0010FA  A4D8               	btfss	status,2,c
  1149  0010FC  0012               	return	
  1150  0010FE  D7D8               	goto	l3678
  1151  001100                     __end_of_motorAltaveu:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _menu *****************
  1155 ;; Defined at:
  1156 ;;		line 33 in file "Menu.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1
  1170 ;;      Params:         0       0       0
  1171 ;;      Locals:         0       0       0
  1172 ;;      Temps:          2       0       0
  1173 ;;      Totals:         2       0       0
  1174 ;;Total ram usage:        2 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 6
  1177 ;; This function calls:
  1178 ;;		_GLCDMostraMenu
  1179 ;;		_LcClear
  1180 ;;		_LcGotoXY
  1181 ;;		_LcLliure
  1182 ;;		_LcNewString
  1183 ;;		_LcPutChar
  1184 ;;		_NoFerMenu
  1185 ;;		_SMSoff
  1186 ;;		_SMSon
  1187 ;;		_SiFerMenu
  1188 ;;		_TiGetTics
  1189 ;;		_TiResetTics
  1190 ;;		_URegister
  1191 ;;		_UcheckExists
  1192 ;;		_UcheckExistsGetError
  1193 ;;		_UcheckExistsNotFinished
  1194 ;;		_UenviaChar
  1195 ;;		_UenviaPas
  1196 ;;		_UgetNumUsuaris
  1197 ;;		_UgetUserName
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text2
  1204  000688                     __ptext2:
  1205                           	callstack 0
  1206  000688                     _menu:
  1207                           	callstack 24
  1208                           
  1209                           ;Menu.c: 34:  static char state = 0;;Menu.c: 36:  switch(state) {
  1210                           
  1211                           ;incstack = 0
  1212  000688  D14B               	goto	l3642
  1213  00068A                     l3422:
  1214                           
  1215                           ;Menu.c: 38:    LcClear();
  1216  00068A  EC65  F00B         	call	_LcClear	;wreg free
  1217                           
  1218                           ;Menu.c: 39:    LcNewString("1.LOGIN");
  1219  00068E  0EA6               	movlw	low STR_1
  1220  000690  6E66               	movwf	LcNewString@new_s^0,c
  1221  000692  5066               	movf	LcNewString@new_s^0,w,c
  1222  000694  A4D8               	btfss	status,2,c
  1223  000696  0E02               	movlw	high __smallconst
  1224  000698  6E67               	movwf	(LcNewString@new_s+1)^0,c
  1225  00069A  ECEA  F00B         	call	_LcNewString	;wreg free
  1226                           
  1227                           ;Menu.c: 40:    state = 1;
  1228  00069E  0E01               	movlw	1
  1229  0006A0  6E25               	movwf	menu@state^0,c
  1230                           
  1231                           ;Menu.c: 41:   break;
  1232  0006A2  0012               	return	
  1233  0006A4                     l3428:
  1234                           
  1235                           ;Menu.c: 43:    if (LcLliure()) {
  1236  0006A4  ECF0  F00B         	call	_LcLliure	;wreg free
  1237  0006A8  A0D8               	btfss	status,0,c
  1238  0006AA  0012               	return	
  1239                           
  1240                           ;Menu.c: 44:     LcGotoXY(0,1);
  1241  0006AC  0E01               	movlw	1
  1242  0006AE  6E6B               	movwf	LcGotoXY@Row^0,c
  1243  0006B0  0E00               	movlw	0
  1244  0006B2  EC9E  F00A         	call	_LcGotoXY
  1245                           
  1246                           ;Menu.c: 45:     LcNewString("2.REGISTER");
  1247  0006B6  0E92               	movlw	low STR_2
  1248  0006B8  6E66               	movwf	LcNewString@new_s^0,c
  1249  0006BA  5066               	movf	LcNewString@new_s^0,w,c
  1250  0006BC  A4D8               	btfss	status,2,c
  1251  0006BE  0E02               	movlw	high __smallconst
  1252  0006C0  6E67               	movwf	(LcNewString@new_s+1)^0,c
  1253  0006C2  ECEA  F00B         	call	_LcNewString	;wreg free
  1254                           
  1255                           ;Menu.c: 46:     NovaTecla = -1;
  1256  0006C6  684D               	setf	_NovaTecla^0,c
  1257                           
  1258                           ;Menu.c: 47:     state = 2;
  1259  0006C8  0E02               	movlw	2
  1260  0006CA  6E25               	movwf	menu@state^0,c
  1261  0006CC  0012               	return	
  1262  0006CE                     l3438:
  1263                           
  1264                           ;Menu.c: 51:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1265  0006CE  044D               	decf	_NovaTecla^0,w,c
  1266  0006D0  A4D8               	btfss	status,2,c
  1267  0006D2  D009               	goto	l3446
  1268  0006D4  EC24  F00C         	call	_UgetNumUsuaris	;wreg free
  1269  0006D8  0900               	iorlw	0
  1270  0006DA  B4D8               	btfsc	status,2,c
  1271  0006DC  D004               	goto	l3446
  1272                           
  1273                           ;Menu.c: 52:     loginNOTRegister = 1;
  1274  0006DE  8E74               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1275  0006E0                     l3444:
  1276                           
  1277                           ;Menu.c: 53:     state = 3;
  1278  0006E0  0E03               	movlw	3
  1279  0006E2  6E25               	movwf	menu@state^0,c
  1280                           
  1281                           ;Menu.c: 54:    }
  1282  0006E4  0012               	return	
  1283  0006E6                     l3446:
  1284  0006E6  0E02               	movlw	2
  1285  0006E8  184D               	xorwf	_NovaTecla^0,w,c
  1286  0006EA  A4D8               	btfss	status,2,c
  1287  0006EC  0012               	return	
  1288                           
  1289                           ;Menu.c: 56:     loginNOTRegister = 0;
  1290  0006EE  9E74               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1291  0006F0  D7F7               	goto	l3444
  1292  0006F2                     l460:
  1293                           
  1294                           ;Menu.c: 61:    NovaTecla = -1;
  1295  0006F2  684D               	setf	_NovaTecla^0,c
  1296                           
  1297                           ;Menu.c: 62:    novaLletra = -1;
  1298  0006F4  684C               	setf	_novaLletra^0,c
  1299                           
  1300                           ;Menu.c: 63:    LcClear();
  1301  0006F6  EC65  F00B         	call	_LcClear	;wreg free
  1302                           
  1303                           ;Menu.c: 64:    LcNewString("USER: ");
  1304  0006FA  0EB5               	movlw	low STR_3
  1305  0006FC  6E66               	movwf	LcNewString@new_s^0,c
  1306  0006FE  5066               	movf	LcNewString@new_s^0,w,c
  1307  000700  A4D8               	btfss	status,2,c
  1308  000702  0E02               	movlw	high __smallconst
  1309  000704  6E67               	movwf	(LcNewString@new_s+1)^0,c
  1310  000706  ECEA  F00B         	call	_LcNewString	;wreg free
  1311                           
  1312                           ;Menu.c: 65:    state = 4;
  1313  00070A  0E04               	movlw	4
  1314  00070C  6E25               	movwf	menu@state^0,c
  1315                           
  1316                           ;Menu.c: 66:   break;
  1317  00070E  0012               	return	
  1318  000710                     l3458:
  1319                           
  1320                           ;Menu.c: 68:    if (LcLliure()) {
  1321  000710  ECF0  F00B         	call	_LcLliure	;wreg free
  1322  000714  A0D8               	btfss	status,0,c
  1323  000716  0012               	return	
  1324                           
  1325                           ;Menu.c: 69:     LcGotoXY(0,1);
  1326  000718  0E01               	movlw	1
  1327  00071A  6E6B               	movwf	LcGotoXY@Row^0,c
  1328  00071C  0E00               	movlw	0
  1329  00071E  EC9E  F00A         	call	_LcGotoXY
  1330                           
  1331                           ;Menu.c: 70:     LcNewString("PSWD: ");
  1332  000722  0EAE               	movlw	low STR_4
  1333  000724  6E66               	movwf	LcNewString@new_s^0,c
  1334  000726  5066               	movf	LcNewString@new_s^0,w,c
  1335  000728  A4D8               	btfss	status,2,c
  1336  00072A  0E02               	movlw	high __smallconst
  1337  00072C  6E67               	movwf	(LcNewString@new_s+1)^0,c
  1338  00072E  ECEA  F00B         	call	_LcNewString	;wreg free
  1339                           
  1340                           ;Menu.c: 71:     state = 5;
  1341  000732  0E05               	movlw	5
  1342  000734  6E25               	movwf	menu@state^0,c
  1343  000736  0012               	return	
  1344  000738                     l3466:
  1345                           
  1346                           ;Menu.c: 75:    if (LcLliure()) {
  1347  000738  ECF0  F00B         	call	_LcLliure	;wreg free
  1348  00073C  A0D8               	btfss	status,0,c
  1349  00073E  0012               	return	
  1350                           
  1351                           ;Menu.c: 76:     LcGotoXY(6,0);
  1352  000740  0E00               	movlw	0
  1353  000742  6E6B               	movwf	LcGotoXY@Row^0,c
  1354  000744  0E06               	movlw	6
  1355  000746  EC9E  F00A         	call	_LcGotoXY
  1356                           
  1357                           ;Menu.c: 77:     SMSon();
  1358  00074A  EC1E  F00C         	call	_SMSon	;wreg free
  1359                           
  1360                           ;Menu.c: 78:     tmp =0;
  1361  00074E  0E00               	movlw	0
  1362  000750  6E29               	movwf	_tmp^0,c
  1363  000752                     l3474:
  1364                           
  1365                           ;Menu.c: 79:     state = 6;
  1366  000752  0E06               	movlw	6
  1367  000754  6E25               	movwf	menu@state^0,c
  1368  000756  0012               	return	
  1369  000758                     l3476:
  1370                           
  1371                           ;Menu.c: 83:    if (novaLletra > 47 && NovaTecla != 10) {
  1372  000758  504C               	movf	_novaLletra^0,w,c
  1373  00075A  0A80               	xorlw	128
  1374  00075C  0F50               	addlw	-176
  1375  00075E  A0D8               	btfss	status,0,c
  1376  000760  D00F               	goto	l3486
  1377  000762  0E0A               	movlw	10
  1378  000764  184D               	xorwf	_NovaTecla^0,w,c
  1379  000766  B4D8               	btfsc	status,2,c
  1380  000768  D00B               	goto	l3486
  1381                           
  1382                           ;Menu.c: 84:     LcPutChar(novaLletra);
  1383  00076A  504C               	movf	_novaLletra^0,w,c
  1384  00076C  EC32  F00A         	call	_LcPutChar
  1385                           
  1386                           ;Menu.c: 85:     UenviaChar(novaLletra,tmp);
  1387  000770  C029  F063         	movff	_tmp,UenviaChar@pos
  1388  000774  504C               	movf	_novaLletra^0,w,c
  1389  000776  ECD0  F00B         	call	_UenviaChar
  1390  00077A                     l3484:
  1391                           
  1392                           ;Menu.c: 86:     state = 7;
  1393  00077A  0E07               	movlw	7
  1394  00077C  6E25               	movwf	menu@state^0,c
  1395                           
  1396                           ;Menu.c: 87:    }
  1397  00077E  0012               	return	
  1398  000780                     l3486:
  1399  000780  0E0B               	movlw	11
  1400  000782  184D               	xorwf	_NovaTecla^0,w,c
  1401  000784  A4D8               	btfss	status,2,c
  1402  000786  0012               	return	
  1403  000788  D7F8               	goto	l3484
  1404  00078A                     l3490:
  1405                           
  1406                           ;Menu.c: 93:    if (tmp != 7 && NovaTecla != 11) {
  1407  00078A  0E07               	movlw	7
  1408  00078C  1829               	xorwf	_tmp^0,w,c
  1409  00078E  B4D8               	btfsc	status,2,c
  1410  000790  D008               	goto	l3502
  1411  000792  0E0B               	movlw	11
  1412  000794  184D               	xorwf	_NovaTecla^0,w,c
  1413  000796  B4D8               	btfsc	status,2,c
  1414  000798  D004               	goto	l3502
  1415                           
  1416                           ;Menu.c: 94:     tmp++;
  1417  00079A  2A29               	incf	_tmp^0,f,c
  1418                           
  1419                           ;Menu.c: 95:     NovaTecla = -1;
  1420  00079C  684D               	setf	_NovaTecla^0,c
  1421                           
  1422                           ;Menu.c: 96:     novaLletra = -1;
  1423  00079E  684C               	setf	_novaLletra^0,c
  1424  0007A0  D7D8               	goto	l3474
  1425  0007A2                     l3502:
  1426  0007A2  0E07               	movlw	7
  1427  0007A4  1829               	xorwf	_tmp^0,w,c
  1428  0007A6  B4D8               	btfsc	status,2,c
  1429  0007A8  D004               	goto	u3090
  1430  0007AA  0E0B               	movlw	11
  1431  0007AC  184D               	xorwf	_NovaTecla^0,w,c
  1432  0007AE  A4D8               	btfss	status,2,c
  1433  0007B0  0012               	return	
  1434  0007B2                     u3090:
  1435                           
  1436                           ;Menu.c: 100:     LcGotoXY(6,1);
  1437  0007B2  0E01               	movlw	1
  1438  0007B4  6E6B               	movwf	LcGotoXY@Row^0,c
  1439  0007B6  0E06               	movlw	6
  1440  0007B8  EC9E  F00A         	call	_LcGotoXY
  1441                           
  1442                           ;Menu.c: 101:     UenviaChar('\0',tmp);
  1443  0007BC  C029  F063         	movff	_tmp,UenviaChar@pos
  1444  0007C0  0E00               	movlw	0
  1445  0007C2  ECD0  F00B         	call	_UenviaChar
  1446                           
  1447                           ;Menu.c: 102:     NovaTecla = -1;
  1448  0007C6  684D               	setf	_NovaTecla^0,c
  1449                           
  1450                           ;Menu.c: 103:     novaLletra = -1;
  1451  0007C8  684C               	setf	_novaLletra^0,c
  1452                           
  1453                           ;Menu.c: 104:     tmp = 0;
  1454  0007CA  0E00               	movlw	0
  1455  0007CC  6E29               	movwf	_tmp^0,c
  1456  0007CE                     l3516:
  1457                           
  1458                           ;Menu.c: 105:     state = 8;
  1459  0007CE  0E08               	movlw	8
  1460  0007D0  6E25               	movwf	menu@state^0,c
  1461  0007D2  0012               	return	
  1462  0007D4                     l3518:
  1463                           
  1464                           ;Menu.c: 109:    if (novaLletra > 47 && NovaTecla != 10) {
  1465  0007D4  504C               	movf	_novaLletra^0,w,c
  1466  0007D6  0A80               	xorlw	128
  1467  0007D8  0F50               	addlw	-176
  1468  0007DA  A0D8               	btfss	status,0,c
  1469  0007DC  D00F               	goto	l3528
  1470  0007DE  0E0A               	movlw	10
  1471  0007E0  184D               	xorwf	_NovaTecla^0,w,c
  1472  0007E2  B4D8               	btfsc	status,2,c
  1473  0007E4  D00B               	goto	l3528
  1474                           
  1475                           ;Menu.c: 110:     LcPutChar(novaLletra);
  1476  0007E6  504C               	movf	_novaLletra^0,w,c
  1477  0007E8  EC32  F00A         	call	_LcPutChar
  1478                           
  1479                           ;Menu.c: 111:     UenviaPas(novaLletra,tmp);
  1480  0007EC  C029  F063         	movff	_tmp,UenviaPas@pos
  1481  0007F0  504C               	movf	_novaLletra^0,w,c
  1482  0007F2  ECC8  F00B         	call	_UenviaPas
  1483  0007F6                     l3526:
  1484                           
  1485                           ;Menu.c: 112:     state = 9;
  1486  0007F6  0E09               	movlw	9
  1487  0007F8  6E25               	movwf	menu@state^0,c
  1488                           
  1489                           ;Menu.c: 113:    }
  1490  0007FA  0012               	return	
  1491  0007FC                     l3528:
  1492  0007FC  0E0B               	movlw	11
  1493  0007FE  184D               	xorwf	_NovaTecla^0,w,c
  1494  000800  A4D8               	btfss	status,2,c
  1495  000802  0012               	return	
  1496  000804  D7F8               	goto	l3526
  1497  000806                     l3532:
  1498                           
  1499                           ;Menu.c: 119:    if (tmp != 7 && NovaTecla != 11) {
  1500  000806  0E07               	movlw	7
  1501  000808  1829               	xorwf	_tmp^0,w,c
  1502  00080A  B4D8               	btfsc	status,2,c
  1503  00080C  D008               	goto	l3544
  1504  00080E  0E0B               	movlw	11
  1505  000810  184D               	xorwf	_NovaTecla^0,w,c
  1506  000812  B4D8               	btfsc	status,2,c
  1507  000814  D004               	goto	l3544
  1508                           
  1509                           ;Menu.c: 120:     tmp++;
  1510  000816  2A29               	incf	_tmp^0,f,c
  1511                           
  1512                           ;Menu.c: 121:     NovaTecla = -1;
  1513  000818  684D               	setf	_NovaTecla^0,c
  1514                           
  1515                           ;Menu.c: 122:     novaLletra = -1;
  1516  00081A  684C               	setf	_novaLletra^0,c
  1517  00081C  D7D8               	goto	l3516
  1518  00081E                     l3544:
  1519  00081E  0E07               	movlw	7
  1520  000820  1829               	xorwf	_tmp^0,w,c
  1521  000822  B4D8               	btfsc	status,2,c
  1522  000824  D004               	goto	u3160
  1523  000826  0E0B               	movlw	11
  1524  000828  184D               	xorwf	_NovaTecla^0,w,c
  1525  00082A  A4D8               	btfss	status,2,c
  1526  00082C  0012               	return	
  1527  00082E                     u3160:
  1528                           
  1529                           ;Menu.c: 126:     UenviaPas('\0',tmp);
  1530  00082E  C029  F063         	movff	_tmp,UenviaPas@pos
  1531  000832  0E00               	movlw	0
  1532  000834  ECC8  F00B         	call	_UenviaPas
  1533                           
  1534                           ;Menu.c: 127:     NovaTecla = -1;
  1535  000838  684D               	setf	_NovaTecla^0,c
  1536                           
  1537                           ;Menu.c: 128:     novaLletra = -1;
  1538  00083A  684C               	setf	_novaLletra^0,c
  1539                           
  1540                           ;Menu.c: 129:     tmp = 0;
  1541  00083C  0E00               	movlw	0
  1542  00083E  6E29               	movwf	_tmp^0,c
  1543                           
  1544                           ;Menu.c: 130:     UcheckExists();
  1545  000840  EC26  F00C         	call	_UcheckExists	;wreg free
  1546                           
  1547                           ;Menu.c: 131:     SMSoff();
  1548  000844  EC21  F00C         	call	_SMSoff	;wreg free
  1549                           
  1550                           ;Menu.c: 132:     state = 10;
  1551  000848  0E0A               	movlw	10
  1552  00084A  6E25               	movwf	menu@state^0,c
  1553  00084C  0012               	return	
  1554  00084E                     l3562:
  1555                           
  1556                           ;Menu.c: 136:    if (!UcheckExistsNotFinished()) {
  1557  00084E  ECD8  F00B         	call	_UcheckExistsNotFinished	;wreg free
  1558  000852  B0D8               	btfsc	status,0,c
  1559  000854  0012               	return	
  1560                           
  1561                           ;Menu.c: 137:     indexUsuari = UcheckExistsGetError();
  1562  000856  ECF6  F00B         	call	_UcheckExistsGetError	;wreg free
  1563  00085A  A0D8               	btfss	status,0,c
  1564  00085C  D002               	goto	u3180
  1565  00085E  0E01               	movlw	1
  1566  000860  D001               	goto	u3190
  1567  000862                     u3180:
  1568  000862  0E00               	movlw	0
  1569  000864                     u3190:
  1570  000864  6E26               	movwf	_indexUsuari^0,c
  1571                           
  1572                           ;Menu.c: 138:     state = 11;
  1573  000866  0E0B               	movlw	11
  1574  000868  6E25               	movwf	menu@state^0,c
  1575  00086A  0012               	return	
  1576  00086C                     l3568:
  1577                           
  1578                           ;Menu.c: 143:     state = 12;
  1579  00086C  0E0C               	movlw	12
  1580  00086E  6E25               	movwf	menu@state^0,c
  1581                           
  1582                           ;Menu.c: 144:    }
  1583  000870  0012               	return	
  1584  000872                     l3586:
  1585                           
  1586                           ;Menu.c: 154:     state = 0;
  1587  000872  0E00               	movlw	0
  1588  000874  6E25               	movwf	menu@state^0,c
  1589  000876  0012               	return	
  1590  000878                     l3588:
  1591                           
  1592                           ;Menu.c: 159:    LcClear();
  1593  000878  EC65  F00B         	call	_LcClear	;wreg free
  1594                           
  1595                           ;Menu.c: 160:    SiFerMenu();
  1596  00087C  EC2A  F00C         	call	_SiFerMenu	;wreg free
  1597                           
  1598                           ;Menu.c: 161:    GLCDMostraMenu(menuDalt);
  1599  000880  5027               	movf	_menuDalt^0,w,c
  1600  000882  ECDE  F00B         	call	_GLCDMostraMenu
  1601                           
  1602                           ;Menu.c: 162:    novaDireccio = -1;
  1603  000886  684B               	setf	_novaDireccio^0,c
  1604                           
  1605                           ;Menu.c: 163:             NovaTecla = -1;
  1606  000888  684D               	setf	_NovaTecla^0,c
  1607                           
  1608                           ;Menu.c: 164:    state = 13;
  1609  00088A  0E0D               	movlw	13
  1610  00088C  6E25               	movwf	menu@state^0,c
  1611                           
  1612                           ;Menu.c: 165:   break;
  1613  00088E  0012               	return	
  1614  000890                     l3600:
  1615                           
  1616                           ;Menu.c: 167:    if (novaDireccio == 8) {
  1617  000890  0E08               	movlw	8
  1618  000892  184B               	xorwf	_novaDireccio^0,w,c
  1619  000894  A4D8               	btfss	status,2,c
  1620  000896  D005               	goto	l3608
  1621                           
  1622                           ;Menu.c: 168:     if(menuDalt < 4) menuDalt++;
  1623  000898  0E04               	movlw	4
  1624  00089A  6027               	cpfslt	_menuDalt^0,c
  1625  00089C  D7E7               	goto	l3568
  1626  00089E  2A27               	incf	_menuDalt^0,f,c
  1627  0008A0  D7E5               	goto	l3568
  1628  0008A2                     l3608:
  1629  0008A2  0E02               	movlw	2
  1630  0008A4  184B               	xorwf	_novaDireccio^0,w,c
  1631  0008A6  A4D8               	btfss	status,2,c
  1632  0008A8  D005               	goto	l3616
  1633                           
  1634                           ;Menu.c: 172:     if(menuDalt > 0) menuDalt--;
  1635  0008AA  5027               	movf	_menuDalt^0,w,c
  1636  0008AC  B4D8               	btfsc	status,2,c
  1637  0008AE  D7DE               	goto	l3568
  1638  0008B0  0627               	decf	_menuDalt^0,f,c
  1639  0008B2  D7DC               	goto	l3568
  1640  0008B4                     l3616:
  1641  0008B4  0E0B               	movlw	11
  1642  0008B6  184D               	xorwf	_NovaTecla^0,w,c
  1643  0008B8  A4D8               	btfss	status,2,c
  1644  0008BA  0012               	return	
  1645  0008BC  0E03               	movlw	3
  1646  0008BE  1827               	xorwf	_menuDalt^0,w,c
  1647  0008C0  A4D8               	btfss	status,2,c
  1648  0008C2  0012               	return	
  1649                           
  1650                           ;Menu.c: 176:     NoFerMenu();
  1651  0008C4  EC2C  F00C         	call	_NoFerMenu	;wreg free
  1652                           
  1653                           ;Menu.c: 177:     LcClear();
  1654  0008C8  EC65  F00B         	call	_LcClear	;wreg free
  1655                           
  1656                           ;Menu.c: 178:     LcNewString("BYE BYE ");
  1657  0008CC  0E9D               	movlw	low STR_5
  1658  0008CE  6E66               	movwf	LcNewString@new_s^0,c
  1659  0008D0  5066               	movf	LcNewString@new_s^0,w,c
  1660  0008D2  A4D8               	btfss	status,2,c
  1661  0008D4  0E02               	movlw	high __smallconst
  1662  0008D6  6E67               	movwf	(LcNewString@new_s+1)^0,c
  1663  0008D8  ECEA  F00B         	call	_LcNewString	;wreg free
  1664                           
  1665                           ;Menu.c: 179:     state = 14;
  1666  0008DC  0E0E               	movlw	14
  1667  0008DE  6E25               	movwf	menu@state^0,c
  1668  0008E0  0012               	return	
  1669  0008E2                     l3628:
  1670                           
  1671                           ;Menu.c: 183:    if (LcLliure()) {
  1672  0008E2  ECF0  F00B         	call	_LcLliure	;wreg free
  1673  0008E6  A0D8               	btfss	status,0,c
  1674  0008E8  0012               	return	
  1675                           
  1676                           ;Menu.c: 184:     LcNewString(UgetUserName(indexUsuari));
  1677  0008EA  5026               	movf	_indexUsuari^0,w,c
  1678  0008EC  ECB5  F00B         	call	_UgetUserName
  1679  0008F0  C063  F066         	movff	?_UgetUserName,LcNewString@new_s
  1680  0008F4  C064  F067         	movff	?_UgetUserName+1,LcNewString@new_s+1
  1681  0008F8  ECEA  F00B         	call	_LcNewString	;wreg free
  1682                           
  1683                           ;Menu.c: 185:     TiResetTics(timerMenu);
  1684  0008FC  5028               	movf	_timerMenu^0,w,c
  1685  0008FE  ECA9  F00B         	call	_TiResetTics
  1686                           
  1687                           ;Menu.c: 186:     state = 15;
  1688  000902  0E0F               	movlw	15
  1689  000904  6E25               	movwf	menu@state^0,c
  1690  000906  0012               	return	
  1691  000908                     l3636:
  1692                           
  1693                           ;Menu.c: 190:    if (TiGetTics(timerMenu) > 2410) {
  1694  000908  5028               	movf	_timerMenu^0,w,c
  1695  00090A  EC3D  F00B         	call	_TiGetTics
  1696  00090E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1697  000910  0012               	return	
  1698  000912  0E6B               	movlw	107
  1699  000914  5C63               	subwf	?_TiGetTics^0,w,c
  1700  000916  0E09               	movlw	9
  1701  000918  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1702  00091A  A0D8               	btfss	status,0,c
  1703  00091C  0012               	return	
  1704  00091E  D7A9               	goto	l3586
  1705  000920                     l3642:
  1706  000920  5025               	movf	menu@state^0,w,c
  1707  000922  6E72               	movwf	??_menu^0,c
  1708  000924  6A73               	clrf	(??_menu+1)^0,c
  1709                           
  1710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 1, Range of values is 0 to 0
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ;	Chosen strategy is simple_byte
  1717  000926  5073               	movf	(??_menu+1)^0,w,c
  1718  000928  0A00               	xorlw	0	; case 0
  1719  00092A  A4D8               	btfss	status,2,c
  1720  00092C  0012               	return	
  1721                           
  1722                           ; Switch size 1, requested type "simple"
  1723                           ; Number of cases is 16, Range of values is 0 to 15
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           49    25 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  00092E  5072               	movf	??_menu^0,w,c
  1729  000930  0A00               	xorlw	0	; case 0
  1730  000932  B4D8               	btfsc	status,2,c
  1731  000934  D6AA               	goto	l3422
  1732  000936  0A01               	xorlw	1	; case 1
  1733  000938  B4D8               	btfsc	status,2,c
  1734  00093A  D6B4               	goto	l3428
  1735  00093C  0A03               	xorlw	3	; case 2
  1736  00093E  B4D8               	btfsc	status,2,c
  1737  000940  D6C6               	goto	l3438
  1738  000942  0A01               	xorlw	1	; case 3
  1739  000944  B4D8               	btfsc	status,2,c
  1740  000946  D6D5               	goto	l460
  1741  000948  0A07               	xorlw	7	; case 4
  1742  00094A  B4D8               	btfsc	status,2,c
  1743  00094C  D6E1               	goto	l3458
  1744  00094E  0A01               	xorlw	1	; case 5
  1745  000950  B4D8               	btfsc	status,2,c
  1746  000952  D6F2               	goto	l3466
  1747  000954  0A03               	xorlw	3	; case 6
  1748  000956  B4D8               	btfsc	status,2,c
  1749  000958  D6FF               	goto	l3476
  1750  00095A  0A01               	xorlw	1	; case 7
  1751  00095C  B4D8               	btfsc	status,2,c
  1752  00095E  D715               	goto	l3490
  1753  000960  0A0F               	xorlw	15	; case 8
  1754  000962  B4D8               	btfsc	status,2,c
  1755  000964  D737               	goto	l3518
  1756  000966  0A01               	xorlw	1	; case 9
  1757  000968  B4D8               	btfsc	status,2,c
  1758  00096A  D74D               	goto	l3532
  1759  00096C  0A03               	xorlw	3	; case 10
  1760  00096E  B4D8               	btfsc	status,2,c
  1761  000970  D76E               	goto	l3562
  1762  000972  0A01               	xorlw	1	; case 11
  1763  000974  B4D8               	btfsc	status,2,c
  1764  000976  D77A               	goto	l3568
  1765  000978  0A07               	xorlw	7	; case 12
  1766  00097A  B4D8               	btfsc	status,2,c
  1767  00097C  D77D               	goto	l3588
  1768  00097E  0A01               	xorlw	1	; case 13
  1769  000980  B4D8               	btfsc	status,2,c
  1770  000982  D786               	goto	l3600
  1771  000984  0A03               	xorlw	3	; case 14
  1772  000986  B4D8               	btfsc	status,2,c
  1773  000988  D7AC               	goto	l3628
  1774  00098A  0A01               	xorlw	1	; case 15
  1775  00098C  A4D8               	btfss	status,2,c
  1776  00098E  0012               	return	
  1777  000990  D7BB               	goto	l3636
  1778  000992                     __end_of_menu:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _UgetUserName *****************
  1782 ;; Defined at:
  1783 ;;		line 25 in file "Usuaris.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  quin            1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  quin            1    7[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2    5[COMRAM] PTR unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, prodl, prodh
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1
  1797 ;;      Params:         2       0       0
  1798 ;;      Locals:         1       0       0
  1799 ;;      Temps:          0       0       0
  1800 ;;      Totals:         3       0       0
  1801 ;;Total ram usage:        3 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 2
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_menu
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text3
  1812  00176A                     __ptext3:
  1813                           	callstack 0
  1814  00176A                     _UgetUserName:
  1815                           	callstack 27
  1816                           
  1817                           ;incstack = 0
  1818                           ;UgetUserName@quin stored from wreg
  1819  00176A  6E65               	movwf	UgetUserName@quin^0,c
  1820                           
  1821                           ;Usuaris.c: 26:     return usuaris[quin].username;
  1822  00176C  5065               	movf	UgetUserName@quin^0,w,c
  1823  00176E  0D17               	mullw	23
  1824  001770  0E00               	movlw	low _usuaris
  1825  001772  24F3               	addwf	243,w,c
  1826  001774  6E63               	movwf	?_UgetUserName^0,c
  1827  001776  0E01               	movlw	high _usuaris
  1828  001778  20F4               	addwfc	prodh,w,c
  1829  00177A  6E64               	movwf	(?_UgetUserName+1)^0,c
  1830  00177C  0012               	return		;funcret
  1831  00177E                     __end_of_UgetUserName:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _UgetNumUsuaris *****************
  1835 ;; Defined at:
  1836 ;;		line 28 in file "Usuaris.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      unsigned char 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1
  1850 ;;      Params:         0       0       0
  1851 ;;      Locals:         0       0       0
  1852 ;;      Temps:          0       0       0
  1853 ;;      Totals:         0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 2
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_menu
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text4
  1865  001848                     __ptext4:
  1866                           	callstack 0
  1867  001848                     _UgetNumUsuaris:
  1868                           	callstack 27
  1869                           
  1870                           ;Usuaris.c: 29:     return numUsuaris;
  1871                           
  1872                           ;incstack = 0
  1873  001848  5023               	movf	_numUsuaris^0,w,c
  1874  00184A  0012               	return		;funcret
  1875  00184C                     __end_of_UgetNumUsuaris:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _UenviaPas *****************
  1879 ;; Defined at:
  1880 ;;		line 44 in file "Usuaris.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  c               1    wreg     unsigned char 
  1883 ;;  pos             1    5[COMRAM] unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  c               1    6[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1
  1895 ;;      Params:         1       0       0
  1896 ;;      Locals:         1       0       0
  1897 ;;      Temps:          0       0       0
  1898 ;;      Totals:         2       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_menu
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text5
  1910  001790                     __ptext5:
  1911                           	callstack 0
  1912  001790                     _UenviaPas:
  1913                           	callstack 27
  1914                           
  1915                           ;incstack = 0
  1916                           ;UenviaPas@c stored from wreg
  1917  001790  6E64               	movwf	UenviaPas@c^0,c
  1918                           
  1919                           ;Usuaris.c: 45:     tmpPassword[pos] = c;
  1920  001792  5063               	movf	UenviaPas@pos^0,w,c
  1921  001794  0F01               	addlw	low _tmpPassword
  1922  001796  6ED9               	movwf	fsr2l,c
  1923  001798  6ADA               	clrf	fsr2h,c
  1924  00179A  C064  FFDF         	movff	UenviaPas@c,indf2
  1925  00179E  0012               	return		;funcret
  1926  0017A0                     __end_of_UenviaPas:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _UenviaChar *****************
  1930 ;; Defined at:
  1931 ;;		line 41 in file "Usuaris.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  c               1    wreg     unsigned char 
  1934 ;;  pos             1    5[COMRAM] unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  c               1    6[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1
  1946 ;;      Params:         1       0       0
  1947 ;;      Locals:         1       0       0
  1948 ;;      Temps:          0       0       0
  1949 ;;      Totals:         2       0       0
  1950 ;;Total ram usage:        2 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 2
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_menu
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text6
  1961  0017A0                     __ptext6:
  1962                           	callstack 0
  1963  0017A0                     _UenviaChar:
  1964                           	callstack 27
  1965                           
  1966                           ;incstack = 0
  1967                           ;UenviaChar@c stored from wreg
  1968  0017A0  6E64               	movwf	UenviaChar@c^0,c
  1969                           
  1970                           ;Usuaris.c: 42:     tmpUsername[pos] = c;
  1971  0017A2  5063               	movf	UenviaChar@pos^0,w,c
  1972  0017A4  0F36               	addlw	low _tmpUsername
  1973  0017A6  6ED9               	movwf	fsr2l,c
  1974  0017A8  6ADA               	clrf	fsr2h,c
  1975  0017AA  C064  FFDF         	movff	UenviaChar@c,indf2
  1976  0017AE  0012               	return		;funcret
  1977  0017B0                     __end_of_UenviaChar:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _UcheckExistsNotFinished *****************
  1981 ;; Defined at:
  1982 ;;		line 35 in file "Usuaris.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;		None               void
  1989 ;; Registers used:
  1990 ;;		status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1
  1996 ;;      Params:         0       0       0
  1997 ;;      Locals:         0       0       0
  1998 ;;      Temps:          0       0       0
  1999 ;;      Totals:         0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 2
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_menu
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text7
  2011  0017B0                     __ptext7:
  2012                           	callstack 0
  2013  0017B0                     _UcheckExistsNotFinished:
  2014                           	callstack 27
  2015                           
  2016                           ;Usuaris.c: 36:     return do_check_exists;
  2017                           
  2018                           ;incstack = 0
  2019  0017B0  BC74               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2020  0017B2  D002               	goto	l1714
  2021  0017B4  90D8               	bcf	status,0,c
  2022  0017B6  0012               	return	
  2023  0017B8                     l1714:
  2024  0017B8  80D8               	bsf	status,0,c
  2025  0017BA  0012               	return		;funcret
  2026  0017BC                     __end_of_UcheckExistsNotFinished:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _UcheckExistsGetError *****************
  2030 ;; Defined at:
  2031 ;;		line 38 in file "Usuaris.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		wreg, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1
  2045 ;;      Params:         0       0       0
  2046 ;;      Locals:         0       0       0
  2047 ;;      Temps:          1       0       0
  2048 ;;      Totals:         1       0       0
  2049 ;;Total ram usage:        1 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 2
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_menu
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text8
  2060  0017EC                     __ptext8:
  2061                           	callstack 0
  2062  0017EC                     _UcheckExistsGetError:
  2063                           	callstack 27
  2064                           
  2065                           ;Usuaris.c: 39:     return usuariLoguejat;
  2066                           
  2067                           ;incstack = 0
  2068  0017EC  C04A  F063         	movff	_usuariLoguejat,??_UcheckExistsGetError
  2069  0017F0  3063               	rrcf	??_UcheckExistsGetError^0,w,c
  2070  0017F2  0012               	return		;funcret
  2071  0017F4                     __end_of_UcheckExistsGetError:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _UcheckExists *****************
  2075 ;; Defined at:
  2076 ;;		line 32 in file "Usuaris.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		None
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1
  2090 ;;      Params:         0       0       0
  2091 ;;      Locals:         0       0       0
  2092 ;;      Temps:          0       0       0
  2093 ;;      Totals:         0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 2
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_menu
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text9
  2105  00184C                     __ptext9:
  2106                           	callstack 0
  2107  00184C                     _UcheckExists:
  2108                           	callstack 27
  2109                           
  2110                           ;Usuaris.c: 33:     do_check_exists = 1;
  2111                           
  2112                           ;incstack = 0
  2113  00184C  8C74               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2114  00184E  0012               	return		;funcret
  2115  001850                     __end_of_UcheckExists:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _URegister *****************
  2119 ;; Defined at:
  2120 ;;		line 52 in file "Usuaris.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		None
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1
  2134 ;;      Params:         0       0       0
  2135 ;;      Locals:         0       0       0
  2136 ;;      Temps:          0       0       0
  2137 ;;      Totals:         0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_menu
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text10
  2149  001850                     __ptext10:
  2150                           	callstack 0
  2151  001850                     _URegister:
  2152                           	callstack 27
  2153                           
  2154                           ;Usuaris.c: 53:     do_register = 1;
  2155                           
  2156                           ;incstack = 0
  2157  001850  8A74               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2158  001852  0012               	return		;funcret
  2159  001854                     __end_of_URegister:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _SiFerMenu *****************
  2163 ;; Defined at:
  2164 ;;		line 19 in file "GestioLCD.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		None
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1
  2178 ;;      Params:         0       0       0
  2179 ;;      Locals:         0       0       0
  2180 ;;      Temps:          0       0       0
  2181 ;;      Totals:         0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 2
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_menu
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text11
  2193  001854                     __ptext11:
  2194                           	callstack 0
  2195  001854                     _SiFerMenu:
  2196                           	callstack 27
  2197                           
  2198                           ;GestioLCD.c: 20:     ferMenu = 1;
  2199                           
  2200                           ;incstack = 0
  2201  001854  8674               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2202  001856  0012               	return		;funcret
  2203  001858                     __end_of_SiFerMenu:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _SMSon *****************
  2207 ;; Defined at:
  2208 ;;		line 139 in file "Ssms.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		None
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1
  2222 ;;      Params:         0       0       0
  2223 ;;      Locals:         0       0       0
  2224 ;;      Temps:          0       0       0
  2225 ;;      Totals:         0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 2
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_menu
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text12
  2237  00183C                     __ptext12:
  2238                           	callstack 0
  2239  00183C                     _SMSon:
  2240                           	callstack 27
  2241                           
  2242                           ;Ssms.c: 140:     setSMSon = 1;
  2243                           
  2244                           ;incstack = 0
  2245  00183C  8075               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2246                           
  2247                           ;Ssms.c: 141:     novaTecla = -1;
  2248  00183E  6850               	setf	_novaTecla^0,c
  2249  001840  0012               	return		;funcret
  2250  001842                     __end_of_SMSon:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _SMSoff *****************
  2254 ;; Defined at:
  2255 ;;		line 144 in file "Ssms.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		None
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1
  2269 ;;      Params:         0       0       0
  2270 ;;      Locals:         0       0       0
  2271 ;;      Temps:          0       0       0
  2272 ;;      Totals:         0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_menu
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text13
  2284  001842                     __ptext13:
  2285                           	callstack 0
  2286  001842                     _SMSoff:
  2287                           	callstack 27
  2288                           
  2289                           ;Ssms.c: 145:     setSMSon = 0;
  2290                           
  2291                           ;incstack = 0
  2292  001842  9075               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2293                           
  2294                           ;Ssms.c: 146:     novaTecla = -1;
  2295  001844  6850               	setf	_novaTecla^0,c
  2296  001846  0012               	return		;funcret
  2297  001848                     __end_of_SMSoff:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _NoFerMenu *****************
  2301 ;; Defined at:
  2302 ;;		line 22 in file "GestioLCD.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		None
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1
  2316 ;;      Params:         0       0       0
  2317 ;;      Locals:         0       0       0
  2318 ;;      Temps:          0       0       0
  2319 ;;      Totals:         0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_menu
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text14
  2331  001858                     __ptext14:
  2332                           	callstack 0
  2333  001858                     _NoFerMenu:
  2334                           	callstack 27
  2335                           
  2336                           ;GestioLCD.c: 23:     ferMenu = 0;
  2337                           
  2338                           ;incstack = 0
  2339  001858  9674               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2340  00185A  0012               	return		;funcret
  2341  00185C                     __end_of_NoFerMenu:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _GLCDMostraMenu *****************
  2345 ;; Defined at:
  2346 ;;		line 30 in file "GestioLCD.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  num             1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  num             1    5[COMRAM] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1
  2360 ;;      Params:         0       0       0
  2361 ;;      Locals:         1       0       0
  2362 ;;      Temps:          0       0       0
  2363 ;;      Totals:         1       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 2
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_menu
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text15
  2375  0017BC                     __ptext15:
  2376                           	callstack 0
  2377  0017BC                     _GLCDMostraMenu:
  2378                           	callstack 27
  2379                           
  2380                           ;incstack = 0
  2381                           ;GLCDMostraMenu@num stored from wreg
  2382  0017BC  6E63               	movwf	GLCDMostraMenu@num^0,c
  2383                           
  2384                           ;GestioLCD.c: 31:     newString = 1;
  2385  0017BE  8474               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  2386                           
  2387                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  2388  0017C0  C063  F018         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  2389                           
  2390                           ;GestioLCD.c: 33:     ferMenu = 1;
  2391  0017C4  8674               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2392  0017C6  0012               	return		;funcret
  2393  0017C8                     __end_of_GLCDMostraMenu:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _init_ports *****************
  2397 ;; Defined at:
  2398 ;;		line 22 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1
  2412 ;;      Params:         0       0       0
  2413 ;;      Locals:         0       0       0
  2414 ;;      Temps:          0       0       0
  2415 ;;      Totals:         0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 2
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text16
  2427  001712                     __ptext16:
  2428                           	callstack 0
  2429  001712                     _init_ports:
  2430                           	callstack 28
  2431                           
  2432                           ;incstack = 0
  2433  001712  0E03               	movlw	3
  2434  001714  6E92               	movwf	146,c	;volatile
  2435  001716  0EE0               	movlw	224
  2436  001718  6E93               	movwf	147,c	;volatile
  2437  00171A  968A               	bcf	138,3,c	;volatile
  2438  00171C  908A               	bcf	138,0,c	;volatile
  2439  00171E  928A               	bcf	138,1,c	;volatile
  2440                           
  2441                           ;main.c: 45:     TRISC = 0xC0;
  2442  001720  0EC0               	movlw	192
  2443  001722  6E94               	movwf	148,c	;volatile
  2444                           
  2445                           ;main.c: 55:     TRISD = 0x8F;
  2446  001724  0E8F               	movlw	143
  2447  001726  6E95               	movwf	149,c	;volatile
  2448                           
  2449                           ;main.c: 56:     LATD = 0x00;
  2450  001728  0E00               	movlw	0
  2451  00172A  6E8C               	movwf	140,c	;volatile
  2452                           
  2453                           ;main.c: 59:     EECON1bits.EEPGD = 1;
  2454  00172C  8EA6               	bsf	166,7,c	;volsfr
  2455                           
  2456                           ;main.c: 60:     EECON1bits.CFGS = 0;
  2457  00172E  9CA6               	bcf	166,6,c	;volsfr
  2458  001730  0012               	return		;funcret
  2459  001732                     __end_of_init_ports:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _initAltaveu *****************
  2463 ;; Defined at:
  2464 ;;		line 10 in file "Altaveu.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1
  2478 ;;      Params:         0       0       0
  2479 ;;      Locals:         0       0       0
  2480 ;;      Temps:          0       0       0
  2481 ;;      Totals:         0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 3
  2485 ;; This function calls:
  2486 ;;		_TiGetTimer
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text17
  2493  0017F4                     __ptext17:
  2494                           	callstack 0
  2495  0017F4                     _initAltaveu:
  2496                           	callstack 27
  2497                           
  2498                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2499                           
  2500                           ;incstack = 0
  2501  0017F4  ECBB  F00A         	call	_TiGetTimer	;wreg free
  2502  0017F8  6E1C               	movwf	_timerAltaveu^0,c
  2503  0017FA  0012               	return		;funcret
  2504  0017FC                     __end_of_initAltaveu:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function _escriureEEPROM *****************
  2508 ;; Defined at:
  2509 ;;		line 185 in file "Usuaris.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  caca            1    5[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1
  2523 ;;      Params:         0       0       0
  2524 ;;      Locals:         1       0       0
  2525 ;;      Temps:          0       0       0
  2526 ;;      Totals:         1       0       0
  2527 ;;Total ram usage:        1 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text18
  2538  00164C                     __ptext18:
  2539                           	callstack 0
  2540  00164C                     _escriureEEPROM:
  2541                           	callstack 28
  2542                           
  2543                           ;Usuaris.c: 186:     for(unsigned char caca = 0; caca < 160; caca++){
  2544                           
  2545                           ;incstack = 0
  2546  00164C  0E00               	movlw	0
  2547  00164E  6E63               	movwf	escriureEEPROM@caca^0,c
  2548  001650                     l1874:
  2549                           
  2550                           ;Usuaris.c: 187:         EEADR = 0;
  2551  001650  0E00               	movlw	0
  2552  001652  6EA9               	movwf	169,c	;volatile
  2553                           
  2554                           ;Usuaris.c: 188:         EEDATA = 0;
  2555  001654  0E00               	movlw	0
  2556  001656  6EA8               	movwf	168,c	;volatile
  2557                           
  2558                           ;Usuaris.c: 189:         EECON1bits.EEPGD = 0;
  2559  001658  9EA6               	bcf	166,7,c	;volsfr
  2560                           
  2561                           ;Usuaris.c: 190:         EECON1bits.CFGS = 0;
  2562  00165A  9CA6               	bcf	166,6,c	;volsfr
  2563                           
  2564                           ;Usuaris.c: 191:         EECON1bits.WREN = 1;
  2565  00165C  84A6               	bsf	166,2,c	;volsfr
  2566                           
  2567                           ;Usuaris.c: 192:         INTCONbits.GIE = 0;
  2568  00165E  9EF2               	bcf	242,7,c	;volatile
  2569                           
  2570                           ;Usuaris.c: 193:         EECON2 = 85;
  2571  001660  0E55               	movlw	85
  2572  001662  6EA7               	movwf	167,c	;volsfr
  2573                           
  2574                           ;Usuaris.c: 194:         EECON2 = 170;
  2575  001664  0EAA               	movlw	170
  2576  001666  6EA7               	movwf	167,c	;volsfr
  2577                           
  2578                           ;Usuaris.c: 195:          EECON1bits.WR = 1;
  2579  001668  82A6               	bsf	166,1,c	;volsfr
  2580  00166A                     l643:
  2581                           
  2582                           ;Usuaris.c: 196:         while(EECON1bits.WR){
  2583  00166A  B2A6               	btfsc	166,1,c	;volsfr
  2584  00166C  D7FE               	goto	l643
  2585                           
  2586                           ;Usuaris.c: 201:     }
  2587  00166E  2A63               	incf	escriureEEPROM@caca^0,f,c
  2588  001670  0E9F               	movlw	159
  2589  001672  6463               	cpfsgt	escriureEEPROM@caca^0,c
  2590  001674  D7ED               	goto	l1874
  2591                           
  2592                           ;Usuaris.c: 202:    INTCONbits.GIE = 1;
  2593  001676  8EF2               	bsf	242,7,c	;volatile
  2594  001678  0012               	return		;funcret
  2595  00167A                     __end_of_escriureEEPROM:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _UmotorUsers *****************
  2599 ;; Defined at:
  2600 ;;		line 121 in file "Usuaris.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1
  2614 ;;      Params:         0       0       0
  2615 ;;      Locals:         0       0       0
  2616 ;;      Temps:          2       0       0
  2617 ;;      Totals:         2       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 3
  2621 ;; This function calls:
  2622 ;;		_compareStrings
  2623 ;;		_escriureCharEEPROM
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text19
  2630  000BAA                     __ptext19:
  2631                           	callstack 0
  2632  000BAA                     _UmotorUsers:
  2633                           	callstack 27
  2634                           
  2635                           ;Usuaris.c: 122: static char state = 0;;Usuaris.c: 124:  switch(state) {
  2636                           
  2637                           ;incstack = 0
  2638  000BAA  D0A5               	goto	l3776
  2639  000BAC                     l615:
  2640                           
  2641                           ;Usuaris.c: 126:    if (!do_check_exists && !do_register) {
  2642  000BAC  AC74               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2643  000BAE  BA74               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2644  000BB0  D005               	goto	l616
  2645                           
  2646                           ;Usuaris.c: 127:     i = 0;
  2647  000BB2  0E00               	movlw	0
  2648  000BB4  6E20               	movwf	_i^0,c
  2649                           
  2650                           ;Usuaris.c: 128:     j = 0;
  2651  000BB6  0E00               	movlw	0
  2652  000BB8  6E1F               	movwf	_j^0,c
  2653                           
  2654                           ;Usuaris.c: 129:    }
  2655  000BBA  0012               	return	
  2656  000BBC                     l616:
  2657  000BBC  AC74               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2658  000BBE  D004               	goto	l618
  2659                           
  2660                           ;Usuaris.c: 131:     usuariLoguejat = -1;
  2661  000BC0  684A               	setf	_usuariLoguejat^0,c
  2662  000BC2                     l3704:
  2663                           
  2664                           ;Usuaris.c: 132:     state = 1;
  2665  000BC2  0E01               	movlw	1
  2666  000BC4  6E1E               	movwf	UmotorUsers@state^0,c
  2667                           
  2668                           ;Usuaris.c: 133:    }
  2669  000BC6  0012               	return	
  2670  000BC8                     l618:
  2671  000BC8  AA74               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2672  000BCA  0012               	return	
  2673  000BCC                     u3360:
  2674                           
  2675                           ;Usuaris.c: 135:     state = 2;
  2676  000BCC  0E02               	movlw	2
  2677  000BCE  6E1E               	movwf	UmotorUsers@state^0,c
  2678                           
  2679                           ;Usuaris.c: 137:   break;
  2680  000BD0  0012               	return	
  2681  000BD2                     l3708:
  2682                           
  2683                           ;Usuaris.c: 139:    if (i < numUsuaris) {
  2684  000BD2  5023               	movf	_numUsuaris^0,w,c
  2685  000BD4  5C20               	subwf	_i^0,w,c
  2686  000BD6  B0D8               	btfsc	status,0,c
  2687  000BD8  D012               	goto	l3718
  2688                           
  2689                           ;Usuaris.c: 140:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2690  000BDA  0E36               	movlw	low _tmpUsername
  2691  000BDC  6E63               	movwf	compareStrings@a^0,c
  2692  000BDE  5020               	movf	_i^0,w,c
  2693  000BE0  0D17               	mullw	23
  2694  000BE2  0E00               	movlw	low _usuaris
  2695  000BE4  24F3               	addwf	243,w,c
  2696  000BE6  6E64               	movwf	compareStrings@b^0,c
  2697  000BE8  0E01               	movlw	high _usuaris
  2698  000BEA  20F4               	addwfc	prodh,w,c
  2699  000BEC  6E65               	movwf	(compareStrings@b+1)^0,c
  2700  000BEE  EC5B  F00A         	call	_compareStrings	;wreg free
  2701  000BF2  0900               	iorlw	0
  2702  000BF4  B4D8               	btfsc	status,2,c
  2703                           
  2704                           ;Usuaris.c: 141:      usuariLoguejat = i;
  2705  000BF6  C020  F04A         	movff	_i,_usuariLoguejat
  2706                           
  2707                           ;Usuaris.c: 144:     i++;
  2708  000BFA  2A20               	incf	_i^0,f,c
  2709  000BFC  D7E2               	goto	l3704
  2710  000BFE                     l3718:
  2711  000BFE  5023               	movf	_numUsuaris^0,w,c
  2712  000C00  1820               	xorwf	_i^0,w,c
  2713  000C02  A4D8               	btfss	status,2,c
  2714  000C04  0012               	return	
  2715                           
  2716                           ;Usuaris.c: 148:     do_check_exists = 0;
  2717  000C06  9C74               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2718  000C08                     l3722:
  2719                           
  2720                           ;Usuaris.c: 149:     state = 0;
  2721  000C08  0E00               	movlw	0
  2722  000C0A  6E1E               	movwf	UmotorUsers@state^0,c
  2723  000C0C  0012               	return	
  2724  000C0E                     l3724:
  2725                           
  2726                           ;Usuaris.c: 153:    if (i != 8) {
  2727  000C0E  0E08               	movlw	8
  2728  000C10  1820               	xorwf	_i^0,w,c
  2729  000C12  B4D8               	btfsc	status,2,c
  2730  000C14  D022               	goto	l3736
  2731                           
  2732                           ;Usuaris.c: 154:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2733  000C16  C022  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  2734  000C1A  5020               	movf	_i^0,w,c
  2735  000C1C  0F36               	addlw	low _tmpUsername
  2736  000C1E  6ED9               	movwf	fsr2l,c
  2737  000C20  6ADA               	clrf	fsr2h,c
  2738  000C22  50DF               	movf	indf2,w,c
  2739  000C24  EC53  F00B         	call	_escriureCharEEPROM
  2740  000C28  2A22               	incf	_indexNextUser^0,f,c
  2741                           
  2742                           ;Usuaris.c: 155:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  2743  000C2A  5020               	movf	_i^0,w,c
  2744  000C2C  0F36               	addlw	low _tmpUsername
  2745  000C2E  6ED9               	movwf	fsr2l,c
  2746  000C30  6ADA               	clrf	fsr2h,c
  2747  000C32  5021               	movf	_indexNextUserStruct^0,w,c
  2748  000C34  0D17               	mullw	23
  2749  000C36  0E00               	movlw	low _usuaris
  2750  000C38  6E68               	movwf	??_UmotorUsers^0,c
  2751  000C3A  0E01               	movlw	high _usuaris
  2752  000C3C  6E69               	movwf	(??_UmotorUsers+1)^0,c
  2753  000C3E  50F3               	movf	243,w,c
  2754  000C40  2668               	addwf	??_UmotorUsers^0,f,c
  2755  000C42  50F4               	movf	244,w,c
  2756  000C44  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  2757  000C46  5020               	movf	_i^0,w,c
  2758  000C48  2468               	addwf	??_UmotorUsers^0,w,c
  2759  000C4A  6EE1               	movwf	fsr1l,c
  2760  000C4C  0E00               	movlw	0
  2761  000C4E  2069               	addwfc	(??_UmotorUsers+1)^0,w,c
  2762  000C50  6EE2               	movwf	fsr1h,c
  2763  000C52  CFDF FFE7          	movff	indf2,indf1
  2764                           
  2765                           ;Usuaris.c: 156:     i++;
  2766  000C56  2A20               	incf	_i^0,f,c
  2767  000C58  D7B9               	goto	u3360
  2768  000C5A                     l3736:
  2769  000C5A  0E08               	movlw	8
  2770  000C5C  1820               	xorwf	_i^0,w,c
  2771  000C5E  A4D8               	btfss	status,2,c
  2772  000C60  0012               	return	
  2773                           
  2774                           ;Usuaris.c: 160:     i = 0;
  2775  000C62  0E00               	movlw	0
  2776  000C64  6E20               	movwf	_i^0,c
  2777                           
  2778                           ;Usuaris.c: 161:     state = 3;
  2779  000C66  0E03               	movlw	3
  2780  000C68  6E1E               	movwf	UmotorUsers@state^0,c
  2781  000C6A  0012               	return	
  2782  000C6C                     l3740:
  2783                           
  2784                           ;Usuaris.c: 165:    if (i != 8) {
  2785  000C6C  0E08               	movlw	8
  2786  000C6E  1820               	xorwf	_i^0,w,c
  2787  000C70  B4D8               	btfsc	status,2,c
  2788  000C72  D028               	goto	l3752
  2789                           
  2790                           ;Usuaris.c: 166:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2791  000C74  C022  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  2792  000C78  5020               	movf	_i^0,w,c
  2793  000C7A  0F01               	addlw	low _tmpPassword
  2794  000C7C  6ED9               	movwf	fsr2l,c
  2795  000C7E  6ADA               	clrf	fsr2h,c
  2796  000C80  50DF               	movf	indf2,w,c
  2797  000C82  EC53  F00B         	call	_escriureCharEEPROM
  2798  000C86  2A22               	incf	_indexNextUser^0,f,c
  2799                           
  2800                           ;Usuaris.c: 167:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  2801  000C88  5020               	movf	_i^0,w,c
  2802  000C8A  0F01               	addlw	low _tmpPassword
  2803  000C8C  6ED9               	movwf	fsr2l,c
  2804  000C8E  6ADA               	clrf	fsr2h,c
  2805  000C90  5021               	movf	_indexNextUserStruct^0,w,c
  2806  000C92  0D17               	mullw	23
  2807  000C94  0E00               	movlw	low _usuaris
  2808  000C96  6E68               	movwf	??_UmotorUsers^0,c
  2809  000C98  0E01               	movlw	high _usuaris
  2810  000C9A  6E69               	movwf	(??_UmotorUsers+1)^0,c
  2811  000C9C  0E09               	movlw	9
  2812  000C9E  2668               	addwf	??_UmotorUsers^0,f,c
  2813  000CA0  0E00               	movlw	0
  2814  000CA2  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  2815  000CA4  50F3               	movf	243,w,c
  2816  000CA6  2668               	addwf	??_UmotorUsers^0,f,c
  2817  000CA8  50F4               	movf	244,w,c
  2818  000CAA  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  2819  000CAC  5020               	movf	_i^0,w,c
  2820  000CAE  2468               	addwf	??_UmotorUsers^0,w,c
  2821  000CB0  6EE1               	movwf	fsr1l,c
  2822  000CB2  0E00               	movlw	0
  2823  000CB4  2069               	addwfc	(??_UmotorUsers+1)^0,w,c
  2824  000CB6  6EE2               	movwf	fsr1h,c
  2825  000CB8  CFDF FFE7          	movff	indf2,indf1
  2826                           
  2827                           ;Usuaris.c: 168:     i++;
  2828  000CBC  2A20               	incf	_i^0,f,c
  2829                           
  2830                           ;Usuaris.c: 169:     state = 3;
  2831  000CBE  0E03               	movlw	3
  2832  000CC0  6E1E               	movwf	UmotorUsers@state^0,c
  2833                           
  2834                           ;Usuaris.c: 170:    }
  2835  000CC2  0012               	return	
  2836  000CC4                     l3752:
  2837  000CC4  0E08               	movlw	8
  2838  000CC6  1820               	xorwf	_i^0,w,c
  2839  000CC8  A4D8               	btfss	status,2,c
  2840  000CCA  0012               	return	
  2841                           
  2842                           ;Usuaris.c: 172:     do_register = 0;
  2843  000CCC  9A74               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2844                           
  2845                           ;Usuaris.c: 173:     indexNextUser++;
  2846  000CCE  2A22               	incf	_indexNextUser^0,f,c
  2847                           
  2848                           ;Usuaris.c: 174:     if(indexNextUser == 159) indexNextUser = 16;
  2849  000CD0  0E9F               	movlw	159
  2850  000CD2  1822               	xorwf	_indexNextUser^0,w,c
  2851  000CD4  A4D8               	btfss	status,2,c
  2852  000CD6  D002               	goto	l3762
  2853  000CD8  0E10               	movlw	16
  2854  000CDA  6E22               	movwf	_indexNextUser^0,c
  2855  000CDC                     l3762:
  2856                           
  2857                           ;Usuaris.c: 175:     indexNextUserStruct++;
  2858  000CDC  2A21               	incf	_indexNextUserStruct^0,f,c
  2859                           
  2860                           ;Usuaris.c: 176:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  2861  000CDE  0E08               	movlw	8
  2862  000CE0  1821               	xorwf	_indexNextUserStruct^0,w,c
  2863  000CE2  A4D8               	btfss	status,2,c
  2864  000CE4  D002               	goto	l3768
  2865  000CE6  0E00               	movlw	0
  2866  000CE8  6E21               	movwf	_indexNextUserStruct^0,c
  2867  000CEA                     l3768:
  2868                           
  2869                           ;Usuaris.c: 177:     if(numUsuaris != 8) numUsuaris++;
  2870  000CEA  0E08               	movlw	8
  2871  000CEC  1823               	xorwf	_numUsuaris^0,w,c
  2872  000CEE  B4D8               	btfsc	status,2,c
  2873  000CF0  D78B               	goto	l3722
  2874  000CF2  2A23               	incf	_numUsuaris^0,f,c
  2875  000CF4  D789               	goto	l3722
  2876  000CF6                     l3776:
  2877  000CF6  501E               	movf	UmotorUsers@state^0,w,c
  2878  000CF8  6E68               	movwf	??_UmotorUsers^0,c
  2879  000CFA  6A69               	clrf	(??_UmotorUsers+1)^0,c
  2880                           
  2881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2882                           ; Switch size 1, requested type "simple"
  2883                           ; Number of cases is 1, Range of values is 0 to 0
  2884                           ; switch strategies available:
  2885                           ; Name         Instructions Cycles
  2886                           ; simple_byte            4     3 (average)
  2887                           ;	Chosen strategy is simple_byte
  2888  000CFC  5069               	movf	(??_UmotorUsers+1)^0,w,c
  2889  000CFE  0A00               	xorlw	0	; case 0
  2890  000D00  A4D8               	btfss	status,2,c
  2891  000D02  0012               	return	
  2892                           
  2893                           ; Switch size 1, requested type "simple"
  2894                           ; Number of cases is 4, Range of values is 0 to 3
  2895                           ; switch strategies available:
  2896                           ; Name         Instructions Cycles
  2897                           ; simple_byte           13     7 (average)
  2898                           ;	Chosen strategy is simple_byte
  2899  000D04  5068               	movf	??_UmotorUsers^0,w,c
  2900  000D06  0A00               	xorlw	0	; case 0
  2901  000D08  B4D8               	btfsc	status,2,c
  2902  000D0A  D750               	goto	l615
  2903  000D0C  0A01               	xorlw	1	; case 1
  2904  000D0E  B4D8               	btfsc	status,2,c
  2905  000D10  D760               	goto	l3708
  2906  000D12  0A03               	xorlw	3	; case 2
  2907  000D14  B4D8               	btfsc	status,2,c
  2908  000D16  D77B               	goto	l3724
  2909  000D18  0A01               	xorlw	1	; case 3
  2910  000D1A  A4D8               	btfss	status,2,c
  2911  000D1C  0012               	return	
  2912  000D1E  D7A6               	goto	l3740
  2913  000D20                     __end_of_UmotorUsers:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _escriureCharEEPROM *****************
  2917 ;; Defined at:
  2918 ;;		line 55 in file "Usuaris.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  c               1    wreg     unsigned char 
  2921 ;;  pos             1    5[COMRAM] unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  c               1    6[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1
  2933 ;;      Params:         1       0       0
  2934 ;;      Locals:         1       0       0
  2935 ;;      Temps:          0       0       0
  2936 ;;      Totals:         2       0       0
  2937 ;;Total ram usage:        2 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 2
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_UmotorUsers
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text20
  2948  0016A6                     __ptext20:
  2949                           	callstack 0
  2950  0016A6                     _escriureCharEEPROM:
  2951                           	callstack 27
  2952                           
  2953                           ;incstack = 0
  2954                           ;escriureCharEEPROM@c stored from wreg
  2955  0016A6  6E64               	movwf	escriureCharEEPROM@c^0,c
  2956                           
  2957                           ;Usuaris.c: 56:     EEADR = c;
  2958  0016A8  C064  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2959                           
  2960                           ;Usuaris.c: 57:     EEDATA = pos;
  2961  0016AC  C063  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2962                           
  2963                           ;Usuaris.c: 58:     EECON1bits.EEPGD = 0;
  2964  0016B0  9EA6               	bcf	166,7,c	;volsfr
  2965                           
  2966                           ;Usuaris.c: 59:     EECON1bits.CFGS = 0;
  2967  0016B2  9CA6               	bcf	166,6,c	;volsfr
  2968                           
  2969                           ;Usuaris.c: 60:     EECON1bits.WREN = 1;
  2970  0016B4  84A6               	bsf	166,2,c	;volsfr
  2971                           
  2972                           ;Usuaris.c: 61:     INTCONbits.GIE = 0;
  2973  0016B6  9EF2               	bcf	242,7,c	;volatile
  2974                           
  2975                           ;Usuaris.c: 62:     EECON2 = 85;
  2976  0016B8  0E55               	movlw	85
  2977  0016BA  6EA7               	movwf	167,c	;volsfr
  2978                           
  2979                           ;Usuaris.c: 63:     EECON2 = 170;
  2980  0016BC  0EAA               	movlw	170
  2981  0016BE  6EA7               	movwf	167,c	;volsfr
  2982                           
  2983                           ;Usuaris.c: 64:      EECON1bits.WR = 1;
  2984  0016C0  82A6               	bsf	166,1,c	;volsfr
  2985  0016C2                     l577:
  2986  0016C2  B2A6               	btfsc	166,1,c	;volsfr
  2987  0016C4  D7FE               	goto	l577
  2988                           
  2989                           ;Usuaris.c: 66:    INTCONbits.GIE = 1;
  2990  0016C6  8EF2               	bsf	242,7,c	;volatile
  2991  0016C8  0012               	return		;funcret
  2992  0016CA                     __end_of_escriureCharEEPROM:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _compareStrings *****************
  2996 ;; Defined at:
  2997 ;;		line 111 in file "Usuaris.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  a               1    5[COMRAM] PTR const unsigned char 
  3000 ;;		 -> tmpUsername(9), 
  3001 ;;  b               2    6[COMRAM] PTR const unsigned char 
  3002 ;;		 -> usuaris.username(9), usuaris(184), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      unsigned char 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1
  3014 ;;      Params:         3       0       0
  3015 ;;      Locals:         0       0       0
  3016 ;;      Temps:          2       0       0
  3017 ;;      Totals:         5       0       0
  3018 ;;Total ram usage:        5 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 2
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_UmotorUsers
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text21
  3029  0014B6                     __ptext21:
  3030                           	callstack 0
  3031  0014B6                     _compareStrings:
  3032                           	callstack 27
  3033                           
  3034                           ;Usuaris.c: 112:     while (*a){
  3035                           
  3036                           ;incstack = 0
  3037  0014B6  D00E               	goto	l3128
  3038  0014B8                     l3122:
  3039                           
  3040                           ;Usuaris.c: 113:         if (*a != *b)break;
  3041  0014B8  C064  FFD9         	movff	compareStrings@b,fsr2l
  3042  0014BC  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  3043  0014C0  5063               	movf	compareStrings@a^0,w,c
  3044  0014C2  6EE1               	movwf	fsr1l,c
  3045  0014C4  6AE2               	clrf	fsr1h,c
  3046  0014C6  50DE               	movf	postinc2,w,c
  3047  0014C8  18E6               	xorwf	postinc1,w,c
  3048  0014CA  A4D8               	btfss	status,2,c
  3049  0014CC  D009               	goto	u2510
  3050                           
  3051                           ;Usuaris.c: 114:         a++;
  3052  0014CE  2A63               	incf	compareStrings@a^0,f,c
  3053                           
  3054                           ;Usuaris.c: 115:         b++;
  3055  0014D0  4A64               	infsnz	compareStrings@b^0,f,c
  3056  0014D2  2A65               	incf	(compareStrings@b+1)^0,f,c
  3057  0014D4                     l3128:
  3058                           
  3059                           ;Usuaris.c: 112:     while (*a){
  3060  0014D4  5063               	movf	compareStrings@a^0,w,c
  3061  0014D6  6ED9               	movwf	fsr2l,c
  3062  0014D8  6ADA               	clrf	fsr2h,c
  3063  0014DA  50DF               	movf	indf2,w,c
  3064  0014DC  A4D8               	btfss	status,2,c
  3065  0014DE  D7EC               	goto	l3122
  3066  0014E0                     u2510:
  3067                           
  3068                           ;Usuaris.c: 117:     return *(const unsigned char*)a - *(const unsigned char*)b;
  3069  0014E0  C064  FFD9         	movff	compareStrings@b,fsr2l
  3070  0014E4  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  3071  0014E8  50DF               	movf	indf2,w,c
  3072  0014EA  6E66               	movwf	??_compareStrings^0,c
  3073  0014EC  5063               	movf	compareStrings@a^0,w,c
  3074  0014EE  6ED9               	movwf	fsr2l,c
  3075  0014F0  6ADA               	clrf	fsr2h,c
  3076  0014F2  50DF               	movf	indf2,w,c
  3077  0014F4  6E67               	movwf	(??_compareStrings+1)^0,c
  3078  0014F6  5066               	movf	??_compareStrings^0,w,c
  3079  0014F8  5C67               	subwf	(??_compareStrings+1)^0,w,c
  3080  0014FA  0012               	return		;funcret
  3081  0014FC                     __end_of_compareStrings:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _Uinit *****************
  3085 ;; Defined at:
  3086 ;;		line 68 in file "Usuaris.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  j               1    9[COMRAM] unsigned char 
  3091 ;;  j               1    8[COMRAM] unsigned char 
  3092 ;;  i               1    7[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1
  3102 ;;      Params:         0       0       0
  3103 ;;      Locals:         3       0       0
  3104 ;;      Temps:          2       0       0
  3105 ;;      Totals:         5       0       0
  3106 ;;Total ram usage:        5 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 2
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text22
  3117  001100                     __ptext22:
  3118                           	callstack 0
  3119  001100                     _Uinit:
  3120                           	callstack 28
  3121                           
  3122                           ;Usuaris.c: 73:     EEADR = 0;
  3123                           
  3124                           ;incstack = 0
  3125  001100  0E00               	movlw	0
  3126  001102  6EA9               	movwf	169,c	;volatile
  3127                           
  3128                           ;Usuaris.c: 74:     EECON1bits.EEPGD = 0;
  3129  001104  9EA6               	bcf	166,7,c	;volsfr
  3130                           
  3131                           ;Usuaris.c: 75:     EECON1bits.CFGS = 0;
  3132  001106  9CA6               	bcf	166,6,c	;volsfr
  3133                           
  3134                           ;Usuaris.c: 76:     EECON1bits.RD = 1;
  3135  001108  80A6               	bsf	166,0,c	;volsfr
  3136  00110A                     l583:
  3137  00110A  B0A6               	btfsc	166,0,c	;volsfr
  3138  00110C  D7FE               	goto	l583
  3139                           
  3140                           ;Usuaris.c: 78:     numUsuaris = EEDATA;
  3141  00110E  CFA8 F023          	movff	4008,_numUsuaris	;volatile
  3142                           
  3143                           ;Usuaris.c: 82:     EEADR++;
  3144  001112  2AA9               	incf	169,f,c	;volatile
  3145                           
  3146                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  3147  001114  9EA6               	bcf	166,7,c	;volsfr
  3148                           
  3149                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  3150  001116  9CA6               	bcf	166,6,c	;volsfr
  3151  001118                     l586:
  3152  001118  B0A6               	btfsc	166,0,c	;volsfr
  3153  00111A  D7FE               	goto	l586
  3154                           
  3155                           ;Usuaris.c: 87:     indexNextUser = EEDATA;
  3156  00111C  CFA8 F022          	movff	4008,_indexNextUser	;volatile
  3157                           
  3158                           ;Usuaris.c: 88:     EEADR++;
  3159  001120  2AA9               	incf	169,f,c	;volatile
  3160                           
  3161                           ;Usuaris.c: 90:     for(char i = 0; i< numUsuaris; i++){
  3162  001122  0E00               	movlw	0
  3163  001124  6E65               	movwf	Uinit@i^0,c
  3164  001126  D041               	goto	l2132
  3165  001128                     l2102:
  3166                           
  3167                           ;Usuaris.c: 91:         for(char j = 0; j<9; j++){
  3168  001128  0E00               	movlw	0
  3169  00112A  6E66               	movwf	Uinit@j^0,c
  3170  00112C                     l591:
  3171                           
  3172                           ;Usuaris.c: 92:             EECON1bits.EEPGD = 0;
  3173  00112C  9EA6               	bcf	166,7,c	;volsfr
  3174                           
  3175                           ;Usuaris.c: 93:             EECON1bits.CFGS = 0;
  3176  00112E  9CA6               	bcf	166,6,c	;volsfr
  3177                           
  3178                           ;Usuaris.c: 94:             EECON1bits.RD = 1;
  3179  001130  80A6               	bsf	166,0,c	;volsfr
  3180  001132                     l593:
  3181  001132  B0A6               	btfsc	166,0,c	;volsfr
  3182  001134  D7FE               	goto	l593
  3183                           
  3184                           ;Usuaris.c: 96:             usuaris[i].username[j] = EEDATA;
  3185  001136  5065               	movf	Uinit@i^0,w,c
  3186  001138  0D17               	mullw	23
  3187  00113A  0E00               	movlw	low _usuaris
  3188  00113C  6E63               	movwf	??_Uinit^0,c
  3189  00113E  0E01               	movlw	high _usuaris
  3190  001140  6E64               	movwf	(??_Uinit+1)^0,c
  3191  001142  50F3               	movf	243,w,c
  3192  001144  2663               	addwf	??_Uinit^0,f,c
  3193  001146  50F4               	movf	244,w,c
  3194  001148  2264               	addwfc	(??_Uinit+1)^0,f,c
  3195  00114A  5066               	movf	Uinit@j^0,w,c
  3196  00114C  2463               	addwf	??_Uinit^0,w,c
  3197  00114E  6ED9               	movwf	fsr2l,c
  3198  001150  0E00               	movlw	0
  3199  001152  2064               	addwfc	(??_Uinit+1)^0,w,c
  3200  001154  6EDA               	movwf	fsr2h,c
  3201  001156  CFA8 FFDF          	movff	4008,indf2	;volatile
  3202                           
  3203                           ;Usuaris.c: 97:             EEADR++;
  3204  00115A  2AA9               	incf	169,f,c	;volatile
  3205                           
  3206                           ;Usuaris.c: 98:         }
  3207  00115C  2A66               	incf	Uinit@j^0,f,c
  3208  00115E  0E08               	movlw	8
  3209  001160  6466               	cpfsgt	Uinit@j^0,c
  3210  001162  D7E4               	goto	l591
  3211                           
  3212                           ;Usuaris.c: 99:         for(char j = 0; j<9; j++){
  3213  001164  0E00               	movlw	0
  3214  001166  6E67               	movwf	Uinit@j_1067^0,c
  3215  001168                     l596:
  3216                           
  3217                           ;Usuaris.c: 100:             EECON1bits.EEPGD = 0;
  3218  001168  9EA6               	bcf	166,7,c	;volsfr
  3219                           
  3220                           ;Usuaris.c: 101:             EECON1bits.CFGS = 0;
  3221  00116A  9CA6               	bcf	166,6,c	;volsfr
  3222                           
  3223                           ;Usuaris.c: 102:             EECON1bits.RD = 1;
  3224  00116C  80A6               	bsf	166,0,c	;volsfr
  3225  00116E                     l598:
  3226  00116E  B0A6               	btfsc	166,0,c	;volsfr
  3227  001170  D7FE               	goto	l598
  3228                           
  3229                           ;Usuaris.c: 104:             usuaris[i].password[j] = EEDATA;
  3230  001172  5065               	movf	Uinit@i^0,w,c
  3231  001174  0D17               	mullw	23
  3232  001176  0E00               	movlw	low _usuaris
  3233  001178  6E63               	movwf	??_Uinit^0,c
  3234  00117A  0E01               	movlw	high _usuaris
  3235  00117C  6E64               	movwf	(??_Uinit+1)^0,c
  3236  00117E  0E09               	movlw	9
  3237  001180  2663               	addwf	??_Uinit^0,f,c
  3238  001182  0E00               	movlw	0
  3239  001184  2264               	addwfc	(??_Uinit+1)^0,f,c
  3240  001186  50F3               	movf	243,w,c
  3241  001188  2663               	addwf	??_Uinit^0,f,c
  3242  00118A  50F4               	movf	244,w,c
  3243  00118C  2264               	addwfc	(??_Uinit+1)^0,f,c
  3244  00118E  5067               	movf	Uinit@j_1067^0,w,c
  3245  001190  2463               	addwf	??_Uinit^0,w,c
  3246  001192  6ED9               	movwf	fsr2l,c
  3247  001194  0E00               	movlw	0
  3248  001196  2064               	addwfc	(??_Uinit+1)^0,w,c
  3249  001198  6EDA               	movwf	fsr2h,c
  3250  00119A  CFA8 FFDF          	movff	4008,indf2	;volatile
  3251                           
  3252                           ;Usuaris.c: 105:             EEADR++;
  3253  00119E  2AA9               	incf	169,f,c	;volatile
  3254                           
  3255                           ;Usuaris.c: 106:         }
  3256  0011A0  2A67               	incf	Uinit@j_1067^0,f,c
  3257  0011A2  0E08               	movlw	8
  3258  0011A4  6467               	cpfsgt	Uinit@j_1067^0,c
  3259  0011A6  D7E0               	goto	l596
  3260                           
  3261                           ;Usuaris.c: 107:     }
  3262  0011A8  2A65               	incf	Uinit@i^0,f,c
  3263  0011AA                     l2132:
  3264  0011AA  5023               	movf	_numUsuaris^0,w,c
  3265  0011AC  5C65               	subwf	Uinit@i^0,w,c
  3266  0011AE  B0D8               	btfsc	status,0,c
  3267  0011B0  0012               	return	
  3268  0011B2  D7BA               	goto	l2102
  3269  0011B4                     __end_of_Uinit:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _TiInitTimer *****************
  3273 ;; Defined at:
  3274 ;;		line 18 in file "TiTTimer.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1
  3288 ;;      Params:         0       0       0
  3289 ;;      Locals:         0       0       0
  3290 ;;      Temps:          0       0       0
  3291 ;;      Totals:         0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 2
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text23
  3303  0015B0                     __ptext23:
  3304                           	callstack 0
  3305  0015B0                     _TiInitTimer:
  3306                           	callstack 28
  3307                           
  3308                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  3309                           
  3310                           ;incstack = 0
  3311  0015B0  9ED0               	bcf	208,7,c	;volatile
  3312                           
  3313                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  3314  0015B2  8EF2               	bsf	242,7,c	;volatile
  3315                           
  3316                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  3317  0015B4  8CF2               	bsf	242,6,c	;volatile
  3318                           
  3319                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  3320  0015B6  8AF2               	bsf	242,5,c	;volatile
  3321                           
  3322                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3323  0015B8  94F2               	bcf	242,2,c	;volatile
  3324                           
  3325                           ;TiTTimer.c: 25:     T0CON = 136;
  3326  0015BA  0E88               	movlw	136
  3327  0015BC  6ED5               	movwf	213,c	;volatile
  3328                           
  3329                           ;TiTTimer.c: 27:     TMR0H = 223;
  3330  0015BE  0EDF               	movlw	223
  3331  0015C0  6ED7               	movwf	215,c	;volatile
  3332                           
  3333                           ;TiTTimer.c: 28:     TMR0L = 148;
  3334  0015C2  0E94               	movlw	148
  3335  0015C4  6ED6               	movwf	214,c	;volatile
  3336                           
  3337                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  3338  0015C6  8ED5               	bsf	213,7,c	;volatile
  3339                           
  3340                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  3341  0015C8  0E00               	movlw	0
  3342  0015CA  6E2A               	movwf	_counter^0,c
  3343  0015CC                     l3226:
  3344  0015CC  0E07               	movlw	7
  3345  0015CE  642A               	cpfsgt	_counter^0,c
  3346  0015D0  D001               	goto	l3230
  3347  0015D2  0012               	return	
  3348  0015D4                     l3230:
  3349                           
  3350                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  3351  0015D4  502A               	movf	_counter^0,w,c
  3352  0015D6  0D03               	mullw	3
  3353  0015D8  50F3               	movf	243,w,c
  3354  0015DA  0F82               	addlw	low (_s_Timers+2)
  3355  0015DC  6ED9               	movwf	fsr2l,c
  3356  0015DE  6ADA               	clrf	fsr2h,c
  3357  0015E0  0E00               	movlw	0
  3358  0015E2  6EDF               	movwf	indf2,c
  3359                           
  3360                           ;TiTTimer.c: 33:     }
  3361  0015E4  2A2A               	incf	_counter^0,f,c
  3362  0015E6  D7F2               	goto	l3226
  3363  0015E8                     __end_of_TiInitTimer:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _TeTeclat *****************
  3367 ;; Defined at:
  3368 ;;		line 22 in file "TeTeclat.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1
  3382 ;;      Params:         0       0       0
  3383 ;;      Locals:         0       0       0
  3384 ;;      Temps:          3       0       0
  3385 ;;      Totals:         3       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 3
  3389 ;; This function calls:
  3390 ;;		_MsetNovaTecla
  3391 ;;		_SsetNovaTecla
  3392 ;;		_TiGetTics
  3393 ;;		_TiResetTics
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text24
  3400  000D20                     __ptext24:
  3401                           	callstack 0
  3402  000D20                     _TeTeclat:
  3403                           	callstack 27
  3404                           
  3405                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  3406                           
  3407                           ;incstack = 0
  3408  000D20  A083               	btfss	131,0,c	;volatile
  3409  000D22  D003               	goto	u3860
  3410  000D24  6A6A               	clrf	??_TeTeclat^0,c
  3411  000D26  2A6A               	incf	??_TeTeclat^0,f,c
  3412  000D28  D001               	goto	u3868
  3413  000D2A                     u3860:
  3414  000D2A  6A6A               	clrf	??_TeTeclat^0,c
  3415  000D2C                     u3868:
  3416  000D2C  A283               	btfss	131,1,c	;volatile
  3417  000D2E  D002               	goto	u3870
  3418  000D30  0E01               	movlw	1
  3419  000D32  D001               	goto	u3876
  3420  000D34                     u3870:
  3421  000D34  0E00               	movlw	0
  3422  000D36                     u3876:
  3423  000D36  0D02               	mullw	2
  3424  000D38  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  3425  000D3C  A483               	btfss	131,2,c	;volatile
  3426  000D3E  D002               	goto	u3880
  3427  000D40  0E01               	movlw	1
  3428  000D42  D001               	goto	u3886
  3429  000D44                     u3880:
  3430  000D44  0E00               	movlw	0
  3431  000D46                     u3886:
  3432  000D46  0D03               	mullw	3
  3433  000D48  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  3434  000D4C  A683               	btfss	131,3,c	;volatile
  3435  000D4E  D002               	goto	u3890
  3436  000D50  0E01               	movlw	1
  3437  000D52  D001               	goto	u3896
  3438  000D54                     u3890:
  3439  000D54  0E00               	movlw	0
  3440  000D56                     u3896:
  3441  000D56  0D04               	mullw	4
  3442  000D58  50F3               	movf	243,w,c
  3443  000D5A  246C               	addwf	(??_TeTeclat+2)^0,w,c
  3444  000D5C  246B               	addwf	(??_TeTeclat+1)^0,w,c
  3445  000D5E  246A               	addwf	??_TeTeclat^0,w,c
  3446  000D60  6E2B               	movwf	TeTeclat@files^0,c
  3447                           
  3448                           ;TeTeclat.c: 27:  switch(state) {
  3449  000D62  D06F               	goto	l4052
  3450  000D64                     l3978:
  3451                           
  3452                           ;TeTeclat.c: 29:    if (files==0) {
  3453  000D64  502B               	movf	TeTeclat@files^0,w,c
  3454  000D66  A4D8               	btfss	status,2,c
  3455  000D68  D007               	goto	l3986
  3456                           
  3457                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  3458  000D6A  888C               	bsf	140,4,c	;volatile
  3459                           
  3460                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  3461  000D6C  9A8C               	bcf	140,5,c	;volatile
  3462                           
  3463                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  3464  000D6E  9C8C               	bcf	140,6,c	;volatile
  3465                           
  3466                           ;TeTeclat.c: 33:     cols=0;
  3467  000D70  0E00               	movlw	0
  3468  000D72  6E2C               	movwf	TeTeclat@cols^0,c
  3469  000D74                     l3984:
  3470                           
  3471                           ;TeTeclat.c: 34:     state++;
  3472  000D74  2A2D               	incf	TeTeclat@state^0,f,c
  3473                           
  3474                           ;TeTeclat.c: 35:    }
  3475  000D76  0012               	return	
  3476  000D78                     l3986:
  3477  000D78  502B               	movf	TeTeclat@files^0,w,c
  3478  000D7A  B4D8               	btfsc	status,2,c
  3479  000D7C  0012               	return	
  3480                           
  3481                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  3482  000D7E  502E               	movf	_tiTeclat^0,w,c
  3483  000D80  ECA9  F00B         	call	_TiResetTics
  3484  000D84                     l3990:
  3485                           
  3486                           ;TeTeclat.c: 38:     state = 3;
  3487  000D84  0E03               	movlw	3
  3488  000D86  6E2D               	movwf	TeTeclat@state^0,c
  3489  000D88  0012               	return	
  3490  000D8A                     l3992:
  3491                           
  3492                           ;TeTeclat.c: 42:    if (files==0) {
  3493  000D8A  502B               	movf	TeTeclat@files^0,w,c
  3494  000D8C  A4D8               	btfss	status,2,c
  3495  000D8E  D005               	goto	l4000
  3496                           
  3497                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3498  000D90  988C               	bcf	140,4,c	;volatile
  3499                           
  3500                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3501  000D92  8A8C               	bsf	140,5,c	;volatile
  3502                           
  3503                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3504  000D94  9C8C               	bcf	140,6,c	;volatile
  3505                           
  3506                           ;TeTeclat.c: 46:     cols=1;
  3507  000D96  0E01               	movlw	1
  3508  000D98  D7EC               	goto	L1
  3509  000D9A                     l4000:
  3510  000D9A  502B               	movf	TeTeclat@files^0,w,c
  3511  000D9C  B4D8               	btfsc	status,2,c
  3512  000D9E  0012               	return	
  3513                           
  3514                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3515  000DA0  502E               	movf	_tiTeclat^0,w,c
  3516  000DA2  ECA9  F00B         	call	_TiResetTics
  3517  000DA6  D7EE               	goto	l3990
  3518  000DA8                     l4006:
  3519                           
  3520                           ;TeTeclat.c: 55:    if (files==0) {
  3521  000DA8  502B               	movf	TeTeclat@files^0,w,c
  3522  000DAA  A4D8               	btfss	status,2,c
  3523  000DAC  D008               	goto	l4012
  3524                           
  3525                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3526  000DAE  988C               	bcf	140,4,c	;volatile
  3527                           
  3528                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3529  000DB0  9A8C               	bcf	140,5,c	;volatile
  3530                           
  3531                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3532  000DB2  8C8C               	bsf	140,6,c	;volatile
  3533                           
  3534                           ;TeTeclat.c: 59:     cols=2;
  3535  000DB4  0E02               	movlw	2
  3536  000DB6  6E2C               	movwf	TeTeclat@cols^0,c
  3537                           
  3538                           ;TeTeclat.c: 60:     state = 0;
  3539  000DB8  0E00               	movlw	0
  3540  000DBA  6E2D               	movwf	TeTeclat@state^0,c
  3541                           
  3542                           ;TeTeclat.c: 61:    }
  3543  000DBC  0012               	return	
  3544  000DBE                     l4012:
  3545  000DBE  502B               	movf	TeTeclat@files^0,w,c
  3546  000DC0  B4D8               	btfsc	status,2,c
  3547  000DC2  0012               	return	
  3548                           
  3549                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3550  000DC4  502E               	movf	_tiTeclat^0,w,c
  3551  000DC6  ECA9  F00B         	call	_TiResetTics
  3552  000DCA  D7D4               	goto	l3984
  3553  000DCC                     l4018:
  3554                           
  3555                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3556  000DCC  502E               	movf	_tiTeclat^0,w,c
  3557  000DCE  EC3D  F00B         	call	_TiGetTics
  3558  000DD2  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3559  000DD4  0012               	return	
  3560  000DD6  D7CE               	goto	l3984
  3561  000DD8                     l4022:
  3562                           
  3563                           ;TeTeclat.c: 73:    if (files==0) {
  3564  000DD8  502B               	movf	TeTeclat@files^0,w,c
  3565  000DDA  A4D8               	btfss	status,2,c
  3566  000DDC  D003               	goto	l4026
  3567                           
  3568                           ;TeTeclat.c: 74:     state = 1;
  3569  000DDE  0E01               	movlw	1
  3570  000DE0  6E2D               	movwf	TeTeclat@state^0,c
  3571                           
  3572                           ;TeTeclat.c: 75:    }
  3573  000DE2  0012               	return	
  3574  000DE4                     l4026:
  3575  000DE4  502B               	movf	TeTeclat@files^0,w,c
  3576  000DE6  B4D8               	btfsc	status,2,c
  3577  000DE8  0012               	return	
  3578                           
  3579                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3580  000DEA  502B               	movf	TeTeclat@files^0,w,c
  3581  000DEC  0D03               	mullw	3
  3582  000DEE  50F3               	movf	243,w,c
  3583  000DF0  0F4F               	addlw	low (_teclaPremuda+253)
  3584  000DF2  242C               	addwf	TeTeclat@cols^0,w,c
  3585  000DF4  6ED9               	movwf	fsr2l,c
  3586  000DF6  6ADA               	clrf	fsr2h,c
  3587  000DF8  50DF               	movf	indf2,w,c
  3588  000DFA  EC02  F00C         	call	_MsetNovaTecla
  3589                           
  3590                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3591  000DFE  502B               	movf	TeTeclat@files^0,w,c
  3592  000E00  0D03               	mullw	3
  3593  000E02  50F3               	movf	243,w,c
  3594  000E04  0F4F               	addlw	low (_teclaPremuda+253)
  3595  000E06  242C               	addwf	TeTeclat@cols^0,w,c
  3596  000E08  6ED9               	movwf	fsr2l,c
  3597  000E0A  6ADA               	clrf	fsr2h,c
  3598  000E0C  50DF               	movf	indf2,w,c
  3599  000E0E  ECFE  F00B         	call	_SsetNovaTecla
  3600  000E12  D7B0               	goto	l3984
  3601  000E14                     l4032:
  3602                           
  3603                           ;TeTeclat.c: 84:    if (files==0) {
  3604  000E14  502B               	movf	TeTeclat@files^0,w,c
  3605  000E16  A4D8               	btfss	status,2,c
  3606  000E18  0012               	return	
  3607                           
  3608                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3609  000E1A  502E               	movf	_tiTeclat^0,w,c
  3610  000E1C  ECA9  F00B         	call	_TiResetTics
  3611  000E20  D7A9               	goto	l3984
  3612  000E22                     l4038:
  3613                           
  3614                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3615  000E22  502E               	movf	_tiTeclat^0,w,c
  3616  000E24  EC3D  F00B         	call	_TiGetTics
  3617  000E28  D7D4               	goto	L2
  3618  000E2A                     l4042:
  3619                           
  3620                           ;TeTeclat.c: 95:    if (files!=0) {
  3621  000E2A  502B               	movf	TeTeclat@files^0,w,c
  3622  000E2C  B4D8               	btfsc	status,2,c
  3623  000E2E  D003               	goto	l4046
  3624                           
  3625                           ;TeTeclat.c: 96:     state = 5;
  3626  000E30  0E05               	movlw	5
  3627  000E32  6E2D               	movwf	TeTeclat@state^0,c
  3628                           
  3629                           ;TeTeclat.c: 97:    }
  3630  000E34  0012               	return	
  3631  000E36                     l4046:
  3632  000E36  502B               	movf	TeTeclat@files^0,w,c
  3633  000E38  A4D8               	btfss	status,2,c
  3634  000E3A  0012               	return	
  3635                           
  3636                           ;TeTeclat.c: 99:     state = 0;
  3637  000E3C  0E00               	movlw	0
  3638  000E3E  6E2D               	movwf	TeTeclat@state^0,c
  3639  000E40  0012               	return	
  3640  000E42                     l4052:
  3641  000E42  502D               	movf	TeTeclat@state^0,w,c
  3642  000E44  6E6A               	movwf	??_TeTeclat^0,c
  3643  000E46  6A6B               	clrf	(??_TeTeclat+1)^0,c
  3644                           
  3645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3646                           ; Switch size 1, requested type "simple"
  3647                           ; Number of cases is 1, Range of values is 0 to 0
  3648                           ; switch strategies available:
  3649                           ; Name         Instructions Cycles
  3650                           ; simple_byte            4     3 (average)
  3651                           ;	Chosen strategy is simple_byte
  3652  000E48  506B               	movf	(??_TeTeclat+1)^0,w,c
  3653  000E4A  0A00               	xorlw	0	; case 0
  3654  000E4C  A4D8               	btfss	status,2,c
  3655  000E4E  0012               	return	
  3656                           
  3657                           ; Switch size 1, requested type "simple"
  3658                           ; Number of cases is 8, Range of values is 0 to 7
  3659                           ; switch strategies available:
  3660                           ; Name         Instructions Cycles
  3661                           ; simple_byte           25    13 (average)
  3662                           ;	Chosen strategy is simple_byte
  3663  000E50  506A               	movf	??_TeTeclat^0,w,c
  3664  000E52  0A00               	xorlw	0	; case 0
  3665  000E54  B4D8               	btfsc	status,2,c
  3666  000E56  D786               	goto	l3978
  3667  000E58  0A01               	xorlw	1	; case 1
  3668  000E5A  B4D8               	btfsc	status,2,c
  3669  000E5C  D796               	goto	l3992
  3670  000E5E  0A03               	xorlw	3	; case 2
  3671  000E60  B4D8               	btfsc	status,2,c
  3672  000E62  D7A2               	goto	l4006
  3673  000E64  0A01               	xorlw	1	; case 3
  3674  000E66  B4D8               	btfsc	status,2,c
  3675  000E68  D7B1               	goto	l4018
  3676  000E6A  0A07               	xorlw	7	; case 4
  3677  000E6C  B4D8               	btfsc	status,2,c
  3678  000E6E  D7B4               	goto	l4022
  3679  000E70  0A01               	xorlw	1	; case 5
  3680  000E72  B4D8               	btfsc	status,2,c
  3681  000E74  D7CF               	goto	l4032
  3682  000E76  0A03               	xorlw	3	; case 6
  3683  000E78  B4D8               	btfsc	status,2,c
  3684  000E7A  D7D3               	goto	l4038
  3685  000E7C  0A01               	xorlw	1	; case 7
  3686  000E7E  A4D8               	btfss	status,2,c
  3687  000E80  0012               	return	
  3688  000E82  D7D3               	goto	l4042
  3689  000E84                     __end_of_TeTeclat:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _SsetNovaTecla *****************
  3693 ;; Defined at:
  3694 ;;		line 135 in file "Ssms.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  tecla           1    wreg     unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  tecla           1    5[COMRAM] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1
  3708 ;;      Params:         0       0       0
  3709 ;;      Locals:         1       0       0
  3710 ;;      Temps:          0       0       0
  3711 ;;      Totals:         1       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 2
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_TeTeclat
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text25
  3723  0017FC                     __ptext25:
  3724                           	callstack 0
  3725  0017FC                     _SsetNovaTecla:
  3726                           	callstack 27
  3727                           
  3728                           ;incstack = 0
  3729                           ;SsetNovaTecla@tecla stored from wreg
  3730  0017FC  6E63               	movwf	SsetNovaTecla@tecla^0,c
  3731                           
  3732                           ;Ssms.c: 136:     novaTecla = tecla;
  3733  0017FE  C063  F050         	movff	SsetNovaTecla@tecla,_novaTecla
  3734  001802  0012               	return		;funcret
  3735  001804                     __end_of_SsetNovaTecla:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _MsetNovaTecla *****************
  3739 ;; Defined at:
  3740 ;;		line 22 in file "Menu.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  tecla           1    wreg     unsigned char 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  tecla           1    5[COMRAM] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1
  3754 ;;      Params:         0       0       0
  3755 ;;      Locals:         1       0       0
  3756 ;;      Temps:          0       0       0
  3757 ;;      Totals:         1       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 2
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_TeTeclat
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text26
  3769  001804                     __ptext26:
  3770                           	callstack 0
  3771  001804                     _MsetNovaTecla:
  3772                           	callstack 27
  3773                           
  3774                           ;incstack = 0
  3775                           ;MsetNovaTecla@tecla stored from wreg
  3776  001804  6E63               	movwf	MsetNovaTecla@tecla^0,c
  3777                           
  3778                           ;Menu.c: 23:     NovaTecla = tecla;
  3779  001806  C063  F04D         	movff	MsetNovaTecla@tecla,_NovaTecla
  3780  00180A  0012               	return		;funcret
  3781  00180C                     __end_of_MsetNovaTecla:
  3782                           	callstack 0
  3783                           
  3784 ;; *************** function _TeInit *****************
  3785 ;; Defined at:
  3786 ;;		line 18 in file "TeTeclat.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1
  3800 ;;      Params:         0       0       0
  3801 ;;      Locals:         0       0       0
  3802 ;;      Temps:          0       0       0
  3803 ;;      Totals:         0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 3
  3807 ;; This function calls:
  3808 ;;		_TiGetTimer
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text27
  3815  00180C                     __ptext27:
  3816                           	callstack 0
  3817  00180C                     _TeInit:
  3818                           	callstack 27
  3819                           
  3820                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3821                           
  3822                           ;incstack = 0
  3823  00180C  ECBB  F00A         	call	_TiGetTimer	;wreg free
  3824  001810  6E2E               	movwf	_tiTeclat^0,c
  3825  001812  0012               	return		;funcret
  3826  001814                     __end_of_TeInit:
  3827                           	callstack 0
  3828                           
  3829 ;; *************** function _Sinit *****************
  3830 ;; Defined at:
  3831 ;;		line 16 in file "Ssms.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1
  3845 ;;      Params:         0       0       0
  3846 ;;      Locals:         0       0       0
  3847 ;;      Temps:          0       0       0
  3848 ;;      Totals:         0       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 3
  3852 ;; This function calls:
  3853 ;;		_TiGetTimer
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text28
  3860  001814                     __ptext28:
  3861                           	callstack 0
  3862  001814                     _Sinit:
  3863                           	callstack 27
  3864                           
  3865                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3866                           
  3867                           ;incstack = 0
  3868  001814  ECBB  F00A         	call	_TiGetTimer	;wreg free
  3869  001818  6E4F               	movwf	_timerSMS^0,c
  3870  00181A  0012               	return		;funcret
  3871  00181C                     __end_of_Sinit:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _SMotor *****************
  3875 ;; Defined at:
  3876 ;;		line 20 in file "Ssms.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1
  3890 ;;      Params:         0       0       0
  3891 ;;      Locals:         0       0       0
  3892 ;;      Temps:          2       0       0
  3893 ;;      Totals:         2       0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 3
  3897 ;; This function calls:
  3898 ;;		_MNovaLletra
  3899 ;;		_TiGetTics
  3900 ;;		_TiResetTics
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text29
  3907  000992                     __ptext29:
  3908                           	callstack 0
  3909  000992                     _SMotor:
  3910                           	callstack 27
  3911                           
  3912                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3913                           
  3914                           ;incstack = 0
  3915  000992  D0EA               	goto	l3408
  3916  000994                     l3242:
  3917                           
  3918                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3919  000994  2850               	incf	_novaTecla^0,w,c
  3920  000996  A4D8               	btfss	status,2,c
  3921  000998  A075               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3922  00099A  D006               	goto	l3250
  3923                           
  3924                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3925  00099C  504F               	movf	_timerSMS^0,w,c
  3926  00099E  ECA9  F00B         	call	_TiResetTics
  3927                           
  3928                           ;Ssms.c: 27:     state = 3;
  3929  0009A2  0E03               	movlw	3
  3930  0009A4  6E2F               	movwf	SMotor@state^0,c
  3931                           
  3932                           ;Ssms.c: 28:    }
  3933  0009A6  0012               	return	
  3934  0009A8                     l3250:
  3935  0009A8  2850               	incf	_novaTecla^0,w,c
  3936  0009AA  A4D8               	btfss	status,2,c
  3937  0009AC  0012               	return	
  3938  0009AE  504F               	movf	_timerSMS^0,w,c
  3939  0009B0  EC3D  F00B         	call	_TiGetTics
  3940  0009B4  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3941  0009B6  0012               	return	
  3942  0009B8  0E5A               	movlw	90
  3943  0009BA  5C63               	subwf	?_TiGetTics^0,w,c
  3944  0009BC  0E02               	movlw	2
  3945  0009BE  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3946  0009C0  A0D8               	btfss	status,0,c
  3947  0009C2  0012               	return	
  3948  0009C4  2851               	incf	_lletraASCII^0,w,c
  3949  0009C6  B4D8               	btfsc	status,2,c
  3950  0009C8  0012               	return	
  3951  0009CA  A075               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3952  0009CC  0012               	return	
  3953                           
  3954                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3955  0009CE  5051               	movf	_lletraASCII^0,w,c
  3956  0009D0  EC0E  F00C         	call	_MNovaLletra
  3957                           
  3958                           ;Ssms.c: 31:     lletraASCII = -1;
  3959  0009D4  6851               	setf	_lletraASCII^0,c
  3960                           
  3961                           ;Ssms.c: 32:     ultimaTecla = -1;
  3962  0009D6  684E               	setf	_ultimaTecla^0,c
  3963  0009D8                     l3264:
  3964                           
  3965                           ;Ssms.c: 33:     state = 0;
  3966  0009D8  0E00               	movlw	0
  3967  0009DA  6E2F               	movwf	SMotor@state^0,c
  3968  0009DC  0012               	return	
  3969  0009DE                     l3266:
  3970                           
  3971                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3972  0009DE  504E               	movf	_ultimaTecla^0,w,c
  3973  0009E0  1850               	xorwf	_novaTecla^0,w,c
  3974  0009E2  A4D8               	btfss	status,2,c
  3975  0009E4  D018               	goto	l3282
  3976  0009E6  504F               	movf	_timerSMS^0,w,c
  3977  0009E8  EC3D  F00B         	call	_TiGetTics
  3978  0009EC  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3979  0009EE  D006               	goto	u2680
  3980  0009F0  0E5A               	movlw	90
  3981  0009F2  5C63               	subwf	?_TiGetTics^0,w,c
  3982  0009F4  0E02               	movlw	2
  3983  0009F6  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3984  0009F8  B0D8               	btfsc	status,0,c
  3985  0009FA  D00D               	goto	l3282
  3986  0009FC                     u2680:
  3987                           
  3988                           ;Ssms.c: 38:     novaTecla = -1;
  3989  0009FC  6850               	setf	_novaTecla^0,c
  3990                           
  3991                           ;Ssms.c: 39:     sumaPulsacions++;
  3992  0009FE  2A30               	incf	_sumaPulsacions^0,f,c
  3993                           
  3994                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  3995  000A00  0E30               	movlw	48
  3996  000A02  1851               	xorwf	_lletraASCII^0,w,c
  3997  000A04  B4D8               	btfsc	status,2,c
  3998  000A06  D004               	goto	l3280
  3999  000A08  0E20               	movlw	32
  4000  000A0A  1851               	xorwf	_lletraASCII^0,w,c
  4001  000A0C  A4D8               	btfss	status,2,c
  4002                           
  4003                           ;Ssms.c: 41:       lletraASCII++;
  4004  000A0E  2A51               	incf	_lletraASCII^0,f,c
  4005  000A10                     l3280:
  4006                           
  4007                           ;Ssms.c: 43:     state = 2;
  4008  000A10  0E02               	movlw	2
  4009  000A12  6E2F               	movwf	SMotor@state^0,c
  4010                           
  4011                           ;Ssms.c: 44:    }
  4012  000A14  0012               	return	
  4013  000A16                     l3282:
  4014  000A16  2850               	incf	_novaTecla^0,w,c
  4015  000A18  B4D8               	btfsc	status,2,c
  4016  000A1A  0012               	return	
  4017  000A1C  504E               	movf	_ultimaTecla^0,w,c
  4018  000A1E  1850               	xorwf	_novaTecla^0,w,c
  4019  000A20  B4D8               	btfsc	status,2,c
  4020  000A22  0012               	return	
  4021                           
  4022                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  4023  000A24  5051               	movf	_lletraASCII^0,w,c
  4024  000A26  EC0E  F00C         	call	_MNovaLletra
  4025                           
  4026                           ;Ssms.c: 47:     if(novaTecla == 0){
  4027  000A2A  5050               	movf	_novaTecla^0,w,c
  4028  000A2C  A4D8               	btfss	status,2,c
  4029  000A2E  D007               	goto	l3296
  4030                           
  4031                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  4032  000A30  0430               	decf	_sumaPulsacions^0,w,c
  4033  000A32  A4D8               	btfss	status,2,c
  4034  000A34  D002               	goto	l3294
  4035  000A36  0E30               	movlw	48
  4036  000A38  D007               	goto	L3
  4037  000A3A                     l3294:
  4038  000A3A  0E20               	movlw	32
  4039  000A3C  D005               	goto	L3
  4040  000A3E                     l3296:
  4041                           
  4042                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  4043  000A3E  5050               	movf	_novaTecla^0,w,c
  4044  000A40  0F3D               	addlw	low (_lletraInici+254)
  4045  000A42  6ED9               	movwf	fsr2l,c
  4046  000A44  6ADA               	clrf	fsr2h,c
  4047  000A46  50DF               	movf	indf2,w,c
  4048  000A48                     L3:
  4049  000A48  6E51               	movwf	_lletraASCII^0,c
  4050                           
  4051                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  4052  000A4A  C050  F04E         	movff	_novaTecla,_ultimaTecla
  4053                           
  4054                           ;Ssms.c: 54:     sumaPulsacions = 0;
  4055  000A4E  0E00               	movlw	0
  4056  000A50  6E30               	movwf	_sumaPulsacions^0,c
  4057  000A52                     l3302:
  4058                           
  4059                           ;Ssms.c: 55:     novaTecla = -1;
  4060  000A52  6850               	setf	_novaTecla^0,c
  4061  000A54  D7C1               	goto	l3264
  4062  000A56                     l3306:
  4063                           
  4064                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  4065  000A56  0E07               	movlw	7
  4066  000A58  184E               	xorwf	_ultimaTecla^0,w,c
  4067  000A5A  B4D8               	btfsc	status,2,c
  4068  000A5C  D00A               	goto	l3314
  4069  000A5E  0E09               	movlw	9
  4070  000A60  184E               	xorwf	_ultimaTecla^0,w,c
  4071  000A62  B4D8               	btfsc	status,2,c
  4072  000A64  D006               	goto	l3314
  4073  000A66  504E               	movf	_ultimaTecla^0,w,c
  4074  000A68  B4D8               	btfsc	status,2,c
  4075  000A6A  D003               	goto	l3314
  4076                           
  4077                           ;Ssms.c: 61:     state = 5;
  4078  000A6C  0E05               	movlw	5
  4079  000A6E  6E2F               	movwf	SMotor@state^0,c
  4080                           
  4081                           ;Ssms.c: 62:    }
  4082  000A70  0012               	return	
  4083  000A72                     l3314:
  4084  000A72  0E07               	movlw	7
  4085  000A74  184E               	xorwf	_ultimaTecla^0,w,c
  4086  000A76  B4D8               	btfsc	status,2,c
  4087  000A78  D004               	goto	u2790
  4088  000A7A  0E09               	movlw	9
  4089  000A7C  184E               	xorwf	_ultimaTecla^0,w,c
  4090  000A7E  A4D8               	btfss	status,2,c
  4091  000A80  D003               	goto	l3320
  4092  000A82                     u2790:
  4093                           
  4094                           ;Ssms.c: 64:     state = 6;
  4095  000A82  0E06               	movlw	6
  4096  000A84  6E2F               	movwf	SMotor@state^0,c
  4097                           
  4098                           ;Ssms.c: 65:    }
  4099  000A86  0012               	return	
  4100  000A88                     l3320:
  4101  000A88  504E               	movf	_ultimaTecla^0,w,c
  4102  000A8A  A4D8               	btfss	status,2,c
  4103  000A8C  0012               	return	
  4104                           
  4105                           ;Ssms.c: 67:     state = 7;
  4106  000A8E  0E07               	movlw	7
  4107  000A90  6E2F               	movwf	SMotor@state^0,c
  4108  000A92  0012               	return	
  4109  000A94                     l3324:
  4110                           
  4111                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  4112  000A94  5050               	movf	_novaTecla^0,w,c
  4113  000A96  0A80               	xorlw	128
  4114  000A98  0F7E               	addlw	-130
  4115  000A9A  B0D8               	btfsc	status,0,c
  4116  000A9C  D003               	goto	u2820
  4117  000A9E  5050               	movf	_novaTecla^0,w,c
  4118  000AA0  A4D8               	btfss	status,2,c
  4119  000AA2  D008               	goto	l3332
  4120  000AA4                     u2820:
  4121  000AA4  5050               	movf	_novaTecla^0,w,c
  4122  000AA6  0A80               	xorlw	128
  4123  000AA8  0F76               	addlw	-138
  4124  000AAA  B0D8               	btfsc	status,0,c
  4125  000AAC  D003               	goto	l3332
  4126                           
  4127                           ;Ssms.c: 72:     state = 1;
  4128  000AAE  0E01               	movlw	1
  4129  000AB0  6E2F               	movwf	SMotor@state^0,c
  4130                           
  4131                           ;Ssms.c: 73:    }
  4132  000AB2  0012               	return	
  4133  000AB4                     l3332:
  4134  000AB4  5050               	movf	_novaTecla^0,w,c
  4135  000AB6  0A80               	xorlw	128
  4136  000AB8  0F7E               	addlw	-130
  4137  000ABA  B0D8               	btfsc	status,0,c
  4138  000ABC  D008               	goto	l3342
  4139  000ABE  2851               	incf	_lletraASCII^0,w,c
  4140  000AC0  A4D8               	btfss	status,2,c
  4141  000AC2  D005               	goto	l3342
  4142                           
  4143                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  4144  000AC4  5050               	movf	_novaTecla^0,w,c
  4145  000AC6  0F30               	addlw	48
  4146  000AC8  EC0E  F00C         	call	_MNovaLletra
  4147  000ACC  D7C2               	goto	l3302
  4148  000ACE                     l3342:
  4149  000ACE  5050               	movf	_novaTecla^0,w,c
  4150  000AD0  0A80               	xorlw	128
  4151  000AD2  0F7E               	addlw	-130
  4152  000AD4  B0D8               	btfsc	status,0,c
  4153  000AD6  0012               	return	
  4154  000AD8  2851               	incf	_lletraASCII^0,w,c
  4155  000ADA  B4D8               	btfsc	status,2,c
  4156  000ADC  0012               	return	
  4157                           
  4158                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  4159  000ADE  5051               	movf	_lletraASCII^0,w,c
  4160  000AE0  EC0E  F00C         	call	_MNovaLletra
  4161                           
  4162                           ;Ssms.c: 81:     lletraASCII = -1;
  4163  000AE4  6851               	setf	_lletraASCII^0,c
  4164                           
  4165                           ;Ssms.c: 82:     state = 4;
  4166  000AE6  0E04               	movlw	4
  4167  000AE8  6E2F               	movwf	SMotor@state^0,c
  4168  000AEA  0012               	return	
  4169  000AEC                     l3352:
  4170                           
  4171                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  4172  000AEC  5050               	movf	_novaTecla^0,w,c
  4173  000AEE  0F30               	addlw	48
  4174  000AF0  EC0E  F00C         	call	_MNovaLletra
  4175  000AF4  D7AE               	goto	l3302
  4176  000AF6                     l3358:
  4177                           
  4178                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  4179  000AF6  0E04               	movlw	4
  4180  000AF8  1830               	xorwf	_sumaPulsacions^0,w,c
  4181  000AFA  A4D8               	btfss	status,2,c
  4182  000AFC  D009               	goto	l3366
  4183  000AFE                     u2880:
  4184                           
  4185                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  4186  000AFE  504E               	movf	_ultimaTecla^0,w,c
  4187  000B00  0F3D               	addlw	low (_lletraInici+254)
  4188  000B02  6ED9               	movwf	fsr2l,c
  4189  000B04  6ADA               	clrf	fsr2h,c
  4190  000B06  50DF               	movf	indf2,w,c
  4191  000B08  6E51               	movwf	_lletraASCII^0,c
  4192                           
  4193                           ;Ssms.c: 93:     sumaPulsacions = 0;
  4194  000B0A  0E00               	movlw	0
  4195  000B0C  6E30               	movwf	_sumaPulsacions^0,c
  4196  000B0E  D764               	goto	l3264
  4197  000B10                     l3366:
  4198  000B10  0E03               	movlw	3
  4199  000B12  1830               	xorwf	_sumaPulsacions^0,w,c
  4200  000B14  A4D8               	btfss	status,2,c
  4201  000B16  D004               	goto	l3372
  4202  000B18                     u2890:
  4203                           
  4204                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  4205  000B18  504E               	movf	_ultimaTecla^0,w,c
  4206  000B1A  0F30               	addlw	48
  4207  000B1C  6E51               	movwf	_lletraASCII^0,c
  4208  000B1E  D75C               	goto	l3264
  4209  000B20                     l3372:
  4210  000B20  0E03               	movlw	3
  4211  000B22                     L4:
  4212  000B22  6030               	cpfslt	_sumaPulsacions^0,c
  4213  000B24  0012               	return	
  4214  000B26  D758               	goto	l3264
  4215  000B28                     l3376:
  4216                           
  4217                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  4218  000B28  0E04               	movlw	4
  4219  000B2A  1830               	xorwf	_sumaPulsacions^0,w,c
  4220  000B2C  B4D8               	btfsc	status,2,c
  4221  000B2E  D7F4               	goto	u2890
  4222  000B30  0E05               	movlw	5
  4223  000B32  1830               	xorwf	_sumaPulsacions^0,w,c
  4224  000B34  B4D8               	btfsc	status,2,c
  4225  000B36  D7E3               	goto	u2880
  4226  000B38  0E04               	movlw	4
  4227  000B3A  D7F3               	goto	L4
  4228  000B3C                     l3394:
  4229                           
  4230                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  4231  000B3C  0E02               	movlw	2
  4232  000B3E  1830               	xorwf	_sumaPulsacions^0,w,c
  4233  000B40  A4D8               	btfss	status,2,c
  4234  000B42  D005               	goto	l3398
  4235                           
  4236                           ;Ssms.c: 120:     lletraASCII = ' ';
  4237  000B44  0E20               	movlw	32
  4238  000B46  6E51               	movwf	_lletraASCII^0,c
  4239                           
  4240                           ;Ssms.c: 121:     state = 0;
  4241  000B48  0E00               	movlw	0
  4242  000B4A  6E2F               	movwf	SMotor@state^0,c
  4243                           
  4244                           ;Ssms.c: 122:    }
  4245  000B4C  0012               	return	
  4246  000B4E                     l3398:
  4247  000B4E  0E03               	movlw	3
  4248  000B50  1830               	xorwf	_sumaPulsacions^0,w,c
  4249  000B52  A4D8               	btfss	status,2,c
  4250  000B54  D007               	goto	l3402
  4251                           
  4252                           ;Ssms.c: 124:     lletraASCII = '0';
  4253  000B56  0E30               	movlw	48
  4254  000B58  6E51               	movwf	_lletraASCII^0,c
  4255                           
  4256                           ;Ssms.c: 125:     sumaPulsacions = 0;
  4257  000B5A  0E00               	movlw	0
  4258  000B5C  6E30               	movwf	_sumaPulsacions^0,c
  4259                           
  4260                           ;Ssms.c: 126:     state = 0;
  4261  000B5E  0E00               	movlw	0
  4262  000B60  6E2F               	movwf	SMotor@state^0,c
  4263                           
  4264                           ;Ssms.c: 127:    }
  4265  000B62  0012               	return	
  4266  000B64                     l3402:
  4267  000B64  0E02               	movlw	2
  4268  000B66  D7DD               	goto	L4
  4269  000B68                     l3408:
  4270  000B68  502F               	movf	SMotor@state^0,w,c
  4271  000B6A  6E6A               	movwf	??_SMotor^0,c
  4272  000B6C  6A6B               	clrf	(??_SMotor+1)^0,c
  4273                           
  4274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4275                           ; Switch size 1, requested type "simple"
  4276                           ; Number of cases is 1, Range of values is 0 to 0
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte            4     3 (average)
  4280                           ;	Chosen strategy is simple_byte
  4281  000B6E  506B               	movf	(??_SMotor+1)^0,w,c
  4282  000B70  0A00               	xorlw	0	; case 0
  4283  000B72  A4D8               	btfss	status,2,c
  4284  000B74  0012               	return	
  4285                           
  4286                           ; Switch size 1, requested type "simple"
  4287                           ; Number of cases is 8, Range of values is 0 to 7
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte           25    13 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  000B76  506A               	movf	??_SMotor^0,w,c
  4293  000B78  0A00               	xorlw	0	; case 0
  4294  000B7A  B4D8               	btfsc	status,2,c
  4295  000B7C  D70B               	goto	l3242
  4296  000B7E  0A01               	xorlw	1	; case 1
  4297  000B80  B4D8               	btfsc	status,2,c
  4298  000B82  D72D               	goto	l3266
  4299  000B84  0A03               	xorlw	3	; case 2
  4300  000B86  B4D8               	btfsc	status,2,c
  4301  000B88  D766               	goto	l3306
  4302  000B8A  0A01               	xorlw	1	; case 3
  4303  000B8C  B4D8               	btfsc	status,2,c
  4304  000B8E  D782               	goto	l3324
  4305  000B90  0A07               	xorlw	7	; case 4
  4306  000B92  B4D8               	btfsc	status,2,c
  4307  000B94  D7AB               	goto	l3352
  4308  000B96  0A01               	xorlw	1	; case 5
  4309  000B98  B4D8               	btfsc	status,2,c
  4310  000B9A  D7AD               	goto	l3358
  4311  000B9C  0A03               	xorlw	3	; case 6
  4312  000B9E  B4D8               	btfsc	status,2,c
  4313  000BA0  D7C3               	goto	l3376
  4314  000BA2  0A01               	xorlw	1	; case 7
  4315  000BA4  A4D8               	btfss	status,2,c
  4316  000BA6  0012               	return	
  4317  000BA8  D7C9               	goto	l3394
  4318  000BAA                     __end_of_SMotor:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _MNovaLletra *****************
  4322 ;; Defined at:
  4323 ;;		line 26 in file "Menu.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  lletra          1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  lletra          1    5[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1
  4337 ;;      Params:         0       0       0
  4338 ;;      Locals:         1       0       0
  4339 ;;      Temps:          0       0       0
  4340 ;;      Totals:         1       0       0
  4341 ;;Total ram usage:        1 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 2
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_SMotor
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text30
  4352  00181C                     __ptext30:
  4353                           	callstack 0
  4354  00181C                     _MNovaLletra:
  4355                           	callstack 27
  4356                           
  4357                           ;incstack = 0
  4358                           ;MNovaLletra@lletra stored from wreg
  4359  00181C  6E63               	movwf	MNovaLletra@lletra^0,c
  4360                           
  4361                           ;Menu.c: 27:     novaLletra = lletra;
  4362  00181E  C063  F04C         	movff	MNovaLletra@lletra,_novaLletra
  4363  001822  0012               	return		;funcret
  4364  001824                     __end_of_MNovaLletra:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function _Minit *****************
  4368 ;; Defined at:
  4369 ;;		line 19 in file "Menu.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1
  4383 ;;      Params:         0       0       0
  4384 ;;      Locals:         0       0       0
  4385 ;;      Temps:          0       0       0
  4386 ;;      Totals:         0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 3
  4390 ;; This function calls:
  4391 ;;		_TiGetTimer
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text31
  4398  001824                     __ptext31:
  4399                           	callstack 0
  4400  001824                     _Minit:
  4401                           	callstack 27
  4402                           
  4403                           ;Menu.c: 20:     timerMenu = TiGetTimer();
  4404                           
  4405                           ;incstack = 0
  4406  001824  ECBB  F00A         	call	_TiGetTimer	;wreg free
  4407  001828  6E28               	movwf	_timerMenu^0,c
  4408  00182A  0012               	return		;funcret
  4409  00182C                     __end_of_Minit:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _LcLCD *****************
  4413 ;; Defined at:
  4414 ;;		line 244 in file "LcTLCD.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1
  4428 ;;      Params:         0       0       0
  4429 ;;      Locals:         0       0       0
  4430 ;;      Temps:          0       0       0
  4431 ;;      Totals:         0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 6
  4435 ;; This function calls:
  4436 ;;		_LcPutChar
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text32
  4443  0012FE                     __ptext32:
  4444                           	callstack 0
  4445  0012FE                     _LcLCD:
  4446                           	callstack 24
  4447                           
  4448                           ;LcTLCD.c: 245:     if(nou_s == 1){
  4449                           
  4450                           ;incstack = 0
  4451  0012FE  A275               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4452  001300  0012               	return	
  4453                           
  4454                           ;LcTLCD.c: 246:         LcPutChar(*s_ptr);
  4455  001302  C00C  FFF6         	movff	_s_ptr,tblptrl
  4456  001306  C00D  FFF7         	movff	_s_ptr+1,tblptrh
  4457  00130A  6AF8               	clrf	tblptru,c
  4458  00130C  0E01               	movlw	(high __ramtop+-1)
  4459  00130E  64F7               	cpfsgt	tblptrh,c
  4460  001310  D003               	bra	u2547
  4461  001312  0008               	tblrd		*
  4462  001314  50F5               	movf	tablat,w,c
  4463  001316  D005               	bra	u2540
  4464  001318                     u2547:
  4465  001318  CFF6 FFE1          	movff	tblptrl,fsr1l
  4466  00131C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4467  001320  50E7               	movf	indf1,w,c
  4468  001322                     u2540:
  4469  001322  EC32  F00A         	call	_LcPutChar
  4470                           
  4471                           ;LcTLCD.c: 247:         s_ptr++;
  4472  001326  4A0C               	infsnz	_s_ptr^0,f,c
  4473  001328  2A0D               	incf	(_s_ptr+1)^0,f,c
  4474                           
  4475                           ;LcTLCD.c: 248:         if(*s_ptr == '\0'){
  4476  00132A  C00C  FFF6         	movff	_s_ptr,tblptrl
  4477  00132E  C00D  FFF7         	movff	_s_ptr+1,tblptrh
  4478  001332  6AF8               	clrf	tblptru,c
  4479  001334  0E01               	movlw	(high __ramtop+-1)
  4480  001336  64F7               	cpfsgt	tblptrh,c
  4481  001338  D003               	bra	u2557
  4482  00133A  0008               	tblrd		*
  4483  00133C  50F5               	movf	tablat,w,c
  4484  00133E  D005               	bra	u2550
  4485  001340                     u2557:
  4486  001340  CFF6 FFE1          	movff	tblptrl,fsr1l
  4487  001344  CFF7 FFE2          	movff	tblptrh,fsr1h
  4488  001348  50E7               	movf	indf1,w,c
  4489  00134A                     u2550:
  4490  00134A  0900               	iorlw	0
  4491  00134C  A4D8               	btfss	status,2,c
  4492  00134E  0012               	return	
  4493                           
  4494                           ;LcTLCD.c: 249:             nou_s = 0;
  4495  001350  9275               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4496                           
  4497                           ;LcTLCD.c: 250:             s_ptr=0;
  4498  001352  0E00               	movlw	0
  4499  001354  6E0C               	movwf	_s_ptr^0,c
  4500  001356  0E00               	movlw	0
  4501  001358  6E0D               	movwf	(_s_ptr+1)^0,c
  4502  00135A  0012               	return		;funcret
  4503  00135C                     __end_of_LcLCD:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _LcInit *****************
  4507 ;; Defined at:
  4508 ;;		line 41 in file "LcTLCD.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  rows            1    wreg     unsigned char 
  4511 ;;  columns         1   16[COMRAM] unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  rows            1   17[COMRAM] unsigned char 
  4514 ;;  i               2   18[COMRAM] int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1
  4524 ;;      Params:         1       0       0
  4525 ;;      Locals:         3       0       0
  4526 ;;      Temps:          0       0       0
  4527 ;;      Totals:         4       0       0
  4528 ;;Total ram usage:        4 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 5
  4531 ;; This function calls:
  4532 ;;		_CantaIR
  4533 ;;		_EscriuPrimeraOrdre
  4534 ;;		_Espera
  4535 ;;		_LcCursorOff
  4536 ;;		_TiGetTimer
  4537 ;;		_WaitForBusy
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text33
  4544  000F70                     __ptext33:
  4545                           	callstack 0
  4546  000F70                     _LcInit:
  4547                           	callstack 25
  4548                           
  4549                           ;incstack = 0
  4550                           ;LcInit@rows stored from wreg
  4551  000F70  6E6F               	movwf	LcInit@rows^0,c
  4552                           
  4553                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4554  000F72  ECBB  F00A         	call	_TiGetTimer	;wreg free
  4555  000F76  6E31               	movwf	_Timer^0,c
  4556                           
  4557                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4558  000F78  C06F  F035         	movff	LcInit@rows,_Rows
  4559  000F7C  C06E  F034         	movff	LcInit@columns,_Columns
  4560                           
  4561                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4562  000F80  0E00               	movlw	0
  4563  000F82  6E32               	movwf	_ColumnAct^0,c
  4564  000F84  C032  F033         	movff	_ColumnAct,_RowAct
  4565                           
  4566                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4567  000F88  9894               	bcf	148,4,c	;volatile
  4568  000F8A  9E95               	bcf	149,7,c	;volatile
  4569  000F8C  9A94               	bcf	148,5,c	;volatile
  4570                           
  4571                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4572  000F8E  0E00               	movlw	0
  4573  000F90  6E71               	movwf	(LcInit@i+1)^0,c
  4574  000F92  0E00               	movlw	0
  4575  000F94  6E70               	movwf	LcInit@i^0,c
  4576  000F96                     l3150:
  4577                           
  4578                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4579  000F96  0E00               	movlw	0
  4580  000F98  6E6B               	movwf	(Espera@ms+1)^0,c
  4581  000F9A  0E64               	movlw	100
  4582  000F9C  6E6A               	movwf	Espera@ms^0,c
  4583  000F9E  5031               	movf	_Timer^0,w,c
  4584  000FA0  EC77  F00B         	call	_Espera
  4585                           
  4586                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4587  000FA4  0E03               	movlw	3
  4588  000FA6  ECDA  F008         	call	_EscriuPrimeraOrdre
  4589                           
  4590                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4591  000FAA  0E00               	movlw	0
  4592  000FAC  6E6B               	movwf	(Espera@ms+1)^0,c
  4593  000FAE  0E05               	movlw	5
  4594  000FB0  6E6A               	movwf	Espera@ms^0,c
  4595  000FB2  5031               	movf	_Timer^0,w,c
  4596  000FB4  EC77  F00B         	call	_Espera
  4597                           
  4598                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4599  000FB8  0E03               	movlw	3
  4600  000FBA  ECDA  F008         	call	_EscriuPrimeraOrdre
  4601                           
  4602                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4603  000FBE  0E00               	movlw	0
  4604  000FC0  6E6B               	movwf	(Espera@ms+1)^0,c
  4605  000FC2  0E01               	movlw	1
  4606  000FC4  6E6A               	movwf	Espera@ms^0,c
  4607  000FC6  5031               	movf	_Timer^0,w,c
  4608  000FC8  EC77  F00B         	call	_Espera
  4609                           
  4610                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4611  000FCC  0E03               	movlw	3
  4612  000FCE  ECDA  F008         	call	_EscriuPrimeraOrdre
  4613                           
  4614                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4615  000FD2  0E00               	movlw	0
  4616  000FD4  6E6B               	movwf	(Espera@ms+1)^0,c
  4617  000FD6  0E01               	movlw	1
  4618  000FD8  6E6A               	movwf	Espera@ms^0,c
  4619  000FDA  5031               	movf	_Timer^0,w,c
  4620  000FDC  EC77  F00B         	call	_Espera
  4621                           
  4622                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4623  000FE0  0E02               	movlw	2
  4624  000FE2  ECDA  F008         	call	_EscriuPrimeraOrdre
  4625                           
  4626                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4627  000FE6  0E00               	movlw	0
  4628  000FE8  6E6B               	movwf	(Espera@ms+1)^0,c
  4629  000FEA  0E04               	movlw	4
  4630  000FEC  6E6A               	movwf	Espera@ms^0,c
  4631  000FEE  5031               	movf	_Timer^0,w,c
  4632  000FF0  EC77  F00B         	call	_Espera
  4633                           
  4634                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4635  000FF4  0E28               	movlw	40
  4636  000FF6  EC0D  F00B         	call	_CantaIR
  4637                           
  4638                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4639  000FFA  EC7E  F00A         	call	_WaitForBusy	;wreg free
  4640  000FFE  0E08               	movlw	8
  4641  001000  EC0D  F00B         	call	_CantaIR
  4642                           
  4643                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4644  001004  EC7E  F00A         	call	_WaitForBusy	;wreg free
  4645  001008  0E01               	movlw	1
  4646  00100A  EC0D  F00B         	call	_CantaIR
  4647                           
  4648                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4649  00100E  0E00               	movlw	0
  4650  001010  6E6B               	movwf	(Espera@ms+1)^0,c
  4651  001012  0E03               	movlw	3
  4652  001014  6E6A               	movwf	Espera@ms^0,c
  4653  001016  5031               	movf	_Timer^0,w,c
  4654  001018  EC77  F00B         	call	_Espera
  4655                           
  4656                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4657  00101C  EC7E  F00A         	call	_WaitForBusy	;wreg free
  4658  001020  0E06               	movlw	6
  4659  001022  EC0D  F00B         	call	_CantaIR
  4660                           
  4661                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4662  001026  EC7E  F00A         	call	_WaitForBusy	;wreg free
  4663  00102A  0E0F               	movlw	15
  4664  00102C  EC0D  F00B         	call	_CantaIR
  4665                           
  4666                           ;LcTLCD.c: 74:  }
  4667  001030  4A70               	infsnz	LcInit@i^0,f,c
  4668  001032  2A71               	incf	(LcInit@i+1)^0,f,c
  4669  001034  BE71               	btfsc	(LcInit@i+1)^0,7,c
  4670  001036  D7AF               	goto	l3150
  4671  001038  5071               	movf	(LcInit@i+1)^0,w,c
  4672  00103A  E104               	bnz	u2520
  4673  00103C  0E02               	movlw	2
  4674  00103E  5C70               	subwf	LcInit@i^0,w,c
  4675  001040  A0D8               	btfss	status,0,c
  4676  001042  D7A9               	goto	l3150
  4677  001044                     u2520:
  4678                           
  4679                           ;LcTLCD.c: 79:     LcCursorOff();
  4680  001044  ECE4  F00B         	call	_LcCursorOff	;wreg free
  4681  001048  0012               	return		;funcret
  4682  00104A                     __end_of_LcInit:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _LcCursorOff *****************
  4686 ;; Defined at:
  4687 ;;		line 97 in file "LcTLCD.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1
  4701 ;;      Params:         0       0       0
  4702 ;;      Locals:         0       0       0
  4703 ;;      Temps:          0       0       0
  4704 ;;      Totals:         0       0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; Hardware stack levels required when called: 4
  4708 ;; This function calls:
  4709 ;;		_CantaIR
  4710 ;;		_WaitForBusy
  4711 ;; This function is called by:
  4712 ;;		_LcInit
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text34
  4717  0017C8                     __ptext34:
  4718                           	callstack 0
  4719  0017C8                     _LcCursorOff:
  4720                           	callstack 25
  4721                           
  4722                           ;LcTLCD.c: 100:  WaitForBusy();
  4723                           
  4724                           ;incstack = 0
  4725  0017C8  EC7E  F00A         	call	_WaitForBusy	;wreg free
  4726                           
  4727                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4728  0017CC  0E0C               	movlw	12
  4729  0017CE  EC0D  F00B         	call	_CantaIR
  4730  0017D2  0012               	return		;funcret
  4731  0017D4                     __end_of_LcCursorOff:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _EscriuPrimeraOrdre *****************
  4735 ;; Defined at:
  4736 ;;		line 228 in file "LcTLCD.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  ordre           1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  ordre           1    6[COMRAM] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1
  4750 ;;      Params:         0       0       0
  4751 ;;      Locals:         1       0       0
  4752 ;;      Temps:          1       0       0
  4753 ;;      Totals:         2       0       0
  4754 ;;Total ram usage:        2 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 2
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_LcInit
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text35
  4765  0011B4                     __ptext35:
  4766                           	callstack 0
  4767  0011B4                     _EscriuPrimeraOrdre:
  4768                           	callstack 27
  4769                           
  4770                           ;incstack = 0
  4771                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4772  0011B4  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4773                           
  4774                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4775  0011B6  9694               	bcf	148,3,c	;volatile
  4776  0011B8  9494               	bcf	148,2,c	;volatile
  4777  0011BA  9294               	bcf	148,1,c	;volatile
  4778  0011BC  9094               	bcf	148,0,c	;volatile
  4779  0011BE  9A8B               	bcf	139,5,c	;volatile
  4780  0011C0  9E8C               	bcf	140,7,c	;volatile
  4781                           
  4782                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4783  0011C2  888B               	bsf	139,4,c	;volatile
  4784  0011C4  888B               	bsf	139,4,c	;volatile
  4785                           
  4786                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4787  0011C6  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4788  0011C8  D003               	goto	u230
  4789  0011CA  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4790  0011CC  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4791  0011CE  D001               	goto	u248
  4792  0011D0                     u230:
  4793  0011D0  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4794  0011D2                     u248:
  4795  0011D2  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4796  0011D4  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4797  0011D6  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4798  0011D8  508B               	movf	139,w,c	;volatile
  4799  0011DA  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4800  0011DC  0BF7               	andlw	-9
  4801  0011DE  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4802  0011E0  6E8B               	movwf	139,c	;volatile
  4803                           
  4804                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4805  0011E2  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4806  0011E4  D003               	goto	u250
  4807  0011E6  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4808  0011E8  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4809  0011EA  D001               	goto	u268
  4810  0011EC                     u250:
  4811  0011EC  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4812  0011EE                     u268:
  4813  0011EE  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4814  0011F0  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4815  0011F2  508B               	movf	139,w,c	;volatile
  4816  0011F4  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4817  0011F6  0BFB               	andlw	-5
  4818  0011F8  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4819  0011FA  6E8B               	movwf	139,c	;volatile
  4820                           
  4821                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4822  0011FC  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4823  0011FE  D003               	goto	u270
  4824  001200  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4825  001202  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4826  001204  D001               	goto	u288
  4827  001206                     u270:
  4828  001206  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4829  001208                     u288:
  4830  001208  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4831  00120A  508B               	movf	139,w,c	;volatile
  4832  00120C  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4833  00120E  0BFD               	andlw	-3
  4834  001210  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4835  001212  6E8B               	movwf	139,c	;volatile
  4836                           
  4837                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4838  001214  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4839  001216  D003               	goto	u290
  4840  001218  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4841  00121A  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4842  00121C  D001               	goto	u308
  4843  00121E                     u290:
  4844  00121E  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4845  001220                     u308:
  4846  001220  508B               	movf	139,w,c	;volatile
  4847  001222  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4848  001224  0BFE               	andlw	-2
  4849  001226  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4850  001228  6E8B               	movwf	139,c	;volatile
  4851                           
  4852                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4853  00122A  988B               	bcf	139,4,c	;volatile
  4854  00122C  0012               	return		;funcret
  4855  00122E                     __end_of_EscriuPrimeraOrdre:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _JoystickMotor *****************
  4859 ;; Defined at:
  4860 ;;		line 18 in file "Joystick.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1
  4874 ;;      Params:         0       0       0
  4875 ;;      Locals:         0       0       0
  4876 ;;      Temps:          2       0       0
  4877 ;;      Totals:         2       0       0
  4878 ;;Total ram usage:        2 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 3
  4881 ;; This function calls:
  4882 ;;		_MNouJoystick
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text36
  4889  000E84                     __ptext36:
  4890                           	callstack 0
  4891  000E84                     _JoystickMotor:
  4892                           	callstack 27
  4893                           
  4894                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  4895                           
  4896                           ;incstack = 0
  4897  000E84  D05A               	goto	l2222
  4898  000E86                     l824:
  4899                           
  4900                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  4901  000E86  B2C2               	btfsc	194,1,c	;volatile
  4902  000E88  D00B               	goto	l825
  4903  000E8A  0EC8               	movlw	200
  4904  000E8C  60C4               	cpfslt	196,c	;volatile
  4905  000E8E  D008               	goto	l825
  4906  000E90  0E32               	movlw	50
  4907  000E92  64C4               	cpfsgt	196,c	;volatile
  4908  000E94  D005               	goto	l825
  4909                           
  4910                           ;Joystick.c: 23:     ADCON0 = 0x07;
  4911  000E96  0E07               	movlw	7
  4912  000E98  6EC2               	movwf	194,c	;volatile
  4913                           
  4914                           ;Joystick.c: 24:                 cap1 = 1;
  4915  000E9A  8274               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  4916  000E9C                     l2152:
  4917                           
  4918                           ;Joystick.c: 25:     state++;
  4919  000E9C  2A0E               	incf	JoystickMotor@state^0,f,c
  4920                           
  4921                           ;Joystick.c: 26:    }
  4922  000E9E  D05B               	goto	l832
  4923  000EA0                     l825:
  4924  000EA0  B2C2               	btfsc	194,1,c	;volatile
  4925  000EA2  D010               	goto	l827
  4926  000EA4  0EC7               	movlw	199
  4927  000EA6  64C4               	cpfsgt	196,c	;volatile
  4928  000EA8  D00D               	goto	l827
  4929                           
  4930                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  4931  000EAA  0E02               	movlw	2
  4932  000EAC  180F               	xorwf	_ultimaTeclaAD^0,w,c
  4933  000EAE  B4D8               	btfsc	status,2,c
  4934  000EB0  D003               	goto	l2160
  4935  000EB2  0E02               	movlw	2
  4936  000EB4  EC16  F00C         	call	_MNouJoystick
  4937  000EB8                     l2160:
  4938                           
  4939                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  4940  000EB8  0E02               	movlw	2
  4941  000EBA  6E0F               	movwf	_ultimaTeclaAD^0,c
  4942                           
  4943                           ;Joystick.c: 30:     ADCON0 = 0x07;
  4944  000EBC  0E07               	movlw	7
  4945  000EBE  6EC2               	movwf	194,c	;volatile
  4946                           
  4947                           ;Joystick.c: 31:                 cap1 = 0;
  4948  000EC0  9274               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  4949  000EC2  D7EC               	goto	l2152
  4950  000EC4                     l827:
  4951  000EC4  B2C2               	btfsc	194,1,c	;volatile
  4952  000EC6  D047               	goto	l832
  4953  000EC8  0E33               	movlw	51
  4954  000ECA  60C4               	cpfslt	196,c	;volatile
  4955  000ECC  D044               	goto	l832
  4956                           
  4957                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  4958  000ECE  0E08               	movlw	8
  4959  000ED0  180F               	xorwf	_ultimaTeclaAD^0,w,c
  4960  000ED2  B4D8               	btfsc	status,2,c
  4961  000ED4  D003               	goto	l2174
  4962  000ED6  0E08               	movlw	8
  4963  000ED8  EC16  F00C         	call	_MNouJoystick
  4964  000EDC                     l2174:
  4965                           
  4966                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  4967  000EDC  0E08               	movlw	8
  4968  000EDE  D7ED               	goto	L5
  4969  000EE0                     l833:
  4970                           
  4971                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  4972  000EE0  B2C2               	btfsc	194,1,c	;volatile
  4973  000EE2  D00B               	goto	l834
  4974  000EE4  0EC8               	movlw	200
  4975  000EE6  60C4               	cpfslt	196,c	;volatile
  4976  000EE8  D008               	goto	l834
  4977  000EEA  0E32               	movlw	50
  4978  000EEC  64C4               	cpfsgt	196,c	;volatile
  4979  000EEE  D005               	goto	l834
  4980                           
  4981                           ;Joystick.c: 44:     ADCON0 = 0x03;
  4982  000EF0  0E03               	movlw	3
  4983  000EF2  6EC2               	movwf	194,c	;volatile
  4984                           
  4985                           ;Joystick.c: 45:                 cap2 = 1;
  4986  000EF4  8074               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  4987  000EF6                     l2190:
  4988                           
  4989                           ;Joystick.c: 46:     state--;
  4990  000EF6  060E               	decf	JoystickMotor@state^0,f,c
  4991                           
  4992                           ;Joystick.c: 47:    }
  4993  000EF8  D02E               	goto	l832
  4994  000EFA                     l834:
  4995  000EFA  B2C2               	btfsc	194,1,c	;volatile
  4996  000EFC  D010               	goto	l836
  4997  000EFE  0EC7               	movlw	199
  4998  000F00  64C4               	cpfsgt	196,c	;volatile
  4999  000F02  D00D               	goto	l836
  5000                           
  5001                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  5002  000F04  0E06               	movlw	6
  5003  000F06  180F               	xorwf	_ultimaTeclaAD^0,w,c
  5004  000F08  B4D8               	btfsc	status,2,c
  5005  000F0A  D003               	goto	l2198
  5006  000F0C  0E06               	movlw	6
  5007  000F0E  EC16  F00C         	call	_MNouJoystick
  5008  000F12                     l2198:
  5009                           
  5010                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  5011  000F12  0E06               	movlw	6
  5012  000F14  6E0F               	movwf	_ultimaTeclaAD^0,c
  5013                           
  5014                           ;Joystick.c: 51:     ADCON0 = 0x03;
  5015  000F16  0E03               	movlw	3
  5016  000F18  6EC2               	movwf	194,c	;volatile
  5017                           
  5018                           ;Joystick.c: 52:                 cap2 = 0;
  5019  000F1A  9074               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  5020  000F1C  D7EC               	goto	l2190
  5021  000F1E                     l836:
  5022  000F1E  B2C2               	btfsc	194,1,c	;volatile
  5023  000F20  D01A               	goto	l832
  5024  000F22  0E33               	movlw	51
  5025  000F24  60C4               	cpfslt	196,c	;volatile
  5026  000F26  D017               	goto	l832
  5027                           
  5028                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  5029  000F28  0E04               	movlw	4
  5030  000F2A  180F               	xorwf	_ultimaTeclaAD^0,w,c
  5031  000F2C  B4D8               	btfsc	status,2,c
  5032  000F2E  D003               	goto	l2212
  5033  000F30  0E04               	movlw	4
  5034  000F32  EC16  F00C         	call	_MNouJoystick
  5035  000F36                     l2212:
  5036                           
  5037                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  5038  000F36  0E04               	movlw	4
  5039  000F38  D7ED               	goto	L6
  5040  000F3A                     l2222:
  5041  000F3A  500E               	movf	JoystickMotor@state^0,w,c
  5042  000F3C  6E64               	movwf	??_JoystickMotor^0,c
  5043  000F3E  6A65               	clrf	(??_JoystickMotor+1)^0,c
  5044                           
  5045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5046                           ; Switch size 1, requested type "simple"
  5047                           ; Number of cases is 1, Range of values is 0 to 0
  5048                           ; switch strategies available:
  5049                           ; Name         Instructions Cycles
  5050                           ; simple_byte            4     3 (average)
  5051                           ;	Chosen strategy is simple_byte
  5052  000F40  5065               	movf	(??_JoystickMotor+1)^0,w,c
  5053  000F42  0A00               	xorlw	0	; case 0
  5054  000F44  A4D8               	btfss	status,2,c
  5055  000F46  D007               	goto	l832
  5056                           
  5057                           ; Switch size 1, requested type "simple"
  5058                           ; Number of cases is 2, Range of values is 0 to 1
  5059                           ; switch strategies available:
  5060                           ; Name         Instructions Cycles
  5061                           ; simple_byte            7     4 (average)
  5062                           ;	Chosen strategy is simple_byte
  5063  000F48  5064               	movf	??_JoystickMotor^0,w,c
  5064  000F4A  0A00               	xorlw	0	; case 0
  5065  000F4C  B4D8               	btfsc	status,2,c
  5066  000F4E  D79B               	goto	l824
  5067  000F50  0A01               	xorlw	1	; case 1
  5068  000F52  B4D8               	btfsc	status,2,c
  5069  000F54  D7C5               	goto	l833
  5070  000F56                     l832:
  5071                           
  5072                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  5073  000F56  A274               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  5074  000F58  0012               	return	
  5075  000F5A  A074               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  5076  000F5C  0012               	return	
  5077  000F5E  500F               	movf	_ultimaTeclaAD^0,w,c
  5078  000F60  B4D8               	btfsc	status,2,c
  5079  000F62  0012               	return	
  5080                           
  5081                           ;Joystick.c: 66:         MNouJoystick(0);
  5082  000F64  0E00               	movlw	0
  5083  000F66  EC16  F00C         	call	_MNouJoystick
  5084                           
  5085                           ;Joystick.c: 67:         ultimaTeclaAD = 0;
  5086  000F6A  0E00               	movlw	0
  5087  000F6C  6E0F               	movwf	_ultimaTeclaAD^0,c
  5088  000F6E  0012               	return		;funcret
  5089  000F70                     __end_of_JoystickMotor:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _MNouJoystick *****************
  5093 ;; Defined at:
  5094 ;;		line 29 in file "Menu.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  posicio         1    wreg     char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  posicio         1    5[COMRAM] char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1
  5108 ;;      Params:         0       0       0
  5109 ;;      Locals:         1       0       0
  5110 ;;      Temps:          0       0       0
  5111 ;;      Totals:         1       0       0
  5112 ;;Total ram usage:        1 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 2
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_JoystickMotor
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text37
  5123  00182C                     __ptext37:
  5124                           	callstack 0
  5125  00182C                     _MNouJoystick:
  5126                           	callstack 27
  5127                           
  5128                           ;incstack = 0
  5129                           ;MNouJoystick@posicio stored from wreg
  5130  00182C  6E63               	movwf	MNouJoystick@posicio^0,c
  5131                           
  5132                           ;Menu.c: 30:     novaDireccio = posicio;
  5133  00182E  C063  F04B         	movff	MNouJoystick@posicio,_novaDireccio
  5134  001832  0012               	return		;funcret
  5135  001834                     __end_of_MNouJoystick:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _JoystickInit *****************
  5139 ;; Defined at:
  5140 ;;		line 12 in file "Joystick.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1
  5154 ;;      Params:         0       0       0
  5155 ;;      Locals:         0       0       0
  5156 ;;      Temps:          0       0       0
  5157 ;;      Totals:         0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 2
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text38
  5169  00177E                     __ptext38:
  5170                           	callstack 0
  5171  00177E                     _JoystickInit:
  5172                           	callstack 28
  5173                           
  5174                           ;Joystick.c: 13:     ADCON0 = 0x01;
  5175                           
  5176                           ;incstack = 0
  5177  00177E  0E01               	movlw	1
  5178  001780  6EC2               	movwf	194,c	;volatile
  5179                           
  5180                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  5181  001782  0E0D               	movlw	13
  5182  001784  6EC1               	movwf	193,c	;volatile
  5183                           
  5184                           ;Joystick.c: 15:     ADCON2 = 0x09;
  5185  001786  0E09               	movlw	9
  5186  001788  6EC0               	movwf	192,c	;volatile
  5187                           
  5188                           ;Joystick.c: 16:     ADRESH = 127;
  5189  00178A  0E7F               	movlw	127
  5190  00178C  6EC4               	movwf	196,c	;volatile
  5191  00178E  0012               	return		;funcret
  5192  001790                     __end_of_JoystickInit:
  5193                           	callstack 0
  5194                           
  5195 ;; *************** function _GLCDMotor *****************
  5196 ;; Defined at:
  5197 ;;		line 36 in file "GestioLCD.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1
  5211 ;;      Params:         0       0       0
  5212 ;;      Locals:         0       0       0
  5213 ;;      Temps:          2       0       0
  5214 ;;      Totals:         2       0       0
  5215 ;;Total ram usage:        2 bytes
  5216 ;; Hardware stack levels used: 1
  5217 ;; Hardware stack levels required when called: 6
  5218 ;; This function calls:
  5219 ;;		_LcClear
  5220 ;;		_LcGotoXY
  5221 ;;		_LcLliure
  5222 ;;		_LcNewString
  5223 ;;		_LcPutChar
  5224 ;;		_TiGetTics
  5225 ;;		_TiResetTics
  5226 ;; This function is called by:
  5227 ;;		_main
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text39
  5232  0002BE                     __ptext39:
  5233                           	callstack 0
  5234  0002BE                     _GLCDMotor:
  5235                           	callstack 24
  5236                           
  5237                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  5238                           
  5239                           ;incstack = 0
  5240  0002BE  D1B7               	goto	l3970
  5241  0002C0                     l3784:
  5242                           
  5243                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  5244  0002C0  0E11               	movlw	17
  5245  0002C2  6011               	cpfslt	GLCDMotor@length1^0,c
  5246  0002C4  D017               	goto	l3794
  5247  0002C6  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5248  0002C8  D015               	goto	l3794
  5249                           
  5250                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  5251  0002CA  0E00               	movlw	0
  5252  0002CC  6E6B               	movwf	LcGotoXY@Row^0,c
  5253  0002CE  0E00               	movlw	0
  5254  0002D0  EC9E  F00A         	call	_LcGotoXY
  5255                           
  5256                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  5257  0002D4  5018               	movf	_menuDaltGLCD^0,w,c
  5258  0002D6  0D1D               	mullw	29
  5259  0002D8  50F3               	movf	243,w,c
  5260  0002DA  0F01               	addlw	low _menuList
  5261  0002DC  6E72               	movwf	??_GLCDMotor^0,c
  5262  0002DE  C072  F066         	movff	??_GLCDMotor,LcNewString@new_s
  5263  0002E2  5066               	movf	LcNewString@new_s^0,w,c
  5264  0002E4  A4D8               	btfss	status,2,c
  5265  0002E6  0E02               	movlw	high __smallconst
  5266  0002E8  6E67               	movwf	(LcNewString@new_s+1)^0,c
  5267  0002EA  ECEA  F00B         	call	_LcNewString	;wreg free
  5268                           
  5269                           ;GestioLCD.c: 53:     state = 5;
  5270  0002EE  0E05               	movlw	5
  5271  0002F0  6E17               	movwf	GLCDMotor@state^0,c
  5272                           
  5273                           ;GestioLCD.c: 54:    }
  5274  0002F2  0012               	return	
  5275  0002F4                     l3794:
  5276  0002F4  0E10               	movlw	16
  5277  0002F6  6411               	cpfsgt	GLCDMotor@length1^0,c
  5278  0002F8  0012               	return	
  5279  0002FA  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5280  0002FC  0012               	return	
  5281  0002FE                     u3500:
  5282                           
  5283                           ;GestioLCD.c: 56:     state++;
  5284  0002FE  2A17               	incf	GLCDMotor@state^0,f,c
  5285  000300  0012               	return	
  5286  000302                     l3800:
  5287                           
  5288                           ;GestioLCD.c: 60:    if (j>=16) {
  5289  000302  0E0F               	movlw	15
  5290  000304  6416               	cpfsgt	GLCDMotor@j^0,c
  5291  000306  D02B               	goto	l3814
  5292                           
  5293                           ;GestioLCD.c: 61:     min1++;
  5294  000308  2A15               	incf	GLCDMotor@min1^0,f,c
  5295                           
  5296                           ;GestioLCD.c: 62:     max1++;
  5297  00030A  2A49               	incf	GLCDMotor@max1^0,f,c
  5298                           
  5299                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  5300  00030C  5018               	movf	_menuDaltGLCD^0,w,c
  5301  00030E  0D1D               	mullw	29
  5302  000310  50F3               	movf	243,w,c
  5303  000312  0F01               	addlw	low _menuList
  5304  000314  2449               	addwf	GLCDMotor@max1^0,w,c
  5305  000316  6E72               	movwf	??_GLCDMotor^0,c
  5306  000318  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5307  00031C                     	if	1	;There is more than 1 active tblptr byte
  5308  00031C  0E02               	movlw	high __smallconst
  5309  00031E  6EF7               	movwf	tblptrh,c
  5310  000320                     	endif
  5311  000320                     	if	0	;tblptru may be non-zero
  5312  000320                     	endif
  5313  000320                     	if	0	;tblptru may be non-zero
  5314  000320                     	endif
  5315  000320  0008               	tblrd		*
  5316  000322  50F5               	movf	tablat,w,c
  5317  000324  0900               	iorlw	0
  5318  000326  A4D8               	btfss	status,2,c
  5319  000328  D002               	goto	l3808
  5320  00032A  0E00               	movlw	0
  5321  00032C  6E49               	movwf	GLCDMotor@max1^0,c
  5322  00032E                     l3808:
  5323                           
  5324                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  5325  00032E  5018               	movf	_menuDaltGLCD^0,w,c
  5326  000330  0D1D               	mullw	29
  5327  000332  50F3               	movf	243,w,c
  5328  000334  0F01               	addlw	low _menuList
  5329  000336  2415               	addwf	GLCDMotor@min1^0,w,c
  5330  000338  6E72               	movwf	??_GLCDMotor^0,c
  5331  00033A  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5332  00033E                     	if	1	;There is more than 1 active tblptr byte
  5333  00033E  0E02               	movlw	high __smallconst
  5334  000340  6EF7               	movwf	tblptrh,c
  5335  000342                     	endif
  5336  000342                     	if	0	;tblptru may be non-zero
  5337  000342                     	endif
  5338  000342                     	if	0	;tblptru may be non-zero
  5339  000342                     	endif
  5340  000342  0008               	tblrd		*
  5341  000344  50F5               	movf	tablat,w,c
  5342  000346  0900               	iorlw	0
  5343  000348  A4D8               	btfss	status,2,c
  5344  00034A  D002               	goto	l755
  5345  00034C  0E00               	movlw	0
  5346  00034E  6E15               	movwf	GLCDMotor@min1^0,c
  5347  000350                     l755:
  5348                           
  5349                           ;GestioLCD.c: 65:     j=0;
  5350  000350  0E00               	movlw	0
  5351  000352  6E16               	movwf	GLCDMotor@j^0,c
  5352                           
  5353                           ;GestioLCD.c: 66:     k1=min1;
  5354  000354  C015  F013         	movff	GLCDMotor@min1,GLCDMotor@k1
  5355                           
  5356                           ;GestioLCD.c: 67:     state = 6;
  5357  000358  0E06               	movlw	6
  5358  00035A  6E17               	movwf	GLCDMotor@state^0,c
  5359                           
  5360                           ;GestioLCD.c: 68:    }
  5361  00035C  0012               	return	
  5362  00035E                     l3814:
  5363  00035E  0E10               	movlw	16
  5364  000360  6016               	cpfslt	GLCDMotor@j^0,c
  5365  000362  0012               	return	
  5366                           
  5367                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  5368  000364  0E00               	movlw	0
  5369  000366  6E6B               	movwf	LcGotoXY@Row^0,c
  5370  000368  5016               	movf	GLCDMotor@j^0,w,c
  5371  00036A  EC9E  F00A         	call	_LcGotoXY
  5372                           
  5373                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  5374  00036E  5018               	movf	_menuDaltGLCD^0,w,c
  5375  000370  0D1D               	mullw	29
  5376  000372  50F3               	movf	243,w,c
  5377  000374  0F01               	addlw	low _menuList
  5378  000376  2413               	addwf	GLCDMotor@k1^0,w,c
  5379  000378  6E72               	movwf	??_GLCDMotor^0,c
  5380  00037A  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5381  00037E                     	if	1	;There is more than 1 active tblptr byte
  5382  00037E  0E02               	movlw	high __smallconst
  5383  000380  6EF7               	movwf	tblptrh,c
  5384  000382                     	endif
  5385  000382                     	if	0	;tblptru may be non-zero
  5386  000382                     	endif
  5387  000382                     	if	0	;tblptru may be non-zero
  5388  000382                     	endif
  5389  000382  0008               	tblrd		*
  5390  000384  50F5               	movf	tablat,w,c
  5391  000386  EC32  F00A         	call	_LcPutChar
  5392                           
  5393                           ;GestioLCD.c: 72:     j++;
  5394  00038A  2A16               	incf	GLCDMotor@j^0,f,c
  5395                           
  5396                           ;GestioLCD.c: 73:     k1++;
  5397  00038C  2A13               	incf	GLCDMotor@k1^0,f,c
  5398                           
  5399                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  5400  00038E  5018               	movf	_menuDaltGLCD^0,w,c
  5401  000390  0D1D               	mullw	29
  5402  000392  50F3               	movf	243,w,c
  5403  000394  0F01               	addlw	low _menuList
  5404  000396  2413               	addwf	GLCDMotor@k1^0,w,c
  5405  000398  6E72               	movwf	??_GLCDMotor^0,c
  5406  00039A  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5407  00039E                     	if	1	;There is more than 1 active tblptr byte
  5408  00039E  0E02               	movlw	high __smallconst
  5409  0003A0  6EF7               	movwf	tblptrh,c
  5410  0003A2                     	endif
  5411  0003A2                     	if	0	;tblptru may be non-zero
  5412  0003A2                     	endif
  5413  0003A2                     	if	0	;tblptru may be non-zero
  5414  0003A2                     	endif
  5415  0003A2  0008               	tblrd		*
  5416  0003A4  50F5               	movf	tablat,w,c
  5417  0003A6  0900               	iorlw	0
  5418  0003A8  A4D8               	btfss	status,2,c
  5419  0003AA  0012               	return	
  5420  0003AC  0E00               	movlw	0
  5421  0003AE  6E13               	movwf	GLCDMotor@k1^0,c
  5422  0003B0  0012               	return	
  5423  0003B2                     l3828:
  5424                           
  5425                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  5426  0003B2  0E04               	movlw	4
  5427  0003B4  6018               	cpfslt	_menuDaltGLCD^0,c
  5428  0003B6  D012               	goto	u3600
  5429  0003B8  D7A2               	goto	u3500
  5430  0003BA                     u3570:
  5431                           
  5432                           ;GestioLCD.c: 82:     state = 0;
  5433  0003BA  0E00               	movlw	0
  5434  0003BC  6E17               	movwf	GLCDMotor@state^0,c
  5435  0003BE  0012               	return	
  5436  0003C0                     l3836:
  5437                           
  5438                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  5439  0003C0  ECF0  F00B         	call	_LcLliure	;wreg free
  5440  0003C4  A0D8               	btfss	status,0,c
  5441  0003C6  D006               	goto	l3842
  5442  0003C8  0E04               	movlw	4
  5443  0003CA  6018               	cpfslt	_menuDaltGLCD^0,c
  5444  0003CC  D003               	goto	l3842
  5445                           
  5446                           ;GestioLCD.c: 87:     state = 7;
  5447  0003CE  0E07               	movlw	7
  5448  0003D0  6E17               	movwf	GLCDMotor@state^0,c
  5449                           
  5450                           ;GestioLCD.c: 88:    }
  5451  0003D2  0012               	return	
  5452  0003D4                     l3842:
  5453  0003D4  ECF0  F00B         	call	_LcLliure	;wreg free
  5454  0003D8  A0D8               	btfss	status,0,c
  5455  0003DA  0012               	return	
  5456  0003DC                     u3600:
  5457  0003DC  0E03               	movlw	3
  5458  0003DE  6418               	cpfsgt	_menuDaltGLCD^0,c
  5459  0003E0  0012               	return	
  5460  0003E2  D7EB               	goto	u3570
  5461  0003E4                     l767:
  5462                           
  5463                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  5464  0003E4  A474               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5465  0003E6  0012               	return	
  5466  0003E8  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5467  0003EA  0012               	return	
  5468                           
  5469                           ;GestioLCD.c: 95:     length1 = 0;
  5470  0003EC  0E00               	movlw	0
  5471  0003EE  6E11               	movwf	GLCDMotor@length1^0,c
  5472                           
  5473                           ;GestioLCD.c: 96:     length2 = 0;
  5474  0003F0  0E00               	movlw	0
  5475  0003F2  6E10               	movwf	GLCDMotor@length2^0,c
  5476                           
  5477                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  5478  0003F4  0E00               	movlw	0
  5479  0003F6  6E6B               	movwf	LcGotoXY@Row^0,c
  5480  0003F8  0E00               	movlw	0
  5481  0003FA  EC9E  F00A         	call	_LcGotoXY
  5482                           
  5483                           ;GestioLCD.c: 98:     min1 = 0;
  5484  0003FE  0E00               	movlw	0
  5485  000400  6E15               	movwf	GLCDMotor@min1^0,c
  5486                           
  5487                           ;GestioLCD.c: 99:     max1 = 15;
  5488  000402  0E0F               	movlw	15
  5489  000404  6E49               	movwf	GLCDMotor@max1^0,c
  5490                           
  5491                           ;GestioLCD.c: 100:     min2 = 0;
  5492  000406  0E00               	movlw	0
  5493  000408  6E14               	movwf	GLCDMotor@min2^0,c
  5494                           
  5495                           ;GestioLCD.c: 101:     max2 = 15;
  5496  00040A  0E0F               	movlw	15
  5497  00040C  6E48               	movwf	GLCDMotor@max2^0,c
  5498                           
  5499                           ;GestioLCD.c: 102:     j = 0;
  5500  00040E  0E00               	movlw	0
  5501  000410  6E16               	movwf	GLCDMotor@j^0,c
  5502                           
  5503                           ;GestioLCD.c: 103:     k1 = 0;
  5504  000412  0E00               	movlw	0
  5505  000414  6E13               	movwf	GLCDMotor@k1^0,c
  5506                           
  5507                           ;GestioLCD.c: 104:     k2 = 0;
  5508  000416  0E00               	movlw	0
  5509  000418  6E12               	movwf	GLCDMotor@k2^0,c
  5510                           
  5511                           ;GestioLCD.c: 105:     newString = 0;
  5512  00041A  9474               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  5513  00041C  D770               	goto	u3500
  5514  00041E                     l3872:
  5515                           
  5516                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  5517  00041E  5018               	movf	_menuDaltGLCD^0,w,c
  5518  000420  0D1D               	mullw	29
  5519  000422  50F3               	movf	243,w,c
  5520  000424  0F01               	addlw	low _menuList
  5521  000426  2411               	addwf	GLCDMotor@length1^0,w,c
  5522  000428  6E72               	movwf	??_GLCDMotor^0,c
  5523  00042A  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5524  00042E                     	if	1	;There is more than 1 active tblptr byte
  5525  00042E  0E02               	movlw	high __smallconst
  5526  000430  6EF7               	movwf	tblptrh,c
  5527  000432                     	endif
  5528  000432                     	if	0	;tblptru may be non-zero
  5529  000432                     	endif
  5530  000432                     	if	0	;tblptru may be non-zero
  5531  000432                     	endif
  5532  000432  0008               	tblrd		*
  5533  000434  50F5               	movf	tablat,w,c
  5534  000436  0900               	iorlw	0
  5535  000438  A4D8               	btfss	status,2,c
  5536  00043A  D004               	goto	l3878
  5537  00043C  0E03               	movlw	3
  5538  00043E  6418               	cpfsgt	_menuDaltGLCD^0,c
  5539  000440  D001               	goto	l3878
  5540  000442  D75D               	goto	u3500
  5541  000444                     l3878:
  5542  000444  5018               	movf	_menuDaltGLCD^0,w,c
  5543  000446  0D1D               	mullw	29
  5544  000448  50F3               	movf	243,w,c
  5545  00044A  0F01               	addlw	low _menuList
  5546  00044C  2411               	addwf	GLCDMotor@length1^0,w,c
  5547  00044E  6E72               	movwf	??_GLCDMotor^0,c
  5548  000450  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5549  000454                     	if	1	;There is more than 1 active tblptr byte
  5550  000454  0E02               	movlw	high __smallconst
  5551  000456  6EF7               	movwf	tblptrh,c
  5552  000458                     	endif
  5553  000458                     	if	0	;tblptru may be non-zero
  5554  000458                     	endif
  5555  000458                     	if	0	;tblptru may be non-zero
  5556  000458                     	endif
  5557  000458  0008               	tblrd		*
  5558  00045A  50F5               	movf	tablat,w,c
  5559  00045C  0900               	iorlw	0
  5560  00045E  B4D8               	btfsc	status,2,c
  5561  000460  D002               	goto	l3882
  5562                           
  5563                           ;GestioLCD.c: 114:     length1++;
  5564  000462  2A11               	incf	GLCDMotor@length1^0,f,c
  5565                           
  5566                           ;GestioLCD.c: 115:    }
  5567  000464  0012               	return	
  5568  000466                     l3882:
  5569  000466  0E04               	movlw	4
  5570  000468  6018               	cpfslt	_menuDaltGLCD^0,c
  5571  00046A  0012               	return	
  5572  00046C  5018               	movf	_menuDaltGLCD^0,w,c
  5573  00046E  0D1D               	mullw	29
  5574  000470  50F3               	movf	243,w,c
  5575  000472  0F01               	addlw	low _menuList
  5576  000474  2411               	addwf	GLCDMotor@length1^0,w,c
  5577  000476  6E72               	movwf	??_GLCDMotor^0,c
  5578  000478  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5579  00047C                     	if	1	;There is more than 1 active tblptr byte
  5580  00047C  0E02               	movlw	high __smallconst
  5581  00047E  6EF7               	movwf	tblptrh,c
  5582  000480                     	endif
  5583  000480                     	if	0	;tblptru may be non-zero
  5584  000480                     	endif
  5585  000480                     	if	0	;tblptru may be non-zero
  5586  000480                     	endif
  5587  000480  0008               	tblrd		*
  5588  000482  50F5               	movf	tablat,w,c
  5589  000484  0900               	iorlw	0
  5590  000486  A4D8               	btfss	status,2,c
  5591  000488  0012               	return	
  5592                           
  5593                           ;GestioLCD.c: 117:     state = 13;
  5594  00048A  0E0D               	movlw	13
  5595  00048C  6E17               	movwf	GLCDMotor@state^0,c
  5596  00048E  0012               	return	
  5597  000490                     l3888:
  5598                           
  5599                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  5600  000490  0E11               	movlw	17
  5601  000492  6010               	cpfslt	GLCDMotor@length2^0,c
  5602  000494  D019               	goto	l3898
  5603  000496  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5604  000498  D017               	goto	l3898
  5605                           
  5606                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  5607  00049A  0E01               	movlw	1
  5608  00049C  6E6B               	movwf	LcGotoXY@Row^0,c
  5609  00049E  0E00               	movlw	0
  5610  0004A0  EC9E  F00A         	call	_LcGotoXY
  5611                           
  5612                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  5613  0004A4  5018               	movf	_menuDaltGLCD^0,w,c
  5614  0004A6  0D1D               	mullw	29
  5615  0004A8  CFF3 F072          	movff	prodl,??_GLCDMotor
  5616  0004AC  0E1D               	movlw	29
  5617  0004AE  2672               	addwf	??_GLCDMotor^0,f,c
  5618  0004B0  5072               	movf	??_GLCDMotor^0,w,c
  5619  0004B2  0F01               	addlw	low _menuList
  5620  0004B4  6E73               	movwf	(??_GLCDMotor+1)^0,c
  5621  0004B6  C073  F066         	movff	??_GLCDMotor+1,LcNewString@new_s
  5622  0004BA  5066               	movf	LcNewString@new_s^0,w,c
  5623  0004BC  A4D8               	btfss	status,2,c
  5624  0004BE  0E02               	movlw	high __smallconst
  5625  0004C0  6E67               	movwf	(LcNewString@new_s+1)^0,c
  5626  0004C2  ECEA  F00B         	call	_LcNewString	;wreg free
  5627  0004C6  D71B               	goto	u3500
  5628  0004C8                     l3898:
  5629  0004C8  0E10               	movlw	16
  5630  0004CA  6410               	cpfsgt	GLCDMotor@length2^0,c
  5631  0004CC  0012               	return	
  5632  0004CE  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5633  0004D0  0012               	return	
  5634                           
  5635                           ;GestioLCD.c: 127:     state = 9;
  5636  0004D2  0E09               	movlw	9
  5637  0004D4  6E17               	movwf	GLCDMotor@state^0,c
  5638  0004D6  0012               	return	
  5639  0004D8                     l3904:
  5640                           
  5641                           ;GestioLCD.c: 131:    if (j<16) {
  5642  0004D8  0E10               	movlw	16
  5643  0004DA  6016               	cpfslt	GLCDMotor@j^0,c
  5644  0004DC  D02B               	goto	l3918
  5645                           
  5646                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  5647  0004DE  0E01               	movlw	1
  5648  0004E0  6E6B               	movwf	LcGotoXY@Row^0,c
  5649  0004E2  5016               	movf	GLCDMotor@j^0,w,c
  5650  0004E4  EC9E  F00A         	call	_LcGotoXY
  5651                           
  5652                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  5653  0004E8  5018               	movf	_menuDaltGLCD^0,w,c
  5654  0004EA  0D1D               	mullw	29
  5655  0004EC  50F3               	movf	243,w,c
  5656  0004EE  0F01               	addlw	low _menuList
  5657  0004F0  2412               	addwf	GLCDMotor@k2^0,w,c
  5658  0004F2  6E72               	movwf	??_GLCDMotor^0,c
  5659  0004F4  0E1D               	movlw	29
  5660  0004F6  2672               	addwf	??_GLCDMotor^0,f,c
  5661  0004F8  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5662  0004FC                     	if	1	;There is more than 1 active tblptr byte
  5663  0004FC  0E02               	movlw	high __smallconst
  5664  0004FE  6EF7               	movwf	tblptrh,c
  5665  000500                     	endif
  5666  000500                     	if	0	;tblptru may be non-zero
  5667  000500                     	endif
  5668  000500                     	if	0	;tblptru may be non-zero
  5669  000500                     	endif
  5670  000500  0008               	tblrd		*
  5671  000502  50F5               	movf	tablat,w,c
  5672  000504  EC32  F00A         	call	_LcPutChar
  5673                           
  5674                           ;GestioLCD.c: 134:     j++;
  5675  000508  2A16               	incf	GLCDMotor@j^0,f,c
  5676                           
  5677                           ;GestioLCD.c: 135:     k2++;
  5678  00050A  2A12               	incf	GLCDMotor@k2^0,f,c
  5679                           
  5680                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  5681  00050C  5018               	movf	_menuDaltGLCD^0,w,c
  5682  00050E  0D1D               	mullw	29
  5683  000510  50F3               	movf	243,w,c
  5684  000512  0F01               	addlw	low _menuList
  5685  000514  2412               	addwf	GLCDMotor@k2^0,w,c
  5686  000516  6E72               	movwf	??_GLCDMotor^0,c
  5687  000518  0E1D               	movlw	29
  5688  00051A  2672               	addwf	??_GLCDMotor^0,f,c
  5689  00051C  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5690  000520                     	if	1	;There is more than 1 active tblptr byte
  5691  000520  0E02               	movlw	high __smallconst
  5692  000522  6EF7               	movwf	tblptrh,c
  5693  000524                     	endif
  5694  000524                     	if	0	;tblptru may be non-zero
  5695  000524                     	endif
  5696  000524                     	if	0	;tblptru may be non-zero
  5697  000524                     	endif
  5698  000524  0008               	tblrd		*
  5699  000526  50F5               	movf	tablat,w,c
  5700  000528  0900               	iorlw	0
  5701  00052A  A4D8               	btfss	status,2,c
  5702  00052C  0012               	return	
  5703  00052E  0E00               	movlw	0
  5704  000530  6E12               	movwf	GLCDMotor@k2^0,c
  5705  000532  0012               	return	
  5706  000534                     l3918:
  5707  000534  0E0F               	movlw	15
  5708  000536  6416               	cpfsgt	GLCDMotor@j^0,c
  5709  000538  0012               	return	
  5710                           
  5711                           ;GestioLCD.c: 139:     min2++;
  5712  00053A  2A14               	incf	GLCDMotor@min2^0,f,c
  5713                           
  5714                           ;GestioLCD.c: 140:     max2++;
  5715  00053C  2A48               	incf	GLCDMotor@max2^0,f,c
  5716                           
  5717                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  5718  00053E  5018               	movf	_menuDaltGLCD^0,w,c
  5719  000540  0D1D               	mullw	29
  5720  000542  50F3               	movf	243,w,c
  5721  000544  0F01               	addlw	low _menuList
  5722  000546  2448               	addwf	GLCDMotor@max2^0,w,c
  5723  000548  6E72               	movwf	??_GLCDMotor^0,c
  5724  00054A  0E1D               	movlw	29
  5725  00054C  2672               	addwf	??_GLCDMotor^0,f,c
  5726  00054E  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5727  000552                     	if	1	;There is more than 1 active tblptr byte
  5728  000552  0E02               	movlw	high __smallconst
  5729  000554  6EF7               	movwf	tblptrh,c
  5730  000556                     	endif
  5731  000556                     	if	0	;tblptru may be non-zero
  5732  000556                     	endif
  5733  000556                     	if	0	;tblptru may be non-zero
  5734  000556                     	endif
  5735  000556  0008               	tblrd		*
  5736  000558  50F5               	movf	tablat,w,c
  5737  00055A  0900               	iorlw	0
  5738  00055C  A4D8               	btfss	status,2,c
  5739  00055E  D002               	goto	l3926
  5740  000560  0E00               	movlw	0
  5741  000562  6E48               	movwf	GLCDMotor@max2^0,c
  5742  000564                     l3926:
  5743                           
  5744                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  5745  000564  5018               	movf	_menuDaltGLCD^0,w,c
  5746  000566  0D1D               	mullw	29
  5747  000568  50F3               	movf	243,w,c
  5748  00056A  0F01               	addlw	low _menuList
  5749  00056C  2414               	addwf	GLCDMotor@min2^0,w,c
  5750  00056E  6E72               	movwf	??_GLCDMotor^0,c
  5751  000570  0E1D               	movlw	29
  5752  000572  2672               	addwf	??_GLCDMotor^0,f,c
  5753  000574  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5754  000578                     	if	1	;There is more than 1 active tblptr byte
  5755  000578  0E02               	movlw	high __smallconst
  5756  00057A  6EF7               	movwf	tblptrh,c
  5757  00057C                     	endif
  5758  00057C                     	if	0	;tblptru may be non-zero
  5759  00057C                     	endif
  5760  00057C                     	if	0	;tblptru may be non-zero
  5761  00057C                     	endif
  5762  00057C  0008               	tblrd		*
  5763  00057E  50F5               	movf	tablat,w,c
  5764  000580  0900               	iorlw	0
  5765  000582  A4D8               	btfss	status,2,c
  5766  000584  D002               	goto	l785
  5767  000586  0E00               	movlw	0
  5768  000588  6E14               	movwf	GLCDMotor@min2^0,c
  5769  00058A                     l785:
  5770                           
  5771                           ;GestioLCD.c: 143:     j=0;
  5772  00058A  0E00               	movlw	0
  5773  00058C  6E16               	movwf	GLCDMotor@j^0,c
  5774                           
  5775                           ;GestioLCD.c: 144:     k2=min2;
  5776  00058E  C014  F012         	movff	GLCDMotor@min2,GLCDMotor@k2
  5777  000592  D6B5               	goto	u3500
  5778  000594                     l3934:
  5779                           
  5780                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  5781  000594  5019               	movf	_timerGLCD^0,w,c
  5782  000596  EC3D  F00B         	call	_TiGetTics
  5783  00059A  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  5784  00059C  D00E               	goto	l787
  5785  00059E  0EB5               	movlw	181
  5786  0005A0  5C63               	subwf	?_TiGetTics^0,w,c
  5787  0005A2  0E04               	movlw	4
  5788  0005A4  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  5789  0005A6  B0D8               	btfsc	status,0,c
  5790  0005A8  B474               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  5791  0005AA  D007               	goto	l787
  5792  0005AC  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5793  0005AE  D005               	goto	l787
  5794                           
  5795                           ;GestioLCD.c: 150:     LcClear();
  5796  0005B0  EC65  F00B         	call	_LcClear	;wreg free
  5797  0005B4                     l3942:
  5798                           
  5799                           ;GestioLCD.c: 151:     state = 2;
  5800  0005B4  0E02               	movlw	2
  5801  0005B6  6E17               	movwf	GLCDMotor@state^0,c
  5802                           
  5803                           ;GestioLCD.c: 152:    }
  5804  0005B8  0012               	return	
  5805  0005BA                     l787:
  5806  0005BA  A474               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5807  0005BC  0012               	return	
  5808  0005BE  A674               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5809  0005C0  0012               	return	
  5810                           
  5811                           ;GestioLCD.c: 154:     LcClear();
  5812  0005C2  EC65  F00B         	call	_LcClear	;wreg free
  5813  0005C6  D6F9               	goto	u3570
  5814  0005C8                     l3950:
  5815                           
  5816                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  5817  0005C8  5019               	movf	_timerGLCD^0,w,c
  5818  0005CA  ECA9  F00B         	call	_TiResetTics
  5819  0005CE  D697               	goto	u3500
  5820  0005D0                     l3954:
  5821                           
  5822                           ;GestioLCD.c: 163:    if (LcLliure()) {
  5823  0005D0  ECF0  F00B         	call	_LcLliure	;wreg free
  5824  0005D4  A0D8               	btfss	status,0,c
  5825  0005D6  0012               	return	
  5826                           
  5827                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  5828  0005D8  5019               	movf	_timerGLCD^0,w,c
  5829  0005DA  ECA9  F00B         	call	_TiResetTics
  5830                           
  5831                           ;GestioLCD.c: 165:     state = 11;
  5832  0005DE  0E0B               	movlw	11
  5833  0005E0  6E17               	movwf	GLCDMotor@state^0,c
  5834  0005E2  0012               	return	
  5835  0005E4                     l3960:
  5836                           
  5837                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  5838  0005E4  5018               	movf	_menuDaltGLCD^0,w,c
  5839  0005E6  0D1D               	mullw	29
  5840  0005E8  50F3               	movf	243,w,c
  5841  0005EA  0F01               	addlw	low _menuList
  5842  0005EC  2410               	addwf	GLCDMotor@length2^0,w,c
  5843  0005EE  6E72               	movwf	??_GLCDMotor^0,c
  5844  0005F0  0E1D               	movlw	29
  5845  0005F2  2672               	addwf	??_GLCDMotor^0,f,c
  5846  0005F4  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5847  0005F8                     	if	1	;There is more than 1 active tblptr byte
  5848  0005F8  0E02               	movlw	high __smallconst
  5849  0005FA  6EF7               	movwf	tblptrh,c
  5850  0005FC                     	endif
  5851  0005FC                     	if	0	;tblptru may be non-zero
  5852  0005FC                     	endif
  5853  0005FC                     	if	0	;tblptru may be non-zero
  5854  0005FC                     	endif
  5855  0005FC  0008               	tblrd		*
  5856  0005FE  50F5               	movf	tablat,w,c
  5857  000600  0900               	iorlw	0
  5858  000602  B4D8               	btfsc	status,2,c
  5859  000604  D002               	goto	l3964
  5860                           
  5861                           ;GestioLCD.c: 170:     length2++;
  5862  000606  2A10               	incf	GLCDMotor@length2^0,f,c
  5863                           
  5864                           ;GestioLCD.c: 171:    }
  5865  000608  0012               	return	
  5866  00060A                     l3964:
  5867  00060A  5018               	movf	_menuDaltGLCD^0,w,c
  5868  00060C  0D1D               	mullw	29
  5869  00060E  50F3               	movf	243,w,c
  5870  000610  0F01               	addlw	low _menuList
  5871  000612  2410               	addwf	GLCDMotor@length2^0,w,c
  5872  000614  6E72               	movwf	??_GLCDMotor^0,c
  5873  000616  0E1D               	movlw	29
  5874  000618  2672               	addwf	??_GLCDMotor^0,f,c
  5875  00061A  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  5876  00061E                     	if	1	;There is more than 1 active tblptr byte
  5877  00061E  0E02               	movlw	high __smallconst
  5878  000620  6EF7               	movwf	tblptrh,c
  5879  000622                     	endif
  5880  000622                     	if	0	;tblptru may be non-zero
  5881  000622                     	endif
  5882  000622                     	if	0	;tblptru may be non-zero
  5883  000622                     	endif
  5884  000622  0008               	tblrd		*
  5885  000624  50F5               	movf	tablat,w,c
  5886  000626  0900               	iorlw	0
  5887  000628  A4D8               	btfss	status,2,c
  5888  00062A  0012               	return	
  5889  00062C  D7C3               	goto	l3942
  5890  00062E                     l3970:
  5891  00062E  5017               	movf	GLCDMotor@state^0,w,c
  5892  000630  6E72               	movwf	??_GLCDMotor^0,c
  5893  000632  6A73               	clrf	(??_GLCDMotor+1)^0,c
  5894                           
  5895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5896                           ; Switch size 1, requested type "simple"
  5897                           ; Number of cases is 1, Range of values is 0 to 0
  5898                           ; switch strategies available:
  5899                           ; Name         Instructions Cycles
  5900                           ; simple_byte            4     3 (average)
  5901                           ;	Chosen strategy is simple_byte
  5902  000634  5073               	movf	(??_GLCDMotor+1)^0,w,c
  5903  000636  0A00               	xorlw	0	; case 0
  5904  000638  A4D8               	btfss	status,2,c
  5905  00063A  0012               	return	
  5906                           
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 12, Range of values is 0 to 13
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte           37    19 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  00063C  5072               	movf	??_GLCDMotor^0,w,c
  5914  00063E  0A00               	xorlw	0	; case 0
  5915  000640  B4D8               	btfsc	status,2,c
  5916  000642  D6D0               	goto	l767
  5917  000644  0A01               	xorlw	1	; case 1
  5918  000646  B4D8               	btfsc	status,2,c
  5919  000648  D6EA               	goto	l3872
  5920  00064A  0A03               	xorlw	3	; case 2
  5921  00064C  B4D8               	btfsc	status,2,c
  5922  00064E  D638               	goto	l3784
  5923  000650  0A01               	xorlw	1	; case 3
  5924  000652  B4D8               	btfsc	status,2,c
  5925  000654  D656               	goto	l3800
  5926  000656  0A06               	xorlw	6	; case 5
  5927  000658  B4D8               	btfsc	status,2,c
  5928  00065A  D6B2               	goto	l3836
  5929  00065C  0A03               	xorlw	3	; case 6
  5930  00065E  B4D8               	btfsc	status,2,c
  5931  000660  D6A8               	goto	l3828
  5932  000662  0A01               	xorlw	1	; case 7
  5933  000664  B4D8               	btfsc	status,2,c
  5934  000666  D714               	goto	l3888
  5935  000668  0A0F               	xorlw	15	; case 8
  5936  00066A  B4D8               	btfsc	status,2,c
  5937  00066C  D7B1               	goto	l3954
  5938  00066E  0A01               	xorlw	1	; case 9
  5939  000670  B4D8               	btfsc	status,2,c
  5940  000672  D732               	goto	l3904
  5941  000674  0A03               	xorlw	3	; case 10
  5942  000676  B4D8               	btfsc	status,2,c
  5943  000678  D7A7               	goto	l3950
  5944  00067A  0A01               	xorlw	1	; case 11
  5945  00067C  B4D8               	btfsc	status,2,c
  5946  00067E  D78A               	goto	l3934
  5947  000680  0A06               	xorlw	6	; case 13
  5948  000682  A4D8               	btfss	status,2,c
  5949  000684  0012               	return	
  5950  000686  D7AE               	goto	l3960
  5951  000688                     __end_of_GLCDMotor:
  5952                           	callstack 0
  5953                           
  5954 ;; *************** function _LcPutChar *****************
  5955 ;; Defined at:
  5956 ;;		line 132 in file "LcTLCD.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  c               1    wreg     unsigned char 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  c               1   19[COMRAM] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1
  5970 ;;      Params:         0       0       0
  5971 ;;      Locals:         1       0       0
  5972 ;;      Temps:          0       0       0
  5973 ;;      Totals:         1       0       0
  5974 ;;Total ram usage:        1 bytes
  5975 ;; Hardware stack levels used: 1
  5976 ;; Hardware stack levels required when called: 5
  5977 ;; This function calls:
  5978 ;;		_CantaData
  5979 ;;		_LcGotoXY
  5980 ;;		_WaitForBusy
  5981 ;; This function is called by:
  5982 ;;		_LcLCD
  5983 ;;		_menu
  5984 ;;		_GLCDMotor
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text40
  5989  001464                     __ptext40:
  5990                           	callstack 0
  5991  001464                     _LcPutChar:
  5992                           	callstack 24
  5993                           
  5994                           ;incstack = 0
  5995                           ;LcPutChar@c stored from wreg
  5996  001464  6E71               	movwf	LcPutChar@c^0,c
  5997                           
  5998                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  5999  001466  EC7E  F00A         	call	_WaitForBusy	;wreg free
  6000  00146A  5071               	movf	LcPutChar@c^0,w,c
  6001  00146C  ECF4  F00A         	call	_CantaData
  6002                           
  6003                           ;LcTLCD.c: 136:  ++ColumnAct;
  6004  001470  2A32               	incf	_ColumnAct^0,f,c
  6005                           
  6006                           ;LcTLCD.c: 138:  if (Rows == 2) {
  6007  001472  0E02               	movlw	2
  6008  001474  1835               	xorwf	_Rows^0,w,c
  6009  001476  A4D8               	btfss	status,2,c
  6010  001478  D010               	goto	l3082
  6011                           
  6012                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  6013  00147A  0E27               	movlw	39
  6014  00147C  6432               	cpfsgt	_ColumnAct^0,c
  6015  00147E  D00D               	goto	l3082
  6016                           
  6017                           ;LcTLCD.c: 140:    ColumnAct = 0;
  6018  001480  0E00               	movlw	0
  6019  001482  6E32               	movwf	_ColumnAct^0,c
  6020                           
  6021                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  6022  001484  2A33               	incf	_RowAct^0,f,c
  6023  001486  0E01               	movlw	1
  6024  001488  6433               	cpfsgt	_RowAct^0,c
  6025  00148A  D002               	goto	l3080
  6026  00148C  0E00               	movlw	0
  6027  00148E  6E33               	movwf	_RowAct^0,c
  6028  001490                     l3080:
  6029                           
  6030                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  6031  001490  C033  F06B         	movff	_RowAct,LcGotoXY@Row
  6032  001494  5032               	movf	_ColumnAct^0,w,c
  6033  001496  EC9E  F00A         	call	_LcGotoXY
  6034  00149A                     l3082:
  6035                           
  6036                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  6037  00149A  0433               	decf	_RowAct^0,w,c
  6038  00149C  A4D8               	btfss	status,2,c
  6039  00149E  0012               	return	
  6040                           
  6041                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  6042  0014A0  0E27               	movlw	39
  6043  0014A2  6432               	cpfsgt	_ColumnAct^0,c
  6044  0014A4  D002               	goto	l3088
  6045  0014A6  0E00               	movlw	0
  6046  0014A8  6E32               	movwf	_ColumnAct^0,c
  6047  0014AA                     l3088:
  6048                           
  6049                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  6050  0014AA  C033  F06B         	movff	_RowAct,LcGotoXY@Row
  6051  0014AE  5032               	movf	_ColumnAct^0,w,c
  6052  0014B0  EC9E  F00A         	call	_LcGotoXY
  6053  0014B4  0012               	return		;funcret
  6054  0014B6                     __end_of_LcPutChar:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function _CantaData *****************
  6058 ;; Defined at:
  6059 ;;		line 194 in file "LcTLCD.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  Data            1    wreg     unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  Data            1    7[COMRAM] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1
  6073 ;;      Params:         0       0       0
  6074 ;;      Locals:         1       0       0
  6075 ;;      Temps:          0       0       0
  6076 ;;      Totals:         1       0       0
  6077 ;;Total ram usage:        1 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 3
  6080 ;; This function calls:
  6081 ;;		_CantaPartAlta
  6082 ;;		_CantaPartBaixa
  6083 ;; This function is called by:
  6084 ;;		_LcPutChar
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text41
  6089  0015E8                     __ptext41:
  6090                           	callstack 0
  6091  0015E8                     _CantaData:
  6092                           	callstack 25
  6093                           
  6094                           ;incstack = 0
  6095                           ;CantaData@Data stored from wreg
  6096  0015E8  6E65               	movwf	CantaData@Data^0,c
  6097                           
  6098                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6099  0015EA  9694               	bcf	148,3,c	;volatile
  6100  0015EC  9494               	bcf	148,2,c	;volatile
  6101  0015EE  9294               	bcf	148,1,c	;volatile
  6102  0015F0  9094               	bcf	148,0,c	;volatile
  6103                           
  6104                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  6105  0015F2  8A8B               	bsf	139,5,c	;volatile
  6106                           
  6107                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  6108  0015F4  9E8C               	bcf	140,7,c	;volatile
  6109                           
  6110                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  6111  0015F6  888B               	bsf	139,4,c	;volatile
  6112                           
  6113                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  6114  0015F8  5065               	movf	CantaData@Data^0,w,c
  6115  0015FA  EC4B  F009         	call	_CantaPartAlta
  6116                           
  6117                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  6118  0015FE  888B               	bsf	139,4,c	;volatile
  6119                           
  6120                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  6121  001600  988B               	bcf	139,4,c	;volatile
  6122                           
  6123                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  6124  001602  988B               	bcf	139,4,c	;volatile
  6125                           
  6126                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  6127  001604  888B               	bsf	139,4,c	;volatile
  6128                           
  6129                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  6130  001606  5065               	movf	CantaData@Data^0,w,c
  6131  001608  EC17  F009         	call	_CantaPartBaixa
  6132                           
  6133                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  6134  00160C  888B               	bsf	139,4,c	;volatile
  6135                           
  6136                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  6137  00160E  988B               	bcf	139,4,c	;volatile
  6138                           
  6139                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6140  001610  8694               	bsf	148,3,c	;volatile
  6141  001612  8494               	bsf	148,2,c	;volatile
  6142  001614  8294               	bsf	148,1,c	;volatile
  6143  001616  8094               	bsf	148,0,c	;volatile
  6144  001618  0012               	return		;funcret
  6145  00161A                     __end_of_CantaData:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _LcNewString *****************
  6149 ;; Defined at:
  6150 ;;		line 239 in file "LcTLCD.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  6153 ;;		 -> menuList(145), usuaris.username(9), usuaris(184), STR_5(9), 
  6154 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1
  6166 ;;      Params:         2       0       0
  6167 ;;      Locals:         0       0       0
  6168 ;;      Temps:          0       0       0
  6169 ;;      Totals:         2       0       0
  6170 ;;Total ram usage:        2 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 2
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_menu
  6177 ;;		_GLCDMotor
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text42
  6182  0017D4                     __ptext42:
  6183                           	callstack 0
  6184  0017D4                     _LcNewString:
  6185                           	callstack 27
  6186                           
  6187                           ;LcTLCD.c: 240:     s_ptr = new_s;
  6188                           
  6189                           ;incstack = 0
  6190  0017D4  C066  F00C         	movff	LcNewString@new_s,_s_ptr
  6191  0017D8  C067  F00D         	movff	LcNewString@new_s+1,_s_ptr+1
  6192                           
  6193                           ;LcTLCD.c: 241:     nou_s = 1;
  6194  0017DC  8275               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6195  0017DE  0012               	return		;funcret
  6196  0017E0                     __end_of_LcNewString:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function _LcLliure *****************
  6200 ;; Defined at:
  6201 ;;		line 255 in file "LcTLCD.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;		None               void
  6208 ;; Registers used:
  6209 ;;		status,0
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1
  6215 ;;      Params:         0       0       0
  6216 ;;      Locals:         0       0       0
  6217 ;;      Temps:          0       0       0
  6218 ;;      Totals:         0       0       0
  6219 ;;Total ram usage:        0 bytes
  6220 ;; Hardware stack levels used: 1
  6221 ;; Hardware stack levels required when called: 2
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_menu
  6226 ;;		_GLCDMotor
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text43
  6231  0017E0                     __ptext43:
  6232                           	callstack 0
  6233  0017E0                     _LcLliure:
  6234                           	callstack 27
  6235                           
  6236                           ;LcTLCD.c: 256:     return !nou_s;
  6237                           
  6238                           ;incstack = 0
  6239  0017E0  A275               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6240  0017E2  D002               	goto	l1684
  6241  0017E4  90D8               	bcf	status,0,c
  6242  0017E6  0012               	return	
  6243  0017E8                     l1684:
  6244  0017E8  80D8               	bsf	status,0,c
  6245  0017EA  0012               	return		;funcret
  6246  0017EC                     __end_of_LcLliure:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _LcClear *****************
  6250 ;; Defined at:
  6251 ;;		line 82 in file "LcTLCD.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1
  6265 ;;      Params:         0       0       0
  6266 ;;      Locals:         0       0       0
  6267 ;;      Temps:          0       0       0
  6268 ;;      Totals:         0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 5
  6272 ;; This function calls:
  6273 ;;		_CantaIR
  6274 ;;		_Espera
  6275 ;;		_LcGotoXY
  6276 ;;		_WaitForBusy
  6277 ;; This function is called by:
  6278 ;;		_menu
  6279 ;;		_GLCDMotor
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text44
  6284  0016CA                     __ptext44:
  6285                           	callstack 0
  6286  0016CA                     _LcClear:
  6287                           	callstack 24
  6288                           
  6289                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  6290                           
  6291                           ;incstack = 0
  6292  0016CA  EC7E  F00A         	call	_WaitForBusy	;wreg free
  6293  0016CE  0E01               	movlw	1
  6294  0016D0  EC0D  F00B         	call	_CantaIR
  6295                           
  6296                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  6297  0016D4  0E00               	movlw	0
  6298  0016D6  6E6B               	movwf	(Espera@ms+1)^0,c
  6299  0016D8  0E03               	movlw	3
  6300  0016DA  6E6A               	movwf	Espera@ms^0,c
  6301  0016DC  5031               	movf	_Timer^0,w,c
  6302  0016DE  EC77  F00B         	call	_Espera
  6303                           
  6304                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  6305  0016E2  0E00               	movlw	0
  6306  0016E4  6E6B               	movwf	LcGotoXY@Row^0,c
  6307  0016E6  0E00               	movlw	0
  6308  0016E8  EC9E  F00A         	call	_LcGotoXY
  6309  0016EC  0012               	return		;funcret
  6310  0016EE                     __end_of_LcClear:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _LcGotoXY *****************
  6314 ;; Defined at:
  6315 ;;		line 104 in file "LcTLCD.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  Column          1    wreg     unsigned char 
  6318 ;;  Row             1   13[COMRAM] unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  Column          1   18[COMRAM] unsigned char 
  6321 ;;  Fisics          2   14[COMRAM] int 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1
  6331 ;;      Params:         1       0       0
  6332 ;;      Locals:         5       0       0
  6333 ;;      Temps:          0       0       0
  6334 ;;      Totals:         6       0       0
  6335 ;;Total ram usage:        6 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 4
  6338 ;; This function calls:
  6339 ;;		_CantaIR
  6340 ;;		_WaitForBusy
  6341 ;; This function is called by:
  6342 ;;		_LcClear
  6343 ;;		_LcPutChar
  6344 ;;		_menu
  6345 ;;		_GLCDMotor
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text45
  6350  00153C                     __ptext45:
  6351                           	callstack 0
  6352  00153C                     _LcGotoXY:
  6353                           	callstack 24
  6354                           
  6355                           ;incstack = 0
  6356                           ;LcGotoXY@Column stored from wreg
  6357  00153C  6E70               	movwf	LcGotoXY@Column^0,c
  6358                           
  6359                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  6360  00153E  506B               	movf	LcGotoXY@Row^0,w,c
  6361  001540  B4D8               	btfsc	status,2,c
  6362  001542  D004               	goto	l3004
  6363  001544  0E00               	movlw	0
  6364  001546  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  6365  001548  0E40               	movlw	64
  6366  00154A  D003               	goto	L7
  6367  00154C                     l3004:
  6368  00154C  0E00               	movlw	0
  6369  00154E  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  6370  001550  0E00               	movlw	0
  6371  001552                     L7:
  6372  001552  6E6E               	movwf	_LcGotoXY$342^0,c
  6373  001554  5070               	movf	LcGotoXY@Column^0,w,c
  6374  001556  246E               	addwf	_LcGotoXY$342^0,w,c
  6375  001558  6E6C               	movwf	LcGotoXY@Fisics^0,c
  6376  00155A  0E00               	movlw	0
  6377  00155C  206F               	addwfc	(_LcGotoXY$342+1)^0,w,c
  6378  00155E  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  6379                           
  6380                           ;LcTLCD.c: 125:  WaitForBusy();
  6381  001560  EC7E  F00A         	call	_WaitForBusy	;wreg free
  6382                           
  6383                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  6384  001564  506C               	movf	LcGotoXY@Fisics^0,w,c
  6385  001566  0980               	iorlw	128
  6386  001568  EC0D  F00B         	call	_CantaIR
  6387                           
  6388                           ;LcTLCD.c: 128:  RowAct = Row;
  6389  00156C  C06B  F033         	movff	LcGotoXY@Row,_RowAct
  6390                           
  6391                           ;LcTLCD.c: 129:  ColumnAct = Column;
  6392  001570  C070  F032         	movff	LcGotoXY@Column,_ColumnAct
  6393  001574  0012               	return		;funcret
  6394  001576                     __end_of_LcGotoXY:
  6395                           	callstack 0
  6396                           
  6397 ;; *************** function _WaitForBusy *****************
  6398 ;; Defined at:
  6399 ;;		line 210 in file "LcTLCD.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  Busy            1   12[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1
  6413 ;;      Params:         0       0       0
  6414 ;;      Locals:         1       0       0
  6415 ;;      Temps:          0       0       0
  6416 ;;      Totals:         1       0       0
  6417 ;;Total ram usage:        1 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 3
  6420 ;; This function calls:
  6421 ;;		_TiGetTics
  6422 ;;		_TiResetTics
  6423 ;; This function is called by:
  6424 ;;		_LcInit
  6425 ;;		_LcClear
  6426 ;;		_LcCursorOff
  6427 ;;		_LcGotoXY
  6428 ;;		_LcPutChar
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text46
  6433  0014FC                     __ptext46:
  6434                           	callstack 0
  6435  0014FC                     _WaitForBusy:
  6436                           	callstack 25
  6437                           
  6438                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6439                           
  6440                           ;incstack = 0
  6441  0014FC  8694               	bsf	148,3,c	;volatile
  6442  0014FE  8494               	bsf	148,2,c	;volatile
  6443  001500  8294               	bsf	148,1,c	;volatile
  6444  001502  8094               	bsf	148,0,c	;volatile
  6445                           
  6446                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  6447  001504  9A8B               	bcf	139,5,c	;volatile
  6448                           
  6449                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  6450  001506  8E8C               	bsf	140,7,c	;volatile
  6451                           
  6452                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  6453  001508  5031               	movf	_Timer^0,w,c
  6454  00150A  ECA9  F00B         	call	_TiResetTics
  6455  00150E                     l2972:
  6456                           
  6457                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6458  00150E  888B               	bsf	139,4,c	;volatile
  6459  001510  888B               	bsf	139,4,c	;volatile
  6460                           
  6461                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  6462  001512  0E00               	movlw	0
  6463  001514  B682               	btfsc	130,3,c	;volatile
  6464  001516  0E01               	movlw	1
  6465  001518  6E6A               	movwf	WaitForBusy@Busy^0,c
  6466                           
  6467                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  6468  00151A  988B               	bcf	139,4,c	;volatile
  6469                           
  6470                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  6471  00151C  988B               	bcf	139,4,c	;volatile
  6472                           
  6473                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6474  00151E  888B               	bsf	139,4,c	;volatile
  6475  001520  888B               	bsf	139,4,c	;volatile
  6476                           
  6477                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  6478  001522  988B               	bcf	139,4,c	;volatile
  6479                           
  6480                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  6481  001524  988B               	bcf	139,4,c	;volatile
  6482                           
  6483                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  6484  001526  5031               	movf	_Timer^0,w,c
  6485  001528  EC3D  F00B         	call	_TiGetTics
  6486  00152C  5063               	movf	?_TiGetTics^0,w,c
  6487  00152E  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  6488  001530  A4D8               	btfss	status,2,c
  6489  001532  0012               	return	
  6490                           
  6491                           ;LcTLCD.c: 225:  } while(Busy);
  6492  001534  506A               	movf	WaitForBusy@Busy^0,w,c
  6493  001536  B4D8               	btfsc	status,2,c
  6494  001538  0012               	return	
  6495  00153A  D7E9               	goto	l2972
  6496  00153C                     __end_of_WaitForBusy:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _CantaIR *****************
  6500 ;; Defined at:
  6501 ;;		line 178 in file "LcTLCD.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  IR              1    wreg     unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  IR              1    7[COMRAM] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1
  6515 ;;      Params:         0       0       0
  6516 ;;      Locals:         1       0       0
  6517 ;;      Temps:          0       0       0
  6518 ;;      Totals:         1       0       0
  6519 ;;Total ram usage:        1 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 3
  6522 ;; This function calls:
  6523 ;;		_CantaPartAlta
  6524 ;;		_CantaPartBaixa
  6525 ;; This function is called by:
  6526 ;;		_LcInit
  6527 ;;		_LcClear
  6528 ;;		_LcCursorOff
  6529 ;;		_LcGotoXY
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text47
  6534  00161A                     __ptext47:
  6535                           	callstack 0
  6536  00161A                     _CantaIR:
  6537                           	callstack 24
  6538                           
  6539                           ;incstack = 0
  6540                           ;CantaIR@IR stored from wreg
  6541  00161A  6E65               	movwf	CantaIR@IR^0,c
  6542                           
  6543                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6544  00161C  9694               	bcf	148,3,c	;volatile
  6545  00161E  9494               	bcf	148,2,c	;volatile
  6546  001620  9294               	bcf	148,1,c	;volatile
  6547  001622  9094               	bcf	148,0,c	;volatile
  6548                           
  6549                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  6550  001624  9A8B               	bcf	139,5,c	;volatile
  6551                           
  6552                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  6553  001626  9E8C               	bcf	140,7,c	;volatile
  6554                           
  6555                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  6556  001628  888B               	bsf	139,4,c	;volatile
  6557                           
  6558                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  6559  00162A  5065               	movf	CantaIR@IR^0,w,c
  6560  00162C  EC4B  F009         	call	_CantaPartAlta
  6561                           
  6562                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  6563  001630  888B               	bsf	139,4,c	;volatile
  6564                           
  6565                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  6566  001632  988B               	bcf	139,4,c	;volatile
  6567                           
  6568                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  6569  001634  988B               	bcf	139,4,c	;volatile
  6570                           
  6571                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  6572  001636  888B               	bsf	139,4,c	;volatile
  6573                           
  6574                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  6575  001638  5065               	movf	CantaIR@IR^0,w,c
  6576  00163A  EC17  F009         	call	_CantaPartBaixa
  6577                           
  6578                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  6579  00163E  888B               	bsf	139,4,c	;volatile
  6580                           
  6581                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  6582  001640  988B               	bcf	139,4,c	;volatile
  6583                           
  6584                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6585  001642  8694               	bsf	148,3,c	;volatile
  6586  001644  8494               	bsf	148,2,c	;volatile
  6587  001646  8294               	bsf	148,1,c	;volatile
  6588  001648  8094               	bsf	148,0,c	;volatile
  6589  00164A  0012               	return		;funcret
  6590  00164C                     __end_of_CantaIR:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _CantaPartBaixa *****************
  6594 ;; Defined at:
  6595 ;;		line 171 in file "LcTLCD.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  c               1    wreg     unsigned char 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  c               1    6[COMRAM] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1
  6609 ;;      Params:         0       0       0
  6610 ;;      Locals:         1       0       0
  6611 ;;      Temps:          1       0       0
  6612 ;;      Totals:         2       0       0
  6613 ;;Total ram usage:        2 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 2
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_CantaIR
  6620 ;;		_CantaData
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text48
  6625  00122E                     __ptext48:
  6626                           	callstack 0
  6627  00122E                     _CantaPartBaixa:
  6628                           	callstack 24
  6629                           
  6630                           ;incstack = 0
  6631                           ;CantaPartBaixa@c stored from wreg
  6632  00122E  6E64               	movwf	CantaPartBaixa@c^0,c
  6633                           
  6634                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  6635  001230  A664               	btfss	CantaPartBaixa@c^0,3,c
  6636  001232  D003               	goto	u2300
  6637  001234  6A63               	clrf	??_CantaPartBaixa^0,c
  6638  001236  2A63               	incf	??_CantaPartBaixa^0,f,c
  6639  001238  D001               	goto	u2318
  6640  00123A                     u2300:
  6641  00123A  6A63               	clrf	??_CantaPartBaixa^0,c
  6642  00123C                     u2318:
  6643  00123C  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6644  00123E  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6645  001240  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6646  001242  508B               	movf	139,w,c	;volatile
  6647  001244  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6648  001246  0BF7               	andlw	-9
  6649  001248  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6650  00124A  6E8B               	movwf	139,c	;volatile
  6651                           
  6652                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  6653  00124C  A464               	btfss	CantaPartBaixa@c^0,2,c
  6654  00124E  D003               	goto	u2320
  6655  001250  6A63               	clrf	??_CantaPartBaixa^0,c
  6656  001252  2A63               	incf	??_CantaPartBaixa^0,f,c
  6657  001254  D001               	goto	u2338
  6658  001256                     u2320:
  6659  001256  6A63               	clrf	??_CantaPartBaixa^0,c
  6660  001258                     u2338:
  6661  001258  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6662  00125A  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6663  00125C  508B               	movf	139,w,c	;volatile
  6664  00125E  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6665  001260  0BFB               	andlw	-5
  6666  001262  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6667  001264  6E8B               	movwf	139,c	;volatile
  6668                           
  6669                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  6670  001266  A264               	btfss	CantaPartBaixa@c^0,1,c
  6671  001268  D003               	goto	u2340
  6672  00126A  6A63               	clrf	??_CantaPartBaixa^0,c
  6673  00126C  2A63               	incf	??_CantaPartBaixa^0,f,c
  6674  00126E  D001               	goto	u2358
  6675  001270                     u2340:
  6676  001270  6A63               	clrf	??_CantaPartBaixa^0,c
  6677  001272                     u2358:
  6678  001272  4663               	rlncf	??_CantaPartBaixa^0,f,c
  6679  001274  508B               	movf	139,w,c	;volatile
  6680  001276  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6681  001278  0BFD               	andlw	-3
  6682  00127A  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6683  00127C  6E8B               	movwf	139,c	;volatile
  6684                           
  6685                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  6686  00127E  A064               	btfss	CantaPartBaixa@c^0,0,c
  6687  001280  D003               	goto	u2360
  6688  001282  6A63               	clrf	??_CantaPartBaixa^0,c
  6689  001284  2A63               	incf	??_CantaPartBaixa^0,f,c
  6690  001286  D001               	goto	u2378
  6691  001288                     u2360:
  6692  001288  6A63               	clrf	??_CantaPartBaixa^0,c
  6693  00128A                     u2378:
  6694  00128A  508B               	movf	139,w,c	;volatile
  6695  00128C  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6696  00128E  0BFE               	andlw	-2
  6697  001290  1863               	xorwf	??_CantaPartBaixa^0,w,c
  6698  001292  6E8B               	movwf	139,c	;volatile
  6699  001294  0012               	return		;funcret
  6700  001296                     __end_of_CantaPartBaixa:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _CantaPartAlta *****************
  6704 ;; Defined at:
  6705 ;;		line 164 in file "LcTLCD.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  c               1    wreg     unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  c               1    6[COMRAM] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1
  6719 ;;      Params:         0       0       0
  6720 ;;      Locals:         1       0       0
  6721 ;;      Temps:          1       0       0
  6722 ;;      Totals:         2       0       0
  6723 ;;Total ram usage:        2 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 2
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_CantaIR
  6730 ;;		_CantaData
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text49
  6735  001296                     __ptext49:
  6736                           	callstack 0
  6737  001296                     _CantaPartAlta:
  6738                           	callstack 24
  6739                           
  6740                           ;incstack = 0
  6741                           ;CantaPartAlta@c stored from wreg
  6742  001296  6E64               	movwf	CantaPartAlta@c^0,c
  6743                           
  6744                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  6745  001298  AE64               	btfss	CantaPartAlta@c^0,7,c
  6746  00129A  D003               	goto	u2220
  6747  00129C  6A63               	clrf	??_CantaPartAlta^0,c
  6748  00129E  2A63               	incf	??_CantaPartAlta^0,f,c
  6749  0012A0  D001               	goto	u2238
  6750  0012A2                     u2220:
  6751  0012A2  6A63               	clrf	??_CantaPartAlta^0,c
  6752  0012A4                     u2238:
  6753  0012A4  4663               	rlncf	??_CantaPartAlta^0,f,c
  6754  0012A6  4663               	rlncf	??_CantaPartAlta^0,f,c
  6755  0012A8  4663               	rlncf	??_CantaPartAlta^0,f,c
  6756  0012AA  508B               	movf	139,w,c	;volatile
  6757  0012AC  1863               	xorwf	??_CantaPartAlta^0,w,c
  6758  0012AE  0BF7               	andlw	-9
  6759  0012B0  1863               	xorwf	??_CantaPartAlta^0,w,c
  6760  0012B2  6E8B               	movwf	139,c	;volatile
  6761                           
  6762                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6763  0012B4  AC64               	btfss	CantaPartAlta@c^0,6,c
  6764  0012B6  D003               	goto	u2240
  6765  0012B8  6A63               	clrf	??_CantaPartAlta^0,c
  6766  0012BA  2A63               	incf	??_CantaPartAlta^0,f,c
  6767  0012BC  D001               	goto	u2258
  6768  0012BE                     u2240:
  6769  0012BE  6A63               	clrf	??_CantaPartAlta^0,c
  6770  0012C0                     u2258:
  6771  0012C0  4663               	rlncf	??_CantaPartAlta^0,f,c
  6772  0012C2  4663               	rlncf	??_CantaPartAlta^0,f,c
  6773  0012C4  508B               	movf	139,w,c	;volatile
  6774  0012C6  1863               	xorwf	??_CantaPartAlta^0,w,c
  6775  0012C8  0BFB               	andlw	-5
  6776  0012CA  1863               	xorwf	??_CantaPartAlta^0,w,c
  6777  0012CC  6E8B               	movwf	139,c	;volatile
  6778                           
  6779                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6780  0012CE  AA64               	btfss	CantaPartAlta@c^0,5,c
  6781  0012D0  D003               	goto	u2260
  6782  0012D2  6A63               	clrf	??_CantaPartAlta^0,c
  6783  0012D4  2A63               	incf	??_CantaPartAlta^0,f,c
  6784  0012D6  D001               	goto	u2278
  6785  0012D8                     u2260:
  6786  0012D8  6A63               	clrf	??_CantaPartAlta^0,c
  6787  0012DA                     u2278:
  6788  0012DA  4663               	rlncf	??_CantaPartAlta^0,f,c
  6789  0012DC  508B               	movf	139,w,c	;volatile
  6790  0012DE  1863               	xorwf	??_CantaPartAlta^0,w,c
  6791  0012E0  0BFD               	andlw	-3
  6792  0012E2  1863               	xorwf	??_CantaPartAlta^0,w,c
  6793  0012E4  6E8B               	movwf	139,c	;volatile
  6794                           
  6795                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6796  0012E6  A864               	btfss	CantaPartAlta@c^0,4,c
  6797  0012E8  D003               	goto	u2280
  6798  0012EA  6A63               	clrf	??_CantaPartAlta^0,c
  6799  0012EC  2A63               	incf	??_CantaPartAlta^0,f,c
  6800  0012EE  D001               	goto	u2298
  6801  0012F0                     u2280:
  6802  0012F0  6A63               	clrf	??_CantaPartAlta^0,c
  6803  0012F2                     u2298:
  6804  0012F2  508B               	movf	139,w,c	;volatile
  6805  0012F4  1863               	xorwf	??_CantaPartAlta^0,w,c
  6806  0012F6  0BFE               	andlw	-2
  6807  0012F8  1863               	xorwf	??_CantaPartAlta^0,w,c
  6808  0012FA  6E8B               	movwf	139,c	;volatile
  6809  0012FC  0012               	return		;funcret
  6810  0012FE                     __end_of_CantaPartAlta:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _Espera *****************
  6814 ;; Defined at:
  6815 ;;		line 159 in file "LcTLCD.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  Timer           1    wreg     unsigned char 
  6818 ;;  ms              2   12[COMRAM] int 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  Timer           1   15[COMRAM] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1
  6830 ;;      Params:         2       0       0
  6831 ;;      Locals:         1       0       0
  6832 ;;      Temps:          1       0       0
  6833 ;;      Totals:         4       0       0
  6834 ;;Total ram usage:        4 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; Hardware stack levels required when called: 3
  6837 ;; This function calls:
  6838 ;;		_TiGetTics
  6839 ;;		_TiResetTics
  6840 ;; This function is called by:
  6841 ;;		_LcInit
  6842 ;;		_LcClear
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text50
  6847  0016EE                     __ptext50:
  6848                           	callstack 0
  6849  0016EE                     _Espera:
  6850                           	callstack 25
  6851                           
  6852                           ;incstack = 0
  6853                           ;Espera@Timer stored from wreg
  6854  0016EE  6E6D               	movwf	Espera@Timer^0,c
  6855                           
  6856                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  6857  0016F0  506D               	movf	Espera@Timer^0,w,c
  6858  0016F2  ECA9  F00B         	call	_TiResetTics
  6859  0016F6                     l2998:
  6860  0016F6  506D               	movf	Espera@Timer^0,w,c
  6861  0016F8  EC3D  F00B         	call	_TiGetTics
  6862  0016FC  506A               	movf	Espera@ms^0,w,c
  6863  0016FE  5C63               	subwf	?_TiGetTics^0,w,c
  6864  001700  5064               	movf	(?_TiGetTics+1)^0,w,c
  6865  001702  0A80               	xorlw	128
  6866  001704  6E6C               	movwf	??_Espera^0,c
  6867  001706  506B               	movf	(Espera@ms+1)^0,w,c
  6868  001708  0A80               	xorlw	128
  6869  00170A  586C               	subwfb	??_Espera^0,w,c
  6870  00170C  B0D8               	btfsc	status,0,c
  6871  00170E  0012               	return	
  6872  001710  D7F2               	goto	l2998
  6873  001712                     __end_of_Espera:
  6874                           	callstack 0
  6875                           
  6876 ;; *************** function _TiResetTics *****************
  6877 ;; Defined at:
  6878 ;;		line 55 in file "TiTTimer.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  Handle          1    wreg     unsigned char 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  Handle          1    5[COMRAM] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1
  6892 ;;      Params:         0       0       0
  6893 ;;      Locals:         1       0       0
  6894 ;;      Temps:          0       0       0
  6895 ;;      Totals:         1       0       0
  6896 ;;Total ram usage:        1 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; Hardware stack levels required when called: 2
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_Espera
  6903 ;;		_WaitForBusy
  6904 ;;		_SMotor
  6905 ;;		_TeTeclat
  6906 ;;		_menu
  6907 ;;		_motorAltaveu
  6908 ;;		_GLCDMotor
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text51
  6913  001752                     __ptext51:
  6914                           	callstack 0
  6915  001752                     _TiResetTics:
  6916                           	callstack 27
  6917                           
  6918                           ;incstack = 0
  6919                           ;TiResetTics@Handle stored from wreg
  6920  001752  6E63               	movwf	TiResetTics@Handle^0,c
  6921                           
  6922                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  6923  001754  5063               	movf	TiResetTics@Handle^0,w,c
  6924  001756  0D03               	mullw	3
  6925  001758  50F3               	movf	243,w,c
  6926  00175A  0F80               	addlw	low _s_Timers
  6927  00175C  6ED9               	movwf	fsr2l,c
  6928  00175E  6ADA               	clrf	fsr2h,c
  6929  001760  C00A  FFDE         	movff	_h_Tics,postinc2
  6930  001764  C00B  FFDD         	movff	_h_Tics+1,postdec2
  6931  001768  0012               	return		;funcret
  6932  00176A                     __end_of_TiResetTics:
  6933                           	callstack 0
  6934                           
  6935 ;; *************** function _TiGetTics *****************
  6936 ;; Defined at:
  6937 ;;		line 61 in file "TiTTimer.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  Handle          1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  Handle          1    9[COMRAM] unsigned char 
  6942 ;;  actual          2   10[COMRAM] volatile unsigned int 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  2    5[COMRAM] int 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1
  6952 ;;      Params:         2       0       0
  6953 ;;      Locals:         3       0       0
  6954 ;;      Temps:          2       0       0
  6955 ;;      Totals:         7       0       0
  6956 ;;Total ram usage:        7 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 2
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_Espera
  6963 ;;		_WaitForBusy
  6964 ;;		_SMotor
  6965 ;;		_TeTeclat
  6966 ;;		_menu
  6967 ;;		_motorAltaveu
  6968 ;;		_GLCDMotor
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text52
  6973  00167A                     __ptext52:
  6974                           	callstack 0
  6975  00167A                     _TiGetTics:
  6976                           	callstack 27
  6977                           
  6978                           ;incstack = 0
  6979                           ;TiGetTics@Handle stored from wreg
  6980  00167A  6E67               	movwf	TiGetTics@Handle^0,c
  6981                           
  6982                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  6983  00167C  C00A  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  6984  001680  C00B  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  6985                           
  6986                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  6987  001684  5067               	movf	TiGetTics@Handle^0,w,c
  6988  001686  0D03               	mullw	3
  6989  001688  50F3               	movf	243,w,c
  6990  00168A  0F80               	addlw	low _s_Timers
  6991  00168C  6ED9               	movwf	fsr2l,c
  6992  00168E  6ADA               	clrf	fsr2h,c
  6993  001690  CFDE F065          	movff	postinc2,??_TiGetTics
  6994  001694  CFDD F066          	movff	postdec2,??_TiGetTics+1
  6995  001698  5065               	movf	??_TiGetTics^0,w,c
  6996  00169A  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  6997  00169C  6E63               	movwf	?_TiGetTics^0,c
  6998  00169E  5066               	movf	(??_TiGetTics+1)^0,w,c
  6999  0016A0  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  7000  0016A2  6E64               	movwf	(?_TiGetTics+1)^0,c
  7001  0016A4  0012               	return		;funcret
  7002  0016A6                     __end_of_TiGetTics:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _GLCDInit *****************
  7006 ;; Defined at:
  7007 ;;		line 26 in file "GestioLCD.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;		None
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1
  7021 ;;      Params:         0       0       0
  7022 ;;      Locals:         0       0       0
  7023 ;;      Temps:          0       0       0
  7024 ;;      Totals:         0       0       0
  7025 ;;Total ram usage:        0 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 3
  7028 ;; This function calls:
  7029 ;;		_TiGetTimer
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text53
  7036  001834                     __ptext53:
  7037                           	callstack 0
  7038  001834                     _GLCDInit:
  7039                           	callstack 27
  7040                           
  7041                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  7042                           
  7043                           ;incstack = 0
  7044  001834  ECBB  F00A         	call	_TiGetTimer	;wreg free
  7045  001838  6E19               	movwf	_timerGLCD^0,c
  7046  00183A  0012               	return		;funcret
  7047  00183C                     __end_of_GLCDInit:
  7048                           	callstack 0
  7049                           
  7050 ;; *************** function _TiGetTimer *****************
  7051 ;; Defined at:
  7052 ;;		line 70 in file "TiTTimer.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      unsigned char 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1
  7066 ;;      Params:         0       0       0
  7067 ;;      Locals:         0       0       0
  7068 ;;      Temps:          1       0       0
  7069 ;;      Totals:         1       0       0
  7070 ;;Total ram usage:        1 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 2
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_LcInit
  7077 ;;		_Sinit
  7078 ;;		_TeInit
  7079 ;;		_Minit
  7080 ;;		_initAltaveu
  7081 ;;		_GLCDInit
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text54
  7086  001576                     __ptext54:
  7087                           	callstack 0
  7088  001576                     _TiGetTimer:
  7089                           	callstack 27
  7090                           
  7091                           ;TiTTimer.c: 74:     counter=0;
  7092                           
  7093                           ;incstack = 0
  7094  001576  0E00               	movlw	0
  7095  001578  6E2A               	movwf	_counter^0,c
  7096                           
  7097                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  7098  00157A  D007               	goto	l3044
  7099  00157C                     l3036:
  7100                           
  7101                           ;TiTTimer.c: 76:         counter++;
  7102  00157C  2A2A               	incf	_counter^0,f,c
  7103                           
  7104                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  7105  00157E  0E08               	movlw	8
  7106  001580  182A               	xorwf	_counter^0,w,c
  7107  001582  A4D8               	btfss	status,2,c
  7108  001584  D002               	goto	l3044
  7109  001586  0EFF               	movlw	255
  7110  001588  0012               	return	
  7111  00158A                     l3044:
  7112                           
  7113                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  7114  00158A  502A               	movf	_counter^0,w,c
  7115  00158C  0D03               	mullw	3
  7116  00158E  50F3               	movf	243,w,c
  7117  001590  0F82               	addlw	low (_s_Timers+2)
  7118  001592  6ED9               	movwf	fsr2l,c
  7119  001594  6ADA               	clrf	fsr2h,c
  7120  001596  04DE               	decf	postinc2,w,c
  7121  001598  B4D8               	btfsc	status,2,c
  7122  00159A  D7F0               	goto	l3036
  7123                           
  7124                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  7125  00159C  502A               	movf	_counter^0,w,c
  7126  00159E  0D03               	mullw	3
  7127  0015A0  50F3               	movf	243,w,c
  7128  0015A2  0F82               	addlw	low (_s_Timers+2)
  7129  0015A4  6ED9               	movwf	fsr2l,c
  7130  0015A6  6ADA               	clrf	fsr2h,c
  7131  0015A8  0E01               	movlw	1
  7132  0015AA  6EDF               	movwf	indf2,c
  7133                           
  7134                           ;TiTTimer.c: 80:     return (counter);
  7135  0015AC  502A               	movf	_counter^0,w,c
  7136  0015AE  0012               	return		;funcret
  7137  0015B0                     __end_of_TiGetTimer:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function _high_rsi *****************
  7141 ;; Defined at:
  7142 ;;		line 18 in file "main.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;		None
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1    wreg      void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1
  7156 ;;      Params:         0       0       0
  7157 ;;      Locals:         0       0       0
  7158 ;;      Temps:          4       0       0
  7159 ;;      Totals:         4       0       0
  7160 ;;Total ram usage:        4 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; Hardware stack levels required when called: 1
  7163 ;; This function calls:
  7164 ;;		__TiRSITimer
  7165 ;; This function is called by:
  7166 ;;		Interrupt level 2
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	intcode
  7171  000008                     __pintcode:
  7172                           	callstack 0
  7173  000008                     _high_rsi:
  7174                           	callstack 24
  7175                           
  7176                           ;incstack = 0
  7177  000008  8276               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7178  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
  7179  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
  7180  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
  7181  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
  7182  00001A  ECAE  F009         	call	__TiRSITimer	;wreg free
  7183  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
  7184  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
  7185  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
  7186  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
  7187  00002E  9276               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7188  000030  0011               	retfie		f
  7189  000032                     __end_of_high_rsi:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function __TiRSITimer *****************
  7193 ;; Defined at:
  7194 ;;		line 37 in file "TiTTimer.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1
  7208 ;;      Params:         0       0       0
  7209 ;;      Locals:         0       0       0
  7210 ;;      Temps:          1       0       0
  7211 ;;      Totals:         1       0       0
  7212 ;;Total ram usage:        1 bytes
  7213 ;; Hardware stack levels used: 1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_high_rsi
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text56
  7222  00135C                     __ptext56:
  7223                           	callstack 0
  7224  00135C                     __TiRSITimer:
  7225                           	callstack 24
  7226                           
  7227                           ;TiTTimer.c: 39:     TMR0H = 223;
  7228                           
  7229                           ;incstack = 0
  7230  00135C  0EDF               	movlw	223
  7231  00135E  6ED7               	movwf	215,c	;volatile
  7232                           
  7233                           ;TiTTimer.c: 40:     TMR0L = 148;
  7234  001360  0E94               	movlw	148
  7235  001362  6ED6               	movwf	214,c	;volatile
  7236                           
  7237                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  7238  001364  94F2               	bcf	242,2,c	;volatile
  7239                           
  7240                           ;TiTTimer.c: 42:     h_Tics++;
  7241  001366  4A0A               	infsnz	_h_Tics^0,f,c
  7242  001368  2A0B               	incf	(_h_Tics+1)^0,f,c
  7243                           
  7244                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  7245  00136A  0E48               	movlw	72
  7246  00136C  5C0A               	subwf	_h_Tics^0,w,c
  7247  00136E  0EEE               	movlw	238
  7248  001370  580B               	subwfb	(_h_Tics+1)^0,w,c
  7249  001372  A0D8               	btfss	status,0,c
  7250  001374  0012               	return	
  7251                           
  7252                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  7253  001376  0E00               	movlw	0
  7254  001378  6E2A               	movwf	_counter^0,c
  7255  00137A                     i2l3206:
  7256  00137A  0E07               	movlw	7
  7257  00137C  642A               	cpfsgt	_counter^0,c
  7258  00137E  D001               	goto	i2l3210
  7259  001380  D015               	goto	i2l3218
  7260  001382                     i2l3210:
  7261                           
  7262                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  7263  001382  502A               	movf	_counter^0,w,c
  7264  001384  0D03               	mullw	3
  7265  001386  50F3               	movf	243,w,c
  7266  001388  0F82               	addlw	low (_s_Timers+2)
  7267  00138A  6ED9               	movwf	fsr2l,c
  7268  00138C  6ADA               	clrf	fsr2h,c
  7269  00138E  04DE               	decf	postinc2,w,c
  7270  001390  A4D8               	btfss	status,2,c
  7271  001392  D00A               	goto	i2l3214
  7272                           
  7273                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  7274  001394  502A               	movf	_counter^0,w,c
  7275  001396  0D03               	mullw	3
  7276  001398  50F3               	movf	243,w,c
  7277  00139A  0F80               	addlw	low _s_Timers
  7278  00139C  6ED9               	movwf	fsr2l,c
  7279  00139E  6ADA               	clrf	fsr2h,c
  7280  0013A0  500A               	movf	_h_Tics^0,w,c
  7281  0013A2  5EDE               	subwf	postinc2,f,c
  7282  0013A4  500B               	movf	(_h_Tics+1)^0,w,c
  7283  0013A6  5ADD               	subwfb	postdec2,f,c
  7284  0013A8                     i2l3214:
  7285                           
  7286                           ;TiTTimer.c: 50:         }
  7287  0013A8  2A2A               	incf	_counter^0,f,c
  7288  0013AA  D7E7               	goto	i2l3206
  7289  0013AC                     i2l3218:
  7290                           
  7291                           ;TiTTimer.c: 51:         h_Tics=0;
  7292  0013AC  0E00               	movlw	0
  7293  0013AE  6E0B               	movwf	(_h_Tics+1)^0,c
  7294  0013B0  0E00               	movlw	0
  7295  0013B2  6E0A               	movwf	_h_Tics^0,c
  7296  0013B4  0012               	return		;funcret
  7297  0013B6                     __end_of__TiRSITimer:
  7298                           	callstack 0
  7299                           
  7300                           	psect	rparam
  7301  0000                     
  7302                           	psect	temp
  7303  000076                     btemp:
  7304                           	callstack 0
  7305  000076                     	ds	1
  7306  0000                     int$flags	set	btemp
  7307  0000                     wtemp8	set	btemp+1
  7308  0000                     ttemp5	set	btemp+1
  7309  0000                     ttemp6	set	btemp+4
  7310  0000                     ttemp7	set	btemp+8
  7311                           
  7312                           	psect	idloc
  7313                           
  7314                           ;Config register IDLOC0 @ 0x200000
  7315                           ;	unspecified, using default values
  7316  200000                     	org	2097152
  7317  200000  FF                 	db	255
  7318                           
  7319                           ;Config register IDLOC1 @ 0x200001
  7320                           ;	unspecified, using default values
  7321  200001                     	org	2097153
  7322  200001  FF                 	db	255
  7323                           
  7324                           ;Config register IDLOC2 @ 0x200002
  7325                           ;	unspecified, using default values
  7326  200002                     	org	2097154
  7327  200002  FF                 	db	255
  7328                           
  7329                           ;Config register IDLOC3 @ 0x200003
  7330                           ;	unspecified, using default values
  7331  200003                     	org	2097155
  7332  200003  FF                 	db	255
  7333                           
  7334                           ;Config register IDLOC4 @ 0x200004
  7335                           ;	unspecified, using default values
  7336  200004                     	org	2097156
  7337  200004  FF                 	db	255
  7338                           
  7339                           ;Config register IDLOC5 @ 0x200005
  7340                           ;	unspecified, using default values
  7341  200005                     	org	2097157
  7342  200005  FF                 	db	255
  7343                           
  7344                           ;Config register IDLOC6 @ 0x200006
  7345                           ;	unspecified, using default values
  7346  200006                     	org	2097158
  7347  200006  FF                 	db	255
  7348                           
  7349                           ;Config register IDLOC7 @ 0x200007
  7350                           ;	unspecified, using default values
  7351  200007                     	org	2097159
  7352  200007  FF                 	db	255
  7353                           
  7354                           	psect	config
  7355                           
  7356                           ; Padding undefined space
  7357  300000                     	org	3145728
  7358  300000  FF                 	db	255
  7359                           
  7360                           ;Config register CONFIG1H @ 0x300001
  7361                           ;	Oscillator
  7362                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  7363                           ;	Fail-Safe Clock Monitor Enable bit
  7364                           ;	FCMEN = 0x0, unprogrammed default
  7365                           ;	Internal/External Oscillator Switchover bit
  7366                           ;	IESO = 0x0, unprogrammed default
  7367  300001                     	org	3145729
  7368  300001  06                 	db	6
  7369                           
  7370                           ;Config register CONFIG2L @ 0x300002
  7371                           ;	unspecified, using default values
  7372                           ;	Power-up Timer Enable bit
  7373                           ;	PWRT = 0x1, unprogrammed default
  7374                           ;	Brown-out Reset Enable bits
  7375                           ;	BOR = 0x3, unprogrammed default
  7376                           ;	Brown-out Reset Voltage bits
  7377                           ;	BORV = 0x3, unprogrammed default
  7378  300002                     	org	3145730
  7379  300002  1F                 	db	31
  7380                           
  7381                           ;Config register CONFIG2H @ 0x300003
  7382                           ;	Watchdog Timer Enable bit
  7383                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7384                           ;	Watchdog Timer Postscale Select bits
  7385                           ;	WDTPS = 0xF, unprogrammed default
  7386  300003                     	org	3145731
  7387  300003  1E                 	db	30
  7388                           
  7389                           ; Padding undefined space
  7390  300004                     	org	3145732
  7391  300004  FF                 	db	255
  7392                           
  7393                           ;Config register CONFIG3H @ 0x300005
  7394                           ;	CCP2 MUX bit
  7395                           ;	CCP2MX = 0x1, unprogrammed default
  7396                           ;	PORTB A/D Enable bit
  7397                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  7398                           ;	Low-Power Timer1 Oscillator Enable bit
  7399                           ;	LPT1OSC = 0x0, unprogrammed default
  7400                           ;	MCLR Pin Enable bit
  7401                           ;	MCLRE = 0x1, unprogrammed default
  7402  300005                     	org	3145733
  7403  300005  81                 	db	129
  7404                           
  7405                           ;Config register CONFIG4L @ 0x300006
  7406                           ;	Stack Full/Underflow Reset Enable bit
  7407                           ;	STVREN = 0x1, unprogrammed default
  7408                           ;	Single-Supply ICSP Enable bit
  7409                           ;	LVP = OFF, Single-Supply ICSP disabled
  7410                           ;	Boot Block Size Select bits
  7411                           ;	BBSIZ = 0x0, unprogrammed default
  7412                           ;	Extended Instruction Set Enable bit
  7413                           ;	XINST = 0x0, unprogrammed default
  7414                           ;	Background Debugger Enable bit
  7415                           ;	DEBUG = 0x1, unprogrammed default
  7416  300006                     	org	3145734
  7417  300006  81                 	db	129
  7418                           
  7419                           ; Padding undefined space
  7420  300007                     	org	3145735
  7421  300007  FF                 	db	255
  7422                           
  7423                           ;Config register CONFIG5L @ 0x300008
  7424                           ;	unspecified, using default values
  7425                           ;	Code Protection bit
  7426                           ;	CP0 = 0x1, unprogrammed default
  7427                           ;	Code Protection bit
  7428                           ;	CP1 = 0x1, unprogrammed default
  7429  300008                     	org	3145736
  7430  300008  03                 	db	3
  7431                           
  7432                           ;Config register CONFIG5H @ 0x300009
  7433                           ;	unspecified, using default values
  7434                           ;	Boot Block Code Protection bitProtect Boot
  7435                           ;	CPB = 0x1, unprogrammed default
  7436                           ;	Data EEPROM Code Protection bit
  7437                           ;	CPD = 0x1, unprogrammed default
  7438  300009                     	org	3145737
  7439  300009  C0                 	db	192
  7440                           
  7441                           ;Config register CONFIG6L @ 0x30000A
  7442                           ;	unspecified, using default values
  7443                           ;	Write Protection bit
  7444                           ;	WRT0 = 0x1, unprogrammed default
  7445                           ;	Write Protection bit
  7446                           ;	WRT1 = 0x1, unprogrammed default
  7447  30000A                     	org	3145738
  7448  30000A  03                 	db	3
  7449                           
  7450                           ;Config register CONFIG6H @ 0x30000B
  7451                           ;	unspecified, using default values
  7452                           ;	Configuration Register Write Protection bit
  7453                           ;	WRTC = 0x1, unprogrammed default
  7454                           ;	Boot Block Write Protection bit
  7455                           ;	WRTB = 0x1, unprogrammed default
  7456                           ;	Data EEPROM Write Protection bit
  7457                           ;	WRTD = 0x1, unprogrammed default
  7458  30000B                     	org	3145739
  7459  30000B  E0                 	db	224
  7460                           
  7461                           ;Config register CONFIG7L @ 0x30000C
  7462                           ;	unspecified, using default values
  7463                           ;	Table Read Protection bit
  7464                           ;	EBTR0 = 0x1, unprogrammed default
  7465                           ;	Table Read Protection bit
  7466                           ;	EBTR1 = 0x1, unprogrammed default
  7467  30000C                     	org	3145740
  7468  30000C  03                 	db	3
  7469                           
  7470                           ;Config register CONFIG7H @ 0x30000D
  7471                           ;	unspecified, using default values
  7472                           ;	Boot Block Table Read Protection bit
  7473                           ;	EBTRB = 0x1, unprogrammed default
  7474  30000D                     	org	3145741
  7475  30000D  40                 	db	64
  7476                           tosu	equ	0xFFF
  7477                           tosh	equ	0xFFE
  7478                           tosl	equ	0xFFD
  7479                           stkptr	equ	0xFFC
  7480                           pclatu	equ	0xFFB
  7481                           pclath	equ	0xFFA
  7482                           pcl	equ	0xFF9
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           indf0	equ	0xFEF
  7490                           postinc0	equ	0xFEE
  7491                           postdec0	equ	0xFED
  7492                           preinc0	equ	0xFEC
  7493                           plusw0	equ	0xFEB
  7494                           fsr0h	equ	0xFEA
  7495                           fsr0l	equ	0xFE9
  7496                           wreg	equ	0xFE8
  7497                           indf1	equ	0xFE7
  7498                           postinc1	equ	0xFE6
  7499                           postdec1	equ	0xFE5
  7500                           preinc1	equ	0xFE4
  7501                           plusw1	equ	0xFE3
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           bsr	equ	0xFE0
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           preinc2	equ	0xFDC
  7509                           plusw2	equ	0xFDB
  7510                           fsr2h	equ	0xFDA
  7511                           fsr2l	equ	0xFD9
  7512                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    145
    Data        31
    BSS         270
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     117
    BANK0           128      0      24
    BANK1           244      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_menu
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16665
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    6504
                                             20 COMRAM     2     2      0
                     _GLCDMostraMenu
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1689
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    6075
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1689
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     630
                                              8 COMRAM     2     0      2
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2332
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1357
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _GLCDMostraMenu
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      B8       6       75.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      18       4       18.8%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     16      75       1       92.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145       7        0.0%
DATA                 0      0     145       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 29 19:45:47 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03A7  
                               _i 0020                                 _j 001F  
                UgetUserName@quin 0065         ??_UcheckExistsNotFinished 0063  
          __end_of_compareStrings 14FC                               l460 06F2  
                             l615 0BAC                               l616 0BBC  
                             l618 0BC8                               l643 166A  
                             l591 112C                               l583 110A  
                             l832 0F56                               l824 0E86  
                             l833 0EE0                               l825 0EA0  
                             l593 1132                               l577 16C2  
                             l834 0EFA                               l586 1118  
                             l674 104C                               l755 0350  
                             l827 0EC4                               l836 0F1E  
                             l596 1168                               l598 116E  
                             l767 03E4                               l785 058A  
                             l787 05BA                               u230 11D0  
                             u250 11EC                               u308 1220  
                             u270 1206                               u248 11D2  
                             u290 121E                               u268 11EE  
                             u288 1208                               _tmp 0029  
                ??_CantaPartBaixa 0063                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 004E  
              __size_of_GLCDMotor 03CA                              l2102 1128  
                            l3004 154C                              l2212 0F36  
                            l2132 11AA                              l2222 0F3A  
                            l2160 0EB8                              l2152 0E9C  
                            l4000 0D9A                              l3122 14B8  
                            l3036 157C                              l3044 158A  
                            l4012 0DBE                              l2190 0EF6  
                            l2174 0EDC                              l3150 0F96  
                            l3302 0A52                              l4022 0DD8  
                            l4006 0DA8                              l3230 15D4  
                            l3080 1490                              l3320 0A88  
                            l4032 0E14                              l3128 14D4  
                            l3082 149A                              l3402 0B64  
                            l3314 0A72                              l3306 0A56  
                            l3250 09A8                              l3242 0994  
                            l4042 0E2A                              l4026 0DE4  
                            l4018 0DCC                              l3226 15CC  
                            l1714 17B8                              l3332 0AB4  
                            l3324 0A94                              l4052 0E42  
                            l2198 0F12                              l3342 0ACE  
                            l4046 0E36                              l4038 0E22  
                            l3502 07A2                              l3422 068A  
                            l3088 14AA                              l3352 0AEC  
                            l3280 0A10                              l3264 09D8  
                            l3408 0B68                              l3600 0890  
                            l3282 0A16                              l3266 09DE  
                            l1684 17E8                              l3372 0B20  
                            l3532 0806                              l3516 07CE  
                            l3444 06E0                              l3428 06A4  
                            l4084 13EC                              l3366 0B10  
                            l3358 0AF6                              l3294 0A3A  
                            l3526 07F6                              l3518 07D4  
                            l3446 06E6                              l3438 06CE  
                            l3800 0302                              l3376 0B28  
                            l3296 0A3E                              l3704 0BC2  
                            l3616 08B4                              l3608 08A2  
                            l3544 081E                              l3528 07FC  
                            l3394 0B3C                              l3722 0C08  
                            l1874 1650                              l3562 084E  
                            l3490 078A                              l3474 0752  
                            l3466 0738                              l3458 0710  
                            l3642 0920                              l3740 0C6C  
                            l3724 0C0E                              l3708 0BD2  
                            l3636 0908                              l3628 08E2  
                            l3484 077A                              l3476 0758  
                            l3814 035E                              l3398 0B4E  
                            l3718 0BFE                              l3486 0780  
                            l3670 1082                              l3662 1072  
                            l3654 105E                              l3904 04D8  
                            l3808 032E                              l3752 0CC4  
                            l3736 0C5A                              l3568 086C  
                            l3656 1064                              l3842 03D4  
                            l3762 0CDC                              l3586 0872  
                            l3690 10DC                              l2972 150E  
                            l3836 03C0                              l3828 03B2  
                            l3588 0878                              l3950 05C8  
                            l3942 05B4                              l3934 0594  
                            l3926 0564                              l3918 0534  
                            l3678 10B0                              l3960 05E4  
                            l3872 041E                              l3784 02C0  
                            l3768 0CEA                              l3776 0CF6  
                            l3954 05D0                              l3882 0466  
                            l3794 02F4                              l3970 062E  
                            l3964 060A                              l2998 16F6  
                            l3878 0444                              l3990 0D84  
                            l3888 0490                              l3992 0D8A  
                            l3984 0D74                              l3898 04C8  
                            l3986 0D78                              l3978 0D64  
                            STR_1 02A6                              STR_2 0292  
                            STR_3 02B5                              STR_4 02AE  
                            STR_5 029D                              u2220 12A2  
                            u2300 123A                              u2240 12BE  
                            u2320 1256                              _LATD 000F8C  
                            u2260 12D8                              u2340 1270  
                            u2238 12A4                              u2318 123C  
                            u2510 14E0                              u2280 12F0  
                            u2360 1288                              u2520 1044  
                            u3160 082E                              u2258 12C0  
                            u2338 1258                              u3090 07B2  
                            u3500 02FE                              u2540 1322  
                            u3180 0862                              u2278 12DA  
                            u2358 1272                              u2550 134A  
                            u3190 0864                              u3600 03DC  
                            u3360 0BCC                              u2298 12F2  
                            u2378 128A                              u2547 1318  
                            u2820 0AA4                              u2557 1340  
                            u2680 09FC                              u3570 03BA  
                            u2790 0A82                              u2880 0AFE  
                            u2890 0B18                              u3860 0D2A  
                            u3870 0D34                              u3880 0D44  
                            u3890 0D54                              u3876 0D36  
                            u3868 0D2C                              u3886 0D46  
                            u3896 0D56                   ??_SsetNovaTecla 0063  
                            _cap1 03A1                              _Rows 0035  
                            _cap2 03A0                              _main 13B6  
                            _menu 0688                              _nota 001D  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0076                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 16EE  
                            start 0032                   __end_of_CantaIR 164C  
                    ?_initAltaveu 005E                     LcInit@columns 006E  
                    ___param_bank 000000                  __end_of_GLCDInit 183C  
                     Espera@Timer 006D                             ?_main 005E  
         __size_of_escriureEEPROM 002E                             ?_menu 005E  
                           _EEADR 000FA9                     ??_TiInitTimer 0063  
                           _T0CON 000FD5                   ?_compareStrings 0063  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 12FE                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 183C  
                     _MNovaLletra 181C                             _Minit 1824  
                           _Sinit 1814                             _Timer 0031  
                           _Uinit 1100                             _s_ptr 000C  
                           _nou_s 03A9             __end_of_JoystickMotor 0F70  
                     _LcCursorOff 17C8       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03A0                             tablat 000FF5  
                     _LcNewString 17D4                     ??_TiResetTics 0063  
                           ttemp5 0077                             ttemp6 007A  
                           ttemp7 007E                             status 000FD8  
                           wtemp8 0077     __size_of_UcheckExistsGetError 0008  
                __end_of_LcGotoXY 1576                  __end_of_LcLliure 17EC  
                   ??__TiRSITimer 005E                        _TiGetTimer 1576  
         EscriuPrimeraOrdre@ordre 0064                   __initialization 140E  
              __size_of_CantaData 0032                      __end_of_main 140E  
                    __end_of_menu 0992             __size_of_MNouJoystick 0008  
               __end_of_GLCDMotor 0688                  __end_of_TeTeclat 0E84  
                   _indexNextUser 0022                            ??_main 0074  
                          ??_menu 0072                __size_of_LcPutChar 0052  
                   __activetblptr 000002                     _ultimaTeclaAD 000F  
                GLCDMotor@length1 0011                  GLCDMotor@length2 0010  
                          ?_LcLCD 005E                            ?_SMSon 005E  
                          ?_Minit 005E                            ?_Sinit 005E  
                          ?_Uinit 005E                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 15E8  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_SiFerMenu 0004                         ??_LcClear 0071  
                       ??_CantaIR 0065                            i2l3210 1382  
                          i2l3214 13A8                            i2l3206 137A  
                          i2l3218 13AC                    LcGotoXY@Fisics 006C  
                  LcGotoXY@Column 0070                     ??_WaitForBusy 006A  
              __size_of_TiGetTics 002C                    _sumaPulsacions 0030  
                          _SMSoff 1842                            _LcInit 0F70  
                    _MNouJoystick 182C                    _UgetNumUsuaris 1848  
                          _SMotor 0992               escriureCharEEPROM@c 0064  
                          _TeInit 180C                            _Espera 16EE  
                    _LcGotoXY$342 006E                            _RowAct 0033  
             __end_of_TiResetTics 176A                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 000A               __end_of__TiRSITimer 13B6  
                __end_of_menuList 0292                            clear_0 1434  
                          clear_1 1440                            clear_2 1450  
                      _UenviaChar 17A0                            isa$std 000001  
                      UenviaPas@c 0064       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 003F            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0024  
               __end_of_CantaData 161A                      TeTeclat@cols 002C  
                       ?_GLCDInit 005E                     ?_UcheckExists 005E  
                      __accesstop 0080           __end_of__initialization 1456  
          __end_of_UgetNumUsuaris 184C                 __end_of_LcPutChar 14B6  
                   ___rparam_used 000001                     __end_of_LcLCD 135C  
                     ?_TiGetTimer 005E                     __end_of_SMSon 1842  
                  __pcstackCOMRAM 005E                     __end_of_Minit 182C  
             __end_of_WaitForBusy 153C                     __end_of_Sinit 181C  
                   __end_of_Uinit 11B4                 __end_of_NoFerMenu 185C  
            __size_of_initAltaveu 0008                 __end_of_URegister 1854  
               __end_of_SiFerMenu 1858                    _escriureEEPROM 164C  
               __end_of_TiGetTics 16A6                       _TiInitTimer 15B0  
                         ??_LcLCD 0072                           ??_SMSon 0063  
                       ?_LcGotoXY 006B                         ?_LcLliure 005E  
                         ??_Minit 0064                           ??_Sinit 0064  
                         ??_Uinit 0063                    ??_UcheckExists 0063  
             MNouJoystick@posicio 0063                        ??_GLCDInit 0064  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 005E  
                     _TiResetTics 1752                   ?_UgetNumUsuaris 005E  
                   ??_UmotorUsers 0068                     ?_JoystickInit 005E  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 1296                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 17A0                       __TiRSITimer 135C  
             _indexNextUserStruct 0021                     ?_UgetUserName 0063  
                ??_compareStrings 0066            __end_of_escriureEEPROM 167A  
                     ?_UenviaChar 0063            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0070                        ??_LcGotoXY 006C  
                    ?_MNovaLletra 005E                        ??_LcLliure 0063  
             __size_of_TiGetTimer 003A                      ?_LcCursorOff 005E  
                       ?_high_rsi 005E                           _LcClear 16CA  
                         _CantaIR 161A                      ?_LcNewString 0066  
                  ??_JoystickInit 0063                        ??_TeTeclat 006A  
                     _WaitForBusy 14FC                    ?_CantaPartAlta 005E  
                         _Columns 0034             __end_of_SsetNovaTecla 1804  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00DA  
                         __Hparam 0000                   __size_of_SMotor 0218  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000                    ??_UgetUserName 0065  
             __end_of_UmotorUsers 0D20          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                     ?_motorAltaveu 005E  
                    __psmallconst 0200                           __pcinit 140E  
    __end_of_UcheckExistsGetError 17F4                           _ferMenu 03A3  
                      _init_ports 1712                           __ramtop 0200  
                         __ptext0 13B6                           __ptext1 104A  
                         __ptext2 0688                           __ptext3 176A  
                         __ptext4 1848                           __ptext5 1790  
                         __ptext6 17A0                           __ptext7 17B0  
                         __ptext8 17EC                           __ptext9 184C  
                       _T0CONbits 000FD5                         _GLCDMotor 02BE  
                       CantaIR@IR 0065                           _counter 002A  
                     UenviaChar@c 0064        __end_of_escriureCharEEPROM 16CA  
                LcNewString@new_s 0066                   WaitForBusy@Busy 006A  
                     Uinit@j_1067 0067                 GLCDMostraMenu@num 0063  
                      ??_high_rsi 005F              end_of_initialization 1456  
                         _usuaris 0100           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 0067  
                   _MsetNovaTecla 1804               __size_of_UenviaChar 0010  
                      _novaLletra 004C                   TiGetTics@actual 0068  
                      GLCDMotor@j 0016                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006A                        _numUsuaris 0023  
            __end_of_UcheckExists 1850                     TeTeclat@files 002B  
          __size_of_JoystickMotor 00EC                     TeTeclat@state 002D  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 005E                         _TRISCbits 000F94  
                       _TRISDbits 000F95                    _GLCDMostraMenu 17BC  
                 ??_CantaPartAlta 0063                    ?_MsetNovaTecla 005E  
                       _CantaData 15E8                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0BAA   __end_of_UcheckExistsNotFinished 17BC  
                  __end_of_SMSoff 1848                      ??_TiGetTimer 0063  
                  __end_of_LcInit 104A                    __end_of_SMotor 0BAA  
                       _LcPutChar 1464                    __end_of_TeInit 1814  
               motorAltaveu@state 001A                    __end_of_Espera 1712  
                  GLCDMotor@state 0017        __end_of_EscriuPrimeraOrdre 122E  
                   __pidataCOMRAM 1732                       ?_init_ports 005E  
                       _NoFerMenu 1858                         _ColumnAct 0032  
            __end_of_JoystickInit 1790                         _URegister 1850  
                    ?_TiInitTimer 005E                         _SiFerMenu 1854  
             start_initialization 140E                         _TiGetTics 167A  
          __end_of_GLCDMostraMenu 17C8                  ??_UgetNumUsuaris 0063  
                UmotorUsers@state 001E                 __size_of_LcGotoXY 003A  
            __end_of_UgetUserName 177E                __end_of_TiGetTimer 15B0  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 0E84                      ?_TiResetTics 005E  
            __size_of_LcCursorOff 000C                        ?_CantaData 005E  
            _UcheckExistsGetError 17EC              __size_of_LcNewString 000C  
                        ??_SMSoff 0063                          ??_LcInit 006F  
                       _NovaTecla 004D                 __size_of_TeTeclat 0164  
                        ??_SMotor 006A                          ??_TeInit 0064  
                    ?__TiRSITimer 005E                     ??_initAltaveu 0064  
                        ??_Espera 006C                        ?_LcPutChar 005E  
                       _UenviaPas 1790                      _menuDaltGLCD 0018  
                    ??_UenviaChar 0064                        ?_NoFerMenu 005E  
                     ??_GLCDMotor 0072                        ?_URegister 005E  
                      ?_SiFerMenu 005E                       __pbssCOMRAM 0001  
                      ?_TiGetTics 0063                   ?_GLCDMostraMenu 005E  
                  ?_JoystickMotor 005E                   ??_MsetNovaTecla 0063  
            __end_of_motorAltaveu 1100                          ?_LcClear 005E  
                        ?_CantaIR 005E                    _CantaPartBaixa 122E  
           ?_UcheckExistsGetError 005E                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005E               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 0063                SsetNovaTecla@tecla 0063  
              __end_of_UenviaChar 17B0                  ??_escriureEEPROM 0063  
           __size_of_UcheckExists 0004                         __pintcode 0008  
                      ?_UenviaPas 0063                   CantaPartBaixa@c 0064  
             __end_of_initAltaveu 17FC                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 1296                JoystickMotor@state 000E  
                        _GLCDInit 1834                escriureEEPROM@caca 0063  
                     _do_register 03A5                         _newString 03A2  
                    _UcheckExists 184C                       ??_CantaData 0065  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     ?_MNouJoystick 005E  
                   UenviaChar@pos 0063                _escriureCharEEPROM 16A6  
                       _novaTecla 0050                       ??_LcPutChar 0071  
                       _timerGLCD 0019                          _RCONbits 000FD0  
                       _reproduir 03A4             __size_of_JoystickInit 0012  
                       _timerMenu 0028               ?_escriureCharEEPROM 0063  
                     ??_NoFerMenu 0063                        _ADCON0bits 000FC2  
                     ??_URegister 0063                       ??_SiFerMenu 0063  
           __size_of_UgetUserName 0014            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006A                          _LcGotoXY 153C  
                  _usuariLoguejat 004A                          _LcLliure 17E0  
                     ??_TiGetTics 0065           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                   ??_JoystickMotor 0064  
                   GLCDMotor@max1 0049                     GLCDMotor@max2 0048  
                   GLCDMotor@min1 0015                     GLCDMotor@min2 0014  
                    _teclaPremuda 0052                       LcGotoXY@Row 006B  
                       copy_data0 1422              ??_escriureCharEEPROM 0064  
                 ?_CantaPartBaixa 005E            ??_UcheckExistsGetError 0063  
           escriureCharEEPROM@pos 0063                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0D20  
                  ??_MNouJoystick 0063                      ?_UmotorUsers 005E  
                    _JoystickInit 177E                        _EECON1bits 000FA6  
                     _indexUsuari 0026              __size_of_TiResetTics 0018  
                        __Hrparam 0000                       _initAltaveu 17F4  
                       menu@state 0025                          __Lrparam 0000  
            __size_of__TiRSITimer 005A                      _UgetUserName 176A  
                     ??_UenviaPas 0064                      _novaDireccio 004B  
                    ??_init_ports 0063             __size_of_motorAltaveu 00B6  
                 _do_check_exists 03A6                          __ptext10 1850  
                        __ptext11 1854                _EscriuPrimeraOrdre 11B4  
                        __ptext20 16A6                          __ptext12 183C  
                        __ptext21 14B6                          __ptext13 1842  
                        __ptext30 181C                          __ptext22 1100  
                        __ptext14 1858                          __ptext31 1824  
                        __ptext23 15B0                          __ptext15 17BC  
                        __ptext40 1464                          __ptext32 12FE  
                        __ptext24 0D20                          __ptext16 1712  
                        __ptext41 15E8                          __ptext33 0F70  
                        __ptext25 17FC                          __ptext17 17F4  
                        __ptext50 16EE                          __ptext42 17D4  
                        __ptext34 17C8                          __ptext26 1804  
                        __ptext18 164C                          __ptext51 1752  
                        __ptext43 17E0                          __ptext35 11B4  
                        __ptext27 180C                          __ptext19 0BAA  
                        __ptext52 167A                          __ptext44 16CA  
                        __ptext36 0E84                          __ptext28 1814  
                        __ptext53 1834                          __ptext45 153C  
                        __ptext37 182C                          __ptext29 0992  
                        __ptext54 1576                          __ptext46 14FC  
                        __ptext38 177E                          __ptext47 161A  
                        __ptext39 02BE                          __ptext56 135C  
                        __ptext48 122E                          __ptext49 1296  
                  CantaPartAlta@c 0064                       _lletraASCII 0051  
                        _high_rsi 0008                          _copsNota 001B  
                        _s_Timers 0080                       _lletraInici 003F  
                        _menuDalt 0027                          _menuList 0201  
             ?_EscriuPrimeraOrdre 005E                     __size_of_main 0058  
                   __size_of_menu 030A             __end_of_CantaPartAlta 12FE  
                   CantaData@Data 0065                          _tiTeclat 002E  
              __end_of_init_ports 1732                          _setSMSon 03A8  
                   _SsetNovaTecla 17FC              __size_of_WaitForBusy 0040  
                        _timerSMS 004F                          isa$xinst 000000  
                        int$flags 0076                      UenviaPas@pos 0063  
                    _motorAltaveu 104A              ??_EscriuPrimeraOrdre 0063  
                      LcInit@rows 006F                  ??_GLCDMostraMenu 0063  
         _UcheckExistsNotFinished 17B0                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0063                     ??_LcCursorOff 006B  
                   ??_LcNewString 0068                          intlevel2 0000  
                    _timerAltaveu 001C                        LcPutChar@c 0071  
                  ?_SsetNovaTecla 005E                 MNovaLletra@lletra 0063  
                 compareStrings@a 0063                   compareStrings@b 0064  
                     GLCDMotor@k1 0013                       GLCDMotor@k2 0012  
            __end_of_MNouJoystick 1834                    _compareStrings 14B6  
                     _tmpPassword 0001               __end_of_MNovaLletra 1824  
           __end_of_MsetNovaTecla 180C                       _tmpUsername 0036  
             __end_of_LcCursorOff 17D4                       SMotor@state 002F  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 17E0  
            __size_of_UmotorUsers 0176  
