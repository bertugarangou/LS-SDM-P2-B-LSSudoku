

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 04 20:37:12 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101  0000                     
   102                           ; Version 2.32
   103                           ; Generated 02/02/2021 GMT
   104                           ; 
   105                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution. Publication is not required when
   119                           ;        this file is used in an embedded application.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F4321 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  001B8C                     __pidataCOMRAM:
   140                           	callstack 0
   141                           
   142                           ;initializer for _lletraInici
   143  001B8C  41                 	db	65
   144  001B8D  44                 	db	68
   145  001B8E  47                 	db	71
   146  001B8F  4A                 	db	74
   147  001B90  4D                 	db	77
   148  001B91  50                 	db	80
   149  001B92  54                 	db	84
   150  001B93  57                 	db	87
   151  001B94  00                 	db	0
   152                           
   153                           ;initializer for _arrayZero
   154  001B95  30                 	db	48
   155  001B96  20                 	db	32
   156  001B97  00                 	db	0
   157                           
   158                           ;initializer for _novaTeclaSIO
   159  001B98  FF                 	db	255
   160                           
   161                           ;initializer for _direccioSIO
   162  001B99  FF                 	db	255
   163                           
   164                           ;initializer for _usuariActualSIO
   165  001B9A  FF                 	db	255
   166                           
   167                           ;initializer for _novaTeclaJOC
   168  001B9B  FF                 	db	255
   169                           
   170                           ;initializer for _usuariJoc
   171  001B9C  FF                 	db	255
   172                           
   173                           ;initializer for GLCDMotor@max2
   174  001B9D  0F                 	db	15
   175                           
   176                           ;initializer for GLCDMotor@max1
   177  001B9E  0F                 	db	15
   178                           
   179                           ;initializer for _usuariLoguejat
   180  001B9F  FF                 	db	255
   181                           
   182                           ;initializer for _novaDireccio
   183  001BA0  FF                 	db	255
   184                           
   185                           ;initializer for _novaLletra
   186  001BA1  FF                 	db	255
   187                           
   188                           ;initializer for _NovaTecla
   189  001BA2  FF                 	db	255
   190                           
   191                           ;initializer for _ultimaTecla
   192  001BA3  FF                 	db	255
   193                           
   194                           ;initializer for _timerSMS
   195  001BA4  FF                 	db	255
   196                           
   197                           ;initializer for _novaTecla
   198  001BA5  FF                 	db	255
   199                           
   200                           ;initializer for _lletraASCII
   201  001BA6  FF                 	db	255
   202                           
   203                           ;initializer for _hora
   204  001BA7  33                 	db	51
   205  001BA8  30                 	db	48
   206  001BA9  3A                 	db	58
   207  001BAA  30                 	db	48
   208  001BAB  30                 	db	48
   209  001BAC  00                 	db	0
   210                           
   211                           	psect	idataBANK0
   212  001BCE                     __pidataBANK0:
   213                           	callstack 0
   214                           
   215                           ;initializer for _teclaPremuda
   216  001BCE  01                 	db	1
   217  001BCF  02                 	db	2
   218  001BD0  03                 	db	3
   219  001BD1  04                 	db	4
   220  001BD2  05                 	db	5
   221  001BD3  06                 	db	6
   222  001BD4  07                 	db	7
   223  001BD5  08                 	db	8
   224  001BD6  09                 	db	9
   225  001BD7  0A                 	db	10
   226  001BD8  00                 	db	0
   227  001BD9  0B                 	db	11
   228                           
   229                           ;initializer for _registerText
   230  001BDA  32                 	db	50
   231  001BDB  2E                 	db	46
   232  001BDC  52                 	db	82
   233  001BDD  45                 	db	69
   234  001BDE  47                 	db	71
   235  001BDF  49                 	db	73
   236  001BE0  53                 	db	83
   237  001BE1  54                 	db	84
   238  001BE2  45                 	db	69
   239  001BE3  52                 	db	82
   240  001BE4  00                 	db	0
   241                           
   242                           ;initializer for _loginText
   243  001BE5  31                 	db	49
   244  001BE6  2E                 	db	46
   245  001BE7  4C                 	db	76
   246  001BE8  4F                 	db	79
   247  001BE9  47                 	db	71
   248  001BEA  49                 	db	73
   249  001BEB  4E                 	db	78
   250  001BEC  00                 	db	0
   251                           
   252                           	psect	smallconst
   253  000200                     __psmallconst:
   254                           	callstack 0
   255  000200  00                 	db	0
   256  000201                     _menuList:
   257                           	callstack 0
   258  000201  31                 	db	49
   259  000202  2E                 	db	46
   260  000203  50                 	db	80
   261  000204  6C                 	db	108
   262  000205  61                 	db	97
   263  000206  79                 	db	121
   264  000207  20                 	db	32
   265  000208  61                 	db	97
   266  000209  20                 	db	32
   267  00020A  47                 	db	71
   268  00020B  61                 	db	97
   269  00020C  6D                 	db	109
   270  00020D  65                 	db	101
   271  00020E  00                 	db	0
   272  00020F  00                 	db	0
   273  000210  00                 	db	0
   274  000211  00                 	db	0
   275  000212  00                 	db	0
   276  000213  00                 	db	0
   277  000214  00                 	db	0
   278  000215  00                 	db	0
   279  000216  00                 	db	0
   280  000217  00                 	db	0
   281  000218  00                 	db	0
   282  000219  00                 	db	0
   283  00021A  00                 	db	0
   284  00021B  00                 	db	0
   285  00021C  00                 	db	0
   286  00021D  00                 	db	0
   287  00021E  32                 	db	50
   288  00021F  2E                 	db	46
   289  000220  4D                 	db	77
   290  000221  6F                 	db	111
   291  000222  64                 	db	100
   292  000223  69                 	db	105
   293  000224  66                 	db	102
   294  000225  79                 	db	121
   295  000226  20                 	db	32
   296  000227  54                 	db	84
   297  000228  69                 	db	105
   298  000229  6D                 	db	109
   299  00022A  65                 	db	101
   300  00022B  00                 	db	0
   301  00022C  00                 	db	0
   302  00022D  00                 	db	0
   303  00022E  00                 	db	0
   304  00022F  00                 	db	0
   305  000230  00                 	db	0
   306  000231  00                 	db	0
   307  000232  00                 	db	0
   308  000233  00                 	db	0
   309  000234  00                 	db	0
   310  000235  00                 	db	0
   311  000236  00                 	db	0
   312  000237  00                 	db	0
   313  000238  00                 	db	0
   314  000239  00                 	db	0
   315  00023A  00                 	db	0
   316  00023B  33                 	db	51
   317  00023C  2E                 	db	46
   318  00023D  53                 	db	83
   319  00023E  68                 	db	104
   320  00023F  6F                 	db	111
   321  000240  77                 	db	119
   322  000241  20                 	db	32
   323  000242  47                 	db	71
   324  000243  65                 	db	101
   325  000244  6E                 	db	110
   326  000245  65                 	db	101
   327  000246  72                 	db	114
   328  000247  61                 	db	97
   329  000248  6C                 	db	108
   330  000249  20                 	db	32
   331  00024A  54                 	db	84
   332  00024B  6F                 	db	111
   333  00024C  70                 	db	112
   334  00024D  20                 	db	32
   335  00024E  35                 	db	53
   336  00024F  20                 	db	32
   337  000250  53                 	db	83
   338  000251  63                 	db	99
   339  000252  6F                 	db	111
   340  000253  72                 	db	114
   341  000254  65                 	db	101
   342  000255  73                 	db	115
   343  000256  20                 	db	32
   344  000257  00                 	db	0
   345  000258  34                 	db	52
   346  000259  2E                 	db	46
   347  00025A  4C                 	db	76
   348  00025B  6F                 	db	111
   349  00025C  67                 	db	103
   350  00025D  6F                 	db	111
   351  00025E  75                 	db	117
   352  00025F  74                 	db	116
   353  000260  00                 	db	0
   354  000261  00                 	db	0
   355  000262  00                 	db	0
   356  000263  00                 	db	0
   357  000264  00                 	db	0
   358  000265  00                 	db	0
   359  000266  00                 	db	0
   360  000267  00                 	db	0
   361  000268  00                 	db	0
   362  000269  00                 	db	0
   363  00026A  00                 	db	0
   364  00026B  00                 	db	0
   365  00026C  00                 	db	0
   366  00026D  00                 	db	0
   367  00026E  00                 	db	0
   368  00026F  00                 	db	0
   369  000270  00                 	db	0
   370  000271  00                 	db	0
   371  000272  00                 	db	0
   372  000273  00                 	db	0
   373  000274  00                 	db	0
   374  000275  35                 	db	53
   375  000276  2E                 	db	46
   376  000277  53                 	db	83
   377  000278  68                 	db	104
   378  000279  6F                 	db	111
   379  00027A  77                 	db	119
   380  00027B  20                 	db	32
   381  00027C  41                 	db	65
   382  00027D  6C                 	db	108
   383  00027E  6C                 	db	108
   384  00027F  20                 	db	32
   385  000280  55                 	db	85
   386  000281  73                 	db	115
   387  000282  65                 	db	101
   388  000283  72                 	db	114
   389  000284  73                 	db	115
   390  000285  00                 	db	0
   391  000286  00                 	db	0
   392  000287  00                 	db	0
   393  000288  00                 	db	0
   394  000289  00                 	db	0
   395  00028A  00                 	db	0
   396  00028B  00                 	db	0
   397  00028C  00                 	db	0
   398  00028D  00                 	db	0
   399  00028E  00                 	db	0
   400  00028F  00                 	db	0
   401  000290  00                 	db	0
   402  000291  00                 	db	0
   403  000292                     __end_of_menuList:
   404                           	callstack 0
   405  0000                     _RCREG	set	4014
   406  0000                     _TXREG	set	4013
   407  0000                     _TXSTAbits	set	4012
   408  0000                     _ADCON0bits	set	4034
   409  0000                     _ADRESH	set	4036
   410  0000                     _ADCON2	set	4032
   411  0000                     _ADCON1	set	4033
   412  0000                     _ADCON0	set	4034
   413  0000                     _EECON2	set	4007
   414  0000                     _EEDATA	set	4008
   415  0000                     _EEADR	set	4009
   416  0000                     _T0CONbits	set	4053
   417  0000                     _TMR0L	set	4054
   418  0000                     _TMR0H	set	4055
   419  0000                     _T0CON	set	4053
   420  0000                     _INTCONbits	set	4082
   421  0000                     _RCONbits	set	4048
   422  0000                     _PORTDbits	set	3971
   423  0000                     _SPBRG	set	4015
   424  0000                     _SPBRGH	set	4016
   425  0000                     _BAUDCON	set	4024
   426  0000                     _RCSTA	set	4011
   427  0000                     _TXSTA	set	4012
   428  0000                     _EECON1bits	set	4006
   429  0000                     _LATD	set	3980
   430  0000                     _TRISD	set	3989
   431  0000                     _TRISC	set	3988
   432  0000                     _LATBbits	set	3978
   433  0000                     _TRISB	set	3987
   434  0000                     _TRISA	set	3986
   435  0000                     _PORTCbits	set	3970
   436  0000                     _LATDbits	set	3980
   437  0000                     _LATCbits	set	3979
   438  0000                     _TRISDbits	set	3989
   439  0000                     _TRISCbits	set	3988
   440  000292                     STR_5:
   441  000292  54                 	db	84	;'T'
   442  000293  49                 	db	73	;'I'
   443  000294  4D                 	db	77	;'M'
   444  000295  45                 	db	69	;'E'
   445  000296  20                 	db	32
   446  000297  52                 	db	82	;'R'
   447  000298  45                 	db	69	;'E'
   448  000299  4D                 	db	77	;'M'
   449  00029A  41                 	db	65	;'A'
   450  00029B  49                 	db	73	;'I'
   451  00029C  4E                 	db	78	;'N'
   452  00029D  49                 	db	73	;'I'
   453  00029E  4E                 	db	78	;'N'
   454  00029F  47                 	db	71	;'G'
   455  0002A0  3A                 	db	58	;':'
   456  0002A1  00                 	db	0
   457  0002A2                     STR_4:
   458  0002A2  4D                 	db	77	;'M'
   459  0002A3  6F                 	db	111	;'o'
   460  0002A4  64                 	db	100	;'d'
   461  0002A5  69                 	db	105	;'i'
   462  0002A6  66                 	db	102	;'f'
   463  0002A7  79                 	db	121	;'y'
   464  0002A8  20                 	db	32
   465  0002A9  54                 	db	84	;'T'
   466  0002AA  69                 	db	105	;'i'
   467  0002AB  6D                 	db	109	;'m'
   468  0002AC  65                 	db	101	;'e'
   469  0002AD  3A                 	db	58	;':'
   470  0002AE  00                 	db	0
   471  0002AF                     STR_3:
   472  0002AF  42                 	db	66	;'B'
   473  0002B0  59                 	db	89	;'Y'
   474  0002B1  45                 	db	69	;'E'
   475  0002B2  20                 	db	32
   476  0002B3  42                 	db	66	;'B'
   477  0002B4  59                 	db	89	;'Y'
   478  0002B5  45                 	db	69	;'E'
   479  0002B6  20                 	db	32
   480  0002B7  00                 	db	0
   481  0002B8                     STR_2:
   482  0002B8  50                 	db	80	;'P'
   483  0002B9  53                 	db	83	;'S'
   484  0002BA  57                 	db	87	;'W'
   485  0002BB  44                 	db	68	;'D'
   486  0002BC  3A                 	db	58	;':'
   487  0002BD  20                 	db	32
   488  0002BE  00                 	db	0
   489  0002BF                     STR_1:
   490  0002BF  55                 	db	85	;'U'
   491  0002C0  53                 	db	83	;'S'
   492  0002C1  45                 	db	69	;'E'
   493  0002C2  52                 	db	82	;'R'
   494  0002C3  3A                 	db	58	;':'
   495  0002C4  20                 	db	32
   496  0002C5  00                 	db	0
   497  0002C6  00                 	db	0	; dummy byte at the end
   498  0000                     
   499                           ; #config settings
   500                           
   501                           	psect	cinit
   502  0015D4                     __pcinit:
   503                           	callstack 0
   504  0015D4                     start_initialization:
   505                           	callstack 0
   506  0015D4                     __initialization:
   507                           	callstack 0
   508                           
   509                           ; Initialize objects allocated to BANK0 (31 bytes)
   510                           ; load TBLPTR registers with __pidataBANK0
   511  0015D4  0ECE               	movlw	low __pidataBANK0
   512  0015D6  6EF6               	movwf	tblptrl,c
   513  0015D8  0E1B               	movlw	high __pidataBANK0
   514  0015DA  6EF7               	movwf	tblptrh,c
   515  0015DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   516  0015DE  6EF8               	movwf	tblptru,c
   517  0015E0  EE00  F0A1         	lfsr	0,__pdataBANK0
   518  0015E4  EE10 F01F          	lfsr	1,31
   519  0015E8                     copy_data0:
   520  0015E8  0009               	tblrd		*+
   521  0015EA  CFF5 FFEE          	movff	tablat,postinc0
   522  0015EE  50E5               	movf	postdec1,w,c
   523  0015F0  50E1               	movf	fsr1l,w,c
   524  0015F2  E1FA               	bnz	copy_data0
   525                           
   526                           ; Initialize objects allocated to COMRAM (33 bytes)
   527                           ; load TBLPTR registers with __pidataCOMRAM
   528  0015F4  0E8C               	movlw	low __pidataCOMRAM
   529  0015F6  6EF6               	movwf	tblptrl,c
   530  0015F8  0E1B               	movlw	high __pidataCOMRAM
   531  0015FA  6EF7               	movwf	tblptrh,c
   532  0015FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   533  0015FE  6EF8               	movwf	tblptru,c
   534  001600  EE00  F044         	lfsr	0,__pdataCOMRAM
   535  001604  EE10 F021          	lfsr	1,33
   536  001608                     copy_data1:
   537  001608  0009               	tblrd		*+
   538  00160A  CFF5 FFEE          	movff	tablat,postinc0
   539  00160E  50E5               	movf	postdec1,w,c
   540  001610  50E1               	movf	fsr1l,w,c
   541  001612  E1FA               	bnz	copy_data1
   542                           
   543                           ; Clear objects allocated to BANK1 (184 bytes)
   544  001614  EE01  F000         	lfsr	0,__pbssBANK1
   545  001618  0EB8               	movlw	184
   546  00161A                     clear_0:
   547  00161A  6AEE               	clrf	postinc0,c
   548  00161C  06E8               	decf	wreg,f,c
   549  00161E  E1FD               	bnz	clear_0
   550                           
   551                           ; Clear objects allocated to BANK0 (33 bytes)
   552  001620  EE00  F080         	lfsr	0,__pbssBANK0
   553  001624  0E21               	movlw	33
   554  001626                     clear_1:
   555  001626  6AEE               	clrf	postinc0,c
   556  001628  06E8               	decf	wreg,f,c
   557  00162A  E1FD               	bnz	clear_1
   558                           
   559                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   560  00162C  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   561  00162E  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   562                           
   563                           ; Clear objects allocated to COMRAM (67 bytes)
   564  001630  EE00  F001         	lfsr	0,__pbssCOMRAM
   565  001634  0E43               	movlw	67
   566  001636                     clear_2:
   567  001636  6AEE               	clrf	postinc0,c
   568  001638  06E8               	decf	wreg,f,c
   569  00163A  E1FD               	bnz	clear_2
   570  00163C                     end_of_initialization:
   571                           	callstack 0
   572  00163C                     __end_of__initialization:
   573                           	callstack 0
   574  00163C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   575  00163E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   576  001640  0E00               	movlw	low (__Lmediumconst shr (0+16))
   577  001642  6EF8               	movwf	tblptru,c
   578  001644  0100               	movlb	0
   579  001646  EF25  F00B         	goto	_main	;jump to C main() function
   580                           
   581                           	psect	bitbssCOMRAM
   582  0003C0                     __pbitbssCOMRAM:
   583                           	callstack 0
   584  0003C0                     _Krebut:
   585                           	callstack 0
   586  0003C0                     	ds	1
   587  0003C1                     _jugantSIO:
   588                           	callstack 0
   589  0003C1                     	ds	1
   590  0003C2                     _jugantJoc:
   591                           	callstack 0
   592  0003C2                     	ds	1
   593  0003C3                     _nouSegon:
   594                           	callstack 0
   595  0003C3                     	ds	1
   596  0003C4                     _jugant:
   597                           	callstack 0
   598  0003C4                     	ds	1
   599  0003C5                     _cap2:
   600                           	callstack 0
   601  0003C5                     	ds	1
   602  0003C6                     _cap1:
   603                           	callstack 0
   604  0003C6                     	ds	1
   605  0003C7                     _newString:
   606                           	callstack 0
   607  0003C7                     	ds	1
   608  0003C8                     _ferMenu:
   609                           	callstack 0
   610  0003C8                     	ds	1
   611  0003C9                     _reproduir:
   612                           	callstack 0
   613  0003C9                     	ds	1
   614  0003CA                     _borram:
   615                           	callstack 0
   616  0003CA                     	ds	1
   617  0003CB                     _do_register:
   618                           	callstack 0
   619  0003CB                     	ds	1
   620  0003CC                     _do_check_exists:
   621                           	callstack 0
   622  0003CC                     	ds	1
   623  0003CD                     _loginNOTRegister:
   624                           	callstack 0
   625  0003CD                     	ds	1
   626  0003CE                     _setSMSon:
   627                           	callstack 0
   628  0003CE                     	ds	1
   629  0003CF                     _nou_s:
   630                           	callstack 0
   631  0003CF                     	ds	1
   632                           
   633                           	psect	bssCOMRAM
   634  000001                     __pbssCOMRAM:
   635                           	callstack 0
   636  000001                     _userPtr:
   637                           	callstack 0
   638  000001                     	ds	2
   639  000003                     _h_Tics:
   640                           	callstack 0
   641  000003                     	ds	2
   642  000005                     _s_ptr:
   643                           	callstack 0
   644  000005                     	ds	2
   645  000007                     motorSIO@state:
   646                           	callstack 0
   647  000007                     	ds	1
   648  000008                     _rebut:
   649                           	callstack 0
   650  000008                     	ds	1
   651  000009                     motorJoc@state:
   652                           	callstack 0
   653  000009                     	ds	1
   654  00000A                     _direccioJoc:
   655                           	callstack 0
   656  00000A                     	ds	1
   657  00000B                     motorHora@state:
   658                           	callstack 0
   659  00000B                     	ds	1
   660  00000C                     _segons:
   661                           	callstack 0
   662  00000C                     	ds	1
   663  00000D                     _timerHora:
   664                           	callstack 0
   665  00000D                     	ds	1
   666  00000E                     JoystickMotor@state:
   667                           	callstack 0
   668  00000E                     	ds	1
   669  00000F                     _ultimaTeclaAD:
   670                           	callstack 0
   671  00000F                     	ds	1
   672  000010                     GLCDMotor@length2:
   673                           	callstack 0
   674  000010                     	ds	1
   675  000011                     GLCDMotor@length1:
   676                           	callstack 0
   677  000011                     	ds	1
   678  000012                     GLCDMotor@k2:
   679                           	callstack 0
   680  000012                     	ds	1
   681  000013                     GLCDMotor@k1:
   682                           	callstack 0
   683  000013                     	ds	1
   684  000014                     GLCDMotor@min2:
   685                           	callstack 0
   686  000014                     	ds	1
   687  000015                     GLCDMotor@min1:
   688                           	callstack 0
   689  000015                     	ds	1
   690  000016                     GLCDMotor@j:
   691                           	callstack 0
   692  000016                     	ds	1
   693  000017                     GLCDMotor@state:
   694                           	callstack 0
   695  000017                     	ds	1
   696  000018                     _menuDaltGLCD:
   697                           	callstack 0
   698  000018                     	ds	1
   699  000019                     _timerGLCD:
   700                           	callstack 0
   701  000019                     	ds	1
   702  00001A                     motorAltaveu@state:
   703                           	callstack 0
   704  00001A                     	ds	1
   705  00001B                     _copsNota:
   706                           	callstack 0
   707  00001B                     	ds	1
   708  00001C                     _timerAltaveu:
   709                           	callstack 0
   710  00001C                     	ds	1
   711  00001D                     _nota:
   712                           	callstack 0
   713  00001D                     	ds	1
   714  00001E                     UmotorUsers@state:
   715                           	callstack 0
   716  00001E                     	ds	1
   717  00001F                     _j:
   718                           	callstack 0
   719  00001F                     	ds	1
   720  000020                     _i:
   721                           	callstack 0
   722  000020                     	ds	1
   723  000021                     _indexNextUserStruct:
   724                           	callstack 0
   725  000021                     	ds	1
   726  000022                     _indexNextUser:
   727                           	callstack 0
   728  000022                     	ds	1
   729  000023                     _numUsuaris:
   730                           	callstack 0
   731  000023                     	ds	1
   732  000024                     _currentUsrIndex:
   733                           	callstack 0
   734  000024                     	ds	1
   735  000025                     menu@state:
   736                           	callstack 0
   737  000025                     	ds	1
   738  000026                     _indexUsuari:
   739                           	callstack 0
   740  000026                     	ds	1
   741  000027                     _menuDalt:
   742                           	callstack 0
   743  000027                     	ds	1
   744  000028                     _timerMenu:
   745                           	callstack 0
   746  000028                     	ds	1
   747  000029                     _tmp:
   748                           	callstack 0
   749  000029                     	ds	1
   750  00002A                     _counter:
   751                           	callstack 0
   752  00002A                     	ds	1
   753  00002B                     TeTeclat@files:
   754                           	callstack 0
   755  00002B                     	ds	1
   756  00002C                     TeTeclat@cols:
   757                           	callstack 0
   758  00002C                     	ds	1
   759  00002D                     TeTeclat@state:
   760                           	callstack 0
   761  00002D                     	ds	1
   762  00002E                     _tiTeclat:
   763                           	callstack 0
   764  00002E                     	ds	1
   765  00002F                     SMotor@state:
   766                           	callstack 0
   767  00002F                     	ds	1
   768  000030                     _zeroTecla:
   769                           	callstack 0
   770  000030                     	ds	1
   771  000031                     _sumaPulsacions:
   772                           	callstack 0
   773  000031                     	ds	1
   774  000032                     _Timer:
   775                           	callstack 0
   776  000032                     	ds	1
   777  000033                     _ColumnAct:
   778                           	callstack 0
   779  000033                     	ds	1
   780  000034                     _RowAct:
   781                           	callstack 0
   782  000034                     	ds	1
   783  000035                     _Columns:
   784                           	callstack 0
   785  000035                     	ds	1
   786  000036                     _Rows:
   787                           	callstack 0
   788  000036                     	ds	1
   789  000037                     _tmpUsername:
   790                           	callstack 0
   791  000037                     	ds	9
   792  000040                     _horaTmp:
   793                           	callstack 0
   794  000040                     	ds	4
   795                           
   796                           	psect	dataCOMRAM
   797  000044                     __pdataCOMRAM:
   798                           	callstack 0
   799  000044                     _lletraInici:
   800                           	callstack 0
   801  000044                     	ds	9
   802  00004D                     _arrayZero:
   803                           	callstack 0
   804  00004D                     	ds	3
   805  000050                     _novaTeclaSIO:
   806                           	callstack 0
   807  000050                     	ds	1
   808  000051                     _direccioSIO:
   809                           	callstack 0
   810  000051                     	ds	1
   811  000052                     _usuariActualSIO:
   812                           	callstack 0
   813  000052                     	ds	1
   814  000053                     _novaTeclaJOC:
   815                           	callstack 0
   816  000053                     	ds	1
   817  000054                     _usuariJoc:
   818                           	callstack 0
   819  000054                     	ds	1
   820  000055                     GLCDMotor@max2:
   821                           	callstack 0
   822  000055                     	ds	1
   823  000056                     GLCDMotor@max1:
   824                           	callstack 0
   825  000056                     	ds	1
   826  000057                     _usuariLoguejat:
   827                           	callstack 0
   828  000057                     	ds	1
   829  000058                     _novaDireccio:
   830                           	callstack 0
   831  000058                     	ds	1
   832  000059                     _novaLletra:
   833                           	callstack 0
   834  000059                     	ds	1
   835  00005A                     _NovaTecla:
   836                           	callstack 0
   837  00005A                     	ds	1
   838  00005B                     _ultimaTecla:
   839                           	callstack 0
   840  00005B                     	ds	1
   841  00005C                     _timerSMS:
   842                           	callstack 0
   843  00005C                     	ds	1
   844  00005D                     _novaTecla:
   845                           	callstack 0
   846  00005D                     	ds	1
   847  00005E                     _lletraASCII:
   848                           	callstack 0
   849  00005E                     	ds	1
   850  00005F                     _hora:
   851                           	callstack 0
   852  00005F                     	ds	6
   853                           
   854                           	psect	bssBANK0
   855  000080                     __pbssBANK0:
   856                           	callstack 0
   857  000080                     _s_Timers:
   858                           	callstack 0
   859  000080                     	ds	24
   860  000098                     _tmpPassword:
   861                           	callstack 0
   862  000098                     	ds	9
   863                           
   864                           	psect	dataBANK0
   865  0000A1                     __pdataBANK0:
   866                           	callstack 0
   867  0000A1                     _teclaPremuda:
   868                           	callstack 0
   869  0000A1                     	ds	12
   870  0000AD                     _registerText:
   871                           	callstack 0
   872  0000AD                     	ds	11
   873  0000B8                     _loginText:
   874                           	callstack 0
   875  0000B8                     	ds	8
   876                           
   877                           	psect	bssBANK1
   878  000100                     __pbssBANK1:
   879                           	callstack 0
   880  000100                     _usuaris:
   881                           	callstack 0
   882  000100                     	ds	184
   883                           
   884                           	psect	cstackBANK0
   885  0000C0                     __pcstackBANK0:
   886                           	callstack 0
   887  0000C0                     ??_motorJoc:
   888  0000C0                     LcInit@rows:
   889                           	callstack 0
   890  0000C0                     LcPutChar@c:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x0
   894  0000C0                     	ds	1
   895  0000C1                     ??_menu:
   896  0000C1                     ??_GLCDMotor:
   897  0000C1                     LcInit@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x1
   901  0000C1                     	ds	2
   902                           
   903                           	psect	cstackCOMRAM
   904  000065                     __pcstackCOMRAM:
   905                           	callstack 0
   906  000065                     
   907                           ; 1 bytes @ 0x0
   908  000065                     	ds	1
   909  000066                     ??_high_rsi:
   910                           
   911                           ; 1 bytes @ 0x1
   912  000066                     	ds	4
   913  00006A                     ??_EscriuPrimeraOrdre:
   914  00006A                     ??_Uinit:
   915  00006A                     ??_UcheckExistsGetError:
   916  00006A                     ??_CantaPartAlta:
   917  00006A                     ??_CantaPartBaixa:
   918  00006A                     ?_TiGetTics:
   919                           	callstack 0
   920  00006A                     ?_UgetUserName:
   921                           	callstack 0
   922  00006A                     SsetNovaTecla@tecla:
   923                           	callstack 0
   924  00006A                     TiResetTics@Handle:
   925                           	callstack 0
   926  00006A                     MsetNovaTecla@tecla:
   927                           	callstack 0
   928  00006A                     MNovaLletra@lletra:
   929                           	callstack 0
   930  00006A                     MNouJoystick@posicio:
   931                           	callstack 0
   932  00006A                     UenviaChar@pos:
   933                           	callstack 0
   934  00006A                     UenviaPas@pos:
   935                           	callstack 0
   936  00006A                     escriureCharEEPROM@pos:
   937                           	callstack 0
   938  00006A                     compareStrings@a:
   939                           	callstack 0
   940  00006A                     escriureEEPROM@caca:
   941                           	callstack 0
   942  00006A                     GLCDMostraMenu@num:
   943                           	callstack 0
   944  00006A                     HActualitzaHora@nova:
   945                           	callstack 0
   946  00006A                     JJuguem@usuari:
   947                           	callstack 0
   948  00006A                     JnovaTecla@tecla:
   949                           	callstack 0
   950  00006A                     JnovaDireccio@dir:
   951                           	callstack 0
   952  00006A                     conversorJoystick@direc:
   953                           	callstack 0
   954  00006A                     SIONovaDireccio@num:
   955                           	callstack 0
   956  00006A                     SIOStartGame@usuari:
   957                           	callstack 0
   958  00006A                     SIONovaTecla@tecla:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x5
   962  00006A                     	ds	1
   963  00006B                     ??_JoystickMotor:
   964  00006B                     CantaPartAlta@c:
   965                           	callstack 0
   966  00006B                     CantaPartBaixa@c:
   967                           	callstack 0
   968  00006B                     EscriuPrimeraOrdre@ordre:
   969                           	callstack 0
   970  00006B                     UenviaChar@c:
   971                           	callstack 0
   972  00006B                     UenviaPas@c:
   973                           	callstack 0
   974  00006B                     escriureCharEEPROM@c:
   975                           	callstack 0
   976  00006B                     compareStrings@b:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x6
   980  00006B                     	ds	1
   981  00006C                     ??_TiGetTics:
   982  00006C                     CantaIR@IR:
   983                           	callstack 0
   984  00006C                     CantaData@Data:
   985                           	callstack 0
   986  00006C                     UgetUserName@quin:
   987                           	callstack 0
   988  00006C                     Uinit@i:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x7
   992  00006C                     	ds	1
   993  00006D                     ??_motorSIO:
   994  00006D                     ??_compareStrings:
   995  00006D                     Uinit@j:
   996                           	callstack 0
   997  00006D                     LcNewString@new_s:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x8
  1001  00006D                     	ds	1
  1002  00006E                     TiGetTics@Handle:
  1003                           	callstack 0
  1004  00006E                     Uinit@j_1140:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x9
  1008  00006E                     	ds	1
  1009  00006F                     ??_UmotorUsers:
  1010  00006F                     TiGetTics@actual:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0xA
  1014  00006F                     	ds	2
  1015  000071                     ??_SMotor:
  1016  000071                     ??_motorHora:
  1017  000071                     ??_motorAltaveu:
  1018  000071                     ??_TeTeclat:
  1019  000071                     WaitForBusy@Busy:
  1020                           	callstack 0
  1021  000071                     Espera@ms:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xC
  1025  000071                     	ds	1
  1026  000072                     LcGotoXY@Row:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0xD
  1030  000072                     	ds	1
  1031  000073                     ??_Espera:
  1032  000073                     LcGotoXY@Fisics:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xE
  1036  000073                     	ds	1
  1037  000074                     Espera@Timer:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0xF
  1041  000074                     	ds	1
  1042  000075                     LcInit@columns:
  1043                           	callstack 0
  1044  000075                     _LcGotoXY$336:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x10
  1048  000075                     	ds	1
  1049  000076                     
  1050                           ; 1 bytes @ 0x11
  1051  000076                     	ds	1
  1052  000077                     LcGotoXY@Column:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x12
  1056  000077                     	ds	1
  1057  000078                     
  1058                           ; 1 bytes @ 0x13
  1059 ;;
  1060 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1061 ;;
  1062 ;; *************** function _main *****************
  1063 ;; Defined at:
  1064 ;;		line 75 in file "main.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1
  1078 ;;      Params:         0       0       0
  1079 ;;      Locals:         0       0       0
  1080 ;;      Temps:          0       0       0
  1081 ;;      Totals:         0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels required when called: 7
  1084 ;; This function calls:
  1085 ;;		_GLCDInit
  1086 ;;		_GLCDMotor
  1087 ;;		_JoystickInit
  1088 ;;		_JoystickMotor
  1089 ;;		_LcInit
  1090 ;;		_LcLCD
  1091 ;;		_Minit
  1092 ;;		_SMotor
  1093 ;;		_Sinit
  1094 ;;		_TeInit
  1095 ;;		_TeTeclat
  1096 ;;		_TiInitTimer
  1097 ;;		_Uinit
  1098 ;;		_UmotorUsers
  1099 ;;		_escriure2usuarisStruct
  1100 ;;		_escriureEEPROM
  1101 ;;		_initAltaveu
  1102 ;;		_initHora
  1103 ;;		_init_eusart
  1104 ;;		_init_ports
  1105 ;;		_menu
  1106 ;;		_motorAltaveu
  1107 ;;		_motorHora
  1108 ;;		_motorJoc
  1109 ;;		_motorSIO
  1110 ;; This function is called by:
  1111 ;;		Startup code after reset
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text0
  1116  00164A                     __ptext0:
  1117                           	callstack 0
  1118  00164A                     _main:
  1119                           	callstack 24
  1120                           
  1121                           ;main.c: 76:     init_ports();
  1122                           
  1123                           ;incstack = 0
  1124  00164A  ECD7  F00D         	call	_init_ports	;wreg free
  1125                           
  1126                           ;main.c: 77:     escriureEEPROM();
  1127  00164E  EC4D  F00D         	call	_escriureEEPROM	;wreg free
  1128                           
  1129                           ;main.c: 78:     init_eusart();
  1130  001652  EC03  F00E         	call	_init_eusart	;wreg free
  1131                           
  1132                           ;main.c: 79:     TiInitTimer();
  1133  001656  ECC9  F00C         	call	_TiInitTimer	;wreg free
  1134                           
  1135                           ;main.c: 80:     TeInit();
  1136  00165A  EC81  F00E         	call	_TeInit	;wreg free
  1137                           
  1138                           ;main.c: 81:     Sinit();
  1139  00165E  EC85  F00E         	call	_Sinit	;wreg free
  1140                           
  1141                           ;main.c: 82:     SMotor();
  1142  001662  EC94  F005         	call	_SMotor	;wreg free
  1143                           
  1144                           ;main.c: 83:     Uinit();
  1145  001666  EC14  F00A         	call	_Uinit	;wreg free
  1146                           
  1147                           ;main.c: 84:     initAltaveu();
  1148  00166A  EC75  F00E         	call	_initAltaveu	;wreg free
  1149                           
  1150                           ;main.c: 85:     GLCDInit();
  1151  00166E  EC95  F00E         	call	_GLCDInit	;wreg free
  1152                           
  1153                           ;main.c: 86:     JoystickInit();
  1154  001672  EC18  F00E         	call	_JoystickInit	;wreg free
  1155                           
  1156                           ;main.c: 87:     initHora();
  1157  001676  EC71  F00E         	call	_initHora	;wreg free
  1158                           
  1159                           ;main.c: 89:     LcInit(2,16);
  1160  00167A  0E10               	movlw	16
  1161  00167C  6E75               	movwf	LcInit@columns^0,c
  1162  00167E  0E02               	movlw	2
  1163  001680  EC76  F008         	call	_LcInit
  1164                           
  1165                           ;main.c: 90:     Minit();
  1166  001684  EC8D  F00E         	call	_Minit	;wreg free
  1167                           
  1168                           ;main.c: 92:     escriure2usuarisStruct();
  1169  001688  EC64  F00D         	call	_escriure2usuarisStruct	;wreg free
  1170  00168C                     l6764:
  1171                           
  1172                           ;main.c: 95:         motorJoc();
  1173  00168C  EC5A  F009         	call	_motorJoc	;wreg free
  1174                           
  1175                           ;main.c: 96:         motorSIO();
  1176  001690  ECE9  F008         	call	_motorSIO	;wreg free
  1177                           
  1178                           ;main.c: 97:         motorHora();
  1179  001694  EC6E  F00A         	call	_motorHora	;wreg free
  1180                           
  1181                           ;main.c: 98:         JoystickMotor();
  1182  001698  EC01  F008         	call	_JoystickMotor	;wreg free
  1183                           
  1184                           ;main.c: 99:         menu();
  1185  00169C  EC64  F001         	call	_menu	;wreg free
  1186                           
  1187                           ;main.c: 100:         motorAltaveu();
  1188  0016A0  ECB9  F009         	call	_motorAltaveu	;wreg free
  1189                           
  1190                           ;main.c: 101:         UmotorUsers();
  1191  0016A4  EC92  F006         	call	_UmotorUsers	;wreg free
  1192                           
  1193                           ;main.c: 102:         GLCDMotor();
  1194  0016A8  ECA8  F003         	call	_GLCDMotor	;wreg free
  1195                           
  1196                           ;main.c: 103:         TeTeclat();
  1197  0016AC  EC4F  F007         	call	_TeTeclat	;wreg free
  1198                           
  1199                           ;main.c: 104:         SMotor();
  1200  0016B0  EC94  F005         	call	_SMotor	;wreg free
  1201                           
  1202                           ;main.c: 105:         LcLCD();
  1203  0016B4  ECC5  F00B         	call	_LcLCD	;wreg free
  1204  0016B8  D7E9               	goto	l6764
  1205  0016BA                     __end_of_main:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _motorSIO *****************
  1209 ;; Defined at:
  1210 ;;		line 34 in file "SIO.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/1
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1
  1224 ;;      Params:         0       0       0
  1225 ;;      Locals:         0       0       0
  1226 ;;      Temps:          2       0       0
  1227 ;;      Totals:         2       0       0
  1228 ;;Total ram usage:        2 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 3
  1231 ;; This function calls:
  1232 ;;		_UgetUserName
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text1
  1239  0011D2                     __ptext1:
  1240                           	callstack 0
  1241  0011D2                     _motorSIO:
  1242                           	callstack 27
  1243                           
  1244                           ;SIO.c: 35:     static char state = 0;;SIO.c: 37:  switch(state) {
  1245                           
  1246                           ;incstack = 0
  1247  0011D2  D05A               	goto	l4438
  1248  0011D4                     l4382:
  1249                           
  1250                           ;SIO.c: 39:    if (usuariActualSIO > -1) {
  1251  0011D4  BE52               	btfsc	_usuariActualSIO^0,7,c
  1252  0011D6  0012               	return	
  1253                           
  1254                           ;SIO.c: 40:     userPtr = UgetUserName(usuariActualSIO);
  1255  0011D8  5052               	movf	_usuariActualSIO^0,w,c
  1256  0011DA  EC0E  F00E         	call	_UgetUserName
  1257  0011DE  C06A  F001         	movff	?_UgetUserName,_userPtr
  1258  0011E2  C06B  F002         	movff	?_UgetUserName+1,_userPtr+1
  1259                           
  1260                           ;SIO.c: 41:     jugantSIO = 1;
  1261  0011E6  8278               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1262                           
  1263                           ;SIO.c: 42:     Krebut = 0;
  1264  0011E8  9078               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1265                           
  1266                           ;SIO.c: 43:     state = 1;
  1267  0011EA  0E01               	movlw	1
  1268  0011EC  6E07               	movwf	motorSIO@state^0,c
  1269  0011EE  0012               	return	
  1270  0011F0                     l4392:
  1271                           
  1272                           ;SIO.c: 47:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1273  0011F0  C001  FFD9         	movff	_userPtr,fsr2l
  1274  0011F4  C002  FFDA         	movff	_userPtr+1,fsr2h
  1275  0011F8  50DF               	movf	indf2,w,c
  1276  0011FA  B4D8               	btfsc	status,2,c
  1277  0011FC  A2AC               	btfss	172,1,c	;volatile
  1278  0011FE  D008               	goto	l4400
  1279                           
  1280                           ;SIO.c: 48:     TXREG = '\0';
  1281  001200  0E00               	movlw	0
  1282  001202  6EAD               	movwf	173,c	;volatile
  1283                           
  1284                           ;SIO.c: 49:     novaTeclaSIO = 0;
  1285  001204  0E00               	movlw	0
  1286  001206  6E50               	movwf	_novaTeclaSIO^0,c
  1287                           
  1288                           ;SIO.c: 50:     LATBbits.LATB3 = 1;
  1289  001208  868A               	bsf	138,3,c	;volatile
  1290                           
  1291                           ;SIO.c: 51:     state = 2;
  1292  00120A  0E02               	movlw	2
  1293  00120C  6E07               	movwf	motorSIO@state^0,c
  1294                           
  1295                           ;SIO.c: 52:    }
  1296  00120E  0012               	return	
  1297  001210                     l4400:
  1298  001210  C001  FFD9         	movff	_userPtr,fsr2l
  1299  001214  C002  FFDA         	movff	_userPtr+1,fsr2h
  1300  001218  50DF               	movf	indf2,w,c
  1301  00121A  B4D8               	btfsc	status,2,c
  1302  00121C  0012               	return	
  1303  00121E  A2AC               	btfss	172,1,c	;volatile
  1304  001220  0012               	return	
  1305                           
  1306                           ;SIO.c: 54:     TXREG = *userPtr;
  1307  001222  C001  FFD9         	movff	_userPtr,fsr2l
  1308  001226  C002  FFDA         	movff	_userPtr+1,fsr2h
  1309  00122A  50DF               	movf	indf2,w,c
  1310  00122C  6EAD               	movwf	173,c	;volatile
  1311                           
  1312                           ;SIO.c: 55:     userPtr++;
  1313  00122E  4A01               	infsnz	_userPtr^0,f,c
  1314  001230  2A02               	incf	(_userPtr+1)^0,f,c
  1315  001232  0012               	return	
  1316  001234                     l4408:
  1317                           
  1318                           ;SIO.c: 59:    if (RCREG == 'K') {
  1319  001234  0E4B               	movlw	75
  1320  001236  18AE               	xorwf	174,w,c
  1321  001238  A4D8               	btfss	status,2,c
  1322  00123A  0012               	return	
  1323                           
  1324                           ;SIO.c: 60:     Krebut = 1;
  1325  00123C  8078               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1326  00123E                     l4412:
  1327                           
  1328                           ;SIO.c: 61:     state = 3;
  1329  00123E  0E03               	movlw	3
  1330  001240  6E07               	movwf	motorSIO@state^0,c
  1331  001242  0012               	return	
  1332  001244                     l4414:
  1333                           
  1334                           ;SIO.c: 65:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1335  001244  2851               	incf	_direccioSIO^0,w,c
  1336  001246  A4D8               	btfss	status,2,c
  1337  001248  A2AC               	btfss	172,1,c	;volatile
  1338  00124A  D004               	goto	l4422
  1339                           
  1340                           ;SIO.c: 66:     TXREG = direccioSIO;
  1341  00124C  C051  FFAD         	movff	_direccioSIO,4013	;volatile
  1342                           
  1343                           ;SIO.c: 67:     direccioSIO = -1;
  1344  001250  6851               	setf	_direccioSIO^0,c
  1345  001252  D7F5               	goto	l4412
  1346  001254                     l4422:
  1347  001254  0E30               	movlw	48
  1348  001256  6450               	cpfsgt	_novaTeclaSIO^0,c
  1349  001258  D00C               	goto	l1106
  1350  00125A  0E3A               	movlw	58
  1351  00125C  6050               	cpfslt	_novaTeclaSIO^0,c
  1352  00125E  D009               	goto	l1106
  1353  001260  A2AC               	btfss	172,1,c	;volatile
  1354  001262  D007               	goto	l1106
  1355                           
  1356                           ;SIO.c: 71:     TXREG = novaTeclaSIO;
  1357  001264  C050  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1358                           
  1359                           ;SIO.c: 72:     novaTeclaSIO = 0;
  1360  001268  0E00               	movlw	0
  1361  00126A  6E50               	movwf	_novaTeclaSIO^0,c
  1362                           
  1363                           ;SIO.c: 73:     state = 3;
  1364  00126C  0E03               	movlw	3
  1365  00126E  6E07               	movwf	motorSIO@state^0,c
  1366                           
  1367                           ;SIO.c: 74:    }
  1368  001270  0012               	return	
  1369  001272                     l1106:
  1370  001272  B278               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1371  001274  0012               	return	
  1372  001276  A2AC               	btfss	172,1,c	;volatile
  1373  001278  0012               	return	
  1374                           
  1375                           ;SIO.c: 76:     TXREG = 'F';
  1376  00127A  0E46               	movlw	70
  1377  00127C  6EAD               	movwf	173,c	;volatile
  1378                           
  1379                           ;SIO.c: 77:     novaTeclaSIO = 0;
  1380  00127E  0E00               	movlw	0
  1381  001280  6E50               	movwf	_novaTeclaSIO^0,c
  1382                           
  1383                           ;SIO.c: 78:     state = 4;
  1384  001282  0E04               	movlw	4
  1385  001284  6E07               	movwf	motorSIO@state^0,c
  1386  001286  0012               	return	
  1387  001288                     l4438:
  1388  001288  5007               	movf	motorSIO@state^0,w,c
  1389  00128A  6E6D               	movwf	??_motorSIO^0,c
  1390  00128C  6A6E               	clrf	(??_motorSIO+1)^0,c
  1391                           
  1392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1393                           ; Switch size 1, requested type "simple"
  1394                           ; Number of cases is 1, Range of values is 0 to 0
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte            4     3 (average)
  1398                           ;	Chosen strategy is simple_byte
  1399  00128E  506E               	movf	(??_motorSIO+1)^0,w,c
  1400  001290  0A00               	xorlw	0	; case 0
  1401  001292  A4D8               	btfss	status,2,c
  1402  001294  0012               	return	
  1403                           
  1404                           ; Switch size 1, requested type "simple"
  1405                           ; Number of cases is 5, Range of values is 0 to 4
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte           16     9 (average)
  1409                           ;	Chosen strategy is simple_byte
  1410  001296  506D               	movf	??_motorSIO^0,w,c
  1411  001298  0A00               	xorlw	0	; case 0
  1412  00129A  B4D8               	btfsc	status,2,c
  1413  00129C  D79B               	goto	l4382
  1414  00129E  0A01               	xorlw	1	; case 1
  1415  0012A0  B4D8               	btfsc	status,2,c
  1416  0012A2  D7A6               	goto	l4392
  1417  0012A4  0A03               	xorlw	3	; case 2
  1418  0012A6  B4D8               	btfsc	status,2,c
  1419  0012A8  D7C5               	goto	l4408
  1420  0012AA  0A01               	xorlw	1	; case 3
  1421  0012AC  B4D8               	btfsc	status,2,c
  1422  0012AE  D7CA               	goto	l4414
  1423  0012B0  0A07               	xorlw	7	; case 4
  1424  0012B2  0012               	return	
  1425  0012B4                     __end_of_motorSIO:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _motorJoc *****************
  1429 ;; Defined at:
  1430 ;;		line 48 in file "Joc.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/1
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1
  1444 ;;      Params:         0       0       0
  1445 ;;      Locals:         0       0       0
  1446 ;;      Temps:          0       2       0
  1447 ;;      Totals:         0       2       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 5
  1451 ;; This function calls:
  1452 ;;		_HClearNouSegon
  1453 ;;		_HGetTime
  1454 ;;		_HJugant
  1455 ;;		_HNouSegon
  1456 ;;		_HnoJugant
  1457 ;;		_LcGotoXY
  1458 ;;		_LcLliure
  1459 ;;		_LcNewString
  1460 ;;		_SIONovaDireccio
  1461 ;;		_SIONovaTecla
  1462 ;;		_SIOStartGame
  1463 ;;		_SIOcheckKrebut
  1464 ;;		_SIOendGame
  1465 ;;		_conversorJoystick
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text2
  1472  0012B4                     __ptext2:
  1473                           	callstack 0
  1474  0012B4                     _motorJoc:
  1475                           	callstack 25
  1476                           
  1477                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1478                           
  1479                           ;incstack = 0
  1480  0012B4  D04B               	goto	l5972
  1481  0012B6                     l5920:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1485  0012B6  2854               	incf	_usuariJoc^0,w,c
  1486  0012B8  B4D8               	btfsc	status,2,c
  1487  0012BA  0012               	return	
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1491  0012BC  5054               	movf	_usuariJoc^0,w,c
  1492  0012BE  EC55  F00E         	call	_SIOStartGame
  1493                           
  1494                           ;Joc.c: 55:     jugantJoc = 1;
  1495  0012C2  8478               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1496                           
  1497                           ;Joc.c: 56:     state = 2;
  1498  0012C4  0E02               	movlw	2
  1499  0012C6  6E09               	movwf	motorJoc@state^0,c
  1500                           
  1501                           ;Joc.c: 58:   break;
  1502                           
  1503                           ;Joc.c: 57:    }
  1504  0012C8  0012               	return	
  1505  0012CA                     l1032:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;Joc.c: 60:    if (!jugantJoc) {
  1509  0012CA  B478               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1510  0012CC  D009               	goto	l5936
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;Joc.c: 61:     usuariJoc = -1;
  1514  0012CE  6854               	setf	_usuariJoc^0,c
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;Joc.c: 62:     HnoJugant();
  1518  0012D0  ECA1  F00E         	call	_HnoJugant	;wreg free
  1519                           
  1520                           ;Joc.c: 63:     SIOendGame();
  1521  0012D4  EC9F  F00E         	call	_SIOendGame	;wreg free
  1522                           
  1523                           ;Joc.c: 64:     state = 0;
  1524  0012D8  0E00               	movlw	0
  1525  0012DA  6E09               	movwf	motorJoc@state^0,c
  1526                           
  1527                           ;Joc.c: 65:                 LATBbits.LATB3 = 0;
  1528  0012DC  968A               	bcf	138,3,c	;volatile
  1529                           
  1530                           ;Joc.c: 66:    }
  1531  0012DE  0012               	return	
  1532  0012E0                     l5936:
  1533                           
  1534                           ; BSR set to: 0
  1535  0012E0  BE0A               	btfsc	_direccioJoc^0,7,c
  1536  0012E2  D009               	goto	l5944
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1540  0012E4  500A               	movf	_direccioJoc^0,w,c
  1541  0012E6  ECE5  F00C         	call	_conversorJoystick
  1542  0012EA  EC5D  F00E         	call	_SIONovaDireccio
  1543                           
  1544                           ;Joc.c: 69:     direccioJoc = -1;
  1545  0012EE  680A               	setf	_direccioJoc^0,c
  1546  0012F0                     l5942:
  1547                           
  1548                           ;Joc.c: 70:     state = 1;
  1549  0012F0  0E01               	movlw	1
  1550  0012F2  6E09               	movwf	motorJoc@state^0,c
  1551                           
  1552                           ;Joc.c: 71:    }
  1553  0012F4  0012               	return	
  1554  0012F6                     l5944:
  1555                           
  1556                           ; BSR set to: 0
  1557  0012F6  EC37  F00E         	call	_HNouSegon	;wreg free
  1558  0012FA  A0D8               	btfss	status,0,c
  1559  0012FC  D015               	goto	l5956
  1560  0012FE  EC4F  F00E         	call	_LcLliure	;wreg free
  1561  001302  A0D8               	btfss	status,0,c
  1562  001304  D011               	goto	l5956
  1563                           
  1564                           ;Joc.c: 73:     HClearNouSegon();
  1565  001306  ECA7  F00E         	call	_HClearNouSegon	;wreg free
  1566                           
  1567                           ;Joc.c: 74:     LcGotoXY(0,1);
  1568  00130A  0E01               	movlw	1
  1569  00130C  6E72               	movwf	LcGotoXY@Row^0,c
  1570  00130E  0E00               	movlw	0
  1571  001310  EC8F  F00C         	call	_LcGotoXY
  1572                           
  1573                           ;Joc.c: 75:     LcNewString(HGetTime());
  1574  001314  ECA5  F00E         	call	_HGetTime	;wreg free
  1575  001318  0100               	movlb	0	; () banked
  1576  00131A  6FC0               	movwf	??_motorJoc& (0+255),b
  1577  00131C  C0C0  F06D         	movff	??_motorJoc,LcNewString@new_s
  1578  001320  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  1579  001322  EC49  F00E         	call	_LcNewString	;wreg free
  1580  001326  D7E4               	goto	l5942
  1581  001328                     l5956:
  1582  001328  5053               	movf	_novaTeclaJOC^0,w,c
  1583  00132A  0A80               	xorlw	128
  1584  00132C  0F7F               	addlw	-129
  1585  00132E  A0D8               	btfss	status,0,c
  1586  001330  0012               	return	
  1587                           
  1588                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1589  001332  5053               	movf	_novaTeclaJOC^0,w,c
  1590  001334  0F30               	addlw	48
  1591  001336  EC59  F00E         	call	_SIONovaTecla
  1592                           
  1593                           ;Joc.c: 80:     novaTeclaJOC = -1;
  1594  00133A  6853               	setf	_novaTeclaJOC^0,c
  1595  00133C  D7D9               	goto	l5942
  1596  00133E                     l5964:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  1600  00133E  EC31  F00E         	call	_SIOcheckKrebut	;wreg free
  1601  001342  A0D8               	btfss	status,0,c
  1602  001344  0012               	return	
  1603                           
  1604                           ;Joc.c: 86:     HJugant();
  1605  001346  ECA3  F00E         	call	_HJugant	;wreg free
  1606  00134A  D7D2               	goto	l5942
  1607  00134C                     l5972:
  1608  00134C  5009               	movf	motorJoc@state^0,w,c
  1609  00134E  0100               	movlb	0	; () banked
  1610  001350  6FC0               	movwf	??_motorJoc& (0+255),b
  1611  001352  6BC1               	clrf	(??_motorJoc+1)& (0+255),b
  1612                           
  1613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1614                           ; Switch size 1, requested type "simple"
  1615                           ; Number of cases is 1, Range of values is 0 to 0
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte            4     3 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  001354  51C1               	movf	(??_motorJoc+1)& (0+255),w,b
  1621  001356  0A00               	xorlw	0	; case 0
  1622  001358  A4D8               	btfss	status,2,c
  1623  00135A  0012               	return	
  1624                           
  1625                           ; BSR set to: 0
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 3, Range of values is 0 to 2
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte           10     6 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632  00135C  51C0               	movf	??_motorJoc& (0+255),w,b
  1633  00135E  0A00               	xorlw	0	; case 0
  1634  001360  B4D8               	btfsc	status,2,c
  1635  001362  D7A9               	goto	l5920
  1636  001364  0A01               	xorlw	1	; case 1
  1637  001366  B4D8               	btfsc	status,2,c
  1638  001368  D7B0               	goto	l1032
  1639  00136A  0A03               	xorlw	3	; case 2
  1640  00136C  A4D8               	btfss	status,2,c
  1641  00136E  0012               	return	
  1642  001370  D7E6               	goto	l5964
  1643  001372                     __end_of_motorJoc:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _conversorJoystick *****************
  1647 ;; Defined at:
  1648 ;;		line 31 in file "Joc.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  direc           1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  direc           1    5[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1
  1662 ;;      Params:         0       0       0
  1663 ;;      Locals:         1       0       0
  1664 ;;      Temps:          0       0       0
  1665 ;;      Totals:         1       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 2
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_motorJoc
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text3
  1677  0019CA                     __ptext3:
  1678                           	callstack 0
  1679  0019CA                     _conversorJoystick:
  1680                           	callstack 27
  1681                           
  1682                           ;incstack = 0
  1683                           ;conversorJoystick@direc stored from wreg
  1684  0019CA  6E6A               	movwf	conversorJoystick@direc^0,c
  1685                           
  1686                           ;Joc.c: 33:     if (direc==2) {
  1687  0019CC  0E02               	movlw	2
  1688  0019CE  186A               	xorwf	conversorJoystick@direc^0,w,c
  1689  0019D0  A4D8               	btfss	status,2,c
  1690  0019D2  D002               	goto	l2076
  1691                           
  1692                           ;Joc.c: 34:         return 'W';
  1693  0019D4  0E57               	movlw	87
  1694  0019D6  0012               	return	
  1695  0019D8                     l2076:
  1696                           
  1697                           ;Joc.c: 36:     if (direc==6) {
  1698  0019D8  0E06               	movlw	6
  1699  0019DA  186A               	xorwf	conversorJoystick@direc^0,w,c
  1700  0019DC  A4D8               	btfss	status,2,c
  1701  0019DE  D002               	goto	l2082
  1702                           
  1703                           ;Joc.c: 37:         return 'D';
  1704  0019E0  0E44               	movlw	68
  1705  0019E2  0012               	return	
  1706  0019E4                     l2082:
  1707                           
  1708                           ;Joc.c: 39:     if (direc==8) {
  1709  0019E4  0E08               	movlw	8
  1710  0019E6  186A               	xorwf	conversorJoystick@direc^0,w,c
  1711  0019E8  A4D8               	btfss	status,2,c
  1712  0019EA  D002               	goto	l2088
  1713                           
  1714                           ;Joc.c: 40:         return 'S';
  1715  0019EC  0E53               	movlw	83
  1716  0019EE  0012               	return	
  1717  0019F0                     l2088:
  1718                           
  1719                           ;Joc.c: 42:     if (direc==4) {
  1720  0019F0  0E04               	movlw	4
  1721  0019F2  186A               	xorwf	conversorJoystick@direc^0,w,c
  1722  0019F4  A4D8               	btfss	status,2,c
  1723  0019F6  D002               	goto	l2094
  1724                           
  1725                           ;Joc.c: 43:         return 'A';
  1726  0019F8  0E41               	movlw	65
  1727  0019FA  0012               	return	
  1728  0019FC                     l2094:
  1729                           
  1730                           ;Joc.c: 45:     return 0;
  1731  0019FC  0E00               	movlw	0
  1732  0019FE  0012               	return		;funcret
  1733  001A00                     __end_of_conversorJoystick:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _SIOendGame *****************
  1737 ;; Defined at:
  1738 ;;		line 13 in file "SIO.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		None
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1
  1752 ;;      Params:         0       0       0
  1753 ;;      Locals:         0       0       0
  1754 ;;      Temps:          0       0       0
  1755 ;;      Totals:         0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_motorJoc
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text4
  1767  001D3E                     __ptext4:
  1768                           	callstack 0
  1769  001D3E                     _SIOendGame:
  1770                           	callstack 27
  1771                           
  1772                           ;SIO.c: 14:     jugantSIO = 0;
  1773                           
  1774                           ;incstack = 0
  1775  001D3E  9278               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1776  001D40  0012               	return		;funcret
  1777  001D42                     __end_of_SIOendGame:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _SIOcheckKrebut *****************
  1781 ;; Defined at:
  1782 ;;		line 16 in file "SIO.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;		None               void
  1789 ;; Registers used:
  1790 ;;		status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1
  1796 ;;      Params:         0       0       0
  1797 ;;      Locals:         0       0       0
  1798 ;;      Temps:          0       0       0
  1799 ;;      Totals:         0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 2
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_motorJoc
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text5
  1811  001C62                     __ptext5:
  1812                           	callstack 0
  1813  001C62                     _SIOcheckKrebut:
  1814                           	callstack 27
  1815                           
  1816                           ;SIO.c: 17:     return Krebut;
  1817                           
  1818                           ;incstack = 0
  1819  001C62  B078               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1820  001C64  D002               	goto	l2110
  1821  001C66  90D8               	bcf	status,0,c
  1822  001C68  0012               	return	
  1823  001C6A                     l2110:
  1824  001C6A  80D8               	bsf	status,0,c
  1825  001C6C  0012               	return		;funcret
  1826  001C6E                     __end_of_SIOcheckKrebut:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _SIOStartGame *****************
  1830 ;; Defined at:
  1831 ;;		line 23 in file "SIO.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  usuari          1    wreg     unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  usuari          1    5[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1
  1845 ;;      Params:         0       0       0
  1846 ;;      Locals:         1       0       0
  1847 ;;      Temps:          0       0       0
  1848 ;;      Totals:         1       0       0
  1849 ;;Total ram usage:        1 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 2
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_motorJoc
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text6
  1860  001CAA                     __ptext6:
  1861                           	callstack 0
  1862  001CAA                     _SIOStartGame:
  1863                           	callstack 27
  1864                           
  1865                           ;incstack = 0
  1866                           ;SIOStartGame@usuari stored from wreg
  1867  001CAA  6E6A               	movwf	SIOStartGame@usuari^0,c
  1868                           
  1869                           ;SIO.c: 24:     usuariActualSIO = usuari;
  1870  001CAC  C06A  F052         	movff	SIOStartGame@usuari,_usuariActualSIO
  1871  001CB0  0012               	return		;funcret
  1872  001CB2                     __end_of_SIOStartGame:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _SIONovaTecla *****************
  1876 ;; Defined at:
  1877 ;;		line 30 in file "SIO.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  tecla           1    wreg     char 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  tecla           1    5[COMRAM] char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1
  1891 ;;      Params:         0       0       0
  1892 ;;      Locals:         1       0       0
  1893 ;;      Temps:          0       0       0
  1894 ;;      Totals:         1       0       0
  1895 ;;Total ram usage:        1 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; Hardware stack levels required when called: 2
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_motorJoc
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text7
  1906  001CB2                     __ptext7:
  1907                           	callstack 0
  1908  001CB2                     _SIONovaTecla:
  1909                           	callstack 27
  1910                           
  1911                           ;incstack = 0
  1912                           ;SIONovaTecla@tecla stored from wreg
  1913  001CB2  6E6A               	movwf	SIONovaTecla@tecla^0,c
  1914                           
  1915                           ;SIO.c: 31:     novaTeclaSIO = tecla;
  1916  001CB4  C06A  F050         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  1917  001CB8  0012               	return		;funcret
  1918  001CBA                     __end_of_SIONovaTecla:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _SIONovaDireccio *****************
  1922 ;; Defined at:
  1923 ;;		line 19 in file "SIO.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  num             1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  num             1    5[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1
  1937 ;;      Params:         0       0       0
  1938 ;;      Locals:         1       0       0
  1939 ;;      Temps:          0       0       0
  1940 ;;      Totals:         1       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 2
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_motorJoc
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text8
  1952  001CBA                     __ptext8:
  1953                           	callstack 0
  1954  001CBA                     _SIONovaDireccio:
  1955                           	callstack 27
  1956                           
  1957                           ;incstack = 0
  1958                           ;SIONovaDireccio@num stored from wreg
  1959  001CBA  6E6A               	movwf	SIONovaDireccio@num^0,c
  1960                           
  1961                           ;SIO.c: 20:     direccioSIO = num;
  1962  001CBC  C06A  F051         	movff	SIONovaDireccio@num,_direccioSIO
  1963  001CC0  0012               	return		;funcret
  1964  001CC2                     __end_of_SIONovaDireccio:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _HnoJugant *****************
  1968 ;; Defined at:
  1969 ;;		line 33 in file "Hora.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		None
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1
  1983 ;;      Params:         0       0       0
  1984 ;;      Locals:         0       0       0
  1985 ;;      Temps:          0       0       0
  1986 ;;      Totals:         0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 2
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_motorJoc
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text9
  1998  001D42                     __ptext9:
  1999                           	callstack 0
  2000  001D42                     _HnoJugant:
  2001                           	callstack 27
  2002                           
  2003                           ;Hora.c: 34:     jugant = 0;
  2004                           
  2005                           ;incstack = 0
  2006  001D42  9878               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2007  001D44  0012               	return		;funcret
  2008  001D46                     __end_of_HnoJugant:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _HNouSegon *****************
  2012 ;; Defined at:
  2013 ;;		line 21 in file "Hora.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;		None               void
  2020 ;; Registers used:
  2021 ;;		status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1
  2027 ;;      Params:         0       0       0
  2028 ;;      Locals:         0       0       0
  2029 ;;      Temps:          0       0       0
  2030 ;;      Totals:         0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 2
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_motorJoc
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text10
  2042  001C6E                     __ptext10:
  2043                           	callstack 0
  2044  001C6E                     _HNouSegon:
  2045                           	callstack 27
  2046                           
  2047                           ;Hora.c: 22:     return nouSegon;
  2048                           
  2049                           ;incstack = 0
  2050  001C6E  B678               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2051  001C70  D002               	goto	l2056
  2052  001C72  90D8               	bcf	status,0,c
  2053  001C74  0012               	return	
  2054  001C76                     l2056:
  2055  001C76  80D8               	bsf	status,0,c
  2056  001C78  0012               	return		;funcret
  2057  001C7A                     __end_of_HNouSegon:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _HJugant *****************
  2061 ;; Defined at:
  2062 ;;		line 36 in file "Hora.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1
  2076 ;;      Params:         0       0       0
  2077 ;;      Locals:         0       0       0
  2078 ;;      Temps:          0       0       0
  2079 ;;      Totals:         0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 2
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_motorJoc
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text11
  2091  001D46                     __ptext11:
  2092                           	callstack 0
  2093  001D46                     _HJugant:
  2094                           	callstack 27
  2095                           
  2096                           ;Hora.c: 37:     jugant = 1;
  2097                           
  2098                           ;incstack = 0
  2099  001D46  8878               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2100  001D48  0012               	return		;funcret
  2101  001D4A                     __end_of_HJugant:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _HGetTime *****************
  2105 ;; Defined at:
  2106 ;;		line 29 in file "Hora.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      PTR unsigned char 
  2113 ;; Registers used:
  2114 ;;		wreg
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1
  2120 ;;      Params:         2       0       0
  2121 ;;      Locals:         0       0       0
  2122 ;;      Temps:          0       0       0
  2123 ;;      Totals:         2       0       0
  2124 ;;Total ram usage:        2 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 2
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_motorJoc
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135  001D4A                     __ptext12:
  2136                           	callstack 0
  2137  001D4A                     _HGetTime:
  2138                           	callstack 27
  2139                           
  2140                           ;Hora.c: 30:     return hora;
  2141                           
  2142                           ;incstack = 0
  2143  001D4A  0E5F               	movlw	_hora& (0+255)
  2144  001D4C  0012               	return		;funcret
  2145  001D4E                     __end_of_HGetTime:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _HClearNouSegon *****************
  2149 ;; Defined at:
  2150 ;;		line 25 in file "Hora.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		None
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1
  2164 ;;      Params:         0       0       0
  2165 ;;      Locals:         0       0       0
  2166 ;;      Temps:          0       0       0
  2167 ;;      Totals:         0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_motorJoc
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text13
  2179  001D4E                     __ptext13:
  2180                           	callstack 0
  2181  001D4E                     _HClearNouSegon:
  2182                           	callstack 27
  2183                           
  2184                           ;Hora.c: 26:     nouSegon = 0;
  2185                           
  2186                           ;incstack = 0
  2187  001D4E  9678               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2188  001D50  0012               	return		;funcret
  2189  001D52                     __end_of_HClearNouSegon:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _motorHora *****************
  2193 ;; Defined at:
  2194 ;;		line 40 in file "Hora.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/1
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1
  2208 ;;      Params:         0       0       0
  2209 ;;      Locals:         0       0       0
  2210 ;;      Temps:          2       0       0
  2211 ;;      Totals:         2       0       0
  2212 ;;Total ram usage:        2 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 3
  2215 ;; This function calls:
  2216 ;;		_TiGetTics
  2217 ;;		_TiResetTics
  2218 ;;		_playAltaveu
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text14
  2225  0014DC                     __ptext14:
  2226                           	callstack 0
  2227  0014DC                     _motorHora:
  2228                           	callstack 27
  2229                           
  2230                           ;Hora.c: 41:  static char state = 0;;Hora.c: 43:  switch(state) {
  2231                           
  2232                           ;incstack = 0
  2233  0014DC  D032               	goto	l6032
  2234  0014DE                     l5984:
  2235                           
  2236                           ;Hora.c: 45:    if (TiGetTics(timerHora) >= 1205) {
  2237  0014DE  500D               	movf	_timerHora^0,w,c
  2238  0014E0  EC7A  F00D         	call	_TiGetTics
  2239  0014E4  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  2240  0014E6  0012               	return	
  2241  0014E8  0EB5               	movlw	181
  2242  0014EA  5C6A               	subwf	?_TiGetTics^0,w,c
  2243  0014EC  0E04               	movlw	4
  2244  0014EE  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  2245  0014F0  A0D8               	btfss	status,0,c
  2246  0014F2  0012               	return	
  2247                           
  2248                           ;Hora.c: 46:     TiResetTics(timerHora);
  2249  0014F4  500D               	movf	_timerHora^0,w,c
  2250  0014F6  ECF7  F00D         	call	_TiResetTics
  2251                           
  2252                           ;Hora.c: 47:     if(jugant){
  2253  0014FA  A878               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2254  0014FC  D01F               	goto	l6028
  2255                           
  2256                           ;Hora.c: 48:       nouSegon = 1;
  2257  0014FE  8678               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2258                           
  2259                           ;Hora.c: 50:      hora[4]--;
  2260  001500  0663               	decf	(_hora+4)^0,f,c
  2261                           
  2262                           ;Hora.c: 51:      if(hora[4] == ('0'-1)){
  2263  001502  0E2F               	movlw	47
  2264  001504  1863               	xorwf	(_hora+4)^0,w,c
  2265  001506  A4D8               	btfss	status,2,c
  2266  001508  D003               	goto	l6000
  2267                           
  2268                           ;Hora.c: 52:       hora[4] = '9';
  2269  00150A  0E39               	movlw	57
  2270  00150C  6E63               	movwf	(_hora+4)^0,c
  2271                           
  2272                           ;Hora.c: 53:       hora[3]--;
  2273  00150E  0662               	decf	(_hora+3)^0,f,c
  2274  001510                     l6000:
  2275                           
  2276                           ;Hora.c: 56:      if(hora[3] == ('0'-1)){
  2277  001510  0E2F               	movlw	47
  2278  001512  1862               	xorwf	(_hora+3)^0,w,c
  2279  001514  A4D8               	btfss	status,2,c
  2280  001516  D003               	goto	l6006
  2281                           
  2282                           ;Hora.c: 57:       hora[3] = '5';
  2283  001518  0E35               	movlw	53
  2284  00151A  6E62               	movwf	(_hora+3)^0,c
  2285                           
  2286                           ;Hora.c: 58:       hora[1]--;
  2287  00151C  0660               	decf	(_hora+1)^0,f,c
  2288  00151E                     l6006:
  2289                           
  2290                           ;Hora.c: 61:      if(hora[1] == ('0'-1)){
  2291  00151E  0E2F               	movlw	47
  2292  001520  1860               	xorwf	(_hora+1)^0,w,c
  2293  001522  A4D8               	btfss	status,2,c
  2294  001524  D003               	goto	l6012
  2295                           
  2296                           ;Hora.c: 62:       hora[1] = '9';
  2297  001526  0E39               	movlw	57
  2298  001528  6E60               	movwf	(_hora+1)^0,c
  2299                           
  2300                           ;Hora.c: 63:       hora[0]--;
  2301  00152A  065F               	decf	_hora^0,f,c
  2302  00152C                     l6012:
  2303                           
  2304                           ;Hora.c: 70:      segons++;
  2305  00152C  2A0C               	incf	_segons^0,f,c
  2306                           
  2307                           ;Hora.c: 71:      if(segons > 59){
  2308  00152E  0E3B               	movlw	59
  2309  001530  640C               	cpfsgt	_segons^0,c
  2310  001532  D004               	goto	l6028
  2311                           
  2312                           ;Hora.c: 72:       playAltaveu();
  2313  001534  ECA9  F00E         	call	_playAltaveu	;wreg free
  2314                           
  2315                           ;Hora.c: 73:       segons = 0;
  2316  001538  0E00               	movlw	0
  2317  00153A  6E0C               	movwf	_segons^0,c
  2318  00153C                     l6028:
  2319                           
  2320                           ;Hora.c: 76:     state = 0;
  2321  00153C  0E00               	movlw	0
  2322  00153E  6E0B               	movwf	motorHora@state^0,c
  2323  001540  0012               	return	
  2324  001542                     l6032:
  2325  001542  500B               	movf	motorHora@state^0,w,c
  2326  001544  6E71               	movwf	??_motorHora^0,c
  2327  001546  6A72               	clrf	(??_motorHora+1)^0,c
  2328                           
  2329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2330                           ; Switch size 1, requested type "simple"
  2331                           ; Number of cases is 1, Range of values is 0 to 0
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte            4     3 (average)
  2335                           ;	Chosen strategy is simple_byte
  2336  001548  5072               	movf	(??_motorHora+1)^0,w,c
  2337  00154A  0A00               	xorlw	0	; case 0
  2338  00154C  A4D8               	btfss	status,2,c
  2339  00154E  0012               	return	
  2340                           
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 1, Range of values is 0 to 0
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte            4     3 (average)
  2346                           ;	Chosen strategy is simple_byte
  2347  001550  5071               	movf	??_motorHora^0,w,c
  2348  001552  0A00               	xorlw	0	; case 0
  2349  001554  A4D8               	btfss	status,2,c
  2350  001556  0012               	return	
  2351  001558  D7C2               	goto	l5984
  2352  00155A                     __end_of_motorHora:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _playAltaveu *****************
  2356 ;; Defined at:
  2357 ;;		line 14 in file "Altaveu.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		None
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/1
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1
  2371 ;;      Params:         0       0       0
  2372 ;;      Locals:         0       0       0
  2373 ;;      Temps:          0       0       0
  2374 ;;      Totals:         0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 2
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_motorHora
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text15
  2386  001D52                     __ptext15:
  2387                           	callstack 0
  2388  001D52                     _playAltaveu:
  2389                           	callstack 27
  2390                           
  2391                           ;Altaveu.c: 15:     reproduir = 1;
  2392                           
  2393                           ;incstack = 0
  2394  001D52  8279               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2395  001D54  0012               	return		;funcret
  2396  001D56                     __end_of_playAltaveu:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _motorAltaveu *****************
  2400 ;; Defined at:
  2401 ;;		line 17 in file "Altaveu.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/1
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1
  2415 ;;      Params:         0       0       0
  2416 ;;      Locals:         0       0       0
  2417 ;;      Temps:          3       0       0
  2418 ;;      Totals:         3       0       0
  2419 ;;Total ram usage:        3 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 3
  2422 ;; This function calls:
  2423 ;;		_TiGetTics
  2424 ;;		_TiResetTics
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text16
  2431  001372                     __ptext16:
  2432                           	callstack 0
  2433  001372                     _motorAltaveu:
  2434                           	callstack 27
  2435                           
  2436                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2437                           
  2438                           ;incstack = 0
  2439  001372  D048               	goto	l6450
  2440  001374                     l739:
  2441                           
  2442                           ;Altaveu.c: 22:    if (reproduir) {
  2443  001374  A279               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2444  001376  0012               	return	
  2445                           
  2446                           ;Altaveu.c: 23:     nota = 1;
  2447  001378  0E01               	movlw	1
  2448  00137A  6E1D               	movwf	_nota^0,c
  2449                           
  2450                           ;Altaveu.c: 24:     copsNota = 0;
  2451  00137C  0E00               	movlw	0
  2452  00137E  6E1B               	movwf	_copsNota^0,c
  2453                           
  2454                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2455  001380  501C               	movf	_timerAltaveu^0,w,c
  2456  001382  ECF7  F00D         	call	_TiResetTics
  2457  001386                     l6414:
  2458                           
  2459                           ;Altaveu.c: 26:     state = 1;
  2460  001386  0E01               	movlw	1
  2461  001388  6E1A               	movwf	motorAltaveu@state^0,c
  2462  00138A  0012               	return	
  2463  00138C                     l6416:
  2464                           
  2465                           ;Altaveu.c: 30:    if (nota > 5) {
  2466  00138C  0E05               	movlw	5
  2467  00138E  641D               	cpfsgt	_nota^0,c
  2468  001390  D004               	goto	l6422
  2469                           
  2470                           ;Altaveu.c: 31:     reproduir = 0;
  2471  001392  9279               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2472                           
  2473                           ;Altaveu.c: 32:     state = 0;
  2474  001394  0E00               	movlw	0
  2475  001396  6E1A               	movwf	motorAltaveu@state^0,c
  2476                           
  2477                           ;Altaveu.c: 33:    }
  2478  001398  0012               	return	
  2479  00139A                     l6422:
  2480  00139A  0EA8               	movlw	168
  2481  00139C  181B               	xorwf	_copsNota^0,w,c
  2482  00139E  A4D8               	btfss	status,2,c
  2483  0013A0  D004               	goto	l6430
  2484                           
  2485                           ;Altaveu.c: 35:     nota++;
  2486  0013A2  2A1D               	incf	_nota^0,f,c
  2487                           
  2488                           ;Altaveu.c: 36:     copsNota = 0;
  2489  0013A4  0E00               	movlw	0
  2490  0013A6  6E1B               	movwf	_copsNota^0,c
  2491  0013A8  D7EE               	goto	l6414
  2492  0013AA                     l6430:
  2493  0013AA  501C               	movf	_timerAltaveu^0,w,c
  2494  0013AC  EC7A  F00D         	call	_TiGetTics
  2495  0013B0  501D               	movf	_nota^0,w,c
  2496  0013B2  6E71               	movwf	??_motorAltaveu^0,c
  2497  0013B4  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2498  0013B6  506A               	movf	?_TiGetTics^0,w,c
  2499  0013B8  5C71               	subwf	??_motorAltaveu^0,w,c
  2500  0013BA  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2501  0013BC  0A80               	xorlw	128
  2502  0013BE  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2503  0013C0  506B               	movf	(?_TiGetTics+1)^0,w,c
  2504  0013C2  0A80               	xorlw	128
  2505  0013C4  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2506  0013C6  B0D8               	btfsc	status,0,c
  2507  0013C8  0012               	return	
  2508                           
  2509                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2510  0013CA  808A               	bsf	138,0,c	;volatile
  2511                           
  2512                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2513  0013CC  501C               	movf	_timerAltaveu^0,w,c
  2514  0013CE  ECF7  F00D         	call	_TiResetTics
  2515                           
  2516                           ;Altaveu.c: 42:     state = 2;
  2517  0013D2  0E02               	movlw	2
  2518  0013D4  6E1A               	movwf	motorAltaveu@state^0,c
  2519  0013D6  0012               	return	
  2520  0013D8                     l6438:
  2521                           
  2522                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2523  0013D8  501C               	movf	_timerAltaveu^0,w,c
  2524  0013DA  EC7A  F00D         	call	_TiGetTics
  2525  0013DE  501D               	movf	_nota^0,w,c
  2526  0013E0  6E71               	movwf	??_motorAltaveu^0,c
  2527  0013E2  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2528  0013E4  506A               	movf	?_TiGetTics^0,w,c
  2529  0013E6  5C71               	subwf	??_motorAltaveu^0,w,c
  2530  0013E8  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2531  0013EA  0A80               	xorlw	128
  2532  0013EC  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2533  0013EE  506B               	movf	(?_TiGetTics+1)^0,w,c
  2534  0013F0  0A80               	xorlw	128
  2535  0013F2  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2536  0013F4  B0D8               	btfsc	status,0,c
  2537  0013F6  0012               	return	
  2538                           
  2539                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2540  0013F8  908A               	bcf	138,0,c	;volatile
  2541                           
  2542                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2543  0013FA  501C               	movf	_timerAltaveu^0,w,c
  2544  0013FC  ECF7  F00D         	call	_TiResetTics
  2545                           
  2546                           ;Altaveu.c: 49:     copsNota++;
  2547  001400  2A1B               	incf	_copsNota^0,f,c
  2548  001402  D7C1               	goto	l6414
  2549  001404                     l6450:
  2550  001404  501A               	movf	motorAltaveu@state^0,w,c
  2551  001406  6E71               	movwf	??_motorAltaveu^0,c
  2552  001408  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2553                           
  2554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2555                           ; Switch size 1, requested type "simple"
  2556                           ; Number of cases is 1, Range of values is 0 to 0
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte            4     3 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561  00140A  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2562  00140C  0A00               	xorlw	0	; case 0
  2563  00140E  A4D8               	btfss	status,2,c
  2564  001410  0012               	return	
  2565                           
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 3, Range of values is 0 to 2
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte           10     6 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  001412  5071               	movf	??_motorAltaveu^0,w,c
  2573  001414  0A00               	xorlw	0	; case 0
  2574  001416  B4D8               	btfsc	status,2,c
  2575  001418  D7AD               	goto	l739
  2576  00141A  0A01               	xorlw	1	; case 1
  2577  00141C  B4D8               	btfsc	status,2,c
  2578  00141E  D7B6               	goto	l6416
  2579  001420  0A03               	xorlw	3	; case 2
  2580  001422  A4D8               	btfss	status,2,c
  2581  001424  0012               	return	
  2582  001426  D7D8               	goto	l6438
  2583  001428                     __end_of_motorAltaveu:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _menu *****************
  2587 ;; Defined at:
  2588 ;;		line 39 in file "Menu.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/1
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1
  2602 ;;      Params:         0       0       0
  2603 ;;      Locals:         0       0       0
  2604 ;;      Temps:          0       2       0
  2605 ;;      Totals:         0       2       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 6
  2609 ;; This function calls:
  2610 ;;		_GLCDMostraMenu
  2611 ;;		_HActualitzaHora
  2612 ;;		_JJuguem
  2613 ;;		_JendGame
  2614 ;;		_JnovaDireccio
  2615 ;;		_JnovaTecla
  2616 ;;		_LcClear
  2617 ;;		_LcGotoXY
  2618 ;;		_LcLliure
  2619 ;;		_LcNewString
  2620 ;;		_LcPutChar
  2621 ;;		_NoFerMenu
  2622 ;;		_SMSoff
  2623 ;;		_SMSon
  2624 ;;		_SiFerMenu
  2625 ;;		_TiGetTics
  2626 ;;		_TiResetTics
  2627 ;;		_URegister
  2628 ;;		_UcheckExists
  2629 ;;		_UcheckExistsGetError
  2630 ;;		_UcheckExistsNotFinished
  2631 ;;		_UenviaChar
  2632 ;;		_UenviaPas
  2633 ;;		_UgetNumUsuaris
  2634 ;;		_UgetUserName
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text17
  2641  0002C8                     __ptext17:
  2642                           	callstack 0
  2643  0002C8                     _menu:
  2644                           	callstack 24
  2645                           
  2646                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  2647                           
  2648                           ;incstack = 0
  2649  0002C8  D1F6               	goto	l6398
  2650  0002CA                     l6040:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;Menu.c: 44:    LcClear();
  2654  0002CA  ECA2  F00D         	call	_LcClear	;wreg free
  2655                           
  2656                           ;Menu.c: 45:    LcNewString(loginText);
  2657  0002CE  0EB8               	movlw	low _loginText
  2658  0002D0  6E6D               	movwf	LcNewString@new_s^0,c
  2659  0002D2  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2660  0002D4  EC49  F00E         	call	_LcNewString	;wreg free
  2661                           
  2662                           ;Menu.c: 46:    state = 1;
  2663  0002D8  0E01               	movlw	1
  2664  0002DA  6E25               	movwf	menu@state^0,c
  2665                           
  2666                           ;Menu.c: 47:   break;
  2667  0002DC  0012               	return	
  2668  0002DE                     l6046:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;Menu.c: 49:    if (LcLliure()) {
  2672  0002DE  EC4F  F00E         	call	_LcLliure	;wreg free
  2673  0002E2  A0D8               	btfss	status,0,c
  2674  0002E4  0012               	return	
  2675                           
  2676                           ;Menu.c: 50:     LcGotoXY(0,1);
  2677  0002E6  0E01               	movlw	1
  2678  0002E8  6E72               	movwf	LcGotoXY@Row^0,c
  2679  0002EA  0E00               	movlw	0
  2680  0002EC  EC8F  F00C         	call	_LcGotoXY
  2681                           
  2682                           ;Menu.c: 51:     LcNewString(registerText);
  2683  0002F0  0EAD               	movlw	low _registerText
  2684  0002F2  6E6D               	movwf	LcNewString@new_s^0,c
  2685  0002F4  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2686  0002F6  EC49  F00E         	call	_LcNewString	;wreg free
  2687                           
  2688                           ;Menu.c: 52:     NovaTecla = -1;
  2689  0002FA  685A               	setf	_NovaTecla^0,c
  2690                           
  2691                           ;Menu.c: 53:     state = 2;
  2692  0002FC  0E02               	movlw	2
  2693  0002FE  6E25               	movwf	menu@state^0,c
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;Menu.c: 55:   break;
  2697                           
  2698                           ;Menu.c: 54:    }
  2699  000300  0012               	return	
  2700  000302                     l6056:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2704  000302  045A               	decf	_NovaTecla^0,w,c
  2705  000304  A4D8               	btfss	status,2,c
  2706  000306  D009               	goto	l6064
  2707                           
  2708                           ; BSR set to: 0
  2709  000308  ECAB  F00E         	call	_UgetNumUsuaris	;wreg free
  2710  00030C  0900               	iorlw	0
  2711  00030E  B4D8               	btfsc	status,2,c
  2712  000310  D004               	goto	l6064
  2713                           
  2714                           ;Menu.c: 58:     loginNOTRegister = 1;
  2715  000312  8A79               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2716  000314                     l6062:
  2717                           
  2718                           ;Menu.c: 59:     state = 3;
  2719  000314  0E03               	movlw	3
  2720  000316  6E25               	movwf	menu@state^0,c
  2721                           
  2722                           ;Menu.c: 60:    }
  2723  000318  0012               	return	
  2724  00031A                     l6064:
  2725  00031A  0E02               	movlw	2
  2726  00031C  185A               	xorwf	_NovaTecla^0,w,c
  2727  00031E  A4D8               	btfss	status,2,c
  2728  000320  0012               	return	
  2729                           
  2730                           ;Menu.c: 62:     loginNOTRegister = 0;
  2731  000322  9A79               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2732  000324  D7F7               	goto	l6062
  2733  000326                     l487:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;Menu.c: 67:    NovaTecla = -1;
  2737  000326  685A               	setf	_NovaTecla^0,c
  2738                           
  2739                           ;Menu.c: 68:    novaLletra = -1;
  2740  000328  6859               	setf	_novaLletra^0,c
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;Menu.c: 69:    LcClear();
  2744  00032A  ECA2  F00D         	call	_LcClear	;wreg free
  2745                           
  2746                           ;Menu.c: 70:    LcNewString("USER: ");
  2747  00032E  0EBF               	movlw	low STR_1
  2748  000330  6E6D               	movwf	LcNewString@new_s^0,c
  2749  000332  506D               	movf	LcNewString@new_s^0,w,c
  2750  000334  A4D8               	btfss	status,2,c
  2751  000336  0E02               	movlw	high __smallconst
  2752  000338  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2753  00033A  EC49  F00E         	call	_LcNewString	;wreg free
  2754                           
  2755                           ;Menu.c: 71:    state = 4;
  2756  00033E  0E04               	movlw	4
  2757  000340  6E25               	movwf	menu@state^0,c
  2758                           
  2759                           ;Menu.c: 72:   break;
  2760  000342  0012               	return	
  2761  000344                     l6076:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;Menu.c: 74:    if (LcLliure()) {
  2765  000344  EC4F  F00E         	call	_LcLliure	;wreg free
  2766  000348  A0D8               	btfss	status,0,c
  2767  00034A  0012               	return	
  2768                           
  2769                           ;Menu.c: 75:     LcGotoXY(0,1);
  2770  00034C  0E01               	movlw	1
  2771  00034E  6E72               	movwf	LcGotoXY@Row^0,c
  2772  000350  0E00               	movlw	0
  2773  000352  EC8F  F00C         	call	_LcGotoXY
  2774                           
  2775                           ;Menu.c: 76:     LcNewString("PSWD: ");
  2776  000356  0EB8               	movlw	low STR_2
  2777  000358  6E6D               	movwf	LcNewString@new_s^0,c
  2778  00035A  506D               	movf	LcNewString@new_s^0,w,c
  2779  00035C  A4D8               	btfss	status,2,c
  2780  00035E  0E02               	movlw	high __smallconst
  2781  000360  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2782  000362  EC49  F00E         	call	_LcNewString	;wreg free
  2783                           
  2784                           ;Menu.c: 77:     state = 5;
  2785  000366  0E05               	movlw	5
  2786  000368  6E25               	movwf	menu@state^0,c
  2787  00036A  0012               	return	
  2788  00036C                     l6084:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;Menu.c: 81:    if (LcLliure()) {
  2792  00036C  EC4F  F00E         	call	_LcLliure	;wreg free
  2793  000370  A0D8               	btfss	status,0,c
  2794  000372  0012               	return	
  2795                           
  2796                           ;Menu.c: 82:     LcGotoXY(6,0);
  2797  000374  0E00               	movlw	0
  2798  000376  6E72               	movwf	LcGotoXY@Row^0,c
  2799  000378  0E06               	movlw	6
  2800  00037A  EC8F  F00C         	call	_LcGotoXY
  2801                           
  2802                           ;Menu.c: 83:     SMSon();
  2803  00037E  EC99  F00E         	call	_SMSon	;wreg free
  2804                           
  2805                           ;Menu.c: 84:     tmp =0;
  2806  000382  0E00               	movlw	0
  2807  000384  6E29               	movwf	_tmp^0,c
  2808  000386                     l6092:
  2809                           
  2810                           ;Menu.c: 85:     state = 6;
  2811  000386  0E06               	movlw	6
  2812  000388  6E25               	movwf	menu@state^0,c
  2813  00038A  0012               	return	
  2814  00038C                     l6094:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  2818  00038C  5059               	movf	_novaLletra^0,w,c
  2819  00038E  0A80               	xorlw	128
  2820  000390  0F50               	addlw	-176
  2821  000392  A0D8               	btfss	status,0,c
  2822  000394  D00F               	goto	l6104
  2823                           
  2824                           ; BSR set to: 0
  2825  000396  0E0A               	movlw	10
  2826  000398  185A               	xorwf	_NovaTecla^0,w,c
  2827  00039A  B4D8               	btfsc	status,2,c
  2828  00039C  D00B               	goto	l6104
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;Menu.c: 90:     LcPutChar(novaLletra);
  2832  00039E  5059               	movf	_novaLletra^0,w,c
  2833  0003A0  EC21  F00C         	call	_LcPutChar
  2834                           
  2835                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  2836  0003A4  C029  F06A         	movff	_tmp,UenviaChar@pos
  2837  0003A8  5059               	movf	_novaLletra^0,w,c
  2838  0003AA  EC29  F00E         	call	_UenviaChar
  2839  0003AE                     l6102:
  2840                           
  2841                           ;Menu.c: 92:     state = 7;
  2842  0003AE  0E07               	movlw	7
  2843  0003B0  6E25               	movwf	menu@state^0,c
  2844                           
  2845                           ;Menu.c: 93:    }
  2846  0003B2  0012               	return	
  2847  0003B4                     l6104:
  2848                           
  2849                           ; BSR set to: 0
  2850  0003B4  0E0B               	movlw	11
  2851  0003B6  185A               	xorwf	_NovaTecla^0,w,c
  2852  0003B8  A4D8               	btfss	status,2,c
  2853  0003BA  0012               	return	
  2854  0003BC  D7F8               	goto	l6102
  2855  0003BE                     l6108:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  2859  0003BE  0E07               	movlw	7
  2860  0003C0  1829               	xorwf	_tmp^0,w,c
  2861  0003C2  B4D8               	btfsc	status,2,c
  2862  0003C4  D008               	goto	l6120
  2863                           
  2864                           ; BSR set to: 0
  2865  0003C6  0E0B               	movlw	11
  2866  0003C8  185A               	xorwf	_NovaTecla^0,w,c
  2867  0003CA  B4D8               	btfsc	status,2,c
  2868  0003CC  D004               	goto	l6120
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;Menu.c: 100:     tmp++;
  2872  0003CE  2A29               	incf	_tmp^0,f,c
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;Menu.c: 101:     NovaTecla = -1;
  2876  0003D0  685A               	setf	_NovaTecla^0,c
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;Menu.c: 102:     novaLletra = -1;
  2880  0003D2  6859               	setf	_novaLletra^0,c
  2881  0003D4  D7D8               	goto	l6092
  2882  0003D6                     l6120:
  2883                           
  2884                           ; BSR set to: 0
  2885  0003D6  0E07               	movlw	7
  2886  0003D8  1829               	xorwf	_tmp^0,w,c
  2887  0003DA  B4D8               	btfsc	status,2,c
  2888  0003DC  D004               	goto	u6030
  2889                           
  2890                           ; BSR set to: 0
  2891  0003DE  0E0B               	movlw	11
  2892  0003E0  185A               	xorwf	_NovaTecla^0,w,c
  2893  0003E2  A4D8               	btfss	status,2,c
  2894  0003E4  0012               	return	
  2895  0003E6                     u6030:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;Menu.c: 106:     LcGotoXY(6,1);
  2899  0003E6  0E01               	movlw	1
  2900  0003E8  6E72               	movwf	LcGotoXY@Row^0,c
  2901  0003EA  0E06               	movlw	6
  2902  0003EC  EC8F  F00C         	call	_LcGotoXY
  2903                           
  2904                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  2905  0003F0  C029  F06A         	movff	_tmp,UenviaChar@pos
  2906  0003F4  0E00               	movlw	0
  2907  0003F6  EC29  F00E         	call	_UenviaChar
  2908                           
  2909                           ;Menu.c: 108:     NovaTecla = -1;
  2910  0003FA  685A               	setf	_NovaTecla^0,c
  2911                           
  2912                           ;Menu.c: 109:     novaLletra = -1;
  2913  0003FC  6859               	setf	_novaLletra^0,c
  2914                           
  2915                           ;Menu.c: 110:     tmp = 0;
  2916  0003FE  0E00               	movlw	0
  2917  000400  6E29               	movwf	_tmp^0,c
  2918  000402                     l6134:
  2919                           
  2920                           ;Menu.c: 111:     state = 8;
  2921  000402  0E08               	movlw	8
  2922  000404  6E25               	movwf	menu@state^0,c
  2923  000406  0012               	return	
  2924  000408                     l6136:
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  2928  000408  5059               	movf	_novaLletra^0,w,c
  2929  00040A  0A80               	xorlw	128
  2930  00040C  0F50               	addlw	-176
  2931  00040E  A0D8               	btfss	status,0,c
  2932  000410  D00F               	goto	l6146
  2933                           
  2934                           ; BSR set to: 0
  2935  000412  0E0A               	movlw	10
  2936  000414  185A               	xorwf	_NovaTecla^0,w,c
  2937  000416  B4D8               	btfsc	status,2,c
  2938  000418  D00B               	goto	l6146
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;Menu.c: 116:     LcPutChar(novaLletra);
  2942  00041A  5059               	movf	_novaLletra^0,w,c
  2943  00041C  EC21  F00C         	call	_LcPutChar
  2944                           
  2945                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  2946  000420  C029  F06A         	movff	_tmp,UenviaPas@pos
  2947  000424  5059               	movf	_novaLletra^0,w,c
  2948  000426  EC21  F00E         	call	_UenviaPas
  2949  00042A                     l6144:
  2950                           
  2951                           ;Menu.c: 118:     state = 9;
  2952  00042A  0E09               	movlw	9
  2953  00042C  6E25               	movwf	menu@state^0,c
  2954                           
  2955                           ;Menu.c: 119:    }
  2956  00042E  0012               	return	
  2957  000430                     l6146:
  2958                           
  2959                           ; BSR set to: 0
  2960  000430  0E0B               	movlw	11
  2961  000432  185A               	xorwf	_NovaTecla^0,w,c
  2962  000434  A4D8               	btfss	status,2,c
  2963  000436  0012               	return	
  2964  000438  D7F8               	goto	l6144
  2965  00043A                     l6150:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  2969  00043A  0E07               	movlw	7
  2970  00043C  1829               	xorwf	_tmp^0,w,c
  2971  00043E  B4D8               	btfsc	status,2,c
  2972  000440  D008               	goto	l6162
  2973                           
  2974                           ; BSR set to: 0
  2975  000442  0E0B               	movlw	11
  2976  000444  185A               	xorwf	_NovaTecla^0,w,c
  2977  000446  B4D8               	btfsc	status,2,c
  2978  000448  D004               	goto	l6162
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;Menu.c: 126:     tmp++;
  2982  00044A  2A29               	incf	_tmp^0,f,c
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;Menu.c: 127:     NovaTecla = -1;
  2986  00044C  685A               	setf	_NovaTecla^0,c
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;Menu.c: 128:     novaLletra = -1;
  2990  00044E  6859               	setf	_novaLletra^0,c
  2991  000450  D7D8               	goto	l6134
  2992  000452                     l6162:
  2993                           
  2994                           ; BSR set to: 0
  2995  000452  0E07               	movlw	7
  2996  000454  1829               	xorwf	_tmp^0,w,c
  2997  000456  B4D8               	btfsc	status,2,c
  2998  000458  D004               	goto	u6100
  2999                           
  3000                           ; BSR set to: 0
  3001  00045A  0E0B               	movlw	11
  3002  00045C  185A               	xorwf	_NovaTecla^0,w,c
  3003  00045E  A4D8               	btfss	status,2,c
  3004  000460  0012               	return	
  3005  000462                     u6100:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  3009  000462  C029  F06A         	movff	_tmp,UenviaPas@pos
  3010  000466  0E00               	movlw	0
  3011  000468  EC21  F00E         	call	_UenviaPas
  3012                           
  3013                           ;Menu.c: 133:     NovaTecla = -1;
  3014  00046C  685A               	setf	_NovaTecla^0,c
  3015                           
  3016                           ;Menu.c: 134:     novaLletra = -1;
  3017  00046E  6859               	setf	_novaLletra^0,c
  3018                           
  3019                           ;Menu.c: 135:     tmp = 0;
  3020  000470  0E00               	movlw	0
  3021  000472  6E29               	movwf	_tmp^0,c
  3022                           
  3023                           ;Menu.c: 136:     UcheckExists();
  3024  000474  ECAD  F00E         	call	_UcheckExists	;wreg free
  3025                           
  3026                           ;Menu.c: 137:     SMSoff();
  3027  000478  EC9C  F00E         	call	_SMSoff	;wreg free
  3028                           
  3029                           ;Menu.c: 138:     state = 10;
  3030  00047C  0E0A               	movlw	10
  3031  00047E  6E25               	movwf	menu@state^0,c
  3032  000480  0012               	return	
  3033  000482                     l6180:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  3037  000482  EC3D  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3038  000486  B0D8               	btfsc	status,0,c
  3039  000488  0012               	return	
  3040                           
  3041                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  3042  00048A  EC61  F00E         	call	_UcheckExistsGetError	;wreg free
  3043  00048E  A0D8               	btfss	status,0,c
  3044  000490  D002               	goto	u6120
  3045  000492  0E01               	movlw	1
  3046  000494  D001               	goto	u6130
  3047  000496                     u6120:
  3048  000496  0E00               	movlw	0
  3049  000498                     u6130:
  3050  000498  6E26               	movwf	_indexUsuari^0,c
  3051                           
  3052                           ;Menu.c: 144:     state = 11;
  3053  00049A  0E0B               	movlw	11
  3054  00049C  6E25               	movwf	menu@state^0,c
  3055  00049E  0012               	return	
  3056  0004A0                     l6186:
  3057                           
  3058                           ;Menu.c: 149:     state = 12;
  3059  0004A0  0E0C               	movlw	12
  3060  0004A2  6E25               	movwf	menu@state^0,c
  3061                           
  3062                           ;Menu.c: 150:    }
  3063  0004A4  0012               	return	
  3064  0004A6                     l6192:
  3065                           
  3066                           ;Menu.c: 153:     state = 0;
  3067  0004A6  0E00               	movlw	0
  3068  0004A8  6E25               	movwf	menu@state^0,c
  3069                           
  3070                           ;Menu.c: 154:    }
  3071  0004AA  0012               	return	
  3072  0004AC                     l6204:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;Menu.c: 164:    LcClear();
  3076  0004AC  ECA2  F00D         	call	_LcClear	;wreg free
  3077                           
  3078                           ;Menu.c: 165:    SiFerMenu();
  3079  0004B0  ECB1  F00E         	call	_SiFerMenu	;wreg free
  3080                           
  3081                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3082  0004B4  5027               	movf	_menuDalt^0,w,c
  3083  0004B6  EC43  F00E         	call	_GLCDMostraMenu
  3084                           
  3085                           ;Menu.c: 167:    novaDireccio = -1;
  3086  0004BA  6858               	setf	_novaDireccio^0,c
  3087                           
  3088                           ;Menu.c: 168:    NovaTecla = -1;
  3089  0004BC  685A               	setf	_NovaTecla^0,c
  3090                           
  3091                           ;Menu.c: 169:    state = 13;
  3092  0004BE  0E0D               	movlw	13
  3093  0004C0  6E25               	movwf	menu@state^0,c
  3094                           
  3095                           ;Menu.c: 170:   break;
  3096  0004C2  0012               	return	
  3097  0004C4                     l6216:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3101  0004C4  0E08               	movlw	8
  3102  0004C6  1858               	xorwf	_novaDireccio^0,w,c
  3103  0004C8  A4D8               	btfss	status,2,c
  3104  0004CA  D005               	goto	l6224
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3108  0004CC  0E04               	movlw	4
  3109  0004CE  6027               	cpfslt	_menuDalt^0,c
  3110  0004D0  D7E7               	goto	l6186
  3111                           
  3112                           ; BSR set to: 0
  3113  0004D2  2A27               	incf	_menuDalt^0,f,c
  3114  0004D4  D7E5               	goto	l6186
  3115  0004D6                     l6224:
  3116                           
  3117                           ; BSR set to: 0
  3118  0004D6  0E02               	movlw	2
  3119  0004D8  1858               	xorwf	_novaDireccio^0,w,c
  3120  0004DA  A4D8               	btfss	status,2,c
  3121  0004DC  D005               	goto	l6232
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3125  0004DE  5027               	movf	_menuDalt^0,w,c
  3126  0004E0  B4D8               	btfsc	status,2,c
  3127  0004E2  D7DE               	goto	l6186
  3128                           
  3129                           ; BSR set to: 0
  3130  0004E4  0627               	decf	_menuDalt^0,f,c
  3131  0004E6  D7DC               	goto	l6186
  3132  0004E8                     l6232:
  3133                           
  3134                           ; BSR set to: 0
  3135  0004E8  0E0B               	movlw	11
  3136  0004EA  185A               	xorwf	_NovaTecla^0,w,c
  3137  0004EC  A4D8               	btfss	status,2,c
  3138  0004EE  D013               	goto	l6244
  3139                           
  3140                           ; BSR set to: 0
  3141  0004F0  0E03               	movlw	3
  3142  0004F2  1827               	xorwf	_menuDalt^0,w,c
  3143  0004F4  A4D8               	btfss	status,2,c
  3144  0004F6  D00F               	goto	l6244
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;Menu.c: 181:     NoFerMenu();
  3148  0004F8  ECB3  F00E         	call	_NoFerMenu	;wreg free
  3149                           
  3150                           ;Menu.c: 182:     LcClear();
  3151  0004FC  ECA2  F00D         	call	_LcClear	;wreg free
  3152                           
  3153                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3154  000500  0EAF               	movlw	low STR_3
  3155  000502  6E6D               	movwf	LcNewString@new_s^0,c
  3156  000504  506D               	movf	LcNewString@new_s^0,w,c
  3157  000506  A4D8               	btfss	status,2,c
  3158  000508  0E02               	movlw	high __smallconst
  3159  00050A  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3160  00050C  EC49  F00E         	call	_LcNewString	;wreg free
  3161                           
  3162                           ;Menu.c: 184:     state = 14;
  3163  000510  0E0E               	movlw	14
  3164  000512  6E25               	movwf	menu@state^0,c
  3165                           
  3166                           ;Menu.c: 185:    }
  3167  000514  0012               	return	
  3168  000516                     l6244:
  3169                           
  3170                           ; BSR set to: 0
  3171  000516  0E0B               	movlw	11
  3172  000518  185A               	xorwf	_NovaTecla^0,w,c
  3173  00051A  A4D8               	btfss	status,2,c
  3174  00051C  D013               	goto	l6258
  3175                           
  3176                           ; BSR set to: 0
  3177  00051E  0427               	decf	_menuDalt^0,w,c
  3178  000520  A4D8               	btfss	status,2,c
  3179  000522  D010               	goto	l6258
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;Menu.c: 187:     LcClear();
  3183  000524  ECA2  F00D         	call	_LcClear	;wreg free
  3184                           
  3185                           ;Menu.c: 188:     NoFerMenu();
  3186  000528  ECB3  F00E         	call	_NoFerMenu	;wreg free
  3187                           
  3188                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3189  00052C  0EA2               	movlw	low STR_4
  3190  00052E  6E6D               	movwf	LcNewString@new_s^0,c
  3191  000530  506D               	movf	LcNewString@new_s^0,w,c
  3192  000532  A4D8               	btfss	status,2,c
  3193  000534  0E02               	movlw	high __smallconst
  3194  000536  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3195  000538  EC49  F00E         	call	_LcNewString	;wreg free
  3196                           
  3197                           ;Menu.c: 190:     NovaTecla = -1;
  3198  00053C  685A               	setf	_NovaTecla^0,c
  3199                           
  3200                           ;Menu.c: 191:     state = 16;
  3201  00053E  0E10               	movlw	16
  3202  000540  6E25               	movwf	menu@state^0,c
  3203                           
  3204                           ;Menu.c: 192:    }
  3205  000542  0012               	return	
  3206  000544                     l6258:
  3207                           
  3208                           ; BSR set to: 0
  3209  000544  5027               	movf	_menuDalt^0,w,c
  3210  000546  A4D8               	btfss	status,2,c
  3211  000548  0012               	return	
  3212                           
  3213                           ; BSR set to: 0
  3214  00054A  0E0B               	movlw	11
  3215  00054C  185A               	xorwf	_NovaTecla^0,w,c
  3216  00054E  A4D8               	btfss	status,2,c
  3217  000550  0012               	return	
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;Menu.c: 194:     NoFerMenu();
  3221  000552  ECB3  F00E         	call	_NoFerMenu	;wreg free
  3222                           
  3223                           ;Menu.c: 195:     NovaTecla = -1;
  3224  000556  685A               	setf	_NovaTecla^0,c
  3225                           
  3226                           ;Menu.c: 196:     LcClear();
  3227  000558  ECA2  F00D         	call	_LcClear	;wreg free
  3228                           
  3229                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3230  00055C  0E92               	movlw	low STR_5
  3231  00055E  6E6D               	movwf	LcNewString@new_s^0,c
  3232  000560  506D               	movf	LcNewString@new_s^0,w,c
  3233  000562  A4D8               	btfss	status,2,c
  3234  000564  0E02               	movlw	high __smallconst
  3235  000566  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3236  000568  EC49  F00E         	call	_LcNewString	;wreg free
  3237                           
  3238                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3239  00056C  5026               	movf	_indexUsuari^0,w,c
  3240  00056E  EC6D  F00E         	call	_JJuguem
  3241  000572                     l6272:
  3242                           
  3243                           ;Menu.c: 199:     state = 21;
  3244  000572  0E15               	movlw	21
  3245  000574  6E25               	movwf	menu@state^0,c
  3246  000576  0012               	return	
  3247  000578                     l6274:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;Menu.c: 203:    if (LcLliure()) {
  3251  000578  EC4F  F00E         	call	_LcLliure	;wreg free
  3252  00057C  A0D8               	btfss	status,0,c
  3253  00057E  0012               	return	
  3254                           
  3255                           ;Menu.c: 204:     LcNewString(UgetUserName(indexUsuari));
  3256  000580  5026               	movf	_indexUsuari^0,w,c
  3257  000582  EC0E  F00E         	call	_UgetUserName
  3258  000586  C06A  F06D         	movff	?_UgetUserName,LcNewString@new_s
  3259  00058A  C06B  F06E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3260  00058E  EC49  F00E         	call	_LcNewString	;wreg free
  3261                           
  3262                           ;Menu.c: 205:     TiResetTics(timerMenu);
  3263  000592  5028               	movf	_timerMenu^0,w,c
  3264  000594  ECF7  F00D         	call	_TiResetTics
  3265                           
  3266                           ;Menu.c: 206:     state = 15;
  3267  000598  0E0F               	movlw	15
  3268  00059A  6E25               	movwf	menu@state^0,c
  3269  00059C  0012               	return	
  3270  00059E                     l6282:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;Menu.c: 210:    if (TiGetTics(timerMenu) > 2410) {
  3274  00059E  5028               	movf	_timerMenu^0,w,c
  3275  0005A0  EC7A  F00D         	call	_TiGetTics
  3276  0005A4  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  3277  0005A6  0012               	return	
  3278  0005A8  0E6B               	movlw	107
  3279  0005AA  5C6A               	subwf	?_TiGetTics^0,w,c
  3280  0005AC  0E09               	movlw	9
  3281  0005AE  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  3282  0005B0  A0D8               	btfss	status,0,c
  3283  0005B2  0012               	return	
  3284  0005B4  D778               	goto	l6192
  3285  0005B6                     l6286:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;Menu.c: 215:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3289  0005B6  EC4F  F00E         	call	_LcLliure	;wreg free
  3290  0005BA  B0D8               	btfsc	status,0,c
  3291  0005BC  BE5A               	btfsc	_NovaTecla^0,7,c
  3292  0005BE  D047               	goto	l6352
  3293  0005C0  505A               	movf	_NovaTecla^0,w,c
  3294  0005C2  0A80               	xorlw	128
  3295  0005C4  0F76               	addlw	-138
  3296  0005C6  B0D8               	btfsc	status,0,c
  3297  0005C8  D042               	goto	l6352
  3298                           
  3299                           ;Menu.c: 216:     LcGotoXY(0,1);
  3300  0005CA  0E01               	movlw	1
  3301  0005CC  6E72               	movwf	LcGotoXY@Row^0,c
  3302  0005CE  0E00               	movlw	0
  3303  0005D0  EC8F  F00C         	call	_LcGotoXY
  3304                           
  3305                           ;Menu.c: 217:     horaTmp[0] = NovaTecla+48;
  3306  0005D4  505A               	movf	_NovaTecla^0,w,c
  3307  0005D6  0F30               	addlw	48
  3308  0005D8  6E40               	movwf	_horaTmp^0,c
  3309                           
  3310                           ;Menu.c: 218:     LcPutChar(horaTmp[0]);
  3311  0005DA  5040               	movf	_horaTmp^0,w,c
  3312  0005DC  EC21  F00C         	call	_LcPutChar
  3313                           
  3314                           ;Menu.c: 219:     NovaTecla = -1;
  3315  0005E0  685A               	setf	_NovaTecla^0,c
  3316                           
  3317                           ;Menu.c: 220:     state = 17;
  3318  0005E2  0E11               	movlw	17
  3319  0005E4                     L1:
  3320  0005E4  6E25               	movwf	menu@state^0,c
  3321                           
  3322                           ;Menu.c: 221:    }
  3323  0005E6  0012               	return	
  3324  0005E8                     l6306:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;Menu.c: 227:    if (NovaTecla > -1 && NovaTecla < 10) {
  3328  0005E8  BE5A               	btfsc	_NovaTecla^0,7,c
  3329  0005EA  D031               	goto	l6352
  3330                           
  3331                           ; BSR set to: 0
  3332  0005EC  505A               	movf	_NovaTecla^0,w,c
  3333  0005EE  0A80               	xorlw	128
  3334  0005F0  0F76               	addlw	-138
  3335  0005F2  B0D8               	btfsc	status,0,c
  3336  0005F4  D02C               	goto	l6352
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;Menu.c: 228:     horaTmp[1] = NovaTecla+48;
  3340  0005F6  505A               	movf	_NovaTecla^0,w,c
  3341  0005F8  0F30               	addlw	48
  3342  0005FA  6E41               	movwf	(_horaTmp+1)^0,c
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;Menu.c: 229:     LcPutChar(horaTmp[1]);
  3346  0005FC  5041               	movf	(_horaTmp+1)^0,w,c
  3347  0005FE  EC21  F00C         	call	_LcPutChar
  3348                           
  3349                           ;Menu.c: 230:     NovaTecla = -1;
  3350  000602  685A               	setf	_NovaTecla^0,c
  3351                           
  3352                           ;Menu.c: 231:     LcPutChar(':');
  3353  000604  0E3A               	movlw	58
  3354  000606  EC21  F00C         	call	_LcPutChar
  3355                           
  3356                           ;Menu.c: 232:     state = 18;
  3357  00060A  0E12               	movlw	18
  3358  00060C  D7EB               	goto	L1
  3359  00060E                     l6324:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;Menu.c: 239:    if (NovaTecla > -1 && NovaTecla < 10) {
  3363  00060E  BE5A               	btfsc	_NovaTecla^0,7,c
  3364  000610  D01E               	goto	l6352
  3365                           
  3366                           ; BSR set to: 0
  3367  000612  505A               	movf	_NovaTecla^0,w,c
  3368  000614  0A80               	xorlw	128
  3369  000616  0F76               	addlw	-138
  3370  000618  B0D8               	btfsc	status,0,c
  3371  00061A  D019               	goto	l6352
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;Menu.c: 240:     horaTmp[2] = NovaTecla+48;
  3375  00061C  505A               	movf	_NovaTecla^0,w,c
  3376  00061E  0F30               	addlw	48
  3377  000620  6E42               	movwf	(_horaTmp+2)^0,c
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;Menu.c: 241:     LcPutChar(horaTmp[2]);
  3381  000622  5042               	movf	(_horaTmp+2)^0,w,c
  3382  000624  EC21  F00C         	call	_LcPutChar
  3383                           
  3384                           ;Menu.c: 242:     NovaTecla = -1;
  3385  000628  685A               	setf	_NovaTecla^0,c
  3386                           
  3387                           ;Menu.c: 243:     state = 19;
  3388  00062A  0E13               	movlw	19
  3389  00062C  D7DB               	goto	L1
  3390  00062E                     l6340:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;Menu.c: 250:    if (NovaTecla > -1 && NovaTecla < 10) {
  3394  00062E  BE5A               	btfsc	_NovaTecla^0,7,c
  3395  000630  D00E               	goto	l6352
  3396                           
  3397                           ; BSR set to: 0
  3398  000632  505A               	movf	_NovaTecla^0,w,c
  3399  000634  0A80               	xorlw	128
  3400  000636  0F76               	addlw	-138
  3401  000638  B0D8               	btfsc	status,0,c
  3402  00063A  D009               	goto	l6352
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;Menu.c: 251:     horaTmp[3] = NovaTecla+48;
  3406  00063C  505A               	movf	_NovaTecla^0,w,c
  3407  00063E  0F30               	addlw	48
  3408  000640  6E43               	movwf	(_horaTmp+3)^0,c
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;Menu.c: 252:     LcPutChar(horaTmp[3]);
  3412  000642  5043               	movf	(_horaTmp+3)^0,w,c
  3413  000644  EC21  F00C         	call	_LcPutChar
  3414                           
  3415                           ;Menu.c: 253:     NovaTecla = -1;
  3416  000648  685A               	setf	_NovaTecla^0,c
  3417                           
  3418                           ;Menu.c: 254:     state = 20;
  3419  00064A  0E14               	movlw	20
  3420  00064C  D7CB               	goto	L1
  3421  00064E                     l6352:
  3422                           
  3423                           ; BSR set to: 0
  3424  00064E  0E0A               	movlw	10
  3425  000650  185A               	xorwf	_NovaTecla^0,w,c
  3426  000652  A4D8               	btfss	status,2,c
  3427  000654  0012               	return	
  3428  000656  D724               	goto	l6186
  3429  000658                     l6356:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;Menu.c: 261:    if (NovaTecla == 11) {
  3433  000658  0E0B               	movlw	11
  3434  00065A  185A               	xorwf	_NovaTecla^0,w,c
  3435  00065C  A4D8               	btfss	status,2,c
  3436  00065E  D7F7               	goto	l6352
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;Menu.c: 262:     HActualitzaHora(horaTmp);
  3440  000660  0E40               	movlw	low _horaTmp
  3441  000662  6E6A               	movwf	HActualitzaHora@nova^0,c
  3442  000664  EC00  F00D         	call	_HActualitzaHora	;wreg free
  3443                           
  3444                           ;Menu.c: 263:     NovaTecla = -1;
  3445  000668  685A               	setf	_NovaTecla^0,c
  3446  00066A  D71A               	goto	l6186
  3447  00066C                     l6368:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;Menu.c: 271:    if (NovaTecla == 10 && LcLliure()) {
  3451  00066C  0E0A               	movlw	10
  3452  00066E  185A               	xorwf	_NovaTecla^0,w,c
  3453  000670  A4D8               	btfss	status,2,c
  3454  000672  D00B               	goto	l6378
  3455                           
  3456                           ; BSR set to: 0
  3457  000674  EC4F  F00E         	call	_LcLliure	;wreg free
  3458  000678  A0D8               	btfss	status,0,c
  3459  00067A  D007               	goto	l6378
  3460                           
  3461                           ;Menu.c: 272:     LcClear();
  3462  00067C  ECA2  F00D         	call	_LcClear	;wreg free
  3463                           
  3464                           ;Menu.c: 273:     JendGame();
  3465  000680  ECB5  F00E         	call	_JendGame	;wreg free
  3466                           
  3467                           ;Menu.c: 274:     state = 22;
  3468  000684  0E16               	movlw	22
  3469  000686  6E25               	movwf	menu@state^0,c
  3470                           
  3471                           ;Menu.c: 275:    }
  3472  000688  0012               	return	
  3473  00068A                     l6378:
  3474  00068A  505A               	movf	_NovaTecla^0,w,c
  3475  00068C  0A80               	xorlw	128
  3476  00068E  0F7F               	addlw	-129
  3477  000690  A0D8               	btfss	status,0,c
  3478  000692  D00A               	goto	l6388
  3479  000694  505A               	movf	_NovaTecla^0,w,c
  3480  000696  0A80               	xorlw	128
  3481  000698  0F76               	addlw	-138
  3482  00069A  B0D8               	btfsc	status,0,c
  3483  00069C  D005               	goto	l6388
  3484                           
  3485                           ;Menu.c: 277:     JnovaTecla(NovaTecla);
  3486  00069E  505A               	movf	_NovaTecla^0,w,c
  3487  0006A0  EC65  F00E         	call	_JnovaTecla
  3488                           
  3489                           ;Menu.c: 278:     NovaTecla = -1;
  3490  0006A4  685A               	setf	_NovaTecla^0,c
  3491  0006A6  D765               	goto	l6272
  3492  0006A8                     l6388:
  3493  0006A8  BE58               	btfsc	_novaDireccio^0,7,c
  3494  0006AA  0012               	return	
  3495                           
  3496                           ;Menu.c: 282:     JnovaDireccio(novaDireccio);
  3497  0006AC  5058               	movf	_novaDireccio^0,w,c
  3498  0006AE  EC69  F00E         	call	_JnovaDireccio
  3499                           
  3500                           ;Menu.c: 283:     novaDireccio = -1;
  3501  0006B2  6858               	setf	_novaDireccio^0,c
  3502  0006B4  D75E               	goto	l6272
  3503  0006B6                     l6398:
  3504  0006B6  5025               	movf	menu@state^0,w,c
  3505  0006B8  0100               	movlb	0	; () banked
  3506  0006BA  6FC1               	movwf	??_menu& (0+255),b
  3507  0006BC  6BC2               	clrf	(??_menu+1)& (0+255),b
  3508                           
  3509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 1, Range of values is 0 to 0
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte            4     3 (average)
  3515                           ;	Chosen strategy is simple_byte
  3516  0006BE  51C2               	movf	(??_menu+1)& (0+255),w,b
  3517  0006C0  0A00               	xorlw	0	; case 0
  3518  0006C2  A4D8               	btfss	status,2,c
  3519  0006C4  0012               	return	
  3520                           
  3521                           ; BSR set to: 0
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 23, Range of values is 0 to 22
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte           70    36 (average)
  3527                           ;	Chosen strategy is simple_byte
  3528  0006C6  51C1               	movf	??_menu& (0+255),w,b
  3529  0006C8  0A00               	xorlw	0	; case 0
  3530  0006CA  B4D8               	btfsc	status,2,c
  3531  0006CC  D5FE               	goto	l6040
  3532  0006CE  0A01               	xorlw	1	; case 1
  3533  0006D0  B4D8               	btfsc	status,2,c
  3534  0006D2  D605               	goto	l6046
  3535  0006D4  0A03               	xorlw	3	; case 2
  3536  0006D6  B4D8               	btfsc	status,2,c
  3537  0006D8  D614               	goto	l6056
  3538  0006DA  0A01               	xorlw	1	; case 3
  3539  0006DC  B4D8               	btfsc	status,2,c
  3540  0006DE  D623               	goto	l487
  3541  0006E0  0A07               	xorlw	7	; case 4
  3542  0006E2  B4D8               	btfsc	status,2,c
  3543  0006E4  D62F               	goto	l6076
  3544  0006E6  0A01               	xorlw	1	; case 5
  3545  0006E8  B4D8               	btfsc	status,2,c
  3546  0006EA  D640               	goto	l6084
  3547  0006EC  0A03               	xorlw	3	; case 6
  3548  0006EE  B4D8               	btfsc	status,2,c
  3549  0006F0  D64D               	goto	l6094
  3550  0006F2  0A01               	xorlw	1	; case 7
  3551  0006F4  B4D8               	btfsc	status,2,c
  3552  0006F6  D663               	goto	l6108
  3553  0006F8  0A0F               	xorlw	15	; case 8
  3554  0006FA  B4D8               	btfsc	status,2,c
  3555  0006FC  D685               	goto	l6136
  3556  0006FE  0A01               	xorlw	1	; case 9
  3557  000700  B4D8               	btfsc	status,2,c
  3558  000702  D69B               	goto	l6150
  3559  000704  0A03               	xorlw	3	; case 10
  3560  000706  B4D8               	btfsc	status,2,c
  3561  000708  D6BC               	goto	l6180
  3562  00070A  0A01               	xorlw	1	; case 11
  3563  00070C  B4D8               	btfsc	status,2,c
  3564  00070E  D6C8               	goto	l6186
  3565  000710  0A07               	xorlw	7	; case 12
  3566  000712  B4D8               	btfsc	status,2,c
  3567  000714  D6CB               	goto	l6204
  3568  000716  0A01               	xorlw	1	; case 13
  3569  000718  B4D8               	btfsc	status,2,c
  3570  00071A  D6D4               	goto	l6216
  3571  00071C  0A03               	xorlw	3	; case 14
  3572  00071E  B4D8               	btfsc	status,2,c
  3573  000720  D72B               	goto	l6274
  3574  000722  0A01               	xorlw	1	; case 15
  3575  000724  B4D8               	btfsc	status,2,c
  3576  000726  D73B               	goto	l6282
  3577  000728  0A1F               	xorlw	31	; case 16
  3578  00072A  B4D8               	btfsc	status,2,c
  3579  00072C  D744               	goto	l6286
  3580  00072E  0A01               	xorlw	1	; case 17
  3581  000730  B4D8               	btfsc	status,2,c
  3582  000732  D75A               	goto	l6306
  3583  000734  0A03               	xorlw	3	; case 18
  3584  000736  B4D8               	btfsc	status,2,c
  3585  000738  D76A               	goto	l6324
  3586  00073A  0A01               	xorlw	1	; case 19
  3587  00073C  B4D8               	btfsc	status,2,c
  3588  00073E  D777               	goto	l6340
  3589  000740  0A07               	xorlw	7	; case 20
  3590  000742  B4D8               	btfsc	status,2,c
  3591  000744  D789               	goto	l6356
  3592  000746  0A01               	xorlw	1	; case 21
  3593  000748  B4D8               	btfsc	status,2,c
  3594  00074A  D790               	goto	l6368
  3595  00074C  0A03               	xorlw	3	; case 22
  3596  00074E  0012               	return	
  3597  000750                     __end_of_menu:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _UgetUserName *****************
  3601 ;; Defined at:
  3602 ;;		line 27 in file "Usuaris.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  quin            1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  quin            1    7[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2    5[COMRAM] PTR unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, prodl, prodh
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/1
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1
  3616 ;;      Params:         2       0       0
  3617 ;;      Locals:         1       0       0
  3618 ;;      Temps:          0       0       0
  3619 ;;      Totals:         3       0       0
  3620 ;;Total ram usage:        3 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 2
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_menu
  3627 ;;		_motorSIO
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text18
  3632  001C1C                     __ptext18:
  3633                           	callstack 0
  3634  001C1C                     _UgetUserName:
  3635                           	callstack 27
  3636                           
  3637                           ;incstack = 0
  3638                           ;UgetUserName@quin stored from wreg
  3639  001C1C  6E6C               	movwf	UgetUserName@quin^0,c
  3640                           
  3641                           ;Usuaris.c: 28:     return usuaris[quin].username;
  3642  001C1E  506C               	movf	UgetUserName@quin^0,w,c
  3643  001C20  0D17               	mullw	23
  3644  001C22  0E00               	movlw	low _usuaris
  3645  001C24  24F3               	addwf	243,w,c
  3646  001C26  6E6A               	movwf	?_UgetUserName^0,c
  3647  001C28  0E01               	movlw	high _usuaris
  3648  001C2A  20F4               	addwfc	prodh,w,c
  3649  001C2C  6E6B               	movwf	(?_UgetUserName+1)^0,c
  3650  001C2E  0012               	return		;funcret
  3651  001C30                     __end_of_UgetUserName:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _UgetNumUsuaris *****************
  3655 ;; Defined at:
  3656 ;;		line 30 in file "Usuaris.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      unsigned char 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1
  3670 ;;      Params:         0       0       0
  3671 ;;      Locals:         0       0       0
  3672 ;;      Temps:          0       0       0
  3673 ;;      Totals:         0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 2
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_menu
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text19
  3685  001D56                     __ptext19:
  3686                           	callstack 0
  3687  001D56                     _UgetNumUsuaris:
  3688                           	callstack 27
  3689                           
  3690                           ;Usuaris.c: 31:     return numUsuaris;
  3691                           
  3692                           ;incstack = 0
  3693  001D56  5023               	movf	_numUsuaris^0,w,c
  3694  001D58  0012               	return		;funcret
  3695  001D5A                     __end_of_UgetNumUsuaris:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _UenviaPas *****************
  3699 ;; Defined at:
  3700 ;;		line 46 in file "Usuaris.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  c               1    wreg     unsigned char 
  3703 ;;  pos             1    5[COMRAM] unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  c               1    6[COMRAM] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1
  3715 ;;      Params:         1       0       0
  3716 ;;      Locals:         1       0       0
  3717 ;;      Temps:          0       0       0
  3718 ;;      Totals:         2       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 2
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_menu
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text20
  3730  001C42                     __ptext20:
  3731                           	callstack 0
  3732  001C42                     _UenviaPas:
  3733                           	callstack 27
  3734                           
  3735                           ;incstack = 0
  3736                           ;UenviaPas@c stored from wreg
  3737  001C42  6E6B               	movwf	UenviaPas@c^0,c
  3738                           
  3739                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  3740  001C44  506A               	movf	UenviaPas@pos^0,w,c
  3741  001C46  0F98               	addlw	low _tmpPassword
  3742  001C48  6ED9               	movwf	fsr2l,c
  3743  001C4A  6ADA               	clrf	fsr2h,c
  3744  001C4C  C06B  FFDF         	movff	UenviaPas@c,indf2
  3745  001C50  0012               	return		;funcret
  3746  001C52                     __end_of_UenviaPas:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function _UenviaChar *****************
  3750 ;; Defined at:
  3751 ;;		line 43 in file "Usuaris.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  c               1    wreg     unsigned char 
  3754 ;;  pos             1    5[COMRAM] unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  c               1    6[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1
  3766 ;;      Params:         1       0       0
  3767 ;;      Locals:         1       0       0
  3768 ;;      Temps:          0       0       0
  3769 ;;      Totals:         2       0       0
  3770 ;;Total ram usage:        2 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 2
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_menu
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text21
  3781  001C52                     __ptext21:
  3782                           	callstack 0
  3783  001C52                     _UenviaChar:
  3784                           	callstack 27
  3785                           
  3786                           ;incstack = 0
  3787                           ;UenviaChar@c stored from wreg
  3788  001C52  6E6B               	movwf	UenviaChar@c^0,c
  3789                           
  3790                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  3791  001C54  506A               	movf	UenviaChar@pos^0,w,c
  3792  001C56  0F37               	addlw	low _tmpUsername
  3793  001C58  6ED9               	movwf	fsr2l,c
  3794  001C5A  6ADA               	clrf	fsr2h,c
  3795  001C5C  C06B  FFDF         	movff	UenviaChar@c,indf2
  3796  001C60  0012               	return		;funcret
  3797  001C62                     __end_of_UenviaChar:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _UcheckExistsNotFinished *****************
  3801 ;; Defined at:
  3802 ;;		line 37 in file "Usuaris.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1
  3816 ;;      Params:         0       0       0
  3817 ;;      Locals:         0       0       0
  3818 ;;      Temps:          0       0       0
  3819 ;;      Totals:         0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 2
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_menu
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text22
  3831  001C7A                     __ptext22:
  3832                           	callstack 0
  3833  001C7A                     _UcheckExistsNotFinished:
  3834                           	callstack 27
  3835                           
  3836                           ;Usuaris.c: 38:     return do_check_exists;
  3837                           
  3838                           ;incstack = 0
  3839  001C7A  B879               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3840  001C7C  D002               	goto	l3964
  3841  001C7E  90D8               	bcf	status,0,c
  3842  001C80  0012               	return	
  3843  001C82                     l3964:
  3844  001C82  80D8               	bsf	status,0,c
  3845  001C84  0012               	return		;funcret
  3846  001C86                     __end_of_UcheckExistsNotFinished:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function _UcheckExistsGetError *****************
  3850 ;; Defined at:
  3851 ;;		line 40 in file "Usuaris.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		wreg, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1
  3865 ;;      Params:         0       0       0
  3866 ;;      Locals:         0       0       0
  3867 ;;      Temps:          1       0       0
  3868 ;;      Totals:         1       0       0
  3869 ;;Total ram usage:        1 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 2
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_menu
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text23
  3880  001CC2                     __ptext23:
  3881                           	callstack 0
  3882  001CC2                     _UcheckExistsGetError:
  3883                           	callstack 27
  3884                           
  3885                           ;Usuaris.c: 41:     return usuariLoguejat;
  3886                           
  3887                           ;incstack = 0
  3888  001CC2  C057  F06A         	movff	_usuariLoguejat,??_UcheckExistsGetError
  3889  001CC6  306A               	rrcf	??_UcheckExistsGetError^0,w,c
  3890  001CC8  0012               	return		;funcret
  3891  001CCA                     __end_of_UcheckExistsGetError:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _UcheckExists *****************
  3895 ;; Defined at:
  3896 ;;		line 34 in file "Usuaris.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		None
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1
  3910 ;;      Params:         0       0       0
  3911 ;;      Locals:         0       0       0
  3912 ;;      Temps:          0       0       0
  3913 ;;      Totals:         0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 2
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_menu
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text24
  3925  001D5A                     __ptext24:
  3926                           	callstack 0
  3927  001D5A                     _UcheckExists:
  3928                           	callstack 27
  3929                           
  3930                           ;Usuaris.c: 35:     do_check_exists = 1;
  3931                           
  3932                           ;incstack = 0
  3933  001D5A  8879               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3934  001D5C  0012               	return		;funcret
  3935  001D5E                     __end_of_UcheckExists:
  3936                           	callstack 0
  3937                           
  3938 ;; *************** function _URegister *****************
  3939 ;; Defined at:
  3940 ;;		line 54 in file "Usuaris.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		None
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1
  3954 ;;      Params:         0       0       0
  3955 ;;      Locals:         0       0       0
  3956 ;;      Temps:          0       0       0
  3957 ;;      Totals:         0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 2
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_menu
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text25
  3969  001D5E                     __ptext25:
  3970                           	callstack 0
  3971  001D5E                     _URegister:
  3972                           	callstack 27
  3973                           
  3974                           ;Usuaris.c: 55:     do_register = 1;
  3975                           
  3976                           ;incstack = 0
  3977  001D5E  8679               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  3978  001D60  0012               	return		;funcret
  3979  001D62                     __end_of_URegister:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _SiFerMenu *****************
  3983 ;; Defined at:
  3984 ;;		line 19 in file "GestioLCD.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		None
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1
  3998 ;;      Params:         0       0       0
  3999 ;;      Locals:         0       0       0
  4000 ;;      Temps:          0       0       0
  4001 ;;      Totals:         0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_menu
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text26
  4013  001D62                     __ptext26:
  4014                           	callstack 0
  4015  001D62                     _SiFerMenu:
  4016                           	callstack 27
  4017                           
  4018                           ;GestioLCD.c: 20:     ferMenu = 1;
  4019                           
  4020                           ;incstack = 0
  4021  001D62  8079               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4022  001D64  0012               	return		;funcret
  4023  001D66                     __end_of_SiFerMenu:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _SMSon *****************
  4027 ;; Defined at:
  4028 ;;		line 130 in file "Ssms.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1
  4042 ;;      Params:         0       0       0
  4043 ;;      Locals:         0       0       0
  4044 ;;      Temps:          0       0       0
  4045 ;;      Totals:         0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 2
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_menu
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text27
  4057  001D32                     __ptext27:
  4058                           	callstack 0
  4059  001D32                     _SMSon:
  4060                           	callstack 27
  4061                           
  4062                           ;Ssms.c: 131:     setSMSon = 1;
  4063                           
  4064                           ;incstack = 0
  4065  001D32  8C79               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4066                           
  4067                           ;Ssms.c: 132:     novaTecla = -1;
  4068  001D34  685D               	setf	_novaTecla^0,c
  4069  001D36  0012               	return		;funcret
  4070  001D38                     __end_of_SMSon:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _SMSoff *****************
  4074 ;; Defined at:
  4075 ;;		line 135 in file "Ssms.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		None
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1
  4089 ;;      Params:         0       0       0
  4090 ;;      Locals:         0       0       0
  4091 ;;      Temps:          0       0       0
  4092 ;;      Totals:         0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 2
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_menu
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text28
  4104  001D38                     __ptext28:
  4105                           	callstack 0
  4106  001D38                     _SMSoff:
  4107                           	callstack 27
  4108                           
  4109                           ;Ssms.c: 136:     setSMSon = 0;
  4110                           
  4111                           ;incstack = 0
  4112  001D38  9C79               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4113                           
  4114                           ;Ssms.c: 137:     novaTecla = -1;
  4115  001D3A  685D               	setf	_novaTecla^0,c
  4116  001D3C  0012               	return		;funcret
  4117  001D3E                     __end_of_SMSoff:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _NoFerMenu *****************
  4121 ;; Defined at:
  4122 ;;		line 22 in file "GestioLCD.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		None
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1
  4136 ;;      Params:         0       0       0
  4137 ;;      Locals:         0       0       0
  4138 ;;      Temps:          0       0       0
  4139 ;;      Totals:         0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 2
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_menu
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text29
  4151  001D66                     __ptext29:
  4152                           	callstack 0
  4153  001D66                     _NoFerMenu:
  4154                           	callstack 27
  4155                           
  4156                           ;GestioLCD.c: 23:     ferMenu = 0;
  4157                           
  4158                           ;incstack = 0
  4159  001D66  9079               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4160  001D68  0012               	return		;funcret
  4161  001D6A                     __end_of_NoFerMenu:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _JnovaTecla *****************
  4165 ;; Defined at:
  4166 ;;		line 16 in file "Joc.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  tecla           1    wreg     char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  tecla           1    5[COMRAM] char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1
  4180 ;;      Params:         0       0       0
  4181 ;;      Locals:         1       0       0
  4182 ;;      Temps:          0       0       0
  4183 ;;      Totals:         1       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 2
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_menu
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text30
  4195  001CCA                     __ptext30:
  4196                           	callstack 0
  4197  001CCA                     _JnovaTecla:
  4198                           	callstack 27
  4199                           
  4200                           ;incstack = 0
  4201                           ;JnovaTecla@tecla stored from wreg
  4202  001CCA  6E6A               	movwf	JnovaTecla@tecla^0,c
  4203                           
  4204                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  4205  001CCC  C06A  F053         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4206  001CD0  0012               	return		;funcret
  4207  001CD2                     __end_of_JnovaTecla:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _JnovaDireccio *****************
  4211 ;; Defined at:
  4212 ;;		line 19 in file "Joc.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  dir             1    wreg     unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  dir             1    5[COMRAM] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1
  4226 ;;      Params:         0       0       0
  4227 ;;      Locals:         1       0       0
  4228 ;;      Temps:          0       0       0
  4229 ;;      Totals:         1       0       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 2
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_menu
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text31
  4241  001CD2                     __ptext31:
  4242                           	callstack 0
  4243  001CD2                     _JnovaDireccio:
  4244                           	callstack 27
  4245                           
  4246                           ;incstack = 0
  4247                           ;JnovaDireccio@dir stored from wreg
  4248  001CD2  6E6A               	movwf	JnovaDireccio@dir^0,c
  4249                           
  4250                           ;Joc.c: 20:     direccioJoc = dir;
  4251  001CD4  C06A  F00A         	movff	JnovaDireccio@dir,_direccioJoc
  4252  001CD8  0012               	return		;funcret
  4253  001CDA                     __end_of_JnovaDireccio:
  4254                           	callstack 0
  4255                           
  4256 ;; *************** function _JendGame *****************
  4257 ;; Defined at:
  4258 ;;		line 27 in file "Joc.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		None
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1
  4272 ;;      Params:         0       0       0
  4273 ;;      Locals:         0       0       0
  4274 ;;      Temps:          0       0       0
  4275 ;;      Totals:         0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; Hardware stack levels required when called: 2
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_menu
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text32
  4287  001D6A                     __ptext32:
  4288                           	callstack 0
  4289  001D6A                     _JendGame:
  4290                           	callstack 27
  4291                           
  4292                           ;Joc.c: 28:     jugantJoc = 0;
  4293                           
  4294                           ;incstack = 0
  4295  001D6A  9478               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  4296  001D6C  0012               	return		;funcret
  4297  001D6E                     __end_of_JendGame:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _JJuguem *****************
  4301 ;; Defined at:
  4302 ;;		line 13 in file "Joc.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  usuari          1    wreg     unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  usuari          1    5[COMRAM] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1
  4316 ;;      Params:         0       0       0
  4317 ;;      Locals:         1       0       0
  4318 ;;      Temps:          0       0       0
  4319 ;;      Totals:         1       0       0
  4320 ;;Total ram usage:        1 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 2
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_menu
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text33
  4331  001CDA                     __ptext33:
  4332                           	callstack 0
  4333  001CDA                     _JJuguem:
  4334                           	callstack 27
  4335                           
  4336                           ;incstack = 0
  4337                           ;JJuguem@usuari stored from wreg
  4338  001CDA  6E6A               	movwf	JJuguem@usuari^0,c
  4339                           
  4340                           ;Joc.c: 14:     usuariJoc = usuari;
  4341  001CDC  C06A  F054         	movff	JJuguem@usuari,_usuariJoc
  4342  001CE0  0012               	return		;funcret
  4343  001CE2                     __end_of_JJuguem:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _HActualitzaHora *****************
  4347 ;; Defined at:
  4348 ;;		line 14 in file "Hora.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4351 ;;		 -> horaTmp(4), 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1
  4363 ;;      Params:         1       0       0
  4364 ;;      Locals:         0       0       0
  4365 ;;      Temps:          0       0       0
  4366 ;;      Totals:         1       0       0
  4367 ;;Total ram usage:        1 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 2
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_menu
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text34
  4378  001A00                     __ptext34:
  4379                           	callstack 0
  4380  001A00                     _HActualitzaHora:
  4381                           	callstack 27
  4382                           
  4383                           ;Hora.c: 15:     hora[0] = nova[0];
  4384                           
  4385                           ;incstack = 0
  4386  001A00  506A               	movf	HActualitzaHora@nova^0,w,c
  4387  001A02  6ED9               	movwf	fsr2l,c
  4388  001A04  6ADA               	clrf	fsr2h,c
  4389  001A06  50DF               	movf	indf2,w,c
  4390  001A08  6E5F               	movwf	_hora^0,c
  4391                           
  4392                           ;Hora.c: 16:     hora[1] = nova[1];
  4393  001A0A  506A               	movf	HActualitzaHora@nova^0,w,c
  4394  001A0C  6ED9               	movwf	fsr2l,c
  4395  001A0E  6ADA               	clrf	fsr2h,c
  4396  001A10  0E01               	movlw	1
  4397  001A12  26D9               	addwf	fsr2l,f,c
  4398  001A14  50DF               	movf	indf2,w,c
  4399  001A16  6E60               	movwf	(_hora+1)^0,c
  4400                           
  4401                           ;Hora.c: 17:     hora[3] = nova[2];
  4402  001A18  506A               	movf	HActualitzaHora@nova^0,w,c
  4403  001A1A  6ED9               	movwf	fsr2l,c
  4404  001A1C  6ADA               	clrf	fsr2h,c
  4405  001A1E  0E02               	movlw	2
  4406  001A20  26D9               	addwf	fsr2l,f,c
  4407  001A22  50DF               	movf	indf2,w,c
  4408  001A24  6E62               	movwf	(_hora+3)^0,c
  4409                           
  4410                           ;Hora.c: 18:     hora[4] = nova[3];
  4411  001A26  506A               	movf	HActualitzaHora@nova^0,w,c
  4412  001A28  6ED9               	movwf	fsr2l,c
  4413  001A2A  6ADA               	clrf	fsr2h,c
  4414  001A2C  0E03               	movlw	3
  4415  001A2E  26D9               	addwf	fsr2l,f,c
  4416  001A30  50DF               	movf	indf2,w,c
  4417  001A32  6E63               	movwf	(_hora+4)^0,c
  4418  001A34  0012               	return		;funcret
  4419  001A36                     __end_of_HActualitzaHora:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _GLCDMostraMenu *****************
  4423 ;; Defined at:
  4424 ;;		line 30 in file "GestioLCD.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  num             1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  num             1    5[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1
  4438 ;;      Params:         0       0       0
  4439 ;;      Locals:         1       0       0
  4440 ;;      Temps:          0       0       0
  4441 ;;      Totals:         1       0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 2
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_menu
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text35
  4453  001C86                     __ptext35:
  4454                           	callstack 0
  4455  001C86                     _GLCDMostraMenu:
  4456                           	callstack 27
  4457                           
  4458                           ;incstack = 0
  4459                           ;GLCDMostraMenu@num stored from wreg
  4460  001C86  6E6A               	movwf	GLCDMostraMenu@num^0,c
  4461                           
  4462                           ;GestioLCD.c: 31:     newString = 1;
  4463  001C88  8E78               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  4464                           
  4465                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  4466  001C8A  C06A  F018         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  4467                           
  4468                           ;GestioLCD.c: 33:     ferMenu = 1;
  4469  001C8E  8079               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4470  001C90  0012               	return		;funcret
  4471  001C92                     __end_of_GLCDMostraMenu:
  4472                           	callstack 0
  4473                           
  4474 ;; *************** function _init_ports *****************
  4475 ;; Defined at:
  4476 ;;		line 25 in file "main.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1
  4490 ;;      Params:         0       0       0
  4491 ;;      Locals:         0       0       0
  4492 ;;      Temps:          0       0       0
  4493 ;;      Totals:         0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 2
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_main
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text36
  4505  001BAE                     __ptext36:
  4506                           	callstack 0
  4507  001BAE                     _init_ports:
  4508                           	callstack 28
  4509                           
  4510                           ;incstack = 0
  4511  001BAE  0E03               	movlw	3
  4512  001BB0  6E92               	movwf	146,c	;volatile
  4513  001BB2  0EE0               	movlw	224
  4514  001BB4  6E93               	movwf	147,c	;volatile
  4515  001BB6  968A               	bcf	138,3,c	;volatile
  4516  001BB8  908A               	bcf	138,0,c	;volatile
  4517  001BBA  928A               	bcf	138,1,c	;volatile
  4518                           
  4519                           ;main.c: 48:     TRISC = 0xC0;
  4520  001BBC  0EC0               	movlw	192
  4521  001BBE  6E94               	movwf	148,c	;volatile
  4522                           
  4523                           ;main.c: 58:     TRISD = 0x8F;
  4524  001BC0  0E8F               	movlw	143
  4525  001BC2  6E95               	movwf	149,c	;volatile
  4526                           
  4527                           ;main.c: 59:     LATD = 0x00;
  4528  001BC4  0E00               	movlw	0
  4529  001BC6  6E8C               	movwf	140,c	;volatile
  4530                           
  4531                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  4532  001BC8  8EA6               	bsf	166,7,c	;volsfr
  4533                           
  4534                           ;main.c: 63:     EECON1bits.CFGS = 0;
  4535  001BCA  9CA6               	bcf	166,6,c	;volsfr
  4536  001BCC  0012               	return		;funcret
  4537  001BCE                     __end_of_init_ports:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _init_eusart *****************
  4541 ;; Defined at:
  4542 ;;		line 66 in file "main.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1
  4556 ;;      Params:         0       0       0
  4557 ;;      Locals:         0       0       0
  4558 ;;      Temps:          0       0       0
  4559 ;;      Totals:         0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 2
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text37
  4571  001C06                     __ptext37:
  4572                           	callstack 0
  4573  001C06                     _init_eusart:
  4574                           	callstack 28
  4575                           
  4576                           ;main.c: 67:     TXSTA = 0x24;
  4577                           
  4578                           ;incstack = 0
  4579  001C06  0E24               	movlw	36
  4580  001C08  6EAC               	movwf	172,c	;volatile
  4581                           
  4582                           ;main.c: 68:     RCSTA = 0x90;
  4583  001C0A  0E90               	movlw	144
  4584  001C0C  6EAB               	movwf	171,c	;volatile
  4585                           
  4586                           ;main.c: 69:     BAUDCON = 0x08;
  4587  001C0E  0E08               	movlw	8
  4588  001C10  6EB8               	movwf	184,c	;volatile
  4589                           
  4590                           ;main.c: 70:     SPBRGH = 0x04;
  4591  001C12  0E04               	movlw	4
  4592  001C14  6EB0               	movwf	176,c	;volatile
  4593                           
  4594                           ;main.c: 71:     SPBRG = 0x10;
  4595  001C16  0E10               	movlw	16
  4596  001C18  6EAF               	movwf	175,c	;volatile
  4597  001C1A  0012               	return		;funcret
  4598  001C1C                     __end_of_init_eusart:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function _initHora *****************
  4602 ;; Defined at:
  4603 ;;		line 10 in file "Hora.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1
  4617 ;;      Params:         0       0       0
  4618 ;;      Locals:         0       0       0
  4619 ;;      Temps:          0       0       0
  4620 ;;      Totals:         0       0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 3
  4624 ;; This function calls:
  4625 ;;		_TiGetTimer
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text38
  4632  001CE2                     __ptext38:
  4633                           	callstack 0
  4634  001CE2                     _initHora:
  4635                           	callstack 27
  4636                           
  4637                           ;Hora.c: 11:     timerHora = TiGetTimer();
  4638                           
  4639                           ;incstack = 0
  4640  001CE2  ECAC  F00C         	call	_TiGetTimer	;wreg free
  4641  001CE6  6E0D               	movwf	_timerHora^0,c
  4642  001CE8  0012               	return		;funcret
  4643  001CEA                     __end_of_initHora:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _initAltaveu *****************
  4647 ;; Defined at:
  4648 ;;		line 10 in file "Altaveu.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1
  4662 ;;      Params:         0       0       0
  4663 ;;      Locals:         0       0       0
  4664 ;;      Temps:          0       0       0
  4665 ;;      Totals:         0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 3
  4669 ;; This function calls:
  4670 ;;		_TiGetTimer
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text39
  4677  001CEA                     __ptext39:
  4678                           	callstack 0
  4679  001CEA                     _initAltaveu:
  4680                           	callstack 27
  4681                           
  4682                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  4683                           
  4684                           ;incstack = 0
  4685  001CEA  ECAC  F00C         	call	_TiGetTimer	;wreg free
  4686  001CEE  6E1C               	movwf	_timerAltaveu^0,c
  4687  001CF0  0012               	return		;funcret
  4688  001CF2                     __end_of_initAltaveu:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _escriureEEPROM *****************
  4692 ;; Defined at:
  4693 ;;		line 208 in file "Usuaris.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  caca            1    5[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1
  4707 ;;      Params:         0       0       0
  4708 ;;      Locals:         1       0       0
  4709 ;;      Temps:          0       0       0
  4710 ;;      Totals:         1       0       0
  4711 ;;Total ram usage:        1 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text40
  4722  001A9A                     __ptext40:
  4723                           	callstack 0
  4724  001A9A                     _escriureEEPROM:
  4725                           	callstack 28
  4726                           
  4727                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  4728                           
  4729                           ;incstack = 0
  4730  001A9A  0E00               	movlw	0
  4731  001A9C  6E6A               	movwf	escriureEEPROM@caca^0,c
  4732  001A9E                     l2222:
  4733                           
  4734                           ;Usuaris.c: 210:         EEADR = 0;
  4735  001A9E  0E00               	movlw	0
  4736  001AA0  6EA9               	movwf	169,c	;volatile
  4737                           
  4738                           ;Usuaris.c: 211:         EEDATA = 0;
  4739  001AA2  0E00               	movlw	0
  4740  001AA4  6EA8               	movwf	168,c	;volatile
  4741                           
  4742                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  4743  001AA6  9EA6               	bcf	166,7,c	;volsfr
  4744                           
  4745                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  4746  001AA8  9CA6               	bcf	166,6,c	;volsfr
  4747                           
  4748                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  4749  001AAA  84A6               	bsf	166,2,c	;volsfr
  4750                           
  4751                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  4752  001AAC  9EF2               	bcf	242,7,c	;volatile
  4753                           
  4754                           ;Usuaris.c: 216:         EECON2 = 85;
  4755  001AAE  0E55               	movlw	85
  4756  001AB0  6EA7               	movwf	167,c	;volsfr
  4757                           
  4758                           ;Usuaris.c: 217:         EECON2 = 170;
  4759  001AB2  0EAA               	movlw	170
  4760  001AB4  6EA7               	movwf	167,c	;volsfr
  4761                           
  4762                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  4763  001AB6  82A6               	bsf	166,1,c	;volsfr
  4764  001AB8                     l708:
  4765                           
  4766                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  4767  001AB8  B2A6               	btfsc	166,1,c	;volsfr
  4768  001ABA  D7FE               	goto	l708
  4769                           
  4770                           ;Usuaris.c: 224:     }
  4771  001ABC  2A6A               	incf	escriureEEPROM@caca^0,f,c
  4772  001ABE  0E9F               	movlw	159
  4773  001AC0  646A               	cpfsgt	escriureEEPROM@caca^0,c
  4774  001AC2  D7ED               	goto	l2222
  4775                           
  4776                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  4777  001AC4  8EF2               	bsf	242,7,c	;volatile
  4778  001AC6  0012               	return		;funcret
  4779  001AC8                     __end_of_escriureEEPROM:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _escriure2usuarisStruct *****************
  4783 ;; Defined at:
  4784 ;;		line 115 in file "Usuaris.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 3F/1
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1
  4798 ;;      Params:         0       0       0
  4799 ;;      Locals:         0       0       0
  4800 ;;      Temps:          0       0       0
  4801 ;;      Totals:         0       0       0
  4802 ;;Total ram usage:        0 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 2
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text41
  4813  001AC8                     __ptext41:
  4814                           	callstack 0
  4815  001AC8                     _escriure2usuarisStruct:
  4816                           	callstack 28
  4817                           
  4818                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  4819                           
  4820                           ;incstack = 0
  4821  001AC8  0E01               	movlw	1
  4822  001ACA  0101               	movlb	1	; () banked
  4823  001ACC  6F00               	movwf	_usuaris& (0+255),b
  4824                           
  4825                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  4826  001ACE  0E01               	movlw	1
  4827  001AD0  6F09               	movwf	(_usuaris+9)& (0+255),b
  4828                           
  4829                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  4830  001AD2  0E31               	movlw	49
  4831  001AD4  6F17               	movwf	(_usuaris+23)& (0+255),b
  4832                           
  4833                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  4834  001AD6  0E31               	movlw	49
  4835  001AD8  6F20               	movwf	(_usuaris+32)& (0+255),b
  4836                           
  4837                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  4838  001ADA  0E00               	movlw	0
  4839  001ADC  6F01               	movwf	(_usuaris+1)& (0+255),b
  4840                           
  4841                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  4842  001ADE  0E00               	movlw	0
  4843  001AE0  6F0A               	movwf	(_usuaris+10)& (0+255),b
  4844                           
  4845                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  4846  001AE2  0E00               	movlw	0
  4847  001AE4  6F18               	movwf	(_usuaris+24)& (0+255),b
  4848                           
  4849                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  4850  001AE6  0E00               	movlw	0
  4851  001AE8  6F21               	movwf	(_usuaris+33)& (0+255),b
  4852                           
  4853                           ;Usuaris.c: 125:     numUsuaris = 2;
  4854  001AEA  0E02               	movlw	2
  4855  001AEC  6E23               	movwf	_numUsuaris^0,c
  4856                           
  4857                           ;Usuaris.c: 126:     indexNextUser = 2;
  4858  001AEE  0E02               	movlw	2
  4859  001AF0  6E22               	movwf	_indexNextUser^0,c
  4860                           
  4861                           ; BSR set to: 1
  4862  001AF2  0012               	return		;funcret
  4863  001AF4                     __end_of_escriure2usuarisStruct:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _UmotorUsers *****************
  4867 ;; Defined at:
  4868 ;;		line 139 in file "Usuaris.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/1
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1
  4882 ;;      Params:         0       0       0
  4883 ;;      Locals:         0       0       0
  4884 ;;      Temps:          2       0       0
  4885 ;;      Totals:         2       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 3
  4889 ;; This function calls:
  4890 ;;		_compareStrings
  4891 ;;		_escriureCharEEPROM
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text42
  4898  000D24                     __ptext42:
  4899                           	callstack 0
  4900  000D24                     _UmotorUsers:
  4901                           	callstack 27
  4902                           
  4903                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  4904                           
  4905                           ; BSR set to: 1
  4906                           ;incstack = 0
  4907  000D24  D0A7               	goto	l4994
  4908  000D26                     l680:
  4909                           
  4910                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  4911  000D26  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4912  000D28  B679               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  4913  000D2A  D005               	goto	l681
  4914                           
  4915                           ;Usuaris.c: 145:     i = 0;
  4916  000D2C  0E00               	movlw	0
  4917  000D2E  6E20               	movwf	_i^0,c
  4918                           
  4919                           ;Usuaris.c: 146:     j = 0;
  4920  000D30  0E00               	movlw	0
  4921  000D32  6E1F               	movwf	_j^0,c
  4922                           
  4923                           ;Usuaris.c: 147:    }
  4924  000D34  0012               	return	
  4925  000D36                     l681:
  4926  000D36  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4927  000D38  D004               	goto	l683
  4928                           
  4929                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  4930  000D3A  6857               	setf	_usuariLoguejat^0,c
  4931  000D3C                     l4922:
  4932                           
  4933                           ;Usuaris.c: 150:     state = 1;
  4934  000D3C  0E01               	movlw	1
  4935  000D3E  6E1E               	movwf	UmotorUsers@state^0,c
  4936                           
  4937                           ;Usuaris.c: 151:    }
  4938  000D40  0012               	return	
  4939  000D42                     l683:
  4940  000D42  A679               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  4941  000D44  0012               	return	
  4942  000D46                     u4380:
  4943                           
  4944                           ;Usuaris.c: 153:     state = 2;
  4945  000D46  0E02               	movlw	2
  4946  000D48  6E1E               	movwf	UmotorUsers@state^0,c
  4947                           
  4948                           ;Usuaris.c: 155:   break;
  4949  000D4A  0012               	return	
  4950  000D4C                     l4926:
  4951                           
  4952                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  4953  000D4C  5023               	movf	_numUsuaris^0,w,c
  4954  000D4E  5C20               	subwf	_i^0,w,c
  4955  000D50  B0D8               	btfsc	status,0,c
  4956  000D52  D014               	goto	l4936
  4957                           
  4958                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  4959  000D54  0E37               	movlw	low _tmpUsername
  4960  000D56  6E6A               	movwf	compareStrings@a^0,c
  4961  000D58  5020               	movf	_i^0,w,c
  4962  000D5A  0D17               	mullw	23
  4963  000D5C  0E00               	movlw	low _usuaris
  4964  000D5E  24F3               	addwf	243,w,c
  4965  000D60  6E6B               	movwf	compareStrings@b^0,c
  4966  000D62  0E01               	movlw	high _usuaris
  4967  000D64  20F4               	addwfc	prodh,w,c
  4968  000D66  6E6C               	movwf	(compareStrings@b+1)^0,c
  4969  000D68  EC4C  F00C         	call	_compareStrings	;wreg free
  4970  000D6C  0900               	iorlw	0
  4971  000D6E  A4D8               	btfss	status,2,c
  4972  000D70  D003               	goto	l4932
  4973                           
  4974                           ;Usuaris.c: 160:      usuariLoguejat = i;
  4975  000D72  C020  F057         	movff	_i,_usuariLoguejat
  4976                           
  4977                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  4978  000D76  868A               	bsf	138,3,c	;volatile
  4979  000D78                     l4932:
  4980                           
  4981                           ;Usuaris.c: 166:     i++;
  4982  000D78  2A20               	incf	_i^0,f,c
  4983  000D7A  D7E0               	goto	l4922
  4984  000D7C                     l4936:
  4985  000D7C  5023               	movf	_numUsuaris^0,w,c
  4986  000D7E  1820               	xorwf	_i^0,w,c
  4987  000D80  A4D8               	btfss	status,2,c
  4988  000D82  0012               	return	
  4989                           
  4990                           ;Usuaris.c: 170:     do_check_exists = 0;
  4991  000D84  9879               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4992  000D86                     l4940:
  4993                           
  4994                           ;Usuaris.c: 171:     state = 0;
  4995  000D86  0E00               	movlw	0
  4996  000D88  6E1E               	movwf	UmotorUsers@state^0,c
  4997  000D8A  0012               	return	
  4998  000D8C                     l4942:
  4999                           
  5000                           ;Usuaris.c: 176:    if (i != 8) {
  5001  000D8C  0E08               	movlw	8
  5002  000D8E  1820               	xorwf	_i^0,w,c
  5003  000D90  B4D8               	btfsc	status,2,c
  5004  000D92  D022               	goto	l4954
  5005                           
  5006                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5007  000D94  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  5008  000D98  5020               	movf	_i^0,w,c
  5009  000D9A  0F37               	addlw	low _tmpUsername
  5010  000D9C  6ED9               	movwf	fsr2l,c
  5011  000D9E  6ADA               	clrf	fsr2h,c
  5012  000DA0  50DF               	movf	indf2,w,c
  5013  000DA2  EC90  F00D         	call	_escriureCharEEPROM
  5014  000DA6  2A22               	incf	_indexNextUser^0,f,c
  5015                           
  5016                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5017  000DA8  5020               	movf	_i^0,w,c
  5018  000DAA  0F37               	addlw	low _tmpUsername
  5019  000DAC  6ED9               	movwf	fsr2l,c
  5020  000DAE  6ADA               	clrf	fsr2h,c
  5021  000DB0  5021               	movf	_indexNextUserStruct^0,w,c
  5022  000DB2  0D17               	mullw	23
  5023  000DB4  0E00               	movlw	low _usuaris
  5024  000DB6  6E6F               	movwf	??_UmotorUsers^0,c
  5025  000DB8  0E01               	movlw	high _usuaris
  5026  000DBA  6E70               	movwf	(??_UmotorUsers+1)^0,c
  5027  000DBC  50F3               	movf	243,w,c
  5028  000DBE  266F               	addwf	??_UmotorUsers^0,f,c
  5029  000DC0  50F4               	movf	244,w,c
  5030  000DC2  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5031  000DC4  5020               	movf	_i^0,w,c
  5032  000DC6  246F               	addwf	??_UmotorUsers^0,w,c
  5033  000DC8  6EE1               	movwf	fsr1l,c
  5034  000DCA  0E00               	movlw	0
  5035  000DCC  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  5036  000DCE  6EE2               	movwf	fsr1h,c
  5037  000DD0  CFDF FFE7          	movff	indf2,indf1
  5038                           
  5039                           ;Usuaris.c: 179:     i++;
  5040  000DD4  2A20               	incf	_i^0,f,c
  5041  000DD6  D7B7               	goto	u4380
  5042  000DD8                     l4954:
  5043  000DD8  0E08               	movlw	8
  5044  000DDA  1820               	xorwf	_i^0,w,c
  5045  000DDC  A4D8               	btfss	status,2,c
  5046  000DDE  0012               	return	
  5047                           
  5048                           ;Usuaris.c: 183:     i = 0;
  5049  000DE0  0E00               	movlw	0
  5050  000DE2  6E20               	movwf	_i^0,c
  5051                           
  5052                           ;Usuaris.c: 184:     state = 3;
  5053  000DE4  0E03               	movlw	3
  5054  000DE6  6E1E               	movwf	UmotorUsers@state^0,c
  5055  000DE8  0012               	return	
  5056  000DEA                     l4958:
  5057                           
  5058                           ;Usuaris.c: 188:    if (i != 8) {
  5059  000DEA  0E08               	movlw	8
  5060  000DEC  1820               	xorwf	_i^0,w,c
  5061  000DEE  B4D8               	btfsc	status,2,c
  5062  000DF0  D028               	goto	l4970
  5063                           
  5064                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5065  000DF2  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  5066  000DF6  5020               	movf	_i^0,w,c
  5067  000DF8  0F98               	addlw	low _tmpPassword
  5068  000DFA  6ED9               	movwf	fsr2l,c
  5069  000DFC  6ADA               	clrf	fsr2h,c
  5070  000DFE  50DF               	movf	indf2,w,c
  5071  000E00  EC90  F00D         	call	_escriureCharEEPROM
  5072  000E04  2A22               	incf	_indexNextUser^0,f,c
  5073                           
  5074                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5075  000E06  5020               	movf	_i^0,w,c
  5076  000E08  0F98               	addlw	low _tmpPassword
  5077  000E0A  6ED9               	movwf	fsr2l,c
  5078  000E0C  6ADA               	clrf	fsr2h,c
  5079  000E0E  5021               	movf	_indexNextUserStruct^0,w,c
  5080  000E10  0D17               	mullw	23
  5081  000E12  0E00               	movlw	low _usuaris
  5082  000E14  6E6F               	movwf	??_UmotorUsers^0,c
  5083  000E16  0E01               	movlw	high _usuaris
  5084  000E18  6E70               	movwf	(??_UmotorUsers+1)^0,c
  5085  000E1A  0E09               	movlw	9
  5086  000E1C  266F               	addwf	??_UmotorUsers^0,f,c
  5087  000E1E  0E00               	movlw	0
  5088  000E20  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5089  000E22  50F3               	movf	243,w,c
  5090  000E24  266F               	addwf	??_UmotorUsers^0,f,c
  5091  000E26  50F4               	movf	244,w,c
  5092  000E28  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5093  000E2A  5020               	movf	_i^0,w,c
  5094  000E2C  246F               	addwf	??_UmotorUsers^0,w,c
  5095  000E2E  6EE1               	movwf	fsr1l,c
  5096  000E30  0E00               	movlw	0
  5097  000E32  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  5098  000E34  6EE2               	movwf	fsr1h,c
  5099  000E36  CFDF FFE7          	movff	indf2,indf1
  5100                           
  5101                           ;Usuaris.c: 191:     i++;
  5102  000E3A  2A20               	incf	_i^0,f,c
  5103                           
  5104                           ;Usuaris.c: 192:     state = 3;
  5105  000E3C  0E03               	movlw	3
  5106  000E3E  6E1E               	movwf	UmotorUsers@state^0,c
  5107                           
  5108                           ;Usuaris.c: 193:    }
  5109  000E40  0012               	return	
  5110  000E42                     l4970:
  5111  000E42  0E08               	movlw	8
  5112  000E44  1820               	xorwf	_i^0,w,c
  5113  000E46  A4D8               	btfss	status,2,c
  5114  000E48  0012               	return	
  5115                           
  5116                           ;Usuaris.c: 195:     do_register = 0;
  5117  000E4A  9679               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5118                           
  5119                           ;Usuaris.c: 196:     indexNextUser++;
  5120  000E4C  2A22               	incf	_indexNextUser^0,f,c
  5121                           
  5122                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5123  000E4E  0E9F               	movlw	159
  5124  000E50  1822               	xorwf	_indexNextUser^0,w,c
  5125  000E52  A4D8               	btfss	status,2,c
  5126  000E54  D002               	goto	l4980
  5127  000E56  0E10               	movlw	16
  5128  000E58  6E22               	movwf	_indexNextUser^0,c
  5129  000E5A                     l4980:
  5130                           
  5131                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5132  000E5A  2A21               	incf	_indexNextUserStruct^0,f,c
  5133                           
  5134                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5135  000E5C  0E08               	movlw	8
  5136  000E5E  1821               	xorwf	_indexNextUserStruct^0,w,c
  5137  000E60  A4D8               	btfss	status,2,c
  5138  000E62  D002               	goto	l4986
  5139  000E64  0E00               	movlw	0
  5140  000E66  6E21               	movwf	_indexNextUserStruct^0,c
  5141  000E68                     l4986:
  5142                           
  5143                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5144  000E68  0E08               	movlw	8
  5145  000E6A  1823               	xorwf	_numUsuaris^0,w,c
  5146  000E6C  B4D8               	btfsc	status,2,c
  5147  000E6E  D78B               	goto	l4940
  5148  000E70  2A23               	incf	_numUsuaris^0,f,c
  5149  000E72  D789               	goto	l4940
  5150  000E74                     l4994:
  5151  000E74  501E               	movf	UmotorUsers@state^0,w,c
  5152  000E76  6E6F               	movwf	??_UmotorUsers^0,c
  5153  000E78  6A70               	clrf	(??_UmotorUsers+1)^0,c
  5154                           
  5155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5156                           ; Switch size 1, requested type "simple"
  5157                           ; Number of cases is 1, Range of values is 0 to 0
  5158                           ; switch strategies available:
  5159                           ; Name         Instructions Cycles
  5160                           ; simple_byte            4     3 (average)
  5161                           ;	Chosen strategy is simple_byte
  5162  000E7A  5070               	movf	(??_UmotorUsers+1)^0,w,c
  5163  000E7C  0A00               	xorlw	0	; case 0
  5164  000E7E  A4D8               	btfss	status,2,c
  5165  000E80  0012               	return	
  5166                           
  5167                           ; Switch size 1, requested type "simple"
  5168                           ; Number of cases is 4, Range of values is 0 to 3
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte           13     7 (average)
  5172                           ;	Chosen strategy is simple_byte
  5173  000E82  506F               	movf	??_UmotorUsers^0,w,c
  5174  000E84  0A00               	xorlw	0	; case 0
  5175  000E86  B4D8               	btfsc	status,2,c
  5176  000E88  D74E               	goto	l680
  5177  000E8A  0A01               	xorlw	1	; case 1
  5178  000E8C  B4D8               	btfsc	status,2,c
  5179  000E8E  D75E               	goto	l4926
  5180  000E90  0A03               	xorlw	3	; case 2
  5181  000E92  B4D8               	btfsc	status,2,c
  5182  000E94  D77B               	goto	l4942
  5183  000E96  0A01               	xorlw	1	; case 3
  5184  000E98  A4D8               	btfss	status,2,c
  5185  000E9A  0012               	return	
  5186  000E9C  D7A6               	goto	l4958
  5187  000E9E                     __end_of_UmotorUsers:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _escriureCharEEPROM *****************
  5191 ;; Defined at:
  5192 ;;		line 57 in file "Usuaris.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  c               1    wreg     unsigned char 
  5195 ;;  pos             1    5[COMRAM] unsigned char 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  c               1    6[COMRAM] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/1
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1
  5207 ;;      Params:         1       0       0
  5208 ;;      Locals:         1       0       0
  5209 ;;      Temps:          0       0       0
  5210 ;;      Totals:         2       0       0
  5211 ;;Total ram usage:        2 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 2
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_UmotorUsers
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text43
  5222  001B20                     __ptext43:
  5223                           	callstack 0
  5224  001B20                     _escriureCharEEPROM:
  5225                           	callstack 27
  5226                           
  5227                           ;incstack = 0
  5228                           ;escriureCharEEPROM@c stored from wreg
  5229  001B20  6E6B               	movwf	escriureCharEEPROM@c^0,c
  5230                           
  5231                           ;Usuaris.c: 58:     EEADR = pos;
  5232  001B22  C06A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5233                           
  5234                           ;Usuaris.c: 59:     EEDATA = c;
  5235  001B26  C06B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5236                           
  5237                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5238  001B2A  9EA6               	bcf	166,7,c	;volsfr
  5239                           
  5240                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5241  001B2C  9CA6               	bcf	166,6,c	;volsfr
  5242                           
  5243                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5244  001B2E  84A6               	bsf	166,2,c	;volsfr
  5245                           
  5246                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5247  001B30  9EF2               	bcf	242,7,c	;volatile
  5248                           
  5249                           ;Usuaris.c: 64:     EECON2 = 85;
  5250  001B32  0E55               	movlw	85
  5251  001B34  6EA7               	movwf	167,c	;volsfr
  5252                           
  5253                           ;Usuaris.c: 65:     EECON2 = 170;
  5254  001B36  0EAA               	movlw	170
  5255  001B38  6EA7               	movwf	167,c	;volsfr
  5256                           
  5257                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5258  001B3A  82A6               	bsf	166,1,c	;volsfr
  5259  001B3C                     l639:
  5260  001B3C  B2A6               	btfsc	166,1,c	;volsfr
  5261  001B3E  D7FE               	goto	l639
  5262                           
  5263                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5264  001B40  8EF2               	bsf	242,7,c	;volatile
  5265  001B42  0012               	return		;funcret
  5266  001B44                     __end_of_escriureCharEEPROM:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function _compareStrings *****************
  5270 ;; Defined at:
  5271 ;;		line 129 in file "Usuaris.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5274 ;;		 -> tmpUsername(9), 
  5275 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5276 ;;		 -> usuaris.username(9), usuaris(184), 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      unsigned char 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/1
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1
  5288 ;;      Params:         3       0       0
  5289 ;;      Locals:         0       0       0
  5290 ;;      Temps:          2       0       0
  5291 ;;      Totals:         5       0       0
  5292 ;;Total ram usage:        5 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_UmotorUsers
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text44
  5303  001898                     __ptext44:
  5304                           	callstack 0
  5305  001898                     _compareStrings:
  5306                           	callstack 27
  5307                           
  5308                           ;Usuaris.c: 130:     while (*a){
  5309                           
  5310                           ;incstack = 0
  5311  001898  D00E               	goto	l4030
  5312  00189A                     l4024:
  5313                           
  5314                           ;Usuaris.c: 131:         if (*a != *b)break;
  5315  00189A  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5316  00189E  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5317  0018A2  506A               	movf	compareStrings@a^0,w,c
  5318  0018A4  6EE1               	movwf	fsr1l,c
  5319  0018A6  6AE2               	clrf	fsr1h,c
  5320  0018A8  50DE               	movf	postinc2,w,c
  5321  0018AA  18E6               	xorwf	postinc1,w,c
  5322  0018AC  A4D8               	btfss	status,2,c
  5323  0018AE  D009               	goto	u3060
  5324                           
  5325                           ;Usuaris.c: 132:         a++;
  5326  0018B0  2A6A               	incf	compareStrings@a^0,f,c
  5327                           
  5328                           ;Usuaris.c: 133:         b++;
  5329  0018B2  4A6B               	infsnz	compareStrings@b^0,f,c
  5330  0018B4  2A6C               	incf	(compareStrings@b+1)^0,f,c
  5331  0018B6                     l4030:
  5332                           
  5333                           ;Usuaris.c: 130:     while (*a){
  5334  0018B6  506A               	movf	compareStrings@a^0,w,c
  5335  0018B8  6ED9               	movwf	fsr2l,c
  5336  0018BA  6ADA               	clrf	fsr2h,c
  5337  0018BC  50DF               	movf	indf2,w,c
  5338  0018BE  A4D8               	btfss	status,2,c
  5339  0018C0  D7EC               	goto	l4024
  5340  0018C2                     u3060:
  5341                           
  5342                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  5343  0018C2  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5344  0018C6  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5345  0018CA  50DF               	movf	indf2,w,c
  5346  0018CC  6E6D               	movwf	??_compareStrings^0,c
  5347  0018CE  506A               	movf	compareStrings@a^0,w,c
  5348  0018D0  6ED9               	movwf	fsr2l,c
  5349  0018D2  6ADA               	clrf	fsr2h,c
  5350  0018D4  50DF               	movf	indf2,w,c
  5351  0018D6  6E6E               	movwf	(??_compareStrings+1)^0,c
  5352  0018D8  506D               	movf	??_compareStrings^0,w,c
  5353  0018DA  5C6E               	subwf	(??_compareStrings+1)^0,w,c
  5354  0018DC  0012               	return		;funcret
  5355  0018DE                     __end_of_compareStrings:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _Uinit *****************
  5359 ;; Defined at:
  5360 ;;		line 70 in file "Usuaris.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  j               1    9[COMRAM] unsigned char 
  5365 ;;  j               1    8[COMRAM] unsigned char 
  5366 ;;  i               1    7[COMRAM] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1
  5376 ;;      Params:         0       0       0
  5377 ;;      Locals:         3       0       0
  5378 ;;      Temps:          2       0       0
  5379 ;;      Totals:         5       0       0
  5380 ;;Total ram usage:        5 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 2
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_main
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text45
  5391  001428                     __ptext45:
  5392                           	callstack 0
  5393  001428                     _Uinit:
  5394                           	callstack 28
  5395                           
  5396                           ;Usuaris.c: 75:     EEADR = 0;
  5397                           
  5398                           ;incstack = 0
  5399  001428  0E00               	movlw	0
  5400  00142A  6EA9               	movwf	169,c	;volatile
  5401                           
  5402                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  5403  00142C  9EA6               	bcf	166,7,c	;volsfr
  5404                           
  5405                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  5406  00142E  9CA6               	bcf	166,6,c	;volsfr
  5407                           
  5408                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  5409  001430  80A6               	bsf	166,0,c	;volsfr
  5410  001432                     l645:
  5411  001432  B0A6               	btfsc	166,0,c	;volsfr
  5412  001434  D7FE               	goto	l645
  5413                           
  5414                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  5415  001436  CFA8 F023          	movff	4008,_numUsuaris	;volatile
  5416                           
  5417                           ;Usuaris.c: 83:     EEADR++;
  5418  00143A  2AA9               	incf	169,f,c	;volatile
  5419                           
  5420                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  5421  00143C  9EA6               	bcf	166,7,c	;volsfr
  5422                           
  5423                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  5424  00143E  9CA6               	bcf	166,6,c	;volsfr
  5425  001440                     l648:
  5426  001440  B0A6               	btfsc	166,0,c	;volsfr
  5427  001442  D7FE               	goto	l648
  5428                           
  5429                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  5430  001444  CFA8 F022          	movff	4008,_indexNextUser	;volatile
  5431                           
  5432                           ;Usuaris.c: 90:     EEADR++;
  5433  001448  2AA9               	incf	169,f,c	;volatile
  5434                           
  5435                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  5436  00144A  0E00               	movlw	0
  5437  00144C  6E6C               	movwf	Uinit@i^0,c
  5438  00144E  D041               	goto	l2470
  5439  001450                     l2440:
  5440                           
  5441                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  5442  001450  0E00               	movlw	0
  5443  001452  6E6D               	movwf	Uinit@j^0,c
  5444  001454                     l653:
  5445                           
  5446                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  5447  001454  9EA6               	bcf	166,7,c	;volsfr
  5448                           
  5449                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  5450  001456  9CA6               	bcf	166,6,c	;volsfr
  5451                           
  5452                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  5453  001458  80A6               	bsf	166,0,c	;volsfr
  5454  00145A                     l655:
  5455  00145A  B0A6               	btfsc	166,0,c	;volsfr
  5456  00145C  D7FE               	goto	l655
  5457                           
  5458                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  5459  00145E  506C               	movf	Uinit@i^0,w,c
  5460  001460  0D17               	mullw	23
  5461  001462  0E00               	movlw	low _usuaris
  5462  001464  6E6A               	movwf	??_Uinit^0,c
  5463  001466  0E01               	movlw	high _usuaris
  5464  001468  6E6B               	movwf	(??_Uinit+1)^0,c
  5465  00146A  50F3               	movf	243,w,c
  5466  00146C  266A               	addwf	??_Uinit^0,f,c
  5467  00146E  50F4               	movf	244,w,c
  5468  001470  226B               	addwfc	(??_Uinit+1)^0,f,c
  5469  001472  506D               	movf	Uinit@j^0,w,c
  5470  001474  246A               	addwf	??_Uinit^0,w,c
  5471  001476  6ED9               	movwf	fsr2l,c
  5472  001478  0E00               	movlw	0
  5473  00147A  206B               	addwfc	(??_Uinit+1)^0,w,c
  5474  00147C  6EDA               	movwf	fsr2h,c
  5475  00147E  CFA8 FFDF          	movff	4008,indf2	;volatile
  5476                           
  5477                           ;Usuaris.c: 99:             EEADR++;
  5478  001482  2AA9               	incf	169,f,c	;volatile
  5479                           
  5480                           ;Usuaris.c: 100:         }
  5481  001484  2A6D               	incf	Uinit@j^0,f,c
  5482  001486  0E08               	movlw	8
  5483  001488  646D               	cpfsgt	Uinit@j^0,c
  5484  00148A  D7E4               	goto	l653
  5485                           
  5486                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  5487  00148C  0E00               	movlw	0
  5488  00148E  6E6E               	movwf	Uinit@j_1140^0,c
  5489  001490                     l658:
  5490                           
  5491                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  5492  001490  9EA6               	bcf	166,7,c	;volsfr
  5493                           
  5494                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  5495  001492  9CA6               	bcf	166,6,c	;volsfr
  5496                           
  5497                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  5498  001494  80A6               	bsf	166,0,c	;volsfr
  5499  001496                     l660:
  5500  001496  B0A6               	btfsc	166,0,c	;volsfr
  5501  001498  D7FE               	goto	l660
  5502                           
  5503                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  5504  00149A  506C               	movf	Uinit@i^0,w,c
  5505  00149C  0D17               	mullw	23
  5506  00149E  0E00               	movlw	low _usuaris
  5507  0014A0  6E6A               	movwf	??_Uinit^0,c
  5508  0014A2  0E01               	movlw	high _usuaris
  5509  0014A4  6E6B               	movwf	(??_Uinit+1)^0,c
  5510  0014A6  0E09               	movlw	9
  5511  0014A8  266A               	addwf	??_Uinit^0,f,c
  5512  0014AA  0E00               	movlw	0
  5513  0014AC  226B               	addwfc	(??_Uinit+1)^0,f,c
  5514  0014AE  50F3               	movf	243,w,c
  5515  0014B0  266A               	addwf	??_Uinit^0,f,c
  5516  0014B2  50F4               	movf	244,w,c
  5517  0014B4  226B               	addwfc	(??_Uinit+1)^0,f,c
  5518  0014B6  506E               	movf	Uinit@j_1140^0,w,c
  5519  0014B8  246A               	addwf	??_Uinit^0,w,c
  5520  0014BA  6ED9               	movwf	fsr2l,c
  5521  0014BC  0E00               	movlw	0
  5522  0014BE  206B               	addwfc	(??_Uinit+1)^0,w,c
  5523  0014C0  6EDA               	movwf	fsr2h,c
  5524  0014C2  CFA8 FFDF          	movff	4008,indf2	;volatile
  5525                           
  5526                           ;Usuaris.c: 107:             EEADR++;
  5527  0014C6  2AA9               	incf	169,f,c	;volatile
  5528                           
  5529                           ;Usuaris.c: 108:         }
  5530  0014C8  2A6E               	incf	Uinit@j_1140^0,f,c
  5531  0014CA  0E08               	movlw	8
  5532  0014CC  646E               	cpfsgt	Uinit@j_1140^0,c
  5533  0014CE  D7E0               	goto	l658
  5534                           
  5535                           ;Usuaris.c: 109:     }
  5536  0014D0  2A6C               	incf	Uinit@i^0,f,c
  5537  0014D2                     l2470:
  5538  0014D2  5023               	movf	_numUsuaris^0,w,c
  5539  0014D4  5C6C               	subwf	Uinit@i^0,w,c
  5540  0014D6  B0D8               	btfsc	status,0,c
  5541  0014D8  0012               	return	
  5542  0014DA  D7BA               	goto	l2440
  5543  0014DC                     __end_of_Uinit:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _TiInitTimer *****************
  5547 ;; Defined at:
  5548 ;;		line 18 in file "TiTTimer.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1
  5562 ;;      Params:         0       0       0
  5563 ;;      Locals:         0       0       0
  5564 ;;      Temps:          0       0       0
  5565 ;;      Totals:         0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 2
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text46
  5577  001992                     __ptext46:
  5578                           	callstack 0
  5579  001992                     _TiInitTimer:
  5580                           	callstack 28
  5581                           
  5582                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  5583                           
  5584                           ;incstack = 0
  5585  001992  9ED0               	bcf	208,7,c	;volatile
  5586                           
  5587                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  5588  001994  8EF2               	bsf	242,7,c	;volatile
  5589                           
  5590                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  5591  001996  8CF2               	bsf	242,6,c	;volatile
  5592                           
  5593                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  5594  001998  8AF2               	bsf	242,5,c	;volatile
  5595                           
  5596                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  5597  00199A  94F2               	bcf	242,2,c	;volatile
  5598                           
  5599                           ;TiTTimer.c: 25:     T0CON = 136;
  5600  00199C  0E88               	movlw	136
  5601  00199E  6ED5               	movwf	213,c	;volatile
  5602                           
  5603                           ;TiTTimer.c: 27:     TMR0H = 223;
  5604  0019A0  0EDF               	movlw	223
  5605  0019A2  6ED7               	movwf	215,c	;volatile
  5606                           
  5607                           ;TiTTimer.c: 28:     TMR0L = 148;
  5608  0019A4  0E94               	movlw	148
  5609  0019A6  6ED6               	movwf	214,c	;volatile
  5610                           
  5611                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  5612  0019A8  8ED5               	bsf	213,7,c	;volatile
  5613                           
  5614                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  5615  0019AA  0E00               	movlw	0
  5616  0019AC  6E2A               	movwf	_counter^0,c
  5617  0019AE                     l4134:
  5618  0019AE  0E07               	movlw	7
  5619  0019B0  642A               	cpfsgt	_counter^0,c
  5620  0019B2  D001               	goto	l4138
  5621  0019B4  0012               	return	
  5622  0019B6                     l4138:
  5623                           
  5624                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  5625  0019B6  502A               	movf	_counter^0,w,c
  5626  0019B8  0D03               	mullw	3
  5627  0019BA  50F3               	movf	243,w,c
  5628  0019BC  0F82               	addlw	low (_s_Timers+2)
  5629  0019BE  6ED9               	movwf	fsr2l,c
  5630  0019C0  6ADA               	clrf	fsr2h,c
  5631  0019C2  0E00               	movlw	0
  5632  0019C4  6EDF               	movwf	indf2,c
  5633                           
  5634                           ;TiTTimer.c: 33:     }
  5635  0019C6  2A2A               	incf	_counter^0,f,c
  5636  0019C8  D7F2               	goto	l4134
  5637  0019CA                     __end_of_TiInitTimer:
  5638                           	callstack 0
  5639                           
  5640 ;; *************** function _TeTeclat *****************
  5641 ;; Defined at:
  5642 ;;		line 22 in file "TeTeclat.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/1
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1
  5656 ;;      Params:         0       0       0
  5657 ;;      Locals:         0       0       0
  5658 ;;      Temps:          3       0       0
  5659 ;;      Totals:         3       0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 3
  5663 ;; This function calls:
  5664 ;;		_MsetNovaTecla
  5665 ;;		_SsetNovaTecla
  5666 ;;		_TiGetTics
  5667 ;;		_TiResetTics
  5668 ;; This function is called by:
  5669 ;;		_main
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text47
  5674  000E9E                     __ptext47:
  5675                           	callstack 0
  5676  000E9E                     _TeTeclat:
  5677                           	callstack 27
  5678                           
  5679                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  5680                           
  5681                           ;incstack = 0
  5682  000E9E  A083               	btfss	131,0,c	;volatile
  5683  000EA0  D003               	goto	u6900
  5684  000EA2  6A71               	clrf	??_TeTeclat^0,c
  5685  000EA4  2A71               	incf	??_TeTeclat^0,f,c
  5686  000EA6  D001               	goto	u6908
  5687  000EA8                     u6900:
  5688  000EA8  6A71               	clrf	??_TeTeclat^0,c
  5689  000EAA                     u6908:
  5690  000EAA  A283               	btfss	131,1,c	;volatile
  5691  000EAC  D002               	goto	u6910
  5692  000EAE  0E01               	movlw	1
  5693  000EB0  D001               	goto	u6916
  5694  000EB2                     u6910:
  5695  000EB2  0E00               	movlw	0
  5696  000EB4                     u6916:
  5697  000EB4  0D02               	mullw	2
  5698  000EB6  CFF3 F072          	movff	prodl,??_TeTeclat+1
  5699  000EBA  A483               	btfss	131,2,c	;volatile
  5700  000EBC  D002               	goto	u6920
  5701  000EBE  0E01               	movlw	1
  5702  000EC0  D001               	goto	u6926
  5703  000EC2                     u6920:
  5704  000EC2  0E00               	movlw	0
  5705  000EC4                     u6926:
  5706  000EC4  0D03               	mullw	3
  5707  000EC6  CFF3 F073          	movff	prodl,??_TeTeclat+2
  5708  000ECA  A683               	btfss	131,3,c	;volatile
  5709  000ECC  D002               	goto	u6930
  5710  000ECE  0E01               	movlw	1
  5711  000ED0  D001               	goto	u6936
  5712  000ED2                     u6930:
  5713  000ED2  0E00               	movlw	0
  5714  000ED4                     u6936:
  5715  000ED4  0D04               	mullw	4
  5716  000ED6  50F3               	movf	243,w,c
  5717  000ED8  2473               	addwf	(??_TeTeclat+2)^0,w,c
  5718  000EDA  2472               	addwf	(??_TeTeclat+1)^0,w,c
  5719  000EDC  2471               	addwf	??_TeTeclat^0,w,c
  5720  000EDE  6E2B               	movwf	TeTeclat@files^0,c
  5721                           
  5722                           ;TeTeclat.c: 27:  switch(state) {
  5723  000EE0  D06F               	goto	l6728
  5724  000EE2                     l6654:
  5725                           
  5726                           ;TeTeclat.c: 29:    if (files==0) {
  5727  000EE2  502B               	movf	TeTeclat@files^0,w,c
  5728  000EE4  A4D8               	btfss	status,2,c
  5729  000EE6  D007               	goto	l6662
  5730                           
  5731                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  5732  000EE8  888C               	bsf	140,4,c	;volatile
  5733                           
  5734                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  5735  000EEA  9A8C               	bcf	140,5,c	;volatile
  5736                           
  5737                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  5738  000EEC  9C8C               	bcf	140,6,c	;volatile
  5739                           
  5740                           ;TeTeclat.c: 33:     cols=0;
  5741  000EEE  0E00               	movlw	0
  5742  000EF0  6E2C               	movwf	TeTeclat@cols^0,c
  5743  000EF2                     l6660:
  5744                           
  5745                           ;TeTeclat.c: 34:     state++;
  5746  000EF2  2A2D               	incf	TeTeclat@state^0,f,c
  5747                           
  5748                           ;TeTeclat.c: 35:    }
  5749  000EF4  0012               	return	
  5750  000EF6                     l6662:
  5751  000EF6  502B               	movf	TeTeclat@files^0,w,c
  5752  000EF8  B4D8               	btfsc	status,2,c
  5753  000EFA  0012               	return	
  5754                           
  5755                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  5756  000EFC  502E               	movf	_tiTeclat^0,w,c
  5757  000EFE  ECF7  F00D         	call	_TiResetTics
  5758  000F02                     l6666:
  5759                           
  5760                           ;TeTeclat.c: 38:     state = 3;
  5761  000F02  0E03               	movlw	3
  5762  000F04  6E2D               	movwf	TeTeclat@state^0,c
  5763  000F06  0012               	return	
  5764  000F08                     l6668:
  5765                           
  5766                           ;TeTeclat.c: 42:    if (files==0) {
  5767  000F08  502B               	movf	TeTeclat@files^0,w,c
  5768  000F0A  A4D8               	btfss	status,2,c
  5769  000F0C  D005               	goto	l6676
  5770                           
  5771                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  5772  000F0E  988C               	bcf	140,4,c	;volatile
  5773                           
  5774                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  5775  000F10  8A8C               	bsf	140,5,c	;volatile
  5776                           
  5777                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  5778  000F12  9C8C               	bcf	140,6,c	;volatile
  5779                           
  5780                           ;TeTeclat.c: 46:     cols=1;
  5781  000F14  0E01               	movlw	1
  5782  000F16  D7EC               	goto	L2
  5783  000F18                     l6676:
  5784  000F18  502B               	movf	TeTeclat@files^0,w,c
  5785  000F1A  B4D8               	btfsc	status,2,c
  5786  000F1C  0012               	return	
  5787                           
  5788                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  5789  000F1E  502E               	movf	_tiTeclat^0,w,c
  5790  000F20  ECF7  F00D         	call	_TiResetTics
  5791  000F24  D7EE               	goto	l6666
  5792  000F26                     l6682:
  5793                           
  5794                           ;TeTeclat.c: 55:    if (files==0) {
  5795  000F26  502B               	movf	TeTeclat@files^0,w,c
  5796  000F28  A4D8               	btfss	status,2,c
  5797  000F2A  D008               	goto	l6688
  5798                           
  5799                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  5800  000F2C  988C               	bcf	140,4,c	;volatile
  5801                           
  5802                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  5803  000F2E  9A8C               	bcf	140,5,c	;volatile
  5804                           
  5805                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  5806  000F30  8C8C               	bsf	140,6,c	;volatile
  5807                           
  5808                           ;TeTeclat.c: 59:     cols=2;
  5809  000F32  0E02               	movlw	2
  5810  000F34  6E2C               	movwf	TeTeclat@cols^0,c
  5811                           
  5812                           ;TeTeclat.c: 60:     state = 0;
  5813  000F36  0E00               	movlw	0
  5814  000F38  6E2D               	movwf	TeTeclat@state^0,c
  5815                           
  5816                           ;TeTeclat.c: 61:    }
  5817  000F3A  0012               	return	
  5818  000F3C                     l6688:
  5819  000F3C  502B               	movf	TeTeclat@files^0,w,c
  5820  000F3E  B4D8               	btfsc	status,2,c
  5821  000F40  0012               	return	
  5822                           
  5823                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  5824  000F42  502E               	movf	_tiTeclat^0,w,c
  5825  000F44  ECF7  F00D         	call	_TiResetTics
  5826  000F48  D7D4               	goto	l6660
  5827  000F4A                     l6694:
  5828                           
  5829                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  5830  000F4A  502E               	movf	_tiTeclat^0,w,c
  5831  000F4C  EC7A  F00D         	call	_TiGetTics
  5832  000F50  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  5833  000F52  0012               	return	
  5834  000F54  D7CE               	goto	l6660
  5835  000F56                     l6698:
  5836                           
  5837                           ;TeTeclat.c: 73:    if (files==0) {
  5838  000F56  502B               	movf	TeTeclat@files^0,w,c
  5839  000F58  A4D8               	btfss	status,2,c
  5840  000F5A  D003               	goto	l6702
  5841                           
  5842                           ;TeTeclat.c: 74:     state = 1;
  5843  000F5C  0E01               	movlw	1
  5844  000F5E  6E2D               	movwf	TeTeclat@state^0,c
  5845                           
  5846                           ;TeTeclat.c: 75:    }
  5847  000F60  0012               	return	
  5848  000F62                     l6702:
  5849  000F62  502B               	movf	TeTeclat@files^0,w,c
  5850  000F64  B4D8               	btfsc	status,2,c
  5851  000F66  0012               	return	
  5852                           
  5853                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  5854  000F68  502B               	movf	TeTeclat@files^0,w,c
  5855  000F6A  0D03               	mullw	3
  5856  000F6C  50F3               	movf	243,w,c
  5857  000F6E  0F9E               	addlw	low (_teclaPremuda+253)
  5858  000F70  242C               	addwf	TeTeclat@cols^0,w,c
  5859  000F72  6ED9               	movwf	fsr2l,c
  5860  000F74  6ADA               	clrf	fsr2h,c
  5861  000F76  50DF               	movf	indf2,w,c
  5862  000F78  EC7D  F00E         	call	_MsetNovaTecla
  5863                           
  5864                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  5865  000F7C  502B               	movf	TeTeclat@files^0,w,c
  5866  000F7E  0D03               	mullw	3
  5867  000F80  50F3               	movf	243,w,c
  5868  000F82  0F9E               	addlw	low (_teclaPremuda+253)
  5869  000F84  242C               	addwf	TeTeclat@cols^0,w,c
  5870  000F86  6ED9               	movwf	fsr2l,c
  5871  000F88  6ADA               	clrf	fsr2h,c
  5872  000F8A  50DF               	movf	indf2,w,c
  5873  000F8C  EC79  F00E         	call	_SsetNovaTecla
  5874  000F90  D7B0               	goto	l6660
  5875  000F92                     l6708:
  5876                           
  5877                           ;TeTeclat.c: 84:    if (files==0) {
  5878  000F92  502B               	movf	TeTeclat@files^0,w,c
  5879  000F94  A4D8               	btfss	status,2,c
  5880  000F96  0012               	return	
  5881                           
  5882                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  5883  000F98  502E               	movf	_tiTeclat^0,w,c
  5884  000F9A  ECF7  F00D         	call	_TiResetTics
  5885  000F9E  D7A9               	goto	l6660
  5886  000FA0                     l6714:
  5887                           
  5888                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  5889  000FA0  502E               	movf	_tiTeclat^0,w,c
  5890  000FA2  EC7A  F00D         	call	_TiGetTics
  5891  000FA6  D7D4               	goto	L3
  5892  000FA8                     l6718:
  5893                           
  5894                           ;TeTeclat.c: 95:    if (files!=0) {
  5895  000FA8  502B               	movf	TeTeclat@files^0,w,c
  5896  000FAA  B4D8               	btfsc	status,2,c
  5897  000FAC  D003               	goto	l6722
  5898                           
  5899                           ;TeTeclat.c: 96:     state = 5;
  5900  000FAE  0E05               	movlw	5
  5901  000FB0  6E2D               	movwf	TeTeclat@state^0,c
  5902                           
  5903                           ;TeTeclat.c: 97:    }
  5904  000FB2  0012               	return	
  5905  000FB4                     l6722:
  5906  000FB4  502B               	movf	TeTeclat@files^0,w,c
  5907  000FB6  A4D8               	btfss	status,2,c
  5908  000FB8  0012               	return	
  5909                           
  5910                           ;TeTeclat.c: 99:     state = 0;
  5911  000FBA  0E00               	movlw	0
  5912  000FBC  6E2D               	movwf	TeTeclat@state^0,c
  5913  000FBE  0012               	return	
  5914  000FC0                     l6728:
  5915  000FC0  502D               	movf	TeTeclat@state^0,w,c
  5916  000FC2  6E71               	movwf	??_TeTeclat^0,c
  5917  000FC4  6A72               	clrf	(??_TeTeclat+1)^0,c
  5918                           
  5919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5920                           ; Switch size 1, requested type "simple"
  5921                           ; Number of cases is 1, Range of values is 0 to 0
  5922                           ; switch strategies available:
  5923                           ; Name         Instructions Cycles
  5924                           ; simple_byte            4     3 (average)
  5925                           ;	Chosen strategy is simple_byte
  5926  000FC6  5072               	movf	(??_TeTeclat+1)^0,w,c
  5927  000FC8  0A00               	xorlw	0	; case 0
  5928  000FCA  A4D8               	btfss	status,2,c
  5929  000FCC  0012               	return	
  5930                           
  5931                           ; Switch size 1, requested type "simple"
  5932                           ; Number of cases is 8, Range of values is 0 to 7
  5933                           ; switch strategies available:
  5934                           ; Name         Instructions Cycles
  5935                           ; simple_byte           25    13 (average)
  5936                           ;	Chosen strategy is simple_byte
  5937  000FCE  5071               	movf	??_TeTeclat^0,w,c
  5938  000FD0  0A00               	xorlw	0	; case 0
  5939  000FD2  B4D8               	btfsc	status,2,c
  5940  000FD4  D786               	goto	l6654
  5941  000FD6  0A01               	xorlw	1	; case 1
  5942  000FD8  B4D8               	btfsc	status,2,c
  5943  000FDA  D796               	goto	l6668
  5944  000FDC  0A03               	xorlw	3	; case 2
  5945  000FDE  B4D8               	btfsc	status,2,c
  5946  000FE0  D7A2               	goto	l6682
  5947  000FE2  0A01               	xorlw	1	; case 3
  5948  000FE4  B4D8               	btfsc	status,2,c
  5949  000FE6  D7B1               	goto	l6694
  5950  000FE8  0A07               	xorlw	7	; case 4
  5951  000FEA  B4D8               	btfsc	status,2,c
  5952  000FEC  D7B4               	goto	l6698
  5953  000FEE  0A01               	xorlw	1	; case 5
  5954  000FF0  B4D8               	btfsc	status,2,c
  5955  000FF2  D7CF               	goto	l6708
  5956  000FF4  0A03               	xorlw	3	; case 6
  5957  000FF6  B4D8               	btfsc	status,2,c
  5958  000FF8  D7D3               	goto	l6714
  5959  000FFA  0A01               	xorlw	1	; case 7
  5960  000FFC  A4D8               	btfss	status,2,c
  5961  000FFE  0012               	return	
  5962  001000  D7D3               	goto	l6718
  5963  001002                     __end_of_TeTeclat:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function _SsetNovaTecla *****************
  5967 ;; Defined at:
  5968 ;;		line 126 in file "Ssms.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  tecla           1    wreg     unsigned char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  tecla           1    5[COMRAM] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/1
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1
  5982 ;;      Params:         0       0       0
  5983 ;;      Locals:         1       0       0
  5984 ;;      Temps:          0       0       0
  5985 ;;      Totals:         1       0       0
  5986 ;;Total ram usage:        1 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 2
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_TeTeclat
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text48
  5997  001CF2                     __ptext48:
  5998                           	callstack 0
  5999  001CF2                     _SsetNovaTecla:
  6000                           	callstack 27
  6001                           
  6002                           ;incstack = 0
  6003                           ;SsetNovaTecla@tecla stored from wreg
  6004  001CF2  6E6A               	movwf	SsetNovaTecla@tecla^0,c
  6005                           
  6006                           ;Ssms.c: 127:     novaTecla = tecla;
  6007  001CF4  C06A  F05D         	movff	SsetNovaTecla@tecla,_novaTecla
  6008  001CF8  0012               	return		;funcret
  6009  001CFA                     __end_of_SsetNovaTecla:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _MsetNovaTecla *****************
  6013 ;; Defined at:
  6014 ;;		line 28 in file "Menu.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  tecla           1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  tecla           1    5[COMRAM] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/1
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1
  6028 ;;      Params:         0       0       0
  6029 ;;      Locals:         1       0       0
  6030 ;;      Temps:          0       0       0
  6031 ;;      Totals:         1       0       0
  6032 ;;Total ram usage:        1 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; Hardware stack levels required when called: 2
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_TeTeclat
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text49
  6043  001CFA                     __ptext49:
  6044                           	callstack 0
  6045  001CFA                     _MsetNovaTecla:
  6046                           	callstack 27
  6047                           
  6048                           ;incstack = 0
  6049                           ;MsetNovaTecla@tecla stored from wreg
  6050  001CFA  6E6A               	movwf	MsetNovaTecla@tecla^0,c
  6051                           
  6052                           ;Menu.c: 29:     NovaTecla = tecla;
  6053  001CFC  C06A  F05A         	movff	MsetNovaTecla@tecla,_NovaTecla
  6054  001D00  0012               	return		;funcret
  6055  001D02                     __end_of_MsetNovaTecla:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function _TeInit *****************
  6059 ;; Defined at:
  6060 ;;		line 18 in file "TeTeclat.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;		None
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1
  6074 ;;      Params:         0       0       0
  6075 ;;      Locals:         0       0       0
  6076 ;;      Temps:          0       0       0
  6077 ;;      Totals:         0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 3
  6081 ;; This function calls:
  6082 ;;		_TiGetTimer
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text50
  6089  001D02                     __ptext50:
  6090                           	callstack 0
  6091  001D02                     _TeInit:
  6092                           	callstack 27
  6093                           
  6094                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  6095                           
  6096                           ;incstack = 0
  6097  001D02  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6098  001D06  6E2E               	movwf	_tiTeclat^0,c
  6099  001D08  0012               	return		;funcret
  6100  001D0A                     __end_of_TeInit:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function _Sinit *****************
  6104 ;; Defined at:
  6105 ;;		line 18 in file "Ssms.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1
  6119 ;;      Params:         0       0       0
  6120 ;;      Locals:         0       0       0
  6121 ;;      Temps:          0       0       0
  6122 ;;      Totals:         0       0       0
  6123 ;;Total ram usage:        0 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 3
  6126 ;; This function calls:
  6127 ;;		_TiGetTimer
  6128 ;; This function is called by:
  6129 ;;		_main
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text51
  6134  001D0A                     __ptext51:
  6135                           	callstack 0
  6136  001D0A                     _Sinit:
  6137                           	callstack 27
  6138                           
  6139                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6140                           
  6141                           ;incstack = 0
  6142  001D0A  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6143  001D0E  6E5C               	movwf	_timerSMS^0,c
  6144  001D10  0012               	return		;funcret
  6145  001D12                     __end_of_Sinit:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _SMotor *****************
  6149 ;; Defined at:
  6150 ;;		line 22 in file "Ssms.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      void 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1
  6164 ;;      Params:         0       0       0
  6165 ;;      Locals:         0       0       0
  6166 ;;      Temps:          2       0       0
  6167 ;;      Totals:         2       0       0
  6168 ;;Total ram usage:        2 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; Hardware stack levels required when called: 3
  6171 ;; This function calls:
  6172 ;;		_MNovaLletra
  6173 ;;		_TiGetTics
  6174 ;;		_TiResetTics
  6175 ;; This function is called by:
  6176 ;;		_main
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text52
  6181  000B28                     __ptext52:
  6182                           	callstack 0
  6183  000B28                     _SMotor:
  6184                           	callstack 27
  6185                           
  6186                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6187                           
  6188                           ;incstack = 0
  6189  000B28  D0DF               	goto	l5904
  6190  000B2A                     l5748:
  6191                           
  6192                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6193  000B2A  285D               	incf	_novaTecla^0,w,c
  6194  000B2C  A4D8               	btfss	status,2,c
  6195  000B2E  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6196  000B30  D006               	goto	l5756
  6197                           
  6198                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6199  000B32  505C               	movf	_timerSMS^0,w,c
  6200  000B34  ECF7  F00D         	call	_TiResetTics
  6201                           
  6202                           ;Ssms.c: 29:     state = 3;
  6203  000B38  0E03               	movlw	3
  6204  000B3A  6E2F               	movwf	SMotor@state^0,c
  6205                           
  6206                           ;Ssms.c: 30:    }
  6207  000B3C  0012               	return	
  6208  000B3E                     l5756:
  6209  000B3E  285D               	incf	_novaTecla^0,w,c
  6210  000B40  A4D8               	btfss	status,2,c
  6211  000B42  0012               	return	
  6212  000B44  505C               	movf	_timerSMS^0,w,c
  6213  000B46  EC7A  F00D         	call	_TiGetTics
  6214  000B4A  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6215  000B4C  0012               	return	
  6216  000B4E  0E5A               	movlw	90
  6217  000B50  5C6A               	subwf	?_TiGetTics^0,w,c
  6218  000B52  0E02               	movlw	2
  6219  000B54  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6220  000B56  A0D8               	btfss	status,0,c
  6221  000B58  0012               	return	
  6222  000B5A  285E               	incf	_lletraASCII^0,w,c
  6223  000B5C  B4D8               	btfsc	status,2,c
  6224  000B5E  0012               	return	
  6225  000B60  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6226  000B62  0012               	return	
  6227                           
  6228                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6229  000B64  505E               	movf	_lletraASCII^0,w,c
  6230  000B66  EC89  F00E         	call	_MNovaLletra
  6231                           
  6232                           ;Ssms.c: 33:     lletraASCII = -1;
  6233  000B6A  685E               	setf	_lletraASCII^0,c
  6234                           
  6235                           ;Ssms.c: 34:     ultimaTecla = -1;
  6236  000B6C  685B               	setf	_ultimaTecla^0,c
  6237                           
  6238                           ;Ssms.c: 35:     zeroTecla = 0;
  6239  000B6E  0E00               	movlw	0
  6240  000B70  6E30               	movwf	_zeroTecla^0,c
  6241  000B72                     l5772:
  6242                           
  6243                           ;Ssms.c: 36:     state = 0;
  6244  000B72  0E00               	movlw	0
  6245  000B74  6E2F               	movwf	SMotor@state^0,c
  6246  000B76  0012               	return	
  6247  000B78                     l5774:
  6248                           
  6249                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6250  000B78  505B               	movf	_ultimaTecla^0,w,c
  6251  000B7A  185D               	xorwf	_novaTecla^0,w,c
  6252  000B7C  A4D8               	btfss	status,2,c
  6253  000B7E  D011               	goto	l5784
  6254  000B80  505C               	movf	_timerSMS^0,w,c
  6255  000B82  EC7A  F00D         	call	_TiGetTics
  6256  000B86  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6257  000B88  D006               	goto	u5520
  6258  000B8A  0E5A               	movlw	90
  6259  000B8C  5C6A               	subwf	?_TiGetTics^0,w,c
  6260  000B8E  0E02               	movlw	2
  6261  000B90  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6262  000B92  B0D8               	btfsc	status,0,c
  6263  000B94  D006               	goto	l5784
  6264  000B96                     u5520:
  6265                           
  6266                           ;Ssms.c: 41:     novaTecla = -1;
  6267  000B96  685D               	setf	_novaTecla^0,c
  6268                           
  6269                           ;Ssms.c: 42:     sumaPulsacions++;
  6270  000B98  2A31               	incf	_sumaPulsacions^0,f,c
  6271                           
  6272                           ;Ssms.c: 43:     lletraASCII++;
  6273  000B9A  2A5E               	incf	_lletraASCII^0,f,c
  6274                           
  6275                           ;Ssms.c: 44:     state = 2;
  6276  000B9C  0E02               	movlw	2
  6277  000B9E  6E2F               	movwf	SMotor@state^0,c
  6278                           
  6279                           ;Ssms.c: 45:    }
  6280  000BA0  0012               	return	
  6281  000BA2                     l5784:
  6282  000BA2  285D               	incf	_novaTecla^0,w,c
  6283  000BA4  B4D8               	btfsc	status,2,c
  6284  000BA6  0012               	return	
  6285  000BA8  505B               	movf	_ultimaTecla^0,w,c
  6286  000BAA  185D               	xorwf	_novaTecla^0,w,c
  6287  000BAC  B4D8               	btfsc	status,2,c
  6288  000BAE  0012               	return	
  6289                           
  6290                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6291  000BB0  505E               	movf	_lletraASCII^0,w,c
  6292  000BB2  EC89  F00E         	call	_MNovaLletra
  6293                           
  6294                           ;Ssms.c: 48:     if(novaTecla != 0){
  6295  000BB6  505D               	movf	_novaTecla^0,w,c
  6296  000BB8  B4D8               	btfsc	status,2,c
  6297  000BBA  D006               	goto	l5796
  6298                           
  6299                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6300  000BBC  505D               	movf	_novaTecla^0,w,c
  6301  000BBE  0F42               	addlw	low (_lletraInici+254)
  6302  000BC0  6ED9               	movwf	fsr2l,c
  6303  000BC2  6ADA               	clrf	fsr2h,c
  6304  000BC4  50DF               	movf	indf2,w,c
  6305  000BC6  D001               	goto	L10
  6306  000BC8                     l5796:
  6307                           
  6308                           ;Ssms.c: 52:       lletraASCII = '0';
  6309  000BC8  0E30               	movlw	48
  6310  000BCA                     L10:
  6311  000BCA  6E5E               	movwf	_lletraASCII^0,c
  6312                           
  6313                           ;Ssms.c: 53:       zeroTecla=0;
  6314  000BCC  0E00               	movlw	0
  6315  000BCE  6E30               	movwf	_zeroTecla^0,c
  6316                           
  6317                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6318  000BD0  C05D  F05B         	movff	_novaTecla,_ultimaTecla
  6319                           
  6320                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6321  000BD4  0E00               	movlw	0
  6322  000BD6  6E31               	movwf	_sumaPulsacions^0,c
  6323                           
  6324                           ;Ssms.c: 57:     novaTecla = -1;
  6325  000BD8  685D               	setf	_novaTecla^0,c
  6326                           
  6327                           ;Ssms.c: 58:     state = 0;
  6328  000BDA  0E00               	movlw	0
  6329  000BDC  6E2F               	movwf	SMotor@state^0,c
  6330  000BDE  0012               	return	
  6331  000BE0                     l5802:
  6332                           
  6333                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6334  000BE0  0E07               	movlw	7
  6335  000BE2  185B               	xorwf	_ultimaTecla^0,w,c
  6336  000BE4  B4D8               	btfsc	status,2,c
  6337  000BE6  D00A               	goto	l5810
  6338  000BE8  0E09               	movlw	9
  6339  000BEA  185B               	xorwf	_ultimaTecla^0,w,c
  6340  000BEC  B4D8               	btfsc	status,2,c
  6341  000BEE  D006               	goto	l5810
  6342  000BF0  505B               	movf	_ultimaTecla^0,w,c
  6343  000BF2  B4D8               	btfsc	status,2,c
  6344  000BF4  D003               	goto	l5810
  6345                           
  6346                           ;Ssms.c: 63:     state = 5;
  6347  000BF6  0E05               	movlw	5
  6348  000BF8  6E2F               	movwf	SMotor@state^0,c
  6349                           
  6350                           ;Ssms.c: 64:    }
  6351  000BFA  0012               	return	
  6352  000BFC                     l5810:
  6353  000BFC  0E07               	movlw	7
  6354  000BFE  185B               	xorwf	_ultimaTecla^0,w,c
  6355  000C00  B4D8               	btfsc	status,2,c
  6356  000C02  D004               	goto	u5600
  6357  000C04  0E09               	movlw	9
  6358  000C06  185B               	xorwf	_ultimaTecla^0,w,c
  6359  000C08  A4D8               	btfss	status,2,c
  6360  000C0A  D003               	goto	l5816
  6361  000C0C                     u5600:
  6362                           
  6363                           ;Ssms.c: 66:     state = 6;
  6364  000C0C  0E06               	movlw	6
  6365  000C0E  6E2F               	movwf	SMotor@state^0,c
  6366                           
  6367                           ;Ssms.c: 67:    }
  6368  000C10  0012               	return	
  6369  000C12                     l5816:
  6370  000C12  505B               	movf	_ultimaTecla^0,w,c
  6371  000C14  A4D8               	btfss	status,2,c
  6372  000C16  0012               	return	
  6373                           
  6374                           ;Ssms.c: 69:     zeroTecla++;
  6375  000C18  2A30               	incf	_zeroTecla^0,f,c
  6376                           
  6377                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6378  000C1A  0E02               	movlw	2
  6379  000C1C  1830               	xorwf	_zeroTecla^0,w,c
  6380  000C1E  A4D8               	btfss	status,2,c
  6381  000C20  D002               	goto	l5824
  6382  000C22  0E00               	movlw	0
  6383  000C24  6E30               	movwf	_zeroTecla^0,c
  6384  000C26                     l5824:
  6385                           
  6386                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  6387  000C26  5030               	movf	_zeroTecla^0,w,c
  6388  000C28  0F4D               	addlw	low _arrayZero
  6389  000C2A  6ED9               	movwf	fsr2l,c
  6390  000C2C  6ADA               	clrf	fsr2h,c
  6391  000C2E  50DF               	movf	indf2,w,c
  6392  000C30  D04B               	goto	L5
  6393  000C32                     l5828:
  6394                           
  6395                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  6396  000C32  505D               	movf	_novaTecla^0,w,c
  6397  000C34  0A80               	xorlw	128
  6398  000C36  0F7E               	addlw	-130
  6399  000C38  B0D8               	btfsc	status,0,c
  6400  000C3A  D003               	goto	u5640
  6401  000C3C  505D               	movf	_novaTecla^0,w,c
  6402  000C3E  A4D8               	btfss	status,2,c
  6403  000C40  D008               	goto	l5836
  6404  000C42                     u5640:
  6405  000C42  505D               	movf	_novaTecla^0,w,c
  6406  000C44  0A80               	xorlw	128
  6407  000C46  0F76               	addlw	-138
  6408  000C48  B0D8               	btfsc	status,0,c
  6409  000C4A  D003               	goto	l5836
  6410                           
  6411                           ;Ssms.c: 77:     state = 1;
  6412  000C4C  0E01               	movlw	1
  6413  000C4E  6E2F               	movwf	SMotor@state^0,c
  6414                           
  6415                           ;Ssms.c: 78:    }
  6416  000C50  0012               	return	
  6417  000C52                     l5836:
  6418  000C52  505D               	movf	_novaTecla^0,w,c
  6419  000C54  B4D8               	btfsc	status,2,c
  6420  000C56  D00E               	goto	l5848
  6421  000C58  505D               	movf	_novaTecla^0,w,c
  6422  000C5A  0A80               	xorlw	128
  6423  000C5C  0F7E               	addlw	-130
  6424  000C5E  B0D8               	btfsc	status,0,c
  6425  000C60  D009               	goto	l5848
  6426  000C62  285E               	incf	_lletraASCII^0,w,c
  6427  000C64  A4D8               	btfss	status,2,c
  6428  000C66  D006               	goto	l5848
  6429                           
  6430                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  6431  000C68  505D               	movf	_novaTecla^0,w,c
  6432  000C6A  0F30               	addlw	48
  6433  000C6C  EC89  F00E         	call	_MNovaLletra
  6434  000C70                     l5844:
  6435                           
  6436                           ;Ssms.c: 81:     novaTecla = -1;
  6437  000C70  685D               	setf	_novaTecla^0,c
  6438  000C72  D77F               	goto	l5772
  6439  000C74                     l5848:
  6440  000C74  505D               	movf	_novaTecla^0,w,c
  6441  000C76  B4D8               	btfsc	status,2,c
  6442  000C78  0012               	return	
  6443  000C7A  505D               	movf	_novaTecla^0,w,c
  6444  000C7C  0A80               	xorlw	128
  6445  000C7E  0F7E               	addlw	-130
  6446  000C80  B0D8               	btfsc	status,0,c
  6447  000C82  0012               	return	
  6448  000C84  285E               	incf	_lletraASCII^0,w,c
  6449  000C86  B4D8               	btfsc	status,2,c
  6450  000C88  0012               	return	
  6451                           
  6452                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  6453  000C8A  505E               	movf	_lletraASCII^0,w,c
  6454  000C8C  EC89  F00E         	call	_MNovaLletra
  6455                           
  6456                           ;Ssms.c: 86:     lletraASCII = -1;
  6457  000C90  685E               	setf	_lletraASCII^0,c
  6458                           
  6459                           ;Ssms.c: 87:     state = 4;
  6460  000C92  0E04               	movlw	4
  6461  000C94  6E2F               	movwf	SMotor@state^0,c
  6462  000C96  0012               	return	
  6463  000C98                     l5860:
  6464                           
  6465                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  6466  000C98  505D               	movf	_novaTecla^0,w,c
  6467  000C9A  0F30               	addlw	48
  6468  000C9C  EC89  F00E         	call	_MNovaLletra
  6469  000CA0  D7E7               	goto	l5844
  6470  000CA2                     l5866:
  6471                           
  6472                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  6473  000CA2  0E04               	movlw	4
  6474  000CA4  1831               	xorwf	_sumaPulsacions^0,w,c
  6475  000CA6  A4D8               	btfss	status,2,c
  6476  000CA8  D009               	goto	l5874
  6477  000CAA                     u5720:
  6478                           
  6479                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  6480  000CAA  505B               	movf	_ultimaTecla^0,w,c
  6481  000CAC  0F42               	addlw	low (_lletraInici+254)
  6482  000CAE  6ED9               	movwf	fsr2l,c
  6483  000CB0  6ADA               	clrf	fsr2h,c
  6484  000CB2  50DF               	movf	indf2,w,c
  6485  000CB4  6E5E               	movwf	_lletraASCII^0,c
  6486                           
  6487                           ;Ssms.c: 98:     sumaPulsacions = 0;
  6488  000CB6  0E00               	movlw	0
  6489  000CB8  6E31               	movwf	_sumaPulsacions^0,c
  6490  000CBA  D75B               	goto	l5772
  6491  000CBC                     l5874:
  6492  000CBC  0E03               	movlw	3
  6493  000CBE  1831               	xorwf	_sumaPulsacions^0,w,c
  6494  000CC0  A4D8               	btfss	status,2,c
  6495  000CC2  D004               	goto	l5880
  6496  000CC4                     u5730:
  6497                           
  6498                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  6499  000CC4  505B               	movf	_ultimaTecla^0,w,c
  6500  000CC6  0F30               	addlw	48
  6501  000CC8                     L5:
  6502  000CC8  6E5E               	movwf	_lletraASCII^0,c
  6503  000CCA  D753               	goto	l5772
  6504  000CCC                     l5880:
  6505  000CCC  0E03               	movlw	3
  6506  000CCE  6031               	cpfslt	_sumaPulsacions^0,c
  6507  000CD0  0012               	return	
  6508  000CD2  D74F               	goto	l5772
  6509  000CD4                     l5884:
  6510                           
  6511                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  6512  000CD4  0E04               	movlw	4
  6513  000CD6  1831               	xorwf	_sumaPulsacions^0,w,c
  6514  000CD8  B4D8               	btfsc	status,2,c
  6515  000CDA  D7F4               	goto	u5730
  6516  000CDC  0E05               	movlw	5
  6517  000CDE  1831               	xorwf	_sumaPulsacions^0,w,c
  6518  000CE0  B4D8               	btfsc	status,2,c
  6519  000CE2  D7E3               	goto	u5720
  6520  000CE4  0E04               	movlw	4
  6521  000CE6  D7F3               	goto	L6
  6522  000CE8                     l5904:
  6523  000CE8  502F               	movf	SMotor@state^0,w,c
  6524  000CEA  6E71               	movwf	??_SMotor^0,c
  6525  000CEC  6A72               	clrf	(??_SMotor+1)^0,c
  6526                           
  6527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6528                           ; Switch size 1, requested type "simple"
  6529                           ; Number of cases is 1, Range of values is 0 to 0
  6530                           ; switch strategies available:
  6531                           ; Name         Instructions Cycles
  6532                           ; simple_byte            4     3 (average)
  6533                           ;	Chosen strategy is simple_byte
  6534  000CEE  5072               	movf	(??_SMotor+1)^0,w,c
  6535  000CF0  0A00               	xorlw	0	; case 0
  6536  000CF2  A4D8               	btfss	status,2,c
  6537  000CF4  0012               	return	
  6538                           
  6539                           ; Switch size 1, requested type "simple"
  6540                           ; Number of cases is 7, Range of values is 0 to 6
  6541                           ; switch strategies available:
  6542                           ; Name         Instructions Cycles
  6543                           ; simple_byte           22    12 (average)
  6544                           ;	Chosen strategy is simple_byte
  6545  000CF6  5071               	movf	??_SMotor^0,w,c
  6546  000CF8  0A00               	xorlw	0	; case 0
  6547  000CFA  B4D8               	btfsc	status,2,c
  6548  000CFC  D716               	goto	l5748
  6549  000CFE  0A01               	xorlw	1	; case 1
  6550  000D00  B4D8               	btfsc	status,2,c
  6551  000D02  D73A               	goto	l5774
  6552  000D04  0A03               	xorlw	3	; case 2
  6553  000D06  B4D8               	btfsc	status,2,c
  6554  000D08  D76B               	goto	l5802
  6555  000D0A  0A01               	xorlw	1	; case 3
  6556  000D0C  B4D8               	btfsc	status,2,c
  6557  000D0E  D791               	goto	l5828
  6558  000D10  0A07               	xorlw	7	; case 4
  6559  000D12  B4D8               	btfsc	status,2,c
  6560  000D14  D7C1               	goto	l5860
  6561  000D16  0A01               	xorlw	1	; case 5
  6562  000D18  B4D8               	btfsc	status,2,c
  6563  000D1A  D7C3               	goto	l5866
  6564  000D1C  0A03               	xorlw	3	; case 6
  6565  000D1E  A4D8               	btfss	status,2,c
  6566  000D20  0012               	return	
  6567  000D22  D7D8               	goto	l5884
  6568  000D24                     __end_of_SMotor:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _MNovaLletra *****************
  6572 ;; Defined at:
  6573 ;;		line 32 in file "Menu.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  lletra          1    wreg     unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  lletra          1    5[COMRAM] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1
  6587 ;;      Params:         0       0       0
  6588 ;;      Locals:         1       0       0
  6589 ;;      Temps:          0       0       0
  6590 ;;      Totals:         1       0       0
  6591 ;;Total ram usage:        1 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 2
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_SMotor
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text53
  6602  001D12                     __ptext53:
  6603                           	callstack 0
  6604  001D12                     _MNovaLletra:
  6605                           	callstack 27
  6606                           
  6607                           ;incstack = 0
  6608                           ;MNovaLletra@lletra stored from wreg
  6609  001D12  6E6A               	movwf	MNovaLletra@lletra^0,c
  6610                           
  6611                           ;Menu.c: 33:     novaLletra = lletra;
  6612  001D14  C06A  F059         	movff	MNovaLletra@lletra,_novaLletra
  6613  001D18  0012               	return		;funcret
  6614  001D1A                     __end_of_MNovaLletra:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _Minit *****************
  6618 ;; Defined at:
  6619 ;;		line 25 in file "Menu.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1
  6633 ;;      Params:         0       0       0
  6634 ;;      Locals:         0       0       0
  6635 ;;      Temps:          0       0       0
  6636 ;;      Totals:         0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 3
  6640 ;; This function calls:
  6641 ;;		_TiGetTimer
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text54
  6648  001D1A                     __ptext54:
  6649                           	callstack 0
  6650  001D1A                     _Minit:
  6651                           	callstack 27
  6652                           
  6653                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  6654                           
  6655                           ;incstack = 0
  6656  001D1A  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6657  001D1E  6E28               	movwf	_timerMenu^0,c
  6658  001D20  0012               	return		;funcret
  6659  001D22                     __end_of_Minit:
  6660                           	callstack 0
  6661                           
  6662 ;; *************** function _LcLCD *****************
  6663 ;; Defined at:
  6664 ;;		line 246 in file "LcTLCD.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      void 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/1
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1
  6678 ;;      Params:         0       0       0
  6679 ;;      Locals:         0       0       0
  6680 ;;      Temps:          0       0       0
  6681 ;;      Totals:         0       0       0
  6682 ;;Total ram usage:        0 bytes
  6683 ;; Hardware stack levels used: 1
  6684 ;; Hardware stack levels required when called: 6
  6685 ;; This function calls:
  6686 ;;		_LcPutChar
  6687 ;; This function is called by:
  6688 ;;		_main
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text55
  6693  00178A                     __ptext55:
  6694                           	callstack 0
  6695  00178A                     _LcLCD:
  6696                           	callstack 24
  6697                           
  6698                           ;LcTLCD.c: 247:     if(nou_s == 1){
  6699                           
  6700                           ;incstack = 0
  6701  00178A  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6702  00178C  0012               	return	
  6703                           
  6704                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  6705  00178E  C005  FFF6         	movff	_s_ptr,tblptrl
  6706  001792  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6707  001796  6AF8               	clrf	tblptru,c
  6708  001798  0E01               	movlw	(high __ramtop+-1)
  6709  00179A  64F7               	cpfsgt	tblptrh,c
  6710  00179C  D003               	bra	u5427
  6711  00179E  0008               	tblrd		*
  6712  0017A0  50F5               	movf	tablat,w,c
  6713  0017A2  D005               	bra	u5420
  6714  0017A4                     u5427:
  6715  0017A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  6716  0017A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  6717  0017AC  50E7               	movf	indf1,w,c
  6718  0017AE                     u5420:
  6719  0017AE  EC21  F00C         	call	_LcPutChar
  6720                           
  6721                           ;LcTLCD.c: 249:         s_ptr++;
  6722  0017B2  4A05               	infsnz	_s_ptr^0,f,c
  6723  0017B4  2A06               	incf	(_s_ptr+1)^0,f,c
  6724                           
  6725                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  6726  0017B6  C005  FFF6         	movff	_s_ptr,tblptrl
  6727  0017BA  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6728  0017BE  6AF8               	clrf	tblptru,c
  6729  0017C0  0E01               	movlw	(high __ramtop+-1)
  6730  0017C2  64F7               	cpfsgt	tblptrh,c
  6731  0017C4  D003               	bra	u5437
  6732  0017C6  0008               	tblrd		*
  6733  0017C8  50F5               	movf	tablat,w,c
  6734  0017CA  D005               	bra	u5430
  6735  0017CC                     u5437:
  6736  0017CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6737  0017D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6738  0017D4  50E7               	movf	indf1,w,c
  6739  0017D6                     u5430:
  6740  0017D6  0900               	iorlw	0
  6741  0017D8  A4D8               	btfss	status,2,c
  6742  0017DA  0012               	return	
  6743                           
  6744                           ;LcTLCD.c: 251:             nou_s = 0;
  6745  0017DC  9E79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6746                           
  6747                           ;LcTLCD.c: 252:             s_ptr=0;
  6748  0017DE  0E00               	movlw	0
  6749  0017E0  6E05               	movwf	_s_ptr^0,c
  6750  0017E2  0E00               	movlw	0
  6751  0017E4  6E06               	movwf	(_s_ptr+1)^0,c
  6752  0017E6  0012               	return		;funcret
  6753  0017E8                     __end_of_LcLCD:
  6754                           	callstack 0
  6755                           
  6756 ;; *************** function _LcInit *****************
  6757 ;; Defined at:
  6758 ;;		line 41 in file "LcTLCD.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  rows            1    wreg     unsigned char 
  6761 ;;  columns         1   16[COMRAM] unsigned char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  rows            1    0[BANK0 ] unsigned char 
  6764 ;;  i               2    1[BANK0 ] int 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1
  6774 ;;      Params:         1       0       0
  6775 ;;      Locals:         0       3       0
  6776 ;;      Temps:          0       0       0
  6777 ;;      Totals:         1       3       0
  6778 ;;Total ram usage:        4 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 4
  6781 ;; This function calls:
  6782 ;;		_CantaIR
  6783 ;;		_EscriuPrimeraOrdre
  6784 ;;		_Espera
  6785 ;;		_TiGetTimer
  6786 ;;		_WaitForBusy
  6787 ;; This function is called by:
  6788 ;;		_main
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text56
  6793  0010EC                     __ptext56:
  6794                           	callstack 0
  6795  0010EC                     _LcInit:
  6796                           	callstack 26
  6797                           
  6798                           ;incstack = 0
  6799                           ;LcInit@rows stored from wreg
  6800  0010EC  0100               	movlb	0	; () banked
  6801  0010EE  6FC0               	movwf	LcInit@rows& (0+255),b
  6802                           
  6803                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6804  0010F0  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6805  0010F4  6E32               	movwf	_Timer^0,c
  6806                           
  6807                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6808  0010F6  C0C0  F036         	movff	LcInit@rows,_Rows
  6809  0010FA  C075  F035         	movff	LcInit@columns,_Columns
  6810                           
  6811                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6812  0010FE  0E00               	movlw	0
  6813  001100  6E33               	movwf	_ColumnAct^0,c
  6814  001102  C033  F034         	movff	_ColumnAct,_RowAct
  6815                           
  6816                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6817  001106  9894               	bcf	148,4,c	;volatile
  6818  001108  9E95               	bcf	149,7,c	;volatile
  6819  00110A  9A94               	bcf	148,5,c	;volatile
  6820                           
  6821                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6822  00110C  0E00               	movlw	0
  6823  00110E  0100               	movlb	0	; () banked
  6824  001110  6FC2               	movwf	(LcInit@i+1)& (0+255),b
  6825  001112  0E00               	movlw	0
  6826  001114  6FC1               	movwf	LcInit@i& (0+255),b
  6827  001116                     l5694:
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  6831  001116  0E00               	movlw	0
  6832  001118  6E72               	movwf	(Espera@ms+1)^0,c
  6833  00111A  0E64               	movlw	100
  6834  00111C  6E71               	movwf	Espera@ms^0,c
  6835  00111E  5032               	movf	_Timer^0,w,c
  6836  001120  ECB4  F00D         	call	_Espera
  6837                           
  6838                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6839  001124  0E03               	movlw	3
  6840  001126  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6841                           
  6842                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  6843  00112A  0E00               	movlw	0
  6844  00112C  6E72               	movwf	(Espera@ms+1)^0,c
  6845  00112E  0E05               	movlw	5
  6846  001130  6E71               	movwf	Espera@ms^0,c
  6847  001132  5032               	movf	_Timer^0,w,c
  6848  001134  ECB4  F00D         	call	_Espera
  6849                           
  6850                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6851  001138  0E03               	movlw	3
  6852  00113A  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6853                           
  6854                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  6855  00113E  0E00               	movlw	0
  6856  001140  6E72               	movwf	(Espera@ms+1)^0,c
  6857  001142  0E01               	movlw	1
  6858  001144  6E71               	movwf	Espera@ms^0,c
  6859  001146  5032               	movf	_Timer^0,w,c
  6860  001148  ECB4  F00D         	call	_Espera
  6861                           
  6862                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6863  00114C  0E03               	movlw	3
  6864  00114E  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6865                           
  6866                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  6867  001152  0E00               	movlw	0
  6868  001154  6E72               	movwf	(Espera@ms+1)^0,c
  6869  001156  0E01               	movlw	1
  6870  001158  6E71               	movwf	Espera@ms^0,c
  6871  00115A  5032               	movf	_Timer^0,w,c
  6872  00115C  ECB4  F00D         	call	_Espera
  6873                           
  6874                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6875  001160  0E02               	movlw	2
  6876  001162  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6877                           
  6878                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  6879  001166  0E00               	movlw	0
  6880  001168  6E72               	movwf	(Espera@ms+1)^0,c
  6881  00116A  0E04               	movlw	4
  6882  00116C  6E71               	movwf	Espera@ms^0,c
  6883  00116E  5032               	movf	_Timer^0,w,c
  6884  001170  ECB4  F00D         	call	_Espera
  6885                           
  6886                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6887  001174  0E28               	movlw	40
  6888  001176  EC34  F00D         	call	_CantaIR
  6889                           
  6890                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6891  00117A  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6892  00117E  0E08               	movlw	8
  6893  001180  EC34  F00D         	call	_CantaIR
  6894                           
  6895                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6896  001184  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6897  001188  0E01               	movlw	1
  6898  00118A  EC34  F00D         	call	_CantaIR
  6899                           
  6900                           ;LcTLCD.c: 71:   Espera(Timer,3);
  6901  00118E  0E00               	movlw	0
  6902  001190  6E72               	movwf	(Espera@ms+1)^0,c
  6903  001192  0E03               	movlw	3
  6904  001194  6E71               	movwf	Espera@ms^0,c
  6905  001196  5032               	movf	_Timer^0,w,c
  6906  001198  ECB4  F00D         	call	_Espera
  6907                           
  6908                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6909  00119C  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6910  0011A0  0E06               	movlw	6
  6911  0011A2  EC34  F00D         	call	_CantaIR
  6912                           
  6913                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6914  0011A6  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6915  0011AA  0E0F               	movlw	15
  6916  0011AC  EC34  F00D         	call	_CantaIR
  6917                           
  6918                           ;LcTLCD.c: 74:  }
  6919  0011B0  0100               	movlb	0	; () banked
  6920  0011B2  4BC1               	infsnz	LcInit@i& (0+255),f,b
  6921  0011B4  2BC2               	incf	(LcInit@i+1)& (0+255),f,b
  6922                           
  6923                           ; BSR set to: 0
  6924  0011B6  BFC2               	btfsc	(LcInit@i+1)& (0+255),7,b
  6925  0011B8  D7AE               	goto	l5694
  6926  0011BA  51C2               	movf	(LcInit@i+1)& (0+255),w,b
  6927  0011BC  E104               	bnz	u5400
  6928  0011BE  0E02               	movlw	2
  6929  0011C0  5DC1               	subwf	LcInit@i& (0+255),w,b
  6930  0011C2  A0D8               	btfss	status,0,c
  6931  0011C4  D7A8               	goto	l5694
  6932  0011C6                     u5400:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;LcTLCD.c: 80:     WaitForBusy();
  6936  0011C6  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6937                           
  6938                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  6939  0011CA  0E0C               	movlw	12
  6940  0011CC  EC34  F00D         	call	_CantaIR
  6941  0011D0  0012               	return		;funcret
  6942  0011D2                     __end_of_LcInit:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function _EscriuPrimeraOrdre *****************
  6946 ;; Defined at:
  6947 ;;		line 230 in file "LcTLCD.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  ordre           1    wreg     unsigned char 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  ordre           1    6[COMRAM] unsigned char 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1
  6961 ;;      Params:         0       0       0
  6962 ;;      Locals:         1       0       0
  6963 ;;      Temps:          1       0       0
  6964 ;;      Totals:         2       0       0
  6965 ;;Total ram usage:        2 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; Hardware stack levels required when called: 2
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_LcInit
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text57
  6976  00155A                     __ptext57:
  6977                           	callstack 0
  6978  00155A                     _EscriuPrimeraOrdre:
  6979                           	callstack 27
  6980                           
  6981                           ;incstack = 0
  6982                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6983  00155A  6E6B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6984                           
  6985                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6986  00155C  9694               	bcf	148,3,c	;volatile
  6987  00155E  9494               	bcf	148,2,c	;volatile
  6988  001560  9294               	bcf	148,1,c	;volatile
  6989  001562  9094               	bcf	148,0,c	;volatile
  6990  001564  9A8B               	bcf	139,5,c	;volatile
  6991  001566  9E8C               	bcf	140,7,c	;volatile
  6992                           
  6993                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6994  001568  888B               	bsf	139,4,c	;volatile
  6995  00156A  888B               	bsf	139,4,c	;volatile
  6996                           
  6997                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6998  00156C  A66B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6999  00156E  D003               	goto	u5270
  7000  001570  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7001  001572  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7002  001574  D001               	goto	u5288
  7003  001576                     u5270:
  7004  001576  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7005  001578                     u5288:
  7006  001578  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7007  00157A  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7008  00157C  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7009  00157E  508B               	movf	139,w,c	;volatile
  7010  001580  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7011  001582  0BF7               	andlw	-9
  7012  001584  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7013  001586  6E8B               	movwf	139,c	;volatile
  7014                           
  7015                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7016  001588  A46B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7017  00158A  D003               	goto	u5290
  7018  00158C  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7019  00158E  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7020  001590  D001               	goto	u5308
  7021  001592                     u5290:
  7022  001592  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7023  001594                     u5308:
  7024  001594  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7025  001596  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7026  001598  508B               	movf	139,w,c	;volatile
  7027  00159A  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7028  00159C  0BFB               	andlw	-5
  7029  00159E  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7030  0015A0  6E8B               	movwf	139,c	;volatile
  7031                           
  7032                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7033  0015A2  A26B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7034  0015A4  D003               	goto	u5310
  7035  0015A6  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7036  0015A8  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7037  0015AA  D001               	goto	u5328
  7038  0015AC                     u5310:
  7039  0015AC  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7040  0015AE                     u5328:
  7041  0015AE  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7042  0015B0  508B               	movf	139,w,c	;volatile
  7043  0015B2  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7044  0015B4  0BFD               	andlw	-3
  7045  0015B6  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7046  0015B8  6E8B               	movwf	139,c	;volatile
  7047                           
  7048                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7049  0015BA  A06B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7050  0015BC  D003               	goto	u5330
  7051  0015BE  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7052  0015C0  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7053  0015C2  D001               	goto	u5348
  7054  0015C4                     u5330:
  7055  0015C4  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7056  0015C6                     u5348:
  7057  0015C6  508B               	movf	139,w,c	;volatile
  7058  0015C8  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7059  0015CA  0BFE               	andlw	-2
  7060  0015CC  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7061  0015CE  6E8B               	movwf	139,c	;volatile
  7062                           
  7063                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7064  0015D0  988B               	bcf	139,4,c	;volatile
  7065  0015D2  0012               	return		;funcret
  7066  0015D4                     __end_of_EscriuPrimeraOrdre:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function _JoystickMotor *****************
  7070 ;; Defined at:
  7071 ;;		line 18 in file "Joystick.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/1
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1
  7085 ;;      Params:         0       0       0
  7086 ;;      Locals:         0       0       0
  7087 ;;      Temps:          2       0       0
  7088 ;;      Totals:         2       0       0
  7089 ;;Total ram usage:        2 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 3
  7092 ;; This function calls:
  7093 ;;		_MNouJoystick
  7094 ;; This function is called by:
  7095 ;;		_main
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text58
  7100  001002                     __ptext58:
  7101                           	callstack 0
  7102  001002                     _JoystickMotor:
  7103                           	callstack 27
  7104                           
  7105                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7106                           
  7107                           ;incstack = 0
  7108  001002  D05A               	goto	l2744
  7109  001004                     l889:
  7110                           
  7111                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7112  001004  B2C2               	btfsc	194,1,c	;volatile
  7113  001006  D00B               	goto	l890
  7114  001008  0EC8               	movlw	200
  7115  00100A  60C4               	cpfslt	196,c	;volatile
  7116  00100C  D008               	goto	l890
  7117  00100E  0E32               	movlw	50
  7118  001010  64C4               	cpfsgt	196,c	;volatile
  7119  001012  D005               	goto	l890
  7120                           
  7121                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7122  001014  0E07               	movlw	7
  7123  001016  6EC2               	movwf	194,c	;volatile
  7124                           
  7125                           ;Joystick.c: 24:                 cap1 = 1;
  7126  001018  8C78               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7127  00101A                     l2674:
  7128                           
  7129                           ;Joystick.c: 25:     state++;
  7130  00101A  2A0E               	incf	JoystickMotor@state^0,f,c
  7131                           
  7132                           ;Joystick.c: 26:    }
  7133  00101C  D05B               	goto	l897
  7134  00101E                     l890:
  7135  00101E  B2C2               	btfsc	194,1,c	;volatile
  7136  001020  D010               	goto	l892
  7137  001022  0EC7               	movlw	199
  7138  001024  64C4               	cpfsgt	196,c	;volatile
  7139  001026  D00D               	goto	l892
  7140                           
  7141                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7142  001028  0E02               	movlw	2
  7143  00102A  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7144  00102C  B4D8               	btfsc	status,2,c
  7145  00102E  D003               	goto	l2682
  7146  001030  0E02               	movlw	2
  7147  001032  EC91  F00E         	call	_MNouJoystick
  7148  001036                     l2682:
  7149                           
  7150                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7151  001036  0E02               	movlw	2
  7152  001038  6E0F               	movwf	_ultimaTeclaAD^0,c
  7153                           
  7154                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7155  00103A  0E07               	movlw	7
  7156  00103C  6EC2               	movwf	194,c	;volatile
  7157                           
  7158                           ;Joystick.c: 31:                 cap1 = 0;
  7159  00103E  9C78               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7160  001040  D7EC               	goto	l2674
  7161  001042                     l892:
  7162  001042  B2C2               	btfsc	194,1,c	;volatile
  7163  001044  D047               	goto	l897
  7164  001046  0E33               	movlw	51
  7165  001048  60C4               	cpfslt	196,c	;volatile
  7166  00104A  D044               	goto	l897
  7167                           
  7168                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7169  00104C  0E08               	movlw	8
  7170  00104E  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7171  001050  B4D8               	btfsc	status,2,c
  7172  001052  D003               	goto	l2696
  7173  001054  0E08               	movlw	8
  7174  001056  EC91  F00E         	call	_MNouJoystick
  7175  00105A                     l2696:
  7176                           
  7177                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7178  00105A  0E08               	movlw	8
  7179  00105C  D7ED               	goto	L7
  7180  00105E                     l898:
  7181                           
  7182                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7183  00105E  B2C2               	btfsc	194,1,c	;volatile
  7184  001060  D00B               	goto	l899
  7185  001062  0EC8               	movlw	200
  7186  001064  60C4               	cpfslt	196,c	;volatile
  7187  001066  D008               	goto	l899
  7188  001068  0E32               	movlw	50
  7189  00106A  64C4               	cpfsgt	196,c	;volatile
  7190  00106C  D005               	goto	l899
  7191                           
  7192                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7193  00106E  0E03               	movlw	3
  7194  001070  6EC2               	movwf	194,c	;volatile
  7195                           
  7196                           ;Joystick.c: 45:                 cap2 = 1;
  7197  001072  8A78               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7198  001074                     l2712:
  7199                           
  7200                           ;Joystick.c: 46:     state--;
  7201  001074  060E               	decf	JoystickMotor@state^0,f,c
  7202                           
  7203                           ;Joystick.c: 47:    }
  7204  001076  D02E               	goto	l897
  7205  001078                     l899:
  7206  001078  B2C2               	btfsc	194,1,c	;volatile
  7207  00107A  D010               	goto	l901
  7208  00107C  0EC7               	movlw	199
  7209  00107E  64C4               	cpfsgt	196,c	;volatile
  7210  001080  D00D               	goto	l901
  7211                           
  7212                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7213  001082  0E06               	movlw	6
  7214  001084  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7215  001086  B4D8               	btfsc	status,2,c
  7216  001088  D003               	goto	l2720
  7217  00108A  0E06               	movlw	6
  7218  00108C  EC91  F00E         	call	_MNouJoystick
  7219  001090                     l2720:
  7220                           
  7221                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7222  001090  0E06               	movlw	6
  7223  001092  6E0F               	movwf	_ultimaTeclaAD^0,c
  7224                           
  7225                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7226  001094  0E03               	movlw	3
  7227  001096  6EC2               	movwf	194,c	;volatile
  7228                           
  7229                           ;Joystick.c: 52:                 cap2 = 0;
  7230  001098  9A78               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7231  00109A  D7EC               	goto	l2712
  7232  00109C                     l901:
  7233  00109C  B2C2               	btfsc	194,1,c	;volatile
  7234  00109E  D01A               	goto	l897
  7235  0010A0  0E33               	movlw	51
  7236  0010A2  60C4               	cpfslt	196,c	;volatile
  7237  0010A4  D017               	goto	l897
  7238                           
  7239                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7240  0010A6  0E04               	movlw	4
  7241  0010A8  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7242  0010AA  B4D8               	btfsc	status,2,c
  7243  0010AC  D003               	goto	l2734
  7244  0010AE  0E04               	movlw	4
  7245  0010B0  EC91  F00E         	call	_MNouJoystick
  7246  0010B4                     l2734:
  7247                           
  7248                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7249  0010B4  0E04               	movlw	4
  7250  0010B6  D7ED               	goto	L8
  7251  0010B8                     l2744:
  7252  0010B8  500E               	movf	JoystickMotor@state^0,w,c
  7253  0010BA  6E6B               	movwf	??_JoystickMotor^0,c
  7254  0010BC  6A6C               	clrf	(??_JoystickMotor+1)^0,c
  7255                           
  7256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7257                           ; Switch size 1, requested type "simple"
  7258                           ; Number of cases is 1, Range of values is 0 to 0
  7259                           ; switch strategies available:
  7260                           ; Name         Instructions Cycles
  7261                           ; simple_byte            4     3 (average)
  7262                           ;	Chosen strategy is simple_byte
  7263  0010BE  506C               	movf	(??_JoystickMotor+1)^0,w,c
  7264  0010C0  0A00               	xorlw	0	; case 0
  7265  0010C2  A4D8               	btfss	status,2,c
  7266  0010C4  D007               	goto	l897
  7267                           
  7268                           ; Switch size 1, requested type "simple"
  7269                           ; Number of cases is 2, Range of values is 0 to 1
  7270                           ; switch strategies available:
  7271                           ; Name         Instructions Cycles
  7272                           ; simple_byte            7     4 (average)
  7273                           ;	Chosen strategy is simple_byte
  7274  0010C6  506B               	movf	??_JoystickMotor^0,w,c
  7275  0010C8  0A00               	xorlw	0	; case 0
  7276  0010CA  B4D8               	btfsc	status,2,c
  7277  0010CC  D79B               	goto	l889
  7278  0010CE  0A01               	xorlw	1	; case 1
  7279  0010D0  B4D8               	btfsc	status,2,c
  7280  0010D2  D7C5               	goto	l898
  7281  0010D4                     l897:
  7282                           
  7283                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7284  0010D4  AC78               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7285  0010D6  0012               	return	
  7286  0010D8  AA78               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7287  0010DA  0012               	return	
  7288  0010DC  500F               	movf	_ultimaTeclaAD^0,w,c
  7289  0010DE  B4D8               	btfsc	status,2,c
  7290  0010E0  0012               	return	
  7291                           
  7292                           ;Joystick.c: 66:         MNouJoystick(-1);
  7293  0010E2  0EFF               	movlw	255
  7294  0010E4  EC91  F00E         	call	_MNouJoystick
  7295                           
  7296                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  7297  0010E8  680F               	setf	_ultimaTeclaAD^0,c
  7298  0010EA  0012               	return		;funcret
  7299  0010EC                     __end_of_JoystickMotor:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _MNouJoystick *****************
  7303 ;; Defined at:
  7304 ;;		line 35 in file "Menu.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  posicio         1    wreg     char 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  posicio         1    5[COMRAM] char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/1
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1
  7318 ;;      Params:         0       0       0
  7319 ;;      Locals:         1       0       0
  7320 ;;      Temps:          0       0       0
  7321 ;;      Totals:         1       0       0
  7322 ;;Total ram usage:        1 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 2
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_JoystickMotor
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text59
  7333  001D22                     __ptext59:
  7334                           	callstack 0
  7335  001D22                     _MNouJoystick:
  7336                           	callstack 27
  7337                           
  7338                           ;incstack = 0
  7339                           ;MNouJoystick@posicio stored from wreg
  7340  001D22  6E6A               	movwf	MNouJoystick@posicio^0,c
  7341                           
  7342                           ;Menu.c: 36:     novaDireccio = posicio;
  7343  001D24  C06A  F058         	movff	MNouJoystick@posicio,_novaDireccio
  7344  001D28  0012               	return		;funcret
  7345  001D2A                     __end_of_MNouJoystick:
  7346                           	callstack 0
  7347                           
  7348 ;; *************** function _JoystickInit *****************
  7349 ;; Defined at:
  7350 ;;		line 12 in file "Joystick.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1
  7364 ;;      Params:         0       0       0
  7365 ;;      Locals:         0       0       0
  7366 ;;      Temps:          0       0       0
  7367 ;;      Totals:         0       0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 2
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text60
  7379  001C30                     __ptext60:
  7380                           	callstack 0
  7381  001C30                     _JoystickInit:
  7382                           	callstack 28
  7383                           
  7384                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7385                           
  7386                           ;incstack = 0
  7387  001C30  0E01               	movlw	1
  7388  001C32  6EC2               	movwf	194,c	;volatile
  7389                           
  7390                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7391  001C34  0E0D               	movlw	13
  7392  001C36  6EC1               	movwf	193,c	;volatile
  7393                           
  7394                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7395  001C38  0E09               	movlw	9
  7396  001C3A  6EC0               	movwf	192,c	;volatile
  7397                           
  7398                           ;Joystick.c: 16:     ADRESH = 127;
  7399  001C3C  0E7F               	movlw	127
  7400  001C3E  6EC4               	movwf	196,c	;volatile
  7401  001C40  0012               	return		;funcret
  7402  001C42                     __end_of_JoystickInit:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function _GLCDMotor *****************
  7406 ;; Defined at:
  7407 ;;		line 36 in file "GestioLCD.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/1
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1
  7421 ;;      Params:         0       0       0
  7422 ;;      Locals:         0       0       0
  7423 ;;      Temps:          0       2       0
  7424 ;;      Totals:         0       2       0
  7425 ;;Total ram usage:        2 bytes
  7426 ;; Hardware stack levels used: 1
  7427 ;; Hardware stack levels required when called: 6
  7428 ;; This function calls:
  7429 ;;		_LcClear
  7430 ;;		_LcGotoXY
  7431 ;;		_LcLliure
  7432 ;;		_LcNewString
  7433 ;;		_LcPutChar
  7434 ;;		_TiGetTics
  7435 ;;		_TiResetTics
  7436 ;; This function is called by:
  7437 ;;		_main
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text61
  7442  000750                     __ptext61:
  7443                           	callstack 0
  7444  000750                     _GLCDMotor:
  7445                           	callstack 24
  7446                           
  7447                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  7448                           
  7449                           ;incstack = 0
  7450  000750  D1BD               	goto	l6644
  7451  000752                     l6458:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7455  000752  0E11               	movlw	17
  7456  000754  6011               	cpfslt	GLCDMotor@length1^0,c
  7457  000756  D018               	goto	l6468
  7458                           
  7459                           ; BSR set to: 0
  7460  000758  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7461  00075A  D016               	goto	l6468
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  7465  00075C  0E00               	movlw	0
  7466  00075E  6E72               	movwf	LcGotoXY@Row^0,c
  7467  000760  0E00               	movlw	0
  7468  000762  EC8F  F00C         	call	_LcGotoXY
  7469                           
  7470                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  7471  000766  5018               	movf	_menuDaltGLCD^0,w,c
  7472  000768  0D1D               	mullw	29
  7473  00076A  50F3               	movf	243,w,c
  7474  00076C  0F01               	addlw	low _menuList
  7475  00076E  0100               	movlb	0	; () banked
  7476  000770  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7477  000772  C0C1  F06D         	movff	??_GLCDMotor,LcNewString@new_s
  7478  000776  506D               	movf	LcNewString@new_s^0,w,c
  7479  000778  A4D8               	btfss	status,2,c
  7480  00077A  0E02               	movlw	high __smallconst
  7481  00077C  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7482  00077E  EC49  F00E         	call	_LcNewString	;wreg free
  7483                           
  7484                           ;GestioLCD.c: 53:     state = 5;
  7485  000782  0E05               	movlw	5
  7486  000784  6E17               	movwf	GLCDMotor@state^0,c
  7487                           
  7488                           ;GestioLCD.c: 54:    }
  7489  000786  0012               	return	
  7490  000788                     l6468:
  7491                           
  7492                           ; BSR set to: 0
  7493  000788  0E10               	movlw	16
  7494  00078A  6411               	cpfsgt	GLCDMotor@length1^0,c
  7495  00078C  0012               	return	
  7496                           
  7497                           ; BSR set to: 0
  7498  00078E  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7499  000790  0012               	return	
  7500  000792                     u6540:
  7501                           
  7502                           ;GestioLCD.c: 56:     state++;
  7503  000792  2A17               	incf	GLCDMotor@state^0,f,c
  7504  000794  0012               	return	
  7505  000796                     l6474:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;GestioLCD.c: 60:    if (j>=16) {
  7509  000796  0E0F               	movlw	15
  7510  000798  6416               	cpfsgt	GLCDMotor@j^0,c
  7511  00079A  D02B               	goto	l6488
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;GestioLCD.c: 61:     min1++;
  7515  00079C  2A15               	incf	GLCDMotor@min1^0,f,c
  7516                           
  7517                           ;GestioLCD.c: 62:     max1++;
  7518  00079E  2A56               	incf	GLCDMotor@max1^0,f,c
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  7522  0007A0  5018               	movf	_menuDaltGLCD^0,w,c
  7523  0007A2  0D1D               	mullw	29
  7524  0007A4  50F3               	movf	243,w,c
  7525  0007A6  0F01               	addlw	low _menuList
  7526  0007A8  2456               	addwf	GLCDMotor@max1^0,w,c
  7527  0007AA  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7528  0007AC  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7529  0007B0                     	if	1	;There is more than 1 active tblptr byte
  7530  0007B0  0E02               	movlw	high __smallconst
  7531  0007B2  6EF7               	movwf	tblptrh,c
  7532  0007B4                     	endif
  7533  0007B4                     	if	0	;tblptru may be non-zero
  7534  0007B4                     	endif
  7535  0007B4                     	if	0	;tblptru may be non-zero
  7536  0007B4                     	endif
  7537  0007B4  0008               	tblrd		*
  7538  0007B6  50F5               	movf	tablat,w,c
  7539  0007B8  0900               	iorlw	0
  7540  0007BA  A4D8               	btfss	status,2,c
  7541  0007BC  D002               	goto	l6482
  7542                           
  7543                           ; BSR set to: 0
  7544  0007BE  0E00               	movlw	0
  7545  0007C0  6E56               	movwf	GLCDMotor@max1^0,c
  7546  0007C2                     l6482:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  7550  0007C2  5018               	movf	_menuDaltGLCD^0,w,c
  7551  0007C4  0D1D               	mullw	29
  7552  0007C6  50F3               	movf	243,w,c
  7553  0007C8  0F01               	addlw	low _menuList
  7554  0007CA  2415               	addwf	GLCDMotor@min1^0,w,c
  7555  0007CC  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7556  0007CE  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7557  0007D2                     	if	1	;There is more than 1 active tblptr byte
  7558  0007D2  0E02               	movlw	high __smallconst
  7559  0007D4  6EF7               	movwf	tblptrh,c
  7560  0007D6                     	endif
  7561  0007D6                     	if	0	;tblptru may be non-zero
  7562  0007D6                     	endif
  7563  0007D6                     	if	0	;tblptru may be non-zero
  7564  0007D6                     	endif
  7565  0007D6  0008               	tblrd		*
  7566  0007D8  50F5               	movf	tablat,w,c
  7567  0007DA  0900               	iorlw	0
  7568  0007DC  A4D8               	btfss	status,2,c
  7569  0007DE  D002               	goto	l820
  7570                           
  7571                           ; BSR set to: 0
  7572  0007E0  0E00               	movlw	0
  7573  0007E2  6E15               	movwf	GLCDMotor@min1^0,c
  7574  0007E4                     l820:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;GestioLCD.c: 65:     j=0;
  7578  0007E4  0E00               	movlw	0
  7579  0007E6  6E16               	movwf	GLCDMotor@j^0,c
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;GestioLCD.c: 66:     k1=min1;
  7583  0007E8  C015  F013         	movff	GLCDMotor@min1,GLCDMotor@k1
  7584                           
  7585                           ;GestioLCD.c: 67:     state = 6;
  7586  0007EC  0E06               	movlw	6
  7587  0007EE  6E17               	movwf	GLCDMotor@state^0,c
  7588                           
  7589                           ;GestioLCD.c: 68:    }
  7590  0007F0  0012               	return	
  7591  0007F2                     l6488:
  7592                           
  7593                           ; BSR set to: 0
  7594  0007F2  0E10               	movlw	16
  7595  0007F4  6016               	cpfslt	GLCDMotor@j^0,c
  7596  0007F6  0012               	return	
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  7600  0007F8  0E00               	movlw	0
  7601  0007FA  6E72               	movwf	LcGotoXY@Row^0,c
  7602  0007FC  5016               	movf	GLCDMotor@j^0,w,c
  7603  0007FE  EC8F  F00C         	call	_LcGotoXY
  7604                           
  7605                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  7606  000802  5018               	movf	_menuDaltGLCD^0,w,c
  7607  000804  0D1D               	mullw	29
  7608  000806  50F3               	movf	243,w,c
  7609  000808  0F01               	addlw	low _menuList
  7610  00080A  2413               	addwf	GLCDMotor@k1^0,w,c
  7611  00080C  0100               	movlb	0	; () banked
  7612  00080E  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7613  000810  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7614  000814                     	if	1	;There is more than 1 active tblptr byte
  7615  000814  0E02               	movlw	high __smallconst
  7616  000816  6EF7               	movwf	tblptrh,c
  7617  000818                     	endif
  7618  000818                     	if	0	;tblptru may be non-zero
  7619  000818                     	endif
  7620  000818                     	if	0	;tblptru may be non-zero
  7621  000818                     	endif
  7622  000818  0008               	tblrd		*
  7623  00081A  50F5               	movf	tablat,w,c
  7624  00081C  EC21  F00C         	call	_LcPutChar
  7625                           
  7626                           ;GestioLCD.c: 72:     j++;
  7627  000820  2A16               	incf	GLCDMotor@j^0,f,c
  7628                           
  7629                           ;GestioLCD.c: 73:     k1++;
  7630  000822  2A13               	incf	GLCDMotor@k1^0,f,c
  7631                           
  7632                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  7633  000824  5018               	movf	_menuDaltGLCD^0,w,c
  7634  000826  0D1D               	mullw	29
  7635  000828  50F3               	movf	243,w,c
  7636  00082A  0F01               	addlw	low _menuList
  7637  00082C  2413               	addwf	GLCDMotor@k1^0,w,c
  7638  00082E  0100               	movlb	0	; () banked
  7639  000830  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7640  000832  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7641  000836                     	if	1	;There is more than 1 active tblptr byte
  7642  000836  0E02               	movlw	high __smallconst
  7643  000838  6EF7               	movwf	tblptrh,c
  7644  00083A                     	endif
  7645  00083A                     	if	0	;tblptru may be non-zero
  7646  00083A                     	endif
  7647  00083A                     	if	0	;tblptru may be non-zero
  7648  00083A                     	endif
  7649  00083A  0008               	tblrd		*
  7650  00083C  50F5               	movf	tablat,w,c
  7651  00083E  0900               	iorlw	0
  7652  000840  A4D8               	btfss	status,2,c
  7653  000842  0012               	return	
  7654                           
  7655                           ; BSR set to: 0
  7656  000844  0E00               	movlw	0
  7657  000846  6E13               	movwf	GLCDMotor@k1^0,c
  7658  000848  0012               	return	
  7659  00084A                     l6502:
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  7663  00084A  0E04               	movlw	4
  7664  00084C  6018               	cpfslt	_menuDaltGLCD^0,c
  7665  00084E  D012               	goto	u6640
  7666  000850  D7A0               	goto	u6540
  7667  000852                     u6610:
  7668                           
  7669                           ;GestioLCD.c: 82:     state = 0;
  7670  000852  0E00               	movlw	0
  7671  000854  6E17               	movwf	GLCDMotor@state^0,c
  7672  000856  0012               	return	
  7673  000858                     l6510:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  7677  000858  EC4F  F00E         	call	_LcLliure	;wreg free
  7678  00085C  A0D8               	btfss	status,0,c
  7679  00085E  D006               	goto	l6516
  7680  000860  0E04               	movlw	4
  7681  000862  6018               	cpfslt	_menuDaltGLCD^0,c
  7682  000864  D003               	goto	l6516
  7683                           
  7684                           ;GestioLCD.c: 87:     state = 7;
  7685  000866  0E07               	movlw	7
  7686  000868  6E17               	movwf	GLCDMotor@state^0,c
  7687                           
  7688                           ;GestioLCD.c: 88:    }
  7689  00086A  0012               	return	
  7690  00086C                     l6516:
  7691  00086C  EC4F  F00E         	call	_LcLliure	;wreg free
  7692  000870  A0D8               	btfss	status,0,c
  7693  000872  0012               	return	
  7694  000874                     u6640:
  7695  000874  0E03               	movlw	3
  7696  000876  6418               	cpfsgt	_menuDaltGLCD^0,c
  7697  000878  0012               	return	
  7698  00087A  D7EB               	goto	u6610
  7699  00087C                     l832:
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  7703  00087C  AE78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7704  00087E  0012               	return	
  7705                           
  7706                           ; BSR set to: 0
  7707  000880  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7708  000882  0012               	return	
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;GestioLCD.c: 95:     length1 = 0;
  7712  000884  0E00               	movlw	0
  7713  000886  6E11               	movwf	GLCDMotor@length1^0,c
  7714                           
  7715                           ;GestioLCD.c: 96:     length2 = 0;
  7716  000888  0E00               	movlw	0
  7717  00088A  6E10               	movwf	GLCDMotor@length2^0,c
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  7721  00088C  0E00               	movlw	0
  7722  00088E  6E72               	movwf	LcGotoXY@Row^0,c
  7723  000890  0E00               	movlw	0
  7724  000892  EC8F  F00C         	call	_LcGotoXY
  7725                           
  7726                           ;GestioLCD.c: 98:     min1 = 0;
  7727  000896  0E00               	movlw	0
  7728  000898  6E15               	movwf	GLCDMotor@min1^0,c
  7729                           
  7730                           ;GestioLCD.c: 99:     max1 = 15;
  7731  00089A  0E0F               	movlw	15
  7732  00089C  6E56               	movwf	GLCDMotor@max1^0,c
  7733                           
  7734                           ;GestioLCD.c: 100:     min2 = 0;
  7735  00089E  0E00               	movlw	0
  7736  0008A0  6E14               	movwf	GLCDMotor@min2^0,c
  7737                           
  7738                           ;GestioLCD.c: 101:     max2 = 15;
  7739  0008A2  0E0F               	movlw	15
  7740  0008A4  6E55               	movwf	GLCDMotor@max2^0,c
  7741                           
  7742                           ;GestioLCD.c: 102:     j = 0;
  7743  0008A6  0E00               	movlw	0
  7744  0008A8  6E16               	movwf	GLCDMotor@j^0,c
  7745                           
  7746                           ;GestioLCD.c: 103:     k1 = 0;
  7747  0008AA  0E00               	movlw	0
  7748  0008AC  6E13               	movwf	GLCDMotor@k1^0,c
  7749                           
  7750                           ;GestioLCD.c: 104:     k2 = 0;
  7751  0008AE  0E00               	movlw	0
  7752  0008B0  6E12               	movwf	GLCDMotor@k2^0,c
  7753                           
  7754                           ;GestioLCD.c: 105:     newString = 0;
  7755  0008B2  9E78               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7756  0008B4  D76E               	goto	u6540
  7757  0008B6                     l6546:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  7761  0008B6  5018               	movf	_menuDaltGLCD^0,w,c
  7762  0008B8  0D1D               	mullw	29
  7763  0008BA  50F3               	movf	243,w,c
  7764  0008BC  0F01               	addlw	low _menuList
  7765  0008BE  2411               	addwf	GLCDMotor@length1^0,w,c
  7766  0008C0  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7767  0008C2  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7768  0008C6                     	if	1	;There is more than 1 active tblptr byte
  7769  0008C6  0E02               	movlw	high __smallconst
  7770  0008C8  6EF7               	movwf	tblptrh,c
  7771  0008CA                     	endif
  7772  0008CA                     	if	0	;tblptru may be non-zero
  7773  0008CA                     	endif
  7774  0008CA                     	if	0	;tblptru may be non-zero
  7775  0008CA                     	endif
  7776  0008CA  0008               	tblrd		*
  7777  0008CC  50F5               	movf	tablat,w,c
  7778  0008CE  0900               	iorlw	0
  7779  0008D0  A4D8               	btfss	status,2,c
  7780  0008D2  D004               	goto	l6552
  7781                           
  7782                           ; BSR set to: 0
  7783  0008D4  0E03               	movlw	3
  7784  0008D6  6418               	cpfsgt	_menuDaltGLCD^0,c
  7785  0008D8  D001               	goto	l6552
  7786  0008DA  D75B               	goto	u6540
  7787  0008DC                     l6552:
  7788                           
  7789                           ; BSR set to: 0
  7790  0008DC  5018               	movf	_menuDaltGLCD^0,w,c
  7791  0008DE  0D1D               	mullw	29
  7792  0008E0  50F3               	movf	243,w,c
  7793  0008E2  0F01               	addlw	low _menuList
  7794  0008E4  2411               	addwf	GLCDMotor@length1^0,w,c
  7795  0008E6  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7796  0008E8  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7797  0008EC                     	if	1	;There is more than 1 active tblptr byte
  7798  0008EC  0E02               	movlw	high __smallconst
  7799  0008EE  6EF7               	movwf	tblptrh,c
  7800  0008F0                     	endif
  7801  0008F0                     	if	0	;tblptru may be non-zero
  7802  0008F0                     	endif
  7803  0008F0                     	if	0	;tblptru may be non-zero
  7804  0008F0                     	endif
  7805  0008F0  0008               	tblrd		*
  7806  0008F2  50F5               	movf	tablat,w,c
  7807  0008F4  0900               	iorlw	0
  7808  0008F6  B4D8               	btfsc	status,2,c
  7809  0008F8  D002               	goto	l6556
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;GestioLCD.c: 114:     length1++;
  7813  0008FA  2A11               	incf	GLCDMotor@length1^0,f,c
  7814                           
  7815                           ;GestioLCD.c: 115:    }
  7816  0008FC  0012               	return	
  7817  0008FE                     l6556:
  7818                           
  7819                           ; BSR set to: 0
  7820  0008FE  0E04               	movlw	4
  7821  000900  6018               	cpfslt	_menuDaltGLCD^0,c
  7822  000902  0012               	return	
  7823                           
  7824                           ; BSR set to: 0
  7825  000904  5018               	movf	_menuDaltGLCD^0,w,c
  7826  000906  0D1D               	mullw	29
  7827  000908  50F3               	movf	243,w,c
  7828  00090A  0F01               	addlw	low _menuList
  7829  00090C  2411               	addwf	GLCDMotor@length1^0,w,c
  7830  00090E  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7831  000910  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7832  000914                     	if	1	;There is more than 1 active tblptr byte
  7833  000914  0E02               	movlw	high __smallconst
  7834  000916  6EF7               	movwf	tblptrh,c
  7835  000918                     	endif
  7836  000918                     	if	0	;tblptru may be non-zero
  7837  000918                     	endif
  7838  000918                     	if	0	;tblptru may be non-zero
  7839  000918                     	endif
  7840  000918  0008               	tblrd		*
  7841  00091A  50F5               	movf	tablat,w,c
  7842  00091C  0900               	iorlw	0
  7843  00091E  A4D8               	btfss	status,2,c
  7844  000920  0012               	return	
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;GestioLCD.c: 117:     state = 13;
  7848  000922  0E0D               	movlw	13
  7849  000924  6E17               	movwf	GLCDMotor@state^0,c
  7850  000926  0012               	return	
  7851  000928                     l6562:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  7855  000928  0E11               	movlw	17
  7856  00092A  6010               	cpfslt	GLCDMotor@length2^0,c
  7857  00092C  D01A               	goto	l6572
  7858                           
  7859                           ; BSR set to: 0
  7860  00092E  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7861  000930  D018               	goto	l6572
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  7865  000932  0E01               	movlw	1
  7866  000934  6E72               	movwf	LcGotoXY@Row^0,c
  7867  000936  0E00               	movlw	0
  7868  000938  EC8F  F00C         	call	_LcGotoXY
  7869                           
  7870                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  7871  00093C  5018               	movf	_menuDaltGLCD^0,w,c
  7872  00093E  0D1D               	mullw	29
  7873  000940  CFF3 F0C1          	movff	prodl,??_GLCDMotor
  7874  000944  0E1D               	movlw	29
  7875  000946  0100               	movlb	0	; () banked
  7876  000948  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7877  00094A  51C1               	movf	??_GLCDMotor& (0+255),w,b
  7878  00094C  0F01               	addlw	low _menuList
  7879  00094E  6FC2               	movwf	(??_GLCDMotor+1)& (0+255),b
  7880  000950  C0C2  F06D         	movff	??_GLCDMotor+1,LcNewString@new_s
  7881  000954  506D               	movf	LcNewString@new_s^0,w,c
  7882  000956  A4D8               	btfss	status,2,c
  7883  000958  0E02               	movlw	high __smallconst
  7884  00095A  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7885  00095C  EC49  F00E         	call	_LcNewString	;wreg free
  7886  000960  D718               	goto	u6540
  7887  000962                     l6572:
  7888                           
  7889                           ; BSR set to: 0
  7890  000962  0E10               	movlw	16
  7891  000964  6410               	cpfsgt	GLCDMotor@length2^0,c
  7892  000966  0012               	return	
  7893                           
  7894                           ; BSR set to: 0
  7895  000968  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7896  00096A  0012               	return	
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;GestioLCD.c: 127:     state = 9;
  7900  00096C  0E09               	movlw	9
  7901  00096E  6E17               	movwf	GLCDMotor@state^0,c
  7902  000970  0012               	return	
  7903  000972                     l6578:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;GestioLCD.c: 131:    if (j<16) {
  7907  000972  0E10               	movlw	16
  7908  000974  6016               	cpfslt	GLCDMotor@j^0,c
  7909  000976  D02D               	goto	l6592
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  7913  000978  0E01               	movlw	1
  7914  00097A  6E72               	movwf	LcGotoXY@Row^0,c
  7915  00097C  5016               	movf	GLCDMotor@j^0,w,c
  7916  00097E  EC8F  F00C         	call	_LcGotoXY
  7917                           
  7918                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  7919  000982  5018               	movf	_menuDaltGLCD^0,w,c
  7920  000984  0D1D               	mullw	29
  7921  000986  50F3               	movf	243,w,c
  7922  000988  0F01               	addlw	low _menuList
  7923  00098A  2412               	addwf	GLCDMotor@k2^0,w,c
  7924  00098C  0100               	movlb	0	; () banked
  7925  00098E  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7926  000990  0E1D               	movlw	29
  7927  000992  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7928  000994  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7929  000998                     	if	1	;There is more than 1 active tblptr byte
  7930  000998  0E02               	movlw	high __smallconst
  7931  00099A  6EF7               	movwf	tblptrh,c
  7932  00099C                     	endif
  7933  00099C                     	if	0	;tblptru may be non-zero
  7934  00099C                     	endif
  7935  00099C                     	if	0	;tblptru may be non-zero
  7936  00099C                     	endif
  7937  00099C  0008               	tblrd		*
  7938  00099E  50F5               	movf	tablat,w,c
  7939  0009A0  EC21  F00C         	call	_LcPutChar
  7940                           
  7941                           ;GestioLCD.c: 134:     j++;
  7942  0009A4  2A16               	incf	GLCDMotor@j^0,f,c
  7943                           
  7944                           ;GestioLCD.c: 135:     k2++;
  7945  0009A6  2A12               	incf	GLCDMotor@k2^0,f,c
  7946                           
  7947                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  7948  0009A8  5018               	movf	_menuDaltGLCD^0,w,c
  7949  0009AA  0D1D               	mullw	29
  7950  0009AC  50F3               	movf	243,w,c
  7951  0009AE  0F01               	addlw	low _menuList
  7952  0009B0  2412               	addwf	GLCDMotor@k2^0,w,c
  7953  0009B2  0100               	movlb	0	; () banked
  7954  0009B4  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7955  0009B6  0E1D               	movlw	29
  7956  0009B8  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7957  0009BA  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7958  0009BE                     	if	1	;There is more than 1 active tblptr byte
  7959  0009BE  0E02               	movlw	high __smallconst
  7960  0009C0  6EF7               	movwf	tblptrh,c
  7961  0009C2                     	endif
  7962  0009C2                     	if	0	;tblptru may be non-zero
  7963  0009C2                     	endif
  7964  0009C2                     	if	0	;tblptru may be non-zero
  7965  0009C2                     	endif
  7966  0009C2  0008               	tblrd		*
  7967  0009C4  50F5               	movf	tablat,w,c
  7968  0009C6  0900               	iorlw	0
  7969  0009C8  A4D8               	btfss	status,2,c
  7970  0009CA  0012               	return	
  7971                           
  7972                           ; BSR set to: 0
  7973  0009CC  0E00               	movlw	0
  7974  0009CE  6E12               	movwf	GLCDMotor@k2^0,c
  7975  0009D0  0012               	return	
  7976  0009D2                     l6592:
  7977                           
  7978                           ; BSR set to: 0
  7979  0009D2  0E0F               	movlw	15
  7980  0009D4  6416               	cpfsgt	GLCDMotor@j^0,c
  7981  0009D6  0012               	return	
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;GestioLCD.c: 139:     min2++;
  7985  0009D8  2A14               	incf	GLCDMotor@min2^0,f,c
  7986                           
  7987                           ;GestioLCD.c: 140:     max2++;
  7988  0009DA  2A55               	incf	GLCDMotor@max2^0,f,c
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  7992  0009DC  5018               	movf	_menuDaltGLCD^0,w,c
  7993  0009DE  0D1D               	mullw	29
  7994  0009E0  50F3               	movf	243,w,c
  7995  0009E2  0F01               	addlw	low _menuList
  7996  0009E4  2455               	addwf	GLCDMotor@max2^0,w,c
  7997  0009E6  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7998  0009E8  0E1D               	movlw	29
  7999  0009EA  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8000  0009EC  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8001  0009F0                     	if	1	;There is more than 1 active tblptr byte
  8002  0009F0  0E02               	movlw	high __smallconst
  8003  0009F2  6EF7               	movwf	tblptrh,c
  8004  0009F4                     	endif
  8005  0009F4                     	if	0	;tblptru may be non-zero
  8006  0009F4                     	endif
  8007  0009F4                     	if	0	;tblptru may be non-zero
  8008  0009F4                     	endif
  8009  0009F4  0008               	tblrd		*
  8010  0009F6  50F5               	movf	tablat,w,c
  8011  0009F8  0900               	iorlw	0
  8012  0009FA  A4D8               	btfss	status,2,c
  8013  0009FC  D002               	goto	l6600
  8014                           
  8015                           ; BSR set to: 0
  8016  0009FE  0E00               	movlw	0
  8017  000A00  6E55               	movwf	GLCDMotor@max2^0,c
  8018  000A02                     l6600:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8022  000A02  5018               	movf	_menuDaltGLCD^0,w,c
  8023  000A04  0D1D               	mullw	29
  8024  000A06  50F3               	movf	243,w,c
  8025  000A08  0F01               	addlw	low _menuList
  8026  000A0A  2414               	addwf	GLCDMotor@min2^0,w,c
  8027  000A0C  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8028  000A0E  0E1D               	movlw	29
  8029  000A10  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8030  000A12  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8031  000A16                     	if	1	;There is more than 1 active tblptr byte
  8032  000A16  0E02               	movlw	high __smallconst
  8033  000A18  6EF7               	movwf	tblptrh,c
  8034  000A1A                     	endif
  8035  000A1A                     	if	0	;tblptru may be non-zero
  8036  000A1A                     	endif
  8037  000A1A                     	if	0	;tblptru may be non-zero
  8038  000A1A                     	endif
  8039  000A1A  0008               	tblrd		*
  8040  000A1C  50F5               	movf	tablat,w,c
  8041  000A1E  0900               	iorlw	0
  8042  000A20  A4D8               	btfss	status,2,c
  8043  000A22  D002               	goto	l850
  8044                           
  8045                           ; BSR set to: 0
  8046  000A24  0E00               	movlw	0
  8047  000A26  6E14               	movwf	GLCDMotor@min2^0,c
  8048  000A28                     l850:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;GestioLCD.c: 143:     j=0;
  8052  000A28  0E00               	movlw	0
  8053  000A2A  6E16               	movwf	GLCDMotor@j^0,c
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;GestioLCD.c: 144:     k2=min2;
  8057  000A2C  C014  F012         	movff	GLCDMotor@min2,GLCDMotor@k2
  8058  000A30  D6B0               	goto	u6540
  8059  000A32                     l6608:
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8063  000A32  5019               	movf	_timerGLCD^0,w,c
  8064  000A34  EC7A  F00D         	call	_TiGetTics
  8065  000A38  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  8066  000A3A  D00E               	goto	l852
  8067  000A3C  0EB5               	movlw	181
  8068  000A3E  5C6A               	subwf	?_TiGetTics^0,w,c
  8069  000A40  0E04               	movlw	4
  8070  000A42  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  8071  000A44  B0D8               	btfsc	status,0,c
  8072  000A46  BE78               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8073  000A48  D007               	goto	l852
  8074  000A4A  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8075  000A4C  D005               	goto	l852
  8076                           
  8077                           ;GestioLCD.c: 150:     LcClear();
  8078  000A4E  ECA2  F00D         	call	_LcClear	;wreg free
  8079  000A52                     l6616:
  8080                           
  8081                           ;GestioLCD.c: 151:     state = 2;
  8082  000A52  0E02               	movlw	2
  8083  000A54  6E17               	movwf	GLCDMotor@state^0,c
  8084                           
  8085                           ;GestioLCD.c: 152:    }
  8086  000A56  0012               	return	
  8087  000A58                     l852:
  8088  000A58  AE78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8089  000A5A  0012               	return	
  8090  000A5C  A079               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8091  000A5E  0012               	return	
  8092                           
  8093                           ;GestioLCD.c: 154:     LcClear();
  8094  000A60  ECA2  F00D         	call	_LcClear	;wreg free
  8095  000A64  D6F6               	goto	u6610
  8096  000A66                     l6624:
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8100  000A66  5019               	movf	_timerGLCD^0,w,c
  8101  000A68  ECF7  F00D         	call	_TiResetTics
  8102  000A6C  D692               	goto	u6540
  8103  000A6E                     l6628:
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8107  000A6E  EC4F  F00E         	call	_LcLliure	;wreg free
  8108  000A72  A0D8               	btfss	status,0,c
  8109  000A74  0012               	return	
  8110                           
  8111                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8112  000A76  5019               	movf	_timerGLCD^0,w,c
  8113  000A78  ECF7  F00D         	call	_TiResetTics
  8114                           
  8115                           ;GestioLCD.c: 165:     state = 11;
  8116  000A7C  0E0B               	movlw	11
  8117  000A7E  6E17               	movwf	GLCDMotor@state^0,c
  8118  000A80  0012               	return	
  8119  000A82                     l6634:
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8123  000A82  5018               	movf	_menuDaltGLCD^0,w,c
  8124  000A84  0D1D               	mullw	29
  8125  000A86  50F3               	movf	243,w,c
  8126  000A88  0F01               	addlw	low _menuList
  8127  000A8A  2410               	addwf	GLCDMotor@length2^0,w,c
  8128  000A8C  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8129  000A8E  0E1D               	movlw	29
  8130  000A90  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8131  000A92  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8132  000A96                     	if	1	;There is more than 1 active tblptr byte
  8133  000A96  0E02               	movlw	high __smallconst
  8134  000A98  6EF7               	movwf	tblptrh,c
  8135  000A9A                     	endif
  8136  000A9A                     	if	0	;tblptru may be non-zero
  8137  000A9A                     	endif
  8138  000A9A                     	if	0	;tblptru may be non-zero
  8139  000A9A                     	endif
  8140  000A9A  0008               	tblrd		*
  8141  000A9C  50F5               	movf	tablat,w,c
  8142  000A9E  0900               	iorlw	0
  8143  000AA0  B4D8               	btfsc	status,2,c
  8144  000AA2  D002               	goto	l6638
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;GestioLCD.c: 170:     length2++;
  8148  000AA4  2A10               	incf	GLCDMotor@length2^0,f,c
  8149                           
  8150                           ;GestioLCD.c: 171:    }
  8151  000AA6  0012               	return	
  8152  000AA8                     l6638:
  8153                           
  8154                           ; BSR set to: 0
  8155  000AA8  5018               	movf	_menuDaltGLCD^0,w,c
  8156  000AAA  0D1D               	mullw	29
  8157  000AAC  50F3               	movf	243,w,c
  8158  000AAE  0F01               	addlw	low _menuList
  8159  000AB0  2410               	addwf	GLCDMotor@length2^0,w,c
  8160  000AB2  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8161  000AB4  0E1D               	movlw	29
  8162  000AB6  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8163  000AB8  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8164  000ABC                     	if	1	;There is more than 1 active tblptr byte
  8165  000ABC  0E02               	movlw	high __smallconst
  8166  000ABE  6EF7               	movwf	tblptrh,c
  8167  000AC0                     	endif
  8168  000AC0                     	if	0	;tblptru may be non-zero
  8169  000AC0                     	endif
  8170  000AC0                     	if	0	;tblptru may be non-zero
  8171  000AC0                     	endif
  8172  000AC0  0008               	tblrd		*
  8173  000AC2  50F5               	movf	tablat,w,c
  8174  000AC4  0900               	iorlw	0
  8175  000AC6  A4D8               	btfss	status,2,c
  8176  000AC8  0012               	return	
  8177  000ACA  D7C3               	goto	l6616
  8178  000ACC                     l6644:
  8179  000ACC  5017               	movf	GLCDMotor@state^0,w,c
  8180  000ACE  0100               	movlb	0	; () banked
  8181  000AD0  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8182  000AD2  6BC2               	clrf	(??_GLCDMotor+1)& (0+255),b
  8183                           
  8184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8185                           ; Switch size 1, requested type "simple"
  8186                           ; Number of cases is 1, Range of values is 0 to 0
  8187                           ; switch strategies available:
  8188                           ; Name         Instructions Cycles
  8189                           ; simple_byte            4     3 (average)
  8190                           ;	Chosen strategy is simple_byte
  8191  000AD4  51C2               	movf	(??_GLCDMotor+1)& (0+255),w,b
  8192  000AD6  0A00               	xorlw	0	; case 0
  8193  000AD8  A4D8               	btfss	status,2,c
  8194  000ADA  0012               	return	
  8195                           
  8196                           ; BSR set to: 0
  8197                           ; Switch size 1, requested type "simple"
  8198                           ; Number of cases is 12, Range of values is 0 to 13
  8199                           ; switch strategies available:
  8200                           ; Name         Instructions Cycles
  8201                           ; simple_byte           37    19 (average)
  8202                           ;	Chosen strategy is simple_byte
  8203  000ADC  51C1               	movf	??_GLCDMotor& (0+255),w,b
  8204  000ADE  0A00               	xorlw	0	; case 0
  8205  000AE0  B4D8               	btfsc	status,2,c
  8206  000AE2  D6CC               	goto	l832
  8207  000AE4  0A01               	xorlw	1	; case 1
  8208  000AE6  B4D8               	btfsc	status,2,c
  8209  000AE8  D6E6               	goto	l6546
  8210  000AEA  0A03               	xorlw	3	; case 2
  8211  000AEC  B4D8               	btfsc	status,2,c
  8212  000AEE  D631               	goto	l6458
  8213  000AF0  0A01               	xorlw	1	; case 3
  8214  000AF2  B4D8               	btfsc	status,2,c
  8215  000AF4  D650               	goto	l6474
  8216  000AF6  0A06               	xorlw	6	; case 5
  8217  000AF8  B4D8               	btfsc	status,2,c
  8218  000AFA  D6AE               	goto	l6510
  8219  000AFC  0A03               	xorlw	3	; case 6
  8220  000AFE  B4D8               	btfsc	status,2,c
  8221  000B00  D6A4               	goto	l6502
  8222  000B02  0A01               	xorlw	1	; case 7
  8223  000B04  B4D8               	btfsc	status,2,c
  8224  000B06  D710               	goto	l6562
  8225  000B08  0A0F               	xorlw	15	; case 8
  8226  000B0A  B4D8               	btfsc	status,2,c
  8227  000B0C  D7B0               	goto	l6628
  8228  000B0E  0A01               	xorlw	1	; case 9
  8229  000B10  B4D8               	btfsc	status,2,c
  8230  000B12  D72F               	goto	l6578
  8231  000B14  0A03               	xorlw	3	; case 10
  8232  000B16  B4D8               	btfsc	status,2,c
  8233  000B18  D7A6               	goto	l6624
  8234  000B1A  0A01               	xorlw	1	; case 11
  8235  000B1C  B4D8               	btfsc	status,2,c
  8236  000B1E  D789               	goto	l6608
  8237  000B20  0A06               	xorlw	6	; case 13
  8238  000B22  A4D8               	btfss	status,2,c
  8239  000B24  0012               	return	
  8240  000B26  D7AD               	goto	l6634
  8241  000B28                     __end_of_GLCDMotor:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _LcPutChar *****************
  8245 ;; Defined at:
  8246 ;;		line 134 in file "LcTLCD.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  c               1    wreg     unsigned char 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  c               1    0[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1
  8260 ;;      Params:         0       0       0
  8261 ;;      Locals:         0       1       0
  8262 ;;      Temps:          0       0       0
  8263 ;;      Totals:         0       1       0
  8264 ;;Total ram usage:        1 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 5
  8267 ;; This function calls:
  8268 ;;		_CantaData
  8269 ;;		_LcGotoXY
  8270 ;;		_WaitForBusy
  8271 ;; This function is called by:
  8272 ;;		_LcLCD
  8273 ;;		_menu
  8274 ;;		_GLCDMotor
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text62
  8279  001842                     __ptext62:
  8280                           	callstack 0
  8281  001842                     _LcPutChar:
  8282                           	callstack 24
  8283                           
  8284                           ;incstack = 0
  8285                           ;LcPutChar@c stored from wreg
  8286  001842  0100               	movlb	0	; () banked
  8287  001844  6FC0               	movwf	LcPutChar@c& (0+255),b
  8288                           
  8289                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8290  001846  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8291  00184A  0100               	movlb	0	; () banked
  8292  00184C  51C0               	movf	LcPutChar@c& (0+255),w,b
  8293  00184E  EC1B  F00D         	call	_CantaData
  8294                           
  8295                           ;LcTLCD.c: 138:  ++ColumnAct;
  8296  001852  2A33               	incf	_ColumnAct^0,f,c
  8297                           
  8298                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8299  001854  0E02               	movlw	2
  8300  001856  1836               	xorwf	_Rows^0,w,c
  8301  001858  A4D8               	btfss	status,2,c
  8302  00185A  D010               	goto	l5670
  8303                           
  8304                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8305  00185C  0E27               	movlw	39
  8306  00185E  6433               	cpfsgt	_ColumnAct^0,c
  8307  001860  D00D               	goto	l5670
  8308                           
  8309                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8310  001862  0E00               	movlw	0
  8311  001864  6E33               	movwf	_ColumnAct^0,c
  8312                           
  8313                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8314  001866  2A34               	incf	_RowAct^0,f,c
  8315  001868  0E01               	movlw	1
  8316  00186A  6434               	cpfsgt	_RowAct^0,c
  8317  00186C  D002               	goto	l5668
  8318  00186E  0E00               	movlw	0
  8319  001870  6E34               	movwf	_RowAct^0,c
  8320  001872                     l5668:
  8321                           
  8322                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8323  001872  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8324  001876  5033               	movf	_ColumnAct^0,w,c
  8325  001878  EC8F  F00C         	call	_LcGotoXY
  8326  00187C                     l5670:
  8327                           
  8328                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8329  00187C  0434               	decf	_RowAct^0,w,c
  8330  00187E  A4D8               	btfss	status,2,c
  8331  001880  0012               	return	
  8332                           
  8333                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8334  001882  0E27               	movlw	39
  8335  001884  6433               	cpfsgt	_ColumnAct^0,c
  8336  001886  D002               	goto	l5676
  8337  001888  0E00               	movlw	0
  8338  00188A  6E33               	movwf	_ColumnAct^0,c
  8339  00188C                     l5676:
  8340                           
  8341                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8342  00188C  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8343  001890  5033               	movf	_ColumnAct^0,w,c
  8344  001892  EC8F  F00C         	call	_LcGotoXY
  8345  001896  0012               	return		;funcret
  8346  001898                     __end_of_LcPutChar:
  8347                           	callstack 0
  8348                           
  8349 ;; *************** function _CantaData *****************
  8350 ;; Defined at:
  8351 ;;		line 196 in file "LcTLCD.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;  Data            1    wreg     unsigned char 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  Data            1    7[COMRAM] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, status,2, status,0, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 3F/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1
  8365 ;;      Params:         0       0       0
  8366 ;;      Locals:         1       0       0
  8367 ;;      Temps:          0       0       0
  8368 ;;      Totals:         1       0       0
  8369 ;;Total ram usage:        1 bytes
  8370 ;; Hardware stack levels used: 1
  8371 ;; Hardware stack levels required when called: 3
  8372 ;; This function calls:
  8373 ;;		_CantaPartAlta
  8374 ;;		_CantaPartBaixa
  8375 ;; This function is called by:
  8376 ;;		_LcPutChar
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text63
  8381  001A36                     __ptext63:
  8382                           	callstack 0
  8383  001A36                     _CantaData:
  8384                           	callstack 25
  8385                           
  8386                           ;incstack = 0
  8387                           ;CantaData@Data stored from wreg
  8388  001A36  6E6C               	movwf	CantaData@Data^0,c
  8389                           
  8390                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8391  001A38  9694               	bcf	148,3,c	;volatile
  8392  001A3A  9494               	bcf	148,2,c	;volatile
  8393  001A3C  9294               	bcf	148,1,c	;volatile
  8394  001A3E  9094               	bcf	148,0,c	;volatile
  8395                           
  8396                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8397  001A40  8A8B               	bsf	139,5,c	;volatile
  8398                           
  8399                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8400  001A42  9E8C               	bcf	140,7,c	;volatile
  8401                           
  8402                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8403  001A44  888B               	bsf	139,4,c	;volatile
  8404                           
  8405                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8406  001A46  506C               	movf	CantaData@Data^0,w,c
  8407  001A48  EC91  F00B         	call	_CantaPartAlta
  8408                           
  8409                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8410  001A4C  888B               	bsf	139,4,c	;volatile
  8411                           
  8412                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8413  001A4E  988B               	bcf	139,4,c	;volatile
  8414                           
  8415                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8416  001A50  988B               	bcf	139,4,c	;volatile
  8417                           
  8418                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8419  001A52  888B               	bsf	139,4,c	;volatile
  8420                           
  8421                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8422  001A54  506C               	movf	CantaData@Data^0,w,c
  8423  001A56  EC5D  F00B         	call	_CantaPartBaixa
  8424                           
  8425                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8426  001A5A  888B               	bsf	139,4,c	;volatile
  8427                           
  8428                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8429  001A5C  988B               	bcf	139,4,c	;volatile
  8430                           
  8431                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8432  001A5E  8694               	bsf	148,3,c	;volatile
  8433  001A60  8494               	bsf	148,2,c	;volatile
  8434  001A62  8294               	bsf	148,1,c	;volatile
  8435  001A64  8094               	bsf	148,0,c	;volatile
  8436  001A66  0012               	return		;funcret
  8437  001A68                     __end_of_CantaData:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _LcNewString *****************
  8441 ;; Defined at:
  8442 ;;		line 241 in file "LcTLCD.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8445 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8446 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  8447 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1
  8459 ;;      Params:         2       0       0
  8460 ;;      Locals:         0       0       0
  8461 ;;      Temps:          0       0       0
  8462 ;;      Totals:         2       0       0
  8463 ;;Total ram usage:        2 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 2
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_menu
  8470 ;;		_GLCDMotor
  8471 ;;		_motorJoc
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text64
  8476  001C92                     __ptext64:
  8477                           	callstack 0
  8478  001C92                     _LcNewString:
  8479                           	callstack 27
  8480                           
  8481                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8482                           
  8483                           ;incstack = 0
  8484  001C92  C06D  F005         	movff	LcNewString@new_s,_s_ptr
  8485  001C96  C06E  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8486                           
  8487                           ;LcTLCD.c: 243:     nou_s = 1;
  8488  001C9A  8E79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8489  001C9C  0012               	return		;funcret
  8490  001C9E                     __end_of_LcNewString:
  8491                           	callstack 0
  8492                           
  8493 ;; *************** function _LcLliure *****************
  8494 ;; Defined at:
  8495 ;;		line 257 in file "LcTLCD.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;		None               void
  8502 ;; Registers used:
  8503 ;;		status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1
  8509 ;;      Params:         0       0       0
  8510 ;;      Locals:         0       0       0
  8511 ;;      Temps:          0       0       0
  8512 ;;      Totals:         0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; Hardware stack levels required when called: 2
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_menu
  8520 ;;		_GLCDMotor
  8521 ;;		_motorJoc
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text65
  8526  001C9E                     __ptext65:
  8527                           	callstack 0
  8528  001C9E                     _LcLliure:
  8529                           	callstack 27
  8530                           
  8531                           ;LcTLCD.c: 258:     return !nou_s;
  8532                           
  8533                           ;incstack = 0
  8534  001C9E  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8535  001CA0  D002               	goto	l3938
  8536  001CA2  90D8               	bcf	status,0,c
  8537  001CA4  0012               	return	
  8538  001CA6                     l3938:
  8539  001CA6  80D8               	bsf	status,0,c
  8540  001CA8  0012               	return		;funcret
  8541  001CAA                     __end_of_LcLliure:
  8542                           	callstack 0
  8543                           
  8544 ;; *************** function _LcClear *****************
  8545 ;; Defined at:
  8546 ;;		line 84 in file "LcTLCD.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1
  8560 ;;      Params:         0       0       0
  8561 ;;      Locals:         0       0       0
  8562 ;;      Temps:          0       0       0
  8563 ;;      Totals:         0       0       0
  8564 ;;Total ram usage:        0 bytes
  8565 ;; Hardware stack levels used: 1
  8566 ;; Hardware stack levels required when called: 5
  8567 ;; This function calls:
  8568 ;;		_CantaIR
  8569 ;;		_Espera
  8570 ;;		_LcGotoXY
  8571 ;;		_WaitForBusy
  8572 ;; This function is called by:
  8573 ;;		_menu
  8574 ;;		_GLCDMotor
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text66
  8579  001B44                     __ptext66:
  8580                           	callstack 0
  8581  001B44                     _LcClear:
  8582                           	callstack 24
  8583                           
  8584                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  8585                           
  8586                           ;incstack = 0
  8587  001B44  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8588  001B48  0E01               	movlw	1
  8589  001B4A  EC34  F00D         	call	_CantaIR
  8590                           
  8591                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  8592  001B4E  0E00               	movlw	0
  8593  001B50  6E72               	movwf	(Espera@ms+1)^0,c
  8594  001B52  0E03               	movlw	3
  8595  001B54  6E71               	movwf	Espera@ms^0,c
  8596  001B56  5032               	movf	_Timer^0,w,c
  8597  001B58  ECB4  F00D         	call	_Espera
  8598                           
  8599                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  8600  001B5C  0E00               	movlw	0
  8601  001B5E  6E72               	movwf	LcGotoXY@Row^0,c
  8602  001B60  0E00               	movlw	0
  8603  001B62  EC8F  F00C         	call	_LcGotoXY
  8604  001B66  0012               	return		;funcret
  8605  001B68                     __end_of_LcClear:
  8606                           	callstack 0
  8607                           
  8608 ;; *************** function _LcGotoXY *****************
  8609 ;; Defined at:
  8610 ;;		line 106 in file "LcTLCD.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  Column          1    wreg     unsigned char 
  8613 ;;  Row             1   13[COMRAM] unsigned char 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  Column          1   18[COMRAM] unsigned char 
  8616 ;;  Fisics          2   14[COMRAM] int 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1
  8626 ;;      Params:         1       0       0
  8627 ;;      Locals:         5       0       0
  8628 ;;      Temps:          0       0       0
  8629 ;;      Totals:         6       0       0
  8630 ;;Total ram usage:        6 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 4
  8633 ;; This function calls:
  8634 ;;		_CantaIR
  8635 ;;		_WaitForBusy
  8636 ;; This function is called by:
  8637 ;;		_LcClear
  8638 ;;		_LcPutChar
  8639 ;;		_menu
  8640 ;;		_GLCDMotor
  8641 ;;		_motorJoc
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text67
  8646  00191E                     __ptext67:
  8647                           	callstack 0
  8648  00191E                     _LcGotoXY:
  8649                           	callstack 25
  8650                           
  8651                           ;incstack = 0
  8652                           ;LcGotoXY@Column stored from wreg
  8653  00191E  6E77               	movwf	LcGotoXY@Column^0,c
  8654                           
  8655                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  8656  001920  5072               	movf	LcGotoXY@Row^0,w,c
  8657  001922  B4D8               	btfsc	status,2,c
  8658  001924  D004               	goto	l5590
  8659  001926  0E00               	movlw	0
  8660  001928  6E76               	movwf	(_LcGotoXY$336+1)^0,c
  8661  00192A  0E40               	movlw	64
  8662  00192C  D003               	goto	L9
  8663  00192E                     l5590:
  8664  00192E  0E00               	movlw	0
  8665  001930  6E76               	movwf	(_LcGotoXY$336+1)^0,c
  8666  001932  0E00               	movlw	0
  8667  001934                     L9:
  8668  001934  6E75               	movwf	_LcGotoXY$336^0,c
  8669  001936  5077               	movf	LcGotoXY@Column^0,w,c
  8670  001938  2475               	addwf	_LcGotoXY$336^0,w,c
  8671  00193A  6E73               	movwf	LcGotoXY@Fisics^0,c
  8672  00193C  0E00               	movlw	0
  8673  00193E  2076               	addwfc	(_LcGotoXY$336+1)^0,w,c
  8674  001940  6E74               	movwf	(LcGotoXY@Fisics+1)^0,c
  8675                           
  8676                           ;LcTLCD.c: 127:  WaitForBusy();
  8677  001942  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8678                           
  8679                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  8680  001946  5073               	movf	LcGotoXY@Fisics^0,w,c
  8681  001948  0980               	iorlw	128
  8682  00194A  EC34  F00D         	call	_CantaIR
  8683                           
  8684                           ;LcTLCD.c: 130:  RowAct = Row;
  8685  00194E  C072  F034         	movff	LcGotoXY@Row,_RowAct
  8686                           
  8687                           ;LcTLCD.c: 131:  ColumnAct = Column;
  8688  001952  C077  F033         	movff	LcGotoXY@Column,_ColumnAct
  8689  001956  0012               	return		;funcret
  8690  001958                     __end_of_LcGotoXY:
  8691                           	callstack 0
  8692                           
  8693 ;; *************** function _WaitForBusy *****************
  8694 ;; Defined at:
  8695 ;;		line 212 in file "LcTLCD.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;		None
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  Busy            1   12[COMRAM] unsigned char 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      void 
  8702 ;; Registers used:
  8703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1
  8709 ;;      Params:         0       0       0
  8710 ;;      Locals:         1       0       0
  8711 ;;      Temps:          0       0       0
  8712 ;;      Totals:         1       0       0
  8713 ;;Total ram usage:        1 bytes
  8714 ;; Hardware stack levels used: 1
  8715 ;; Hardware stack levels required when called: 3
  8716 ;; This function calls:
  8717 ;;		_TiGetTics
  8718 ;;		_TiResetTics
  8719 ;; This function is called by:
  8720 ;;		_LcInit
  8721 ;;		_LcClear
  8722 ;;		_LcGotoXY
  8723 ;;		_LcPutChar
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text68
  8728  0018DE                     __ptext68:
  8729                           	callstack 0
  8730  0018DE                     _WaitForBusy:
  8731                           	callstack 25
  8732                           
  8733                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8734                           
  8735                           ;incstack = 0
  8736  0018DE  8694               	bsf	148,3,c	;volatile
  8737  0018E0  8494               	bsf	148,2,c	;volatile
  8738  0018E2  8294               	bsf	148,1,c	;volatile
  8739  0018E4  8094               	bsf	148,0,c	;volatile
  8740                           
  8741                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  8742  0018E6  9A8B               	bcf	139,5,c	;volatile
  8743                           
  8744                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  8745  0018E8  8E8C               	bsf	140,7,c	;volatile
  8746                           
  8747                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  8748  0018EA  5032               	movf	_Timer^0,w,c
  8749  0018EC  ECF7  F00D         	call	_TiResetTics
  8750  0018F0                     l5558:
  8751                           
  8752                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8753  0018F0  888B               	bsf	139,4,c	;volatile
  8754  0018F2  888B               	bsf	139,4,c	;volatile
  8755                           
  8756                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  8757  0018F4  0E00               	movlw	0
  8758  0018F6  B682               	btfsc	130,3,c	;volatile
  8759  0018F8  0E01               	movlw	1
  8760  0018FA  6E71               	movwf	WaitForBusy@Busy^0,c
  8761                           
  8762                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  8763  0018FC  988B               	bcf	139,4,c	;volatile
  8764                           
  8765                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  8766  0018FE  988B               	bcf	139,4,c	;volatile
  8767                           
  8768                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8769  001900  888B               	bsf	139,4,c	;volatile
  8770  001902  888B               	bsf	139,4,c	;volatile
  8771                           
  8772                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  8773  001904  988B               	bcf	139,4,c	;volatile
  8774                           
  8775                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  8776  001906  988B               	bcf	139,4,c	;volatile
  8777                           
  8778                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  8779  001908  5032               	movf	_Timer^0,w,c
  8780  00190A  EC7A  F00D         	call	_TiGetTics
  8781  00190E  506A               	movf	?_TiGetTics^0,w,c
  8782  001910  106B               	iorwf	(?_TiGetTics+1)^0,w,c
  8783  001912  A4D8               	btfss	status,2,c
  8784  001914  0012               	return	
  8785                           
  8786                           ;LcTLCD.c: 227:  } while(Busy);
  8787  001916  5071               	movf	WaitForBusy@Busy^0,w,c
  8788  001918  B4D8               	btfsc	status,2,c
  8789  00191A  0012               	return	
  8790  00191C  D7E9               	goto	l5558
  8791  00191E                     __end_of_WaitForBusy:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _CantaIR *****************
  8795 ;; Defined at:
  8796 ;;		line 180 in file "LcTLCD.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  IR              1    wreg     unsigned char 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  IR              1    7[COMRAM] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1
  8810 ;;      Params:         0       0       0
  8811 ;;      Locals:         1       0       0
  8812 ;;      Temps:          0       0       0
  8813 ;;      Totals:         1       0       0
  8814 ;;Total ram usage:        1 bytes
  8815 ;; Hardware stack levels used: 1
  8816 ;; Hardware stack levels required when called: 3
  8817 ;; This function calls:
  8818 ;;		_CantaPartAlta
  8819 ;;		_CantaPartBaixa
  8820 ;; This function is called by:
  8821 ;;		_LcInit
  8822 ;;		_LcClear
  8823 ;;		_LcGotoXY
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text69
  8828  001A68                     __ptext69:
  8829                           	callstack 0
  8830  001A68                     _CantaIR:
  8831                           	callstack 25
  8832                           
  8833                           ;incstack = 0
  8834                           ;CantaIR@IR stored from wreg
  8835  001A68  6E6C               	movwf	CantaIR@IR^0,c
  8836                           
  8837                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8838  001A6A  9694               	bcf	148,3,c	;volatile
  8839  001A6C  9494               	bcf	148,2,c	;volatile
  8840  001A6E  9294               	bcf	148,1,c	;volatile
  8841  001A70  9094               	bcf	148,0,c	;volatile
  8842                           
  8843                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  8844  001A72  9A8B               	bcf	139,5,c	;volatile
  8845                           
  8846                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  8847  001A74  9E8C               	bcf	140,7,c	;volatile
  8848                           
  8849                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  8850  001A76  888B               	bsf	139,4,c	;volatile
  8851                           
  8852                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  8853  001A78  506C               	movf	CantaIR@IR^0,w,c
  8854  001A7A  EC91  F00B         	call	_CantaPartAlta
  8855                           
  8856                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  8857  001A7E  888B               	bsf	139,4,c	;volatile
  8858                           
  8859                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  8860  001A80  988B               	bcf	139,4,c	;volatile
  8861                           
  8862                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  8863  001A82  988B               	bcf	139,4,c	;volatile
  8864                           
  8865                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  8866  001A84  888B               	bsf	139,4,c	;volatile
  8867                           
  8868                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  8869  001A86  506C               	movf	CantaIR@IR^0,w,c
  8870  001A88  EC5D  F00B         	call	_CantaPartBaixa
  8871                           
  8872                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8873  001A8C  888B               	bsf	139,4,c	;volatile
  8874                           
  8875                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  8876  001A8E  988B               	bcf	139,4,c	;volatile
  8877                           
  8878                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8879  001A90  8694               	bsf	148,3,c	;volatile
  8880  001A92  8494               	bsf	148,2,c	;volatile
  8881  001A94  8294               	bsf	148,1,c	;volatile
  8882  001A96  8094               	bsf	148,0,c	;volatile
  8883  001A98  0012               	return		;funcret
  8884  001A9A                     __end_of_CantaIR:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _CantaPartBaixa *****************
  8888 ;; Defined at:
  8889 ;;		line 173 in file "LcTLCD.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  c               1    wreg     unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  c               1    6[COMRAM] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1
  8903 ;;      Params:         0       0       0
  8904 ;;      Locals:         1       0       0
  8905 ;;      Temps:          1       0       0
  8906 ;;      Totals:         2       0       0
  8907 ;;Total ram usage:        2 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 2
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_CantaIR
  8914 ;;		_CantaData
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text70
  8919  0016BA                     __ptext70:
  8920                           	callstack 0
  8921  0016BA                     _CantaPartBaixa:
  8922                           	callstack 25
  8923                           
  8924                           ;incstack = 0
  8925                           ;CantaPartBaixa@c stored from wreg
  8926  0016BA  6E6B               	movwf	CantaPartBaixa@c^0,c
  8927                           
  8928                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8929  0016BC  A66B               	btfss	CantaPartBaixa@c^0,3,c
  8930  0016BE  D003               	goto	u5130
  8931  0016C0  6A6A               	clrf	??_CantaPartBaixa^0,c
  8932  0016C2  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8933  0016C4  D001               	goto	u5148
  8934  0016C6                     u5130:
  8935  0016C6  6A6A               	clrf	??_CantaPartBaixa^0,c
  8936  0016C8                     u5148:
  8937  0016C8  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8938  0016CA  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8939  0016CC  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8940  0016CE  508B               	movf	139,w,c	;volatile
  8941  0016D0  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8942  0016D2  0BF7               	andlw	-9
  8943  0016D4  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8944  0016D6  6E8B               	movwf	139,c	;volatile
  8945                           
  8946                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8947  0016D8  A46B               	btfss	CantaPartBaixa@c^0,2,c
  8948  0016DA  D003               	goto	u5150
  8949  0016DC  6A6A               	clrf	??_CantaPartBaixa^0,c
  8950  0016DE  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8951  0016E0  D001               	goto	u5168
  8952  0016E2                     u5150:
  8953  0016E2  6A6A               	clrf	??_CantaPartBaixa^0,c
  8954  0016E4                     u5168:
  8955  0016E4  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8956  0016E6  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8957  0016E8  508B               	movf	139,w,c	;volatile
  8958  0016EA  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8959  0016EC  0BFB               	andlw	-5
  8960  0016EE  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8961  0016F0  6E8B               	movwf	139,c	;volatile
  8962                           
  8963                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8964  0016F2  A26B               	btfss	CantaPartBaixa@c^0,1,c
  8965  0016F4  D003               	goto	u5170
  8966  0016F6  6A6A               	clrf	??_CantaPartBaixa^0,c
  8967  0016F8  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8968  0016FA  D001               	goto	u5188
  8969  0016FC                     u5170:
  8970  0016FC  6A6A               	clrf	??_CantaPartBaixa^0,c
  8971  0016FE                     u5188:
  8972  0016FE  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8973  001700  508B               	movf	139,w,c	;volatile
  8974  001702  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8975  001704  0BFD               	andlw	-3
  8976  001706  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8977  001708  6E8B               	movwf	139,c	;volatile
  8978                           
  8979                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8980  00170A  A06B               	btfss	CantaPartBaixa@c^0,0,c
  8981  00170C  D003               	goto	u5190
  8982  00170E  6A6A               	clrf	??_CantaPartBaixa^0,c
  8983  001710  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8984  001712  D001               	goto	u5208
  8985  001714                     u5190:
  8986  001714  6A6A               	clrf	??_CantaPartBaixa^0,c
  8987  001716                     u5208:
  8988  001716  508B               	movf	139,w,c	;volatile
  8989  001718  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8990  00171A  0BFE               	andlw	-2
  8991  00171C  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8992  00171E  6E8B               	movwf	139,c	;volatile
  8993  001720  0012               	return		;funcret
  8994  001722                     __end_of_CantaPartBaixa:
  8995                           	callstack 0
  8996                           
  8997 ;; *************** function _CantaPartAlta *****************
  8998 ;; Defined at:
  8999 ;;		line 166 in file "LcTLCD.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  c               1    wreg     unsigned char 
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;  c               1    6[COMRAM] unsigned char 
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1
  9013 ;;      Params:         0       0       0
  9014 ;;      Locals:         1       0       0
  9015 ;;      Temps:          1       0       0
  9016 ;;      Totals:         2       0       0
  9017 ;;Total ram usage:        2 bytes
  9018 ;; Hardware stack levels used: 1
  9019 ;; Hardware stack levels required when called: 2
  9020 ;; This function calls:
  9021 ;;		Nothing
  9022 ;; This function is called by:
  9023 ;;		_CantaIR
  9024 ;;		_CantaData
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text71
  9029  001722                     __ptext71:
  9030                           	callstack 0
  9031  001722                     _CantaPartAlta:
  9032                           	callstack 25
  9033                           
  9034                           ;incstack = 0
  9035                           ;CantaPartAlta@c stored from wreg
  9036  001722  6E6B               	movwf	CantaPartAlta@c^0,c
  9037                           
  9038                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9039  001724  AE6B               	btfss	CantaPartAlta@c^0,7,c
  9040  001726  D003               	goto	u5050
  9041  001728  6A6A               	clrf	??_CantaPartAlta^0,c
  9042  00172A  2A6A               	incf	??_CantaPartAlta^0,f,c
  9043  00172C  D001               	goto	u5068
  9044  00172E                     u5050:
  9045  00172E  6A6A               	clrf	??_CantaPartAlta^0,c
  9046  001730                     u5068:
  9047  001730  466A               	rlncf	??_CantaPartAlta^0,f,c
  9048  001732  466A               	rlncf	??_CantaPartAlta^0,f,c
  9049  001734  466A               	rlncf	??_CantaPartAlta^0,f,c
  9050  001736  508B               	movf	139,w,c	;volatile
  9051  001738  186A               	xorwf	??_CantaPartAlta^0,w,c
  9052  00173A  0BF7               	andlw	-9
  9053  00173C  186A               	xorwf	??_CantaPartAlta^0,w,c
  9054  00173E  6E8B               	movwf	139,c	;volatile
  9055                           
  9056                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9057  001740  AC6B               	btfss	CantaPartAlta@c^0,6,c
  9058  001742  D003               	goto	u5070
  9059  001744  6A6A               	clrf	??_CantaPartAlta^0,c
  9060  001746  2A6A               	incf	??_CantaPartAlta^0,f,c
  9061  001748  D001               	goto	u5088
  9062  00174A                     u5070:
  9063  00174A  6A6A               	clrf	??_CantaPartAlta^0,c
  9064  00174C                     u5088:
  9065  00174C  466A               	rlncf	??_CantaPartAlta^0,f,c
  9066  00174E  466A               	rlncf	??_CantaPartAlta^0,f,c
  9067  001750  508B               	movf	139,w,c	;volatile
  9068  001752  186A               	xorwf	??_CantaPartAlta^0,w,c
  9069  001754  0BFB               	andlw	-5
  9070  001756  186A               	xorwf	??_CantaPartAlta^0,w,c
  9071  001758  6E8B               	movwf	139,c	;volatile
  9072                           
  9073                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9074  00175A  AA6B               	btfss	CantaPartAlta@c^0,5,c
  9075  00175C  D003               	goto	u5090
  9076  00175E  6A6A               	clrf	??_CantaPartAlta^0,c
  9077  001760  2A6A               	incf	??_CantaPartAlta^0,f,c
  9078  001762  D001               	goto	u5108
  9079  001764                     u5090:
  9080  001764  6A6A               	clrf	??_CantaPartAlta^0,c
  9081  001766                     u5108:
  9082  001766  466A               	rlncf	??_CantaPartAlta^0,f,c
  9083  001768  508B               	movf	139,w,c	;volatile
  9084  00176A  186A               	xorwf	??_CantaPartAlta^0,w,c
  9085  00176C  0BFD               	andlw	-3
  9086  00176E  186A               	xorwf	??_CantaPartAlta^0,w,c
  9087  001770  6E8B               	movwf	139,c	;volatile
  9088                           
  9089                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9090  001772  A86B               	btfss	CantaPartAlta@c^0,4,c
  9091  001774  D003               	goto	u5110
  9092  001776  6A6A               	clrf	??_CantaPartAlta^0,c
  9093  001778  2A6A               	incf	??_CantaPartAlta^0,f,c
  9094  00177A  D001               	goto	u5128
  9095  00177C                     u5110:
  9096  00177C  6A6A               	clrf	??_CantaPartAlta^0,c
  9097  00177E                     u5128:
  9098  00177E  508B               	movf	139,w,c	;volatile
  9099  001780  186A               	xorwf	??_CantaPartAlta^0,w,c
  9100  001782  0BFE               	andlw	-2
  9101  001784  186A               	xorwf	??_CantaPartAlta^0,w,c
  9102  001786  6E8B               	movwf	139,c	;volatile
  9103  001788  0012               	return		;funcret
  9104  00178A                     __end_of_CantaPartAlta:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _Espera *****************
  9108 ;; Defined at:
  9109 ;;		line 161 in file "LcTLCD.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  Timer           1    wreg     unsigned char 
  9112 ;;  ms              2   12[COMRAM] int 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  Timer           1   15[COMRAM] unsigned char 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMRAM   BANK0   BANK1
  9124 ;;      Params:         2       0       0
  9125 ;;      Locals:         1       0       0
  9126 ;;      Temps:          1       0       0
  9127 ;;      Totals:         4       0       0
  9128 ;;Total ram usage:        4 bytes
  9129 ;; Hardware stack levels used: 1
  9130 ;; Hardware stack levels required when called: 3
  9131 ;; This function calls:
  9132 ;;		_TiGetTics
  9133 ;;		_TiResetTics
  9134 ;; This function is called by:
  9135 ;;		_LcInit
  9136 ;;		_LcClear
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text72
  9141  001B68                     __ptext72:
  9142                           	callstack 0
  9143  001B68                     _Espera:
  9144                           	callstack 25
  9145                           
  9146                           ;incstack = 0
  9147                           ;Espera@Timer stored from wreg
  9148  001B68  6E74               	movwf	Espera@Timer^0,c
  9149                           
  9150                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9151  001B6A  5074               	movf	Espera@Timer^0,w,c
  9152  001B6C  ECF7  F00D         	call	_TiResetTics
  9153  001B70                     l5584:
  9154  001B70  5074               	movf	Espera@Timer^0,w,c
  9155  001B72  EC7A  F00D         	call	_TiGetTics
  9156  001B76  5071               	movf	Espera@ms^0,w,c
  9157  001B78  5C6A               	subwf	?_TiGetTics^0,w,c
  9158  001B7A  506B               	movf	(?_TiGetTics+1)^0,w,c
  9159  001B7C  0A80               	xorlw	128
  9160  001B7E  6E73               	movwf	??_Espera^0,c
  9161  001B80  5072               	movf	(Espera@ms+1)^0,w,c
  9162  001B82  0A80               	xorlw	128
  9163  001B84  5873               	subwfb	??_Espera^0,w,c
  9164  001B86  B0D8               	btfsc	status,0,c
  9165  001B88  0012               	return	
  9166  001B8A  D7F2               	goto	l5584
  9167  001B8C                     __end_of_Espera:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function _TiResetTics *****************
  9171 ;; Defined at:
  9172 ;;		line 55 in file "TiTTimer.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  Handle          1    wreg     unsigned char 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  Handle          1    5[COMRAM] unsigned char 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/1
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1
  9186 ;;      Params:         0       0       0
  9187 ;;      Locals:         1       0       0
  9188 ;;      Temps:          0       0       0
  9189 ;;      Totals:         1       0       0
  9190 ;;Total ram usage:        1 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; Hardware stack levels required when called: 2
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_Espera
  9197 ;;		_WaitForBusy
  9198 ;;		_SMotor
  9199 ;;		_TeTeclat
  9200 ;;		_menu
  9201 ;;		_motorAltaveu
  9202 ;;		_GLCDMotor
  9203 ;;		_motorHora
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text73
  9208  001BEE                     __ptext73:
  9209                           	callstack 0
  9210  001BEE                     _TiResetTics:
  9211                           	callstack 25
  9212                           
  9213                           ;incstack = 0
  9214                           ;TiResetTics@Handle stored from wreg
  9215  001BEE  6E6A               	movwf	TiResetTics@Handle^0,c
  9216                           
  9217                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9218  001BF0  506A               	movf	TiResetTics@Handle^0,w,c
  9219  001BF2  0D03               	mullw	3
  9220  001BF4  50F3               	movf	243,w,c
  9221  001BF6  0F80               	addlw	low _s_Timers
  9222  001BF8  6ED9               	movwf	fsr2l,c
  9223  001BFA  6ADA               	clrf	fsr2h,c
  9224  001BFC  C003  FFDE         	movff	_h_Tics,postinc2
  9225  001C00  C004  FFDD         	movff	_h_Tics+1,postdec2
  9226  001C04  0012               	return		;funcret
  9227  001C06                     __end_of_TiResetTics:
  9228                           	callstack 0
  9229                           
  9230 ;; *************** function _TiGetTics *****************
  9231 ;; Defined at:
  9232 ;;		line 61 in file "TiTTimer.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;  Handle          1    wreg     unsigned char 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  Handle          1    9[COMRAM] unsigned char 
  9237 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  2    5[COMRAM] int 
  9240 ;; Registers used:
  9241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/1
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1
  9247 ;;      Params:         2       0       0
  9248 ;;      Locals:         3       0       0
  9249 ;;      Temps:          2       0       0
  9250 ;;      Totals:         7       0       0
  9251 ;;Total ram usage:        7 bytes
  9252 ;; Hardware stack levels used: 1
  9253 ;; Hardware stack levels required when called: 2
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_Espera
  9258 ;;		_WaitForBusy
  9259 ;;		_SMotor
  9260 ;;		_TeTeclat
  9261 ;;		_menu
  9262 ;;		_motorAltaveu
  9263 ;;		_GLCDMotor
  9264 ;;		_motorHora
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text74
  9269  001AF4                     __ptext74:
  9270                           	callstack 0
  9271  001AF4                     _TiGetTics:
  9272                           	callstack 25
  9273                           
  9274                           ;incstack = 0
  9275                           ;TiGetTics@Handle stored from wreg
  9276  001AF4  6E6E               	movwf	TiGetTics@Handle^0,c
  9277                           
  9278                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9279  001AF6  C003  F06F         	movff	_h_Tics,TiGetTics@actual	;volatile
  9280  001AFA  C004  F070         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9281                           
  9282                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9283  001AFE  506E               	movf	TiGetTics@Handle^0,w,c
  9284  001B00  0D03               	mullw	3
  9285  001B02  50F3               	movf	243,w,c
  9286  001B04  0F80               	addlw	low _s_Timers
  9287  001B06  6ED9               	movwf	fsr2l,c
  9288  001B08  6ADA               	clrf	fsr2h,c
  9289  001B0A  CFDE F06C          	movff	postinc2,??_TiGetTics
  9290  001B0E  CFDD F06D          	movff	postdec2,??_TiGetTics+1
  9291  001B12  506C               	movf	??_TiGetTics^0,w,c
  9292  001B14  5C6F               	subwf	TiGetTics@actual^0,w,c	;volatile
  9293  001B16  6E6A               	movwf	?_TiGetTics^0,c
  9294  001B18  506D               	movf	(??_TiGetTics+1)^0,w,c
  9295  001B1A  5870               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9296  001B1C  6E6B               	movwf	(?_TiGetTics+1)^0,c
  9297  001B1E  0012               	return		;funcret
  9298  001B20                     __end_of_TiGetTics:
  9299                           	callstack 0
  9300                           
  9301 ;; *************** function _GLCDInit *****************
  9302 ;; Defined at:
  9303 ;;		line 26 in file "GestioLCD.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1
  9317 ;;      Params:         0       0       0
  9318 ;;      Locals:         0       0       0
  9319 ;;      Temps:          0       0       0
  9320 ;;      Totals:         0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 3
  9324 ;; This function calls:
  9325 ;;		_TiGetTimer
  9326 ;; This function is called by:
  9327 ;;		_main
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text75
  9332  001D2A                     __ptext75:
  9333                           	callstack 0
  9334  001D2A                     _GLCDInit:
  9335                           	callstack 27
  9336                           
  9337                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9338                           
  9339                           ;incstack = 0
  9340  001D2A  ECAC  F00C         	call	_TiGetTimer	;wreg free
  9341  001D2E  6E19               	movwf	_timerGLCD^0,c
  9342  001D30  0012               	return		;funcret
  9343  001D32                     __end_of_GLCDInit:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _TiGetTimer *****************
  9347 ;; Defined at:
  9348 ;;		line 70 in file "TiTTimer.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      unsigned char 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1
  9362 ;;      Params:         0       0       0
  9363 ;;      Locals:         0       0       0
  9364 ;;      Temps:          1       0       0
  9365 ;;      Totals:         1       0       0
  9366 ;;Total ram usage:        1 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 2
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_LcInit
  9373 ;;		_Sinit
  9374 ;;		_TeInit
  9375 ;;		_Minit
  9376 ;;		_initAltaveu
  9377 ;;		_GLCDInit
  9378 ;;		_initHora
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text76
  9383  001958                     __ptext76:
  9384                           	callstack 0
  9385  001958                     _TiGetTimer:
  9386                           	callstack 27
  9387                           
  9388                           ;TiTTimer.c: 74:     counter=0;
  9389                           
  9390                           ;incstack = 0
  9391  001958  0E00               	movlw	0
  9392  00195A  6E2A               	movwf	_counter^0,c
  9393                           
  9394                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9395  00195C  D007               	goto	l5630
  9396  00195E                     l5622:
  9397                           
  9398                           ;TiTTimer.c: 76:         counter++;
  9399  00195E  2A2A               	incf	_counter^0,f,c
  9400                           
  9401                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9402  001960  0E08               	movlw	8
  9403  001962  182A               	xorwf	_counter^0,w,c
  9404  001964  A4D8               	btfss	status,2,c
  9405  001966  D002               	goto	l5630
  9406  001968  0EFF               	movlw	255
  9407  00196A  0012               	return	
  9408  00196C                     l5630:
  9409                           
  9410                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9411  00196C  502A               	movf	_counter^0,w,c
  9412  00196E  0D03               	mullw	3
  9413  001970  50F3               	movf	243,w,c
  9414  001972  0F82               	addlw	low (_s_Timers+2)
  9415  001974  6ED9               	movwf	fsr2l,c
  9416  001976  6ADA               	clrf	fsr2h,c
  9417  001978  04DE               	decf	postinc2,w,c
  9418  00197A  B4D8               	btfsc	status,2,c
  9419  00197C  D7F0               	goto	l5622
  9420                           
  9421                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9422  00197E  502A               	movf	_counter^0,w,c
  9423  001980  0D03               	mullw	3
  9424  001982  50F3               	movf	243,w,c
  9425  001984  0F82               	addlw	low (_s_Timers+2)
  9426  001986  6ED9               	movwf	fsr2l,c
  9427  001988  6ADA               	clrf	fsr2h,c
  9428  00198A  0E01               	movlw	1
  9429  00198C  6EDF               	movwf	indf2,c
  9430                           
  9431                           ;TiTTimer.c: 80:     return (counter);
  9432  00198E  502A               	movf	_counter^0,w,c
  9433  001990  0012               	return		;funcret
  9434  001992                     __end_of_TiGetTimer:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function _high_rsi *****************
  9438 ;; Defined at:
  9439 ;;		line 21 in file "main.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  1    wreg      void 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1
  9453 ;;      Params:         0       0       0
  9454 ;;      Locals:         0       0       0
  9455 ;;      Temps:          4       0       0
  9456 ;;      Totals:         4       0       0
  9457 ;;Total ram usage:        4 bytes
  9458 ;; Hardware stack levels used: 1
  9459 ;; Hardware stack levels required when called: 1
  9460 ;; This function calls:
  9461 ;;		__TiRSITimer
  9462 ;; This function is called by:
  9463 ;;		Interrupt level 2
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           	psect	intcode
  9468  000008                     __pintcode:
  9469                           	callstack 0
  9470  000008                     _high_rsi:
  9471                           	callstack 24
  9472                           
  9473                           ;incstack = 0
  9474  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9475  00000A  CFD9 F066          	movff	fsr2l,??_high_rsi
  9476  00000E  CFDA F067          	movff	fsr2h,??_high_rsi+1
  9477  000012  CFF3 F068          	movff	prodl,??_high_rsi+2
  9478  000016  CFF4 F069          	movff	prodh,??_high_rsi+3
  9479  00001A  ECF4  F00B         	call	__TiRSITimer	;wreg free
  9480  00001E  C069  FFF4         	movff	??_high_rsi+3,prodh
  9481  000022  C068  FFF3         	movff	??_high_rsi+2,prodl
  9482  000026  C067  FFDA         	movff	??_high_rsi+1,fsr2h
  9483  00002A  C066  FFD9         	movff	??_high_rsi,fsr2l
  9484  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9485  000030  0011               	retfie		f
  9486  000032                     __end_of_high_rsi:
  9487                           	callstack 0
  9488                           
  9489 ;; *************** function __TiRSITimer *****************
  9490 ;; Defined at:
  9491 ;;		line 37 in file "TiTTimer.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1
  9505 ;;      Params:         0       0       0
  9506 ;;      Locals:         0       0       0
  9507 ;;      Temps:          1       0       0
  9508 ;;      Totals:         1       0       0
  9509 ;;Total ram usage:        1 bytes
  9510 ;; Hardware stack levels used: 1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_high_rsi
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text78
  9519  0017E8                     __ptext78:
  9520                           	callstack 0
  9521  0017E8                     __TiRSITimer:
  9522                           	callstack 24
  9523                           
  9524                           ;TiTTimer.c: 39:     TMR0H = 223;
  9525                           
  9526                           ;incstack = 0
  9527  0017E8  0EDF               	movlw	223
  9528  0017EA  6ED7               	movwf	215,c	;volatile
  9529                           
  9530                           ;TiTTimer.c: 40:     TMR0L = 148;
  9531  0017EC  0E94               	movlw	148
  9532  0017EE  6ED6               	movwf	214,c	;volatile
  9533                           
  9534                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9535  0017F0  94F2               	bcf	242,2,c	;volatile
  9536                           
  9537                           ;TiTTimer.c: 42:     h_Tics++;
  9538  0017F2  4A03               	infsnz	_h_Tics^0,f,c
  9539  0017F4  2A04               	incf	(_h_Tics+1)^0,f,c
  9540                           
  9541                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9542  0017F6  0E48               	movlw	72
  9543  0017F8  5C03               	subwf	_h_Tics^0,w,c
  9544  0017FA  0EEE               	movlw	238
  9545  0017FC  5804               	subwfb	(_h_Tics+1)^0,w,c
  9546  0017FE  A0D8               	btfss	status,0,c
  9547  001800  0012               	return	
  9548                           
  9549                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9550  001802  0E00               	movlw	0
  9551  001804  6E2A               	movwf	_counter^0,c
  9552  001806                     i2l4114:
  9553  001806  0E07               	movlw	7
  9554  001808  642A               	cpfsgt	_counter^0,c
  9555  00180A  D001               	goto	i2l4118
  9556  00180C  D015               	goto	i2l4126
  9557  00180E                     i2l4118:
  9558                           
  9559                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9560  00180E  502A               	movf	_counter^0,w,c
  9561  001810  0D03               	mullw	3
  9562  001812  50F3               	movf	243,w,c
  9563  001814  0F82               	addlw	low (_s_Timers+2)
  9564  001816  6ED9               	movwf	fsr2l,c
  9565  001818  6ADA               	clrf	fsr2h,c
  9566  00181A  04DE               	decf	postinc2,w,c
  9567  00181C  A4D8               	btfss	status,2,c
  9568  00181E  D00A               	goto	i2l4122
  9569                           
  9570                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9571  001820  502A               	movf	_counter^0,w,c
  9572  001822  0D03               	mullw	3
  9573  001824  50F3               	movf	243,w,c
  9574  001826  0F80               	addlw	low _s_Timers
  9575  001828  6ED9               	movwf	fsr2l,c
  9576  00182A  6ADA               	clrf	fsr2h,c
  9577  00182C  5003               	movf	_h_Tics^0,w,c
  9578  00182E  5EDE               	subwf	postinc2,f,c
  9579  001830  5004               	movf	(_h_Tics+1)^0,w,c
  9580  001832  5ADD               	subwfb	postdec2,f,c
  9581  001834                     i2l4122:
  9582                           
  9583                           ;TiTTimer.c: 50:         }
  9584  001834  2A2A               	incf	_counter^0,f,c
  9585  001836  D7E7               	goto	i2l4114
  9586  001838                     i2l4126:
  9587                           
  9588                           ;TiTTimer.c: 51:         h_Tics=0;
  9589  001838  0E00               	movlw	0
  9590  00183A  6E04               	movwf	(_h_Tics+1)^0,c
  9591  00183C  0E00               	movlw	0
  9592  00183E  6E03               	movwf	_h_Tics^0,c
  9593  001840  0012               	return		;funcret
  9594  001842                     __end_of__TiRSITimer:
  9595                           	callstack 0
  9596                           
  9597                           	psect	rparam
  9598  0000                     
  9599                           	psect	temp
  9600  00007A                     btemp:
  9601                           	callstack 0
  9602  00007A                     	ds	1
  9603  0000                     int$flags	set	btemp
  9604  0000                     wtemp8	set	btemp+1
  9605  0000                     ttemp5	set	btemp+1
  9606  0000                     ttemp6	set	btemp+4
  9607  0000                     ttemp7	set	btemp+8
  9608                           
  9609                           	psect	idloc
  9610                           
  9611                           ;Config register IDLOC0 @ 0x200000
  9612                           ;	unspecified, using default values
  9613  200000                     	org	2097152
  9614  200000  FF                 	db	255
  9615                           
  9616                           ;Config register IDLOC1 @ 0x200001
  9617                           ;	unspecified, using default values
  9618  200001                     	org	2097153
  9619  200001  FF                 	db	255
  9620                           
  9621                           ;Config register IDLOC2 @ 0x200002
  9622                           ;	unspecified, using default values
  9623  200002                     	org	2097154
  9624  200002  FF                 	db	255
  9625                           
  9626                           ;Config register IDLOC3 @ 0x200003
  9627                           ;	unspecified, using default values
  9628  200003                     	org	2097155
  9629  200003  FF                 	db	255
  9630                           
  9631                           ;Config register IDLOC4 @ 0x200004
  9632                           ;	unspecified, using default values
  9633  200004                     	org	2097156
  9634  200004  FF                 	db	255
  9635                           
  9636                           ;Config register IDLOC5 @ 0x200005
  9637                           ;	unspecified, using default values
  9638  200005                     	org	2097157
  9639  200005  FF                 	db	255
  9640                           
  9641                           ;Config register IDLOC6 @ 0x200006
  9642                           ;	unspecified, using default values
  9643  200006                     	org	2097158
  9644  200006  FF                 	db	255
  9645                           
  9646                           ;Config register IDLOC7 @ 0x200007
  9647                           ;	unspecified, using default values
  9648  200007                     	org	2097159
  9649  200007  FF                 	db	255
  9650                           
  9651                           	psect	config
  9652                           
  9653                           ; Padding undefined space
  9654  300000                     	org	3145728
  9655  300000  FF                 	db	255
  9656                           
  9657                           ;Config register CONFIG1H @ 0x300001
  9658                           ;	Oscillator
  9659                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9660                           ;	Fail-Safe Clock Monitor Enable bit
  9661                           ;	FCMEN = 0x0, unprogrammed default
  9662                           ;	Internal/External Oscillator Switchover bit
  9663                           ;	IESO = 0x0, unprogrammed default
  9664  300001                     	org	3145729
  9665  300001  06                 	db	6
  9666                           
  9667                           ;Config register CONFIG2L @ 0x300002
  9668                           ;	unspecified, using default values
  9669                           ;	Power-up Timer Enable bit
  9670                           ;	PWRT = 0x1, unprogrammed default
  9671                           ;	Brown-out Reset Enable bits
  9672                           ;	BOR = 0x3, unprogrammed default
  9673                           ;	Brown-out Reset Voltage bits
  9674                           ;	BORV = 0x3, unprogrammed default
  9675  300002                     	org	3145730
  9676  300002  1F                 	db	31
  9677                           
  9678                           ;Config register CONFIG2H @ 0x300003
  9679                           ;	Watchdog Timer Enable bit
  9680                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9681                           ;	Watchdog Timer Postscale Select bits
  9682                           ;	WDTPS = 0xF, unprogrammed default
  9683  300003                     	org	3145731
  9684  300003  1E                 	db	30
  9685                           
  9686                           ; Padding undefined space
  9687  300004                     	org	3145732
  9688  300004  FF                 	db	255
  9689                           
  9690                           ;Config register CONFIG3H @ 0x300005
  9691                           ;	CCP2 MUX bit
  9692                           ;	CCP2MX = 0x1, unprogrammed default
  9693                           ;	PORTB A/D Enable bit
  9694                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  9695                           ;	Low-Power Timer1 Oscillator Enable bit
  9696                           ;	LPT1OSC = 0x0, unprogrammed default
  9697                           ;	MCLR Pin Enable bit
  9698                           ;	MCLRE = 0x1, unprogrammed default
  9699  300005                     	org	3145733
  9700  300005  81                 	db	129
  9701                           
  9702                           ;Config register CONFIG4L @ 0x300006
  9703                           ;	Stack Full/Underflow Reset Enable bit
  9704                           ;	STVREN = 0x1, unprogrammed default
  9705                           ;	Single-Supply ICSP Enable bit
  9706                           ;	LVP = OFF, Single-Supply ICSP disabled
  9707                           ;	Boot Block Size Select bits
  9708                           ;	BBSIZ = 0x0, unprogrammed default
  9709                           ;	Extended Instruction Set Enable bit
  9710                           ;	XINST = 0x0, unprogrammed default
  9711                           ;	Background Debugger Enable bit
  9712                           ;	DEBUG = 0x1, unprogrammed default
  9713  300006                     	org	3145734
  9714  300006  81                 	db	129
  9715                           
  9716                           ; Padding undefined space
  9717  300007                     	org	3145735
  9718  300007  FF                 	db	255
  9719                           
  9720                           ;Config register CONFIG5L @ 0x300008
  9721                           ;	unspecified, using default values
  9722                           ;	Code Protection bit
  9723                           ;	CP0 = 0x1, unprogrammed default
  9724                           ;	Code Protection bit
  9725                           ;	CP1 = 0x1, unprogrammed default
  9726  300008                     	org	3145736
  9727  300008  03                 	db	3
  9728                           
  9729                           ;Config register CONFIG5H @ 0x300009
  9730                           ;	unspecified, using default values
  9731                           ;	Boot Block Code Protection bitProtect Boot
  9732                           ;	CPB = 0x1, unprogrammed default
  9733                           ;	Data EEPROM Code Protection bit
  9734                           ;	CPD = 0x1, unprogrammed default
  9735  300009                     	org	3145737
  9736  300009  C0                 	db	192
  9737                           
  9738                           ;Config register CONFIG6L @ 0x30000A
  9739                           ;	unspecified, using default values
  9740                           ;	Write Protection bit
  9741                           ;	WRT0 = 0x1, unprogrammed default
  9742                           ;	Write Protection bit
  9743                           ;	WRT1 = 0x1, unprogrammed default
  9744  30000A                     	org	3145738
  9745  30000A  03                 	db	3
  9746                           
  9747                           ;Config register CONFIG6H @ 0x30000B
  9748                           ;	unspecified, using default values
  9749                           ;	Configuration Register Write Protection bit
  9750                           ;	WRTC = 0x1, unprogrammed default
  9751                           ;	Boot Block Write Protection bit
  9752                           ;	WRTB = 0x1, unprogrammed default
  9753                           ;	Data EEPROM Write Protection bit
  9754                           ;	WRTD = 0x1, unprogrammed default
  9755  30000B                     	org	3145739
  9756  30000B  E0                 	db	224
  9757                           
  9758                           ;Config register CONFIG7L @ 0x30000C
  9759                           ;	unspecified, using default values
  9760                           ;	Table Read Protection bit
  9761                           ;	EBTR0 = 0x1, unprogrammed default
  9762                           ;	Table Read Protection bit
  9763                           ;	EBTR1 = 0x1, unprogrammed default
  9764  30000C                     	org	3145740
  9765  30000C  03                 	db	3
  9766                           
  9767                           ;Config register CONFIG7H @ 0x30000D
  9768                           ;	unspecified, using default values
  9769                           ;	Boot Block Table Read Protection bit
  9770                           ;	EBTRB = 0x1, unprogrammed default
  9771  30000D                     	org	3145741
  9772  30000D  40                 	db	64
  9773                           tosu	equ	0xFFF
  9774                           tosh	equ	0xFFE
  9775                           tosl	equ	0xFFD
  9776                           stkptr	equ	0xFFC
  9777                           pclatu	equ	0xFFB
  9778                           pclath	equ	0xFFA
  9779                           pcl	equ	0xFF9
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           indf0	equ	0xFEF
  9787                           postinc0	equ	0xFEE
  9788                           postdec0	equ	0xFED
  9789                           preinc0	equ	0xFEC
  9790                           plusw0	equ	0xFEB
  9791                           fsr0h	equ	0xFEA
  9792                           fsr0l	equ	0xFE9
  9793                           wreg	equ	0xFE8
  9794                           indf1	equ	0xFE7
  9795                           postinc1	equ	0xFE6
  9796                           postdec1	equ	0xFE5
  9797                           preinc1	equ	0xFE4
  9798                           plusw1	equ	0xFE3
  9799                           fsr1h	equ	0xFE2
  9800                           fsr1l	equ	0xFE1
  9801                           bsr	equ	0xFE0
  9802                           indf2	equ	0xFDF
  9803                           postinc2	equ	0xFDE
  9804                           postdec2	equ	0xFDD
  9805                           preinc2	equ	0xFDC
  9806                           plusw2	equ	0xFDB
  9807                           fsr2h	equ	0xFDA
  9808                           fsr2l	equ	0xFD9
  9809                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    145
    Data        64
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     121
    BANK0           128      3      67
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _motorSIO->_UgetUserName
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcGotoXY
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcGotoXY
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_LcInit
    _main->_menu
    _menu->_LcPutChar
    _LcLCD->_LcPutChar
    _GLCDMotor->_LcPutChar

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25300
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0      22
                                              8 COMRAM     2     2      0
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    2858
                                              0 BANK0      2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      96
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    9035
                                              1 BANK0      2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     140
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     111
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2366
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1567
                                             16 COMRAM     1     0      1
                                              0 BANK0      3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8369
                                              1 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2366
                                              0 BANK0      1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     858
                                              8 COMRAM     2     0      2
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3154
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1    1895
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      3      43       4       52.3%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     13      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       7        0.0%
DATA                 0      0     174       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 04 20:37:12 2022

               TiResetTics@Handle 006A                  _loginNOTRegister 03CD  
                               _i 0020                                 _j 001F  
                UgetUserName@quin 006C         ??_UcheckExistsNotFinished 006A  
          __end_of_compareStrings 18DE                               l820 07E4  
                             l660 1496                               l708 1AB8  
                             l901 109C                               l653 1454  
                             l645 1432                               l655 145A  
                             l639 1B3C                               l487 0326  
                             l832 087C                               l648 1440  
                             l680 0D26                               l681 0D36  
                             l850 0A28                               l658 1490  
                             l683 0D42                               l739 1374  
                             l852 0A58                               l890 101E  
                             l892 1042                               l897 10D4  
                             l889 1004                               l898 105E  
                             l899 1078                               _tmp 0029  
                ??_CantaPartBaixa 006A                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 005B  
              __size_of_GLCDMotor 03D8                              l1032 12CA  
                            l1106 1272                              l2110 1C6A  
                            l2222 1A9E                              l2056 1C76  
                            l2082 19E4                              l2076 19D8  
                            l4030 18B6                              l2094 19FC  
                            l2440 1450                              l4024 189A  
                            l2088 19F0                              l4134 19AE  
                            l2470 14D2                              l2720 1090  
                            l2712 1074                              l6000 1510  
                            l4400 1210                              l4138 19B6  
                            l6012 152C                              l4412 123E  
                            l2734 10B4                              l6102 03AE  
                            l6006 151E                              l4422 1254  
                            l4414 1244                              l2744 10B8  
                            l6120 03D6                              l6104 03B4  
                            l6040 02CA                              l6032 1542  
                            l4408 1234                              l2682 1036  
                            l2674 101A                              l6204 04AC  
                            l6108 03BE                              l6028 153C  
                            l6150 043A                              l6134 0402  
                            l6062 0314                              l6046 02DE  
                            l4382 11D4                              l4438 1288  
                            l2696 105A                              l6232 04E8  
                            l6224 04D6                              l6216 04C4  
                            l6144 042A                              l6136 0408  
                            l6064 031A                              l6056 0302  
                            l4392 11F0                              l6306 05E8  
                            l6162 0452                              l6146 0430  
                            l6340 062E                              l6324 060E  
                            l6244 0516                              l6180 0482  
                            l6092 0386                              l6084 036C  
                            l6076 0344                              l5622 195E  
                            l5630 196C                              l6510 0858  
                            l6502 084A                              l6094 038C  
                            l6430 13AA                              l6422 139A  
                            l6414 1386                              l6600 0A02  
                            l6352 064E                              l6272 0572  
                            l6192 04A6                              l6416 138C  
                            l3938 1CA6                              l5810 0BFC  
                            l5802 0BE0                              l4922 0D3C  
                            l6282 059E                              l6274 0578  
                            l6258 0544                              l6186 04A0  
                            l6450 1404                              l6516 086C  
                            l4940 0D86                              l4932 0D78  
                            l3964 1C82                              l6356 0658  
                            l5558 18F0                              l5590 192E  
                            l5670 187C                              l6702 0F62  
                            l4942 0D8C                              l4926 0D4C  
                            l6286 05B6                              l6438 13D8  
                            l5584 1B70                              l6624 0A66  
                            l6616 0A52                              l6608 0A32  
                            l6552 08DC                              l5824 0C26  
                            l5816 0C12                              l5904 0CE8  
                            l4936 0D7C                              l6368 066C  
                            l5920 12B6                              l6634 0A82  
                            l6562 0928                              l6546 08B6  
                            l6482 07C2                              l6474 0796  
                            l6458 0752                              l6722 0FB4  
                            l6714 0FA0                              l4970 0E42  
                            l4954 0DD8                              l6378 068A  
                            l5676 188C                              l5668 1872  
                            l6628 0A6E                              l6572 0962  
                            l6556 08FE                              l6468 0788  
                            l6644 0ACC                              l5860 0C98  
                            l5844 0C70                              l5836 0C52  
                            l5828 0C32                              l5772 0B72  
                            l5756 0B3E                              l5748 0B2A  
                            l6708 0F92                              l6660 0EF2  
                            l4980 0E5A                              l6388 06A8  
                            l6638 0AA8                              l5694 1116  
                            l5774 0B78                              l6718 0FA8  
                            l6662 0EF6                              l6654 0EE2  
                            l4958 0DEA                              l6398 06B6  
                            l5942 12F0                              l6592 09D2  
                            l6488 07F2                              l5880 0CCC  
                            l5848 0C74                              l5784 0BA2  
                            l6728 0FC0                              l5944 12F6  
                            l5936 12E0                              l6578 0972  
                            l5874 0CBC                              l5866 0CA2  
                            l6682 0F26                              l6666 0F02  
                            l4986 0E68                              l4994 0E74  
                            l5884 0CD4                              l5796 0BC8  
                            l6676 0F18                              l6668 0F08  
                            l5964 133E                              l5956 1328  
                            l5972 134C                              l6764 168C  
                            l6694 0F4A                              l6688 0F3C  
                            l5984 14DE                              l6698 0F56  
                            STR_1 02BF                              STR_2 02B8  
                            STR_3 02AF                              STR_4 02A2  
                            STR_5 0292                              _LATD 000F8C  
                            u3060 18C2                              u5110 177C  
                            u5050 172E                              u5130 16C6  
                            u5108 1766                              u6100 0462  
                            u5070 174A                              u5150 16E2  
                            u5310 15AC                              u6030 03E6  
                            u5128 177E                              u5208 1716  
                            u5400 11C6                              u6120 0496  
                            u5090 1764                              u5170 16FC  
                            u5330 15C4                              u6130 0498  
                            u5068 1730                              u5148 16C8  
                            u5308 1594                              u5420 17AE  
                            u4380 0D46                              u5190 1714  
                            u5270 1576                              u5430 17D6  
                            u5088 174C                              u5168 16E4  
                            u5328 15AE                              u5600 0C0C  
                            u5520 0B96                              u5290 1592  
                            u5427 17A4                              u5188 16FE  
                            u5348 15C6                              u5437 17CC  
                            u5288 1578                              u5720 0CAA  
                            u5640 0C42                              u6610 0852  
                            u5730 0CC4                              u6540 0792  
                            u6640 0874                              u6900 0EA8  
                            u6910 0EB2                              u6920 0EC2  
                            u6930 0ED2                              u6916 0EB4  
                            u6908 0EAA                              u6926 0EC4  
                            u6936 0ED4                   ??_SsetNovaTecla 006A  
          __end_of_SIOcheckKrebut 1C6E                              _cap1 03C6  
                            _Rows 0036                              _cap2 03C5  
                            _main 164A                              _hora 005F  
                            _menu 02C8                              _nota 001D  
                 __end_of_HJugant 1D4A                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 007A  
                 __end_of_JJuguem 1CE2                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1B68  
                            start 0032                   __end_of_CantaIR 1A9A  
                    ?_initAltaveu 0065                     LcInit@columns 0075  
                    ___param_bank 000000                  __end_of_GLCDInit 1D32  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D4E  
                     Espera@Timer 0074                             ?_main 0065  
         __size_of_escriureEEPROM 002E                             ?_menu 0065  
                           _EEADR 000FA9                     ??_TiInitTimer 006A  
                           _T0CON 000FD5                   ?_compareStrings 006A  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 178A  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0065                             _TXREG 000FAD  
                           _SMSon 1D32                             _TXSTA 000FAC  
                     _MNovaLletra 1D12                             _Minit 1D1A  
                __end_of_HGetTime 1D4E                             _Sinit 1D0A  
                           _Timer 0032                             _Uinit 1428  
                           _rebut 0008                             _s_ptr 0005  
                           _nou_s 03CF             __end_of_JoystickMotor 10EC  
                 _HActualitzaHora 1A00       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03C0                             tablat 000FF5  
                     _LcNewString 1C92                     ??_TiResetTics 006A  
                 ?_SIOcheckKrebut 0065                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0008                __size_of_HNouSegon 000C  
                __end_of_LcGotoXY 1958                  __end_of_LcLliure 1CAA  
                   ??__TiRSITimer 0065                        _TiGetTimer 1958  
         EscriuPrimeraOrdre@ordre 006B                  __end_of_JendGame 1D6E  
                     ?_SIOendGame 0065                   __initialization 15D4  
              __size_of_CantaData 0032                      __end_of_main 16BA  
          __end_of_HClearNouSegon 1D52                      __end_of_menu 0750  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 0065  
               __end_of_GLCDMotor 0B28                  __end_of_TeTeclat 1002  
                   _indexNextUser 0022                            ??_main 0078  
                          ??_menu 00C1                __size_of_LcPutChar 0056  
                   __activetblptr 000002                     _ultimaTeclaAD 000F  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 0011  
                GLCDMotor@length2 0010                        _JnovaTecla 1CCA  
                          ?_LcLCD 0065                            ?_SMSon 0065  
                          ?_Minit 0065                            ?_Sinit 0065  
                          ?_Uinit 0065                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 19CA  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 006A                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 006A                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 006A                         ??_LcClear 0078  
                       ??_CantaIR 006C                            i2l4122 1834  
                          i2l4114 1806                            i2l4126 1838  
                          i2l4118 180E                    LcGotoXY@Fisics 0073  
                  LcGotoXY@Column 0077                     ??_WaitForBusy 0071  
              __size_of_TiGetTics 002C                            _SPBRGH 000FB0  
                  _sumaPulsacions 0031                            _SMSoff 1D38  
              SIONovaDireccio@num 006A                            _LcInit 10EC  
                    _MNouJoystick 1D22                    _UgetNumUsuaris 1D56  
                          _SMotor 0B28               escriureCharEEPROM@c 006B  
                          _TeInit 1D02                            _Espera 1B68  
                    _LcGotoXY$336 0075                            _Krebut 03C0  
                          _RowAct 0034               __end_of_TiResetTics 1C06  
                          Uinit@i 006C                            Uinit@j 006D  
                __end_of_high_rsi 0032                            _h_Tics 0003  
                 ?_HClearNouSegon 0065                  __end_of_initHora 1CEA  
                          _borram 03CA               __end_of__TiRSITimer 1842  
                __end_of_menuList 0292                            clear_0 161A  
                          clear_1 1626                            clear_2 1636  
                          _jugant 03C4                            _segons 000C  
                      _UenviaChar 1C52                            isa$std 000001  
                      UenviaPas@c 006B       __size_of_EscriuPrimeraOrdre 007A  
               __end_of_HNouSegon 1C7A                      __pdataCOMRAM 0044  
          __size_of_CantaPartAlta 0068                  __end_of_motorSIO 12B4  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 1A36  
               ??_SIONovaDireccio 006A                  __end_of_motorJoc 1372  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentUsrIndex 0024               __size_of_SIOendGame 0004  
               __end_of_CantaData 1A68                      TeTeclat@cols 002C  
                       ?_GLCDInit 0065                     ?_UcheckExists 0065  
                      __accesstop 0080           __end_of__initialization 163C  
          __end_of_UgetNumUsuaris 1D5A                 __end_of_LcPutChar 1898  
                   _JnovaDireccio 1CD2                  JnovaDireccio@dir 006A  
                   ___rparam_used 000001                     __end_of_LcLCD 17E8  
                     ?_TiGetTimer 0065                     __end_of_SMSon 1D38  
               SIONovaTecla@tecla 006A                    __pcstackCOMRAM 0065  
                   __end_of_Minit 1D22               __end_of_WaitForBusy 191E  
                   __end_of_Sinit 1D12                     __end_of_Uinit 14DC  
               __end_of_NoFerMenu 1D6A                         ?_HGetTime 006A  
                    __pidataBANK0 1BCE              __size_of_initAltaveu 0008  
               __end_of_URegister 1D62                 __end_of_HnoJugant 1D46  
               __end_of_SiFerMenu 1D66                    _escriureEEPROM 1A9A  
               __end_of_TiGetTics 1B20                       _TiInitTimer 1992  
                     ?_JnovaTecla 0065                           ??_LcLCD 0078  
                         ??_SMSon 006A                         ?_LcGotoXY 0072  
                       ?_LcLliure 0065                           ??_Minit 006B  
                         ??_Sinit 006B                   JnovaTecla@tecla 006A  
                         ??_Uinit 006A              __size_of_init_eusart 0016  
                       ?_JendGame 0065                    ??_UcheckExists 006A  
             MNouJoystick@posicio 006A                        ??_GLCDInit 006B  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 002C  
                       ?_TeTeclat 0065                       _TiResetTics 1BEE  
                 ?_UgetNumUsuaris 0065                    ?_JnovaDireccio 0065  
                   ??_UmotorUsers 006F                     ?_JoystickInit 0065  
                         ?_SMSoff 0065                           ?_LcInit 0075  
                   _CantaPartAlta 1722                           ?_SMotor 0065  
                         ?_TeInit 0065                           ?_Espera 0071  
               __end_of_UenviaPas 1C52                       __TiRSITimer 17E8  
             _indexNextUserStruct 0021                        ??_HGetTime 006C  
                   ?_UgetUserName 006A                  ??_compareStrings 006D  
          __end_of_escriureEEPROM 1AC8                           _BAUDCON 000FB8  
                     ?_UenviaChar 006A              __size_of_playAltaveu 0004  
              __size_of_motorHora 007E            __size_of_MsetNovaTecla 0008  
                         LcInit@i 00C1                  ?_HActualitzaHora 006A  
                      ??_LcGotoXY 0073                      ?_MNovaLletra 0065  
                      ??_LcLliure 006A                  ??_SIOcheckKrebut 006A  
             __size_of_TiGetTimer 003A                        ??_JendGame 006A  
                         _HJugant 1D46                         ?_high_rsi 0065  
                         _JJuguem 1CDA                           _LcClear 1B44  
                         _CantaIR 1A68                      ?_LcNewString 006D  
                  ??_JoystickInit 006A                         ?_initHora 0065  
                      ??_TeTeclat 0071                       _WaitForBusy 18DE  
                  ?_CantaPartAlta 0065                           _Columns 0035  
           __end_of_SsetNovaTecla 1CFA                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00E6                           __Hparam 0000  
                 __size_of_SMotor 01FC               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000                      ??_SIOendGame 006A  
                       ?_motorSIO 0065                         ?_motorJoc 0065  
                  ??_UgetUserName 006C               __end_of_UmotorUsers 0E9E  
        ?_UcheckExistsNotFinished 0065                   ?_escriureEEPROM 0065  
                   ?_motorAltaveu 0065                      __psmallconst 0200  
          _escriure2usuarisStruct 1AC8                           __pcinit 15D4  
    __end_of_UcheckExistsGetError 1CCA                           _ferMenu 03C8  
                      _init_ports 1BAE                           __ramtop 0200  
                         __ptext0 164A                           __ptext1 11D2  
                         __ptext2 12B4                           __ptext3 19CA  
                         __ptext4 1D3E                           __ptext5 1C62  
                         __ptext6 1CAA                           __ptext7 1CB2  
                         __ptext8 1CBA                           __ptext9 1D42  
                       _T0CONbits 000FD5                         _GLCDMotor 0750  
                       CantaIR@IR 006C                           _counter 002A  
                         _horaTmp 0040            conversorJoystick@direc 006A  
                     UenviaChar@c 006B        __end_of_escriureCharEEPROM 1B44  
                LcNewString@new_s 006D                   WaitForBusy@Busy 0071  
                     Uinit@j_1140 006E                           _userPtr 0001  
               GLCDMostraMenu@num 006A                __end_of_SIOendGame 1D42  
                      ??_high_rsi 0066              end_of_initialization 163C  
                         _usuaris 0100                   ??_JnovaDireccio 006A  
                      ??_initHora 006B           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 006E  
                   _MsetNovaTecla 1CFA               __size_of_UenviaChar 0010  
               _conversorJoystick 19CA                 __end_of_motorHora 155A  
                ??_HClearNouSegon 006A                        _novaLletra 0059  
              ?_conversorJoystick 0065                   _usuariActualSIO 0052  
                      ??_motorSIO 006D                        ??_motorJoc 00C0  
                 TiGetTics@actual 006F                     ?_SIONovaTecla 0065  
                      GLCDMotor@j 0016                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1CBA  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0071  
                      _numUsuaris 0023              __end_of_UcheckExists 1D5E  
                   TeTeclat@files 002B               ??_conversorJoystick 006A  
              SIOStartGame@usuari 006A            __size_of_JoystickMotor 00EA  
                   TeTeclat@state 002D                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0065  
                   ?_SIOStartGame 0065                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _HNouSegon 1C6E  
                  _GLCDMostraMenu 1C86         __end_of_conversorJoystick 1A00  
                 ??_CantaPartAlta 006A                    ?_MsetNovaTecla 0065  
                       _CantaData 1A36                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0D24                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 1C86                    __end_of_SMSoff 1D3E  
                    ??_TiGetTimer 006A                    __end_of_LcInit 11D2  
                  ??_SIONovaTecla 006A                    __end_of_SMotor 0D24  
                       _LcPutChar 1842                    __end_of_TeInit 1D0A  
               motorAltaveu@state 001A                    __end_of_Espera 1B8C  
                  GLCDMotor@state 0017        __end_of_EscriuPrimeraOrdre 15D4  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1B8C  
                     ?_init_ports 0065                         _NoFerMenu 1D66  
                       _ColumnAct 0033              __end_of_JoystickInit 1C42  
                  ??_SIOStartGame 006A                         _URegister 1D5E  
                       _HnoJugant 1D42                      ?_TiInitTimer 0065  
                    ??_JnovaTecla 006A                         _SiFerMenu 1D62  
             start_initialization 15D4                         _TiGetTics 1AF4  
          __end_of_GLCDMostraMenu 1C92                        ?_HNouSegon 0065  
                ??_UgetNumUsuaris 006A                  UmotorUsers@state 001E  
               __size_of_LcGotoXY 003A              __end_of_UgetUserName 1C30  
              __end_of_TiGetTimer 1992                     JJuguem@usuari 006A  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 1002                 __size_of_JendGame 0004  
                    ?_TiResetTics 0065                        ?_CantaData 0065  
            _UcheckExistsGetError 1CC2           __end_of_SIONovaDireccio 1CC2  
            __size_of_LcNewString 000C                          ??_SMSoff 006A  
                        ??_LcInit 0076                         _NovaTecla 005A  
               __size_of_TeTeclat 0164                          ??_SMotor 0071  
                        ??_TeInit 006B                      ?__TiRSITimer 0065  
                   ??_initAltaveu 006B                          ??_Espera 0073  
              __end_of_JnovaTecla 1CD2                        ?_LcPutChar 0065  
                       _UenviaPas 1C42                       __pdataBANK0 00A1  
                  motorHora@state 000B                      _menuDaltGLCD 0018  
                    ??_UenviaChar 006B                        ?_NoFerMenu 0065  
                     ??_GLCDMotor 00C1                        ?_URegister 0065  
                      ?_HnoJugant 0065                     ??_init_eusart 006A  
                      ?_SiFerMenu 0065                       __pbssCOMRAM 0001  
                   __pcstackBANK0 00C0                        ?_TiGetTics 006A  
                 ?_GLCDMostraMenu 0065                          ?_HJugant 0065  
                  ?_JoystickMotor 0065                   ??_MsetNovaTecla 006A  
            __end_of_motorAltaveu 1428                          ?_JJuguem 0065  
                        ?_LcClear 0065                          ?_CantaIR 0065  
      __size_of_conversorJoystick 0036                    _CantaPartBaixa 16BA  
           ?_UcheckExistsGetError 0065                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0065               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 006A                SsetNovaTecla@tecla 006A  
              __end_of_UenviaChar 1C62                 __size_of_initHora 0008  
                ??_escriureEEPROM 006A             __size_of_UcheckExists 0004  
         ?_escriure2usuarisStruct 0065                         __pintcode 0008  
                   ??_playAltaveu 006A                        ?_UenviaPas 006A  
               __size_of_motorSIO 00E2                 __size_of_motorJoc 00BE  
                 CantaPartBaixa@c 006B               __end_of_initAltaveu 1CF2  
                       _arrayZero 004D                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1CBA                    __size_of_Sinit 0008  
                     ??_HNouSegon 006A                    __size_of_Uinit 00B4  
                     _direccioSIO 0051                       _direccioJoc 000A  
          __end_of_CantaPartBaixa 1722                JoystickMotor@state 000E  
                        _GLCDInit 1D2A                escriureEEPROM@caca 006A  
                     _do_register 03CB               __end_of_init_eusart 1C1C  
                       _newString 03C7                      _UcheckExists 1D5A  
                       _loginText 00B8                         _jugantSIO 03C1  
        __size_of_HActualitzaHora 0036                         _jugantJoc 03C2  
                     ??_CantaData 006C                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0065                  ?_SIONovaDireccio 0065  
            __end_of_SIOStartGame 1CB2                     UenviaChar@pos 006A  
  __end_of_escriure2usuarisStruct 1AF4                _escriureCharEEPROM 1B20  
                       _novaTecla 005D                     motorSIO@state 0007  
                     ??_LcPutChar 0078                         _timerGLCD 0019  
                       _motorHora 14DC                          _RCONbits 000FD0  
                       _reproduir 03C9                          _HGetTime 1D4A  
           __size_of_JoystickInit 0012                         _timerHora 000D  
                       _timerMenu 0028               ?_escriureCharEEPROM 006A  
                     ??_NoFerMenu 006A                        _ADCON0bits 000FC2  
                     ??_URegister 006A                       ??_HnoJugant 006A  
                     ??_SiFerMenu 006A             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1D56            __size_of_SsetNovaTecla 0008  
                        Espera@ms 0071                         _zeroTecla 0030  
                        _LcGotoXY 191E                    _usuariLoguejat 0057  
                        _LcLliure 1C9E                       ??_TiGetTics 006C  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                 ??_JoystickMotor 006B                     GLCDMotor@max1 0056  
                   GLCDMotor@max2 0055                     GLCDMotor@min1 0015  
                   GLCDMotor@min2 0014                      _teclaPremuda 00A1  
                        _JendGame 1D6A                         _usuariJoc 0054  
                     LcGotoXY@Row 0072                         copy_data0 15E8  
                       copy_data1 1608              ??_escriureCharEEPROM 006B  
                 ?_CantaPartBaixa 0065                  __size_of_HJugant 0004  
          ??_UcheckExistsGetError 006A             escriureCharEEPROM@pos 006A  
                __size_of_JJuguem 0008                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0E9E  
           __end_of_JnovaDireccio 1CDA                    ??_MNouJoystick 006A  
                    ?_UmotorUsers 0065                      _JoystickInit 1C30  
                      _EECON1bits 000FA6                      _registerText 00AD  
                     _indexUsuari 0026           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0018                     motorJoc@state 0009  
                        __Hrparam 0000                       _initAltaveu 1CEA  
                       menu@state 0025                          __Lrparam 0000  
                      ?_motorHora 0065              __size_of__TiRSITimer 005A  
                    _UgetUserName 1C1C                       ??_UenviaPas 006B  
                    _novaDireccio 0058                      ??_init_ports 006A  
             HActualitzaHora@nova 006A                       _init_eusart 1C06  
           __size_of_motorAltaveu 00B6                      _novaTeclaJOC 0053  
                    _novaTeclaSIO 0050                   _do_check_exists 03CC  
                        __ptext10 1C6E                          __ptext11 1D46  
              _EscriuPrimeraOrdre 155A                          __ptext20 1C42  
                        __ptext12 1D4A                          __ptext21 1C52  
                        __ptext13 1D4E                          __ptext30 1CCA  
                        __ptext22 1C7A                          __ptext14 14DC  
                        __ptext31 1CD2                          __ptext23 1CC2  
                        __ptext15 1D52                          __ptext40 1A9A  
                        __ptext32 1D6A                          __ptext24 1D5A  
                        __ptext16 1372                          __ptext41 1AC8  
                        __ptext33 1CDA                          __ptext25 1D5E  
                        __ptext17 02C8                          __ptext50 1D02  
                        __ptext42 0D24                          __ptext34 1A00  
                        __ptext26 1D62                          __ptext18 1C1C  
                        __ptext51 1D0A                          __ptext43 1B20  
                        __ptext35 1C86                          __ptext27 1D32  
                        __ptext19 1D56                          __ptext60 1C30  
                        __ptext52 0B28                          __ptext44 1898  
                        __ptext36 1BAE                          __ptext28 1D38  
                        __ptext61 0750                          __ptext53 1D12  
                        __ptext45 1428                          __ptext37 1C06  
                        __ptext29 1D66                          __ptext70 16BA  
                        __ptext62 1842                          __ptext54 1D1A  
                        __ptext46 1992                          __ptext38 1CE2  
                        __ptext71 1722                          __ptext63 1A36  
                        __ptext55 178A                          __ptext47 0E9E  
                        __ptext39 1CEA                          __ptext72 1B68  
                        __ptext64 1C92                          __ptext56 10EC  
                        __ptext48 1CF2                          __ptext73 1BEE  
                        __ptext65 1C9E                          __ptext57 155A  
                        __ptext49 1CFA                          __ptext74 1AF4  
                        __ptext66 1B44                          __ptext58 1002  
                        __ptext75 1D2A                          __ptext67 191E  
                        __ptext59 1D22                          __ptext76 1958  
                        __ptext68 18DE                          __ptext69 1A68  
                        __ptext78 17E8                    CantaPartAlta@c 006B  
                     _lletraASCII 005E                          _high_rsi 0008  
                        _copsNota 001B                          _s_Timers 0080  
                        _initHora 1CE2                       _lletraInici 0044  
                        _menuDalt 0027                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0065                     __size_of_main 0070  
                   __size_of_menu 0488             __end_of_CantaPartAlta 178A  
                   CantaData@Data 006C                          _tiTeclat 002E  
              __end_of_init_ports 1BCE                          _setSMSon 03CE  
                   _SsetNovaTecla 1CF2              __size_of_WaitForBusy 0040  
                        _nouSegon 03C3                          _motorSIO 11D2  
               ??_HActualitzaHora 006B                          _motorJoc 12B4  
                        _timerSMS 005C                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 006A  
                     _playAltaveu 1D52                      _motorAltaveu 1372  
         __size_of_HClearNouSegon 0004              ??_EscriuPrimeraOrdre 006A  
                      LcInit@rows 00C0                  ??_GLCDMostraMenu 006A  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1C7A  
                      _INTCONbits 000FF2                     ??_MNovaLletra 006A  
           __size_of_SIOStartGame 0008                     ??_LcNewString 006F  
                        intlevel2 0000                      _timerAltaveu 001C  
                      LcPutChar@c 00C0                    ?_SsetNovaTecla 0065  
               MNovaLletra@lletra 006A                   compareStrings@a 006A  
                 compareStrings@b 006B                       ??_motorHora 0071  
                    _SIONovaTecla 1CB2                       GLCDMotor@k1 0013  
                     GLCDMotor@k2 0012              __end_of_MNouJoystick 1D2A  
                    _SIOStartGame 1CAA                    _compareStrings 1898  
                     _tmpPassword 0098               __end_of_MNovaLletra 1D1A  
           __end_of_MsetNovaTecla 1D02                       _tmpUsername 0037  
                  _SIOcheckKrebut 1C62                       SMotor@state 002F  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1C9E  
            __size_of_UmotorUsers 017A                        _SIOendGame 1D3E  
