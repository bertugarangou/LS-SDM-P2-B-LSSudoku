

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 27 11:40:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.32
    68                           ; Generated 02/02/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4321 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  001016                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _lletraInici
   108  001016  41                 	db	65
   109  001017  44                 	db	68
   110  001018  47                 	db	71
   111  001019  4A                 	db	74
   112  00101A  4D                 	db	77
   113  00101B  50                 	db	80
   114  00101C  54                 	db	84
   115  00101D  57                 	db	87
   116  00101E  00                 	db	0
   117                           
   118                           ;initializer for _novaLletra
   119  00101F  FF                 	db	255
   120                           
   121                           ;initializer for _NovaTecla
   122  001020  FF                 	db	255
   123                           
   124                           ;initializer for _ultimaTecla
   125  001021  FF                 	db	255
   126                           
   127                           ;initializer for _timerSMS
   128  001022  FF                 	db	255
   129                           
   130                           ;initializer for _novaTecla
   131  001023  FF                 	db	255
   132                           
   133                           ;initializer for _lletraASCII
   134  001024  FF                 	db	255
   135                           
   136                           ;initializer for _teclaPremuda
   137  001025  01                 	db	1
   138  001026  02                 	db	2
   139  001027  03                 	db	3
   140  001028  04                 	db	4
   141  001029  05                 	db	5
   142  00102A  06                 	db	6
   143  00102B  07                 	db	7
   144  00102C  08                 	db	8
   145  00102D  09                 	db	9
   146  00102E  0A                 	db	10
   147  00102F  00                 	db	0
   148  001030  0B                 	db	11
   149  0000                     _EECON2	set	4007
   150  0000                     _EEDATA	set	4008
   151  0000                     _EEADR	set	4009
   152  0000                     _T0CONbits	set	4053
   153  0000                     _TMR0L	set	4054
   154  0000                     _TMR0H	set	4055
   155  0000                     _T0CON	set	4053
   156  0000                     _INTCONbits	set	4082
   157  0000                     _RCONbits	set	4048
   158  0000                     _PORTDbits	set	3971
   159  0000                     _EECON1bits	set	4006
   160  0000                     _LATD	set	3980
   161  0000                     _TRISD	set	3989
   162  0000                     _TRISC	set	3988
   163  0000                     _LATBbits	set	3978
   164  0000                     _TRISB	set	3987
   165  0000                     _TRISA	set	3986
   166  0000                     _PORTCbits	set	3970
   167  0000                     _LATDbits	set	3980
   168  0000                     _LATCbits	set	3979
   169  0000                     _TRISDbits	set	3989
   170  0000                     _TRISCbits	set	3988
   171                           
   172                           	psect	smallconst
   173  000200                     __psmallconst:
   174                           	callstack 0
   175  000200  00                 	db	0
   176  000201                     STR_2:
   177  000201  32                 	db	50	;'2'
   178  000202  2E                 	db	46
   179  000203  52                 	db	82	;'R'
   180  000204  45                 	db	69	;'E'
   181  000205  47                 	db	71	;'G'
   182  000206  49                 	db	73	;'I'
   183  000207  53                 	db	83	;'S'
   184  000208  54                 	db	84	;'T'
   185  000209  45                 	db	69	;'E'
   186  00020A  52                 	db	82	;'R'
   187  00020B  00                 	db	0
   188  00020C                     STR_1:
   189  00020C  31                 	db	49	;'1'
   190  00020D  2E                 	db	46
   191  00020E  4C                 	db	76	;'L'
   192  00020F  4F                 	db	79	;'O'
   193  000210  47                 	db	71	;'G'
   194  000211  49                 	db	73	;'I'
   195  000212  4E                 	db	78	;'N'
   196  000213  00                 	db	0
   197  000214                     STR_4:
   198  000214  50                 	db	80	;'P'
   199  000215  53                 	db	83	;'S'
   200  000216  57                 	db	87	;'W'
   201  000217  44                 	db	68	;'D'
   202  000218  3A                 	db	58	;':'
   203  000219  20                 	db	32
   204  00021A  00                 	db	0
   205  00021B                     STR_3:
   206  00021B  55                 	db	85	;'U'
   207  00021C  53                 	db	83	;'S'
   208  00021D  45                 	db	69	;'E'
   209  00021E  52                 	db	82	;'R'
   210  00021F  3A                 	db	58	;':'
   211  000220  20                 	db	32
   212  000221  00                 	db	0
   213  000222  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218  000D22                     __pcinit:
   219                           	callstack 0
   220  000D22                     start_initialization:
   221                           	callstack 0
   222  000D22                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Initialize objects allocated to COMRAM (27 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  000D22  0E16               	movlw	low __pidataCOMRAM
   228  000D24  6EF6               	movwf	tblptrl,c
   229  000D26  0E10               	movlw	high __pidataCOMRAM
   230  000D28  6EF7               	movwf	tblptrh,c
   231  000D2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  000D2C  6EF8               	movwf	tblptru,c
   233  000D2E  EE00  F047         	lfsr	0,__pdataCOMRAM
   234  000D32  EE10 F01B          	lfsr	1,27
   235  000D36                     copy_data0:
   236  000D36  0009               	tblrd		*+
   237  000D38  CFF5 FFEE          	movff	tablat,postinc0
   238  000D3C  50E5               	movf	postdec1,w,c
   239  000D3E  50E1               	movf	fsr1l,w,c
   240  000D40  E1FA               	bnz	copy_data0
   241                           
   242                           ; Clear objects allocated to BANK1 (184 bytes)
   243  000D42  EE01  F000         	lfsr	0,__pbssBANK1
   244  000D46  0EB8               	movlw	184
   245  000D48                     clear_0:
   246  000D48  6AEE               	clrf	postinc0,c
   247  000D4A  06E8               	decf	wreg,f,c
   248  000D4C  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   251  000D4E  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   252                           
   253                           ; Clear objects allocated to COMRAM (70 bytes)
   254  000D50  EE00  F001         	lfsr	0,__pbssCOMRAM
   255  000D54  0E46               	movlw	70
   256  000D56                     clear_1:
   257  000D56  6AEE               	clrf	postinc0,c
   258  000D58  06E8               	decf	wreg,f,c
   259  000D5A  E1FD               	bnz	clear_1
   260  000D5C                     end_of_initialization:
   261                           	callstack 0
   262  000D5C                     __end_of__initialization:
   263                           	callstack 0
   264  000D5C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   265  000D5E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   266  000D60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  000D62  6EF8               	movwf	tblptru,c
   268  000D64  0100               	movlb	0
   269  000D66  EF6B  F006         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bitbssCOMRAM
   272  0003C0                     __pbitbssCOMRAM:
   273                           	callstack 0
   274  0003C0                     _reproduir:
   275                           	callstack 0
   276  0003C0                     	ds	1
   277  0003C1                     _do_register:
   278                           	callstack 0
   279  0003C1                     	ds	1
   280  0003C2                     _return_error:
   281                           	callstack 0
   282  0003C2                     	ds	1
   283  0003C3                     _do_check_exists:
   284                           	callstack 0
   285  0003C3                     	ds	1
   286  0003C4                     _loginNOTRegister:
   287                           	callstack 0
   288  0003C4                     	ds	1
   289  0003C5                     _setSMSon:
   290                           	callstack 0
   291  0003C5                     	ds	1
   292  0003C6                     _nou_s:
   293                           	callstack 0
   294  0003C6                     	ds	1
   295                           
   296                           	psect	bssCOMRAM
   297  000001                     __pbssCOMRAM:
   298                           	callstack 0
   299  000001                     _s_Timers:
   300                           	callstack 0
   301  000001                     	ds	24
   302  000019                     _tmpPassword:
   303                           	callstack 0
   304  000019                     	ds	9
   305  000022                     _h_Tics:
   306                           	callstack 0
   307  000022                     	ds	2
   308  000024                     motorAltaveu@state:
   309                           	callstack 0
   310  000024                     	ds	1
   311  000025                     _copsNota:
   312                           	callstack 0
   313  000025                     	ds	1
   314  000026                     _timerAltaveu:
   315                           	callstack 0
   316  000026                     	ds	1
   317  000027                     _nota:
   318                           	callstack 0
   319  000027                     	ds	1
   320  000028                     UmotorUsers@state:
   321                           	callstack 0
   322  000028                     	ds	1
   323  000029                     _j:
   324                           	callstack 0
   325  000029                     	ds	1
   326  00002A                     _i:
   327                           	callstack 0
   328  00002A                     	ds	1
   329  00002B                     _indexNextUser:
   330                           	callstack 0
   331  00002B                     	ds	1
   332  00002C                     _numUsuaris:
   333                           	callstack 0
   334  00002C                     	ds	1
   335  00002D                     _currentUsrIndex:
   336                           	callstack 0
   337  00002D                     	ds	1
   338  00002E                     menu@state:
   339                           	callstack 0
   340  00002E                     	ds	1
   341  00002F                     _timerMenu:
   342                           	callstack 0
   343  00002F                     	ds	1
   344  000030                     _tmp:
   345                           	callstack 0
   346  000030                     	ds	1
   347  000031                     _counter:
   348                           	callstack 0
   349  000031                     	ds	1
   350  000032                     TeTeclat@files:
   351                           	callstack 0
   352  000032                     	ds	1
   353  000033                     TeTeclat@cols:
   354                           	callstack 0
   355  000033                     	ds	1
   356  000034                     TeTeclat@state:
   357                           	callstack 0
   358  000034                     	ds	1
   359  000035                     _tiTeclat:
   360                           	callstack 0
   361  000035                     	ds	1
   362  000036                     SMotor@state:
   363                           	callstack 0
   364  000036                     	ds	1
   365  000037                     _sumaPulsacions:
   366                           	callstack 0
   367  000037                     	ds	1
   368  000038                     _s_ptr:
   369                           	callstack 0
   370  000038                     	ds	1
   371  000039                     _Timer:
   372                           	callstack 0
   373  000039                     	ds	1
   374  00003A                     _ColumnAct:
   375                           	callstack 0
   376  00003A                     	ds	1
   377  00003B                     _RowAct:
   378                           	callstack 0
   379  00003B                     	ds	1
   380  00003C                     _Columns:
   381                           	callstack 0
   382  00003C                     	ds	1
   383  00003D                     _Rows:
   384                           	callstack 0
   385  00003D                     	ds	1
   386  00003E                     _tmpUsername:
   387                           	callstack 0
   388  00003E                     	ds	9
   389                           
   390                           	psect	dataCOMRAM
   391  000047                     __pdataCOMRAM:
   392                           	callstack 0
   393  000047                     _lletraInici:
   394                           	callstack 0
   395  000047                     	ds	9
   396  000050                     _novaLletra:
   397                           	callstack 0
   398  000050                     	ds	1
   399  000051                     _NovaTecla:
   400                           	callstack 0
   401  000051                     	ds	1
   402  000052                     _ultimaTecla:
   403                           	callstack 0
   404  000052                     	ds	1
   405  000053                     _timerSMS:
   406                           	callstack 0
   407  000053                     	ds	1
   408  000054                     _novaTecla:
   409                           	callstack 0
   410  000054                     	ds	1
   411  000055                     _lletraASCII:
   412                           	callstack 0
   413  000055                     	ds	1
   414  000056                     _teclaPremuda:
   415                           	callstack 0
   416  000056                     	ds	12
   417                           
   418                           	psect	bssBANK1
   419  000100                     __pbssBANK1:
   420                           	callstack 0
   421  000100                     _usuaris:
   422                           	callstack 0
   423  000100                     	ds	184
   424                           
   425                           	psect	cstackCOMRAM
   426  000062                     __pcstackCOMRAM:
   427                           	callstack 0
   428  000062                     
   429                           ; 1 bytes @ 0x0
   430  000062                     	ds	1
   431  000063                     ??_high_rsi:
   432                           
   433                           ; 1 bytes @ 0x1
   434  000063                     	ds	4
   435  000067                     ??_EscriuPrimeraOrdre:
   436  000067                     ??_Uinit:
   437  000067                     ??_CantaPartAlta:
   438  000067                     ??_CantaPartBaixa:
   439  000067                     ?_TiGetTics:
   440                           	callstack 0
   441  000067                     LcNewString@new_s:
   442                           	callstack 0
   443  000067                     SsetNovaTecla@tecla:
   444                           	callstack 0
   445  000067                     TiResetTics@Handle:
   446                           	callstack 0
   447  000067                     MsetNovaTecla@tecla:
   448                           	callstack 0
   449  000067                     MNovaLletra@lletra:
   450                           	callstack 0
   451  000067                     UenviaChar@pos:
   452                           	callstack 0
   453  000067                     UenviaPas@pos:
   454                           	callstack 0
   455  000067                     escriureCharEEPROM@pos:
   456                           	callstack 0
   457  000067                     compareStrings@a:
   458                           	callstack 0
   459  000067                     escriureEEPROM@caca:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x5
   463  000067                     	ds	1
   464  000068                     CantaPartAlta@c:
   465                           	callstack 0
   466  000068                     CantaPartBaixa@c:
   467                           	callstack 0
   468  000068                     EscriuPrimeraOrdre@ordre:
   469                           	callstack 0
   470  000068                     UenviaChar@c:
   471                           	callstack 0
   472  000068                     UenviaPas@c:
   473                           	callstack 0
   474  000068                     escriureCharEEPROM@c:
   475                           	callstack 0
   476  000068                     compareStrings@b:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  000068                     	ds	1
   481  000069                     ??_TiGetTics:
   482  000069                     CantaIR@IR:
   483                           	callstack 0
   484  000069                     CantaData@Data:
   485                           	callstack 0
   486  000069                     Uinit@i:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x7
   490  000069                     	ds	1
   491  00006A                     ??_compareStrings:
   492  00006A                     Uinit@j:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x8
   496  00006A                     	ds	1
   497  00006B                     TiGetTics@Handle:
   498                           	callstack 0
   499  00006B                     Uinit@j_1028:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x9
   503  00006B                     	ds	1
   504  00006C                     ??_UmotorUsers:
   505  00006C                     TiGetTics@actual:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0xA
   509  00006C                     	ds	2
   510  00006E                     ??_SMotor:
   511  00006E                     ??_motorAltaveu:
   512  00006E                     ??_TeTeclat:
   513  00006E                     WaitForBusy@Busy:
   514                           	callstack 0
   515  00006E                     Espera@ms:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xC
   519  00006E                     	ds	1
   520  00006F                     LcGotoXY@Row:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xD
   524  00006F                     	ds	1
   525  000070                     ??_Espera:
   526  000070                     LcGotoXY@Fisics:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xE
   530  000070                     	ds	1
   531  000071                     Espera@Timer:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0xF
   535  000071                     	ds	1
   536  000072                     LcInit@columns:
   537                           	callstack 0
   538  000072                     _LcGotoXY$342:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x10
   542  000072                     	ds	1
   543  000073                     LcInit@rows:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x11
   547  000073                     	ds	1
   548  000074                     LcGotoXY@Column:
   549                           	callstack 0
   550  000074                     LcInit@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x12
   554  000074                     	ds	1
   555  000075                     LcPutChar@c:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x13
   559  000075                     	ds	1
   560  000076                     ??_menu:
   561  000076                     
   562                           ; 1 bytes @ 0x14
   563  000076                     	ds	2
   564  000078                     
   565                           ; 1 bytes @ 0x16
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 70 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1
   585 ;;      Params:         0       0       0
   586 ;;      Locals:         0       0       0
   587 ;;      Temps:          0       0       0
   588 ;;      Totals:         0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels required when called: 7
   591 ;; This function calls:
   592 ;;		_LcInit
   593 ;;		_LcLCD
   594 ;;		_Minit
   595 ;;		_SMotor
   596 ;;		_Sinit
   597 ;;		_TeInit
   598 ;;		_TeTeclat
   599 ;;		_TiInitTimer
   600 ;;		_Uinit
   601 ;;		_UmotorUsers
   602 ;;		_escriureEEPROM
   603 ;;		_initAltaveu
   604 ;;		_init_ports
   605 ;;		_menu
   606 ;;		_motorAltaveu
   607 ;;		_playAltaveu
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614  000CD6                     __ptext0:
   615                           	callstack 0
   616  000CD6                     _main:
   617                           	callstack 24
   618                           
   619                           ;main.c: 71:     init_ports();
   620                           
   621                           ;incstack = 0
   622  000CD6  ECFB  F007         	call	_init_ports	;wreg free
   623                           
   624                           ;main.c: 72:     escriureEEPROM();
   625  000CDA  EC98  F007         	call	_escriureEEPROM	;wreg free
   626                           
   627                           ;main.c: 73:     TiInitTimer();
   628  000CDE  EC32  F007         	call	_TiInitTimer	;wreg free
   629                           
   630                           ;main.c: 74:     TeInit();
   631  000CE2  EC5D  F008         	call	_TeInit	;wreg free
   632                           
   633                           ;main.c: 75:     Sinit();
   634  000CE6  EC61  F008         	call	_Sinit	;wreg free
   635                           
   636                           ;main.c: 76:     SMotor();
   637  000CEA  EC44  F002         	call	_SMotor	;wreg free
   638                           
   639                           ;main.c: 77:     Uinit();
   640  000CEE  EC16  F005         	call	_Uinit	;wreg free
   641                           
   642                           ;main.c: 78:     initAltaveu();
   643  000CF2  EC51  F008         	call	_initAltaveu	;wreg free
   644                           
   645                           ;main.c: 79:     playAltaveu();
   646  000CF6  EC73  F008         	call	_playAltaveu	;wreg free
   647                           
   648                           ;main.c: 81:     LcInit(2,16);
   649  000CFA  0E10               	movlw	16
   650  000CFC  6E72               	movwf	LcInit@columns^0,c
   651  000CFE  0E02               	movlw	2
   652  000D00  EC4E  F004         	call	_LcInit
   653                           
   654                           ;main.c: 82:     Minit();
   655  000D04  EC69  F008         	call	_Minit	;wreg free
   656  000D08                     l3073:
   657                           
   658                           ;main.c: 86:         menu();
   659  000D08  EC12  F001         	call	_menu	;wreg free
   660                           
   661                           ;main.c: 87:         motorAltaveu();
   662  000D0C  ECBB  F004         	call	_motorAltaveu	;wreg free
   663                           
   664                           ;main.c: 88:         UmotorUsers();
   665  000D10  ECCC  F003         	call	_UmotorUsers	;wreg free
   666                           
   667                           ;main.c: 89:         TeTeclat();
   668  000D14  EC1A  F003         	call	_TeTeclat	;wreg free
   669                           
   670                           ;main.c: 90:         SMotor();
   671  000D18  EC44  F002         	call	_SMotor	;wreg free
   672                           
   673                           ;main.c: 91:         LcLCD();
   674  000D1C  EC80  F007         	call	_LcLCD	;wreg free
   675  000D20  D7F3               	goto	l3073
   676  000D22                     __end_of_main:
   677                           	callstack 0
   678                           
   679 ;; *************** function _playAltaveu *****************
   680 ;; Defined at:
   681 ;;		line 14 in file "Altaveu.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		None
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1
   695 ;;      Params:         0       0       0
   696 ;;      Locals:         0       0       0
   697 ;;      Temps:          0       0       0
   698 ;;      Totals:         0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 2
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text1
   710  0010E6                     __ptext1:
   711                           	callstack 0
   712  0010E6                     _playAltaveu:
   713                           	callstack 28
   714                           
   715                           ;Altaveu.c: 15:     reproduir = 1;
   716                           
   717                           ;incstack = 0
   718  0010E6  8078               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   719  0010E8  0012               	return		;funcret
   720  0010EA                     __end_of_playAltaveu:
   721                           	callstack 0
   722                           
   723 ;; *************** function _motorAltaveu *****************
   724 ;; Defined at:
   725 ;;		line 17 in file "Altaveu.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1
   739 ;;      Params:         0       0       0
   740 ;;      Locals:         0       0       0
   741 ;;      Temps:          3       0       0
   742 ;;      Totals:         3       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 3
   746 ;; This function calls:
   747 ;;		_TiGetTics
   748 ;;		_TiResetTics
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755  000976                     __ptext2:
   756                           	callstack 0
   757  000976                     _motorAltaveu:
   758                           	callstack 27
   759                           
   760                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
   761                           
   762                           ;incstack = 0
   763  000976  D048               	goto	l2891
   764  000978                     l626:
   765                           
   766                           ;Altaveu.c: 22:    if (reproduir) {
   767  000978  A078               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   768  00097A  0012               	return	
   769                           
   770                           ;Altaveu.c: 23:     nota = 1;
   771  00097C  0E01               	movlw	1
   772  00097E  6E27               	movwf	_nota^0,c
   773                           
   774                           ;Altaveu.c: 24:     copsNota = 0;
   775  000980  0E00               	movlw	0
   776  000982  6E25               	movwf	_copsNota^0,c
   777                           
   778                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
   779  000984  5026               	movf	_timerAltaveu^0,w,c
   780  000986  EC19  F008         	call	_TiResetTics
   781  00098A                     l2855:
   782                           
   783                           ;Altaveu.c: 26:     state = 1;
   784  00098A  0E01               	movlw	1
   785  00098C  6E24               	movwf	motorAltaveu@state^0,c
   786  00098E  0012               	return	
   787  000990                     l2857:
   788                           
   789                           ;Altaveu.c: 30:    if (nota > 5) {
   790  000990  0E05               	movlw	5
   791  000992  6427               	cpfsgt	_nota^0,c
   792  000994  D004               	goto	l2863
   793                           
   794                           ;Altaveu.c: 31:     reproduir = 0;
   795  000996  9078               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   796                           
   797                           ;Altaveu.c: 32:     state = 0;
   798  000998  0E00               	movlw	0
   799  00099A  6E24               	movwf	motorAltaveu@state^0,c
   800                           
   801                           ;Altaveu.c: 33:    }
   802  00099C  0012               	return	
   803  00099E                     l2863:
   804  00099E  0EA8               	movlw	168
   805  0009A0  1825               	xorwf	_copsNota^0,w,c
   806  0009A2  A4D8               	btfss	status,2,c
   807  0009A4  D004               	goto	l2871
   808                           
   809                           ;Altaveu.c: 35:     nota++;
   810  0009A6  2A27               	incf	_nota^0,f,c
   811                           
   812                           ;Altaveu.c: 36:     copsNota = 0;
   813  0009A8  0E00               	movlw	0
   814  0009AA  6E25               	movwf	_copsNota^0,c
   815  0009AC  D7EE               	goto	l2855
   816  0009AE                     l2871:
   817  0009AE  5026               	movf	_timerAltaveu^0,w,c
   818  0009B0  ECAF  F007         	call	_TiGetTics
   819  0009B4  5027               	movf	_nota^0,w,c
   820  0009B6  6E6E               	movwf	??_motorAltaveu^0,c
   821  0009B8  6A6F               	clrf	(??_motorAltaveu+1)^0,c
   822  0009BA  5067               	movf	?_TiGetTics^0,w,c
   823  0009BC  5C6E               	subwf	??_motorAltaveu^0,w,c
   824  0009BE  506F               	movf	(??_motorAltaveu+1)^0,w,c
   825  0009C0  0A80               	xorlw	128
   826  0009C2  6E70               	movwf	(??_motorAltaveu+2)^0,c
   827  0009C4  5068               	movf	(?_TiGetTics+1)^0,w,c
   828  0009C6  0A80               	xorlw	128
   829  0009C8  5870               	subwfb	(??_motorAltaveu+2)^0,w,c
   830  0009CA  B0D8               	btfsc	status,0,c
   831  0009CC  0012               	return	
   832                           
   833                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
   834  0009CE  808A               	bsf	138,0,c	;volatile
   835                           
   836                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
   837  0009D0  5026               	movf	_timerAltaveu^0,w,c
   838  0009D2  EC19  F008         	call	_TiResetTics
   839                           
   840                           ;Altaveu.c: 42:     state = 2;
   841  0009D6  0E02               	movlw	2
   842  0009D8  6E24               	movwf	motorAltaveu@state^0,c
   843  0009DA  0012               	return	
   844  0009DC                     l2879:
   845                           
   846                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
   847  0009DC  5026               	movf	_timerAltaveu^0,w,c
   848  0009DE  ECAF  F007         	call	_TiGetTics
   849  0009E2  5027               	movf	_nota^0,w,c
   850  0009E4  6E6E               	movwf	??_motorAltaveu^0,c
   851  0009E6  6A6F               	clrf	(??_motorAltaveu+1)^0,c
   852  0009E8  5067               	movf	?_TiGetTics^0,w,c
   853  0009EA  5C6E               	subwf	??_motorAltaveu^0,w,c
   854  0009EC  506F               	movf	(??_motorAltaveu+1)^0,w,c
   855  0009EE  0A80               	xorlw	128
   856  0009F0  6E70               	movwf	(??_motorAltaveu+2)^0,c
   857  0009F2  5068               	movf	(?_TiGetTics+1)^0,w,c
   858  0009F4  0A80               	xorlw	128
   859  0009F6  5870               	subwfb	(??_motorAltaveu+2)^0,w,c
   860  0009F8  B0D8               	btfsc	status,0,c
   861  0009FA  0012               	return	
   862                           
   863                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
   864  0009FC  908A               	bcf	138,0,c	;volatile
   865                           
   866                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
   867  0009FE  5026               	movf	_timerAltaveu^0,w,c
   868  000A00  EC19  F008         	call	_TiResetTics
   869                           
   870                           ;Altaveu.c: 49:     copsNota++;
   871  000A04  2A25               	incf	_copsNota^0,f,c
   872  000A06  D7C1               	goto	l2855
   873  000A08                     l2891:
   874  000A08  5024               	movf	motorAltaveu@state^0,w,c
   875  000A0A  6E6E               	movwf	??_motorAltaveu^0,c
   876  000A0C  6A6F               	clrf	(??_motorAltaveu+1)^0,c
   877                           
   878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   879                           ; Switch size 1, requested type "simple"
   880                           ; Number of cases is 1, Range of values is 0 to 0
   881                           ; switch strategies available:
   882                           ; Name         Instructions Cycles
   883                           ; simple_byte            4     3 (average)
   884                           ;	Chosen strategy is simple_byte
   885  000A0E  506F               	movf	(??_motorAltaveu+1)^0,w,c
   886  000A10  0A00               	xorlw	0	; case 0
   887  000A12  A4D8               	btfss	status,2,c
   888  000A14  0012               	return	
   889                           
   890                           ; Switch size 1, requested type "simple"
   891                           ; Number of cases is 3, Range of values is 0 to 2
   892                           ; switch strategies available:
   893                           ; Name         Instructions Cycles
   894                           ; simple_byte           10     6 (average)
   895                           ;	Chosen strategy is simple_byte
   896  000A16  506E               	movf	??_motorAltaveu^0,w,c
   897  000A18  0A00               	xorlw	0	; case 0
   898  000A1A  B4D8               	btfsc	status,2,c
   899  000A1C  D7AD               	goto	l626
   900  000A1E  0A01               	xorlw	1	; case 1
   901  000A20  B4D8               	btfsc	status,2,c
   902  000A22  D7B6               	goto	l2857
   903  000A24  0A03               	xorlw	3	; case 2
   904  000A26  A4D8               	btfss	status,2,c
   905  000A28  0012               	return	
   906  000A2A  D7D8               	goto	l2879
   907  000A2C                     __end_of_motorAltaveu:
   908                           	callstack 0
   909                           
   910 ;; *************** function _menu *****************
   911 ;; Defined at:
   912 ;;		line 25 in file "Menu.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1
   926 ;;      Params:         0       0       0
   927 ;;      Locals:         0       0       0
   928 ;;      Temps:          2       0       0
   929 ;;      Totals:         2       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 6
   933 ;; This function calls:
   934 ;;		_LcClear
   935 ;;		_LcGotoXY
   936 ;;		_LcLliure
   937 ;;		_LcNewString
   938 ;;		_LcPutChar
   939 ;;		_SMSoff
   940 ;;		_SMSon
   941 ;;		_UcheckExists
   942 ;;		_UcheckExistsGetError
   943 ;;		_UcheckExistsNotFinished
   944 ;;		_UenviaChar
   945 ;;		_UenviaPas
   946 ;;		_UgetNumUsuaris
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text3
   953  000224                     __ptext3:
   954                           	callstack 0
   955  000224                     _menu:
   956                           	callstack 24
   957                           
   958                           ;Menu.c: 26:   static char state = 0;;Menu.c: 28:  switch(state) {
   959                           
   960                           ;incstack = 0
   961  000224  D100               	goto	l2843
   962  000226                     l2683:
   963                           
   964                           ;Menu.c: 30:    LcClear();
   965  000226  ECC5  F007         	call	_LcClear	;wreg free
   966                           
   967                           ;Menu.c: 31:    LcNewString("1.LOGIN");
   968  00022A  0E0C               	movlw	low STR_1
   969  00022C  6E67               	movwf	LcNewString@new_s^0,c
   970  00022E  EC4D  F008         	call	_LcNewString	;wreg free
   971                           
   972                           ;Menu.c: 32:    state = 1;
   973  000232  0E01               	movlw	1
   974  000234  6E2E               	movwf	menu@state^0,c
   975                           
   976                           ;Menu.c: 33:   break;
   977  000236  0012               	return	
   978  000238                     l2689:
   979                           
   980                           ;Menu.c: 35:    if (LcLliure()) {
   981  000238  EC41  F008         	call	_LcLliure	;wreg free
   982  00023C  A0D8               	btfss	status,0,c
   983  00023E  0012               	return	
   984                           
   985                           ;Menu.c: 36:     LcGotoXY(0,1);
   986  000240  0E01               	movlw	1
   987  000242  6E6F               	movwf	LcGotoXY@Row^0,c
   988  000244  0E00               	movlw	0
   989  000246  ECF8  F006         	call	_LcGotoXY
   990                           
   991                           ;Menu.c: 37:     LcNewString("2.REGISTER");
   992  00024A  0E01               	movlw	low STR_2
   993  00024C  6E67               	movwf	LcNewString@new_s^0,c
   994  00024E  EC4D  F008         	call	_LcNewString	;wreg free
   995                           
   996                           ;Menu.c: 38:     NovaTecla = -1;
   997  000252  6851               	setf	_NovaTecla^0,c
   998                           
   999                           ;Menu.c: 39:     state = 2;
  1000  000254  0E02               	movlw	2
  1001  000256  6E2E               	movwf	menu@state^0,c
  1002  000258  0012               	return	
  1003  00025A                     l2699:
  1004                           
  1005                           ;Menu.c: 43:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1006  00025A  0451               	decf	_NovaTecla^0,w,c
  1007  00025C  A4D8               	btfss	status,2,c
  1008  00025E  D009               	goto	l2707
  1009  000260  EC75  F008         	call	_UgetNumUsuaris	;wreg free
  1010  000264  0900               	iorlw	0
  1011  000266  B4D8               	btfsc	status,2,c
  1012  000268  D004               	goto	l2707
  1013                           
  1014                           ;Menu.c: 44:     loginNOTRegister = 1;
  1015  00026A  8878               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1016  00026C                     l2705:
  1017                           
  1018                           ;Menu.c: 45:     state = 3;
  1019  00026C  0E03               	movlw	3
  1020  00026E  6E2E               	movwf	menu@state^0,c
  1021                           
  1022                           ;Menu.c: 46:    }
  1023  000270  0012               	return	
  1024  000272                     l2707:
  1025  000272  0E02               	movlw	2
  1026  000274  1851               	xorwf	_NovaTecla^0,w,c
  1027  000276  A4D8               	btfss	status,2,c
  1028  000278  0012               	return	
  1029                           
  1030                           ;Menu.c: 48:     loginNOTRegister = 0;
  1031  00027A  9878               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1032  00027C  D7F7               	goto	l2705
  1033  00027E                     l425:
  1034                           
  1035                           ;Menu.c: 53:    NovaTecla = -1;
  1036  00027E  6851               	setf	_NovaTecla^0,c
  1037                           
  1038                           ;Menu.c: 54:    novaLletra = -1;
  1039  000280  6850               	setf	_novaLletra^0,c
  1040                           
  1041                           ;Menu.c: 55:    LcClear();
  1042  000282  ECC5  F007         	call	_LcClear	;wreg free
  1043                           
  1044                           ;Menu.c: 56:    LcNewString("USER: ");
  1045  000286  0E1B               	movlw	low STR_3
  1046  000288  6E67               	movwf	LcNewString@new_s^0,c
  1047  00028A  EC4D  F008         	call	_LcNewString	;wreg free
  1048                           
  1049                           ;Menu.c: 57:    state = 4;
  1050  00028E  0E04               	movlw	4
  1051  000290  6E2E               	movwf	menu@state^0,c
  1052                           
  1053                           ;Menu.c: 58:   break;
  1054  000292  0012               	return	
  1055  000294                     l2719:
  1056                           
  1057                           ;Menu.c: 60:    if (LcLliure()) {
  1058  000294  EC41  F008         	call	_LcLliure	;wreg free
  1059  000298  A0D8               	btfss	status,0,c
  1060  00029A  0012               	return	
  1061                           
  1062                           ;Menu.c: 61:     LcGotoXY(0,1);
  1063  00029C  0E01               	movlw	1
  1064  00029E  6E6F               	movwf	LcGotoXY@Row^0,c
  1065  0002A0  0E00               	movlw	0
  1066  0002A2  ECF8  F006         	call	_LcGotoXY
  1067                           
  1068                           ;Menu.c: 62:     LcNewString("PSWD: ");
  1069  0002A6  0E14               	movlw	low STR_4
  1070  0002A8  6E67               	movwf	LcNewString@new_s^0,c
  1071  0002AA  EC4D  F008         	call	_LcNewString	;wreg free
  1072                           
  1073                           ;Menu.c: 63:     state = 5;
  1074  0002AE  0E05               	movlw	5
  1075  0002B0  6E2E               	movwf	menu@state^0,c
  1076  0002B2  0012               	return	
  1077  0002B4                     l2727:
  1078                           
  1079                           ;Menu.c: 67:    if (LcLliure()) {
  1080  0002B4  EC41  F008         	call	_LcLliure	;wreg free
  1081  0002B8  A0D8               	btfss	status,0,c
  1082  0002BA  0012               	return	
  1083                           
  1084                           ;Menu.c: 68:     LcGotoXY(6,0);
  1085  0002BC  0E00               	movlw	0
  1086  0002BE  6E6F               	movwf	LcGotoXY@Row^0,c
  1087  0002C0  0E06               	movlw	6
  1088  0002C2  ECF8  F006         	call	_LcGotoXY
  1089                           
  1090                           ;Menu.c: 69:     SMSon();
  1091  0002C6  EC6D  F008         	call	_SMSon	;wreg free
  1092                           
  1093                           ;Menu.c: 70:     tmp =0;
  1094  0002CA  0E00               	movlw	0
  1095  0002CC  6E30               	movwf	_tmp^0,c
  1096  0002CE                     l2735:
  1097                           
  1098                           ;Menu.c: 71:     state = 6;
  1099  0002CE  0E06               	movlw	6
  1100  0002D0  6E2E               	movwf	menu@state^0,c
  1101  0002D2  0012               	return	
  1102  0002D4                     l2737:
  1103                           
  1104                           ;Menu.c: 75:    if (novaLletra > 47 && NovaTecla != 10) {
  1105  0002D4  5050               	movf	_novaLletra^0,w,c
  1106  0002D6  0A80               	xorlw	128
  1107  0002D8  0F50               	addlw	-176
  1108  0002DA  A0D8               	btfss	status,0,c
  1109  0002DC  D00F               	goto	l2747
  1110  0002DE  0E0A               	movlw	10
  1111  0002E0  1851               	xorwf	_NovaTecla^0,w,c
  1112  0002E2  B4D8               	btfsc	status,2,c
  1113  0002E4  D00B               	goto	l2747
  1114                           
  1115                           ;Menu.c: 76:     LcPutChar(novaLletra);
  1116  0002E6  5050               	movf	_novaLletra^0,w,c
  1117  0002E8  EC42  F006         	call	_LcPutChar
  1118                           
  1119                           ;Menu.c: 77:     UenviaChar(novaLletra,tmp);
  1120  0002EC  C030  F067         	movff	_tmp,UenviaChar@pos
  1121  0002F0  5050               	movf	_novaLletra^0,w,c
  1122  0002F2  EC2D  F008         	call	_UenviaChar
  1123  0002F6                     l2745:
  1124                           
  1125                           ;Menu.c: 78:     state = 7;
  1126  0002F6  0E07               	movlw	7
  1127  0002F8  6E2E               	movwf	menu@state^0,c
  1128                           
  1129                           ;Menu.c: 79:    }
  1130  0002FA  0012               	return	
  1131  0002FC                     l2747:
  1132  0002FC  0E0B               	movlw	11
  1133  0002FE  1851               	xorwf	_NovaTecla^0,w,c
  1134  000300  A4D8               	btfss	status,2,c
  1135  000302  0012               	return	
  1136  000304  D7F8               	goto	l2745
  1137  000306                     l2751:
  1138                           
  1139                           ;Menu.c: 85:    if (tmp != 7 && NovaTecla != 11) {
  1140  000306  0E07               	movlw	7
  1141  000308  1830               	xorwf	_tmp^0,w,c
  1142  00030A  B4D8               	btfsc	status,2,c
  1143  00030C  D008               	goto	l2763
  1144  00030E  0E0B               	movlw	11
  1145  000310  1851               	xorwf	_NovaTecla^0,w,c
  1146  000312  B4D8               	btfsc	status,2,c
  1147  000314  D004               	goto	l2763
  1148                           
  1149                           ;Menu.c: 86:     tmp++;
  1150  000316  2A30               	incf	_tmp^0,f,c
  1151                           
  1152                           ;Menu.c: 87:     NovaTecla = -1;
  1153  000318  6851               	setf	_NovaTecla^0,c
  1154                           
  1155                           ;Menu.c: 88:     novaLletra = -1;
  1156  00031A  6850               	setf	_novaLletra^0,c
  1157  00031C  D7D8               	goto	l2735
  1158  00031E                     l2763:
  1159  00031E  0E07               	movlw	7
  1160  000320  1830               	xorwf	_tmp^0,w,c
  1161  000322  B4D8               	btfsc	status,2,c
  1162  000324  D004               	goto	u2170
  1163  000326  0E0B               	movlw	11
  1164  000328  1851               	xorwf	_NovaTecla^0,w,c
  1165  00032A  A4D8               	btfss	status,2,c
  1166  00032C  0012               	return	
  1167  00032E                     u2170:
  1168                           
  1169                           ;Menu.c: 92:     LcGotoXY(6,1);
  1170  00032E  0E01               	movlw	1
  1171  000330  6E6F               	movwf	LcGotoXY@Row^0,c
  1172  000332  0E06               	movlw	6
  1173  000334  ECF8  F006         	call	_LcGotoXY
  1174                           
  1175                           ;Menu.c: 93:     UenviaChar('\0',tmp);
  1176  000338  C030  F067         	movff	_tmp,UenviaChar@pos
  1177  00033C  0E00               	movlw	0
  1178  00033E  EC2D  F008         	call	_UenviaChar
  1179                           
  1180                           ;Menu.c: 94:     NovaTecla = -1;
  1181  000342  6851               	setf	_NovaTecla^0,c
  1182                           
  1183                           ;Menu.c: 95:     novaLletra = -1;
  1184  000344  6850               	setf	_novaLletra^0,c
  1185                           
  1186                           ;Menu.c: 96:     tmp = 0;
  1187  000346  0E00               	movlw	0
  1188  000348  6E30               	movwf	_tmp^0,c
  1189  00034A                     l2777:
  1190                           
  1191                           ;Menu.c: 97:     state = 8;
  1192  00034A  0E08               	movlw	8
  1193  00034C  6E2E               	movwf	menu@state^0,c
  1194  00034E  0012               	return	
  1195  000350                     l2779:
  1196                           
  1197                           ;Menu.c: 101:    if (novaLletra > 47 && NovaTecla != 10) {
  1198  000350  5050               	movf	_novaLletra^0,w,c
  1199  000352  0A80               	xorlw	128
  1200  000354  0F50               	addlw	-176
  1201  000356  A0D8               	btfss	status,0,c
  1202  000358  D00F               	goto	l2789
  1203  00035A  0E0A               	movlw	10
  1204  00035C  1851               	xorwf	_NovaTecla^0,w,c
  1205  00035E  B4D8               	btfsc	status,2,c
  1206  000360  D00B               	goto	l2789
  1207                           
  1208                           ;Menu.c: 102:     LcPutChar(novaLletra);
  1209  000362  5050               	movf	_novaLletra^0,w,c
  1210  000364  EC42  F006         	call	_LcPutChar
  1211                           
  1212                           ;Menu.c: 103:     UenviaPas(novaLletra,tmp);
  1213  000368  C030  F067         	movff	_tmp,UenviaPas@pos
  1214  00036C  5050               	movf	_novaLletra^0,w,c
  1215  00036E  EC25  F008         	call	_UenviaPas
  1216  000372                     l2787:
  1217                           
  1218                           ;Menu.c: 104:     state = 9;
  1219  000372  0E09               	movlw	9
  1220  000374  6E2E               	movwf	menu@state^0,c
  1221                           
  1222                           ;Menu.c: 105:    }
  1223  000376  0012               	return	
  1224  000378                     l2789:
  1225  000378  0E0B               	movlw	11
  1226  00037A  1851               	xorwf	_NovaTecla^0,w,c
  1227  00037C  A4D8               	btfss	status,2,c
  1228  00037E  0012               	return	
  1229  000380  D7F8               	goto	l2787
  1230  000382                     l2793:
  1231                           
  1232                           ;Menu.c: 111:    if (tmp != 7 && NovaTecla != 11) {
  1233  000382  0E07               	movlw	7
  1234  000384  1830               	xorwf	_tmp^0,w,c
  1235  000386  B4D8               	btfsc	status,2,c
  1236  000388  D008               	goto	l2805
  1237  00038A  0E0B               	movlw	11
  1238  00038C  1851               	xorwf	_NovaTecla^0,w,c
  1239  00038E  B4D8               	btfsc	status,2,c
  1240  000390  D004               	goto	l2805
  1241                           
  1242                           ;Menu.c: 112:     tmp++;
  1243  000392  2A30               	incf	_tmp^0,f,c
  1244                           
  1245                           ;Menu.c: 113:     NovaTecla = -1;
  1246  000394  6851               	setf	_NovaTecla^0,c
  1247                           
  1248                           ;Menu.c: 114:     novaLletra = -1;
  1249  000396  6850               	setf	_novaLletra^0,c
  1250  000398  D7D8               	goto	l2777
  1251  00039A                     l2805:
  1252  00039A  0E07               	movlw	7
  1253  00039C  1830               	xorwf	_tmp^0,w,c
  1254  00039E  B4D8               	btfsc	status,2,c
  1255  0003A0  D004               	goto	u2240
  1256  0003A2  0E0B               	movlw	11
  1257  0003A4  1851               	xorwf	_NovaTecla^0,w,c
  1258  0003A6  A4D8               	btfss	status,2,c
  1259  0003A8  0012               	return	
  1260  0003AA                     u2240:
  1261                           
  1262                           ;Menu.c: 118:     UenviaPas('\0',tmp);
  1263  0003AA  C030  F067         	movff	_tmp,UenviaPas@pos
  1264  0003AE  0E00               	movlw	0
  1265  0003B0  EC25  F008         	call	_UenviaPas
  1266                           
  1267                           ;Menu.c: 119:     NovaTecla = -1;
  1268  0003B4  6851               	setf	_NovaTecla^0,c
  1269                           
  1270                           ;Menu.c: 120:     novaLletra = -1;
  1271  0003B6  6850               	setf	_novaLletra^0,c
  1272                           
  1273                           ;Menu.c: 121:     tmp = 0;
  1274  0003B8  0E00               	movlw	0
  1275  0003BA  6E30               	movwf	_tmp^0,c
  1276                           
  1277                           ;Menu.c: 122:     LcClear();
  1278  0003BC  ECC5  F007         	call	_LcClear	;wreg free
  1279                           
  1280                           ;Menu.c: 123:     UcheckExists();
  1281  0003C0  EC77  F008         	call	_UcheckExists	;wreg free
  1282                           
  1283                           ;Menu.c: 124:     SMSoff();
  1284  0003C4  EC70  F008         	call	_SMSoff	;wreg free
  1285                           
  1286                           ;Menu.c: 125:     state = 10;
  1287  0003C8  0E0A               	movlw	10
  1288  0003CA  6E2E               	movwf	menu@state^0,c
  1289  0003CC  0012               	return	
  1290  0003CE                     l2825:
  1291                           
  1292                           ;Menu.c: 129:    if (!UcheckExistsNotFinished()) {
  1293  0003CE  EC35  F008         	call	_UcheckExistsNotFinished	;wreg free
  1294  0003D2  B0D8               	btfsc	status,0,c
  1295  0003D4  0012               	return	
  1296                           
  1297                           ;Menu.c: 130:     state = 11;
  1298  0003D6  0E0B               	movlw	11
  1299  0003D8  6E2E               	movwf	menu@state^0,c
  1300  0003DA  0012               	return	
  1301  0003DC                     l452:
  1302                           
  1303                           ;Menu.c: 134:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1304  0003DC  B878               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1305  0003DE  D007               	goto	l453
  1306  0003E0  EC3B  F008         	call	_UcheckExistsGetError	;wreg free
  1307  0003E4  B0D8               	btfsc	status,0,c
  1308  0003E6  D003               	goto	l453
  1309                           
  1310                           ;Menu.c: 135:     state = 12;
  1311  0003E8  0E0C               	movlw	12
  1312  0003EA  6E2E               	movwf	menu@state^0,c
  1313                           
  1314                           ;Menu.c: 136:    }
  1315  0003EC  0012               	return	
  1316  0003EE                     l453:
  1317  0003EE  A878               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1318  0003F0  D007               	goto	l2837
  1319  0003F2  EC3B  F008         	call	_UcheckExistsGetError	;wreg free
  1320  0003F6  A0D8               	btfss	status,0,c
  1321  0003F8  D003               	goto	l2837
  1322                           
  1323                           ;Menu.c: 138:     state = 13;
  1324  0003FA  0E0D               	movlw	13
  1325  0003FC  6E2E               	movwf	menu@state^0,c
  1326                           
  1327                           ;Menu.c: 139:    }
  1328  0003FE  0012               	return	
  1329  000400                     l2837:
  1330  000400  A878               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1331  000402  D002               	goto	u2300
  1332  000404  0E01               	movlw	1
  1333  000406  D001               	goto	u2302
  1334  000408                     u2300:
  1335  000408  0E00               	movlw	0
  1336  00040A                     u2302:
  1337  00040A  6E76               	movwf	??_menu^0,c
  1338  00040C  EC3B  F008         	call	_UcheckExistsGetError	;wreg free
  1339  000410  A0D8               	btfss	status,0,c
  1340  000412  D002               	goto	u2310
  1341  000414  0E01               	movlw	1
  1342  000416  D001               	goto	u2312
  1343  000418                     u2310:
  1344  000418  0E00               	movlw	0
  1345  00041A                     u2312:
  1346  00041A  1A76               	xorwf	??_menu^0,f,c
  1347  00041C  B4D8               	btfsc	status,2,c
  1348  00041E  0012               	return	
  1349                           
  1350                           ;Menu.c: 141:     state = 0;
  1351  000420  0E00               	movlw	0
  1352  000422  6E2E               	movwf	menu@state^0,c
  1353  000424  0012               	return	
  1354  000426                     l2843:
  1355  000426  502E               	movf	menu@state^0,w,c
  1356  000428  6E76               	movwf	??_menu^0,c
  1357  00042A  6A77               	clrf	(??_menu+1)^0,c
  1358                           
  1359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1360                           ; Switch size 1, requested type "simple"
  1361                           ; Number of cases is 1, Range of values is 0 to 0
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte            4     3 (average)
  1365                           ;	Chosen strategy is simple_byte
  1366  00042C  5077               	movf	(??_menu+1)^0,w,c
  1367  00042E  0A00               	xorlw	0	; case 0
  1368  000430  A4D8               	btfss	status,2,c
  1369  000432  0012               	return	
  1370                           
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 14, Range of values is 0 to 13
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte           43    22 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  000434  5076               	movf	??_menu^0,w,c
  1378  000436  0A00               	xorlw	0	; case 0
  1379  000438  B4D8               	btfsc	status,2,c
  1380  00043A  D6F5               	goto	l2683
  1381  00043C  0A01               	xorlw	1	; case 1
  1382  00043E  B4D8               	btfsc	status,2,c
  1383  000440  D6FB               	goto	l2689
  1384  000442  0A03               	xorlw	3	; case 2
  1385  000444  B4D8               	btfsc	status,2,c
  1386  000446  D709               	goto	l2699
  1387  000448  0A01               	xorlw	1	; case 3
  1388  00044A  B4D8               	btfsc	status,2,c
  1389  00044C  D718               	goto	l425
  1390  00044E  0A07               	xorlw	7	; case 4
  1391  000450  B4D8               	btfsc	status,2,c
  1392  000452  D720               	goto	l2719
  1393  000454  0A01               	xorlw	1	; case 5
  1394  000456  B4D8               	btfsc	status,2,c
  1395  000458  D72D               	goto	l2727
  1396  00045A  0A03               	xorlw	3	; case 6
  1397  00045C  B4D8               	btfsc	status,2,c
  1398  00045E  D73A               	goto	l2737
  1399  000460  0A01               	xorlw	1	; case 7
  1400  000462  B4D8               	btfsc	status,2,c
  1401  000464  D750               	goto	l2751
  1402  000466  0A0F               	xorlw	15	; case 8
  1403  000468  B4D8               	btfsc	status,2,c
  1404  00046A  D772               	goto	l2779
  1405  00046C  0A01               	xorlw	1	; case 9
  1406  00046E  B4D8               	btfsc	status,2,c
  1407  000470  D788               	goto	l2793
  1408  000472  0A03               	xorlw	3	; case 10
  1409  000474  B4D8               	btfsc	status,2,c
  1410  000476  D7AB               	goto	l2825
  1411  000478  0A01               	xorlw	1	; case 11
  1412  00047A  B4D8               	btfsc	status,2,c
  1413  00047C  D7AF               	goto	l452
  1414  00047E  0A07               	xorlw	7	; case 12
  1415  000480  B4D8               	btfsc	status,2,c
  1416  000482  0012               	return	
  1417  000484  0A01               	xorlw	1	; case 13
  1418  000486  0012               	return	
  1419  000488                     __end_of_menu:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _UgetNumUsuaris *****************
  1423 ;; Defined at:
  1424 ;;		line 25 in file "Usuaris.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1
  1438 ;;      Params:         0       0       0
  1439 ;;      Locals:         0       0       0
  1440 ;;      Temps:          0       0       0
  1441 ;;      Totals:         0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 2
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_menu
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text4
  1453  0010EA                     __ptext4:
  1454                           	callstack 0
  1455  0010EA                     _UgetNumUsuaris:
  1456                           	callstack 27
  1457                           
  1458                           ;Usuaris.c: 26:     return numUsuaris;
  1459                           
  1460                           ;incstack = 0
  1461  0010EA  502C               	movf	_numUsuaris^0,w,c
  1462  0010EC  0012               	return		;funcret
  1463  0010EE                     __end_of_UgetNumUsuaris:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _UenviaPas *****************
  1467 ;; Defined at:
  1468 ;;		line 41 in file "Usuaris.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  c               1    wreg     unsigned char 
  1471 ;;  pos             1    5[COMRAM] unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  c               1    6[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1
  1483 ;;      Params:         1       0       0
  1484 ;;      Locals:         1       0       0
  1485 ;;      Temps:          0       0       0
  1486 ;;      Totals:         2       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_menu
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text5
  1498  00104A                     __ptext5:
  1499                           	callstack 0
  1500  00104A                     _UenviaPas:
  1501                           	callstack 27
  1502                           
  1503                           ;incstack = 0
  1504                           ;UenviaPas@c stored from wreg
  1505  00104A  6E68               	movwf	UenviaPas@c^0,c
  1506                           
  1507                           ;Usuaris.c: 42:     tmpPassword[pos] = c;
  1508  00104C  5067               	movf	UenviaPas@pos^0,w,c
  1509  00104E  0F19               	addlw	low _tmpPassword
  1510  001050  6ED9               	movwf	fsr2l,c
  1511  001052  6ADA               	clrf	fsr2h,c
  1512  001054  C068  FFDF         	movff	UenviaPas@c,indf2
  1513  001058  0012               	return		;funcret
  1514  00105A                     __end_of_UenviaPas:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _UenviaChar *****************
  1518 ;; Defined at:
  1519 ;;		line 38 in file "Usuaris.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  c               1    wreg     unsigned char 
  1522 ;;  pos             1    5[COMRAM] unsigned char 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  c               1    6[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1
  1534 ;;      Params:         1       0       0
  1535 ;;      Locals:         1       0       0
  1536 ;;      Temps:          0       0       0
  1537 ;;      Totals:         2       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_menu
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text6
  1549  00105A                     __ptext6:
  1550                           	callstack 0
  1551  00105A                     _UenviaChar:
  1552                           	callstack 27
  1553                           
  1554                           ;incstack = 0
  1555                           ;UenviaChar@c stored from wreg
  1556  00105A  6E68               	movwf	UenviaChar@c^0,c
  1557                           
  1558                           ;Usuaris.c: 39:     tmpUsername[pos] = c;
  1559  00105C  5067               	movf	UenviaChar@pos^0,w,c
  1560  00105E  0F3E               	addlw	low _tmpUsername
  1561  001060  6ED9               	movwf	fsr2l,c
  1562  001062  6ADA               	clrf	fsr2h,c
  1563  001064  C068  FFDF         	movff	UenviaChar@c,indf2
  1564  001068  0012               	return		;funcret
  1565  00106A                     __end_of_UenviaChar:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _UcheckExistsNotFinished *****************
  1569 ;; Defined at:
  1570 ;;		line 32 in file "Usuaris.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1
  1584 ;;      Params:         0       0       0
  1585 ;;      Locals:         0       0       0
  1586 ;;      Temps:          0       0       0
  1587 ;;      Totals:         0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 2
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_menu
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text7
  1599  00106A                     __ptext7:
  1600                           	callstack 0
  1601  00106A                     _UcheckExistsNotFinished:
  1602                           	callstack 27
  1603                           
  1604                           ;Usuaris.c: 33:     return do_check_exists;
  1605                           
  1606                           ;incstack = 0
  1607  00106A  B678               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1608  00106C  D002               	goto	l1507
  1609  00106E  90D8               	bcf	status,0,c
  1610  001070  0012               	return	
  1611  001072                     l1507:
  1612  001072  80D8               	bsf	status,0,c
  1613  001074  0012               	return		;funcret
  1614  001076                     __end_of_UcheckExistsNotFinished:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _UcheckExistsGetError *****************
  1618 ;; Defined at:
  1619 ;;		line 35 in file "Usuaris.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;		None               void
  1626 ;; Registers used:
  1627 ;;		status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1
  1633 ;;      Params:         0       0       0
  1634 ;;      Locals:         0       0       0
  1635 ;;      Temps:          0       0       0
  1636 ;;      Totals:         0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 2
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_menu
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text8
  1648  001076                     __ptext8:
  1649                           	callstack 0
  1650  001076                     _UcheckExistsGetError:
  1651                           	callstack 27
  1652                           
  1653                           ;Usuaris.c: 36:     return return_error;
  1654                           
  1655                           ;incstack = 0
  1656  001076  B478               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1657  001078  D002               	goto	l1515
  1658  00107A  90D8               	bcf	status,0,c
  1659  00107C  0012               	return	
  1660  00107E                     l1515:
  1661  00107E  80D8               	bsf	status,0,c
  1662  001080  0012               	return		;funcret
  1663  001082                     __end_of_UcheckExistsGetError:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _UcheckExists *****************
  1667 ;; Defined at:
  1668 ;;		line 29 in file "Usuaris.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		None
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1
  1682 ;;      Params:         0       0       0
  1683 ;;      Locals:         0       0       0
  1684 ;;      Temps:          0       0       0
  1685 ;;      Totals:         0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 2
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_menu
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text9
  1697  0010EE                     __ptext9:
  1698                           	callstack 0
  1699  0010EE                     _UcheckExists:
  1700                           	callstack 27
  1701                           
  1702                           ;Usuaris.c: 30:     do_check_exists = 1;
  1703                           
  1704                           ;incstack = 0
  1705  0010EE  8678               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1706  0010F0  0012               	return		;funcret
  1707  0010F2                     __end_of_UcheckExists:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _SMSon *****************
  1711 ;; Defined at:
  1712 ;;		line 114 in file "Ssms.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		None
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1
  1726 ;;      Params:         0       0       0
  1727 ;;      Locals:         0       0       0
  1728 ;;      Temps:          0       0       0
  1729 ;;      Totals:         0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 2
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_menu
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text10
  1741  0010DA                     __ptext10:
  1742                           	callstack 0
  1743  0010DA                     _SMSon:
  1744                           	callstack 27
  1745                           
  1746                           ;Ssms.c: 115:     setSMSon = 1;
  1747                           
  1748                           ;incstack = 0
  1749  0010DA  8A78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1750                           
  1751                           ;Ssms.c: 116:     novaTecla = -1;
  1752  0010DC  6854               	setf	_novaTecla^0,c
  1753  0010DE  0012               	return		;funcret
  1754  0010E0                     __end_of_SMSon:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _SMSoff *****************
  1758 ;; Defined at:
  1759 ;;		line 119 in file "Ssms.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		None
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1
  1773 ;;      Params:         0       0       0
  1774 ;;      Locals:         0       0       0
  1775 ;;      Temps:          0       0       0
  1776 ;;      Totals:         0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 2
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_menu
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text11
  1788  0010E0                     __ptext11:
  1789                           	callstack 0
  1790  0010E0                     _SMSoff:
  1791                           	callstack 27
  1792                           
  1793                           ;Ssms.c: 120:     setSMSon = 0;
  1794                           
  1795                           ;incstack = 0
  1796  0010E0  9A78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1797                           
  1798                           ;Ssms.c: 121:     novaTecla = -1;
  1799  0010E2  6854               	setf	_novaTecla^0,c
  1800  0010E4  0012               	return		;funcret
  1801  0010E6                     __end_of_SMSoff:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _LcNewString *****************
  1805 ;; Defined at:
  1806 ;;		line 239 in file "LcTLCD.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1809 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1
  1821 ;;      Params:         1       0       0
  1822 ;;      Locals:         0       0       0
  1823 ;;      Temps:          0       0       0
  1824 ;;      Totals:         1       0       0
  1825 ;;Total ram usage:        1 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; Hardware stack levels required when called: 2
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_menu
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text12
  1836  00109A                     __ptext12:
  1837                           	callstack 0
  1838  00109A                     _LcNewString:
  1839                           	callstack 27
  1840                           
  1841                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1842                           
  1843                           ;incstack = 0
  1844  00109A  C067  F038         	movff	LcNewString@new_s,_s_ptr
  1845                           
  1846                           ;LcTLCD.c: 241:     nou_s = 1;
  1847  00109E  8C78               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1848  0010A0  0012               	return		;funcret
  1849  0010A2                     __end_of_LcNewString:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _LcLliure *****************
  1853 ;; Defined at:
  1854 ;;		line 265 in file "LcTLCD.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;		None               void
  1861 ;; Registers used:
  1862 ;;		status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1
  1868 ;;      Params:         0       0       0
  1869 ;;      Locals:         0       0       0
  1870 ;;      Temps:          0       0       0
  1871 ;;      Totals:         0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_menu
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text13
  1883  001082                     __ptext13:
  1884                           	callstack 0
  1885  001082                     _LcLliure:
  1886                           	callstack 27
  1887                           
  1888                           ;LcTLCD.c: 266:     return !nou_s;
  1889                           
  1890                           ;incstack = 0
  1891  001082  AC78               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1892  001084  D002               	goto	l1479
  1893  001086  90D8               	bcf	status,0,c
  1894  001088  0012               	return	
  1895  00108A                     l1479:
  1896  00108A  80D8               	bsf	status,0,c
  1897  00108C  0012               	return		;funcret
  1898  00108E                     __end_of_LcLliure:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _LcClear *****************
  1902 ;; Defined at:
  1903 ;;		line 82 in file "LcTLCD.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1
  1917 ;;      Params:         0       0       0
  1918 ;;      Locals:         0       0       0
  1919 ;;      Temps:          0       0       0
  1920 ;;      Totals:         0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 5
  1924 ;; This function calls:
  1925 ;;		_CantaIR
  1926 ;;		_Espera
  1927 ;;		_LcGotoXY
  1928 ;;		_WaitForBusy
  1929 ;; This function is called by:
  1930 ;;		_menu
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text14
  1935  000F8A                     __ptext14:
  1936                           	callstack 0
  1937  000F8A                     _LcClear:
  1938                           	callstack 24
  1939                           
  1940                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1941                           
  1942                           ;incstack = 0
  1943  000F8A  ECD8  F006         	call	_WaitForBusy	;wreg free
  1944  000F8E  0E01               	movlw	1
  1945  000F90  EC67  F007         	call	_CantaIR
  1946                           
  1947                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1948  000F94  0E00               	movlw	0
  1949  000F96  6E6F               	movwf	(Espera@ms+1)^0,c
  1950  000F98  0E03               	movlw	3
  1951  000F9A  6E6E               	movwf	Espera@ms^0,c
  1952  000F9C  5039               	movf	_Timer^0,w,c
  1953  000F9E  ECE9  F007         	call	_Espera
  1954                           
  1955                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1956  000FA2  0E00               	movlw	0
  1957  000FA4  6E6F               	movwf	LcGotoXY@Row^0,c
  1958  000FA6  0E00               	movlw	0
  1959  000FA8  ECF8  F006         	call	_LcGotoXY
  1960  000FAC  0012               	return		;funcret
  1961  000FAE                     __end_of_LcClear:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _init_ports *****************
  1965 ;; Defined at:
  1966 ;;		line 20 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         0       0       0
  1982 ;;      Temps:          0       0       0
  1983 ;;      Totals:         0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text15
  1995  000FF6                     __ptext15:
  1996                           	callstack 0
  1997  000FF6                     _init_ports:
  1998                           	callstack 28
  1999                           
  2000                           ;incstack = 0
  2001  000FF6  0E03               	movlw	3
  2002  000FF8  6E92               	movwf	146,c	;volatile
  2003  000FFA  0EE0               	movlw	224
  2004  000FFC  6E93               	movwf	147,c	;volatile
  2005  000FFE  968A               	bcf	138,3,c	;volatile
  2006  001000  908A               	bcf	138,0,c	;volatile
  2007  001002  928A               	bcf	138,1,c	;volatile
  2008                           
  2009                           ;main.c: 43:     TRISC = 0xC0;
  2010  001004  0EC0               	movlw	192
  2011  001006  6E94               	movwf	148,c	;volatile
  2012                           
  2013                           ;main.c: 53:     TRISD = 0x8F;
  2014  001008  0E8F               	movlw	143
  2015  00100A  6E95               	movwf	149,c	;volatile
  2016                           
  2017                           ;main.c: 54:     LATD = 0x00;
  2018  00100C  0E00               	movlw	0
  2019  00100E  6E8C               	movwf	140,c	;volatile
  2020                           
  2021                           ;main.c: 57:     EECON1bits.EEPGD = 1;
  2022  001010  8EA6               	bsf	166,7,c	;volsfr
  2023                           
  2024                           ;main.c: 58:     EECON1bits.CFGS = 0;
  2025  001012  9CA6               	bcf	166,6,c	;volsfr
  2026  001014  0012               	return		;funcret
  2027  001016                     __end_of_init_ports:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _initAltaveu *****************
  2031 ;; Defined at:
  2032 ;;		line 10 in file "Altaveu.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1
  2046 ;;      Params:         0       0       0
  2047 ;;      Locals:         0       0       0
  2048 ;;      Temps:          0       0       0
  2049 ;;      Totals:         0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 3
  2053 ;; This function calls:
  2054 ;;		_TiGetTimer
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text16
  2061  0010A2                     __ptext16:
  2062                           	callstack 0
  2063  0010A2                     _initAltaveu:
  2064                           	callstack 27
  2065                           
  2066                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2067                           
  2068                           ;incstack = 0
  2069  0010A2  EC15  F007         	call	_TiGetTimer	;wreg free
  2070  0010A6  6E26               	movwf	_timerAltaveu^0,c
  2071  0010A8  0012               	return		;funcret
  2072  0010AA                     __end_of_initAltaveu:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _escriureEEPROM *****************
  2076 ;; Defined at:
  2077 ;;		line 176 in file "Usuaris.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  caca            1    5[COMRAM] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1
  2091 ;;      Params:         0       0       0
  2092 ;;      Locals:         1       0       0
  2093 ;;      Temps:          0       0       0
  2094 ;;      Totals:         1       0       0
  2095 ;;Total ram usage:        1 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 2
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_main
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text17
  2106  000F30                     __ptext17:
  2107                           	callstack 0
  2108  000F30                     _escriureEEPROM:
  2109                           	callstack 28
  2110                           
  2111                           ;Usuaris.c: 177:     for(unsigned char caca = 0; caca < 160; caca++){
  2112                           
  2113                           ;incstack = 0
  2114  000F30  0E00               	movlw	0
  2115  000F32  6E67               	movwf	escriureEEPROM@caca^0,c
  2116  000F34                     l1655:
  2117                           
  2118                           ;Usuaris.c: 178:         EEADR = 0;
  2119  000F34  0E00               	movlw	0
  2120  000F36  6EA9               	movwf	169,c	;volatile
  2121                           
  2122                           ;Usuaris.c: 179:         EEDATA = 0;
  2123  000F38  0E00               	movlw	0
  2124  000F3A  6EA8               	movwf	168,c	;volatile
  2125                           
  2126                           ;Usuaris.c: 180:         EECON1bits.EEPGD = 0;
  2127  000F3C  9EA6               	bcf	166,7,c	;volsfr
  2128                           
  2129                           ;Usuaris.c: 181:         EECON1bits.CFGS = 0;
  2130  000F3E  9CA6               	bcf	166,6,c	;volsfr
  2131                           
  2132                           ;Usuaris.c: 182:         EECON1bits.WREN = 1;
  2133  000F40  84A6               	bsf	166,2,c	;volsfr
  2134                           
  2135                           ;Usuaris.c: 183:         INTCONbits.GIE = 0;
  2136  000F42  9EF2               	bcf	242,7,c	;volatile
  2137                           
  2138                           ;Usuaris.c: 184:         EECON2 = 85;
  2139  000F44  0E55               	movlw	85
  2140  000F46  6EA7               	movwf	167,c	;volsfr
  2141                           
  2142                           ;Usuaris.c: 185:         EECON2 = 170;
  2143  000F48  0EAA               	movlw	170
  2144  000F4A  6EA7               	movwf	167,c	;volsfr
  2145                           
  2146                           ;Usuaris.c: 186:          EECON1bits.WR = 1;
  2147  000F4C  82A6               	bsf	166,1,c	;volsfr
  2148  000F4E                     l595:
  2149                           
  2150                           ;Usuaris.c: 187:         while(EECON1bits.WR){
  2151  000F4E  B2A6               	btfsc	166,1,c	;volsfr
  2152  000F50  D7FE               	goto	l595
  2153                           
  2154                           ;Usuaris.c: 192:     }
  2155  000F52  2A67               	incf	escriureEEPROM@caca^0,f,c
  2156  000F54  0E9F               	movlw	159
  2157  000F56  6467               	cpfsgt	escriureEEPROM@caca^0,c
  2158  000F58  D7ED               	goto	l1655
  2159                           
  2160                           ;Usuaris.c: 193:    INTCONbits.GIE = 1;
  2161  000F5A  8EF2               	bsf	242,7,c	;volatile
  2162  000F5C  0012               	return		;funcret
  2163  000F5E                     __end_of_escriureEEPROM:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _UmotorUsers *****************
  2167 ;; Defined at:
  2168 ;;		line 117 in file "Usuaris.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1
  2182 ;;      Params:         0       0       0
  2183 ;;      Locals:         0       0       0
  2184 ;;      Temps:          2       0       0
  2185 ;;      Totals:         2       0       0
  2186 ;;Total ram usage:        2 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 3
  2189 ;; This function calls:
  2190 ;;		_compareStrings
  2191 ;;		_escriureCharEEPROM
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text18
  2198  000798                     __ptext18:
  2199                           	callstack 0
  2200  000798                     _UmotorUsers:
  2201                           	callstack 27
  2202                           
  2203                           ;Usuaris.c: 118: static char state = 0;;Usuaris.c: 120:  switch(state) {
  2204                           
  2205                           ;incstack = 0
  2206  000798  D06C               	goto	l2963
  2207  00079A                     l569:
  2208                           
  2209                           ;Usuaris.c: 122:    if (!do_check_exists && !do_register) {
  2210  00079A  A678               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2211  00079C  B278               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2212  00079E  D005               	goto	l570
  2213                           
  2214                           ;Usuaris.c: 123:     i = 0;
  2215  0007A0  0E00               	movlw	0
  2216  0007A2  6E2A               	movwf	_i^0,c
  2217                           
  2218                           ;Usuaris.c: 124:     j = 0;
  2219  0007A4  0E00               	movlw	0
  2220  0007A6  6E29               	movwf	_j^0,c
  2221                           
  2222                           ;Usuaris.c: 125:    }
  2223  0007A8  0012               	return	
  2224  0007AA                     l570:
  2225  0007AA  A678               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2226  0007AC  D004               	goto	l572
  2227                           
  2228                           ;Usuaris.c: 127:     return_error = 0;
  2229  0007AE  9478               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  2230  0007B0                     l2905:
  2231                           
  2232                           ;Usuaris.c: 128:     state = 1;
  2233  0007B0  0E01               	movlw	1
  2234  0007B2  6E28               	movwf	UmotorUsers@state^0,c
  2235                           
  2236                           ;Usuaris.c: 129:    }
  2237  0007B4  0012               	return	
  2238  0007B6                     l572:
  2239  0007B6  A278               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2240  0007B8  0012               	return	
  2241  0007BA                     u2410:
  2242                           
  2243                           ;Usuaris.c: 131:     state = 2;
  2244  0007BA  0E02               	movlw	2
  2245  0007BC  6E28               	movwf	UmotorUsers@state^0,c
  2246                           
  2247                           ;Usuaris.c: 133:   break;
  2248  0007BE  0012               	return	
  2249  0007C0                     l2909:
  2250                           
  2251                           ;Usuaris.c: 135:    if (i < numUsuaris) {
  2252  0007C0  502C               	movf	_numUsuaris^0,w,c
  2253  0007C2  5C2A               	subwf	_i^0,w,c
  2254  0007C4  B0D8               	btfsc	status,0,c
  2255  0007C6  D016               	goto	l2919
  2256                           
  2257                           ;Usuaris.c: 136:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2258  0007C8  0E3E               	movlw	low _tmpUsername
  2259  0007CA  6E67               	movwf	compareStrings@a^0,c
  2260  0007CC  502A               	movf	_i^0,w,c
  2261  0007CE  0D17               	mullw	23
  2262  0007D0  0E00               	movlw	low _usuaris
  2263  0007D2  24F3               	addwf	243,w,c
  2264  0007D4  6E68               	movwf	compareStrings@b^0,c
  2265  0007D6  0E01               	movlw	high _usuaris
  2266  0007D8  20F4               	addwfc	prodh,w,c
  2267  0007DA  6E69               	movwf	(compareStrings@b+1)^0,c
  2268  0007DC  ECB5  F006         	call	_compareStrings	;wreg free
  2269  0007E0  0900               	iorlw	0
  2270  0007E2  A4D8               	btfss	status,2,c
  2271  0007E4  D005               	goto	u2455
  2272                           
  2273                           ;Usuaris.c: 137:      return_error = i;
  2274  0007E6  A02A               	btfss	_i^0,0,c
  2275  0007E8  D002               	goto	u2440
  2276  0007EA  8478               	bsf	(_return_error/(0+8))^0,_return_error& (0+7),c
  2277  0007EC  D001               	goto	u2455
  2278  0007EE                     u2440:
  2279  0007EE  9478               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  2280  0007F0                     u2455:
  2281                           
  2282                           ;Usuaris.c: 140:     i++;
  2283  0007F0  2A2A               	incf	_i^0,f,c
  2284  0007F2  D7DE               	goto	l2905
  2285  0007F4                     l2919:
  2286  0007F4  502C               	movf	_numUsuaris^0,w,c
  2287  0007F6  182A               	xorwf	_i^0,w,c
  2288  0007F8  A4D8               	btfss	status,2,c
  2289  0007FA  0012               	return	
  2290                           
  2291                           ;Usuaris.c: 144:     do_check_exists = 0;
  2292  0007FC  9678               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2293  0007FE                     l2923:
  2294                           
  2295                           ;Usuaris.c: 145:     state = 0;
  2296  0007FE  0E00               	movlw	0
  2297  000800  6E28               	movwf	UmotorUsers@state^0,c
  2298  000802  0012               	return	
  2299  000804                     l2925:
  2300                           
  2301                           ;Usuaris.c: 149:    if (i != 8) {
  2302  000804  0E08               	movlw	8
  2303  000806  182A               	xorwf	_i^0,w,c
  2304  000808  B4D8               	btfsc	status,2,c
  2305  00080A  D00C               	goto	l2935
  2306                           
  2307                           ;Usuaris.c: 150:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2308  00080C  C02B  F067         	movff	_indexNextUser,escriureCharEEPROM@pos
  2309  000810  502A               	movf	_i^0,w,c
  2310  000812  0F3E               	addlw	low _tmpUsername
  2311  000814  6ED9               	movwf	fsr2l,c
  2312  000816  6ADA               	clrf	fsr2h,c
  2313  000818  50DF               	movf	indf2,w,c
  2314  00081A  ECD7  F007         	call	_escriureCharEEPROM
  2315  00081E  2A2B               	incf	_indexNextUser^0,f,c
  2316                           
  2317                           ;Usuaris.c: 151:     i++;
  2318  000820  2A2A               	incf	_i^0,f,c
  2319  000822  D7CB               	goto	u2410
  2320  000824                     l2935:
  2321  000824  0E08               	movlw	8
  2322  000826  182A               	xorwf	_i^0,w,c
  2323  000828  A4D8               	btfss	status,2,c
  2324  00082A  0012               	return	
  2325                           
  2326                           ;Usuaris.c: 155:     i = 0;
  2327  00082C  0E00               	movlw	0
  2328  00082E  6E2A               	movwf	_i^0,c
  2329                           
  2330                           ;Usuaris.c: 156:     state = 3;
  2331  000830  0E03               	movlw	3
  2332  000832  6E28               	movwf	UmotorUsers@state^0,c
  2333  000834  0012               	return	
  2334  000836                     l2939:
  2335                           
  2336                           ;Usuaris.c: 160:    if (i != 8) {
  2337  000836  0E08               	movlw	8
  2338  000838  182A               	xorwf	_i^0,w,c
  2339  00083A  B4D8               	btfsc	status,2,c
  2340  00083C  D00E               	goto	l2949
  2341                           
  2342                           ;Usuaris.c: 161:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2343  00083E  C02B  F067         	movff	_indexNextUser,escriureCharEEPROM@pos
  2344  000842  502A               	movf	_i^0,w,c
  2345  000844  0F19               	addlw	low _tmpPassword
  2346  000846  6ED9               	movwf	fsr2l,c
  2347  000848  6ADA               	clrf	fsr2h,c
  2348  00084A  50DF               	movf	indf2,w,c
  2349  00084C  ECD7  F007         	call	_escriureCharEEPROM
  2350  000850  2A2B               	incf	_indexNextUser^0,f,c
  2351                           
  2352                           ;Usuaris.c: 162:     i++;
  2353  000852  2A2A               	incf	_i^0,f,c
  2354                           
  2355                           ;Usuaris.c: 163:     state = 3;
  2356  000854  0E03               	movlw	3
  2357  000856  6E28               	movwf	UmotorUsers@state^0,c
  2358                           
  2359                           ;Usuaris.c: 164:    }
  2360  000858  0012               	return	
  2361  00085A                     l2949:
  2362  00085A  0E08               	movlw	8
  2363  00085C  182A               	xorwf	_i^0,w,c
  2364  00085E  A4D8               	btfss	status,2,c
  2365  000860  0012               	return	
  2366                           
  2367                           ;Usuaris.c: 166:     do_register = 0;
  2368  000862  9278               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2369                           
  2370                           ;Usuaris.c: 167:     indexNextUser++;
  2371  000864  2A2B               	incf	_indexNextUser^0,f,c
  2372                           
  2373                           ;Usuaris.c: 168:     if(numUsuaris != 8) numUsuaris++;
  2374  000866  0E08               	movlw	8
  2375  000868  182C               	xorwf	_numUsuaris^0,w,c
  2376  00086A  B4D8               	btfsc	status,2,c
  2377  00086C  D7C8               	goto	l2923
  2378  00086E  2A2C               	incf	_numUsuaris^0,f,c
  2379  000870  D7C6               	goto	l2923
  2380  000872                     l2963:
  2381  000872  5028               	movf	UmotorUsers@state^0,w,c
  2382  000874  6E6C               	movwf	??_UmotorUsers^0,c
  2383  000876  6A6D               	clrf	(??_UmotorUsers+1)^0,c
  2384                           
  2385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2386                           ; Switch size 1, requested type "simple"
  2387                           ; Number of cases is 1, Range of values is 0 to 0
  2388                           ; switch strategies available:
  2389                           ; Name         Instructions Cycles
  2390                           ; simple_byte            4     3 (average)
  2391                           ;	Chosen strategy is simple_byte
  2392  000878  506D               	movf	(??_UmotorUsers+1)^0,w,c
  2393  00087A  0A00               	xorlw	0	; case 0
  2394  00087C  A4D8               	btfss	status,2,c
  2395  00087E  0012               	return	
  2396                           
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 4, Range of values is 0 to 3
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte           13     7 (average)
  2402                           ;	Chosen strategy is simple_byte
  2403  000880  506C               	movf	??_UmotorUsers^0,w,c
  2404  000882  0A00               	xorlw	0	; case 0
  2405  000884  B4D8               	btfsc	status,2,c
  2406  000886  D789               	goto	l569
  2407  000888  0A01               	xorlw	1	; case 1
  2408  00088A  B4D8               	btfsc	status,2,c
  2409  00088C  D799               	goto	l2909
  2410  00088E  0A03               	xorlw	3	; case 2
  2411  000890  B4D8               	btfsc	status,2,c
  2412  000892  D7B8               	goto	l2925
  2413  000894  0A01               	xorlw	1	; case 3
  2414  000896  A4D8               	btfss	status,2,c
  2415  000898  0012               	return	
  2416  00089A  D7CD               	goto	l2939
  2417  00089C                     __end_of_UmotorUsers:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _escriureCharEEPROM *****************
  2421 ;; Defined at:
  2422 ;;		line 51 in file "Usuaris.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  c               1    wreg     unsigned char 
  2425 ;;  pos             1    5[COMRAM] unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  c               1    6[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1
  2437 ;;      Params:         1       0       0
  2438 ;;      Locals:         1       0       0
  2439 ;;      Temps:          0       0       0
  2440 ;;      Totals:         2       0       0
  2441 ;;Total ram usage:        2 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 2
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_UmotorUsers
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text19
  2452  000FAE                     __ptext19:
  2453                           	callstack 0
  2454  000FAE                     _escriureCharEEPROM:
  2455                           	callstack 27
  2456                           
  2457                           ;incstack = 0
  2458                           ;escriureCharEEPROM@c stored from wreg
  2459  000FAE  6E68               	movwf	escriureCharEEPROM@c^0,c
  2460                           
  2461                           ;Usuaris.c: 52:     EEADR = c;
  2462  000FB0  C068  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2463                           
  2464                           ;Usuaris.c: 53:     EEDATA = pos;
  2465  000FB4  C067  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2466                           
  2467                           ;Usuaris.c: 54:     EECON1bits.EEPGD = 0;
  2468  000FB8  9EA6               	bcf	166,7,c	;volsfr
  2469                           
  2470                           ;Usuaris.c: 55:     EECON1bits.CFGS = 0;
  2471  000FBA  9CA6               	bcf	166,6,c	;volsfr
  2472                           
  2473                           ;Usuaris.c: 56:     EECON1bits.WREN = 1;
  2474  000FBC  84A6               	bsf	166,2,c	;volsfr
  2475                           
  2476                           ;Usuaris.c: 57:     INTCONbits.GIE = 0;
  2477  000FBE  9EF2               	bcf	242,7,c	;volatile
  2478                           
  2479                           ;Usuaris.c: 58:     EECON2 = 85;
  2480  000FC0  0E55               	movlw	85
  2481  000FC2  6EA7               	movwf	167,c	;volsfr
  2482                           
  2483                           ;Usuaris.c: 59:     EECON2 = 170;
  2484  000FC4  0EAA               	movlw	170
  2485  000FC6  6EA7               	movwf	167,c	;volsfr
  2486                           
  2487                           ;Usuaris.c: 60:      EECON1bits.WR = 1;
  2488  000FC8  82A6               	bsf	166,1,c	;volsfr
  2489  000FCA                     l531:
  2490  000FCA  B2A6               	btfsc	166,1,c	;volsfr
  2491  000FCC  D7FE               	goto	l531
  2492                           
  2493                           ;Usuaris.c: 62:    INTCONbits.GIE = 1;
  2494  000FCE  8EF2               	bsf	242,7,c	;volatile
  2495  000FD0  0012               	return		;funcret
  2496  000FD2                     __end_of_escriureCharEEPROM:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _compareStrings *****************
  2500 ;; Defined at:
  2501 ;;		line 107 in file "Usuaris.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2504 ;;		 -> tmpUsername(9), 
  2505 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2506 ;;		 -> usuaris.username(9), usuaris(184), 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1
  2518 ;;      Params:         3       0       0
  2519 ;;      Locals:         0       0       0
  2520 ;;      Temps:          2       0       0
  2521 ;;      Totals:         5       0       0
  2522 ;;Total ram usage:        5 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_UmotorUsers
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text20
  2533  000D6A                     __ptext20:
  2534                           	callstack 0
  2535  000D6A                     _compareStrings:
  2536                           	callstack 27
  2537                           
  2538                           ;Usuaris.c: 108:     while (*a){
  2539                           
  2540                           ;incstack = 0
  2541  000D6A  D00E               	goto	l2477
  2542  000D6C                     l2471:
  2543                           
  2544                           ;Usuaris.c: 109:         if (*a != *b)break;
  2545  000D6C  C068  FFD9         	movff	compareStrings@b,fsr2l
  2546  000D70  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  2547  000D74  5067               	movf	compareStrings@a^0,w,c
  2548  000D76  6EE1               	movwf	fsr1l,c
  2549  000D78  6AE2               	clrf	fsr1h,c
  2550  000D7A  50DE               	movf	postinc2,w,c
  2551  000D7C  18E6               	xorwf	postinc1,w,c
  2552  000D7E  A4D8               	btfss	status,2,c
  2553  000D80  D009               	goto	u1750
  2554                           
  2555                           ;Usuaris.c: 110:         a++;
  2556  000D82  2A67               	incf	compareStrings@a^0,f,c
  2557                           
  2558                           ;Usuaris.c: 111:         b++;
  2559  000D84  4A68               	infsnz	compareStrings@b^0,f,c
  2560  000D86  2A69               	incf	(compareStrings@b+1)^0,f,c
  2561  000D88                     l2477:
  2562                           
  2563                           ;Usuaris.c: 108:     while (*a){
  2564  000D88  5067               	movf	compareStrings@a^0,w,c
  2565  000D8A  6ED9               	movwf	fsr2l,c
  2566  000D8C  6ADA               	clrf	fsr2h,c
  2567  000D8E  50DF               	movf	indf2,w,c
  2568  000D90  A4D8               	btfss	status,2,c
  2569  000D92  D7EC               	goto	l2471
  2570  000D94                     u1750:
  2571                           
  2572                           ;Usuaris.c: 113:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2573  000D94  C068  FFD9         	movff	compareStrings@b,fsr2l
  2574  000D98  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  2575  000D9C  50DF               	movf	indf2,w,c
  2576  000D9E  6E6A               	movwf	??_compareStrings^0,c
  2577  000DA0  5067               	movf	compareStrings@a^0,w,c
  2578  000DA2  6ED9               	movwf	fsr2l,c
  2579  000DA4  6ADA               	clrf	fsr2h,c
  2580  000DA6  50DF               	movf	indf2,w,c
  2581  000DA8  6E6B               	movwf	(??_compareStrings+1)^0,c
  2582  000DAA  506A               	movf	??_compareStrings^0,w,c
  2583  000DAC  5C6B               	subwf	(??_compareStrings+1)^0,w,c
  2584  000DAE  0012               	return		;funcret
  2585  000DB0                     __end_of_compareStrings:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _Uinit *****************
  2589 ;; Defined at:
  2590 ;;		line 64 in file "Usuaris.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  j               1    9[COMRAM] unsigned char 
  2595 ;;  j               1    8[COMRAM] unsigned char 
  2596 ;;  i               1    7[COMRAM] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1
  2606 ;;      Params:         0       0       0
  2607 ;;      Locals:         3       0       0
  2608 ;;      Temps:          2       0       0
  2609 ;;      Totals:         5       0       0
  2610 ;;Total ram usage:        5 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text21
  2621  000A2C                     __ptext21:
  2622                           	callstack 0
  2623  000A2C                     _Uinit:
  2624                           	callstack 28
  2625                           
  2626                           ;Usuaris.c: 69:     EEADR = 0;
  2627                           
  2628                           ;incstack = 0
  2629  000A2C  0E00               	movlw	0
  2630  000A2E  6EA9               	movwf	169,c	;volatile
  2631                           
  2632                           ;Usuaris.c: 70:     EECON1bits.EEPGD = 0;
  2633  000A30  9EA6               	bcf	166,7,c	;volsfr
  2634                           
  2635                           ;Usuaris.c: 71:     EECON1bits.CFGS = 0;
  2636  000A32  9CA6               	bcf	166,6,c	;volsfr
  2637                           
  2638                           ;Usuaris.c: 72:     EECON1bits.RD = 1;
  2639  000A34  80A6               	bsf	166,0,c	;volsfr
  2640  000A36                     l537:
  2641  000A36  B0A6               	btfsc	166,0,c	;volsfr
  2642  000A38  D7FE               	goto	l537
  2643                           
  2644                           ;Usuaris.c: 74:     numUsuaris = EEDATA;
  2645  000A3A  CFA8 F02C          	movff	4008,_numUsuaris	;volatile
  2646                           
  2647                           ;Usuaris.c: 78:     EEADR++;
  2648  000A3E  2AA9               	incf	169,f,c	;volatile
  2649                           
  2650                           ;Usuaris.c: 79:     EECON1bits.EEPGD = 0;
  2651  000A40  9EA6               	bcf	166,7,c	;volsfr
  2652                           
  2653                           ;Usuaris.c: 80:     EECON1bits.CFGS = 0;
  2654  000A42  9CA6               	bcf	166,6,c	;volsfr
  2655  000A44                     l540:
  2656  000A44  B0A6               	btfsc	166,0,c	;volsfr
  2657  000A46  D7FE               	goto	l540
  2658                           
  2659                           ;Usuaris.c: 83:     indexNextUser = EEDATA;
  2660  000A48  CFA8 F02B          	movff	4008,_indexNextUser	;volatile
  2661                           
  2662                           ;Usuaris.c: 84:     EEADR++;
  2663  000A4C  2AA9               	incf	169,f,c	;volatile
  2664                           
  2665                           ;Usuaris.c: 86:     for(char i = 0; i< numUsuaris; i++){
  2666  000A4E  0E00               	movlw	0
  2667  000A50  6E69               	movwf	Uinit@i^0,c
  2668  000A52  D041               	goto	l1875
  2669  000A54                     l1845:
  2670                           
  2671                           ;Usuaris.c: 87:         for(char j = 0; j<9; j++){
  2672  000A54  0E00               	movlw	0
  2673  000A56  6E6A               	movwf	Uinit@j^0,c
  2674  000A58                     l545:
  2675                           
  2676                           ;Usuaris.c: 88:             EECON1bits.EEPGD = 0;
  2677  000A58  9EA6               	bcf	166,7,c	;volsfr
  2678                           
  2679                           ;Usuaris.c: 89:             EECON1bits.CFGS = 0;
  2680  000A5A  9CA6               	bcf	166,6,c	;volsfr
  2681                           
  2682                           ;Usuaris.c: 90:             EECON1bits.RD = 1;
  2683  000A5C  80A6               	bsf	166,0,c	;volsfr
  2684  000A5E                     l547:
  2685  000A5E  B0A6               	btfsc	166,0,c	;volsfr
  2686  000A60  D7FE               	goto	l547
  2687                           
  2688                           ;Usuaris.c: 92:             usuaris[i].username[j] = EEDATA;
  2689  000A62  5069               	movf	Uinit@i^0,w,c
  2690  000A64  0D17               	mullw	23
  2691  000A66  0E00               	movlw	low _usuaris
  2692  000A68  6E67               	movwf	??_Uinit^0,c
  2693  000A6A  0E01               	movlw	high _usuaris
  2694  000A6C  6E68               	movwf	(??_Uinit+1)^0,c
  2695  000A6E  50F3               	movf	243,w,c
  2696  000A70  2667               	addwf	??_Uinit^0,f,c
  2697  000A72  50F4               	movf	244,w,c
  2698  000A74  2268               	addwfc	(??_Uinit+1)^0,f,c
  2699  000A76  506A               	movf	Uinit@j^0,w,c
  2700  000A78  2467               	addwf	??_Uinit^0,w,c
  2701  000A7A  6ED9               	movwf	fsr2l,c
  2702  000A7C  0E00               	movlw	0
  2703  000A7E  2068               	addwfc	(??_Uinit+1)^0,w,c
  2704  000A80  6EDA               	movwf	fsr2h,c
  2705  000A82  CFA8 FFDF          	movff	4008,indf2	;volatile
  2706                           
  2707                           ;Usuaris.c: 93:             EEADR++;
  2708  000A86  2AA9               	incf	169,f,c	;volatile
  2709                           
  2710                           ;Usuaris.c: 94:         }
  2711  000A88  2A6A               	incf	Uinit@j^0,f,c
  2712  000A8A  0E08               	movlw	8
  2713  000A8C  646A               	cpfsgt	Uinit@j^0,c
  2714  000A8E  D7E4               	goto	l545
  2715                           
  2716                           ;Usuaris.c: 95:         for(char j = 0; j<9; j++){
  2717  000A90  0E00               	movlw	0
  2718  000A92  6E6B               	movwf	Uinit@j_1028^0,c
  2719  000A94                     l550:
  2720                           
  2721                           ;Usuaris.c: 96:             EECON1bits.EEPGD = 0;
  2722  000A94  9EA6               	bcf	166,7,c	;volsfr
  2723                           
  2724                           ;Usuaris.c: 97:             EECON1bits.CFGS = 0;
  2725  000A96  9CA6               	bcf	166,6,c	;volsfr
  2726                           
  2727                           ;Usuaris.c: 98:             EECON1bits.RD = 1;
  2728  000A98  80A6               	bsf	166,0,c	;volsfr
  2729  000A9A                     l552:
  2730  000A9A  B0A6               	btfsc	166,0,c	;volsfr
  2731  000A9C  D7FE               	goto	l552
  2732                           
  2733                           ;Usuaris.c: 100:             usuaris[i].password[j] = EEDATA;
  2734  000A9E  5069               	movf	Uinit@i^0,w,c
  2735  000AA0  0D17               	mullw	23
  2736  000AA2  0E00               	movlw	low _usuaris
  2737  000AA4  6E67               	movwf	??_Uinit^0,c
  2738  000AA6  0E01               	movlw	high _usuaris
  2739  000AA8  6E68               	movwf	(??_Uinit+1)^0,c
  2740  000AAA  0E09               	movlw	9
  2741  000AAC  2667               	addwf	??_Uinit^0,f,c
  2742  000AAE  0E00               	movlw	0
  2743  000AB0  2268               	addwfc	(??_Uinit+1)^0,f,c
  2744  000AB2  50F3               	movf	243,w,c
  2745  000AB4  2667               	addwf	??_Uinit^0,f,c
  2746  000AB6  50F4               	movf	244,w,c
  2747  000AB8  2268               	addwfc	(??_Uinit+1)^0,f,c
  2748  000ABA  506B               	movf	Uinit@j_1028^0,w,c
  2749  000ABC  2467               	addwf	??_Uinit^0,w,c
  2750  000ABE  6ED9               	movwf	fsr2l,c
  2751  000AC0  0E00               	movlw	0
  2752  000AC2  2068               	addwfc	(??_Uinit+1)^0,w,c
  2753  000AC4  6EDA               	movwf	fsr2h,c
  2754  000AC6  CFA8 FFDF          	movff	4008,indf2	;volatile
  2755                           
  2756                           ;Usuaris.c: 101:             EEADR++;
  2757  000ACA  2AA9               	incf	169,f,c	;volatile
  2758                           
  2759                           ;Usuaris.c: 102:         }
  2760  000ACC  2A6B               	incf	Uinit@j_1028^0,f,c
  2761  000ACE  0E08               	movlw	8
  2762  000AD0  646B               	cpfsgt	Uinit@j_1028^0,c
  2763  000AD2  D7E0               	goto	l550
  2764                           
  2765                           ;Usuaris.c: 103:     }
  2766  000AD4  2A69               	incf	Uinit@i^0,f,c
  2767  000AD6                     l1875:
  2768  000AD6  502C               	movf	_numUsuaris^0,w,c
  2769  000AD8  5C69               	subwf	Uinit@i^0,w,c
  2770  000ADA  B0D8               	btfsc	status,0,c
  2771  000ADC  0012               	return	
  2772  000ADE  D7BA               	goto	l1845
  2773  000AE0                     __end_of_Uinit:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _TiInitTimer *****************
  2777 ;; Defined at:
  2778 ;;		line 18 in file "TiTTimer.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1
  2792 ;;      Params:         0       0       0
  2793 ;;      Locals:         0       0       0
  2794 ;;      Temps:          0       0       0
  2795 ;;      Totals:         0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 2
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text22
  2807  000E64                     __ptext22:
  2808                           	callstack 0
  2809  000E64                     _TiInitTimer:
  2810                           	callstack 28
  2811                           
  2812                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  2813                           
  2814                           ;incstack = 0
  2815  000E64  9ED0               	bcf	208,7,c	;volatile
  2816                           
  2817                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  2818  000E66  8EF2               	bsf	242,7,c	;volatile
  2819                           
  2820                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  2821  000E68  8CF2               	bsf	242,6,c	;volatile
  2822                           
  2823                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  2824  000E6A  8AF2               	bsf	242,5,c	;volatile
  2825                           
  2826                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  2827  000E6C  94F2               	bcf	242,2,c	;volatile
  2828                           
  2829                           ;TiTTimer.c: 25:     T0CON = 136;
  2830  000E6E  0E88               	movlw	136
  2831  000E70  6ED5               	movwf	213,c	;volatile
  2832                           
  2833                           ;TiTTimer.c: 27:     TMR0H = 223;
  2834  000E72  0EDF               	movlw	223
  2835  000E74  6ED7               	movwf	215,c	;volatile
  2836                           
  2837                           ;TiTTimer.c: 28:     TMR0L = 148;
  2838  000E76  0E94               	movlw	148
  2839  000E78  6ED6               	movwf	214,c	;volatile
  2840                           
  2841                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  2842  000E7A  8ED5               	bsf	213,7,c	;volatile
  2843                           
  2844                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  2845  000E7C  0E00               	movlw	0
  2846  000E7E  6E31               	movwf	_counter^0,c
  2847  000E80                     l1677:
  2848  000E80  0E07               	movlw	7
  2849  000E82  6431               	cpfsgt	_counter^0,c
  2850  000E84  D001               	goto	l1681
  2851  000E86  0012               	return	
  2852  000E88                     l1681:
  2853                           
  2854                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  2855  000E88  5031               	movf	_counter^0,w,c
  2856  000E8A  0D03               	mullw	3
  2857  000E8C  50F3               	movf	243,w,c
  2858  000E8E  0F03               	addlw	low (_s_Timers+2)
  2859  000E90  6ED9               	movwf	fsr2l,c
  2860  000E92  6ADA               	clrf	fsr2h,c
  2861  000E94  0E00               	movlw	0
  2862  000E96  6EDF               	movwf	indf2,c
  2863                           
  2864                           ;TiTTimer.c: 33:     }
  2865  000E98  2A31               	incf	_counter^0,f,c
  2866  000E9A  D7F2               	goto	l1677
  2867  000E9C                     __end_of_TiInitTimer:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _TeTeclat *****************
  2871 ;; Defined at:
  2872 ;;		line 22 in file "TeTeclat.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1
  2886 ;;      Params:         0       0       0
  2887 ;;      Locals:         0       0       0
  2888 ;;      Temps:          3       0       0
  2889 ;;      Totals:         3       0       0
  2890 ;;Total ram usage:        3 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 3
  2893 ;; This function calls:
  2894 ;;		_MsetNovaTecla
  2895 ;;		_SsetNovaTecla
  2896 ;;		_TiGetTics
  2897 ;;		_TiResetTics
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text23
  2904  000634                     __ptext23:
  2905                           	callstack 0
  2906  000634                     _TeTeclat:
  2907                           	callstack 27
  2908                           
  2909                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  2910                           
  2911                           ;incstack = 0
  2912  000634  A083               	btfss	131,0,c	;volatile
  2913  000636  D003               	goto	u2520
  2914  000638  6A6E               	clrf	??_TeTeclat^0,c
  2915  00063A  2A6E               	incf	??_TeTeclat^0,f,c
  2916  00063C  D001               	goto	u2528
  2917  00063E                     u2520:
  2918  00063E  6A6E               	clrf	??_TeTeclat^0,c
  2919  000640                     u2528:
  2920  000640  A283               	btfss	131,1,c	;volatile
  2921  000642  D002               	goto	u2530
  2922  000644  0E01               	movlw	1
  2923  000646  D001               	goto	u2536
  2924  000648                     u2530:
  2925  000648  0E00               	movlw	0
  2926  00064A                     u2536:
  2927  00064A  0D02               	mullw	2
  2928  00064C  CFF3 F06F          	movff	prodl,??_TeTeclat+1
  2929  000650  A483               	btfss	131,2,c	;volatile
  2930  000652  D002               	goto	u2540
  2931  000654  0E01               	movlw	1
  2932  000656  D001               	goto	u2546
  2933  000658                     u2540:
  2934  000658  0E00               	movlw	0
  2935  00065A                     u2546:
  2936  00065A  0D03               	mullw	3
  2937  00065C  CFF3 F070          	movff	prodl,??_TeTeclat+2
  2938  000660  A683               	btfss	131,3,c	;volatile
  2939  000662  D002               	goto	u2550
  2940  000664  0E01               	movlw	1
  2941  000666  D001               	goto	u2556
  2942  000668                     u2550:
  2943  000668  0E00               	movlw	0
  2944  00066A                     u2556:
  2945  00066A  0D04               	mullw	4
  2946  00066C  50F3               	movf	243,w,c
  2947  00066E  2470               	addwf	(??_TeTeclat+2)^0,w,c
  2948  000670  246F               	addwf	(??_TeTeclat+1)^0,w,c
  2949  000672  246E               	addwf	??_TeTeclat^0,w,c
  2950  000674  6E32               	movwf	TeTeclat@files^0,c
  2951                           
  2952                           ;TeTeclat.c: 27:  switch(state) {
  2953  000676  D06F               	goto	l3045
  2954  000678                     l2971:
  2955                           
  2956                           ;TeTeclat.c: 29:    if (files==0) {
  2957  000678  5032               	movf	TeTeclat@files^0,w,c
  2958  00067A  A4D8               	btfss	status,2,c
  2959  00067C  D007               	goto	l2979
  2960                           
  2961                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  2962  00067E  888C               	bsf	140,4,c	;volatile
  2963                           
  2964                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  2965  000680  9A8C               	bcf	140,5,c	;volatile
  2966                           
  2967                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  2968  000682  9C8C               	bcf	140,6,c	;volatile
  2969                           
  2970                           ;TeTeclat.c: 33:     cols=0;
  2971  000684  0E00               	movlw	0
  2972  000686  6E33               	movwf	TeTeclat@cols^0,c
  2973  000688                     l2977:
  2974                           
  2975                           ;TeTeclat.c: 34:     state++;
  2976  000688  2A34               	incf	TeTeclat@state^0,f,c
  2977                           
  2978                           ;TeTeclat.c: 35:    }
  2979  00068A  0012               	return	
  2980  00068C                     l2979:
  2981  00068C  5032               	movf	TeTeclat@files^0,w,c
  2982  00068E  B4D8               	btfsc	status,2,c
  2983  000690  0012               	return	
  2984                           
  2985                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  2986  000692  5035               	movf	_tiTeclat^0,w,c
  2987  000694  EC19  F008         	call	_TiResetTics
  2988  000698                     l2983:
  2989                           
  2990                           ;TeTeclat.c: 38:     state = 3;
  2991  000698  0E03               	movlw	3
  2992  00069A  6E34               	movwf	TeTeclat@state^0,c
  2993  00069C  0012               	return	
  2994  00069E                     l2985:
  2995                           
  2996                           ;TeTeclat.c: 42:    if (files==0) {
  2997  00069E  5032               	movf	TeTeclat@files^0,w,c
  2998  0006A0  A4D8               	btfss	status,2,c
  2999  0006A2  D005               	goto	l2993
  3000                           
  3001                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3002  0006A4  988C               	bcf	140,4,c	;volatile
  3003                           
  3004                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3005  0006A6  8A8C               	bsf	140,5,c	;volatile
  3006                           
  3007                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3008  0006A8  9C8C               	bcf	140,6,c	;volatile
  3009                           
  3010                           ;TeTeclat.c: 46:     cols=1;
  3011  0006AA  0E01               	movlw	1
  3012  0006AC  D7EC               	goto	L1
  3013  0006AE                     l2993:
  3014  0006AE  5032               	movf	TeTeclat@files^0,w,c
  3015  0006B0  B4D8               	btfsc	status,2,c
  3016  0006B2  0012               	return	
  3017                           
  3018                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3019  0006B4  5035               	movf	_tiTeclat^0,w,c
  3020  0006B6  EC19  F008         	call	_TiResetTics
  3021  0006BA  D7EE               	goto	l2983
  3022  0006BC                     l2999:
  3023                           
  3024                           ;TeTeclat.c: 55:    if (files==0) {
  3025  0006BC  5032               	movf	TeTeclat@files^0,w,c
  3026  0006BE  A4D8               	btfss	status,2,c
  3027  0006C0  D008               	goto	l3005
  3028                           
  3029                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3030  0006C2  988C               	bcf	140,4,c	;volatile
  3031                           
  3032                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3033  0006C4  9A8C               	bcf	140,5,c	;volatile
  3034                           
  3035                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3036  0006C6  8C8C               	bsf	140,6,c	;volatile
  3037                           
  3038                           ;TeTeclat.c: 59:     cols=2;
  3039  0006C8  0E02               	movlw	2
  3040  0006CA  6E33               	movwf	TeTeclat@cols^0,c
  3041                           
  3042                           ;TeTeclat.c: 60:     state = 0;
  3043  0006CC  0E00               	movlw	0
  3044  0006CE  6E34               	movwf	TeTeclat@state^0,c
  3045                           
  3046                           ;TeTeclat.c: 61:    }
  3047  0006D0  0012               	return	
  3048  0006D2                     l3005:
  3049  0006D2  5032               	movf	TeTeclat@files^0,w,c
  3050  0006D4  B4D8               	btfsc	status,2,c
  3051  0006D6  0012               	return	
  3052                           
  3053                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3054  0006D8  5035               	movf	_tiTeclat^0,w,c
  3055  0006DA  EC19  F008         	call	_TiResetTics
  3056  0006DE  D7D4               	goto	l2977
  3057  0006E0                     l3011:
  3058                           
  3059                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3060  0006E0  5035               	movf	_tiTeclat^0,w,c
  3061  0006E2  ECAF  F007         	call	_TiGetTics
  3062  0006E6  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  3063  0006E8  0012               	return	
  3064  0006EA  D7CE               	goto	l2977
  3065  0006EC                     l3015:
  3066                           
  3067                           ;TeTeclat.c: 73:    if (files==0) {
  3068  0006EC  5032               	movf	TeTeclat@files^0,w,c
  3069  0006EE  A4D8               	btfss	status,2,c
  3070  0006F0  D003               	goto	l3019
  3071                           
  3072                           ;TeTeclat.c: 74:     state = 1;
  3073  0006F2  0E01               	movlw	1
  3074  0006F4  6E34               	movwf	TeTeclat@state^0,c
  3075                           
  3076                           ;TeTeclat.c: 75:    }
  3077  0006F6  0012               	return	
  3078  0006F8                     l3019:
  3079  0006F8  5032               	movf	TeTeclat@files^0,w,c
  3080  0006FA  B4D8               	btfsc	status,2,c
  3081  0006FC  0012               	return	
  3082                           
  3083                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3084  0006FE  5032               	movf	TeTeclat@files^0,w,c
  3085  000700  0D03               	mullw	3
  3086  000702  50F3               	movf	243,w,c
  3087  000704  0F53               	addlw	low (_teclaPremuda+253)
  3088  000706  2433               	addwf	TeTeclat@cols^0,w,c
  3089  000708  6ED9               	movwf	fsr2l,c
  3090  00070A  6ADA               	clrf	fsr2h,c
  3091  00070C  50DF               	movf	indf2,w,c
  3092  00070E  EC59  F008         	call	_MsetNovaTecla
  3093                           
  3094                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3095  000712  5032               	movf	TeTeclat@files^0,w,c
  3096  000714  0D03               	mullw	3
  3097  000716  50F3               	movf	243,w,c
  3098  000718  0F53               	addlw	low (_teclaPremuda+253)
  3099  00071A  2433               	addwf	TeTeclat@cols^0,w,c
  3100  00071C  6ED9               	movwf	fsr2l,c
  3101  00071E  6ADA               	clrf	fsr2h,c
  3102  000720  50DF               	movf	indf2,w,c
  3103  000722  EC55  F008         	call	_SsetNovaTecla
  3104  000726  D7B0               	goto	l2977
  3105  000728                     l3025:
  3106                           
  3107                           ;TeTeclat.c: 84:    if (files==0) {
  3108  000728  5032               	movf	TeTeclat@files^0,w,c
  3109  00072A  A4D8               	btfss	status,2,c
  3110  00072C  0012               	return	
  3111                           
  3112                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3113  00072E  5035               	movf	_tiTeclat^0,w,c
  3114  000730  EC19  F008         	call	_TiResetTics
  3115  000734  D7A9               	goto	l2977
  3116  000736                     l3031:
  3117                           
  3118                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3119  000736  5035               	movf	_tiTeclat^0,w,c
  3120  000738  ECAF  F007         	call	_TiGetTics
  3121  00073C  D7D4               	goto	L2
  3122  00073E                     l3035:
  3123                           
  3124                           ;TeTeclat.c: 95:    if (files!=0) {
  3125  00073E  5032               	movf	TeTeclat@files^0,w,c
  3126  000740  B4D8               	btfsc	status,2,c
  3127  000742  D003               	goto	l3039
  3128                           
  3129                           ;TeTeclat.c: 96:     state = 5;
  3130  000744  0E05               	movlw	5
  3131  000746  6E34               	movwf	TeTeclat@state^0,c
  3132                           
  3133                           ;TeTeclat.c: 97:    }
  3134  000748  0012               	return	
  3135  00074A                     l3039:
  3136  00074A  5032               	movf	TeTeclat@files^0,w,c
  3137  00074C  A4D8               	btfss	status,2,c
  3138  00074E  0012               	return	
  3139                           
  3140                           ;TeTeclat.c: 99:     state = 0;
  3141  000750  0E00               	movlw	0
  3142  000752  6E34               	movwf	TeTeclat@state^0,c
  3143  000754  0012               	return	
  3144  000756                     l3045:
  3145  000756  5034               	movf	TeTeclat@state^0,w,c
  3146  000758  6E6E               	movwf	??_TeTeclat^0,c
  3147  00075A  6A6F               	clrf	(??_TeTeclat+1)^0,c
  3148                           
  3149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3150                           ; Switch size 1, requested type "simple"
  3151                           ; Number of cases is 1, Range of values is 0 to 0
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte            4     3 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156  00075C  506F               	movf	(??_TeTeclat+1)^0,w,c
  3157  00075E  0A00               	xorlw	0	; case 0
  3158  000760  A4D8               	btfss	status,2,c
  3159  000762  0012               	return	
  3160                           
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 8, Range of values is 0 to 7
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte           25    13 (average)
  3166                           ;	Chosen strategy is simple_byte
  3167  000764  506E               	movf	??_TeTeclat^0,w,c
  3168  000766  0A00               	xorlw	0	; case 0
  3169  000768  B4D8               	btfsc	status,2,c
  3170  00076A  D786               	goto	l2971
  3171  00076C  0A01               	xorlw	1	; case 1
  3172  00076E  B4D8               	btfsc	status,2,c
  3173  000770  D796               	goto	l2985
  3174  000772  0A03               	xorlw	3	; case 2
  3175  000774  B4D8               	btfsc	status,2,c
  3176  000776  D7A2               	goto	l2999
  3177  000778  0A01               	xorlw	1	; case 3
  3178  00077A  B4D8               	btfsc	status,2,c
  3179  00077C  D7B1               	goto	l3011
  3180  00077E  0A07               	xorlw	7	; case 4
  3181  000780  B4D8               	btfsc	status,2,c
  3182  000782  D7B4               	goto	l3015
  3183  000784  0A01               	xorlw	1	; case 5
  3184  000786  B4D8               	btfsc	status,2,c
  3185  000788  D7CF               	goto	l3025
  3186  00078A  0A03               	xorlw	3	; case 6
  3187  00078C  B4D8               	btfsc	status,2,c
  3188  00078E  D7D3               	goto	l3031
  3189  000790  0A01               	xorlw	1	; case 7
  3190  000792  A4D8               	btfss	status,2,c
  3191  000794  0012               	return	
  3192  000796  D7D3               	goto	l3035
  3193  000798                     __end_of_TeTeclat:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _SsetNovaTecla *****************
  3197 ;; Defined at:
  3198 ;;		line 110 in file "Ssms.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  tecla           1    wreg     unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  tecla           1    5[COMRAM] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1
  3212 ;;      Params:         0       0       0
  3213 ;;      Locals:         1       0       0
  3214 ;;      Temps:          0       0       0
  3215 ;;      Totals:         1       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 2
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_TeTeclat
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text24
  3227  0010AA                     __ptext24:
  3228                           	callstack 0
  3229  0010AA                     _SsetNovaTecla:
  3230                           	callstack 27
  3231                           
  3232                           ;incstack = 0
  3233                           ;SsetNovaTecla@tecla stored from wreg
  3234  0010AA  6E67               	movwf	SsetNovaTecla@tecla^0,c
  3235                           
  3236                           ;Ssms.c: 111:     novaTecla = tecla;
  3237  0010AC  C067  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  3238  0010B0  0012               	return		;funcret
  3239  0010B2                     __end_of_SsetNovaTecla:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _MsetNovaTecla *****************
  3243 ;; Defined at:
  3244 ;;		line 17 in file "Menu.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  tecla           1    wreg     unsigned char 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  tecla           1    5[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1
  3258 ;;      Params:         0       0       0
  3259 ;;      Locals:         1       0       0
  3260 ;;      Temps:          0       0       0
  3261 ;;      Totals:         1       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 2
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_TeTeclat
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text25
  3273  0010B2                     __ptext25:
  3274                           	callstack 0
  3275  0010B2                     _MsetNovaTecla:
  3276                           	callstack 27
  3277                           
  3278                           ;incstack = 0
  3279                           ;MsetNovaTecla@tecla stored from wreg
  3280  0010B2  6E67               	movwf	MsetNovaTecla@tecla^0,c
  3281                           
  3282                           ;Menu.c: 18:     NovaTecla = tecla;
  3283  0010B4  C067  F051         	movff	MsetNovaTecla@tecla,_NovaTecla
  3284  0010B8  0012               	return		;funcret
  3285  0010BA                     __end_of_MsetNovaTecla:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _TeInit *****************
  3289 ;; Defined at:
  3290 ;;		line 18 in file "TeTeclat.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1
  3304 ;;      Params:         0       0       0
  3305 ;;      Locals:         0       0       0
  3306 ;;      Temps:          0       0       0
  3307 ;;      Totals:         0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 3
  3311 ;; This function calls:
  3312 ;;		_TiGetTimer
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text26
  3319  0010BA                     __ptext26:
  3320                           	callstack 0
  3321  0010BA                     _TeInit:
  3322                           	callstack 27
  3323                           
  3324                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3325                           
  3326                           ;incstack = 0
  3327  0010BA  EC15  F007         	call	_TiGetTimer	;wreg free
  3328  0010BE  6E35               	movwf	_tiTeclat^0,c
  3329  0010C0  0012               	return		;funcret
  3330  0010C2                     __end_of_TeInit:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _Sinit *****************
  3334 ;; Defined at:
  3335 ;;		line 16 in file "Ssms.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1
  3349 ;;      Params:         0       0       0
  3350 ;;      Locals:         0       0       0
  3351 ;;      Temps:          0       0       0
  3352 ;;      Totals:         0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 3
  3356 ;; This function calls:
  3357 ;;		_TiGetTimer
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text27
  3364  0010C2                     __ptext27:
  3365                           	callstack 0
  3366  0010C2                     _Sinit:
  3367                           	callstack 27
  3368                           
  3369                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3370                           
  3371                           ;incstack = 0
  3372  0010C2  EC15  F007         	call	_TiGetTimer	;wreg free
  3373  0010C6  6E53               	movwf	_timerSMS^0,c
  3374  0010C8  0012               	return		;funcret
  3375  0010CA                     __end_of_Sinit:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _SMotor *****************
  3379 ;; Defined at:
  3380 ;;		line 21 in file "Ssms.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1
  3394 ;;      Params:         0       0       0
  3395 ;;      Locals:         0       0       0
  3396 ;;      Temps:          2       0       0
  3397 ;;      Totals:         2       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 3
  3401 ;; This function calls:
  3402 ;;		_MNovaLletra
  3403 ;;		_TiGetTics
  3404 ;;		_TiResetTics
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text28
  3411  000488                     __ptext28:
  3412                           	callstack 0
  3413  000488                     _SMotor:
  3414                           	callstack 27
  3415                           
  3416                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3417                           
  3418                           ;incstack = 0
  3419  000488  D0B7               	goto	l2675
  3420  00048A                     l2547:
  3421                           
  3422                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3423  00048A  2854               	incf	_novaTecla^0,w,c
  3424  00048C  A4D8               	btfss	status,2,c
  3425  00048E  AA78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3426  000490  D006               	goto	l2555
  3427                           
  3428                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3429  000492  5053               	movf	_timerSMS^0,w,c
  3430  000494  EC19  F008         	call	_TiResetTics
  3431                           
  3432                           ;Ssms.c: 27:     state = 3;
  3433  000498  0E03               	movlw	3
  3434  00049A  6E36               	movwf	SMotor@state^0,c
  3435                           
  3436                           ;Ssms.c: 28:    }
  3437  00049C  0012               	return	
  3438  00049E                     l2555:
  3439  00049E  2854               	incf	_novaTecla^0,w,c
  3440  0004A0  A4D8               	btfss	status,2,c
  3441  0004A2  0012               	return	
  3442  0004A4  5053               	movf	_timerSMS^0,w,c
  3443  0004A6  ECAF  F007         	call	_TiGetTics
  3444  0004AA  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  3445  0004AC  0012               	return	
  3446  0004AE  0E5A               	movlw	90
  3447  0004B0  5C67               	subwf	?_TiGetTics^0,w,c
  3448  0004B2  0E02               	movlw	2
  3449  0004B4  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  3450  0004B6  A0D8               	btfss	status,0,c
  3451  0004B8  0012               	return	
  3452  0004BA  2855               	incf	_lletraASCII^0,w,c
  3453  0004BC  B4D8               	btfsc	status,2,c
  3454  0004BE  0012               	return	
  3455  0004C0  AA78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3456  0004C2  0012               	return	
  3457                           
  3458                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3459  0004C4  5055               	movf	_lletraASCII^0,w,c
  3460  0004C6  EC65  F008         	call	_MNovaLletra
  3461                           
  3462                           ;Ssms.c: 31:     lletraASCII = -1;
  3463  0004CA  6855               	setf	_lletraASCII^0,c
  3464                           
  3465                           ;Ssms.c: 32:     ultimaTecla = -1;
  3466  0004CC  6852               	setf	_ultimaTecla^0,c
  3467  0004CE  0012               	return	
  3468  0004D0                     l2569:
  3469                           
  3470                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3471  0004D0  5052               	movf	_ultimaTecla^0,w,c
  3472  0004D2  1854               	xorwf	_novaTecla^0,w,c
  3473  0004D4  A4D8               	btfss	status,2,c
  3474  0004D6  D010               	goto	l2577
  3475  0004D8  5053               	movf	_timerSMS^0,w,c
  3476  0004DA  ECAF  F007         	call	_TiGetTics
  3477  0004DE  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  3478  0004E0  D006               	goto	u1860
  3479  0004E2  0E5A               	movlw	90
  3480  0004E4  5C67               	subwf	?_TiGetTics^0,w,c
  3481  0004E6  0E02               	movlw	2
  3482  0004E8  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  3483  0004EA  B0D8               	btfsc	status,0,c
  3484  0004EC  D005               	goto	l2577
  3485  0004EE                     u1860:
  3486                           
  3487                           ;Ssms.c: 37:     novaTecla = -1;
  3488  0004EE  6854               	setf	_novaTecla^0,c
  3489                           
  3490                           ;Ssms.c: 38:     sumaPulsacions++;
  3491  0004F0  2A37               	incf	_sumaPulsacions^0,f,c
  3492                           
  3493                           ;Ssms.c: 39:     lletraASCII++;
  3494  0004F2  2A55               	incf	_lletraASCII^0,f,c
  3495                           
  3496                           ;Ssms.c: 40:     state++;
  3497  0004F4  2A36               	incf	SMotor@state^0,f,c
  3498                           
  3499                           ;Ssms.c: 41:    }
  3500  0004F6  0012               	return	
  3501  0004F8                     l2577:
  3502  0004F8  2854               	incf	_novaTecla^0,w,c
  3503  0004FA  B4D8               	btfsc	status,2,c
  3504  0004FC  0012               	return	
  3505  0004FE  5052               	movf	_ultimaTecla^0,w,c
  3506  000500  1854               	xorwf	_novaTecla^0,w,c
  3507  000502  B4D8               	btfsc	status,2,c
  3508  000504  0012               	return	
  3509                           
  3510                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  3511  000506  5055               	movf	_lletraASCII^0,w,c
  3512  000508  EC65  F008         	call	_MNovaLletra
  3513                           
  3514                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  3515  00050C  5054               	movf	_novaTecla^0,w,c
  3516  00050E  0F45               	addlw	low (_lletraInici+254)
  3517  000510  6ED9               	movwf	fsr2l,c
  3518  000512  6ADA               	clrf	fsr2h,c
  3519  000514  50DF               	movf	indf2,w,c
  3520  000516  6E55               	movwf	_lletraASCII^0,c
  3521                           
  3522                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  3523  000518  C054  F052         	movff	_novaTecla,_ultimaTecla
  3524                           
  3525                           ;Ssms.c: 46:     sumaPulsacions = 0;
  3526  00051C  0E00               	movlw	0
  3527  00051E  6E37               	movwf	_sumaPulsacions^0,c
  3528                           
  3529                           ;Ssms.c: 47:     novaTecla = -1;
  3530  000520  6854               	setf	_novaTecla^0,c
  3531                           
  3532                           ;Ssms.c: 48:     state--;
  3533  000522  0636               	decf	SMotor@state^0,f,c
  3534  000524  0012               	return	
  3535  000526                     l2593:
  3536                           
  3537                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  3538  000526  0E07               	movlw	7
  3539  000528  1852               	xorwf	_ultimaTecla^0,w,c
  3540  00052A  B4D8               	btfsc	status,2,c
  3541  00052C  D007               	goto	l2599
  3542  00052E  0E09               	movlw	9
  3543  000530  1852               	xorwf	_ultimaTecla^0,w,c
  3544  000532  B4D8               	btfsc	status,2,c
  3545  000534  D003               	goto	l2599
  3546                           
  3547                           ;Ssms.c: 53:     state = 5;
  3548  000536  0E05               	movlw	5
  3549  000538  6E36               	movwf	SMotor@state^0,c
  3550                           
  3551                           ;Ssms.c: 54:    }
  3552  00053A  0012               	return	
  3553  00053C                     l2599:
  3554  00053C  0E07               	movlw	7
  3555  00053E  1852               	xorwf	_ultimaTecla^0,w,c
  3556  000540  B4D8               	btfsc	status,2,c
  3557  000542  D004               	goto	u1920
  3558  000544  0E09               	movlw	9
  3559  000546  1852               	xorwf	_ultimaTecla^0,w,c
  3560  000548  A4D8               	btfss	status,2,c
  3561  00054A  0012               	return	
  3562  00054C                     u1920:
  3563                           
  3564                           ;Ssms.c: 56:     state = 6;
  3565  00054C  0E06               	movlw	6
  3566  00054E  6E36               	movwf	SMotor@state^0,c
  3567  000550  0012               	return	
  3568  000552                     l2605:
  3569                           
  3570                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  3571  000552  5054               	movf	_novaTecla^0,w,c
  3572  000554  0A80               	xorlw	128
  3573  000556  0F7E               	addlw	-130
  3574  000558  A0D8               	btfss	status,0,c
  3575  00055A  D008               	goto	l2611
  3576  00055C  5054               	movf	_novaTecla^0,w,c
  3577  00055E  0A80               	xorlw	128
  3578  000560  0F76               	addlw	-138
  3579  000562  B0D8               	btfsc	status,0,c
  3580  000564  D003               	goto	l2611
  3581                           
  3582                           ;Ssms.c: 61:     state = 1;
  3583  000566  0E01               	movlw	1
  3584  000568  6E36               	movwf	SMotor@state^0,c
  3585                           
  3586                           ;Ssms.c: 62:    }
  3587  00056A  0012               	return	
  3588  00056C                     l2611:
  3589  00056C  5054               	movf	_novaTecla^0,w,c
  3590  00056E  0A80               	xorlw	128
  3591  000570  0F7E               	addlw	-130
  3592  000572  B0D8               	btfsc	status,0,c
  3593  000574  D00B               	goto	l2621
  3594  000576  2855               	incf	_lletraASCII^0,w,c
  3595  000578  A4D8               	btfss	status,2,c
  3596  00057A  D008               	goto	l2621
  3597                           
  3598                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  3599  00057C  5054               	movf	_novaTecla^0,w,c
  3600  00057E  0F30               	addlw	48
  3601  000580  EC65  F008         	call	_MNovaLletra
  3602  000584                     l2617:
  3603                           
  3604                           ;Ssms.c: 65:     novaTecla = -1;
  3605  000584  6854               	setf	_novaTecla^0,c
  3606  000586                     l2619:
  3607                           
  3608                           ;Ssms.c: 66:     state = 0;
  3609  000586  0E00               	movlw	0
  3610  000588  6E36               	movwf	SMotor@state^0,c
  3611                           
  3612                           ;Ssms.c: 67:    }
  3613  00058A  0012               	return	
  3614  00058C                     l2621:
  3615  00058C  5054               	movf	_novaTecla^0,w,c
  3616  00058E  0A80               	xorlw	128
  3617  000590  0F7E               	addlw	-130
  3618  000592  B0D8               	btfsc	status,0,c
  3619  000594  0012               	return	
  3620  000596  2855               	incf	_lletraASCII^0,w,c
  3621  000598  B4D8               	btfsc	status,2,c
  3622  00059A  0012               	return	
  3623                           
  3624                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  3625  00059C  5055               	movf	_lletraASCII^0,w,c
  3626  00059E  EC65  F008         	call	_MNovaLletra
  3627                           
  3628                           ;Ssms.c: 70:     lletraASCII = -1;
  3629  0005A2  6855               	setf	_lletraASCII^0,c
  3630                           
  3631                           ;Ssms.c: 71:     state++;
  3632  0005A4  2A36               	incf	SMotor@state^0,f,c
  3633  0005A6  0012               	return	
  3634  0005A8                     l2631:
  3635                           
  3636                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  3637  0005A8  5054               	movf	_novaTecla^0,w,c
  3638  0005AA  0F30               	addlw	48
  3639  0005AC  EC65  F008         	call	_MNovaLletra
  3640  0005B0  D7E9               	goto	l2617
  3641  0005B2                     l2637:
  3642                           
  3643                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  3644  0005B2  0E04               	movlw	4
  3645  0005B4  1837               	xorwf	_sumaPulsacions^0,w,c
  3646  0005B6  A4D8               	btfss	status,2,c
  3647  0005B8  D009               	goto	l2645
  3648  0005BA                     u1990:
  3649                           
  3650                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  3651  0005BA  5052               	movf	_ultimaTecla^0,w,c
  3652  0005BC  0F45               	addlw	low (_lletraInici+254)
  3653  0005BE  6ED9               	movwf	fsr2l,c
  3654  0005C0  6ADA               	clrf	fsr2h,c
  3655  0005C2  50DF               	movf	indf2,w,c
  3656  0005C4  6E55               	movwf	_lletraASCII^0,c
  3657                           
  3658                           ;Ssms.c: 82:     sumaPulsacions = 0;
  3659  0005C6  0E00               	movlw	0
  3660  0005C8  6E37               	movwf	_sumaPulsacions^0,c
  3661  0005CA  D7DD               	goto	l2619
  3662  0005CC                     l2645:
  3663  0005CC  0E03               	movlw	3
  3664  0005CE  1837               	xorwf	_sumaPulsacions^0,w,c
  3665  0005D0  A4D8               	btfss	status,2,c
  3666  0005D2  D004               	goto	l2651
  3667  0005D4                     u2000:
  3668                           
  3669                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  3670  0005D4  5052               	movf	_ultimaTecla^0,w,c
  3671  0005D6  0F30               	addlw	48
  3672  0005D8  6E55               	movwf	_lletraASCII^0,c
  3673  0005DA  D7D5               	goto	l2619
  3674  0005DC                     l2651:
  3675  0005DC  0E03               	movlw	3
  3676  0005DE  6037               	cpfslt	_sumaPulsacions^0,c
  3677  0005E0  0012               	return	
  3678  0005E2  D7D1               	goto	l2619
  3679  0005E4                     l2655:
  3680                           
  3681                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  3682  0005E4  0E04               	movlw	4
  3683  0005E6  1837               	xorwf	_sumaPulsacions^0,w,c
  3684  0005E8  B4D8               	btfsc	status,2,c
  3685  0005EA  D7F4               	goto	u2000
  3686  0005EC  0E05               	movlw	5
  3687  0005EE  1837               	xorwf	_sumaPulsacions^0,w,c
  3688  0005F0  B4D8               	btfsc	status,2,c
  3689  0005F2  D7E3               	goto	u1990
  3690  0005F4  0E04               	movlw	4
  3691  0005F6  D7F3               	goto	L3
  3692  0005F8                     l2675:
  3693  0005F8  5036               	movf	SMotor@state^0,w,c
  3694  0005FA  6E6E               	movwf	??_SMotor^0,c
  3695  0005FC  6A6F               	clrf	(??_SMotor+1)^0,c
  3696                           
  3697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3698                           ; Switch size 1, requested type "simple"
  3699                           ; Number of cases is 1, Range of values is 0 to 0
  3700                           ; switch strategies available:
  3701                           ; Name         Instructions Cycles
  3702                           ; simple_byte            4     3 (average)
  3703                           ;	Chosen strategy is simple_byte
  3704  0005FE  506F               	movf	(??_SMotor+1)^0,w,c
  3705  000600  0A00               	xorlw	0	; case 0
  3706  000602  A4D8               	btfss	status,2,c
  3707  000604  0012               	return	
  3708                           
  3709                           ; Switch size 1, requested type "simple"
  3710                           ; Number of cases is 7, Range of values is 0 to 6
  3711                           ; switch strategies available:
  3712                           ; Name         Instructions Cycles
  3713                           ; simple_byte           22    12 (average)
  3714                           ;	Chosen strategy is simple_byte
  3715  000606  506E               	movf	??_SMotor^0,w,c
  3716  000608  0A00               	xorlw	0	; case 0
  3717  00060A  B4D8               	btfsc	status,2,c
  3718  00060C  D73E               	goto	l2547
  3719  00060E  0A01               	xorlw	1	; case 1
  3720  000610  B4D8               	btfsc	status,2,c
  3721  000612  D75E               	goto	l2569
  3722  000614  0A03               	xorlw	3	; case 2
  3723  000616  B4D8               	btfsc	status,2,c
  3724  000618  D786               	goto	l2593
  3725  00061A  0A01               	xorlw	1	; case 3
  3726  00061C  B4D8               	btfsc	status,2,c
  3727  00061E  D799               	goto	l2605
  3728  000620  0A07               	xorlw	7	; case 4
  3729  000622  B4D8               	btfsc	status,2,c
  3730  000624  D7C1               	goto	l2631
  3731  000626  0A01               	xorlw	1	; case 5
  3732  000628  B4D8               	btfsc	status,2,c
  3733  00062A  D7C3               	goto	l2637
  3734  00062C  0A03               	xorlw	3	; case 6
  3735  00062E  A4D8               	btfss	status,2,c
  3736  000630  0012               	return	
  3737  000632  D7D8               	goto	l2655
  3738  000634                     __end_of_SMotor:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _MNovaLletra *****************
  3742 ;; Defined at:
  3743 ;;		line 21 in file "Menu.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  lletra          1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  lletra          1    5[COMRAM] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1
  3757 ;;      Params:         0       0       0
  3758 ;;      Locals:         1       0       0
  3759 ;;      Temps:          0       0       0
  3760 ;;      Totals:         1       0       0
  3761 ;;Total ram usage:        1 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 2
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_SMotor
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text29
  3772  0010CA                     __ptext29:
  3773                           	callstack 0
  3774  0010CA                     _MNovaLletra:
  3775                           	callstack 27
  3776                           
  3777                           ;incstack = 0
  3778                           ;MNovaLletra@lletra stored from wreg
  3779  0010CA  6E67               	movwf	MNovaLletra@lletra^0,c
  3780                           
  3781                           ;Menu.c: 22:     novaLletra = lletra;
  3782  0010CC  C067  F050         	movff	MNovaLletra@lletra,_novaLletra
  3783  0010D0  0012               	return		;funcret
  3784  0010D2                     __end_of_MNovaLletra:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _Minit *****************
  3788 ;; Defined at:
  3789 ;;		line 14 in file "Menu.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1
  3803 ;;      Params:         0       0       0
  3804 ;;      Locals:         0       0       0
  3805 ;;      Temps:          0       0       0
  3806 ;;      Totals:         0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 3
  3810 ;; This function calls:
  3811 ;;		_TiGetTimer
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text30
  3818  0010D2                     __ptext30:
  3819                           	callstack 0
  3820  0010D2                     _Minit:
  3821                           	callstack 27
  3822                           
  3823                           ;Menu.c: 15:     timerMenu = TiGetTimer();
  3824                           
  3825                           ;incstack = 0
  3826  0010D2  EC15  F007         	call	_TiGetTimer	;wreg free
  3827  0010D6  6E2F               	movwf	_timerMenu^0,c
  3828  0010D8  0012               	return		;funcret
  3829  0010DA                     __end_of_Minit:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _LcLCD *****************
  3833 ;; Defined at:
  3834 ;;		line 254 in file "LcTLCD.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1
  3848 ;;      Params:         0       0       0
  3849 ;;      Locals:         0       0       0
  3850 ;;      Temps:          0       0       0
  3851 ;;      Totals:         0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 6
  3855 ;; This function calls:
  3856 ;;		_LcPutChar
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text31
  3863  000F00                     __ptext31:
  3864                           	callstack 0
  3865  000F00                     _LcLCD:
  3866                           	callstack 24
  3867                           
  3868                           ;LcTLCD.c: 255:     if(nou_s == 1){
  3869                           
  3870                           ;incstack = 0
  3871  000F00  AC78               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3872  000F02  0012               	return	
  3873                           
  3874                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  3875  000F04  C038  FFF6         	movff	_s_ptr,tblptrl
  3876  000F08                     	if	1	;There is more than 1 active tblptr byte
  3877  000F08  0E02               	movlw	high __smallconst
  3878  000F0A  6EF7               	movwf	tblptrh,c
  3879  000F0C                     	endif
  3880  000F0C                     	if	0	;tblptru may be non-zero
  3881  000F0C                     	endif
  3882  000F0C                     	if	0	;tblptru may be non-zero
  3883  000F0C                     	endif
  3884  000F0C  0008               	tblrd		*
  3885  000F0E  50F5               	movf	tablat,w,c
  3886  000F10  EC42  F006         	call	_LcPutChar
  3887                           
  3888                           ;LcTLCD.c: 257:         s_ptr++;
  3889  000F14  2A38               	incf	_s_ptr^0,f,c
  3890                           
  3891                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  3892  000F16  C038  FFF6         	movff	_s_ptr,tblptrl
  3893  000F1A                     	if	1	;There is more than 1 active tblptr byte
  3894  000F1A  0E02               	movlw	high __smallconst
  3895  000F1C  6EF7               	movwf	tblptrh,c
  3896  000F1E                     	endif
  3897  000F1E                     	if	0	;tblptru may be non-zero
  3898  000F1E                     	endif
  3899  000F1E                     	if	0	;tblptru may be non-zero
  3900  000F1E                     	endif
  3901  000F1E  0008               	tblrd		*
  3902  000F20  50F5               	movf	tablat,w,c
  3903  000F22  0900               	iorlw	0
  3904  000F24  A4D8               	btfss	status,2,c
  3905  000F26  0012               	return	
  3906                           
  3907                           ;LcTLCD.c: 259:             nou_s = 0;
  3908  000F28  9C78               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3909                           
  3910                           ;LcTLCD.c: 260:             s_ptr=0;
  3911  000F2A  0E00               	movlw	0
  3912  000F2C  6E38               	movwf	_s_ptr^0,c
  3913  000F2E  0012               	return		;funcret
  3914  000F30                     __end_of_LcLCD:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _LcPutChar *****************
  3918 ;; Defined at:
  3919 ;;		line 132 in file "LcTLCD.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  c               1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  c               1   19[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1
  3933 ;;      Params:         0       0       0
  3934 ;;      Locals:         1       0       0
  3935 ;;      Temps:          0       0       0
  3936 ;;      Totals:         1       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 5
  3940 ;; This function calls:
  3941 ;;		_CantaData
  3942 ;;		_LcGotoXY
  3943 ;;		_WaitForBusy
  3944 ;; This function is called by:
  3945 ;;		_LcLCD
  3946 ;;		_menu
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text32
  3951  000C84                     __ptext32:
  3952                           	callstack 0
  3953  000C84                     _LcPutChar:
  3954                           	callstack 24
  3955                           
  3956                           ;incstack = 0
  3957                           ;LcPutChar@c stored from wreg
  3958  000C84  6E75               	movwf	LcPutChar@c^0,c
  3959                           
  3960                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  3961  000C86  ECD8  F006         	call	_WaitForBusy	;wreg free
  3962  000C8A  5075               	movf	LcPutChar@c^0,w,c
  3963  000C8C  EC4E  F007         	call	_CantaData
  3964                           
  3965                           ;LcTLCD.c: 136:  ++ColumnAct;
  3966  000C90  2A3A               	incf	_ColumnAct^0,f,c
  3967                           
  3968                           ;LcTLCD.c: 138:  if (Rows == 2) {
  3969  000C92  0E02               	movlw	2
  3970  000C94  183D               	xorwf	_Rows^0,w,c
  3971  000C96  A4D8               	btfss	status,2,c
  3972  000C98  D010               	goto	l2435
  3973                           
  3974                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  3975  000C9A  0E27               	movlw	39
  3976  000C9C  643A               	cpfsgt	_ColumnAct^0,c
  3977  000C9E  D00D               	goto	l2435
  3978                           
  3979                           ;LcTLCD.c: 140:    ColumnAct = 0;
  3980  000CA0  0E00               	movlw	0
  3981  000CA2  6E3A               	movwf	_ColumnAct^0,c
  3982                           
  3983                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  3984  000CA4  2A3B               	incf	_RowAct^0,f,c
  3985  000CA6  0E01               	movlw	1
  3986  000CA8  643B               	cpfsgt	_RowAct^0,c
  3987  000CAA  D002               	goto	l2433
  3988  000CAC  0E00               	movlw	0
  3989  000CAE  6E3B               	movwf	_RowAct^0,c
  3990  000CB0                     l2433:
  3991                           
  3992                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  3993  000CB0  C03B  F06F         	movff	_RowAct,LcGotoXY@Row
  3994  000CB4  503A               	movf	_ColumnAct^0,w,c
  3995  000CB6  ECF8  F006         	call	_LcGotoXY
  3996  000CBA                     l2435:
  3997                           
  3998                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  3999  000CBA  043B               	decf	_RowAct^0,w,c
  4000  000CBC  A4D8               	btfss	status,2,c
  4001  000CBE  0012               	return	
  4002                           
  4003                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  4004  000CC0  0E27               	movlw	39
  4005  000CC2  643A               	cpfsgt	_ColumnAct^0,c
  4006  000CC4  D002               	goto	l2441
  4007  000CC6  0E00               	movlw	0
  4008  000CC8  6E3A               	movwf	_ColumnAct^0,c
  4009  000CCA                     l2441:
  4010                           
  4011                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  4012  000CCA  C03B  F06F         	movff	_RowAct,LcGotoXY@Row
  4013  000CCE  503A               	movf	_ColumnAct^0,w,c
  4014  000CD0  ECF8  F006         	call	_LcGotoXY
  4015  000CD4  0012               	return		;funcret
  4016  000CD6                     __end_of_LcPutChar:
  4017                           	callstack 0
  4018                           
  4019 ;; *************** function _LcGotoXY *****************
  4020 ;; Defined at:
  4021 ;;		line 104 in file "LcTLCD.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  Column          1    wreg     unsigned char 
  4024 ;;  Row             1   13[COMRAM] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  Column          1   18[COMRAM] unsigned char 
  4027 ;;  Fisics          2   14[COMRAM] int 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1
  4037 ;;      Params:         1       0       0
  4038 ;;      Locals:         5       0       0
  4039 ;;      Temps:          0       0       0
  4040 ;;      Totals:         6       0       0
  4041 ;;Total ram usage:        6 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 4
  4044 ;; This function calls:
  4045 ;;		_CantaIR
  4046 ;;		_WaitForBusy
  4047 ;; This function is called by:
  4048 ;;		_LcClear
  4049 ;;		_LcPutChar
  4050 ;;		_menu
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text33
  4055  000DF0                     __ptext33:
  4056                           	callstack 0
  4057  000DF0                     _LcGotoXY:
  4058                           	callstack 24
  4059                           
  4060                           ;incstack = 0
  4061                           ;LcGotoXY@Column stored from wreg
  4062  000DF0  6E74               	movwf	LcGotoXY@Column^0,c
  4063                           
  4064                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  4065  000DF2  506F               	movf	LcGotoXY@Row^0,w,c
  4066  000DF4  B4D8               	btfsc	status,2,c
  4067  000DF6  D004               	goto	l2375
  4068  000DF8  0E00               	movlw	0
  4069  000DFA  6E73               	movwf	(_LcGotoXY$342+1)^0,c
  4070  000DFC  0E40               	movlw	64
  4071  000DFE  D003               	goto	L4
  4072  000E00                     l2375:
  4073  000E00  0E00               	movlw	0
  4074  000E02  6E73               	movwf	(_LcGotoXY$342+1)^0,c
  4075  000E04  0E00               	movlw	0
  4076  000E06                     L4:
  4077  000E06  6E72               	movwf	_LcGotoXY$342^0,c
  4078  000E08  5074               	movf	LcGotoXY@Column^0,w,c
  4079  000E0A  2472               	addwf	_LcGotoXY$342^0,w,c
  4080  000E0C  6E70               	movwf	LcGotoXY@Fisics^0,c
  4081  000E0E  0E00               	movlw	0
  4082  000E10  2073               	addwfc	(_LcGotoXY$342+1)^0,w,c
  4083  000E12  6E71               	movwf	(LcGotoXY@Fisics+1)^0,c
  4084                           
  4085                           ;LcTLCD.c: 125:  WaitForBusy();
  4086  000E14  ECD8  F006         	call	_WaitForBusy	;wreg free
  4087                           
  4088                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  4089  000E18  5070               	movf	LcGotoXY@Fisics^0,w,c
  4090  000E1A  0980               	iorlw	128
  4091  000E1C  EC67  F007         	call	_CantaIR
  4092                           
  4093                           ;LcTLCD.c: 128:  RowAct = Row;
  4094  000E20  C06F  F03B         	movff	LcGotoXY@Row,_RowAct
  4095                           
  4096                           ;LcTLCD.c: 129:  ColumnAct = Column;
  4097  000E24  C074  F03A         	movff	LcGotoXY@Column,_ColumnAct
  4098  000E28  0012               	return		;funcret
  4099  000E2A                     __end_of_LcGotoXY:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _CantaData *****************
  4103 ;; Defined at:
  4104 ;;		line 194 in file "LcTLCD.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  Data            1    wreg     unsigned char 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  Data            1    7[COMRAM] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1
  4118 ;;      Params:         0       0       0
  4119 ;;      Locals:         1       0       0
  4120 ;;      Temps:          0       0       0
  4121 ;;      Totals:         1       0       0
  4122 ;;Total ram usage:        1 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 3
  4125 ;; This function calls:
  4126 ;;		_CantaPartAlta
  4127 ;;		_CantaPartBaixa
  4128 ;; This function is called by:
  4129 ;;		_LcPutChar
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text34
  4134  000E9C                     __ptext34:
  4135                           	callstack 0
  4136  000E9C                     _CantaData:
  4137                           	callstack 25
  4138                           
  4139                           ;incstack = 0
  4140                           ;CantaData@Data stored from wreg
  4141  000E9C  6E69               	movwf	CantaData@Data^0,c
  4142                           
  4143                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  4144  000E9E  9694               	bcf	148,3,c	;volatile
  4145  000EA0  9494               	bcf	148,2,c	;volatile
  4146  000EA2  9294               	bcf	148,1,c	;volatile
  4147  000EA4  9094               	bcf	148,0,c	;volatile
  4148                           
  4149                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  4150  000EA6  8A8B               	bsf	139,5,c	;volatile
  4151                           
  4152                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  4153  000EA8  9E8C               	bcf	140,7,c	;volatile
  4154                           
  4155                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  4156  000EAA  888B               	bsf	139,4,c	;volatile
  4157                           
  4158                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  4159  000EAC  5069               	movf	CantaData@Data^0,w,c
  4160  000EAE  ECE1  F005         	call	_CantaPartAlta
  4161                           
  4162                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  4163  000EB2  888B               	bsf	139,4,c	;volatile
  4164                           
  4165                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  4166  000EB4  988B               	bcf	139,4,c	;volatile
  4167                           
  4168                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  4169  000EB6  988B               	bcf	139,4,c	;volatile
  4170                           
  4171                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  4172  000EB8  888B               	bsf	139,4,c	;volatile
  4173                           
  4174                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  4175  000EBA  5069               	movf	CantaData@Data^0,w,c
  4176  000EBC  ECAD  F005         	call	_CantaPartBaixa
  4177                           
  4178                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  4179  000EC0  888B               	bsf	139,4,c	;volatile
  4180                           
  4181                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  4182  000EC2  988B               	bcf	139,4,c	;volatile
  4183                           
  4184                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4185  000EC4  8694               	bsf	148,3,c	;volatile
  4186  000EC6  8494               	bsf	148,2,c	;volatile
  4187  000EC8  8294               	bsf	148,1,c	;volatile
  4188  000ECA  8094               	bsf	148,0,c	;volatile
  4189  000ECC  0012               	return		;funcret
  4190  000ECE                     __end_of_CantaData:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _LcInit *****************
  4194 ;; Defined at:
  4195 ;;		line 41 in file "LcTLCD.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  rows            1    wreg     unsigned char 
  4198 ;;  columns         1   16[COMRAM] unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  rows            1   17[COMRAM] unsigned char 
  4201 ;;  i               2   18[COMRAM] int 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1
  4211 ;;      Params:         1       0       0
  4212 ;;      Locals:         3       0       0
  4213 ;;      Temps:          0       0       0
  4214 ;;      Totals:         4       0       0
  4215 ;;Total ram usage:        4 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 5
  4218 ;; This function calls:
  4219 ;;		_CantaIR
  4220 ;;		_EscriuPrimeraOrdre
  4221 ;;		_Espera
  4222 ;;		_LcCursorOff
  4223 ;;		_TiGetTimer
  4224 ;;		_WaitForBusy
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text35
  4231  00089C                     __ptext35:
  4232                           	callstack 0
  4233  00089C                     _LcInit:
  4234                           	callstack 25
  4235                           
  4236                           ;incstack = 0
  4237                           ;LcInit@rows stored from wreg
  4238  00089C  6E73               	movwf	LcInit@rows^0,c
  4239                           
  4240                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4241  00089E  EC15  F007         	call	_TiGetTimer	;wreg free
  4242  0008A2  6E39               	movwf	_Timer^0,c
  4243                           
  4244                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4245  0008A4  C073  F03D         	movff	LcInit@rows,_Rows
  4246  0008A8  C072  F03C         	movff	LcInit@columns,_Columns
  4247                           
  4248                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4249  0008AC  0E00               	movlw	0
  4250  0008AE  6E3A               	movwf	_ColumnAct^0,c
  4251  0008B0  C03A  F03B         	movff	_ColumnAct,_RowAct
  4252                           
  4253                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4254  0008B4  9894               	bcf	148,4,c	;volatile
  4255  0008B6  9E95               	bcf	149,7,c	;volatile
  4256  0008B8  9A94               	bcf	148,5,c	;volatile
  4257                           
  4258                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4259  0008BA  0E00               	movlw	0
  4260  0008BC  6E75               	movwf	(LcInit@i+1)^0,c
  4261  0008BE  0E00               	movlw	0
  4262  0008C0  6E74               	movwf	LcInit@i^0,c
  4263  0008C2                     l2499:
  4264                           
  4265                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4266  0008C2  0E00               	movlw	0
  4267  0008C4  6E6F               	movwf	(Espera@ms+1)^0,c
  4268  0008C6  0E64               	movlw	100
  4269  0008C8  6E6E               	movwf	Espera@ms^0,c
  4270  0008CA  5039               	movf	_Timer^0,w,c
  4271  0008CC  ECE9  F007         	call	_Espera
  4272                           
  4273                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4274  0008D0  0E03               	movlw	3
  4275  0008D2  EC70  F005         	call	_EscriuPrimeraOrdre
  4276                           
  4277                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4278  0008D6  0E00               	movlw	0
  4279  0008D8  6E6F               	movwf	(Espera@ms+1)^0,c
  4280  0008DA  0E05               	movlw	5
  4281  0008DC  6E6E               	movwf	Espera@ms^0,c
  4282  0008DE  5039               	movf	_Timer^0,w,c
  4283  0008E0  ECE9  F007         	call	_Espera
  4284                           
  4285                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4286  0008E4  0E03               	movlw	3
  4287  0008E6  EC70  F005         	call	_EscriuPrimeraOrdre
  4288                           
  4289                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4290  0008EA  0E00               	movlw	0
  4291  0008EC  6E6F               	movwf	(Espera@ms+1)^0,c
  4292  0008EE  0E01               	movlw	1
  4293  0008F0  6E6E               	movwf	Espera@ms^0,c
  4294  0008F2  5039               	movf	_Timer^0,w,c
  4295  0008F4  ECE9  F007         	call	_Espera
  4296                           
  4297                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4298  0008F8  0E03               	movlw	3
  4299  0008FA  EC70  F005         	call	_EscriuPrimeraOrdre
  4300                           
  4301                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4302  0008FE  0E00               	movlw	0
  4303  000900  6E6F               	movwf	(Espera@ms+1)^0,c
  4304  000902  0E01               	movlw	1
  4305  000904  6E6E               	movwf	Espera@ms^0,c
  4306  000906  5039               	movf	_Timer^0,w,c
  4307  000908  ECE9  F007         	call	_Espera
  4308                           
  4309                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4310  00090C  0E02               	movlw	2
  4311  00090E  EC70  F005         	call	_EscriuPrimeraOrdre
  4312                           
  4313                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4314  000912  0E00               	movlw	0
  4315  000914  6E6F               	movwf	(Espera@ms+1)^0,c
  4316  000916  0E04               	movlw	4
  4317  000918  6E6E               	movwf	Espera@ms^0,c
  4318  00091A  5039               	movf	_Timer^0,w,c
  4319  00091C  ECE9  F007         	call	_Espera
  4320                           
  4321                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4322  000920  0E28               	movlw	40
  4323  000922  EC67  F007         	call	_CantaIR
  4324                           
  4325                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4326  000926  ECD8  F006         	call	_WaitForBusy	;wreg free
  4327  00092A  0E08               	movlw	8
  4328  00092C  EC67  F007         	call	_CantaIR
  4329                           
  4330                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4331  000930  ECD8  F006         	call	_WaitForBusy	;wreg free
  4332  000934  0E01               	movlw	1
  4333  000936  EC67  F007         	call	_CantaIR
  4334                           
  4335                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4336  00093A  0E00               	movlw	0
  4337  00093C  6E6F               	movwf	(Espera@ms+1)^0,c
  4338  00093E  0E03               	movlw	3
  4339  000940  6E6E               	movwf	Espera@ms^0,c
  4340  000942  5039               	movf	_Timer^0,w,c
  4341  000944  ECE9  F007         	call	_Espera
  4342                           
  4343                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4344  000948  ECD8  F006         	call	_WaitForBusy	;wreg free
  4345  00094C  0E06               	movlw	6
  4346  00094E  EC67  F007         	call	_CantaIR
  4347                           
  4348                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4349  000952  ECD8  F006         	call	_WaitForBusy	;wreg free
  4350  000956  0E0F               	movlw	15
  4351  000958  EC67  F007         	call	_CantaIR
  4352                           
  4353                           ;LcTLCD.c: 74:  }
  4354  00095C  4A74               	infsnz	LcInit@i^0,f,c
  4355  00095E  2A75               	incf	(LcInit@i+1)^0,f,c
  4356  000960  BE75               	btfsc	(LcInit@i+1)^0,7,c
  4357  000962  D7AF               	goto	l2499
  4358  000964  5075               	movf	(LcInit@i+1)^0,w,c
  4359  000966  E104               	bnz	u1760
  4360  000968  0E02               	movlw	2
  4361  00096A  5C74               	subwf	LcInit@i^0,w,c
  4362  00096C  A0D8               	btfss	status,0,c
  4363  00096E  D7A9               	goto	l2499
  4364  000970                     u1760:
  4365                           
  4366                           ;LcTLCD.c: 79:     LcCursorOff();
  4367  000970  EC47  F008         	call	_LcCursorOff	;wreg free
  4368  000974  0012               	return		;funcret
  4369  000976                     __end_of_LcInit:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _TiGetTimer *****************
  4373 ;; Defined at:
  4374 ;;		line 70 in file "TiTTimer.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1
  4388 ;;      Params:         0       0       0
  4389 ;;      Locals:         0       0       0
  4390 ;;      Temps:          1       0       0
  4391 ;;      Totals:         1       0       0
  4392 ;;Total ram usage:        1 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 2
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_LcInit
  4399 ;;		_Sinit
  4400 ;;		_TeInit
  4401 ;;		_Minit
  4402 ;;		_initAltaveu
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text36
  4407  000E2A                     __ptext36:
  4408                           	callstack 0
  4409  000E2A                     _TiGetTimer:
  4410                           	callstack 27
  4411                           
  4412                           ;TiTTimer.c: 74:     counter=0;
  4413                           
  4414                           ;incstack = 0
  4415  000E2A  0E00               	movlw	0
  4416  000E2C  6E31               	movwf	_counter^0,c
  4417                           
  4418                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4419  000E2E  D007               	goto	l1419
  4420  000E30                     l1411:
  4421                           
  4422                           ;TiTTimer.c: 76:         counter++;
  4423  000E30  2A31               	incf	_counter^0,f,c
  4424                           
  4425                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  4426  000E32  0E08               	movlw	8
  4427  000E34  1831               	xorwf	_counter^0,w,c
  4428  000E36  A4D8               	btfss	status,2,c
  4429  000E38  D002               	goto	l1419
  4430  000E3A  0EFF               	movlw	255
  4431  000E3C  0012               	return	
  4432  000E3E                     l1419:
  4433                           
  4434                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4435  000E3E  5031               	movf	_counter^0,w,c
  4436  000E40  0D03               	mullw	3
  4437  000E42  50F3               	movf	243,w,c
  4438  000E44  0F03               	addlw	low (_s_Timers+2)
  4439  000E46  6ED9               	movwf	fsr2l,c
  4440  000E48  6ADA               	clrf	fsr2h,c
  4441  000E4A  04DE               	decf	postinc2,w,c
  4442  000E4C  B4D8               	btfsc	status,2,c
  4443  000E4E  D7F0               	goto	l1411
  4444                           
  4445                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  4446  000E50  5031               	movf	_counter^0,w,c
  4447  000E52  0D03               	mullw	3
  4448  000E54  50F3               	movf	243,w,c
  4449  000E56  0F03               	addlw	low (_s_Timers+2)
  4450  000E58  6ED9               	movwf	fsr2l,c
  4451  000E5A  6ADA               	clrf	fsr2h,c
  4452  000E5C  0E01               	movlw	1
  4453  000E5E  6EDF               	movwf	indf2,c
  4454                           
  4455                           ;TiTTimer.c: 80:     return (counter);
  4456  000E60  5031               	movf	_counter^0,w,c
  4457  000E62  0012               	return		;funcret
  4458  000E64                     __end_of_TiGetTimer:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function _LcCursorOff *****************
  4462 ;; Defined at:
  4463 ;;		line 97 in file "LcTLCD.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1
  4477 ;;      Params:         0       0       0
  4478 ;;      Locals:         0       0       0
  4479 ;;      Temps:          0       0       0
  4480 ;;      Totals:         0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 4
  4484 ;; This function calls:
  4485 ;;		_CantaIR
  4486 ;;		_WaitForBusy
  4487 ;; This function is called by:
  4488 ;;		_LcInit
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text37
  4493  00108E                     __ptext37:
  4494                           	callstack 0
  4495  00108E                     _LcCursorOff:
  4496                           	callstack 25
  4497                           
  4498                           ;LcTLCD.c: 100:  WaitForBusy();
  4499                           
  4500                           ;incstack = 0
  4501  00108E  ECD8  F006         	call	_WaitForBusy	;wreg free
  4502                           
  4503                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4504  001092  0E0C               	movlw	12
  4505  001094  EC67  F007         	call	_CantaIR
  4506  001098  0012               	return		;funcret
  4507  00109A                     __end_of_LcCursorOff:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _WaitForBusy *****************
  4511 ;; Defined at:
  4512 ;;		line 210 in file "LcTLCD.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  Busy            1   12[COMRAM] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1
  4526 ;;      Params:         0       0       0
  4527 ;;      Locals:         1       0       0
  4528 ;;      Temps:          0       0       0
  4529 ;;      Totals:         1       0       0
  4530 ;;Total ram usage:        1 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 3
  4533 ;; This function calls:
  4534 ;;		_TiGetTics
  4535 ;;		_TiResetTics
  4536 ;; This function is called by:
  4537 ;;		_LcInit
  4538 ;;		_LcClear
  4539 ;;		_LcCursorOff
  4540 ;;		_LcGotoXY
  4541 ;;		_LcPutChar
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text38
  4546  000DB0                     __ptext38:
  4547                           	callstack 0
  4548  000DB0                     _WaitForBusy:
  4549                           	callstack 25
  4550                           
  4551                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4552                           
  4553                           ;incstack = 0
  4554  000DB0  8694               	bsf	148,3,c	;volatile
  4555  000DB2  8494               	bsf	148,2,c	;volatile
  4556  000DB4  8294               	bsf	148,1,c	;volatile
  4557  000DB6  8094               	bsf	148,0,c	;volatile
  4558                           
  4559                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  4560  000DB8  9A8B               	bcf	139,5,c	;volatile
  4561                           
  4562                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  4563  000DBA  8E8C               	bsf	140,7,c	;volatile
  4564                           
  4565                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  4566  000DBC  5039               	movf	_Timer^0,w,c
  4567  000DBE  EC19  F008         	call	_TiResetTics
  4568  000DC2                     l2343:
  4569                           
  4570                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4571  000DC2  888B               	bsf	139,4,c	;volatile
  4572  000DC4  888B               	bsf	139,4,c	;volatile
  4573                           
  4574                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  4575  000DC6  0E00               	movlw	0
  4576  000DC8  B682               	btfsc	130,3,c	;volatile
  4577  000DCA  0E01               	movlw	1
  4578  000DCC  6E6E               	movwf	WaitForBusy@Busy^0,c
  4579                           
  4580                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  4581  000DCE  988B               	bcf	139,4,c	;volatile
  4582                           
  4583                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  4584  000DD0  988B               	bcf	139,4,c	;volatile
  4585                           
  4586                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4587  000DD2  888B               	bsf	139,4,c	;volatile
  4588  000DD4  888B               	bsf	139,4,c	;volatile
  4589                           
  4590                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  4591  000DD6  988B               	bcf	139,4,c	;volatile
  4592                           
  4593                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  4594  000DD8  988B               	bcf	139,4,c	;volatile
  4595                           
  4596                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  4597  000DDA  5039               	movf	_Timer^0,w,c
  4598  000DDC  ECAF  F007         	call	_TiGetTics
  4599  000DE0  5067               	movf	?_TiGetTics^0,w,c
  4600  000DE2  1068               	iorwf	(?_TiGetTics+1)^0,w,c
  4601  000DE4  A4D8               	btfss	status,2,c
  4602  000DE6  0012               	return	
  4603                           
  4604                           ;LcTLCD.c: 225:  } while(Busy);
  4605  000DE8  506E               	movf	WaitForBusy@Busy^0,w,c
  4606  000DEA  B4D8               	btfsc	status,2,c
  4607  000DEC  0012               	return	
  4608  000DEE  D7E9               	goto	l2343
  4609  000DF0                     __end_of_WaitForBusy:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function _CantaIR *****************
  4613 ;; Defined at:
  4614 ;;		line 178 in file "LcTLCD.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  IR              1    wreg     unsigned char 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  IR              1    7[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1
  4628 ;;      Params:         0       0       0
  4629 ;;      Locals:         1       0       0
  4630 ;;      Temps:          0       0       0
  4631 ;;      Totals:         1       0       0
  4632 ;;Total ram usage:        1 bytes
  4633 ;; Hardware stack levels used: 1
  4634 ;; Hardware stack levels required when called: 3
  4635 ;; This function calls:
  4636 ;;		_CantaPartAlta
  4637 ;;		_CantaPartBaixa
  4638 ;; This function is called by:
  4639 ;;		_LcInit
  4640 ;;		_LcClear
  4641 ;;		_LcCursorOff
  4642 ;;		_LcGotoXY
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text39
  4647  000ECE                     __ptext39:
  4648                           	callstack 0
  4649  000ECE                     _CantaIR:
  4650                           	callstack 24
  4651                           
  4652                           ;incstack = 0
  4653                           ;CantaIR@IR stored from wreg
  4654  000ECE  6E69               	movwf	CantaIR@IR^0,c
  4655                           
  4656                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  4657  000ED0  9694               	bcf	148,3,c	;volatile
  4658  000ED2  9494               	bcf	148,2,c	;volatile
  4659  000ED4  9294               	bcf	148,1,c	;volatile
  4660  000ED6  9094               	bcf	148,0,c	;volatile
  4661                           
  4662                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  4663  000ED8  9A8B               	bcf	139,5,c	;volatile
  4664                           
  4665                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  4666  000EDA  9E8C               	bcf	140,7,c	;volatile
  4667                           
  4668                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  4669  000EDC  888B               	bsf	139,4,c	;volatile
  4670                           
  4671                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  4672  000EDE  5069               	movf	CantaIR@IR^0,w,c
  4673  000EE0  ECE1  F005         	call	_CantaPartAlta
  4674                           
  4675                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  4676  000EE4  888B               	bsf	139,4,c	;volatile
  4677                           
  4678                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  4679  000EE6  988B               	bcf	139,4,c	;volatile
  4680                           
  4681                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  4682  000EE8  988B               	bcf	139,4,c	;volatile
  4683                           
  4684                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  4685  000EEA  888B               	bsf	139,4,c	;volatile
  4686                           
  4687                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  4688  000EEC  5069               	movf	CantaIR@IR^0,w,c
  4689  000EEE  ECAD  F005         	call	_CantaPartBaixa
  4690                           
  4691                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  4692  000EF2  888B               	bsf	139,4,c	;volatile
  4693                           
  4694                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  4695  000EF4  988B               	bcf	139,4,c	;volatile
  4696                           
  4697                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4698  000EF6  8694               	bsf	148,3,c	;volatile
  4699  000EF8  8494               	bsf	148,2,c	;volatile
  4700  000EFA  8294               	bsf	148,1,c	;volatile
  4701  000EFC  8094               	bsf	148,0,c	;volatile
  4702  000EFE  0012               	return		;funcret
  4703  000F00                     __end_of_CantaIR:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _CantaPartBaixa *****************
  4707 ;; Defined at:
  4708 ;;		line 171 in file "LcTLCD.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  c               1    wreg     unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  c               1    6[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1
  4722 ;;      Params:         0       0       0
  4723 ;;      Locals:         1       0       0
  4724 ;;      Temps:          1       0       0
  4725 ;;      Totals:         2       0       0
  4726 ;;Total ram usage:        2 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 2
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_CantaIR
  4733 ;;		_CantaData
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text40
  4738  000B5A                     __ptext40:
  4739                           	callstack 0
  4740  000B5A                     _CantaPartBaixa:
  4741                           	callstack 24
  4742                           
  4743                           ;incstack = 0
  4744                           ;CantaPartBaixa@c stored from wreg
  4745  000B5A  6E68               	movwf	CantaPartBaixa@c^0,c
  4746                           
  4747                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  4748  000B5C  A668               	btfss	CantaPartBaixa@c^0,3,c
  4749  000B5E  D003               	goto	u1560
  4750  000B60  6A67               	clrf	??_CantaPartBaixa^0,c
  4751  000B62  2A67               	incf	??_CantaPartBaixa^0,f,c
  4752  000B64  D001               	goto	u1578
  4753  000B66                     u1560:
  4754  000B66  6A67               	clrf	??_CantaPartBaixa^0,c
  4755  000B68                     u1578:
  4756  000B68  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4757  000B6A  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4758  000B6C  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4759  000B6E  508B               	movf	139,w,c	;volatile
  4760  000B70  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4761  000B72  0BF7               	andlw	-9
  4762  000B74  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4763  000B76  6E8B               	movwf	139,c	;volatile
  4764                           
  4765                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  4766  000B78  A468               	btfss	CantaPartBaixa@c^0,2,c
  4767  000B7A  D003               	goto	u1580
  4768  000B7C  6A67               	clrf	??_CantaPartBaixa^0,c
  4769  000B7E  2A67               	incf	??_CantaPartBaixa^0,f,c
  4770  000B80  D001               	goto	u1598
  4771  000B82                     u1580:
  4772  000B82  6A67               	clrf	??_CantaPartBaixa^0,c
  4773  000B84                     u1598:
  4774  000B84  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4775  000B86  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4776  000B88  508B               	movf	139,w,c	;volatile
  4777  000B8A  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4778  000B8C  0BFB               	andlw	-5
  4779  000B8E  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4780  000B90  6E8B               	movwf	139,c	;volatile
  4781                           
  4782                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  4783  000B92  A268               	btfss	CantaPartBaixa@c^0,1,c
  4784  000B94  D003               	goto	u1600
  4785  000B96  6A67               	clrf	??_CantaPartBaixa^0,c
  4786  000B98  2A67               	incf	??_CantaPartBaixa^0,f,c
  4787  000B9A  D001               	goto	u1618
  4788  000B9C                     u1600:
  4789  000B9C  6A67               	clrf	??_CantaPartBaixa^0,c
  4790  000B9E                     u1618:
  4791  000B9E  4667               	rlncf	??_CantaPartBaixa^0,f,c
  4792  000BA0  508B               	movf	139,w,c	;volatile
  4793  000BA2  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4794  000BA4  0BFD               	andlw	-3
  4795  000BA6  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4796  000BA8  6E8B               	movwf	139,c	;volatile
  4797                           
  4798                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  4799  000BAA  A068               	btfss	CantaPartBaixa@c^0,0,c
  4800  000BAC  D003               	goto	u1620
  4801  000BAE  6A67               	clrf	??_CantaPartBaixa^0,c
  4802  000BB0  2A67               	incf	??_CantaPartBaixa^0,f,c
  4803  000BB2  D001               	goto	u1638
  4804  000BB4                     u1620:
  4805  000BB4  6A67               	clrf	??_CantaPartBaixa^0,c
  4806  000BB6                     u1638:
  4807  000BB6  508B               	movf	139,w,c	;volatile
  4808  000BB8  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4809  000BBA  0BFE               	andlw	-2
  4810  000BBC  1867               	xorwf	??_CantaPartBaixa^0,w,c
  4811  000BBE  6E8B               	movwf	139,c	;volatile
  4812  000BC0  0012               	return		;funcret
  4813  000BC2                     __end_of_CantaPartBaixa:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _CantaPartAlta *****************
  4817 ;; Defined at:
  4818 ;;		line 164 in file "LcTLCD.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  c               1    wreg     unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  c               1    6[COMRAM] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1
  4832 ;;      Params:         0       0       0
  4833 ;;      Locals:         1       0       0
  4834 ;;      Temps:          1       0       0
  4835 ;;      Totals:         2       0       0
  4836 ;;Total ram usage:        2 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 2
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_CantaIR
  4843 ;;		_CantaData
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text41
  4848  000BC2                     __ptext41:
  4849                           	callstack 0
  4850  000BC2                     _CantaPartAlta:
  4851                           	callstack 24
  4852                           
  4853                           ;incstack = 0
  4854                           ;CantaPartAlta@c stored from wreg
  4855  000BC2  6E68               	movwf	CantaPartAlta@c^0,c
  4856                           
  4857                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  4858  000BC4  AE68               	btfss	CantaPartAlta@c^0,7,c
  4859  000BC6  D003               	goto	u1480
  4860  000BC8  6A67               	clrf	??_CantaPartAlta^0,c
  4861  000BCA  2A67               	incf	??_CantaPartAlta^0,f,c
  4862  000BCC  D001               	goto	u1498
  4863  000BCE                     u1480:
  4864  000BCE  6A67               	clrf	??_CantaPartAlta^0,c
  4865  000BD0                     u1498:
  4866  000BD0  4667               	rlncf	??_CantaPartAlta^0,f,c
  4867  000BD2  4667               	rlncf	??_CantaPartAlta^0,f,c
  4868  000BD4  4667               	rlncf	??_CantaPartAlta^0,f,c
  4869  000BD6  508B               	movf	139,w,c	;volatile
  4870  000BD8  1867               	xorwf	??_CantaPartAlta^0,w,c
  4871  000BDA  0BF7               	andlw	-9
  4872  000BDC  1867               	xorwf	??_CantaPartAlta^0,w,c
  4873  000BDE  6E8B               	movwf	139,c	;volatile
  4874                           
  4875                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  4876  000BE0  AC68               	btfss	CantaPartAlta@c^0,6,c
  4877  000BE2  D003               	goto	u1500
  4878  000BE4  6A67               	clrf	??_CantaPartAlta^0,c
  4879  000BE6  2A67               	incf	??_CantaPartAlta^0,f,c
  4880  000BE8  D001               	goto	u1518
  4881  000BEA                     u1500:
  4882  000BEA  6A67               	clrf	??_CantaPartAlta^0,c
  4883  000BEC                     u1518:
  4884  000BEC  4667               	rlncf	??_CantaPartAlta^0,f,c
  4885  000BEE  4667               	rlncf	??_CantaPartAlta^0,f,c
  4886  000BF0  508B               	movf	139,w,c	;volatile
  4887  000BF2  1867               	xorwf	??_CantaPartAlta^0,w,c
  4888  000BF4  0BFB               	andlw	-5
  4889  000BF6  1867               	xorwf	??_CantaPartAlta^0,w,c
  4890  000BF8  6E8B               	movwf	139,c	;volatile
  4891                           
  4892                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  4893  000BFA  AA68               	btfss	CantaPartAlta@c^0,5,c
  4894  000BFC  D003               	goto	u1520
  4895  000BFE  6A67               	clrf	??_CantaPartAlta^0,c
  4896  000C00  2A67               	incf	??_CantaPartAlta^0,f,c
  4897  000C02  D001               	goto	u1538
  4898  000C04                     u1520:
  4899  000C04  6A67               	clrf	??_CantaPartAlta^0,c
  4900  000C06                     u1538:
  4901  000C06  4667               	rlncf	??_CantaPartAlta^0,f,c
  4902  000C08  508B               	movf	139,w,c	;volatile
  4903  000C0A  1867               	xorwf	??_CantaPartAlta^0,w,c
  4904  000C0C  0BFD               	andlw	-3
  4905  000C0E  1867               	xorwf	??_CantaPartAlta^0,w,c
  4906  000C10  6E8B               	movwf	139,c	;volatile
  4907                           
  4908                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  4909  000C12  A868               	btfss	CantaPartAlta@c^0,4,c
  4910  000C14  D003               	goto	u1540
  4911  000C16  6A67               	clrf	??_CantaPartAlta^0,c
  4912  000C18  2A67               	incf	??_CantaPartAlta^0,f,c
  4913  000C1A  D001               	goto	u1558
  4914  000C1C                     u1540:
  4915  000C1C  6A67               	clrf	??_CantaPartAlta^0,c
  4916  000C1E                     u1558:
  4917  000C1E  508B               	movf	139,w,c	;volatile
  4918  000C20  1867               	xorwf	??_CantaPartAlta^0,w,c
  4919  000C22  0BFE               	andlw	-2
  4920  000C24  1867               	xorwf	??_CantaPartAlta^0,w,c
  4921  000C26  6E8B               	movwf	139,c	;volatile
  4922  000C28  0012               	return		;funcret
  4923  000C2A                     __end_of_CantaPartAlta:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _Espera *****************
  4927 ;; Defined at:
  4928 ;;		line 159 in file "LcTLCD.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  Timer           1    wreg     unsigned char 
  4931 ;;  ms              2   12[COMRAM] int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  Timer           1   15[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1
  4943 ;;      Params:         2       0       0
  4944 ;;      Locals:         1       0       0
  4945 ;;      Temps:          1       0       0
  4946 ;;      Totals:         4       0       0
  4947 ;;Total ram usage:        4 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 3
  4950 ;; This function calls:
  4951 ;;		_TiGetTics
  4952 ;;		_TiResetTics
  4953 ;; This function is called by:
  4954 ;;		_LcInit
  4955 ;;		_LcClear
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text42
  4960  000FD2                     __ptext42:
  4961                           	callstack 0
  4962  000FD2                     _Espera:
  4963                           	callstack 25
  4964                           
  4965                           ;incstack = 0
  4966                           ;Espera@Timer stored from wreg
  4967  000FD2  6E71               	movwf	Espera@Timer^0,c
  4968                           
  4969                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  4970  000FD4  5071               	movf	Espera@Timer^0,w,c
  4971  000FD6  EC19  F008         	call	_TiResetTics
  4972  000FDA                     l2369:
  4973  000FDA  5071               	movf	Espera@Timer^0,w,c
  4974  000FDC  ECAF  F007         	call	_TiGetTics
  4975  000FE0  506E               	movf	Espera@ms^0,w,c
  4976  000FE2  5C67               	subwf	?_TiGetTics^0,w,c
  4977  000FE4  5068               	movf	(?_TiGetTics+1)^0,w,c
  4978  000FE6  0A80               	xorlw	128
  4979  000FE8  6E70               	movwf	??_Espera^0,c
  4980  000FEA  506F               	movf	(Espera@ms+1)^0,w,c
  4981  000FEC  0A80               	xorlw	128
  4982  000FEE  5870               	subwfb	??_Espera^0,w,c
  4983  000FF0  B0D8               	btfsc	status,0,c
  4984  000FF2  0012               	return	
  4985  000FF4  D7F2               	goto	l2369
  4986  000FF6                     __end_of_Espera:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _TiResetTics *****************
  4990 ;; Defined at:
  4991 ;;		line 55 in file "TiTTimer.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  Handle          1    wreg     unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  Handle          1    5[COMRAM] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1
  5005 ;;      Params:         0       0       0
  5006 ;;      Locals:         1       0       0
  5007 ;;      Temps:          0       0       0
  5008 ;;      Totals:         1       0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 2
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_Espera
  5016 ;;		_WaitForBusy
  5017 ;;		_SMotor
  5018 ;;		_TeTeclat
  5019 ;;		_motorAltaveu
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text43
  5024  001032                     __ptext43:
  5025                           	callstack 0
  5026  001032                     _TiResetTics:
  5027                           	callstack 27
  5028                           
  5029                           ;incstack = 0
  5030                           ;TiResetTics@Handle stored from wreg
  5031  001032  6E67               	movwf	TiResetTics@Handle^0,c
  5032                           
  5033                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  5034  001034  5067               	movf	TiResetTics@Handle^0,w,c
  5035  001036  0D03               	mullw	3
  5036  001038  50F3               	movf	243,w,c
  5037  00103A  0F01               	addlw	low _s_Timers
  5038  00103C  6ED9               	movwf	fsr2l,c
  5039  00103E  6ADA               	clrf	fsr2h,c
  5040  001040  C022  FFDE         	movff	_h_Tics,postinc2
  5041  001044  C023  FFDD         	movff	_h_Tics+1,postdec2
  5042  001048  0012               	return		;funcret
  5043  00104A                     __end_of_TiResetTics:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _TiGetTics *****************
  5047 ;; Defined at:
  5048 ;;		line 61 in file "TiTTimer.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  Handle          1    wreg     unsigned char 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  Handle          1    9[COMRAM] unsigned char 
  5053 ;;  actual          2   10[COMRAM] volatile unsigned int 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2    5[COMRAM] int 
  5056 ;; Registers used:
  5057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1
  5063 ;;      Params:         2       0       0
  5064 ;;      Locals:         3       0       0
  5065 ;;      Temps:          2       0       0
  5066 ;;      Totals:         7       0       0
  5067 ;;Total ram usage:        7 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 2
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_Espera
  5074 ;;		_WaitForBusy
  5075 ;;		_SMotor
  5076 ;;		_TeTeclat
  5077 ;;		_motorAltaveu
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text44
  5082  000F5E                     __ptext44:
  5083                           	callstack 0
  5084  000F5E                     _TiGetTics:
  5085                           	callstack 27
  5086                           
  5087                           ;incstack = 0
  5088                           ;TiGetTics@Handle stored from wreg
  5089  000F5E  6E6B               	movwf	TiGetTics@Handle^0,c
  5090                           
  5091                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  5092  000F60  C022  F06C         	movff	_h_Tics,TiGetTics@actual	;volatile
  5093  000F64  C023  F06D         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  5094                           
  5095                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  5096  000F68  506B               	movf	TiGetTics@Handle^0,w,c
  5097  000F6A  0D03               	mullw	3
  5098  000F6C  50F3               	movf	243,w,c
  5099  000F6E  0F01               	addlw	low _s_Timers
  5100  000F70  6ED9               	movwf	fsr2l,c
  5101  000F72  6ADA               	clrf	fsr2h,c
  5102  000F74  CFDE F069          	movff	postinc2,??_TiGetTics
  5103  000F78  CFDD F06A          	movff	postdec2,??_TiGetTics+1
  5104  000F7C  5069               	movf	??_TiGetTics^0,w,c
  5105  000F7E  5C6C               	subwf	TiGetTics@actual^0,w,c	;volatile
  5106  000F80  6E67               	movwf	?_TiGetTics^0,c
  5107  000F82  506A               	movf	(??_TiGetTics+1)^0,w,c
  5108  000F84  586D               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  5109  000F86  6E68               	movwf	(?_TiGetTics+1)^0,c
  5110  000F88  0012               	return		;funcret
  5111  000F8A                     __end_of_TiGetTics:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _EscriuPrimeraOrdre *****************
  5115 ;; Defined at:
  5116 ;;		line 228 in file "LcTLCD.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  ordre           1    wreg     unsigned char 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  ordre           1    6[COMRAM] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1
  5130 ;;      Params:         0       0       0
  5131 ;;      Locals:         1       0       0
  5132 ;;      Temps:          1       0       0
  5133 ;;      Totals:         2       0       0
  5134 ;;Total ram usage:        2 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 2
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_LcInit
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text45
  5145  000AE0                     __ptext45:
  5146                           	callstack 0
  5147  000AE0                     _EscriuPrimeraOrdre:
  5148                           	callstack 27
  5149                           
  5150                           ;incstack = 0
  5151                           ;EscriuPrimeraOrdre@ordre stored from wreg
  5152  000AE0  6E68               	movwf	EscriuPrimeraOrdre@ordre^0,c
  5153                           
  5154                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  5155  000AE2  9694               	bcf	148,3,c	;volatile
  5156  000AE4  9494               	bcf	148,2,c	;volatile
  5157  000AE6  9294               	bcf	148,1,c	;volatile
  5158  000AE8  9094               	bcf	148,0,c	;volatile
  5159  000AEA  9A8B               	bcf	139,5,c	;volatile
  5160  000AEC  9E8C               	bcf	140,7,c	;volatile
  5161                           
  5162                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  5163  000AEE  888B               	bsf	139,4,c	;volatile
  5164  000AF0  888B               	bsf	139,4,c	;volatile
  5165                           
  5166                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  5167  000AF2  A668               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  5168  000AF4  D003               	goto	u230
  5169  000AF6  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5170  000AF8  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  5171  000AFA  D001               	goto	u248
  5172  000AFC                     u230:
  5173  000AFC  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5174  000AFE                     u248:
  5175  000AFE  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5176  000B00  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5177  000B02  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5178  000B04  508B               	movf	139,w,c	;volatile
  5179  000B06  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5180  000B08  0BF7               	andlw	-9
  5181  000B0A  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5182  000B0C  6E8B               	movwf	139,c	;volatile
  5183                           
  5184                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  5185  000B0E  A468               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  5186  000B10  D003               	goto	u250
  5187  000B12  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5188  000B14  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  5189  000B16  D001               	goto	u268
  5190  000B18                     u250:
  5191  000B18  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5192  000B1A                     u268:
  5193  000B1A  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5194  000B1C  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5195  000B1E  508B               	movf	139,w,c	;volatile
  5196  000B20  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5197  000B22  0BFB               	andlw	-5
  5198  000B24  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5199  000B26  6E8B               	movwf	139,c	;volatile
  5200                           
  5201                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  5202  000B28  A268               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  5203  000B2A  D003               	goto	u270
  5204  000B2C  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5205  000B2E  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  5206  000B30  D001               	goto	u288
  5207  000B32                     u270:
  5208  000B32  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5209  000B34                     u288:
  5210  000B34  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5211  000B36  508B               	movf	139,w,c	;volatile
  5212  000B38  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5213  000B3A  0BFD               	andlw	-3
  5214  000B3C  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5215  000B3E  6E8B               	movwf	139,c	;volatile
  5216                           
  5217                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  5218  000B40  A068               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  5219  000B42  D003               	goto	u290
  5220  000B44  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5221  000B46  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  5222  000B48  D001               	goto	u308
  5223  000B4A                     u290:
  5224  000B4A  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  5225  000B4C                     u308:
  5226  000B4C  508B               	movf	139,w,c	;volatile
  5227  000B4E  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5228  000B50  0BFE               	andlw	-2
  5229  000B52  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5230  000B54  6E8B               	movwf	139,c	;volatile
  5231                           
  5232                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  5233  000B56  988B               	bcf	139,4,c	;volatile
  5234  000B58  0012               	return		;funcret
  5235  000B5A                     __end_of_EscriuPrimeraOrdre:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function _high_rsi *****************
  5239 ;; Defined at:
  5240 ;;		line 16 in file "main.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1
  5254 ;;      Params:         0       0       0
  5255 ;;      Locals:         0       0       0
  5256 ;;      Temps:          4       0       0
  5257 ;;      Totals:         4       0       0
  5258 ;;Total ram usage:        4 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 1
  5261 ;; This function calls:
  5262 ;;		__TiRSITimer
  5263 ;; This function is called by:
  5264 ;;		Interrupt level 2
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	intcode
  5269  000008                     __pintcode:
  5270                           	callstack 0
  5271  000008                     _high_rsi:
  5272                           	callstack 24
  5273                           
  5274                           ;incstack = 0
  5275  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5276  00000A  CFD9 F063          	movff	fsr2l,??_high_rsi
  5277  00000E  CFDA F064          	movff	fsr2h,??_high_rsi+1
  5278  000012  CFF3 F065          	movff	prodl,??_high_rsi+2
  5279  000016  CFF4 F066          	movff	prodh,??_high_rsi+3
  5280                           
  5281                           ;main.c: 17:     LATBbits.LATB1 = 0;
  5282  00001A  EC15  F006         	call	__TiRSITimer	;wreg free
  5283  00001E  C066  FFF4         	movff	??_high_rsi+3,prodh
  5284  000022  C065  FFF3         	movff	??_high_rsi+2,prodl
  5285  000026  C064  FFDA         	movff	??_high_rsi+1,fsr2h
  5286  00002A  C063  FFD9         	movff	??_high_rsi,fsr2l
  5287  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5288  000030  0011               	retfie		f
  5289  000032                     __end_of_high_rsi:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function __TiRSITimer *****************
  5293 ;; Defined at:
  5294 ;;		line 37 in file "TiTTimer.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1
  5308 ;;      Params:         0       0       0
  5309 ;;      Locals:         0       0       0
  5310 ;;      Temps:          1       0       0
  5311 ;;      Totals:         1       0       0
  5312 ;;Total ram usage:        1 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_high_rsi
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text47
  5322  000C2A                     __ptext47:
  5323                           	callstack 0
  5324  000C2A                     __TiRSITimer:
  5325                           	callstack 24
  5326                           
  5327                           ;TiTTimer.c: 39:     TMR0H = 223;
  5328                           
  5329                           ;incstack = 0
  5330  000C2A  0EDF               	movlw	223
  5331  000C2C  6ED7               	movwf	215,c	;volatile
  5332                           
  5333                           ;TiTTimer.c: 40:     TMR0L = 148;
  5334  000C2E  0E94               	movlw	148
  5335  000C30  6ED6               	movwf	214,c	;volatile
  5336                           
  5337                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  5338  000C32  94F2               	bcf	242,2,c	;volatile
  5339                           
  5340                           ;TiTTimer.c: 42:     h_Tics++;
  5341  000C34  4A22               	infsnz	_h_Tics^0,f,c
  5342  000C36  2A23               	incf	(_h_Tics+1)^0,f,c
  5343                           
  5344                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  5345  000C38  0E48               	movlw	72
  5346  000C3A  5C22               	subwf	_h_Tics^0,w,c
  5347  000C3C  0EEE               	movlw	238
  5348  000C3E  5823               	subwfb	(_h_Tics+1)^0,w,c
  5349  000C40  A0D8               	btfss	status,0,c
  5350  000C42  0012               	return	
  5351                           
  5352                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  5353  000C44  0E00               	movlw	0
  5354  000C46  6E31               	movwf	_counter^0,c
  5355  000C48                     i2l1623:
  5356  000C48  0E07               	movlw	7
  5357  000C4A  6431               	cpfsgt	_counter^0,c
  5358  000C4C  D001               	goto	i2l1627
  5359  000C4E  D015               	goto	i2l1635
  5360  000C50                     i2l1627:
  5361                           
  5362                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  5363  000C50  5031               	movf	_counter^0,w,c
  5364  000C52  0D03               	mullw	3
  5365  000C54  50F3               	movf	243,w,c
  5366  000C56  0F03               	addlw	low (_s_Timers+2)
  5367  000C58  6ED9               	movwf	fsr2l,c
  5368  000C5A  6ADA               	clrf	fsr2h,c
  5369  000C5C  04DE               	decf	postinc2,w,c
  5370  000C5E  A4D8               	btfss	status,2,c
  5371  000C60  D00A               	goto	i2l1631
  5372                           
  5373                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  5374  000C62  5031               	movf	_counter^0,w,c
  5375  000C64  0D03               	mullw	3
  5376  000C66  50F3               	movf	243,w,c
  5377  000C68  0F01               	addlw	low _s_Timers
  5378  000C6A  6ED9               	movwf	fsr2l,c
  5379  000C6C  6ADA               	clrf	fsr2h,c
  5380  000C6E  5022               	movf	_h_Tics^0,w,c
  5381  000C70  5EDE               	subwf	postinc2,f,c
  5382  000C72  5023               	movf	(_h_Tics+1)^0,w,c
  5383  000C74  5ADD               	subwfb	postdec2,f,c
  5384  000C76                     i2l1631:
  5385                           
  5386                           ;TiTTimer.c: 50:         }
  5387  000C76  2A31               	incf	_counter^0,f,c
  5388  000C78  D7E7               	goto	i2l1623
  5389  000C7A                     i2l1635:
  5390                           
  5391                           ;TiTTimer.c: 51:         h_Tics=0;
  5392  000C7A  0E00               	movlw	0
  5393  000C7C  6E23               	movwf	(_h_Tics+1)^0,c
  5394  000C7E  0E00               	movlw	0
  5395  000C80  6E22               	movwf	_h_Tics^0,c
  5396  000C82  0012               	return		;funcret
  5397  000C84                     __end_of__TiRSITimer:
  5398                           	callstack 0
  5399                           
  5400                           	psect	rparam
  5401  0000                     
  5402                           	psect	temp
  5403  000079                     btemp:
  5404                           	callstack 0
  5405  000079                     	ds	1
  5406  0000                     int$flags	set	btemp
  5407  0000                     wtemp8	set	btemp+1
  5408  0000                     ttemp5	set	btemp+1
  5409  0000                     ttemp6	set	btemp+4
  5410  0000                     ttemp7	set	btemp+8
  5411                           
  5412                           	psect	idloc
  5413                           
  5414                           ;Config register IDLOC0 @ 0x200000
  5415                           ;	unspecified, using default values
  5416  200000                     	org	2097152
  5417  200000  FF                 	db	255
  5418                           
  5419                           ;Config register IDLOC1 @ 0x200001
  5420                           ;	unspecified, using default values
  5421  200001                     	org	2097153
  5422  200001  FF                 	db	255
  5423                           
  5424                           ;Config register IDLOC2 @ 0x200002
  5425                           ;	unspecified, using default values
  5426  200002                     	org	2097154
  5427  200002  FF                 	db	255
  5428                           
  5429                           ;Config register IDLOC3 @ 0x200003
  5430                           ;	unspecified, using default values
  5431  200003                     	org	2097155
  5432  200003  FF                 	db	255
  5433                           
  5434                           ;Config register IDLOC4 @ 0x200004
  5435                           ;	unspecified, using default values
  5436  200004                     	org	2097156
  5437  200004  FF                 	db	255
  5438                           
  5439                           ;Config register IDLOC5 @ 0x200005
  5440                           ;	unspecified, using default values
  5441  200005                     	org	2097157
  5442  200005  FF                 	db	255
  5443                           
  5444                           ;Config register IDLOC6 @ 0x200006
  5445                           ;	unspecified, using default values
  5446  200006                     	org	2097158
  5447  200006  FF                 	db	255
  5448                           
  5449                           ;Config register IDLOC7 @ 0x200007
  5450                           ;	unspecified, using default values
  5451  200007                     	org	2097159
  5452  200007  FF                 	db	255
  5453                           
  5454                           	psect	config
  5455                           
  5456                           ; Padding undefined space
  5457  300000                     	org	3145728
  5458  300000  FF                 	db	255
  5459                           
  5460                           ;Config register CONFIG1H @ 0x300001
  5461                           ;	Oscillator
  5462                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5463                           ;	Fail-Safe Clock Monitor Enable bit
  5464                           ;	FCMEN = 0x0, unprogrammed default
  5465                           ;	Internal/External Oscillator Switchover bit
  5466                           ;	IESO = 0x0, unprogrammed default
  5467  300001                     	org	3145729
  5468  300001  06                 	db	6
  5469                           
  5470                           ;Config register CONFIG2L @ 0x300002
  5471                           ;	unspecified, using default values
  5472                           ;	Power-up Timer Enable bit
  5473                           ;	PWRT = 0x1, unprogrammed default
  5474                           ;	Brown-out Reset Enable bits
  5475                           ;	BOR = 0x3, unprogrammed default
  5476                           ;	Brown-out Reset Voltage bits
  5477                           ;	BORV = 0x3, unprogrammed default
  5478  300002                     	org	3145730
  5479  300002  1F                 	db	31
  5480                           
  5481                           ;Config register CONFIG2H @ 0x300003
  5482                           ;	Watchdog Timer Enable bit
  5483                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5484                           ;	Watchdog Timer Postscale Select bits
  5485                           ;	WDTPS = 0xF, unprogrammed default
  5486  300003                     	org	3145731
  5487  300003  1E                 	db	30
  5488                           
  5489                           ; Padding undefined space
  5490  300004                     	org	3145732
  5491  300004  FF                 	db	255
  5492                           
  5493                           ;Config register CONFIG3H @ 0x300005
  5494                           ;	CCP2 MUX bit
  5495                           ;	CCP2MX = 0x1, unprogrammed default
  5496                           ;	PORTB A/D Enable bit
  5497                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5498                           ;	Low-Power Timer1 Oscillator Enable bit
  5499                           ;	LPT1OSC = 0x0, unprogrammed default
  5500                           ;	MCLR Pin Enable bit
  5501                           ;	MCLRE = 0x1, unprogrammed default
  5502  300005                     	org	3145733
  5503  300005  81                 	db	129
  5504                           
  5505                           ;Config register CONFIG4L @ 0x300006
  5506                           ;	Stack Full/Underflow Reset Enable bit
  5507                           ;	STVREN = 0x1, unprogrammed default
  5508                           ;	Single-Supply ICSP Enable bit
  5509                           ;	LVP = OFF, Single-Supply ICSP disabled
  5510                           ;	Boot Block Size Select bits
  5511                           ;	BBSIZ = 0x0, unprogrammed default
  5512                           ;	Extended Instruction Set Enable bit
  5513                           ;	XINST = 0x0, unprogrammed default
  5514                           ;	Background Debugger Enable bit
  5515                           ;	DEBUG = 0x1, unprogrammed default
  5516  300006                     	org	3145734
  5517  300006  81                 	db	129
  5518                           
  5519                           ; Padding undefined space
  5520  300007                     	org	3145735
  5521  300007  FF                 	db	255
  5522                           
  5523                           ;Config register CONFIG5L @ 0x300008
  5524                           ;	unspecified, using default values
  5525                           ;	Code Protection bit
  5526                           ;	CP0 = 0x1, unprogrammed default
  5527                           ;	Code Protection bit
  5528                           ;	CP1 = 0x1, unprogrammed default
  5529  300008                     	org	3145736
  5530  300008  03                 	db	3
  5531                           
  5532                           ;Config register CONFIG5H @ 0x300009
  5533                           ;	unspecified, using default values
  5534                           ;	Boot Block Code Protection bitProtect Boot
  5535                           ;	CPB = 0x1, unprogrammed default
  5536                           ;	Data EEPROM Code Protection bit
  5537                           ;	CPD = 0x1, unprogrammed default
  5538  300009                     	org	3145737
  5539  300009  C0                 	db	192
  5540                           
  5541                           ;Config register CONFIG6L @ 0x30000A
  5542                           ;	unspecified, using default values
  5543                           ;	Write Protection bit
  5544                           ;	WRT0 = 0x1, unprogrammed default
  5545                           ;	Write Protection bit
  5546                           ;	WRT1 = 0x1, unprogrammed default
  5547  30000A                     	org	3145738
  5548  30000A  03                 	db	3
  5549                           
  5550                           ;Config register CONFIG6H @ 0x30000B
  5551                           ;	unspecified, using default values
  5552                           ;	Configuration Register Write Protection bit
  5553                           ;	WRTC = 0x1, unprogrammed default
  5554                           ;	Boot Block Write Protection bit
  5555                           ;	WRTB = 0x1, unprogrammed default
  5556                           ;	Data EEPROM Write Protection bit
  5557                           ;	WRTD = 0x1, unprogrammed default
  5558  30000B                     	org	3145739
  5559  30000B  E0                 	db	224
  5560                           
  5561                           ;Config register CONFIG7L @ 0x30000C
  5562                           ;	unspecified, using default values
  5563                           ;	Table Read Protection bit
  5564                           ;	EBTR0 = 0x1, unprogrammed default
  5565                           ;	Table Read Protection bit
  5566                           ;	EBTR1 = 0x1, unprogrammed default
  5567  30000C                     	org	3145740
  5568  30000C  03                 	db	3
  5569                           
  5570                           ;Config register CONFIG7H @ 0x30000D
  5571                           ;	unspecified, using default values
  5572                           ;	Boot Block Table Read Protection bit
  5573                           ;	EBTRB = 0x1, unprogrammed default
  5574  30000D                     	org	3145741
  5575  30000D  40                 	db	64
  5576                           tosu	equ	0xFFF
  5577                           tosh	equ	0xFFE
  5578                           tosl	equ	0xFFD
  5579                           stkptr	equ	0xFFC
  5580                           pclatu	equ	0xFFB
  5581                           pclath	equ	0xFFA
  5582                           pcl	equ	0xFF9
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           indf0	equ	0xFEF
  5590                           postinc0	equ	0xFEE
  5591                           postdec0	equ	0xFED
  5592                           preinc0	equ	0xFEC
  5593                           plusw0	equ	0xFEB
  5594                           fsr0h	equ	0xFEA
  5595                           fsr0l	equ	0xFE9
  5596                           wreg	equ	0xFE8
  5597                           indf1	equ	0xFE7
  5598                           postinc1	equ	0xFE6
  5599                           postdec1	equ	0xFE5
  5600                           preinc1	equ	0xFE4
  5601                           plusw1	equ	0xFE3
  5602                           fsr1h	equ	0xFE2
  5603                           fsr1l	equ	0xFE1
  5604                           bsr	equ	0xFE0
  5605                           indf2	equ	0xFDF
  5606                           postinc2	equ	0xFDE
  5607                           postdec2	equ	0xFDD
  5608                           preinc2	equ	0xFDC
  5609                           plusw2	equ	0xFDB
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         254
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     120
    BANK0           128      0       0
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8899
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (1) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    5145
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _playAltaveu

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     130       7        0.0%
DATA                 0      0     130       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 27 11:40:22 2022

               TiResetTics@Handle 0067                  _loginNOTRegister 03C4  
                               _i 002A                                 _j 0029  
       ??_UcheckExistsNotFinished 0067            __end_of_compareStrings 0DB0  
                             l425 027E                               l531 0FCA  
                             l540 0A44                               l452 03DC  
                             l453 03EE                               l550 0A94  
                             l552 0A9A                               l545 0A58  
                             l537 0A36                               l570 07AA  
                             l626 0978                               l547 0A5E  
                             l572 07B6                               l569 079A  
                             l595 0F4E                               u230 0AFC  
                             u250 0B18                               u308 0B4C  
                             u270 0B32                               u248 0AFE  
                             u290 0B4A                               u268 0B1A  
                             u288 0B34                               _tmp 0030  
                ??_CantaPartBaixa 0067                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0052  
                            l1411 0E30                              l3011 06E0  
                            l3005 06D2                              l3031 0736  
                            l3015 06EC                              l3025 0728  
                            l1419 0E3E                              l3035 073E  
                            l3019 06F8                              l1515 107E  
                            l1507 1072                              l3045 0756  
                            l2343 0DC2                              l3039 074A  
                            l2441 0CCA                              l2433 0CB0  
                            l3073 0D08                              l2435 0CBA  
                            l2611 056C                              l2621 058C  
                            l2605 0552                              l2375 0E00  
                            l2631 05A8                              l2471 0D6C  
                            l1655 0F34                              l1479 108A  
                            l2369 0FDA                              l2617 0584  
                            l1681 0E88                              l2705 026C  
                            l2651 05DC                              l2619 0586  
                            l2555 049E                              l2547 048A  
                            l2707 0272                              l2645 05CC  
                            l2637 05B2                              l1677 0E80  
                            l1845 0A54                              l2477 0D88  
                            l2805 039A                              l2655 05E4  
                            l2751 0306                              l2735 02CE  
                            l2727 02B4                              l2719 0294  
                            l2593 0526                              l2577 04F8  
                            l2569 04D0                              l2905 07B0  
                            l2825 03CE                              l2745 02F6  
                            l2737 02D4                              l2499 08C2  
                            l2675 05F8                              l1875 0AD6  
                            l2923 07FE                              l2763 031E  
                            l2747 02FC                              l2683 0226  
                            l2843 0426                              l2925 0804  
                            l2909 07C0                              l2837 0400  
                            l2599 053C                              l2935 0824  
                            l2919 07F4                              l2871 09AE  
                            l2863 099E                              l2855 098A  
                            l2793 0382                              l2777 034A  
                            l2689 0238                              l2857 0990  
                            l2971 0678                              l2939 0836  
                            l2963 0872                              l2787 0372  
                            l2779 0350                              l2699 025A  
                            l2891 0A08                              l2949 085A  
                            l2789 0378                              l2983 0698  
                            l2879 09DC                              l2993 06AE  
                            l2985 069E                              l2977 0688  
                            l2979 068C                              l2999 06BC  
                            STR_1 020C                              STR_2 0201  
                            STR_3 021B                              STR_4 0214  
                            u2000 05D4                              u1500 0BEA  
                            u2300 0408                              u2310 0418  
                            u2302 040A                              u1520 0C04  
                            u1600 0B9C                              u2312 041A  
                            u2240 03AA                              _LATD 000F8C  
                            u2410 07BA                              u2170 032E  
                            u1540 0C1C                              u1620 0BB4  
                            u1518 0BEC                              u1480 0BCE  
                            u1560 0B66                              u2520 063E  
                            u2440 07EE                              u1538 0C06  
                            u1618 0B9E                              u2530 0648  
                            u1580 0B82                              u2540 0658  
                            u1558 0C1E                              u1638 0BB6  
                            u2550 0668                              u1750 0D94  
                            u2455 07F0                              u1760 0970  
                            u1920 054C                              u2536 064A  
                            u2528 0640                              u1498 0BD0  
                            u1578 0B68                              u2546 065A  
                            u1860 04EE                              u2556 066A  
                            u1598 0B84                              u1990 05BA  
                 ??_SsetNovaTecla 0067                              _Rows 003D  
                            _main 0CD6                              _menu 0224  
                            _nota 0027                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0079                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 0FAE  
                            start 0032                   __end_of_CantaIR 0F00  
                    ?_initAltaveu 0062                     LcInit@columns 0072  
                    ___param_bank 000000                       Espera@Timer 0071  
                           ?_main 0062           __size_of_escriureEEPROM 002E  
                           ?_menu 0062                             _EEADR 000FA9  
                   ??_TiInitTimer 0067                             _T0CON 000FD5  
                 ?_compareStrings 0067                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _LcLCD 0F00  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _SMSon 10DA                       _MNovaLletra 10CA  
                           _Minit 10D2                             _Sinit 10C2  
                           _Timer 0039                             _Uinit 0A2C  
                           _s_ptr 0038                             _nou_s 03C6  
                     _LcCursorOff 108E       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03C0                             tablat 000FF5  
                     _LcNewString 109A                     ??_TiResetTics 0067  
                           ttemp5 007A                             ttemp6 007D  
                           ttemp7 0081                             status 000FD8  
                           wtemp8 007A     __size_of_UcheckExistsGetError 000C  
                __end_of_LcGotoXY 0E2A                  __end_of_LcLliure 108E  
                   ??__TiRSITimer 0062                        _TiGetTimer 0E2A  
         EscriuPrimeraOrdre@ordre 0068                   __initialization 0D22  
              __size_of_CantaData 0032                      __end_of_main 0D22  
                    __end_of_menu 0488                      ?_playAltaveu 0062  
                __end_of_TeTeclat 0798                     _indexNextUser 002B  
                          ??_main 0078                            ??_menu 0076  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                          ?_LcLCD 0062                            ?_SMSon 0062  
                          ?_Minit 0062                            ?_Sinit 0062  
                          ?_Uinit 0062               __end_of_TiInitTimer 0E9C  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                       ??_LcClear 0075                         ??_CantaIR 0069  
                          i2l1631 0C76                            i2l1623 0C48  
                          i2l1635 0C7A                            i2l1627 0C50  
                  LcGotoXY@Fisics 0070                    LcGotoXY@Column 0074  
                   ??_WaitForBusy 006E                __size_of_TiGetTics 002C  
                  _sumaPulsacions 0037                            _SMSoff 10E0  
                          _LcInit 089C                    _UgetNumUsuaris 10EA  
                          _SMotor 0488               escriureCharEEPROM@c 0068  
                          _TeInit 10BA                            _Espera 0FD2  
                    _LcGotoXY$342 0072                            _RowAct 003B  
             __end_of_TiResetTics 104A                            Uinit@i 0069  
                          Uinit@j 006A                  __end_of_high_rsi 0032  
                          _h_Tics 0022               __end_of__TiRSITimer 0C84  
                          clear_0 0D48                            clear_1 0D56  
                      _UenviaChar 105A                            isa$std 000001  
                      UenviaPas@c 0068       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 0047            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 002D  
               __end_of_CantaData 0ECE                      TeTeclat@cols 0033  
                   ?_UcheckExists 0062                        __accesstop 0080  
         __end_of__initialization 0D5C            __end_of_UgetNumUsuaris 10EE  
               __end_of_LcPutChar 0CD6                     ___rparam_used 000001  
                   __end_of_LcLCD 0F30                       ?_TiGetTimer 0062  
                   __end_of_SMSon 10E0                    __pcstackCOMRAM 0062  
                   __end_of_Minit 10DA               __end_of_WaitForBusy 0DF0  
                   __end_of_Sinit 10CA                     __end_of_Uinit 0AE0  
            __size_of_initAltaveu 0008                    _escriureEEPROM 0F30  
               __end_of_TiGetTics 0F8A                       _TiInitTimer 0E64  
                         ??_LcLCD 0076                           ??_SMSon 0067  
                       ?_LcGotoXY 006F                         ?_LcLliure 0062  
                         ??_Minit 0068                           ??_Sinit 0068  
                         ??_Uinit 0067                    ??_UcheckExists 0067  
                      __pbssBANK1 0100                         ?_TeTeclat 0062  
                     _TiResetTics 1032                   ?_UgetNumUsuaris 0062  
                   ??_UmotorUsers 006C                           ?_SMSoff 0062  
                         ?_LcInit 0072                     _CantaPartAlta 0BC2  
                         ?_SMotor 0062                           ?_TeInit 0062  
                         ?_Espera 006E                 __end_of_UenviaPas 105A  
                     __TiRSITimer 0C2A                  ??_compareStrings 006A  
          __end_of_escriureEEPROM 0F5E                       ?_UenviaChar 0067  
            __size_of_playAltaveu 0004            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0074                        ??_LcGotoXY 0070  
                    ?_MNovaLletra 0062                        ??_LcLliure 0067  
             __size_of_TiGetTimer 003A                      ?_LcCursorOff 0062  
                       ?_high_rsi 0062                           _LcClear 0F8A  
                         _CantaIR 0ECE                      ?_LcNewString 0067  
                      ??_TeTeclat 006E                       _WaitForBusy 0DB0  
                  ?_CantaPartAlta 0062                           _Columns 003C  
           __end_of_SsetNovaTecla 10B2                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00DA                           __Hparam 0000  
                 __size_of_SMotor 01AC                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
             __end_of_UmotorUsers 089C          ?_UcheckExistsNotFinished 0062  
                 ?_escriureEEPROM 0062                     ?_motorAltaveu 0062  
                    __psmallconst 0200                           __pcinit 0D22  
    __end_of_UcheckExistsGetError 1082                        _init_ports 0FF6  
                         __ramtop 0200                           __ptext0 0CD6  
                         __ptext1 10E6                           __ptext2 0976  
                         __ptext3 0224                           __ptext4 10EA  
                         __ptext5 104A                           __ptext6 105A  
                         __ptext7 106A                           __ptext8 1076  
                         __ptext9 10EE                         _T0CONbits 000FD5  
                       CantaIR@IR 0069                           _counter 0031  
                     UenviaChar@c 0068        __end_of_escriureCharEEPROM 0FD2  
                LcNewString@new_s 0067                   WaitForBusy@Busy 006E  
                     Uinit@j_1028 006B                        ??_high_rsi 0063  
            end_of_initialization 0D5C                           _usuaris 0100  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 006B                     _MsetNovaTecla 10B2  
             __size_of_UenviaChar 0010                        _novaLletra 0050  
                 TiGetTics@actual 006C                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006E                        _numUsuaris 002C  
            __end_of_UcheckExists 10F2                     TeTeclat@files 0032  
                   TeTeclat@state 0034                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _TRISCbits 000F94  
                       _TRISDbits 000F95                   ??_CantaPartAlta 0067  
                  ?_MsetNovaTecla 0062                         _CantaData 0E9C  
                     _UmotorUsers 0798   __end_of_UcheckExistsNotFinished 1076  
                  __end_of_SMSoff 10E6                      ??_TiGetTimer 0067  
                  __end_of_LcInit 0976                    __end_of_SMotor 0634  
                       _LcPutChar 0C84                    __end_of_TeInit 10C2  
               motorAltaveu@state 0024                    __end_of_Espera 0FF6  
      __end_of_EscriuPrimeraOrdre 0B5A                     __pidataCOMRAM 1016  
                     ?_init_ports 0062                         _ColumnAct 003A  
                    ?_TiInitTimer 0062               start_initialization 0D22  
                       _TiGetTics 0F5E                  ??_UgetNumUsuaris 0067  
                UmotorUsers@state 0028                 __size_of_LcGotoXY 003A  
              __end_of_TiGetTimer 0E64              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                      ?_TiResetTics 0062  
            __size_of_LcCursorOff 000C                        ?_CantaData 0062  
            _UcheckExistsGetError 1076              __size_of_LcNewString 0008  
                        ??_SMSoff 0067                          ??_LcInit 0073  
                       _NovaTecla 0051                 __size_of_TeTeclat 0164  
                        ??_SMotor 006E                          ??_TeInit 0068  
                    ?__TiRSITimer 0062                     ??_initAltaveu 0068  
                        ??_Espera 0070                        ?_LcPutChar 0062  
                       _UenviaPas 104A                      ??_UenviaChar 0068  
                     __pbssCOMRAM 0001                        ?_TiGetTics 0067  
                 ??_MsetNovaTecla 0067              __end_of_motorAltaveu 0A2C  
                        ?_LcClear 0062                          ?_CantaIR 0062  
                  _CantaPartBaixa 0B5A             ?_UcheckExistsGetError 0062  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0062  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 0067  
              SsetNovaTecla@tecla 0067                __end_of_UenviaChar 106A  
                ??_escriureEEPROM 0067             __size_of_UcheckExists 0004  
                       __pintcode 0008                     ??_playAltaveu 0067  
                      ?_UenviaPas 0067                   CantaPartBaixa@c 0068  
             __end_of_initAltaveu 10AA                       __smallconst 0200  
                  __size_of_LcLCD 0030                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 0BC2                escriureEEPROM@caca 0067  
                     _do_register 03C1                      _UcheckExists 10EE  
                     ??_CantaData 0069                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   UenviaChar@pos 0067                _escriureCharEEPROM 0FAE  
                       _novaTecla 0054                       ??_LcPutChar 0075  
                        _RCONbits 000FD0                         _reproduir 03C0  
                       _timerMenu 002F               ?_escriureCharEEPROM 0067  
             __end_of_playAltaveu 10EA            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006E                          _LcGotoXY 0DF0  
                        _LcLliure 1082                       ??_TiGetTics 0069  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                    _teclaPremuda 0056                       LcGotoXY@Row 006F  
                       copy_data0 0D36              ??_escriureCharEEPROM 0068  
                 ?_CantaPartBaixa 0062            ??_UcheckExistsGetError 0067  
           escriureCharEEPROM@pos 0067                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0634  
                    ?_UmotorUsers 0062                        _EECON1bits 000FA6  
            __size_of_TiResetTics 0018                          __Hrparam 0000  
                     _initAltaveu 10A2                         menu@state 002E  
                        __Lrparam 0000              __size_of__TiRSITimer 005A  
                     ??_UenviaPas 0068                      ??_init_ports 0067  
           __size_of_motorAltaveu 00B6                   _do_check_exists 03C3  
                        __ptext10 10DA                          __ptext11 10E0  
              _EscriuPrimeraOrdre 0AE0                          __ptext20 0D6A  
                        __ptext12 109A                          __ptext21 0A2C  
                        __ptext13 1082                          __ptext30 10D2  
                        __ptext22 0E64                          __ptext14 0F8A  
                        __ptext31 0F00                          __ptext23 0634  
                        __ptext15 0FF6                          __ptext40 0B5A  
                        __ptext32 0C84                          __ptext24 10AA  
                        __ptext16 10A2                          __ptext41 0BC2  
                        __ptext33 0DF0                          __ptext25 10B2  
                        __ptext17 0F30                          __ptext42 0FD2  
                        __ptext34 0E9C                          __ptext26 10BA  
                        __ptext18 0798                          __ptext43 1032  
                        __ptext35 089C                          __ptext27 10C2  
                        __ptext19 0FAE                          __ptext44 0F5E  
                        __ptext36 0E2A                          __ptext28 0488  
                        __ptext45 0AE0                          __ptext37 108E  
                        __ptext29 10CA                          __ptext38 0DB0  
                        __ptext47 0C2A                          __ptext39 0ECE  
                  CantaPartAlta@c 0068                       _lletraASCII 0055  
                        _high_rsi 0008                          _copsNota 0025  
                        _s_Timers 0001                       _lletraInici 0047  
             ?_EscriuPrimeraOrdre 0062                     __size_of_main 004C  
                   __size_of_menu 0264             __end_of_CantaPartAlta 0C2A  
                   CantaData@Data 0069                          _tiTeclat 0035  
              __end_of_init_ports 1016                          _setSMSon 03C5  
                   _SsetNovaTecla 10AA              __size_of_WaitForBusy 0040  
                        _timerSMS 0053                          isa$xinst 000000  
                        int$flags 0079                      UenviaPas@pos 0067  
                     _playAltaveu 10E6                      _motorAltaveu 0976  
            ??_EscriuPrimeraOrdre 0067                        LcInit@rows 0073  
         _UcheckExistsNotFinished 106A                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0067                     ??_LcCursorOff 006F  
                   ??_LcNewString 0068                          intlevel2 0000  
                    _timerAltaveu 0026                        LcPutChar@c 0075  
                  ?_SsetNovaTecla 0062                 MNovaLletra@lletra 0067  
                 compareStrings@a 0067                   compareStrings@b 0068  
                    _return_error 03C2                    _compareStrings 0D6A  
                     _tmpPassword 0019               __end_of_MNovaLletra 10D2  
           __end_of_MsetNovaTecla 10BA                       _tmpUsername 003E  
             __end_of_LcCursorOff 109A                       SMotor@state 0036  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 10A2  
            __size_of_UmotorUsers 0104  
