

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 06 13:53:41 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112                           	psect	pa_nodes0,global,class=CODE,delta=1
   113  0000                     
   114                           ; Version 2.32
   115                           ; Generated 02/02/2021 GMT
   116                           ; 
   117                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution. Publication is not required when
   131                           ;        this file is used in an embedded application.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4321 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataCOMRAM
   151  001B76                     __pidataCOMRAM:
   152                           	callstack 0
   153                           
   154                           ;initializer for _arrayZero
   155  001B76  30                 	db	48
   156  001B77  20                 	db	32
   157  001B78  00                 	db	0
   158                           
   159                           ;initializer for _convertir
   160  001B79  FA                 	db	250
   161                           
   162                           ;initializer for _novaTeclaSIO
   163  001B7A  FF                 	db	255
   164                           
   165                           ;initializer for _direccioSIO
   166  001B7B  FF                 	db	255
   167                           
   168                           ;initializer for _usuariActualSIO
   169  001B7C  FF                 	db	255
   170                           
   171                           ;initializer for _novaTeclaJOC
   172  001B7D  FF                 	db	255
   173                           
   174                           ;initializer for _usuariJoc
   175  001B7E  FF                 	db	255
   176                           
   177                           ;initializer for GLCDMotor@max2
   178  001B7F  0F                 	db	15
   179                           
   180                           ;initializer for GLCDMotor@max1
   181  001B80  0F                 	db	15
   182                           
   183                           ;initializer for _usuariLoguejat
   184  001B81  FF                 	db	255
   185                           
   186                           ;initializer for _novaDireccio
   187  001B82  FF                 	db	255
   188                           
   189                           ;initializer for _novaLletra
   190  001B83  FF                 	db	255
   191                           
   192                           ;initializer for _NovaTecla
   193  001B84  FF                 	db	255
   194                           
   195                           ;initializer for _ultimaTecla
   196  001B85  FF                 	db	255
   197                           
   198                           ;initializer for _timerSMS
   199  001B86  FF                 	db	255
   200                           
   201                           ;initializer for _novaTecla
   202  001B87  FF                 	db	255
   203                           
   204                           ;initializer for _lletraASCII
   205  001B88  FF                 	db	255
   206                           
   207                           ;initializer for _hora
   208  001B89  33                 	db	51
   209  001B8A  30                 	db	48
   210  001B8B  3A                 	db	58
   211  001B8C  30                 	db	48
   212  001B8D  30                 	db	48
   213  001B8E  00                 	db	0
   214                           
   215                           ;initializer for _stringScore
   216  001B8F  30                 	db	48
   217  001B90  30                 	db	48
   218  001B91  00                 	db	0
   219                           
   220                           	psect	idataBANK0
   221  001BFC                     __pidataBANK0:
   222                           	callstack 0
   223                           
   224                           ;initializer for _lletraInici
   225  001BFC  41                 	db	65
   226  001BFD  44                 	db	68
   227  001BFE  47                 	db	71
   228  001BFF  4A                 	db	74
   229  001C00  4D                 	db	77
   230  001C01  50                 	db	80
   231  001C02  54                 	db	84
   232  001C03  57                 	db	87
   233  001C04  00                 	db	0
   234                           
   235                           ;initializer for _teclaPremuda
   236  001C05  01                 	db	1
   237  001C06  02                 	db	2
   238  001C07  03                 	db	3
   239  001C08  04                 	db	4
   240  001C09  05                 	db	5
   241  001C0A  06                 	db	6
   242  001C0B  07                 	db	7
   243  001C0C  08                 	db	8
   244  001C0D  09                 	db	9
   245  001C0E  0A                 	db	10
   246  001C0F  00                 	db	0
   247  001C10  0B                 	db	11
   248                           
   249                           	psect	smallconst
   250  000200                     __psmallconst:
   251                           	callstack 0
   252  000200  00                 	db	0
   253  000201                     _menuList:
   254                           	callstack 0
   255  000201  31                 	db	49
   256  000202  2E                 	db	46
   257  000203  50                 	db	80
   258  000204  6C                 	db	108
   259  000205  61                 	db	97
   260  000206  79                 	db	121
   261  000207  20                 	db	32
   262  000208  61                 	db	97
   263  000209  20                 	db	32
   264  00020A  47                 	db	71
   265  00020B  61                 	db	97
   266  00020C  6D                 	db	109
   267  00020D  65                 	db	101
   268  00020E  00                 	db	0
   269  00020F  00                 	db	0
   270  000210  00                 	db	0
   271  000211  00                 	db	0
   272  000212  00                 	db	0
   273  000213  00                 	db	0
   274  000214  00                 	db	0
   275  000215  00                 	db	0
   276  000216  00                 	db	0
   277  000217  00                 	db	0
   278  000218  00                 	db	0
   279  000219  00                 	db	0
   280  00021A  00                 	db	0
   281  00021B  00                 	db	0
   282  00021C  00                 	db	0
   283  00021D  00                 	db	0
   284  00021E  32                 	db	50
   285  00021F  2E                 	db	46
   286  000220  4D                 	db	77
   287  000221  6F                 	db	111
   288  000222  64                 	db	100
   289  000223  69                 	db	105
   290  000224  66                 	db	102
   291  000225  79                 	db	121
   292  000226  20                 	db	32
   293  000227  54                 	db	84
   294  000228  69                 	db	105
   295  000229  6D                 	db	109
   296  00022A  65                 	db	101
   297  00022B  00                 	db	0
   298  00022C  00                 	db	0
   299  00022D  00                 	db	0
   300  00022E  00                 	db	0
   301  00022F  00                 	db	0
   302  000230  00                 	db	0
   303  000231  00                 	db	0
   304  000232  00                 	db	0
   305  000233  00                 	db	0
   306  000234  00                 	db	0
   307  000235  00                 	db	0
   308  000236  00                 	db	0
   309  000237  00                 	db	0
   310  000238  00                 	db	0
   311  000239  00                 	db	0
   312  00023A  00                 	db	0
   313  00023B  33                 	db	51
   314  00023C  2E                 	db	46
   315  00023D  53                 	db	83
   316  00023E  68                 	db	104
   317  00023F  6F                 	db	111
   318  000240  77                 	db	119
   319  000241  20                 	db	32
   320  000242  47                 	db	71
   321  000243  65                 	db	101
   322  000244  6E                 	db	110
   323  000245  65                 	db	101
   324  000246  72                 	db	114
   325  000247  61                 	db	97
   326  000248  6C                 	db	108
   327  000249  20                 	db	32
   328  00024A  54                 	db	84
   329  00024B  6F                 	db	111
   330  00024C  70                 	db	112
   331  00024D  20                 	db	32
   332  00024E  35                 	db	53
   333  00024F  20                 	db	32
   334  000250  53                 	db	83
   335  000251  63                 	db	99
   336  000252  6F                 	db	111
   337  000253  72                 	db	114
   338  000254  65                 	db	101
   339  000255  73                 	db	115
   340  000256  20                 	db	32
   341  000257  00                 	db	0
   342  000258  34                 	db	52
   343  000259  2E                 	db	46
   344  00025A  4C                 	db	76
   345  00025B  6F                 	db	111
   346  00025C  67                 	db	103
   347  00025D  6F                 	db	111
   348  00025E  75                 	db	117
   349  00025F  74                 	db	116
   350  000260  00                 	db	0
   351  000261  00                 	db	0
   352  000262  00                 	db	0
   353  000263  00                 	db	0
   354  000264  00                 	db	0
   355  000265  00                 	db	0
   356  000266  00                 	db	0
   357  000267  00                 	db	0
   358  000268  00                 	db	0
   359  000269  00                 	db	0
   360  00026A  00                 	db	0
   361  00026B  00                 	db	0
   362  00026C  00                 	db	0
   363  00026D  00                 	db	0
   364  00026E  00                 	db	0
   365  00026F  00                 	db	0
   366  000270  00                 	db	0
   367  000271  00                 	db	0
   368  000272  00                 	db	0
   369  000273  00                 	db	0
   370  000274  00                 	db	0
   371  000275  35                 	db	53
   372  000276  2E                 	db	46
   373  000277  53                 	db	83
   374  000278  68                 	db	104
   375  000279  6F                 	db	111
   376  00027A  77                 	db	119
   377  00027B  20                 	db	32
   378  00027C  41                 	db	65
   379  00027D  6C                 	db	108
   380  00027E  6C                 	db	108
   381  00027F  20                 	db	32
   382  000280  55                 	db	85
   383  000281  73                 	db	115
   384  000282  65                 	db	101
   385  000283  72                 	db	114
   386  000284  73                 	db	115
   387  000285  00                 	db	0
   388  000286  00                 	db	0
   389  000287  00                 	db	0
   390  000288  00                 	db	0
   391  000289  00                 	db	0
   392  00028A  00                 	db	0
   393  00028B  00                 	db	0
   394  00028C  00                 	db	0
   395  00028D  00                 	db	0
   396  00028E  00                 	db	0
   397  00028F  00                 	db	0
   398  000290  00                 	db	0
   399  000291  00                 	db	0
   400  000292                     __end_of_menuList:
   401                           	callstack 0
   402  0000                     _PIR1bits	set	3998
   403  0000                     _RCREG	set	4014
   404  0000                     _TXREG	set	4013
   405  0000                     _TXSTAbits	set	4012
   406  0000                     _ADCON0bits	set	4034
   407  0000                     _ADRESH	set	4036
   408  0000                     _ADCON2	set	4032
   409  0000                     _ADCON1	set	4033
   410  0000                     _ADCON0	set	4034
   411  0000                     _EECON2	set	4007
   412  0000                     _EEDATA	set	4008
   413  0000                     _EEADR	set	4009
   414  0000                     _T0CONbits	set	4053
   415  0000                     _TMR0L	set	4054
   416  0000                     _TMR0H	set	4055
   417  0000                     _T0CON	set	4053
   418  0000                     _INTCONbits	set	4082
   419  0000                     _RCONbits	set	4048
   420  0000                     _PORTDbits	set	3971
   421  0000                     _SPBRG	set	4015
   422  0000                     _SPBRGH	set	4016
   423  0000                     _BAUDCON	set	4024
   424  0000                     _RCSTA	set	4011
   425  0000                     _TXSTA	set	4012
   426  0000                     _EECON1bits	set	4006
   427  0000                     _LATD	set	3980
   428  0000                     _TRISD	set	3989
   429  0000                     _TRISC	set	3988
   430  0000                     _LATBbits	set	3978
   431  0000                     _TRISBbits	set	3987
   432  0000                     _TRISB	set	3987
   433  0000                     _TRISA	set	3986
   434  0000                     _PORTCbits	set	3970
   435  0000                     _LATDbits	set	3980
   436  0000                     _LATCbits	set	3979
   437  0000                     _TRISDbits	set	3989
   438  0000                     _TRISCbits	set	3988
   439  000292                     STR_7:
   440  000292  54                 	db	84	;'T'
   441  000293  49                 	db	73	;'I'
   442  000294  4D                 	db	77	;'M'
   443  000295  45                 	db	69	;'E'
   444  000296  20                 	db	32
   445  000297  52                 	db	82	;'R'
   446  000298  45                 	db	69	;'E'
   447  000299  4D                 	db	77	;'M'
   448  00029A  41                 	db	65	;'A'
   449  00029B  49                 	db	73	;'I'
   450  00029C  4E                 	db	78	;'N'
   451  00029D  49                 	db	73	;'I'
   452  00029E  4E                 	db	78	;'N'
   453  00029F  47                 	db	71	;'G'
   454  0002A0  3A                 	db	58	;':'
   455  0002A1  00                 	db	0
   456  0002A2                     STR_6:
   457  0002A2  4D                 	db	77	;'M'
   458  0002A3  6F                 	db	111	;'o'
   459  0002A4  64                 	db	100	;'d'
   460  0002A5  69                 	db	105	;'i'
   461  0002A6  66                 	db	102	;'f'
   462  0002A7  79                 	db	121	;'y'
   463  0002A8  20                 	db	32
   464  0002A9  54                 	db	84	;'T'
   465  0002AA  69                 	db	105	;'i'
   466  0002AB  6D                 	db	109	;'m'
   467  0002AC  65                 	db	101	;'e'
   468  0002AD  3A                 	db	58	;':'
   469  0002AE  00                 	db	0
   470  0002AF                     STR_9:
   471  0002AF  54                 	db	84	;'T'
   472  0002B0  49                 	db	73	;'I'
   473  0002B1  4D                 	db	77	;'M'
   474  0002B2  45                 	db	69	;'E'
   475  0002B3  20                 	db	32
   476  0002B4  4C                 	db	76	;'L'
   477  0002B5  45                 	db	69	;'E'
   478  0002B6  46                 	db	70	;'F'
   479  0002B7  54                 	db	84	;'T'
   480  0002B8  3A                 	db	58	;':'
   481  0002B9  20                 	db	32
   482  0002BA  00                 	db	0
   483  0002BB                     STR_2:
   484  0002BB  32                 	db	50	;'2'
   485  0002BC  2E                 	db	46
   486  0002BD  52                 	db	82	;'R'
   487  0002BE  45                 	db	69	;'E'
   488  0002BF  47                 	db	71	;'G'
   489  0002C0  49                 	db	73	;'I'
   490  0002C1  53                 	db	83	;'S'
   491  0002C2  54                 	db	84	;'T'
   492  0002C3  45                 	db	69	;'E'
   493  0002C4  52                 	db	82	;'R'
   494  0002C5  00                 	db	0
   495  0002C6                     STR_5:
   496  0002C6  42                 	db	66	;'B'
   497  0002C7  59                 	db	89	;'Y'
   498  0002C8  45                 	db	69	;'E'
   499  0002C9  20                 	db	32
   500  0002CA  42                 	db	66	;'B'
   501  0002CB  59                 	db	89	;'Y'
   502  0002CC  45                 	db	69	;'E'
   503  0002CD  20                 	db	32
   504  0002CE  00                 	db	0
   505  0002CF                     STR_10:
   506  0002CF  53                 	db	83	;'S'
   507  0002D0  43                 	db	67	;'C'
   508  0002D1  4F                 	db	79	;'O'
   509  0002D2  52                 	db	82	;'R'
   510  0002D3  45                 	db	69	;'E'
   511  0002D4  3A                 	db	58	;':'
   512  0002D5  20                 	db	32
   513  0002D6  00                 	db	0
   514  0002D7                     STR_8:
   515  0002D7  45                 	db	69	;'E'
   516  0002D8  52                 	db	82	;'R'
   517  0002D9  52                 	db	82	;'R'
   518  0002DA  4F                 	db	79	;'O'
   519  0002DB  52                 	db	82	;'R'
   520  0002DC  53                 	db	83	;'S'
   521  0002DD  3A                 	db	58	;':'
   522  0002DE  00                 	db	0
   523  0002DF                     STR_1:
   524  0002DF  31                 	db	49	;'1'
   525  0002E0  2E                 	db	46
   526  0002E1  4C                 	db	76	;'L'
   527  0002E2  4F                 	db	79	;'O'
   528  0002E3  47                 	db	71	;'G'
   529  0002E4  49                 	db	73	;'I'
   530  0002E5  4E                 	db	78	;'N'
   531  0002E6  00                 	db	0
   532  0002E7                     STR_4:
   533  0002E7  50                 	db	80	;'P'
   534  0002E8  53                 	db	83	;'S'
   535  0002E9  57                 	db	87	;'W'
   536  0002EA  44                 	db	68	;'D'
   537  0002EB  3A                 	db	58	;':'
   538  0002EC  20                 	db	32
   539  0002ED  00                 	db	0
   540  0002EE                     STR_3:
   541  0002EE  55                 	db	85	;'U'
   542  0002EF  53                 	db	83	;'S'
   543  0002F0  45                 	db	69	;'E'
   544  0002F1  52                 	db	82	;'R'
   545  0002F2  3A                 	db	58	;':'
   546  0002F3  20                 	db	32
   547  0002F4  00                 	db	0
   548  0002F5  00                 	db	0	; dummy byte at the end
   549  0000                     
   550                           ; #config settings
   551                           
   552                           	psect	cinit
   553  001612                     __pcinit:
   554                           	callstack 0
   555  001612                     start_initialization:
   556                           	callstack 0
   557  001612                     __initialization:
   558                           	callstack 0
   559                           
   560                           ; Initialize objects allocated to BANK0 (21 bytes)
   561                           ; load TBLPTR registers with __pidataBANK0
   562  001612  0EFC               	movlw	low __pidataBANK0
   563  001614  6EF6               	movwf	tblptrl,c
   564  001616  0E1B               	movlw	high __pidataBANK0
   565  001618  6EF7               	movwf	tblptrh,c
   566  00161A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   567  00161C  6EF8               	movwf	tblptru,c
   568  00161E  EE00  F0AA         	lfsr	0,__pdataBANK0
   569  001622  EE10 F015          	lfsr	1,21
   570  001626                     copy_data0:
   571  001626  0009               	tblrd		*+
   572  001628  CFF5 FFEE          	movff	tablat,postinc0
   573  00162C  50E5               	movf	postdec1,w,c
   574  00162E  50E1               	movf	fsr1l,w,c
   575  001630  E1FA               	bnz	copy_data0
   576                           
   577                           ; Initialize objects allocated to COMRAM (28 bytes)
   578                           ; load TBLPTR registers with __pidataCOMRAM
   579  001632  0E76               	movlw	low __pidataCOMRAM
   580  001634  6EF6               	movwf	tblptrl,c
   581  001636  0E1B               	movlw	high __pidataCOMRAM
   582  001638  6EF7               	movwf	tblptrh,c
   583  00163A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   584  00163C  6EF8               	movwf	tblptru,c
   585  00163E  EE00  F042         	lfsr	0,__pdataCOMRAM
   586  001642  EE10 F01C          	lfsr	1,28
   587  001646                     copy_data1:
   588  001646  0009               	tblrd		*+
   589  001648  CFF5 FFEE          	movff	tablat,postinc0
   590  00164C  50E5               	movf	postdec1,w,c
   591  00164E  50E1               	movf	fsr1l,w,c
   592  001650  E1FA               	bnz	copy_data1
   593                           
   594                           ; Clear objects allocated to BANK1 (184 bytes)
   595  001652  EE01  F000         	lfsr	0,__pbssBANK1
   596  001656  0EB8               	movlw	184
   597  001658                     clear_0:
   598  001658  6AEE               	clrf	postinc0,c
   599  00165A  06E8               	decf	wreg,f,c
   600  00165C  E1FD               	bnz	clear_0
   601                           
   602                           ; Clear objects allocated to BANK0 (42 bytes)
   603  00165E  EE00  F080         	lfsr	0,__pbssBANK0
   604  001662  0E2A               	movlw	42
   605  001664                     clear_1:
   606  001664  6AEE               	clrf	postinc0,c
   607  001666  06E8               	decf	wreg,f,c
   608  001668  E1FD               	bnz	clear_1
   609                           
   610                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   611  00166A  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   612  00166C  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   613  00166E  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   614                           
   615                           ; Clear objects allocated to COMRAM (65 bytes)
   616  001670  EE00  F001         	lfsr	0,__pbssCOMRAM
   617  001674  0E41               	movlw	65
   618  001676                     clear_2:
   619  001676  6AEE               	clrf	postinc0,c
   620  001678  06E8               	decf	wreg,f,c
   621  00167A  E1FD               	bnz	clear_2
   622  00167C                     end_of_initialization:
   623                           	callstack 0
   624  00167C                     __end_of__initialization:
   625                           	callstack 0
   626  00167C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   627  00167E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   628  001680  0E00               	movlw	low (__Lmediumconst shr (0+16))
   629  001682  6EF8               	movwf	tblptru,c
   630  001684  0100               	movlb	0
   631  001686  EF45  F00B         	goto	_main	;jump to C main() function
   632                           
   633                           	psect	bitbssCOMRAM
   634  0003B8                     __pbitbssCOMRAM:
   635                           	callstack 0
   636  0003B8                     _Krebut:
   637                           	callstack 0
   638  0003B8                     	ds	1
   639  0003B9                     _jugantSIO:
   640                           	callstack 0
   641  0003B9                     	ds	1
   642  0003BA                     _jugantJoc:
   643                           	callstack 0
   644  0003BA                     	ds	1
   645  0003BB                     _tempsAcabat:
   646                           	callstack 0
   647  0003BB                     	ds	1
   648  0003BC                     _nouSegon:
   649                           	callstack 0
   650  0003BC                     	ds	1
   651  0003BD                     _jugant:
   652                           	callstack 0
   653  0003BD                     	ds	1
   654  0003BE                     _cap2:
   655                           	callstack 0
   656  0003BE                     	ds	1
   657  0003BF                     _cap1:
   658                           	callstack 0
   659  0003BF                     	ds	1
   660  0003C0                     _newString:
   661                           	callstack 0
   662  0003C0                     	ds	1
   663  0003C1                     _ferMenu:
   664                           	callstack 0
   665  0003C1                     	ds	1
   666  0003C2                     _reproduir:
   667                           	callstack 0
   668  0003C2                     	ds	1
   669  0003C3                     _do_updateScores:
   670                           	callstack 0
   671  0003C3                     	ds	1
   672  0003C4                     _do_showUsers:
   673                           	callstack 0
   674  0003C4                     	ds	1
   675  0003C5                     _do_register:
   676                           	callstack 0
   677  0003C5                     	ds	1
   678  0003C6                     _do_check_exists:
   679                           	callstack 0
   680  0003C6                     	ds	1
   681  0003C7                     _loginNOTRegister:
   682                           	callstack 0
   683  0003C7                     	ds	1
   684  0003C8                     _setSMSon:
   685                           	callstack 0
   686  0003C8                     	ds	1
   687  0003C9                     _nou_s:
   688                           	callstack 0
   689  0003C9                     	ds	1
   690                           
   691                           	psect	bssCOMRAM
   692  000001                     __pbssCOMRAM:
   693                           	callstack 0
   694  000001                     _arrayShowUsers:
   695                           	callstack 0
   696  000001                     	ds	8
   697  000009                     _userPtr:
   698                           	callstack 0
   699  000009                     	ds	2
   700  00000B                     _h_Tics:
   701                           	callstack 0
   702  00000B                     	ds	2
   703  00000D                     _s_ptr:
   704                           	callstack 0
   705  00000D                     	ds	2
   706  00000F                     motorSIO@state:
   707                           	callstack 0
   708  00000F                     	ds	1
   709  000010                     _timerSIO:
   710                           	callstack 0
   711  000010                     	ds	1
   712  000011                     motorJoc@state:
   713                           	callstack 0
   714  000011                     	ds	1
   715  000012                     _direccioJoc:
   716                           	callstack 0
   717  000012                     	ds	1
   718  000013                     motorHora@state:
   719                           	callstack 0
   720  000013                     	ds	1
   721  000014                     _segons:
   722                           	callstack 0
   723  000014                     	ds	1
   724  000015                     _timerHora:
   725                           	callstack 0
   726  000015                     	ds	1
   727  000016                     JoystickMotor@state:
   728                           	callstack 0
   729  000016                     	ds	1
   730  000017                     _ultimaTeclaAD:
   731                           	callstack 0
   732  000017                     	ds	1
   733  000018                     GLCDMotor@length2:
   734                           	callstack 0
   735  000018                     	ds	1
   736  000019                     GLCDMotor@length1:
   737                           	callstack 0
   738  000019                     	ds	1
   739  00001A                     GLCDMotor@k2:
   740                           	callstack 0
   741  00001A                     	ds	1
   742  00001B                     GLCDMotor@k1:
   743                           	callstack 0
   744  00001B                     	ds	1
   745  00001C                     GLCDMotor@min2:
   746                           	callstack 0
   747  00001C                     	ds	1
   748  00001D                     GLCDMotor@min1:
   749                           	callstack 0
   750  00001D                     	ds	1
   751  00001E                     GLCDMotor@j:
   752                           	callstack 0
   753  00001E                     	ds	1
   754  00001F                     GLCDMotor@state:
   755                           	callstack 0
   756  00001F                     	ds	1
   757  000020                     _menuDaltGLCD:
   758                           	callstack 0
   759  000020                     	ds	1
   760  000021                     _timerGLCD:
   761                           	callstack 0
   762  000021                     	ds	1
   763  000022                     motorAltaveu@state:
   764                           	callstack 0
   765  000022                     	ds	1
   766  000023                     _copsNota:
   767                           	callstack 0
   768  000023                     	ds	1
   769  000024                     _timerAltaveu:
   770                           	callstack 0
   771  000024                     	ds	1
   772  000025                     _nota:
   773                           	callstack 0
   774  000025                     	ds	1
   775  000026                     UmotorUsers@state:
   776                           	callstack 0
   777  000026                     	ds	1
   778  000027                     _j:
   779                           	callstack 0
   780  000027                     	ds	1
   781  000028                     _i:
   782                           	callstack 0
   783  000028                     	ds	1
   784  000029                     _indexNextUserStruct:
   785                           	callstack 0
   786  000029                     	ds	1
   787  00002A                     _indexNextUser:
   788                           	callstack 0
   789  00002A                     	ds	1
   790  00002B                     _numUsuaris:
   791                           	callstack 0
   792  00002B                     	ds	1
   793  00002C                     menu@state:
   794                           	callstack 0
   795  00002C                     	ds	1
   796  00002D                     _pos:
   797                           	callstack 0
   798  00002D                     	ds	1
   799  00002E                     _indexUsuari:
   800                           	callstack 0
   801  00002E                     	ds	1
   802  00002F                     _menuDalt:
   803                           	callstack 0
   804  00002F                     	ds	1
   805  000030                     _timerMenu:
   806                           	callstack 0
   807  000030                     	ds	1
   808  000031                     _tmp:
   809                           	callstack 0
   810  000031                     	ds	1
   811  000032                     _counter:
   812                           	callstack 0
   813  000032                     	ds	1
   814  000033                     TeTeclat@files:
   815                           	callstack 0
   816  000033                     	ds	1
   817  000034                     TeTeclat@cols:
   818                           	callstack 0
   819  000034                     	ds	1
   820  000035                     TeTeclat@state:
   821                           	callstack 0
   822  000035                     	ds	1
   823  000036                     _tiTeclat:
   824                           	callstack 0
   825  000036                     	ds	1
   826  000037                     SMotor@state:
   827                           	callstack 0
   828  000037                     	ds	1
   829  000038                     _zeroTecla:
   830                           	callstack 0
   831  000038                     	ds	1
   832  000039                     _sumaPulsacions:
   833                           	callstack 0
   834  000039                     	ds	1
   835  00003A                     _Timer:
   836                           	callstack 0
   837  00003A                     	ds	1
   838  00003B                     _ColumnAct:
   839                           	callstack 0
   840  00003B                     	ds	1
   841  00003C                     _RowAct:
   842                           	callstack 0
   843  00003C                     	ds	1
   844  00003D                     _Rows:
   845                           	callstack 0
   846  00003D                     	ds	1
   847  00003E                     _horaTmp:
   848                           	callstack 0
   849  00003E                     	ds	4
   850                           
   851                           	psect	dataCOMRAM
   852  000042                     __pdataCOMRAM:
   853                           	callstack 0
   854  000042                     _arrayZero:
   855                           	callstack 0
   856  000042                     	ds	3
   857  000045                     _convertir:
   858                           	callstack 0
   859  000045                     	ds	1
   860  000046                     _novaTeclaSIO:
   861                           	callstack 0
   862  000046                     	ds	1
   863  000047                     _direccioSIO:
   864                           	callstack 0
   865  000047                     	ds	1
   866  000048                     _usuariActualSIO:
   867                           	callstack 0
   868  000048                     	ds	1
   869  000049                     _novaTeclaJOC:
   870                           	callstack 0
   871  000049                     	ds	1
   872  00004A                     _usuariJoc:
   873                           	callstack 0
   874  00004A                     	ds	1
   875  00004B                     GLCDMotor@max2:
   876                           	callstack 0
   877  00004B                     	ds	1
   878  00004C                     GLCDMotor@max1:
   879                           	callstack 0
   880  00004C                     	ds	1
   881  00004D                     _usuariLoguejat:
   882                           	callstack 0
   883  00004D                     	ds	1
   884  00004E                     _novaDireccio:
   885                           	callstack 0
   886  00004E                     	ds	1
   887  00004F                     _novaLletra:
   888                           	callstack 0
   889  00004F                     	ds	1
   890  000050                     _NovaTecla:
   891                           	callstack 0
   892  000050                     	ds	1
   893  000051                     _ultimaTecla:
   894                           	callstack 0
   895  000051                     	ds	1
   896  000052                     _timerSMS:
   897                           	callstack 0
   898  000052                     	ds	1
   899  000053                     _novaTecla:
   900                           	callstack 0
   901  000053                     	ds	1
   902  000054                     _lletraASCII:
   903                           	callstack 0
   904  000054                     	ds	1
   905  000055                     _hora:
   906                           	callstack 0
   907  000055                     	ds	6
   908  00005B                     _stringScore:
   909                           	callstack 0
   910  00005B                     	ds	3
   911                           
   912                           	psect	bssBANK0
   913  000080                     __pbssBANK0:
   914                           	callstack 0
   915  000080                     _s_Timers:
   916                           	callstack 0
   917  000080                     	ds	24
   918  000098                     _tmpPassword:
   919                           	callstack 0
   920  000098                     	ds	9
   921  0000A1                     _tmpUsername:
   922                           	callstack 0
   923  0000A1                     	ds	9
   924                           
   925                           	psect	dataBANK0
   926  0000AA                     __pdataBANK0:
   927                           	callstack 0
   928  0000AA                     _lletraInici:
   929                           	callstack 0
   930  0000AA                     	ds	9
   931  0000B3                     _teclaPremuda:
   932                           	callstack 0
   933  0000B3                     	ds	12
   934                           
   935                           	psect	bssBANK1
   936  000100                     __pbssBANK1:
   937                           	callstack 0
   938  000100                     _usuaris:
   939                           	callstack 0
   940  000100                     	ds	184
   941                           
   942                           	psect	cstackCOMRAM
   943  00005E                     __pcstackCOMRAM:
   944                           	callstack 0
   945  00005E                     
   946                           ; 1 bytes @ 0x0
   947  00005E                     	ds	1
   948  00005F                     ??_high_rsi:
   949                           
   950                           ; 1 bytes @ 0x1
   951  00005F                     	ds	4
   952  000063                     ??_EscriuPrimeraOrdre:
   953  000063                     ??_Uinit:
   954  000063                     ??_CantaPartAlta:
   955  000063                     ??_CantaPartBaixa:
   956  000063                     ?_TiGetTics:
   957                           	callstack 0
   958  000063                     ?_UgetUserName:
   959                           	callstack 0
   960  000063                     ?_getArrayShowUsers:
   961                           	callstack 0
   962  000063                     SsetNovaTecla@tecla:
   963                           	callstack 0
   964  000063                     TiResetTics@Handle:
   965                           	callstack 0
   966  000063                     MsetNovaTecla@tecla:
   967                           	callstack 0
   968  000063                     MNovaLletra@lletra:
   969                           	callstack 0
   970  000063                     MNouJoystick@posicio:
   971                           	callstack 0
   972  000063                     UenviaChar@pos:
   973                           	callstack 0
   974  000063                     UenviaPas@pos:
   975                           	callstack 0
   976  000063                     escriureCharEEPROM@pos:
   977                           	callstack 0
   978  000063                     compareStrings@a:
   979                           	callstack 0
   980  000063                     escriureEEPROM@caca:
   981                           	callstack 0
   982  000063                     GLCDMostraMenu@num:
   983                           	callstack 0
   984  000063                     HActualitzaHora@nova:
   985                           	callstack 0
   986  000063                     JJuguem@usuari:
   987                           	callstack 0
   988  000063                     JnovaTecla@tecla:
   989                           	callstack 0
   990  000063                     JnovaDireccio@dir:
   991                           	callstack 0
   992  000063                     conversorJoystick@direc:
   993                           	callstack 0
   994  000063                     SIONovaDireccio@num:
   995                           	callstack 0
   996  000063                     SIOStartGame@usuari:
   997                           	callstack 0
   998  000063                     SIONovaTecla@tecla:
   999                           	callstack 0
  1000  000063                     CToAConverteix@numero:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x5
  1004  000063                     	ds	1
  1005  000064                     ??_JoystickMotor:
  1006  000064                     CantaPartAlta@c:
  1007                           	callstack 0
  1008  000064                     CantaPartBaixa@c:
  1009                           	callstack 0
  1010  000064                     EscriuPrimeraOrdre@ordre:
  1011                           	callstack 0
  1012  000064                     UenviaChar@c:
  1013                           	callstack 0
  1014  000064                     UenviaPas@c:
  1015                           	callstack 0
  1016  000064                     escriureCharEEPROM@c:
  1017                           	callstack 0
  1018  000064                     compareStrings@b:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x6
  1022  000064                     	ds	1
  1023  000065                     ??_TiGetTics:
  1024  000065                     CantaIR@IR:
  1025                           	callstack 0
  1026  000065                     CantaData@Data:
  1027                           	callstack 0
  1028  000065                     UgetUserName@quin:
  1029                           	callstack 0
  1030  000065                     getArrayShowUsers@quin:
  1031                           	callstack 0
  1032  000065                     Uinit@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x7
  1036  000065                     	ds	1
  1037  000066                     ??_compareStrings:
  1038  000066                     Uinit@j:
  1039                           	callstack 0
  1040  000066                     LcNewString@new_s:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x8
  1044  000066                     	ds	1
  1045  000067                     TiGetTics@Handle:
  1046                           	callstack 0
  1047  000067                     Uinit@j_1215:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x9
  1051  000067                     	ds	1
  1052  000068                     ??_UmotorUsers:
  1053  000068                     TiGetTics@actual:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0xA
  1057  000068                     	ds	2
  1058  00006A                     ??_SMotor:
  1059  00006A                     ??_motorHora:
  1060  00006A                     ??_motorAltaveu:
  1061  00006A                     ??_TeTeclat:
  1062  00006A                     WaitForBusy@Busy:
  1063                           	callstack 0
  1064  00006A                     Espera@ms:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0xC
  1068  00006A                     	ds	1
  1069  00006B                     LcGotoXY@Row:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0xD
  1073  00006B                     	ds	1
  1074  00006C                     ??_Espera:
  1075  00006C                     LcGotoXY@Fisics:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xE
  1079  00006C                     	ds	1
  1080  00006D                     Espera@Timer:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xF
  1084  00006D                     	ds	1
  1085  00006E                     LcInit@columns:
  1086                           	callstack 0
  1087  00006E                     _LcGotoXY$336:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091  00006E                     	ds	1
  1092  00006F                     LcInit@rows:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x11
  1096  00006F                     	ds	1
  1097  000070                     LcGotoXY@Column:
  1098                           	callstack 0
  1099  000070                     LcInit@i:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x12
  1103  000070                     	ds	1
  1104  000071                     ??_motorJoc:
  1105  000071                     LcPutChar@c:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x13
  1109  000071                     	ds	1
  1110  000072                     ??_motorSIO:
  1111  000072                     ??_menu:
  1112  000072                     ??_GLCDMotor:
  1113  000072                     
  1114                           ; 1 bytes @ 0x14
  1115  000072                     	ds	5
  1116  000077                     
  1117                           ; 1 bytes @ 0x19
  1118 ;;
  1119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1120 ;;
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 78 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1
  1137 ;;      Params:         0       0       0
  1138 ;;      Locals:         0       0       0
  1139 ;;      Temps:          0       0       0
  1140 ;;      Totals:         0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels required when called: 7
  1143 ;; This function calls:
  1144 ;;		_CtoA
  1145 ;;		_GLCDInit
  1146 ;;		_GLCDMotor
  1147 ;;		_JoystickInit
  1148 ;;		_JoystickMotor
  1149 ;;		_LcInit
  1150 ;;		_LcLCD
  1151 ;;		_Minit
  1152 ;;		_SMotor
  1153 ;;		_Sinit
  1154 ;;		_TeInit
  1155 ;;		_TeTeclat
  1156 ;;		_TiInitTimer
  1157 ;;		_Uinit
  1158 ;;		_UmotorUsers
  1159 ;;		_escriure2usuarisStruct
  1160 ;;		_escriureEEPROM
  1161 ;;		_initAltaveu
  1162 ;;		_initHora
  1163 ;;		_initSIO
  1164 ;;		_init_eusart
  1165 ;;		_init_ports
  1166 ;;		_menu
  1167 ;;		_motorAltaveu
  1168 ;;		_motorHora
  1169 ;;		_motorJoc
  1170 ;;		_motorSIO
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text0
  1177  00168A                     __ptext0:
  1178                           	callstack 0
  1179  00168A                     _main:
  1180                           	callstack 24
  1181                           
  1182                           ;main.c: 79:     init_ports();
  1183                           
  1184                           ;incstack = 0
  1185  00168A  ECAC  F00D         	call	_init_ports	;wreg free
  1186                           
  1187                           ;main.c: 80:     escriureEEPROM();
  1188  00168E  EC19  F00D         	call	_escriureEEPROM	;wreg free
  1189                           
  1190                           ;main.c: 81:     init_eusart();
  1191  001692  ECF3  F00D         	call	_init_eusart	;wreg free
  1192                           
  1193                           ;main.c: 82:     TiInitTimer();
  1194  001696  EC2D  F00D         	call	_TiInitTimer	;wreg free
  1195                           
  1196                           ;main.c: 83:     TeInit();
  1197  00169A  EC92  F00E         	call	_TeInit	;wreg free
  1198                           
  1199                           ;main.c: 84:     Sinit();
  1200  00169E  EC96  F00E         	call	_Sinit	;wreg free
  1201                           
  1202                           ;main.c: 85:     SMotor();
  1203  0016A2  EC6A  F007         	call	_SMotor	;wreg free
  1204                           
  1205                           ;main.c: 86:     Uinit();
  1206  0016A6  ECF3  F009         	call	_Uinit	;wreg free
  1207                           
  1208                           ;main.c: 87:     initAltaveu();
  1209  0016AA  EC86  F00E         	call	_initAltaveu	;wreg free
  1210                           
  1211                           ;main.c: 88:     GLCDInit();
  1212  0016AE  ECA6  F00E         	call	_GLCDInit	;wreg free
  1213                           
  1214                           ;main.c: 89:     JoystickInit();
  1215  0016B2  EC13  F00E         	call	_JoystickInit	;wreg free
  1216                           
  1217                           ;main.c: 90:     initHora();
  1218  0016B6  EC82  F00E         	call	_initHora	;wreg free
  1219                           
  1220                           ;main.c: 91:     initSIO();
  1221  0016BA  EC7E  F00E         	call	_initSIO	;wreg free
  1222                           
  1223                           ;main.c: 93:     LcInit(2,16);
  1224  0016BE  0E10               	movlw	16
  1225  0016C0  6E6E               	movwf	LcInit@columns^0,c
  1226  0016C2  0E02               	movlw	2
  1227  0016C4  EC40  F009         	call	_LcInit
  1228                           
  1229                           ;main.c: 94:     Minit();
  1230  0016C8  EC9E  F00E         	call	_Minit	;wreg free
  1231                           
  1232                           ;main.c: 96:     escriure2usuarisStruct();
  1233  0016CC  EC95  F00C         	call	_escriure2usuarisStruct	;wreg free
  1234  0016D0                     l5903:
  1235                           
  1236                           ;main.c: 99:         motorJoc();
  1237  0016D0  EC9F  F009         	call	_motorJoc	;wreg free
  1238                           
  1239                           ;main.c: 100:         motorSIO();
  1240  0016D4  ECA4  F005         	call	_motorSIO	;wreg free
  1241                           
  1242                           ;main.c: 101:         motorHora();
  1243  0016D8  EC89  F00A         	call	_motorHora	;wreg free
  1244                           
  1245                           ;main.c: 102:         JoystickMotor();
  1246  0016DC  ECD5  F008         	call	_JoystickMotor	;wreg free
  1247                           
  1248                           ;main.c: 103:         menu();
  1249  0016E0  EC7B  F001         	call	_menu	;wreg free
  1250                           
  1251                           ;main.c: 105:         CtoA();
  1252  0016E4  EC78  F00D         	call	_CtoA	;wreg free
  1253                           
  1254                           ;main.c: 106:         motorAltaveu();
  1255  0016E8  EC3F  F00A         	call	_motorAltaveu	;wreg free
  1256                           
  1257                           ;main.c: 107:         UmotorUsers();
  1258  0016EC  EC90  F006         	call	_UmotorUsers	;wreg free
  1259                           
  1260                           ;main.c: 108:         GLCDMotor();
  1261  0016F0  EC58  F004         	call	_GLCDMotor	;wreg free
  1262                           
  1263                           ;main.c: 109:         TeTeclat();
  1264  0016F4  EC41  F008         	call	_TeTeclat	;wreg free
  1265                           
  1266                           ;main.c: 110:         SMotor();
  1267  0016F8  EC6A  F007         	call	_SMotor	;wreg free
  1268                           
  1269                           ;main.c: 111:         LcLCD();
  1270  0016FC  ECE7  F00B         	call	_LcLCD	;wreg free
  1271  001700  D7E7               	goto	l5903
  1272  001702                     __end_of_main:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _motorSIO *****************
  1276 ;; Defined at:
  1277 ;;		line 42 in file "SIO.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/1
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1
  1291 ;;      Params:         0       0       0
  1292 ;;      Locals:         0       0       0
  1293 ;;      Temps:          2       0       0
  1294 ;;      Totals:         2       0       0
  1295 ;;Total ram usage:        2 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 6
  1298 ;; This function calls:
  1299 ;;		_CToAConverteix
  1300 ;;		_CToAHaAcabat
  1301 ;;		_CToAobtenir
  1302 ;;		_HGetTime
  1303 ;;		_LcClear
  1304 ;;		_LcGotoXY
  1305 ;;		_LcLliure
  1306 ;;		_LcNewString
  1307 ;;		_LcPutChar
  1308 ;;		_TiGetTics
  1309 ;;		_TiResetTics
  1310 ;;		_UgetUserName
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text1
  1317  000B48                     __ptext1:
  1318                           	callstack 0
  1319  000B48                     _motorSIO:
  1320                           	callstack 24
  1321                           
  1322                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1323                           
  1324                           ;incstack = 0
  1325  000B48  D0C0               	goto	l4893
  1326  000B4A                     l4777:
  1327                           
  1328                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1329  000B4A  BE48               	btfsc	_usuariActualSIO^0,7,c
  1330  000B4C  0012               	return	
  1331                           
  1332                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1333  000B4E  5048               	movf	_usuariActualSIO^0,w,c
  1334  000B50  EC09  F00E         	call	_UgetUserName
  1335  000B54  C063  F009         	movff	?_UgetUserName,_userPtr
  1336  000B58  C064  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1337                           
  1338                           ;SIO.c: 49:     jugantSIO = 1;
  1339  000B5C  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1340                           
  1341                           ;SIO.c: 50:     Krebut = 0;
  1342  000B5E  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1343                           
  1344                           ;SIO.c: 51:     state = 1;
  1345  000B60  0E01               	movlw	1
  1346  000B62  6E0F               	movwf	motorSIO@state^0,c
  1347  000B64  0C01               	retlw	1
  1348  000B66                     l4787:
  1349                           
  1350                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1351  000B66  D8D1               	call	PL24	;call to abstracted procedure
  1352  000B68  E108               	bnz	l4795
  1353  000B6A  A2AC               	btfss	172,1,c	;volatile
  1354  000B6C  D006               	goto	l4795
  1355                           
  1356                           ;SIO.c: 56:     TXREG = '\0';
  1357  000B6E  6AAD               	clrf	173,c	;volatile
  1358                           
  1359                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1360  000B70  6A46               	clrf	_novaTeclaSIO^0,c
  1361                           
  1362                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1363  000B72  868A               	bsf	138,3,c	;volatile
  1364                           
  1365                           ;SIO.c: 59:     state = 2;
  1366  000B74  0E02               	movlw	2
  1367  000B76  6E0F               	movwf	motorSIO@state^0,c
  1368                           
  1369                           ;SIO.c: 60:    }
  1370  000B78  0C02               	retlw	2
  1371  000B7A                     l4795:
  1372  000B7A  D8C7               	call	PL24	;call to abstracted procedure
  1373  000B7C  A4D8               	btfss	status,2,c
  1374  000B7E  A2AC               	btfss	172,1,c	;volatile
  1375  000B80  0012               	return	
  1376                           
  1377                           ;SIO.c: 62:     TXREG = *userPtr;
  1378  000B82  D8C3               	call	PL24	;call to abstracted procedure
  1379  000B84  6EAD               	movwf	173,c	;volatile
  1380                           
  1381                           ;SIO.c: 63:     userPtr++;
  1382  000B86  4A09               	infsnz	_userPtr^0,f,c
  1383  000B88  2A0A               	incf	(_userPtr+1)^0,f,c
  1384  000B8A  0012               	return	
  1385  000B8C                     l4803:
  1386                           
  1387                           ;SIO.c: 67:    if (RCREG == 'K') {
  1388  000B8C  0E4B               	movlw	75
  1389  000B8E  18AE               	xorwf	174,w,c
  1390  000B90  A4D8               	btfss	status,2,c
  1391  000B92  0012               	return	
  1392                           
  1393                           ;SIO.c: 68:     Krebut = 1;
  1394  000B94  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1395  000B96                     l4807:
  1396                           
  1397                           ;SIO.c: 69:     state = 3;
  1398  000B96  0E03               	movlw	3
  1399  000B98  6E0F               	movwf	motorSIO@state^0,c
  1400  000B9A  0C03               	retlw	3
  1401  000B9C                     l4809:
  1402                           
  1403                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1404  000B9C  2847               	incf	_direccioSIO^0,w,c
  1405  000B9E  E006               	bz	l4817
  1406  000BA0  A2AC               	btfss	172,1,c	;volatile
  1407  000BA2  D004               	goto	l4817
  1408                           
  1409                           ;SIO.c: 74:     TXREG = direccioSIO;
  1410  000BA4  C047  FFAD         	movff	_direccioSIO,4013	;volatile
  1411                           
  1412                           ;SIO.c: 75:     direccioSIO = -1;
  1413  000BA8  6847               	setf	_direccioSIO^0,c
  1414  000BAA  D7F5               	goto	l4807
  1415  000BAC                     l4817:
  1416  000BAC  0E30               	movlw	48
  1417  000BAE  6446               	cpfsgt	_novaTeclaSIO^0,c
  1418  000BB0  D009               	goto	l1237
  1419  000BB2  0E3A               	movlw	58
  1420  000BB4  6046               	cpfslt	_novaTeclaSIO^0,c
  1421  000BB6  D006               	goto	l1237
  1422  000BB8  A2AC               	btfss	172,1,c	;volatile
  1423  000BBA  D004               	goto	l1237
  1424                           
  1425                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1426  000BBC  C046  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1427                           
  1428                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1429  000BC0  6A46               	clrf	_novaTeclaSIO^0,c
  1430  000BC2  D7E9               	goto	l4807
  1431  000BC4                     l1237:
  1432  000BC4  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1433  000BC6  D002               	goto	u4110
  1434  000BC8  B2AC               	btfsc	172,1,c	;volatile
  1435  000BCA  D002               	goto	u4120
  1436  000BCC                     u4110:
  1437  000BCC  AA9E               	btfss	158,5,c	;volatile
  1438  000BCE  0012               	return	
  1439  000BD0                     u4120:
  1440                           
  1441                           ;SIO.c: 84:     LcClear();
  1442  000BD0  EC8A  F00D         	call	_LcClear	;wreg free
  1443                           
  1444                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1445  000BD4  0ED7               	movlw	low STR_8
  1446  000BD6  EC42  F004         	call	PL6	;call to abstracted procedure
  1447  000BDA  EC56  F00E         	call	_LcNewString	;wreg free
  1448                           
  1449                           ;SIO.c: 86:     TXREG = 'F';
  1450  000BDE  0E46               	movlw	70
  1451  000BE0  6EAD               	movwf	173,c	;volatile
  1452                           
  1453                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1454  000BE2  6A46               	clrf	_novaTeclaSIO^0,c
  1455                           
  1456                           ;SIO.c: 88:     state = 4;
  1457  000BE4  0E04               	movlw	4
  1458  000BE6  6E0F               	movwf	motorSIO@state^0,c
  1459  000BE8  0C04               	retlw	4
  1460  000BEA                     l1244:
  1461                           
  1462                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1463  000BEA  AA9E               	btfss	158,5,c	;volatile
  1464  000BEC  0012               	return	
  1465                           
  1466                           ;SIO.c: 93:     CToAConverteix(RCREG);
  1467  000BEE  50AE               	movf	174,w,c	;volatile
  1468  000BF0  EC2C  F00E         	call	_CToAConverteix
  1469                           
  1470                           ;SIO.c: 94:     TiResetTics(timerSIO);
  1471  000BF4  5010               	movf	_timerSIO^0,w,c
  1472  000BF6  ECE5  F00D         	call	_TiResetTics
  1473  000BFA                     l4843:
  1474                           
  1475                           ;SIO.c: 95:     state = 5;
  1476  000BFA  0E05               	movlw	5
  1477  000BFC  6E0F               	movwf	motorSIO@state^0,c
  1478  000BFE  0C05               	retlw	5
  1479  000C00                     l4845:
  1480                           
  1481                           ;SIO.c: 99:    if (TiGetTics(timerSIO) > 2490) {
  1482  000C00  5010               	movf	_timerSIO^0,w,c
  1483  000C02  EC41  F00D         	call	_TiGetTics
  1484  000C06  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1485  000C08  D00F               	goto	l4853
  1486  000C0A  0EBB               	movlw	187
  1487  000C0C  5C63               	subwf	?_TiGetTics^0,w,c
  1488  000C0E  0E09               	movlw	9
  1489  000C10  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1490  000C12  E30A               	bnc	l4853
  1491                           
  1492                           ;SIO.c: 100:     LcClear();
  1493  000C14  EC8A  F00D         	call	_LcClear	;wreg free
  1494                           
  1495                           ;SIO.c: 101:     LcNewString("TIME LEFT: ");
  1496  000C18  0EAF               	movlw	low STR_9
  1497  000C1A  EC42  F004         	call	PL6	;call to abstracted procedure
  1498  000C1E  EC56  F00E         	call	_LcNewString	;wreg free
  1499                           
  1500                           ;SIO.c: 102:     state = 7;
  1501  000C22  0E07               	movlw	7
  1502  000C24  6E0F               	movwf	motorSIO@state^0,c
  1503                           
  1504                           ;SIO.c: 103:    }
  1505  000C26  0C07               	retlw	7
  1506  000C28                     l4853:
  1507  000C28  5010               	movf	_timerSIO^0,w,c
  1508  000C2A  EC41  F00D         	call	_TiGetTics
  1509  000C2E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1510  000C30  D006               	goto	u4150
  1511  000C32  0EBA               	movlw	186
  1512  000C34  5C63               	subwf	?_TiGetTics^0,w,c
  1513  000C36  0E09               	movlw	9
  1514  000C38  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1515  000C3A  B0D8               	btfsc	status,0,c
  1516  000C3C  0012               	return	
  1517  000C3E                     u4150:
  1518  000C3E  AA9E               	btfss	158,5,c	;volatile
  1519  000C40  0012               	return	
  1520  000C42  EC5C  F00E         	call	_LcLliure	;wreg free
  1521  000C46  A0D8               	btfss	status,0,c
  1522  000C48  0012               	return	
  1523                           
  1524                           ;SIO.c: 105:     LcGotoXY(0,1);
  1525  000C4A  EC4D  F004         	call	PL34	;call to abstracted procedure
  1526  000C4E  ECE9  F00C         	call	_LcGotoXY
  1527                           
  1528                           ;SIO.c: 106:     LcPutChar(RCREG);
  1529  000C52  50AE               	movf	174,w,c	;volatile
  1530  000C54  EC0F  F00C         	call	_LcPutChar
  1531                           
  1532                           ;SIO.c: 107:     state = 6;
  1533  000C58  0E06               	movlw	6
  1534  000C5A  6E0F               	movwf	motorSIO@state^0,c
  1535  000C5C  0C06               	retlw	6
  1536  000C5E                     l4863:
  1537                           
  1538                           ;SIO.c: 111:    if (LcLliure()) {
  1539  000C5E  EC5C  F00E         	call	_LcLliure	;wreg free
  1540  000C62  A0D8               	btfss	status,0,c
  1541  000C64  0012               	return	
  1542                           
  1543                           ;SIO.c: 112:     LcNewString(HGetTime());
  1544  000C66  ECBE  F00E         	call	_HGetTime	;wreg free
  1545  000C6A  D855               	call	PL46	;call to abstracted procedure
  1546  000C6C  EC56  F00E         	call	_LcNewString	;wreg free
  1547                           
  1548                           ;SIO.c: 113:     state = 8;
  1549  000C70  0E08               	movlw	8
  1550  000C72  6E0F               	movwf	motorSIO@state^0,c
  1551  000C74  0C08               	retlw	8
  1552  000C76                     l1252:
  1553                           
  1554                           ;SIO.c: 117:    if (PIR1bits.RCIF) {
  1555  000C76  AA9E               	btfss	158,5,c	;volatile
  1556  000C78  0012               	return	
  1557                           
  1558                           ;SIO.c: 118:     LcPutChar(RCREG);
  1559  000C7A  50AE               	movf	174,w,c	;volatile
  1560  000C7C  EC0F  F00C         	call	_LcPutChar
  1561                           
  1562                           ;SIO.c: 119:                 TiResetTics(timerSIO);
  1563  000C80  5010               	movf	_timerSIO^0,w,c
  1564  000C82  ECE5  F00D         	call	_TiResetTics
  1565  000C86  D7B9               	goto	l4843
  1566  000C88                     l4873:
  1567                           
  1568                           ;SIO.c: 124:    if (LcLliure()) {
  1569  000C88  EC5C  F00E         	call	_LcLliure	;wreg free
  1570  000C8C  A0D8               	btfss	status,0,c
  1571  000C8E  0012               	return	
  1572                           
  1573                           ;SIO.c: 125:     LcGotoXY(0,1);
  1574  000C90  EC4D  F004         	call	PL34	;call to abstracted procedure
  1575  000C94  ECE9  F00C         	call	_LcGotoXY
  1576                           
  1577                           ;SIO.c: 126:     LcNewString("SCORE: ");
  1578  000C98  0ECF               	movlw	low STR_10
  1579  000C9A  EC42  F004         	call	PL6	;call to abstracted procedure
  1580  000C9E  EC56  F00E         	call	_LcNewString	;wreg free
  1581                           
  1582                           ;SIO.c: 127:     state = 9;
  1583  000CA2  0E09               	movlw	9
  1584  000CA4  6E0F               	movwf	motorSIO@state^0,c
  1585  000CA6  0C09               	retlw	9
  1586  000CA8                     l4881:
  1587                           
  1588                           ;SIO.c: 131:    if (LcLliure() && CToAHaAcabat() == 250) {
  1589  000CA8  EC5C  F00E         	call	_LcLliure	;wreg free
  1590  000CAC  A0D8               	btfss	status,0,c
  1591  000CAE  0012               	return	
  1592  000CB0  ECB8  F00E         	call	_CToAHaAcabat	;wreg free
  1593  000CB4  0AFA               	xorlw	250
  1594  000CB6  A4D8               	btfss	status,2,c
  1595  000CB8  0012               	return	
  1596                           
  1597                           ;SIO.c: 132:     LcNewString(CToAobtenir());
  1598  000CBA  ECB6  F00E         	call	_CToAobtenir	;wreg free
  1599  000CBE  D82B               	call	PL46	;call to abstracted procedure
  1600  000CC0  EC56  F00E         	call	_LcNewString	;wreg free
  1601                           
  1602                           ;SIO.c: 133:     usuariActualSIO = -1;
  1603  000CC4  6848               	setf	_usuariActualSIO^0,c
  1604                           
  1605                           ;SIO.c: 134:     state = 0;
  1606  000CC6  6A0F               	clrf	motorSIO@state^0,c
  1607  000CC8  0012               	return	
  1608  000CCA                     l4893:
  1609  000CCA  500F               	movf	motorSIO@state^0,w,c
  1610  000CCC  6E72               	movwf	??_motorSIO^0,c
  1611  000CCE  6A73               	clrf	(??_motorSIO+1)^0,c
  1612                           
  1613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1614                           ; Switch size 1, requested type "space"
  1615                           ; Number of cases is 1, Range of values is 0 to 0
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte            4     3 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  000CD0  5073               	movf	(??_motorSIO+1)^0,w,c
  1621  000CD2  A4D8               	btfss	status,2,c
  1622  000CD4  0012               	return	
  1623                           
  1624                           ; Switch size 1, requested type "space"
  1625                           ; Number of cases is 10, Range of values is 0 to 9
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte           31    16 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630  000CD6  5072               	movf	??_motorSIO^0,w,c
  1631  000CD8  E101 D737          	bz	l4777
  1632  000CDC  0A01               	xorlw	1	; case 1
  1633  000CDE  E101 D742          	bz	l4787
  1634  000CE2  0A03               	xorlw	3	; case 2
  1635  000CE4  E101 D752          	bz	l4803
  1636  000CE8  0A01               	xorlw	1	; case 3
  1637  000CEA  E101 D757          	bz	l4809
  1638  000CEE  0A07               	xorlw	7	; case 4
  1639  000CF0  E101 D77B          	bz	l1244
  1640  000CF4  0A01               	xorlw	1	; case 5
  1641  000CF6  E084               	bz	l4845
  1642  000CF8  0A03               	xorlw	3	; case 6
  1643  000CFA  E0BD               	bz	l1252
  1644  000CFC  0A01               	xorlw	1	; case 7
  1645  000CFE  E0AF               	bz	l4863
  1646  000D00  0A0F               	xorlw	15	; case 8
  1647  000D02  E0C2               	bz	l4873
  1648  000D04  0A01               	xorlw	1	; case 9
  1649  000D06  E0D0               	bz	l4881
  1650  000D08  0012               	return		;funcret
  1651  000D0A                     __end_of_motorSIO:
  1652                           	callstack 0
  1653  000D0A                     PL24:
  1654                           	callstack 24
  1655  000D0A  C009  FFD9         	movff	_userPtr,fsr2l
  1656  000D0E  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1657  000D12  50DF               	movf	indf2,w,c
  1658  000D14  0012               	return	
  1659  000D16                     __end_ofPL24:
  1660                           	callstack 0
  1661  000D16                     PL46:
  1662                           	callstack 24
  1663  000D16  6E72               	movwf	??_motorSIO^0,c
  1664  000D18  C072  F066         	movff	??_motorSIO,LcNewString@new_s
  1665  000D1C  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1666  000D1E  0012               	return	
  1667  000D20                     __end_ofPL46:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _CToAobtenir *****************
  1671 ;; Defined at:
  1672 ;;		line 7 in file "CtoA.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      PTR unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/1
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1
  1686 ;;      Params:         2       0       0
  1687 ;;      Locals:         0       0       0
  1688 ;;      Temps:          0       0       0
  1689 ;;      Totals:         2       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 2
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_motorSIO
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701  001D6C                     __ptext2:
  1702                           	callstack 0
  1703  001D6C                     _CToAobtenir:
  1704                           	callstack 27
  1705                           
  1706                           ;CtoA.c: 8:     return stringScore;
  1707                           
  1708                           ;incstack = 0
  1709  001D6C  0E5B               	movlw	_stringScore& (0+255)
  1710  001D6E  0012               	return		;funcret
  1711  001D70                     __end_of_CToAobtenir:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _CToAHaAcabat *****************
  1715 ;; Defined at:
  1716 ;;		line 10 in file "CtoA.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      unsigned char 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/1
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1
  1730 ;;      Params:         0       0       0
  1731 ;;      Locals:         0       0       0
  1732 ;;      Temps:          0       0       0
  1733 ;;      Totals:         0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 2
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_motorSIO
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text3
  1745  001D70                     __ptext3:
  1746                           	callstack 0
  1747  001D70                     _CToAHaAcabat:
  1748                           	callstack 27
  1749                           
  1750                           ;CtoA.c: 11:     return convertir;
  1751                           
  1752                           ;incstack = 0
  1753  001D70  5045               	movf	_convertir^0,w,c
  1754  001D72  0012               	return		;funcret
  1755  001D74                     __end_of_CToAHaAcabat:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _CToAConverteix *****************
  1759 ;; Defined at:
  1760 ;;		line 14 in file "CtoA.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  numero          1    wreg     unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  numero          1    5[COMRAM] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/1
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1
  1774 ;;      Params:         0       0       0
  1775 ;;      Locals:         1       0       0
  1776 ;;      Temps:          0       0       0
  1777 ;;      Totals:         1       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 3
  1781 ;; This function calls:
  1782 ;;		_CToAReset
  1783 ;; This function is called by:
  1784 ;;		_motorSIO
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text4
  1789  001C58                     __ptext4:
  1790                           	callstack 0
  1791  001C58                     _CToAConverteix:
  1792                           	callstack 26
  1793                           
  1794                           ;incstack = 0
  1795                           ;CToAConverteix@numero stored from wreg
  1796  001C58  6E63               	movwf	CToAConverteix@numero^0,c
  1797                           
  1798                           ;CtoA.c: 15:     CToAReset();
  1799  001C5A  EC62  F00E         	call	_CToAReset	;wreg free
  1800                           
  1801                           ;CtoA.c: 16:     convertir = numero;
  1802  001C5E  C063  F045         	movff	CToAConverteix@numero,_convertir
  1803  001C62  0012               	return		;funcret
  1804  001C64                     __end_of_CToAConverteix:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _CToAReset *****************
  1808 ;; Defined at:
  1809 ;;		line 18 in file "CtoA.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/1
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1
  1823 ;;      Params:         0       0       0
  1824 ;;      Locals:         0       0       0
  1825 ;;      Temps:          0       0       0
  1826 ;;      Totals:         0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 2
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_CToAConverteix
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text5
  1838  001CC4                     __ptext5:
  1839                           	callstack 0
  1840  001CC4                     _CToAReset:
  1841                           	callstack 26
  1842                           
  1843                           ;CtoA.c: 19:     stringScore[0] = '0';
  1844                           
  1845                           ;incstack = 0
  1846  001CC4  0E30               	movlw	48
  1847  001CC6  6E5B               	movwf	_stringScore^0,c
  1848                           
  1849                           ;CtoA.c: 20:     stringScore[1] = '0';
  1850  001CC8  6E5C               	movwf	(_stringScore+1)^0,c
  1851  001CCA  0C30               	retlw	48	;funcret
  1852  001CCC                     __end_of_CToAReset:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function _motorJoc *****************
  1856 ;; Defined at:
  1857 ;;		line 48 in file "Joc.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/1
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1
  1871 ;;      Params:         0       0       0
  1872 ;;      Locals:         0       0       0
  1873 ;;      Temps:          2       0       0
  1874 ;;      Totals:         2       0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 5
  1878 ;; This function calls:
  1879 ;;		_HClearNouSegon
  1880 ;;		_HGetTime
  1881 ;;		_HJugant
  1882 ;;		_HNouSegon
  1883 ;;		_HnoJugant
  1884 ;;		_LcGotoXY
  1885 ;;		_LcLliure
  1886 ;;		_LcNewString
  1887 ;;		_SIONovaDireccio
  1888 ;;		_SIONovaTecla
  1889 ;;		_SIOStartGame
  1890 ;;		_SIOcheckKrebut
  1891 ;;		_SIOendGame
  1892 ;;		_conversorJoystick
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text6
  1899  00133E                     __ptext6:
  1900                           	callstack 0
  1901  00133E                     _motorJoc:
  1902                           	callstack 25
  1903                           
  1904                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1905                           
  1906                           ;incstack = 0
  1907  00133E  D046               	goto	l4769
  1908  001340                     l4717:
  1909                           
  1910                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1911  001340  284A               	incf	_usuariJoc^0,w,c
  1912  001342  B4D8               	btfsc	status,2,c
  1913  001344  0012               	return	
  1914                           
  1915                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1916  001346  504A               	movf	_usuariJoc^0,w,c
  1917  001348  EC66  F00E         	call	_SIOStartGame
  1918                           
  1919                           ;Joc.c: 55:     jugantJoc = 1;
  1920  00134C  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1921                           
  1922                           ;Joc.c: 56:     state = 2;
  1923  00134E  0E02               	movlw	2
  1924  001350  6E11               	movwf	motorJoc@state^0,c
  1925                           
  1926                           ;Joc.c: 58:   break;
  1927                           
  1928                           ;Joc.c: 57:    }
  1929  001352  0C02               	retlw	2
  1930  001354                     l1132:
  1931                           
  1932                           ;Joc.c: 60:    if (!jugantJoc) {
  1933  001354  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1934  001356  D008               	goto	l4733
  1935                           
  1936                           ;Joc.c: 61:     usuariJoc = -1;
  1937  001358  684A               	setf	_usuariJoc^0,c
  1938                           
  1939                           ;Joc.c: 62:     HnoJugant();
  1940  00135A  ECBC  F00E         	call	_HnoJugant	;wreg free
  1941                           
  1942                           ;Joc.c: 63:     SIOendGame();
  1943  00135E  ECBA  F00E         	call	_SIOendGame	;wreg free
  1944                           
  1945                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1946  001362  968A               	bcf	138,3,c	;volatile
  1947                           
  1948                           ;Joc.c: 65:     state = 0;
  1949  001364  6A11               	clrf	motorJoc@state^0,c
  1950                           
  1951                           ;Joc.c: 66:    }
  1952  001366  0012               	return	
  1953  001368                     l4733:
  1954  001368  BE12               	btfsc	_direccioJoc^0,7,c
  1955  00136A  D009               	goto	l4741
  1956                           
  1957                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1958  00136C  5012               	movf	_direccioJoc^0,w,c
  1959  00136E  EC54  F00D         	call	_conversorJoystick
  1960  001372  EC6E  F00E         	call	_SIONovaDireccio
  1961                           
  1962                           ;Joc.c: 69:     direccioJoc = -1;
  1963  001376  6812               	setf	_direccioJoc^0,c
  1964  001378                     l4739:
  1965                           
  1966                           ;Joc.c: 70:     state = 1;
  1967  001378  0E01               	movlw	1
  1968  00137A  6E11               	movwf	motorJoc@state^0,c
  1969                           
  1970                           ;Joc.c: 71:    }
  1971  00137C  0C01               	retlw	1
  1972  00137E                     l4741:
  1973  00137E  EC38  F00E         	call	_HNouSegon	;wreg free
  1974  001382  E312               	bnc	l4753
  1975  001384  EC5C  F00E         	call	_LcLliure	;wreg free
  1976  001388  E30F               	bnc	l4753
  1977                           
  1978                           ;Joc.c: 73:     HClearNouSegon();
  1979  00138A  ECC0  F00E         	call	_HClearNouSegon	;wreg free
  1980                           
  1981                           ;Joc.c: 74:     LcGotoXY(0,1);
  1982  00138E  EC4D  F004         	call	PL34	;call to abstracted procedure
  1983  001392  ECE9  F00C         	call	_LcGotoXY
  1984                           
  1985                           ;Joc.c: 75:     LcNewString(HGetTime());
  1986  001396  ECBE  F00E         	call	_HGetTime	;wreg free
  1987  00139A  6E71               	movwf	??_motorJoc^0,c
  1988  00139C  C071  F066         	movff	??_motorJoc,LcNewString@new_s
  1989  0013A0  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1990  0013A2  EC56  F00E         	call	_LcNewString	;wreg free
  1991  0013A6  D7E8               	goto	l4739
  1992  0013A8                     l4753:
  1993  0013A8  5049               	movf	_novaTeclaJOC^0,w,c
  1994  0013AA  0A80               	xorlw	128
  1995  0013AC  0F7F               	addlw	-129
  1996  0013AE  A0D8               	btfss	status,0,c
  1997  0013B0  0012               	return	
  1998                           
  1999                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  2000  0013B2  5049               	movf	_novaTeclaJOC^0,w,c
  2001  0013B4  0F30               	addlw	48
  2002  0013B6  EC6A  F00E         	call	_SIONovaTecla
  2003                           
  2004                           ;Joc.c: 80:     novaTeclaJOC = -1;
  2005  0013BA  6849               	setf	_novaTeclaJOC^0,c
  2006  0013BC  D7DD               	goto	l4739
  2007  0013BE                     l4761:
  2008                           
  2009                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  2010  0013BE  EC32  F00E         	call	_SIOcheckKrebut	;wreg free
  2011  0013C2  A0D8               	btfss	status,0,c
  2012  0013C4  0012               	return	
  2013                           
  2014                           ;Joc.c: 86:     HJugant();
  2015  0013C6  ECAA  F00E         	call	_HJugant	;wreg free
  2016  0013CA  D7D6               	goto	l4739
  2017  0013CC                     l4769:
  2018  0013CC  5011               	movf	motorJoc@state^0,w,c
  2019  0013CE  6E71               	movwf	??_motorJoc^0,c
  2020  0013D0  6A72               	clrf	(??_motorJoc+1)^0,c
  2021                           
  2022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2023                           ; Switch size 1, requested type "space"
  2024                           ; Number of cases is 1, Range of values is 0 to 0
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; simple_byte            4     3 (average)
  2028                           ;	Chosen strategy is simple_byte
  2029  0013D2  5072               	movf	(??_motorJoc+1)^0,w,c
  2030  0013D4  A4D8               	btfss	status,2,c
  2031  0013D6  0012               	return	
  2032                           
  2033                           ; Switch size 1, requested type "space"
  2034                           ; Number of cases is 3, Range of values is 0 to 2
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte           10     6 (average)
  2038                           ;	Chosen strategy is simple_byte
  2039  0013D8  5071               	movf	??_motorJoc^0,w,c
  2040  0013DA  E0B2               	bz	l4717
  2041  0013DC  0A01               	xorlw	1	; case 1
  2042  0013DE  E0BA               	bz	l1132
  2043  0013E0  0A03               	xorlw	3	; case 2
  2044  0013E2  E0ED               	bz	l4761
  2045  0013E4  0012               	return		;funcret
  2046  0013E6                     __end_of_motorJoc:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _conversorJoystick *****************
  2050 ;; Defined at:
  2051 ;;		line 31 in file "Joc.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  direc           1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  direc           1    5[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      unsigned char 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/1
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1
  2065 ;;      Params:         0       0       0
  2066 ;;      Locals:         1       0       0
  2067 ;;      Temps:          0       0       0
  2068 ;;      Totals:         1       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 2
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_motorJoc
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text7
  2080  001AA8                     __ptext7:
  2081                           	callstack 0
  2082  001AA8                     _conversorJoystick:
  2083                           	callstack 27
  2084                           
  2085                           ;incstack = 0
  2086                           ;conversorJoystick@direc stored from wreg
  2087  001AA8  6E63               	movwf	conversorJoystick@direc^0,c
  2088                           
  2089                           ;Joc.c: 33:     if (direc==2) {
  2090  001AAA  0E02               	movlw	2
  2091  001AAC  1863               	xorwf	conversorJoystick@direc^0,w,c
  2092  001AAE  E101               	bnz	l2277
  2093                           
  2094                           ;Joc.c: 34:         return 'W';
  2095  001AB0  0C57               	retlw	87
  2096  001AB2                     l2277:
  2097                           
  2098                           ;Joc.c: 36:     if (direc==6) {
  2099  001AB2  0E06               	movlw	6
  2100  001AB4  1863               	xorwf	conversorJoystick@direc^0,w,c
  2101  001AB6  E101               	bnz	l2283
  2102                           
  2103                           ;Joc.c: 37:         return 'D';
  2104  001AB8  0C44               	retlw	68
  2105  001ABA                     l2283:
  2106                           
  2107                           ;Joc.c: 39:     if (direc==8) {
  2108  001ABA  0E08               	movlw	8
  2109  001ABC  1863               	xorwf	conversorJoystick@direc^0,w,c
  2110  001ABE  E101               	bnz	l2289
  2111                           
  2112                           ;Joc.c: 40:         return 'S';
  2113  001AC0  0C53               	retlw	83
  2114  001AC2                     l2289:
  2115                           
  2116                           ;Joc.c: 42:     if (direc==4) {
  2117  001AC2  0E04               	movlw	4
  2118  001AC4  1863               	xorwf	conversorJoystick@direc^0,w,c
  2119  001AC6  E101               	bnz	l2295
  2120                           
  2121                           ;Joc.c: 43:         return 'A';
  2122  001AC8  0C41               	retlw	65
  2123  001ACA                     l2295:
  2124                           
  2125                           ;Joc.c: 45:     return 0;
  2126  001ACA  0C00               	retlw	0	;funcret
  2127  001ACC                     __end_of_conversorJoystick:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function _SIOendGame *****************
  2131 ;; Defined at:
  2132 ;;		line 22 in file "SIO.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		None
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/1
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1
  2146 ;;      Params:         0       0       0
  2147 ;;      Locals:         0       0       0
  2148 ;;      Temps:          0       0       0
  2149 ;;      Totals:         0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 2
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_motorJoc
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text8
  2161  001D74                     __ptext8:
  2162                           	callstack 0
  2163  001D74                     _SIOendGame:
  2164                           	callstack 27
  2165                           
  2166                           ;SIO.c: 23:     jugantSIO = 0;
  2167                           
  2168                           ;incstack = 0
  2169  001D74  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2170  001D76  0012               	return		;funcret
  2171  001D78                     __end_of_SIOendGame:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _SIOcheckKrebut *****************
  2175 ;; Defined at:
  2176 ;;		line 25 in file "SIO.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/1
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1
  2190 ;;      Params:         0       0       0
  2191 ;;      Locals:         0       0       0
  2192 ;;      Temps:          0       0       0
  2193 ;;      Totals:         0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_motorJoc
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text9
  2205  001C64                     __ptext9:
  2206                           	callstack 0
  2207  001C64                     _SIOcheckKrebut:
  2208                           	callstack 27
  2209                           
  2210                           ;SIO.c: 26:     return Krebut;
  2211                           
  2212                           ;incstack = 0
  2213  001C64  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2214  001C66  D002               	goto	l2311
  2215  001C68  90D8               	bcf	status,0,c
  2216  001C6A  0012               	return	
  2217  001C6C                     l2311:
  2218  001C6C  80D8               	bsf	status,0,c
  2219  001C6E  0012               	return		;funcret
  2220  001C70                     __end_of_SIOcheckKrebut:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _SIOStartGame *****************
  2224 ;; Defined at:
  2225 ;;		line 32 in file "SIO.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  usuari          1    wreg     unsigned char 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  usuari          1    5[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/1
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1
  2239 ;;      Params:         0       0       0
  2240 ;;      Locals:         1       0       0
  2241 ;;      Temps:          0       0       0
  2242 ;;      Totals:         1       0       0
  2243 ;;Total ram usage:        1 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 2
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_motorJoc
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text10
  2254  001CCC                     __ptext10:
  2255                           	callstack 0
  2256  001CCC                     _SIOStartGame:
  2257                           	callstack 27
  2258                           
  2259                           ;incstack = 0
  2260                           ;SIOStartGame@usuari stored from wreg
  2261  001CCC  6E63               	movwf	SIOStartGame@usuari^0,c
  2262                           
  2263                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2264  001CCE  C063  F048         	movff	SIOStartGame@usuari,_usuariActualSIO
  2265  001CD2  0012               	return		;funcret
  2266  001CD4                     __end_of_SIOStartGame:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _SIONovaTecla *****************
  2270 ;; Defined at:
  2271 ;;		line 39 in file "SIO.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  tecla           1    wreg     char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  tecla           1    5[COMRAM] char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/1
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1
  2285 ;;      Params:         0       0       0
  2286 ;;      Locals:         1       0       0
  2287 ;;      Temps:          0       0       0
  2288 ;;      Totals:         1       0       0
  2289 ;;Total ram usage:        1 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 2
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_motorJoc
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text11
  2300  001CD4                     __ptext11:
  2301                           	callstack 0
  2302  001CD4                     _SIONovaTecla:
  2303                           	callstack 27
  2304                           
  2305                           ;incstack = 0
  2306                           ;SIONovaTecla@tecla stored from wreg
  2307  001CD4  6E63               	movwf	SIONovaTecla@tecla^0,c
  2308                           
  2309                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2310  001CD6  C063  F046         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2311  001CDA  0012               	return		;funcret
  2312  001CDC                     __end_of_SIONovaTecla:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _SIONovaDireccio *****************
  2316 ;; Defined at:
  2317 ;;		line 28 in file "SIO.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  num             1    wreg     unsigned char 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  num             1    5[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/1
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1
  2331 ;;      Params:         0       0       0
  2332 ;;      Locals:         1       0       0
  2333 ;;      Temps:          0       0       0
  2334 ;;      Totals:         1       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 2
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_motorJoc
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text12
  2346  001CDC                     __ptext12:
  2347                           	callstack 0
  2348  001CDC                     _SIONovaDireccio:
  2349                           	callstack 27
  2350                           
  2351                           ;incstack = 0
  2352                           ;SIONovaDireccio@num stored from wreg
  2353  001CDC  6E63               	movwf	SIONovaDireccio@num^0,c
  2354                           
  2355                           ;SIO.c: 29:     direccioSIO = num;
  2356  001CDE  C063  F047         	movff	SIONovaDireccio@num,_direccioSIO
  2357  001CE2  0012               	return		;funcret
  2358  001CE4                     __end_of_SIONovaDireccio:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _HnoJugant *****************
  2362 ;; Defined at:
  2363 ;;		line 34 in file "Hora.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		None
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/1
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1
  2377 ;;      Params:         0       0       0
  2378 ;;      Locals:         0       0       0
  2379 ;;      Temps:          0       0       0
  2380 ;;      Totals:         0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 2
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_motorJoc
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text13
  2392  001D78                     __ptext13:
  2393                           	callstack 0
  2394  001D78                     _HnoJugant:
  2395                           	callstack 27
  2396                           
  2397                           ;Hora.c: 35:     jugant = 0;
  2398                           
  2399                           ;incstack = 0
  2400  001D78  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2401  001D7A  0012               	return		;funcret
  2402  001D7C                     __end_of_HnoJugant:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _HNouSegon *****************
  2406 ;; Defined at:
  2407 ;;		line 22 in file "Hora.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;		None               void
  2414 ;; Registers used:
  2415 ;;		status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/1
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1
  2421 ;;      Params:         0       0       0
  2422 ;;      Locals:         0       0       0
  2423 ;;      Temps:          0       0       0
  2424 ;;      Totals:         0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 2
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_motorJoc
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text14
  2436  001C70                     __ptext14:
  2437                           	callstack 0
  2438  001C70                     _HNouSegon:
  2439                           	callstack 27
  2440                           
  2441                           ;Hora.c: 23:     return nouSegon;
  2442                           
  2443                           ;incstack = 0
  2444  001C70  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2445  001C72  D002               	goto	l2257
  2446  001C74  90D8               	bcf	status,0,c
  2447  001C76  0012               	return	
  2448  001C78                     l2257:
  2449  001C78  80D8               	bsf	status,0,c
  2450  001C7A  0012               	return		;funcret
  2451  001C7C                     __end_of_HNouSegon:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _HJugant *****************
  2455 ;; Defined at:
  2456 ;;		line 37 in file "Hora.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		None
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/1
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1
  2470 ;;      Params:         0       0       0
  2471 ;;      Locals:         0       0       0
  2472 ;;      Temps:          0       0       0
  2473 ;;      Totals:         0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 2
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_motorJoc
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text15
  2485  001D54                     __ptext15:
  2486                           	callstack 0
  2487  001D54                     _HJugant:
  2488                           	callstack 27
  2489                           
  2490                           ;Hora.c: 38:     jugant = 1;
  2491                           
  2492                           ;incstack = 0
  2493  001D54  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2494                           
  2495                           ;Hora.c: 39:     tempsAcabat = 0;
  2496  001D56  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2497  001D58  0012               	return		;funcret
  2498  001D5A                     __end_of_HJugant:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _HGetTime *****************
  2502 ;; Defined at:
  2503 ;;		line 30 in file "Hora.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      PTR unsigned char 
  2510 ;; Registers used:
  2511 ;;		wreg
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/1
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1
  2517 ;;      Params:         2       0       0
  2518 ;;      Locals:         0       0       0
  2519 ;;      Temps:          0       0       0
  2520 ;;      Totals:         2       0       0
  2521 ;;Total ram usage:        2 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 2
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_motorJoc
  2528 ;;		_motorSIO
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text16
  2533  001D7C                     __ptext16:
  2534                           	callstack 0
  2535  001D7C                     _HGetTime:
  2536                           	callstack 27
  2537                           
  2538                           ;Hora.c: 31:     return hora;
  2539                           
  2540                           ;incstack = 0
  2541  001D7C  0E55               	movlw	_hora& (0+255)
  2542  001D7E  0012               	return		;funcret
  2543  001D80                     __end_of_HGetTime:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _HClearNouSegon *****************
  2547 ;; Defined at:
  2548 ;;		line 26 in file "Hora.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		None
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/1
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1
  2562 ;;      Params:         0       0       0
  2563 ;;      Locals:         0       0       0
  2564 ;;      Temps:          0       0       0
  2565 ;;      Totals:         0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 2
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_motorJoc
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text17
  2577  001D80                     __ptext17:
  2578                           	callstack 0
  2579  001D80                     _HClearNouSegon:
  2580                           	callstack 27
  2581                           
  2582                           ;Hora.c: 27:     nouSegon = 0;
  2583                           
  2584                           ;incstack = 0
  2585  001D80  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2586  001D82  0012               	return		;funcret
  2587  001D84                     __end_of_HClearNouSegon:
  2588                           	callstack 0
  2589                           
  2590 ;; *************** function _motorHora *****************
  2591 ;; Defined at:
  2592 ;;		line 45 in file "Hora.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/1
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1
  2606 ;;      Params:         0       0       0
  2607 ;;      Locals:         0       0       0
  2608 ;;      Temps:          2       0       0
  2609 ;;      Totals:         2       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 3
  2613 ;; This function calls:
  2614 ;;		_TiGetTics
  2615 ;;		_TiResetTics
  2616 ;;		_playAltaveu
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text18
  2623  001512                     __ptext18:
  2624                           	callstack 0
  2625  001512                     _motorHora:
  2626                           	callstack 27
  2627                           
  2628                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2629                           
  2630                           ;incstack = 0
  2631  001512  D038               	goto	l4951
  2632  001514                     l4901:
  2633                           
  2634                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2635  001514  5015               	movf	_timerHora^0,w,c
  2636  001516  EC41  F00D         	call	_TiGetTics
  2637  00151A  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2638  00151C  0012               	return	
  2639  00151E  EC9F  F005         	call	PL60	;call to abstracted procedure
  2640  001522  A0D8               	btfss	status,0,c
  2641  001524  0012               	return	
  2642                           
  2643                           ;Hora.c: 51:     TiResetTics(timerHora);
  2644  001526  5015               	movf	_timerHora^0,w,c
  2645  001528  ECE5  F00D         	call	_TiResetTics
  2646                           
  2647                           ;Hora.c: 52:     if(jugant){
  2648  00152C  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2649  00152E  D028               	goto	l4947
  2650                           
  2651                           ;Hora.c: 53:       nouSegon = 1;
  2652  001530  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2653                           
  2654                           ;Hora.c: 55:      hora[4]--;
  2655  001532  0659               	decf	(_hora+4)^0,f,c
  2656                           
  2657                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2658  001534  0E2F               	movlw	47
  2659  001536  1859               	xorwf	(_hora+4)^0,w,c
  2660  001538  E103               	bnz	l4917
  2661                           
  2662                           ;Hora.c: 57:       hora[4] = '9';
  2663  00153A  0E39               	movlw	57
  2664  00153C  6E59               	movwf	(_hora+4)^0,c
  2665                           
  2666                           ;Hora.c: 58:       hora[3]--;
  2667  00153E  0658               	decf	(_hora+3)^0,f,c
  2668  001540                     l4917:
  2669                           
  2670                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2671  001540  0E2F               	movlw	47
  2672  001542  1858               	xorwf	(_hora+3)^0,w,c
  2673  001544  E103               	bnz	l4923
  2674                           
  2675                           ;Hora.c: 62:       hora[3] = '5';
  2676  001546  0E35               	movlw	53
  2677  001548  6E58               	movwf	(_hora+3)^0,c
  2678                           
  2679                           ;Hora.c: 63:       hora[1]--;
  2680  00154A  0656               	decf	(_hora+1)^0,f,c
  2681  00154C                     l4923:
  2682                           
  2683                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2684  00154C  0E2F               	movlw	47
  2685  00154E  1856               	xorwf	(_hora+1)^0,w,c
  2686  001550  E103               	bnz	l4929
  2687                           
  2688                           ;Hora.c: 67:       hora[1] = '9';
  2689  001552  0E39               	movlw	57
  2690  001554  6E56               	movwf	(_hora+1)^0,c
  2691                           
  2692                           ;Hora.c: 68:       hora[0]--;
  2693  001556  0655               	decf	_hora^0,f,c
  2694  001558                     l4929:
  2695                           
  2696                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2697  001558  0E30               	movlw	48
  2698  00155A  1855               	xorwf	_hora^0,w,c
  2699  00155C  E10A               	bnz	l4939
  2700  00155E  0E30               	movlw	48
  2701  001560  1856               	xorwf	(_hora+1)^0,w,c
  2702  001562  E107               	bnz	l4939
  2703  001564  0E30               	movlw	48
  2704  001566  1858               	xorwf	(_hora+3)^0,w,c
  2705  001568  E104               	bnz	l4939
  2706  00156A  0E30               	movlw	48
  2707  00156C  1859               	xorwf	(_hora+4)^0,w,c
  2708  00156E  E101               	bnz	l4939
  2709                           
  2710                           ;Hora.c: 72:       tempsAcabat = 1;
  2711  001570  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2712  001572                     l4939:
  2713                           
  2714                           ;Hora.c: 75:      segons++;
  2715  001572  2A14               	incf	_segons^0,f,c
  2716                           
  2717                           ;Hora.c: 76:      if(segons > 59){
  2718  001574  0E3B               	movlw	59
  2719  001576  6414               	cpfsgt	_segons^0,c
  2720  001578  D003               	goto	l4947
  2721                           
  2722                           ;Hora.c: 77:       playAltaveu();
  2723  00157A  ECC2  F00E         	call	_playAltaveu	;wreg free
  2724                           
  2725                           ;Hora.c: 78:       segons = 0;
  2726  00157E  6A14               	clrf	_segons^0,c
  2727  001580                     l4947:
  2728                           
  2729                           ;Hora.c: 81:     state = 0;
  2730  001580  6A13               	clrf	motorHora@state^0,c
  2731  001582  0012               	return	
  2732  001584                     l4951:
  2733  001584  5013               	movf	motorHora@state^0,w,c
  2734  001586  6E6A               	movwf	??_motorHora^0,c
  2735  001588  6A6B               	clrf	(??_motorHora+1)^0,c
  2736                           
  2737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2738                           ; Switch size 1, requested type "space"
  2739                           ; Number of cases is 1, Range of values is 0 to 0
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ;	Chosen strategy is simple_byte
  2744  00158A  506B               	movf	(??_motorHora+1)^0,w,c
  2745  00158C  A4D8               	btfss	status,2,c
  2746  00158E  0012               	return	
  2747                           
  2748                           ; Switch size 1, requested type "space"
  2749                           ; Number of cases is 1, Range of values is 0 to 0
  2750                           ; switch strategies available:
  2751                           ; Name         Instructions Cycles
  2752                           ; simple_byte            4     3 (average)
  2753                           ;	Chosen strategy is simple_byte
  2754  001590  506A               	movf	??_motorHora^0,w,c
  2755  001592  E0C0               	bz	l4901
  2756  001594  0012               	return		;funcret
  2757  001596                     __end_of_motorHora:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _playAltaveu *****************
  2761 ;; Defined at:
  2762 ;;		line 14 in file "Altaveu.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		None
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/1
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1
  2776 ;;      Params:         0       0       0
  2777 ;;      Locals:         0       0       0
  2778 ;;      Temps:          0       0       0
  2779 ;;      Totals:         0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_motorHora
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text19
  2791  001D84                     __ptext19:
  2792                           	callstack 0
  2793  001D84                     _playAltaveu:
  2794                           	callstack 27
  2795                           
  2796                           ;Altaveu.c: 15:     reproduir = 1;
  2797                           
  2798                           ;incstack = 0
  2799  001D84  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2800  001D86  0012               	return		;funcret
  2801  001D88                     __end_of_playAltaveu:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _motorAltaveu *****************
  2805 ;; Defined at:
  2806 ;;		line 17 in file "Altaveu.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/1
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1
  2820 ;;      Params:         0       0       0
  2821 ;;      Locals:         0       0       0
  2822 ;;      Temps:          3       0       0
  2823 ;;      Totals:         3       0       0
  2824 ;;Total ram usage:        3 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 3
  2827 ;; This function calls:
  2828 ;;		_TiGetTics
  2829 ;;		_TiResetTics
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text20
  2836  00147E                     __ptext20:
  2837                           	callstack 0
  2838  00147E                     _motorAltaveu:
  2839                           	callstack 27
  2840                           
  2841                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2842                           
  2843                           ;incstack = 0
  2844  00147E  D030               	goto	l5465
  2845  001480                     l830:
  2846                           
  2847                           ;Altaveu.c: 22:    if (reproduir) {
  2848  001480  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2849  001482  0012               	return	
  2850                           
  2851                           ;Altaveu.c: 23:     nota = 1;
  2852  001484  0E01               	movlw	1
  2853  001486  6E25               	movwf	_nota^0,c
  2854                           
  2855                           ;Altaveu.c: 24:     copsNota = 0;
  2856  001488  6A23               	clrf	_copsNota^0,c
  2857                           
  2858                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2859  00148A  5024               	movf	_timerAltaveu^0,w,c
  2860  00148C  ECE5  F00D         	call	_TiResetTics
  2861  001490                     l5431:
  2862                           
  2863                           ;Altaveu.c: 26:     state = 1;
  2864  001490  0E01               	movlw	1
  2865  001492  6E22               	movwf	motorAltaveu@state^0,c
  2866  001494  0C01               	retlw	1
  2867  001496                     l5433:
  2868                           
  2869                           ;Altaveu.c: 30:    if (nota > 5) {
  2870  001496  0E05               	movlw	5
  2871  001498  6425               	cpfsgt	_nota^0,c
  2872  00149A  D003               	goto	l5437
  2873                           
  2874                           ;Altaveu.c: 31:     reproduir = 0;
  2875  00149C  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2876                           
  2877                           ;Altaveu.c: 32:     state = 0;
  2878  00149E  6A22               	clrf	motorAltaveu@state^0,c
  2879                           
  2880                           ;Altaveu.c: 33:    }
  2881  0014A0  0012               	return	
  2882  0014A2                     l5437:
  2883  0014A2  0EA8               	movlw	168
  2884  0014A4  1823               	xorwf	_copsNota^0,w,c
  2885  0014A6  E103               	bnz	l5445
  2886                           
  2887                           ;Altaveu.c: 35:     nota++;
  2888  0014A8  2A25               	incf	_nota^0,f,c
  2889                           
  2890                           ;Altaveu.c: 36:     copsNota = 0;
  2891  0014AA  6A23               	clrf	_copsNota^0,c
  2892  0014AC  D7F1               	goto	l5431
  2893  0014AE                     l5445:
  2894  0014AE  5024               	movf	_timerAltaveu^0,w,c
  2895  0014B0  EC41  F00D         	call	_TiGetTics
  2896  0014B4  D822               	call	PL16	;call to abstracted procedure
  2897  0014B6  B0D8               	btfsc	status,0,c
  2898  0014B8  0012               	return	
  2899                           
  2900                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2901  0014BA  808A               	bsf	138,0,c	;volatile
  2902                           
  2903                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2904  0014BC  5024               	movf	_timerAltaveu^0,w,c
  2905  0014BE  ECE5  F00D         	call	_TiResetTics
  2906                           
  2907                           ;Altaveu.c: 42:     state = 2;
  2908  0014C2  0E02               	movlw	2
  2909  0014C4  6E22               	movwf	motorAltaveu@state^0,c
  2910  0014C6  0C02               	retlw	2
  2911  0014C8                     l5453:
  2912                           
  2913                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2914  0014C8  5024               	movf	_timerAltaveu^0,w,c
  2915  0014CA  EC41  F00D         	call	_TiGetTics
  2916  0014CE  D815               	call	PL16	;call to abstracted procedure
  2917  0014D0  B0D8               	btfsc	status,0,c
  2918  0014D2  0012               	return	
  2919                           
  2920                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2921  0014D4  908A               	bcf	138,0,c	;volatile
  2922                           
  2923                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2924  0014D6  5024               	movf	_timerAltaveu^0,w,c
  2925  0014D8  ECE5  F00D         	call	_TiResetTics
  2926                           
  2927                           ;Altaveu.c: 49:     copsNota++;
  2928  0014DC  2A23               	incf	_copsNota^0,f,c
  2929  0014DE  D7D8               	goto	l5431
  2930  0014E0                     l5465:
  2931  0014E0  5022               	movf	motorAltaveu@state^0,w,c
  2932  0014E2  6E6A               	movwf	??_motorAltaveu^0,c
  2933  0014E4  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2934                           
  2935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2936                           ; Switch size 1, requested type "space"
  2937                           ; Number of cases is 1, Range of values is 0 to 0
  2938                           ; switch strategies available:
  2939                           ; Name         Instructions Cycles
  2940                           ; simple_byte            4     3 (average)
  2941                           ;	Chosen strategy is simple_byte
  2942  0014E6  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2943  0014E8  A4D8               	btfss	status,2,c
  2944  0014EA  0012               	return	
  2945                           
  2946                           ; Switch size 1, requested type "space"
  2947                           ; Number of cases is 3, Range of values is 0 to 2
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte           10     6 (average)
  2951                           ;	Chosen strategy is simple_byte
  2952  0014EC  506A               	movf	??_motorAltaveu^0,w,c
  2953  0014EE  E0C8               	bz	l830
  2954  0014F0  0A01               	xorlw	1	; case 1
  2955  0014F2  E0D1               	bz	l5433
  2956  0014F4  0A03               	xorlw	3	; case 2
  2957  0014F6  E0E8               	bz	l5453
  2958  0014F8  0012               	return		;funcret
  2959  0014FA                     __end_of_motorAltaveu:
  2960                           	callstack 0
  2961  0014FA                     PL16:
  2962                           	callstack 27
  2963  0014FA  5025               	movf	_nota^0,w,c
  2964  0014FC  6E6A               	movwf	??_motorAltaveu^0,c
  2965  0014FE  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2966  001500  5063               	movf	?_TiGetTics^0,w,c
  2967  001502  5C6A               	subwf	??_motorAltaveu^0,w,c
  2968  001504  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2969  001506  0A80               	xorlw	128
  2970  001508  6E6C               	movwf	(??_motorAltaveu+2)^0,c
  2971  00150A  5064               	movf	(?_TiGetTics+1)^0,w,c
  2972  00150C  0A80               	xorlw	128
  2973  00150E  586C               	subwfb	(??_motorAltaveu+2)^0,w,c
  2974  001510  0012               	return	
  2975  001512                     __end_ofPL16:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _menu *****************
  2979 ;; Defined at:
  2980 ;;		line 39 in file "Menu.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/1
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1
  2994 ;;      Params:         0       0       0
  2995 ;;      Locals:         0       0       0
  2996 ;;      Temps:          5       0       0
  2997 ;;      Totals:         5       0       0
  2998 ;;Total ram usage:        5 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 6
  3001 ;; This function calls:
  3002 ;;		_GLCDMostraMenu
  3003 ;;		_HActualitzaHora
  3004 ;;		_JJuguem
  3005 ;;		_JendGame
  3006 ;;		_JnovaDireccio
  3007 ;;		_JnovaTecla
  3008 ;;		_LcClear
  3009 ;;		_LcGotoXY
  3010 ;;		_LcLliure
  3011 ;;		_LcNewString
  3012 ;;		_LcPutChar
  3013 ;;		_LcScroll
  3014 ;;		_NoFerMenu
  3015 ;;		_SIOHaAcabatPuntuacions
  3016 ;;		_SMSoff
  3017 ;;		_SMSon
  3018 ;;		_SiFerMenu
  3019 ;;		_TiGetTics
  3020 ;;		_TiResetTics
  3021 ;;		_URegister
  3022 ;;		_UcheckExists
  3023 ;;		_UcheckExistsGetError
  3024 ;;		_UcheckExistsNotFinished
  3025 ;;		_UenviaChar
  3026 ;;		_UenviaPas
  3027 ;;		_UgetNumUsuaris
  3028 ;;		_UgetUserName
  3029 ;;		_UshowUsersCalculat
  3030 ;;		_calculateShowUsers
  3031 ;;		_checkHoraAcabat
  3032 ;;		_getArrayShowUsers
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text21
  3039  0002F6                     __ptext21:
  3040                           	callstack 0
  3041  0002F6                     _menu:
  3042                           	callstack 24
  3043                           
  3044                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  3045                           
  3046                           ;incstack = 0
  3047  0002F6  D265               	goto	l5417
  3048  0002F8                     l4959:
  3049                           
  3050                           ;Menu.c: 44:    LcClear();
  3051  0002F8  EC8A  F00D         	call	_LcClear	;wreg free
  3052                           
  3053                           ;Menu.c: 45:    LcNewString("1.LOGIN");
  3054  0002FC  0EDF               	movlw	low STR_1
  3055  0002FE  DAC2               	call	PL6	;call to abstracted procedure
  3056  000300  EC56  F00E         	call	_LcNewString	;wreg free
  3057                           
  3058                           ;Menu.c: 46:    state = 1;
  3059  000304  0E01               	movlw	1
  3060  000306  6E2C               	movwf	menu@state^0,c
  3061                           
  3062                           ;Menu.c: 47:   break;
  3063  000308  0C01               	retlw	1
  3064  00030A                     l4965:
  3065                           
  3066                           ;Menu.c: 49:    if (LcLliure()) {
  3067  00030A  EC5C  F00E         	call	_LcLliure	;wreg free
  3068  00030E  A0D8               	btfss	status,0,c
  3069  000310  0012               	return	
  3070                           
  3071                           ;Menu.c: 50:     LcGotoXY(0,1);
  3072  000312  DAC3               	call	PL34	;call to abstracted procedure
  3073  000314  ECE9  F00C         	call	_LcGotoXY
  3074                           
  3075                           ;Menu.c: 51:     LcNewString("2.REGISTER");
  3076  000318  0EBB               	movlw	low STR_2
  3077  00031A  DAB4               	call	PL6	;call to abstracted procedure
  3078  00031C  EC56  F00E         	call	_LcNewString	;wreg free
  3079                           
  3080                           ;Menu.c: 52:     NovaTecla = -1;
  3081  000320  6850               	setf	_NovaTecla^0,c
  3082                           
  3083                           ;Menu.c: 53:     state = 2;
  3084  000322  0E02               	movlw	2
  3085  000324  6E2C               	movwf	menu@state^0,c
  3086                           
  3087                           ;Menu.c: 55:   break;
  3088                           
  3089                           ;Menu.c: 54:    }
  3090  000326  0C02               	retlw	2
  3091  000328                     l4975:
  3092                           
  3093                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3094  000328  0450               	decf	_NovaTecla^0,w,c
  3095  00032A  E108               	bnz	l4983
  3096  00032C  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3097  000330  0900               	iorlw	0
  3098  000332  E004               	bz	l4983
  3099                           
  3100                           ;Menu.c: 58:     loginNOTRegister = 1;
  3101  000334  8E78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3102  000336                     l4981:
  3103                           
  3104                           ;Menu.c: 59:     state = 3;
  3105  000336  0E03               	movlw	3
  3106  000338  6E2C               	movwf	menu@state^0,c
  3107                           
  3108                           ;Menu.c: 60:    }
  3109  00033A  0C03               	retlw	3
  3110  00033C                     l4983:
  3111  00033C  0E02               	movlw	2
  3112  00033E  1850               	xorwf	_NovaTecla^0,w,c
  3113  000340  A4D8               	btfss	status,2,c
  3114  000342  0012               	return	
  3115                           
  3116                           ;Menu.c: 62:     loginNOTRegister = 0;
  3117  000344  9E78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3118  000346  D7F7               	goto	l4981
  3119  000348                     l505:
  3120                           
  3121                           ;Menu.c: 67:    NovaTecla = -1;
  3122  000348  6850               	setf	_NovaTecla^0,c
  3123                           
  3124                           ;Menu.c: 68:    novaLletra = -1;
  3125  00034A  684F               	setf	_novaLletra^0,c
  3126                           
  3127                           ;Menu.c: 69:    LcClear();
  3128  00034C  EC8A  F00D         	call	_LcClear	;wreg free
  3129                           
  3130                           ;Menu.c: 70:    LcNewString("USER: ");
  3131  000350  0EEE               	movlw	low STR_3
  3132  000352  DA98               	call	PL6	;call to abstracted procedure
  3133  000354  EC56  F00E         	call	_LcNewString	;wreg free
  3134                           
  3135                           ;Menu.c: 71:    state = 4;
  3136  000358  0E04               	movlw	4
  3137  00035A  6E2C               	movwf	menu@state^0,c
  3138                           
  3139                           ;Menu.c: 72:   break;
  3140  00035C  0C04               	retlw	4
  3141  00035E                     l4995:
  3142                           
  3143                           ;Menu.c: 74:    if (LcLliure()) {
  3144  00035E  EC5C  F00E         	call	_LcLliure	;wreg free
  3145  000362  A0D8               	btfss	status,0,c
  3146  000364  0012               	return	
  3147                           
  3148                           ;Menu.c: 75:     LcGotoXY(0,1);
  3149  000366  DA99               	call	PL34	;call to abstracted procedure
  3150  000368  ECE9  F00C         	call	_LcGotoXY
  3151                           
  3152                           ;Menu.c: 76:     LcNewString("PSWD: ");
  3153  00036C  0EE7               	movlw	low STR_4
  3154  00036E  DA8A               	call	PL6	;call to abstracted procedure
  3155  000370  EC56  F00E         	call	_LcNewString	;wreg free
  3156                           
  3157                           ;Menu.c: 77:     state = 5;
  3158  000374  0E05               	movlw	5
  3159  000376  6E2C               	movwf	menu@state^0,c
  3160  000378  0C05               	retlw	5
  3161  00037A                     l5003:
  3162                           
  3163                           ;Menu.c: 81:    if (LcLliure()) {
  3164  00037A  EC5C  F00E         	call	_LcLliure	;wreg free
  3165  00037E  A0D8               	btfss	status,0,c
  3166  000380  0012               	return	
  3167                           
  3168                           ;Menu.c: 82:     LcGotoXY(6,0);
  3169  000382  0E00               	movlw	0
  3170  000384  6E6B               	movwf	LcGotoXY@Row^0,c
  3171  000386  0E06               	movlw	6
  3172  000388  ECE9  F00C         	call	_LcGotoXY
  3173                           
  3174                           ;Menu.c: 83:     SMSon();
  3175  00038C  ECAD  F00E         	call	_SMSon	;wreg free
  3176                           
  3177                           ;Menu.c: 84:     tmp =0;
  3178  000390  6A31               	clrf	_tmp^0,c
  3179  000392                     l5011:
  3180                           
  3181                           ;Menu.c: 85:     state = 6;
  3182  000392  0E06               	movlw	6
  3183  000394  6E2C               	movwf	menu@state^0,c
  3184  000396  0C06               	retlw	6
  3185  000398                     l5013:
  3186                           
  3187                           ;Menu.c: 89:    if (novaLletra > 31 && NovaTecla != 10) {
  3188  000398  504F               	movf	_novaLletra^0,w,c
  3189  00039A  0A80               	xorlw	128
  3190  00039C  0F60               	addlw	-160
  3191  00039E  E30E               	bnc	l5023
  3192  0003A0  0E0A               	movlw	10
  3193  0003A2  1850               	xorwf	_NovaTecla^0,w,c
  3194  0003A4  E00B               	bz	l5023
  3195                           
  3196                           ;Menu.c: 90:     LcPutChar(novaLletra);
  3197  0003A6  504F               	movf	_novaLletra^0,w,c
  3198  0003A8  EC0F  F00C         	call	_LcPutChar
  3199                           
  3200                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  3201  0003AC  C031  F063         	movff	_tmp,UenviaChar@pos
  3202  0003B0  504F               	movf	_novaLletra^0,w,c
  3203  0003B2  EC24  F00E         	call	_UenviaChar
  3204  0003B6                     l5021:
  3205                           
  3206                           ;Menu.c: 92:     state = 7;
  3207  0003B6  0E07               	movlw	7
  3208  0003B8  6E2C               	movwf	menu@state^0,c
  3209                           
  3210                           ;Menu.c: 93:    }
  3211  0003BA  0C07               	retlw	7
  3212  0003BC                     l5023:
  3213  0003BC  0E0B               	movlw	11
  3214  0003BE  1850               	xorwf	_NovaTecla^0,w,c
  3215  0003C0  E0FA               	bz	l5021
  3216  0003C2  0012               	return	
  3217  0003C4                     l5027:
  3218                           
  3219                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  3220  0003C4  0E07               	movlw	7
  3221  0003C6  1831               	xorwf	_tmp^0,w,c
  3222  0003C8  E005               	bz	l5039
  3223  0003CA  0E0B               	movlw	11
  3224  0003CC  1850               	xorwf	_NovaTecla^0,w,c
  3225  0003CE  E002               	bz	l5039
  3226                           
  3227                           ;Menu.c: 100:     tmp++;
  3228                           
  3229                           ;Menu.c: 101:     NovaTecla = -1;
  3230                           
  3231                           ;Menu.c: 102:     novaLletra = -1;
  3232  0003D0  DA6B               	call	PL74	;call to abstracted procedure
  3233  0003D2  D7DF               	goto	l5011
  3234  0003D4                     l5039:
  3235  0003D4  0E07               	movlw	7
  3236  0003D6  1831               	xorwf	_tmp^0,w,c
  3237  0003D8  E004               	bz	u4450
  3238  0003DA  0E0B               	movlw	11
  3239  0003DC  1850               	xorwf	_NovaTecla^0,w,c
  3240  0003DE  A4D8               	btfss	status,2,c
  3241  0003E0  0012               	return	
  3242  0003E2                     u4450:
  3243                           
  3244                           ;Menu.c: 106:     LcGotoXY(6,1);
  3245  0003E2  0E01               	movlw	1
  3246  0003E4  6E6B               	movwf	LcGotoXY@Row^0,c
  3247  0003E6  0E06               	movlw	6
  3248  0003E8  ECE9  F00C         	call	_LcGotoXY
  3249                           
  3250                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  3251  0003EC  C031  F063         	movff	_tmp,UenviaChar@pos
  3252  0003F0  0E00               	movlw	0
  3253  0003F2  EC24  F00E         	call	_UenviaChar
  3254                           
  3255                           ;Menu.c: 108:     NovaTecla = -1;
  3256                           
  3257                           ;Menu.c: 109:     novaLletra = -1;
  3258                           
  3259                           ;Menu.c: 110:     tmp = 0;
  3260  0003F6  DA54               	call	PL72	;call to abstracted procedure
  3261  0003F8                     l5053:
  3262                           
  3263                           ;Menu.c: 111:     state = 8;
  3264  0003F8  0E08               	movlw	8
  3265  0003FA  6E2C               	movwf	menu@state^0,c
  3266  0003FC  0C08               	retlw	8
  3267  0003FE                     l5055:
  3268                           
  3269                           ;Menu.c: 115:    if (novaLletra > 31 && NovaTecla != 10) {
  3270  0003FE  504F               	movf	_novaLletra^0,w,c
  3271  000400  0A80               	xorlw	128
  3272  000402  0F60               	addlw	-160
  3273  000404  E30E               	bnc	l5065
  3274  000406  0E0A               	movlw	10
  3275  000408  1850               	xorwf	_NovaTecla^0,w,c
  3276  00040A  E00B               	bz	l5065
  3277                           
  3278                           ;Menu.c: 116:     LcPutChar(novaLletra);
  3279  00040C  504F               	movf	_novaLletra^0,w,c
  3280  00040E  EC0F  F00C         	call	_LcPutChar
  3281                           
  3282                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  3283  000412  C031  F063         	movff	_tmp,UenviaPas@pos
  3284  000416  504F               	movf	_novaLletra^0,w,c
  3285  000418  EC1C  F00E         	call	_UenviaPas
  3286  00041C                     l5063:
  3287                           
  3288                           ;Menu.c: 118:     state = 9;
  3289  00041C  0E09               	movlw	9
  3290  00041E  6E2C               	movwf	menu@state^0,c
  3291                           
  3292                           ;Menu.c: 119:    }
  3293  000420  0C09               	retlw	9
  3294  000422                     l5065:
  3295  000422  0E0B               	movlw	11
  3296  000424  1850               	xorwf	_NovaTecla^0,w,c
  3297  000426  E0FA               	bz	l5063
  3298  000428  0012               	return	
  3299  00042A                     l5069:
  3300                           
  3301                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  3302  00042A  0E07               	movlw	7
  3303  00042C  1831               	xorwf	_tmp^0,w,c
  3304  00042E  E005               	bz	l5081
  3305  000430  0E0B               	movlw	11
  3306  000432  1850               	xorwf	_NovaTecla^0,w,c
  3307  000434  E002               	bz	l5081
  3308                           
  3309                           ;Menu.c: 126:     tmp++;
  3310                           
  3311                           ;Menu.c: 127:     NovaTecla = -1;
  3312                           
  3313                           ;Menu.c: 128:     novaLletra = -1;
  3314  000436  DA38               	call	PL74	;call to abstracted procedure
  3315  000438  D7DF               	goto	l5053
  3316  00043A                     l5081:
  3317  00043A  0E07               	movlw	7
  3318  00043C  1831               	xorwf	_tmp^0,w,c
  3319  00043E  E004               	bz	u4520
  3320  000440  0E0B               	movlw	11
  3321  000442  1850               	xorwf	_NovaTecla^0,w,c
  3322  000444  A4D8               	btfss	status,2,c
  3323  000446  0012               	return	
  3324  000448                     u4520:
  3325                           
  3326                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  3327  000448  C031  F063         	movff	_tmp,UenviaPas@pos
  3328  00044C  0E00               	movlw	0
  3329  00044E  EC1C  F00E         	call	_UenviaPas
  3330                           
  3331                           ;Menu.c: 133:     NovaTecla = -1;
  3332                           
  3333                           ;Menu.c: 134:     novaLletra = -1;
  3334                           
  3335                           ;Menu.c: 135:     tmp = 0;
  3336  000452  DA26               	call	PL72	;call to abstracted procedure
  3337                           
  3338                           ;Menu.c: 136:     UcheckExists();
  3339  000454  ECCA  F00E         	call	_UcheckExists	;wreg free
  3340                           
  3341                           ;Menu.c: 137:     SMSoff();
  3342  000458  ECB0  F00E         	call	_SMSoff	;wreg free
  3343                           
  3344                           ;Menu.c: 138:     state = 10;
  3345  00045C  0E0A               	movlw	10
  3346  00045E  6E2C               	movwf	menu@state^0,c
  3347  000460  0C0A               	retlw	10
  3348  000462                     l5099:
  3349                           
  3350                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  3351  000462  EC4A  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3352  000466  B0D8               	btfsc	status,0,c
  3353  000468  0012               	return	
  3354                           
  3355                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  3356  00046A  ECC8  F00E         	call	_UcheckExistsGetError	;wreg free
  3357  00046E  6E2E               	movwf	_indexUsuari^0,c
  3358                           
  3359                           ;Menu.c: 144:     state = 11;
  3360  000470  0E0B               	movlw	11
  3361  000472  6E2C               	movwf	menu@state^0,c
  3362  000474  0C0B               	retlw	11
  3363  000476                     l5105:
  3364                           
  3365                           ;Menu.c: 149:     state = 12;
  3366  000476  0E0C               	movlw	12
  3367  000478  6E2C               	movwf	menu@state^0,c
  3368                           
  3369                           ;Menu.c: 150:    }
  3370  00047A  0C0C               	retlw	12
  3371  00047C                     l5111:
  3372                           
  3373                           ;Menu.c: 153:     state = 0;
  3374  00047C  6A2C               	clrf	menu@state^0,c
  3375                           
  3376                           ;Menu.c: 154:    }
  3377  00047E  0012               	return	
  3378  000480                     l5121:
  3379                           
  3380                           ;Menu.c: 164:    LcClear();
  3381  000480  EC8A  F00D         	call	_LcClear	;wreg free
  3382                           
  3383                           ;Menu.c: 165:    SiFerMenu();
  3384  000484  ECCE  F00E         	call	_SiFerMenu	;wreg free
  3385                           
  3386                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3387  000488  502F               	movf	_menuDalt^0,w,c
  3388  00048A  EC50  F00E         	call	_GLCDMostraMenu
  3389                           
  3390                           ;Menu.c: 167:    novaDireccio = -1;
  3391  00048E  684E               	setf	_novaDireccio^0,c
  3392                           
  3393                           ;Menu.c: 168:    NovaTecla = -1;
  3394  000490  6850               	setf	_NovaTecla^0,c
  3395                           
  3396                           ;Menu.c: 169:    state = 13;
  3397  000492  0E0D               	movlw	13
  3398  000494  6E2C               	movwf	menu@state^0,c
  3399                           
  3400                           ;Menu.c: 170:   break;
  3401  000496  0C0D               	retlw	13
  3402  000498                     l5133:
  3403                           
  3404                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3405  000498  0E08               	movlw	8
  3406  00049A  184E               	xorwf	_novaDireccio^0,w,c
  3407  00049C  E105               	bnz	l5141
  3408                           
  3409                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3410  00049E  0E04               	movlw	4
  3411  0004A0  602F               	cpfslt	_menuDalt^0,c
  3412  0004A2  D7E9               	goto	l5105
  3413  0004A4  2A2F               	incf	_menuDalt^0,f,c
  3414  0004A6  D7E7               	goto	l5105
  3415  0004A8                     l5141:
  3416  0004A8  0E02               	movlw	2
  3417  0004AA  184E               	xorwf	_novaDireccio^0,w,c
  3418  0004AC  E104               	bnz	l5149
  3419                           
  3420                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3421  0004AE  502F               	movf	_menuDalt^0,w,c
  3422  0004B0  E0E2               	bz	l5105
  3423  0004B2  062F               	decf	_menuDalt^0,f,c
  3424  0004B4  D7E0               	goto	l5105
  3425  0004B6                     l5149:
  3426  0004B6  0E0B               	movlw	11
  3427  0004B8  1850               	xorwf	_NovaTecla^0,w,c
  3428  0004BA  E10E               	bnz	l5161
  3429  0004BC  0E03               	movlw	3
  3430  0004BE  182F               	xorwf	_menuDalt^0,w,c
  3431  0004C0  E10B               	bnz	l5161
  3432                           
  3433                           ;Menu.c: 181:     NoFerMenu();
  3434  0004C2  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3435                           
  3436                           ;Menu.c: 182:     LcClear();
  3437  0004C6  EC8A  F00D         	call	_LcClear	;wreg free
  3438                           
  3439                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3440  0004CA  0EC6               	movlw	low STR_5
  3441  0004CC  D9DB               	call	PL6	;call to abstracted procedure
  3442  0004CE  EC56  F00E         	call	_LcNewString	;wreg free
  3443                           
  3444                           ;Menu.c: 184:     state = 14;
  3445  0004D2  0E0E               	movlw	14
  3446  0004D4  6E2C               	movwf	menu@state^0,c
  3447                           
  3448                           ;Menu.c: 185:    }
  3449  0004D6  0C0E               	retlw	14
  3450  0004D8                     l5161:
  3451  0004D8  0E0B               	movlw	11
  3452  0004DA  1850               	xorwf	_NovaTecla^0,w,c
  3453  0004DC  E10E               	bnz	l5175
  3454  0004DE  042F               	decf	_menuDalt^0,w,c
  3455  0004E0  E10C               	bnz	l5175
  3456                           
  3457                           ;Menu.c: 187:     LcClear();
  3458  0004E2  EC8A  F00D         	call	_LcClear	;wreg free
  3459                           
  3460                           ;Menu.c: 188:     NoFerMenu();
  3461  0004E6  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3462                           
  3463                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3464  0004EA  0EA2               	movlw	low STR_6
  3465  0004EC  D9CB               	call	PL6	;call to abstracted procedure
  3466  0004EE  EC56  F00E         	call	_LcNewString	;wreg free
  3467                           
  3468                           ;Menu.c: 190:     NovaTecla = -1;
  3469  0004F2  6850               	setf	_NovaTecla^0,c
  3470                           
  3471                           ;Menu.c: 191:     state = 16;
  3472  0004F4  0E10               	movlw	16
  3473  0004F6  6E2C               	movwf	menu@state^0,c
  3474                           
  3475                           ;Menu.c: 192:    }
  3476  0004F8  0C10               	retlw	16
  3477  0004FA                     l5175:
  3478  0004FA  502F               	movf	_menuDalt^0,w,c
  3479  0004FC  E112               	bnz	l5191
  3480  0004FE  0E0B               	movlw	11
  3481  000500  1850               	xorwf	_NovaTecla^0,w,c
  3482  000502  E10F               	bnz	l5191
  3483                           
  3484                           ;Menu.c: 194:     NoFerMenu();
  3485  000504  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3486                           
  3487                           ;Menu.c: 195:     NovaTecla = -1;
  3488  000508  6850               	setf	_NovaTecla^0,c
  3489                           
  3490                           ;Menu.c: 196:     LcClear();
  3491  00050A  EC8A  F00D         	call	_LcClear	;wreg free
  3492                           
  3493                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3494  00050E  0E92               	movlw	low STR_7
  3495  000510  D9B9               	call	PL6	;call to abstracted procedure
  3496  000512  EC56  F00E         	call	_LcNewString	;wreg free
  3497                           
  3498                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3499  000516  502E               	movf	_indexUsuari^0,w,c
  3500  000518  EC7A  F00E         	call	_JJuguem
  3501  00051C                     l5189:
  3502                           
  3503                           ;Menu.c: 199:     state = 21;
  3504  00051C  0E15               	movlw	21
  3505  00051E  6E2C               	movwf	menu@state^0,c
  3506                           
  3507                           ;Menu.c: 200:    }
  3508  000520  0C15               	retlw	21
  3509  000522                     l5191:
  3510  000522  0E0B               	movlw	11
  3511  000524  1850               	xorwf	_NovaTecla^0,w,c
  3512  000526  A4D8               	btfss	status,2,c
  3513  000528  0012               	return	
  3514  00052A  0E04               	movlw	4
  3515  00052C  182F               	xorwf	_menuDalt^0,w,c
  3516  00052E  A4D8               	btfss	status,2,c
  3517  000530  0012               	return	
  3518                           
  3519                           ;Menu.c: 202:     NoFerMenu();
  3520  000532  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3521                           
  3522                           ;Menu.c: 203:     LcClear();
  3523  000536  EC8A  F00D         	call	_LcClear	;wreg free
  3524                           
  3525                           ;Menu.c: 204:     menuDalt = 0;
  3526  00053A  6A2F               	clrf	_menuDalt^0,c
  3527                           
  3528                           ;Menu.c: 205:     NovaTecla = -1;
  3529  00053C  6850               	setf	_NovaTecla^0,c
  3530                           
  3531                           ;Menu.c: 206:     calculateShowUsers();
  3532  00053E  ECC4  F00E         	call	_calculateShowUsers	;wreg free
  3533                           
  3534                           ;Menu.c: 207:     state = 30;
  3535  000542  0E1E               	movlw	30
  3536  000544  6E2C               	movwf	menu@state^0,c
  3537  000546  0C1E               	retlw	30
  3538  000548                     l5207:
  3539                           
  3540                           ;Menu.c: 211:    if (LcLliure()) {
  3541  000548  EC5C  F00E         	call	_LcLliure	;wreg free
  3542  00054C  A0D8               	btfss	status,0,c
  3543  00054E  0012               	return	
  3544                           
  3545                           ;Menu.c: 212:     LcNewString(UgetUserName(indexUsuari));
  3546  000550  502E               	movf	_indexUsuari^0,w,c
  3547  000552  EC09  F00E         	call	_UgetUserName
  3548  000556  C063  F066         	movff	?_UgetUserName,LcNewString@new_s
  3549  00055A  C064  F067         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3550  00055E  EC56  F00E         	call	_LcNewString	;wreg free
  3551                           
  3552                           ;Menu.c: 213:     TiResetTics(timerMenu);
  3553  000562  5030               	movf	_timerMenu^0,w,c
  3554  000564  ECE5  F00D         	call	_TiResetTics
  3555                           
  3556                           ;Menu.c: 214:     state = 15;
  3557  000568  0E0F               	movlw	15
  3558  00056A  6E2C               	movwf	menu@state^0,c
  3559  00056C  0C0F               	retlw	15
  3560  00056E                     l5215:
  3561                           
  3562                           ;Menu.c: 218:    if (TiGetTics(timerMenu) > 2410) {
  3563  00056E  5030               	movf	_timerMenu^0,w,c
  3564  000570  EC41  F00D         	call	_TiGetTics
  3565  000574  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3566  000576  0012               	return	
  3567  000578  0E6B               	movlw	107
  3568  00057A  5C63               	subwf	?_TiGetTics^0,w,c
  3569  00057C  0E09               	movlw	9
  3570  00057E  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3571  000580  E301 D77C          	bc	l5111
  3572  000584  0012               	return	
  3573  000586                     l5219:
  3574                           
  3575                           ;Menu.c: 223:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3576  000586  EC5C  F00E         	call	_LcLliure	;wreg free
  3577  00058A  E347               	bnc	l5285
  3578  00058C  BE50               	btfsc	_NovaTecla^0,7,c
  3579  00058E  D045               	goto	l5285
  3580  000590  5050               	movf	_NovaTecla^0,w,c
  3581  000592  0A80               	xorlw	128
  3582  000594  0F76               	addlw	-138
  3583  000596  E241               	bc	l5285
  3584                           
  3585                           ;Menu.c: 224:     LcGotoXY(0,1);
  3586  000598  D980               	call	PL34	;call to abstracted procedure
  3587  00059A  ECE9  F00C         	call	_LcGotoXY
  3588                           
  3589                           ;Menu.c: 225:     horaTmp[0] = NovaTecla+48;
  3590  00059E  5050               	movf	_NovaTecla^0,w,c
  3591  0005A0  0F30               	addlw	48
  3592  0005A2  6E3E               	movwf	_horaTmp^0,c
  3593                           
  3594                           ;Menu.c: 226:     LcPutChar(horaTmp[0]);
  3595  0005A4  503E               	movf	_horaTmp^0,w,c
  3596  0005A6  EC0F  F00C         	call	_LcPutChar
  3597                           
  3598                           ;Menu.c: 227:     NovaTecla = -1;
  3599  0005AA  6850               	setf	_NovaTecla^0,c
  3600                           
  3601                           ;Menu.c: 228:     state = 17;
  3602  0005AC  0E11               	movlw	17
  3603  0005AE                     L1:
  3604  0005AE  6E2C               	movwf	menu@state^0,c
  3605                           
  3606                           ;Menu.c: 229:    }
  3607  0005B0  0012               	return	
  3608  0005B2                     L2:
  3609  0005B2  1850               	xorwf	_NovaTecla^0,w,c
  3610  0005B4  E101 D75F          	bz	l5105
  3611  0005B8  0012               	return	
  3612  0005BA                     l5239:
  3613                           
  3614                           ;Menu.c: 235:    if (NovaTecla > -1 && NovaTecla < 10) {
  3615  0005BA  BE50               	btfsc	_NovaTecla^0,7,c
  3616  0005BC  D02E               	goto	l5285
  3617  0005BE  5050               	movf	_NovaTecla^0,w,c
  3618  0005C0  0A80               	xorlw	128
  3619  0005C2  0F76               	addlw	-138
  3620  0005C4  E22A               	bc	l5285
  3621                           
  3622                           ;Menu.c: 236:     horaTmp[1] = NovaTecla+48;
  3623  0005C6  5050               	movf	_NovaTecla^0,w,c
  3624  0005C8  0F30               	addlw	48
  3625  0005CA  6E3F               	movwf	(_horaTmp+1)^0,c
  3626                           
  3627                           ;Menu.c: 237:     LcPutChar(horaTmp[1]);
  3628  0005CC  503F               	movf	(_horaTmp+1)^0,w,c
  3629  0005CE  EC0F  F00C         	call	_LcPutChar
  3630                           
  3631                           ;Menu.c: 238:     NovaTecla = -1;
  3632  0005D2  6850               	setf	_NovaTecla^0,c
  3633                           
  3634                           ;Menu.c: 239:     LcPutChar(':');
  3635  0005D4  0E3A               	movlw	58
  3636  0005D6  EC0F  F00C         	call	_LcPutChar
  3637                           
  3638                           ;Menu.c: 240:     state = 18;
  3639  0005DA  0E12               	movlw	18
  3640  0005DC  D7E8               	goto	L1
  3641  0005DE                     l5257:
  3642                           
  3643                           ;Menu.c: 247:    if (NovaTecla > -1 && NovaTecla < 10) {
  3644  0005DE  BE50               	btfsc	_NovaTecla^0,7,c
  3645  0005E0  D01C               	goto	l5285
  3646  0005E2  5050               	movf	_NovaTecla^0,w,c
  3647  0005E4  0A80               	xorlw	128
  3648  0005E6  0F76               	addlw	-138
  3649  0005E8  E218               	bc	l5285
  3650                           
  3651                           ;Menu.c: 248:     horaTmp[2] = NovaTecla+48;
  3652  0005EA  5050               	movf	_NovaTecla^0,w,c
  3653  0005EC  0F30               	addlw	48
  3654  0005EE  6E40               	movwf	(_horaTmp+2)^0,c
  3655                           
  3656                           ;Menu.c: 249:     LcPutChar(horaTmp[2]);
  3657  0005F0  5040               	movf	(_horaTmp+2)^0,w,c
  3658  0005F2  EC0F  F00C         	call	_LcPutChar
  3659                           
  3660                           ;Menu.c: 250:     NovaTecla = -1;
  3661  0005F6  6850               	setf	_NovaTecla^0,c
  3662                           
  3663                           ;Menu.c: 251:     state = 19;
  3664  0005F8  0E13               	movlw	19
  3665  0005FA  D7D9               	goto	L1
  3666  0005FC                     l5273:
  3667                           
  3668                           ;Menu.c: 258:    if (NovaTecla > -1 && NovaTecla < 10) {
  3669  0005FC  BE50               	btfsc	_NovaTecla^0,7,c
  3670  0005FE  D00D               	goto	l5285
  3671  000600  5050               	movf	_NovaTecla^0,w,c
  3672  000602  0A80               	xorlw	128
  3673  000604  0F76               	addlw	-138
  3674  000606  E209               	bc	l5285
  3675                           
  3676                           ;Menu.c: 259:     horaTmp[3] = NovaTecla+48;
  3677  000608  5050               	movf	_NovaTecla^0,w,c
  3678  00060A  0F30               	addlw	48
  3679  00060C  6E41               	movwf	(_horaTmp+3)^0,c
  3680                           
  3681                           ;Menu.c: 260:     LcPutChar(horaTmp[3]);
  3682  00060E  5041               	movf	(_horaTmp+3)^0,w,c
  3683  000610  EC0F  F00C         	call	_LcPutChar
  3684                           
  3685                           ;Menu.c: 261:     NovaTecla = -1;
  3686  000614  6850               	setf	_NovaTecla^0,c
  3687                           
  3688                           ;Menu.c: 262:     state = 20;
  3689  000616  0E14               	movlw	20
  3690  000618  D7CA               	goto	L1
  3691  00061A                     l5285:
  3692  00061A  0E0A               	movlw	10
  3693  00061C  D7CA               	goto	L2
  3694  00061E                     l5289:
  3695                           
  3696                           ;Menu.c: 269:    if (NovaTecla == 11) {
  3697  00061E  0E0B               	movlw	11
  3698  000620  1850               	xorwf	_NovaTecla^0,w,c
  3699  000622  E1FB               	bnz	l5285
  3700                           
  3701                           ;Menu.c: 270:     HActualitzaHora(horaTmp);
  3702  000624  0E3E               	movlw	low _horaTmp
  3703  000626  6E63               	movwf	HActualitzaHora@nova^0,c
  3704  000628  ECCF  F00C         	call	_HActualitzaHora	;wreg free
  3705                           
  3706                           ;Menu.c: 271:     NovaTecla = -1;
  3707  00062C  6850               	setf	_NovaTecla^0,c
  3708  00062E  D723               	goto	l5105
  3709  000630                     l5301:
  3710                           
  3711                           ;Menu.c: 279:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3712  000630  0E0A               	movlw	10
  3713  000632  1850               	xorwf	_NovaTecla^0,w,c
  3714  000634  E103               	bnz	u4840
  3715  000636  EC5C  F00E         	call	_LcLliure	;wreg free
  3716  00063A  E203               	bc	u4850
  3717  00063C                     u4840:
  3718  00063C  EC3E  F00E         	call	_checkHoraAcabat	;wreg free
  3719  000640  E307               	bnc	l5313
  3720  000642                     u4850:
  3721                           
  3722                           ;Menu.c: 280:     LcClear();
  3723  000642  EC8A  F00D         	call	_LcClear	;wreg free
  3724                           
  3725                           ;Menu.c: 281:     JendGame();
  3726  000646  ECD4  F00E         	call	_JendGame	;wreg free
  3727                           
  3728                           ;Menu.c: 282:     state = 22;
  3729  00064A  0E16               	movlw	22
  3730  00064C  6E2C               	movwf	menu@state^0,c
  3731                           
  3732                           ;Menu.c: 283:    }
  3733  00064E  0C16               	retlw	22
  3734  000650                     l5313:
  3735  000650  5050               	movf	_NovaTecla^0,w,c
  3736  000652  0A80               	xorlw	128
  3737  000654  0F7F               	addlw	-129
  3738  000656  E309               	bnc	l5323
  3739  000658  5050               	movf	_NovaTecla^0,w,c
  3740  00065A  0A80               	xorlw	128
  3741  00065C  0F76               	addlw	-138
  3742  00065E  E205               	bc	l5323
  3743                           
  3744                           ;Menu.c: 285:     JnovaTecla(NovaTecla);
  3745  000660  5050               	movf	_NovaTecla^0,w,c
  3746  000662  EC72  F00E         	call	_JnovaTecla
  3747                           
  3748                           ;Menu.c: 286:     NovaTecla = -1;
  3749  000666  6850               	setf	_NovaTecla^0,c
  3750  000668  D759               	goto	l5189
  3751  00066A                     l5323:
  3752  00066A  BE4E               	btfsc	_novaDireccio^0,7,c
  3753  00066C  0012               	return	
  3754                           
  3755                           ;Menu.c: 290:     JnovaDireccio(novaDireccio);
  3756  00066E  504E               	movf	_novaDireccio^0,w,c
  3757  000670  EC76  F00E         	call	_JnovaDireccio
  3758                           
  3759                           ;Menu.c: 291:     novaDireccio = -1;
  3760  000674  684E               	setf	_novaDireccio^0,c
  3761  000676  D752               	goto	l5189
  3762  000678                     l5331:
  3763                           
  3764                           ;Menu.c: 296:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3765  000678  ECD0  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3766  00067C  0900               	iorlw	0
  3767  00067E  B4D8               	btfsc	status,2,c
  3768  000680  0012               	return	
  3769  000682  0E0B               	movlw	11
  3770  000684  D796               	goto	L2
  3771  000686                     l5337:
  3772                           
  3773                           ;Menu.c: 301:    if (LcLliure()) {
  3774  000686  EC5C  F00E         	call	_LcLliure	;wreg free
  3775  00068A  A0D8               	btfss	status,0,c
  3776  00068C  0012               	return	
  3777                           
  3778                           ;Menu.c: 302:     if (menuDalt == UgetNumUsuaris()){
  3779  00068E  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3780  000692  182F               	xorwf	_menuDalt^0,w,c
  3781  000694  E101               	bnz	l5343
  3782                           
  3783                           ;Menu.c: 303:       menuDalt = 0;
  3784  000696  6A2F               	clrf	_menuDalt^0,c
  3785  000698                     l5343:
  3786                           
  3787                           ;Menu.c: 305:     LcGotoXY(0,0);
  3788  000698  0E00               	movlw	0
  3789  00069A  6E6B               	movwf	LcGotoXY@Row^0,c
  3790  00069C  ECE9  F00C         	call	_LcGotoXY
  3791                           
  3792                           ;Menu.c: 306:     LcNewString(getArrayShowUsers(menuDalt));
  3793  0006A0  502F               	movf	_menuDalt^0,w,c
  3794  0006A2  ECC9  F00D         	call	_getArrayShowUsers
  3795  0006A6  D8F4               	call	PL28	;call to abstracted procedure
  3796  0006A8  EC56  F00E         	call	_LcNewString	;wreg free
  3797                           
  3798                           ;Menu.c: 307:     menuDalt++;
  3799  0006AC  2A2F               	incf	_menuDalt^0,f,c
  3800                           
  3801                           ;Menu.c: 308:     state = 24;
  3802  0006AE  0E18               	movlw	24
  3803  0006B0  6E2C               	movwf	menu@state^0,c
  3804  0006B2  0C18               	retlw	24
  3805  0006B4                     l5349:
  3806                           
  3807                           ;Menu.c: 312:    if (LcLliure()) {
  3808  0006B4  EC5C  F00E         	call	_LcLliure	;wreg free
  3809  0006B8  A0D8               	btfss	status,0,c
  3810  0006BA  0012               	return	
  3811                           
  3812                           ;Menu.c: 313:     if (menuDalt < UgetNumUsuaris()){
  3813  0006BC  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3814  0006C0  602F               	cpfslt	_menuDalt^0,c
  3815  0006C2  D00B               	goto	l600
  3816                           
  3817                           ;Menu.c: 314:       LcGotoXY(0,1);
  3818  0006C4  D8EA               	call	PL34	;call to abstracted procedure
  3819  0006C6  ECE9  F00C         	call	_LcGotoXY
  3820                           
  3821                           ;Menu.c: 315:       LcNewString(getArrayShowUsers(menuDalt));
  3822  0006CA  502F               	movf	_menuDalt^0,w,c
  3823  0006CC  ECC9  F00D         	call	_getArrayShowUsers
  3824  0006D0  D8DF               	call	PL28	;call to abstracted procedure
  3825  0006D2  EC56  F00E         	call	_LcNewString	;wreg free
  3826                           
  3827                           ;Menu.c: 316:       menuDalt++;
  3828  0006D6  2A2F               	incf	_menuDalt^0,f,c
  3829                           
  3830                           ;Menu.c: 317:     } else {
  3831  0006D8  D001               	goto	l5357
  3832  0006DA                     l600:
  3833                           
  3834                           ;Menu.c: 318:       menuDalt = 0;
  3835  0006DA  6A2F               	clrf	_menuDalt^0,c
  3836  0006DC                     l5357:
  3837                           
  3838                           ;Menu.c: 320:     state = 25;
  3839  0006DC  0E19               	movlw	25
  3840  0006DE  6E2C               	movwf	menu@state^0,c
  3841  0006E0  0C19               	retlw	25
  3842  0006E2                     l5359:
  3843                           
  3844                           ;Menu.c: 324:    if (LcLliure()) {
  3845  0006E2  EC5C  F00E         	call	_LcLliure	;wreg free
  3846  0006E6  A0D8               	btfss	status,0,c
  3847  0006E8  0012               	return	
  3848                           
  3849                           ;Menu.c: 325:     if (menuDalt == UgetNumUsuaris()){
  3850  0006EA  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3851  0006EE  182F               	xorwf	_menuDalt^0,w,c
  3852  0006F0  E101               	bnz	l5365
  3853                           
  3854                           ;Menu.c: 326:       menuDalt = 0;
  3855  0006F2  6A2F               	clrf	_menuDalt^0,c
  3856  0006F4                     l5365:
  3857                           
  3858                           ;Menu.c: 328:     LcGotoXY(16,0);
  3859  0006F4  0E00               	movlw	0
  3860  0006F6  6E6B               	movwf	LcGotoXY@Row^0,c
  3861  0006F8  0E10               	movlw	16
  3862  0006FA  ECE9  F00C         	call	_LcGotoXY
  3863                           
  3864                           ;Menu.c: 329:     LcNewString(getArrayShowUsers(menuDalt));
  3865  0006FE  502F               	movf	_menuDalt^0,w,c
  3866  000700  ECC9  F00D         	call	_getArrayShowUsers
  3867  000704  D8C5               	call	PL28	;call to abstracted procedure
  3868  000706  EC56  F00E         	call	_LcNewString	;wreg free
  3869                           
  3870                           ;Menu.c: 330:     state = 26;
  3871  00070A  0E1A               	movlw	26
  3872  00070C  6E2C               	movwf	menu@state^0,c
  3873  00070E  0C1A               	retlw	26
  3874  000710                     l5369:
  3875                           
  3876                           ;Menu.c: 334:    if (LcLliure()) {
  3877  000710  EC5C  F00E         	call	_LcLliure	;wreg free
  3878  000714  A0D8               	btfss	status,0,c
  3879  000716  0012               	return	
  3880                           
  3881                           ;Menu.c: 335:     if (menuDalt+1 < UgetNumUsuaris()){
  3882  000718  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3883  00071C  6E72               	movwf	??_menu^0,c
  3884  00071E  6A73               	clrf	(??_menu+1)^0,c
  3885  000720  502F               	movf	_menuDalt^0,w,c
  3886  000722  6E74               	movwf	(??_menu+2)^0,c
  3887  000724  6A75               	clrf	(??_menu+3)^0,c
  3888  000726  2A74               	incf	(??_menu+2)^0,f,c
  3889  000728  0E00               	movlw	0
  3890  00072A  2275               	addwfc	(??_menu+3)^0,f,c
  3891  00072C  5072               	movf	??_menu^0,w,c
  3892  00072E  5C74               	subwf	(??_menu+2)^0,w,c
  3893  000730  5075               	movf	(??_menu+3)^0,w,c
  3894  000732  0A80               	xorlw	128
  3895  000734  6E76               	movwf	(??_menu+4)^0,c
  3896  000736  5073               	movf	(??_menu+1)^0,w,c
  3897  000738  0A80               	xorlw	128
  3898  00073A  5876               	subwfb	(??_menu+4)^0,w,c
  3899  00073C  E20B               	bc	l5375
  3900                           
  3901                           ;Menu.c: 336:       LcGotoXY(16,1);
  3902  00073E  0E01               	movlw	1
  3903  000740  6E6B               	movwf	LcGotoXY@Row^0,c
  3904  000742  0E10               	movlw	16
  3905  000744  ECE9  F00C         	call	_LcGotoXY
  3906                           
  3907                           ;Menu.c: 337:       LcNewString(getArrayShowUsers(menuDalt+1));
  3908  000748  282F               	incf	_menuDalt^0,w,c
  3909  00074A  ECC9  F00D         	call	_getArrayShowUsers
  3910  00074E  D8A0               	call	PL28	;call to abstracted procedure
  3911  000750  EC56  F00E         	call	_LcNewString	;wreg free
  3912  000754                     l5375:
  3913                           
  3914                           ;Menu.c: 339:     state = 27;
  3915  000754  0E1B               	movlw	27
  3916  000756  6E2C               	movwf	menu@state^0,c
  3917  000758  0C1B               	retlw	27
  3918  00075A                     l5377:
  3919                           
  3920                           ;Menu.c: 343:    if (TiGetTics(timerMenu) > 400) {
  3921  00075A  5030               	movf	_timerMenu^0,w,c
  3922  00075C  EC41  F00D         	call	_TiGetTics
  3923  000760  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3924  000762  D008               	goto	l5381
  3925  000764  0E91               	movlw	145
  3926  000766  5C63               	subwf	?_TiGetTics^0,w,c
  3927  000768  0E01               	movlw	1
  3928  00076A  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3929  00076C  E303               	bnc	l5381
  3930                           
  3931                           ;Menu.c: 344:     state = 29;
  3932  00076E  0E1D               	movlw	29
  3933  000770  6E2C               	movwf	menu@state^0,c
  3934                           
  3935                           ;Menu.c: 345:    }
  3936  000772  0C1D               	retlw	29
  3937  000774                     l5381:
  3938  000774  0E0B               	movlw	11
  3939  000776  1850               	xorwf	_NovaTecla^0,w,c
  3940  000778  A4D8               	btfss	status,2,c
  3941  00077A  0012               	return	
  3942                           
  3943                           ;Menu.c: 347:     menuDalt = 0;
  3944  00077C  6A2F               	clrf	_menuDalt^0,c
  3945  00077E  D67B               	goto	l5105
  3946  000780                     l5387:
  3947                           
  3948                           ;Menu.c: 352:    if (pos > 15) {
  3949  000780  0E0F               	movlw	15
  3950  000782  642D               	cpfsgt	_pos^0,c
  3951  000784  D005               	goto	l5393
  3952                           
  3953                           ;Menu.c: 353:     LcClear();
  3954  000786  EC8A  F00D         	call	_LcClear	;wreg free
  3955  00078A                     l5391:
  3956                           
  3957                           ;Menu.c: 354:     state = 23;
  3958  00078A  0E17               	movlw	23
  3959  00078C  6E2C               	movwf	menu@state^0,c
  3960                           
  3961                           ;Menu.c: 355:    }
  3962  00078E  0C17               	retlw	23
  3963  000790                     l5393:
  3964  000790  0E10               	movlw	16
  3965  000792  602D               	cpfslt	_pos^0,c
  3966  000794  0C10               	retlw	16
  3967                           
  3968                           ;Menu.c: 357:     TiResetTics(timerMenu);
  3969  000796  5030               	movf	_timerMenu^0,w,c
  3970  000798  ECE5  F00D         	call	_TiResetTics
  3971                           
  3972                           ;Menu.c: 358:     LcScroll();
  3973  00079C  ECB3  F00E         	call	_LcScroll	;wreg free
  3974                           
  3975                           ;Menu.c: 359:     pos++;
  3976  0007A0  2A2D               	incf	_pos^0,f,c
  3977  0007A2                     l5401:
  3978                           
  3979                           ;Menu.c: 360:     state = 28;
  3980  0007A2  0E1C               	movlw	28
  3981  0007A4  6E2C               	movwf	menu@state^0,c
  3982  0007A6  0C1C               	retlw	28
  3983  0007A8                     l5403:
  3984                           
  3985                           ;Menu.c: 364:    if (LcLliure()) {
  3986  0007A8  EC5C  F00E         	call	_LcLliure	;wreg free
  3987  0007AC  A0D8               	btfss	status,0,c
  3988  0007AE  0012               	return	
  3989                           
  3990                           ;Menu.c: 365:     TiResetTics(timerMenu);
  3991  0007B0  5030               	movf	_timerMenu^0,w,c
  3992  0007B2  ECE5  F00D         	call	_TiResetTics
  3993                           
  3994                           ;Menu.c: 366:     pos = 0;
  3995  0007B6  6A2D               	clrf	_pos^0,c
  3996  0007B8  D7F4               	goto	l5401
  3997  0007BA                     l5411:
  3998                           
  3999                           ;Menu.c: 371:    if (UshowUsersCalculat()) {
  4000  0007BA  EC44  F00E         	call	_UshowUsersCalculat	;wreg free
  4001  0007BE  E2E5               	bc	l5391
  4002  0007C0  0012               	return	
  4003  0007C2                     l5417:
  4004  0007C2  502C               	movf	menu@state^0,w,c
  4005  0007C4  6E72               	movwf	??_menu^0,c
  4006  0007C6  6A73               	clrf	(??_menu+1)^0,c
  4007                           
  4008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4009                           ; Switch size 1, requested type "space"
  4010                           ; Number of cases is 1, Range of values is 0 to 0
  4011                           ; switch strategies available:
  4012                           ; Name         Instructions Cycles
  4013                           ; simple_byte            4     3 (average)
  4014                           ;	Chosen strategy is simple_byte
  4015  0007C8  5073               	movf	(??_menu+1)^0,w,c
  4016  0007CA  A4D8               	btfss	status,2,c
  4017  0007CC  0012               	return	
  4018                           
  4019                           ; Switch size 1, requested type "space"
  4020                           ; Number of cases is 31, Range of values is 0 to 30
  4021                           ; switch strategies available:
  4022                           ; Name         Instructions Cycles
  4023                           ; simple_byte           94    48 (average)
  4024                           ;	Chosen strategy is simple_byte
  4025  0007CE  5072               	movf	??_menu^0,w,c
  4026  0007D0  E101 D592          	bz	l4959
  4027  0007D4  0A01               	xorlw	1	; case 1
  4028  0007D6  E101 D598          	bz	l4965
  4029  0007DA  0A03               	xorlw	3	; case 2
  4030  0007DC  E101 D5A4          	bz	l4975
  4031  0007E0  0A01               	xorlw	1	; case 3
  4032  0007E2  E101 D5B1          	bz	l505
  4033  0007E6  0A07               	xorlw	7	; case 4
  4034  0007E8  E101 D5B9          	bz	l4995
  4035  0007EC  0A01               	xorlw	1	; case 5
  4036  0007EE  E101 D5C4          	bz	l5003
  4037  0007F2  0A03               	xorlw	3	; case 6
  4038  0007F4  E101 D5D0          	bz	l5013
  4039  0007F8  0A01               	xorlw	1	; case 7
  4040  0007FA  E101 D5E3          	bz	l5027
  4041  0007FE  0A0F               	xorlw	15	; case 8
  4042  000800  E101 D5FD          	bz	l5055
  4043  000804  0A01               	xorlw	1	; case 9
  4044  000806  E101 D610          	bz	l5069
  4045  00080A  0A03               	xorlw	3	; case 10
  4046  00080C  E101 D629          	bz	l5099
  4047  000810  0A01               	xorlw	1	; case 11
  4048  000812  E101 D630          	bz	l5105
  4049  000816  0A07               	xorlw	7	; case 12
  4050  000818  E101 D632          	bz	l5121
  4051  00081C  0A01               	xorlw	1	; case 13
  4052  00081E  E101 D63B          	bz	l5133
  4053  000822  0A03               	xorlw	3	; case 14
  4054  000824  E101 D690          	bz	l5207
  4055  000828  0A01               	xorlw	1	; case 15
  4056  00082A  E101 D6A0          	bz	l5215
  4057  00082E  0A1F               	xorlw	31	; case 16
  4058  000830  E101 D6A9          	bz	l5219
  4059  000834  0A01               	xorlw	1	; case 17
  4060  000836  E101 D6C0          	bz	l5239
  4061  00083A  0A03               	xorlw	3	; case 18
  4062  00083C  E101 D6CF          	bz	l5257
  4063  000840  0A01               	xorlw	1	; case 19
  4064  000842  E101 D6DB          	bz	l5273
  4065  000846  0A07               	xorlw	7	; case 20
  4066  000848  E101 D6E9          	bz	l5289
  4067  00084C  0A01               	xorlw	1	; case 21
  4068  00084E  E101 D6EF          	bz	l5301
  4069  000852  0A03               	xorlw	3	; case 22
  4070  000854  E101 D710          	bz	l5331
  4071  000858  0A01               	xorlw	1	; case 23
  4072  00085A  E101 D714          	bz	l5337
  4073  00085E  0A0F               	xorlw	15	; case 24
  4074  000860  E101 D728          	bz	l5349
  4075  000864  0A01               	xorlw	1	; case 25
  4076  000866  E101 D73C          	bz	l5359
  4077  00086A  0A03               	xorlw	3	; case 26
  4078  00086C  E101 D750          	bz	l5369
  4079  000870  0A01               	xorlw	1	; case 27
  4080  000872  E09A               	bz	l5403
  4081  000874  0A07               	xorlw	7	; case 28
  4082  000876  E101 D770          	bz	l5377
  4083  00087A  0A01               	xorlw	1	; case 29
  4084  00087C  E081               	bz	l5387
  4085  00087E  0A03               	xorlw	3	; case 30
  4086  000880  E09C               	bz	l5411
  4087  000882  0012               	return		;funcret
  4088  000884                     __end_of_menu:
  4089                           	callstack 0
  4090  000884                     PL6:
  4091                           	callstack 24
  4092  000884  6E66               	movwf	LcNewString@new_s^0,c
  4093  000886  5066               	movf	LcNewString@new_s^0,w,c
  4094  000888  A4D8               	btfss	status,2,c
  4095  00088A  0E02               	movlw	high __smallconst
  4096  00088C  6E67               	movwf	(LcNewString@new_s+1)^0,c
  4097  00088E  0012               	return	
  4098  000890                     __end_ofPL6:
  4099                           	callstack 0
  4100  000890                     PL28:
  4101                           	callstack 24
  4102  000890  C063  F066         	movff	?_getArrayShowUsers,LcNewString@new_s
  4103  000894  C064  F067         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4104  000898  0012               	return	
  4105  00089A                     __end_ofPL28:
  4106                           	callstack 0
  4107  00089A                     PL34:
  4108                           	callstack 24
  4109  00089A  0E01               	movlw	1
  4110  00089C  6E6B               	movwf	LcGotoXY@Row^0,c
  4111  00089E  0C00               	retlw	0
  4112  0008A0                     __end_ofPL34:
  4113                           	callstack 0
  4114  0008A0                     PL72:
  4115                           	callstack 24
  4116  0008A0  6850               	setf	_NovaTecla^0,c
  4117  0008A2  684F               	setf	_novaLletra^0,c
  4118  0008A4  6A31               	clrf	_tmp^0,c
  4119  0008A6  0012               	return	
  4120  0008A8                     __end_ofPL72:
  4121                           	callstack 0
  4122  0008A8                     PL74:
  4123                           	callstack 24
  4124  0008A8  2A31               	incf	_tmp^0,f,c
  4125  0008AA  6850               	setf	_NovaTecla^0,c
  4126  0008AC  684F               	setf	_novaLletra^0,c
  4127  0008AE  0012               	return	
  4128  0008B0                     __end_ofPL74:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function _getArrayShowUsers *****************
  4132 ;; Defined at:
  4133 ;;		line 80 in file "Usuaris.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  quin            1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  quin            1    7[COMRAM] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2    5[COMRAM] PTR unsigned char 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/1
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1
  4147 ;;      Params:         2       0       0
  4148 ;;      Locals:         1       0       0
  4149 ;;      Temps:          0       0       0
  4150 ;;      Totals:         3       0       0
  4151 ;;Total ram usage:        3 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_menu
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text22
  4162  001B92                     __ptext22:
  4163                           	callstack 0
  4164  001B92                     _getArrayShowUsers:
  4165                           	callstack 27
  4166                           
  4167                           ;incstack = 0
  4168                           ;getArrayShowUsers@quin stored from wreg
  4169  001B92  6E65               	movwf	getArrayShowUsers@quin^0,c
  4170                           
  4171                           ;Usuaris.c: 82:     return usuaris[arrayShowUsers[quin]].username;
  4172  001B94  5065               	movf	getArrayShowUsers@quin^0,w,c
  4173  001B96  0F01               	addlw	low _arrayShowUsers
  4174  001B98  6ED9               	movwf	fsr2l,c
  4175  001B9A  6ADA               	clrf	fsr2h,c
  4176  001B9C  50DF               	movf	indf2,w,c
  4177  001B9E  0D17               	mullw	23
  4178  001BA0  0E00               	movlw	low _usuaris
  4179  001BA2  24F3               	addwf	243,w,c
  4180  001BA4  6E63               	movwf	?_getArrayShowUsers^0,c
  4181  001BA6  0E01               	movlw	high _usuaris
  4182  001BA8  20F4               	addwfc	prodh,w,c
  4183  001BAA  6E64               	movwf	(?_getArrayShowUsers+1)^0,c
  4184  001BAC  0012               	return		;funcret
  4185  001BAE                     __end_of_getArrayShowUsers:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _checkHoraAcabat *****************
  4189 ;; Defined at:
  4190 ;;		line 41 in file "Hora.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;		None               void
  4197 ;; Registers used:
  4198 ;;		status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/1
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1
  4204 ;;      Params:         0       0       0
  4205 ;;      Locals:         0       0       0
  4206 ;;      Temps:          0       0       0
  4207 ;;      Totals:         0       0       0
  4208 ;;Total ram usage:        0 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 2
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_menu
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text23
  4219  001C7C                     __ptext23:
  4220                           	callstack 0
  4221  001C7C                     _checkHoraAcabat:
  4222                           	callstack 27
  4223                           
  4224                           ;Hora.c: 42:     return tempsAcabat;
  4225                           
  4226                           ;incstack = 0
  4227  001C7C  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4228  001C7E  D002               	goto	l2193
  4229  001C80  90D8               	bcf	status,0,c
  4230  001C82  0012               	return	
  4231  001C84                     l2193:
  4232  001C84  80D8               	bsf	status,0,c
  4233  001C86  0012               	return		;funcret
  4234  001C88                     __end_of_checkHoraAcabat:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _calculateShowUsers *****************
  4238 ;; Defined at:
  4239 ;;		line 180 in file "Usuaris.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		None
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/1
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1
  4253 ;;      Params:         0       0       0
  4254 ;;      Locals:         0       0       0
  4255 ;;      Temps:          0       0       0
  4256 ;;      Totals:         0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 2
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_menu
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text24
  4268  001D88                     __ptext24:
  4269                           	callstack 0
  4270  001D88                     _calculateShowUsers:
  4271                           	callstack 27
  4272                           
  4273                           ;Usuaris.c: 181:     do_showUsers = 1;
  4274                           
  4275                           ;incstack = 0
  4276  001D88  8878               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4277  001D8A  0012               	return		;funcret
  4278  001D8C                     __end_of_calculateShowUsers:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _UshowUsersCalculat *****************
  4282 ;; Defined at:
  4283 ;;		line 183 in file "Usuaris.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;		None               void
  4290 ;; Registers used:
  4291 ;;		status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/1
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1
  4297 ;;      Params:         0       0       0
  4298 ;;      Locals:         0       0       0
  4299 ;;      Temps:          0       0       0
  4300 ;;      Totals:         0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 2
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_menu
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text25
  4312  001C88                     __ptext25:
  4313                           	callstack 0
  4314  001C88                     _UshowUsersCalculat:
  4315                           	callstack 27
  4316                           
  4317                           ;Usuaris.c: 184:     return !do_showUsers;
  4318                           
  4319                           ;incstack = 0
  4320  001C88  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4321  001C8A  D002               	goto	l2215
  4322  001C8C  90D8               	bcf	status,0,c
  4323  001C8E  0012               	return	
  4324  001C90                     l2215:
  4325  001C90  80D8               	bsf	status,0,c
  4326  001C92  0012               	return		;funcret
  4327  001C94                     __end_of_UshowUsersCalculat:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _UgetUserName *****************
  4331 ;; Defined at:
  4332 ;;		line 76 in file "Usuaris.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  quin            1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  quin            1    7[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    5[COMRAM] PTR unsigned char 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, prodl, prodh
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/1
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1
  4346 ;;      Params:         2       0       0
  4347 ;;      Locals:         1       0       0
  4348 ;;      Temps:          0       0       0
  4349 ;;      Totals:         3       0       0
  4350 ;;Total ram usage:        3 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 2
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_menu
  4357 ;;		_motorSIO
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text26
  4362  001C12                     __ptext26:
  4363                           	callstack 0
  4364  001C12                     _UgetUserName:
  4365                           	callstack 27
  4366                           
  4367                           ;incstack = 0
  4368                           ;UgetUserName@quin stored from wreg
  4369  001C12  6E65               	movwf	UgetUserName@quin^0,c
  4370                           
  4371                           ;Usuaris.c: 77:     return usuaris[quin].username;
  4372  001C14  5065               	movf	UgetUserName@quin^0,w,c
  4373  001C16  0D17               	mullw	23
  4374  001C18  0E00               	movlw	low _usuaris
  4375  001C1A  24F3               	addwf	243,w,c
  4376  001C1C  6E63               	movwf	?_UgetUserName^0,c
  4377  001C1E  0E01               	movlw	high _usuaris
  4378  001C20  20F4               	addwfc	prodh,w,c
  4379  001C22  6E64               	movwf	(?_UgetUserName+1)^0,c
  4380  001C24  0012               	return		;funcret
  4381  001C26                     __end_of_UgetUserName:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _UgetNumUsuaris *****************
  4385 ;; Defined at:
  4386 ;;		line 52 in file "Usuaris.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      unsigned char 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/1
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1
  4400 ;;      Params:         0       0       0
  4401 ;;      Locals:         0       0       0
  4402 ;;      Temps:          0       0       0
  4403 ;;      Totals:         0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 2
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_menu
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text27
  4415  001D8C                     __ptext27:
  4416                           	callstack 0
  4417  001D8C                     _UgetNumUsuaris:
  4418                           	callstack 27
  4419                           
  4420                           ;Usuaris.c: 53:     return numUsuaris;
  4421                           
  4422                           ;incstack = 0
  4423  001D8C  502B               	movf	_numUsuaris^0,w,c
  4424  001D8E  0012               	return		;funcret
  4425  001D90                     __end_of_UgetNumUsuaris:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _UenviaPas *****************
  4429 ;; Defined at:
  4430 ;;		line 68 in file "Usuaris.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  c               1    wreg     unsigned char 
  4433 ;;  pos             1    5[COMRAM] unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  c               1    6[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/1
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1
  4445 ;;      Params:         1       0       0
  4446 ;;      Locals:         1       0       0
  4447 ;;      Temps:          0       0       0
  4448 ;;      Totals:         2       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 2
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_menu
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text28
  4460  001C38                     __ptext28:
  4461                           	callstack 0
  4462  001C38                     _UenviaPas:
  4463                           	callstack 27
  4464                           
  4465                           ;incstack = 0
  4466                           ;UenviaPas@c stored from wreg
  4467  001C38  6E64               	movwf	UenviaPas@c^0,c
  4468                           
  4469                           ;Usuaris.c: 69:     tmpPassword[pos] = c;
  4470  001C3A  5063               	movf	UenviaPas@pos^0,w,c
  4471  001C3C  0F98               	addlw	low _tmpPassword
  4472  001C3E  6ED9               	movwf	fsr2l,c
  4473  001C40  6ADA               	clrf	fsr2h,c
  4474  001C42  C064  FFDF         	movff	UenviaPas@c,indf2
  4475  001C46  0012               	return		;funcret
  4476  001C48                     __end_of_UenviaPas:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _UenviaChar *****************
  4480 ;; Defined at:
  4481 ;;		line 65 in file "Usuaris.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  c               1    wreg     unsigned char 
  4484 ;;  pos             1    5[COMRAM] unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  c               1    6[COMRAM] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/1
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1
  4496 ;;      Params:         1       0       0
  4497 ;;      Locals:         1       0       0
  4498 ;;      Temps:          0       0       0
  4499 ;;      Totals:         2       0       0
  4500 ;;Total ram usage:        2 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 2
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_menu
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text29
  4511  001C48                     __ptext29:
  4512                           	callstack 0
  4513  001C48                     _UenviaChar:
  4514                           	callstack 27
  4515                           
  4516                           ;incstack = 0
  4517                           ;UenviaChar@c stored from wreg
  4518  001C48  6E64               	movwf	UenviaChar@c^0,c
  4519                           
  4520                           ;Usuaris.c: 66:     tmpUsername[pos] = c;
  4521  001C4A  5063               	movf	UenviaChar@pos^0,w,c
  4522  001C4C  0FA1               	addlw	low _tmpUsername
  4523  001C4E  6ED9               	movwf	fsr2l,c
  4524  001C50  6ADA               	clrf	fsr2h,c
  4525  001C52  C064  FFDF         	movff	UenviaChar@c,indf2
  4526  001C56  0012               	return		;funcret
  4527  001C58                     __end_of_UenviaChar:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _UcheckExistsNotFinished *****************
  4531 ;; Defined at:
  4532 ;;		line 59 in file "Usuaris.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;		None               void
  4539 ;; Registers used:
  4540 ;;		status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/1
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1
  4546 ;;      Params:         0       0       0
  4547 ;;      Locals:         0       0       0
  4548 ;;      Temps:          0       0       0
  4549 ;;      Totals:         0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 2
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_menu
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text30
  4561  001C94                     __ptext30:
  4562                           	callstack 0
  4563  001C94                     _UcheckExistsNotFinished:
  4564                           	callstack 27
  4565                           
  4566                           ;Usuaris.c: 60:     return do_check_exists;
  4567                           
  4568                           ;incstack = 0
  4569  001C94  BC78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4570  001C96  D002               	goto	l2153
  4571  001C98  90D8               	bcf	status,0,c
  4572  001C9A  0012               	return	
  4573  001C9C                     l2153:
  4574  001C9C  80D8               	bsf	status,0,c
  4575  001C9E  0012               	return		;funcret
  4576  001CA0                     __end_of_UcheckExistsNotFinished:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _UcheckExistsGetError *****************
  4580 ;; Defined at:
  4581 ;;		line 62 in file "Usuaris.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      char 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/1
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1
  4595 ;;      Params:         0       0       0
  4596 ;;      Locals:         0       0       0
  4597 ;;      Temps:          0       0       0
  4598 ;;      Totals:         0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 2
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_menu
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text31
  4610  001D90                     __ptext31:
  4611                           	callstack 0
  4612  001D90                     _UcheckExistsGetError:
  4613                           	callstack 27
  4614                           
  4615                           ;Usuaris.c: 63:     return usuariLoguejat;
  4616                           
  4617                           ;incstack = 0
  4618  001D90  504D               	movf	_usuariLoguejat^0,w,c
  4619  001D92  0012               	return		;funcret
  4620  001D94                     __end_of_UcheckExistsGetError:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _UcheckExists *****************
  4624 ;; Defined at:
  4625 ;;		line 56 in file "Usuaris.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		None
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/1
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1
  4639 ;;      Params:         0       0       0
  4640 ;;      Locals:         0       0       0
  4641 ;;      Temps:          0       0       0
  4642 ;;      Totals:         0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 2
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_menu
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text32
  4654  001D94                     __ptext32:
  4655                           	callstack 0
  4656  001D94                     _UcheckExists:
  4657                           	callstack 27
  4658                           
  4659                           ;Usuaris.c: 57:     do_check_exists = 1;
  4660                           
  4661                           ;incstack = 0
  4662  001D94  8C78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4663  001D96  0012               	return		;funcret
  4664  001D98                     __end_of_UcheckExists:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _URegister *****************
  4668 ;; Defined at:
  4669 ;;		line 72 in file "Usuaris.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		None
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1
  4683 ;;      Params:         0       0       0
  4684 ;;      Locals:         0       0       0
  4685 ;;      Temps:          0       0       0
  4686 ;;      Totals:         0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 2
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_menu
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text33
  4698  001D98                     __ptext33:
  4699                           	callstack 0
  4700  001D98                     _URegister:
  4701                           	callstack 27
  4702                           
  4703                           ;Usuaris.c: 73:     do_register = 1;
  4704                           
  4705                           ;incstack = 0
  4706  001D98  8A78               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4707  001D9A  0012               	return		;funcret
  4708  001D9C                     __end_of_URegister:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _SiFerMenu *****************
  4712 ;; Defined at:
  4713 ;;		line 19 in file "GestioLCD.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		None
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/1
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1
  4727 ;;      Params:         0       0       0
  4728 ;;      Locals:         0       0       0
  4729 ;;      Temps:          0       0       0
  4730 ;;      Totals:         0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 2
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_menu
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text34
  4742  001D9C                     __ptext34:
  4743                           	callstack 0
  4744  001D9C                     _SiFerMenu:
  4745                           	callstack 27
  4746                           
  4747                           ;GestioLCD.c: 20:     ferMenu = 1;
  4748                           
  4749                           ;incstack = 0
  4750  001D9C  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4751  001D9E  0012               	return		;funcret
  4752  001DA0                     __end_of_SiFerMenu:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _SMSon *****************
  4756 ;; Defined at:
  4757 ;;		line 129 in file "Ssms.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		None
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/1
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1
  4771 ;;      Params:         0       0       0
  4772 ;;      Locals:         0       0       0
  4773 ;;      Temps:          0       0       0
  4774 ;;      Totals:         0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 2
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_menu
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text35
  4786  001D5A                     __ptext35:
  4787                           	callstack 0
  4788  001D5A                     _SMSon:
  4789                           	callstack 27
  4790                           
  4791                           ;Ssms.c: 130:     setSMSon = 1;
  4792                           
  4793                           ;incstack = 0
  4794  001D5A  8079               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4795                           
  4796                           ;Ssms.c: 131:     novaTecla = -1;
  4797  001D5C  6853               	setf	_novaTecla^0,c
  4798  001D5E  0012               	return		;funcret
  4799  001D60                     __end_of_SMSon:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _SMSoff *****************
  4803 ;; Defined at:
  4804 ;;		line 134 in file "Ssms.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		None
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/1
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1
  4818 ;;      Params:         0       0       0
  4819 ;;      Locals:         0       0       0
  4820 ;;      Temps:          0       0       0
  4821 ;;      Totals:         0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 2
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_menu
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text36
  4833  001D60                     __ptext36:
  4834                           	callstack 0
  4835  001D60                     _SMSoff:
  4836                           	callstack 27
  4837                           
  4838                           ;Ssms.c: 135:     setSMSon = 0;
  4839                           
  4840                           ;incstack = 0
  4841  001D60  9079               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4842                           
  4843                           ;Ssms.c: 136:     novaTecla = -1;
  4844  001D62  6853               	setf	_novaTecla^0,c
  4845  001D64  0012               	return		;funcret
  4846  001D66                     __end_of_SMSoff:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _SIOHaAcabatPuntuacions *****************
  4850 ;; Defined at:
  4851 ;;		line 36 in file "SIO.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      char 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/1
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1
  4865 ;;      Params:         0       0       0
  4866 ;;      Locals:         0       0       0
  4867 ;;      Temps:          0       0       0
  4868 ;;      Totals:         0       0       0
  4869 ;;Total ram usage:        0 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 2
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_menu
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text37
  4880  001DA0                     __ptext37:
  4881                           	callstack 0
  4882  001DA0                     _SIOHaAcabatPuntuacions:
  4883                           	callstack 27
  4884                           
  4885                           ;SIO.c: 37:     return usuariActualSIO;
  4886                           
  4887                           ;incstack = 0
  4888  001DA0  5048               	movf	_usuariActualSIO^0,w,c
  4889  001DA2  0012               	return		;funcret
  4890  001DA4                     __end_of_SIOHaAcabatPuntuacions:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _NoFerMenu *****************
  4894 ;; Defined at:
  4895 ;;		line 22 in file "GestioLCD.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		None
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/1
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1
  4909 ;;      Params:         0       0       0
  4910 ;;      Locals:         0       0       0
  4911 ;;      Temps:          0       0       0
  4912 ;;      Totals:         0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 2
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_menu
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text38
  4924  001DA4                     __ptext38:
  4925                           	callstack 0
  4926  001DA4                     _NoFerMenu:
  4927                           	callstack 27
  4928                           
  4929                           ;GestioLCD.c: 23:     ferMenu = 0;
  4930                           
  4931                           ;incstack = 0
  4932  001DA4  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4933  001DA6  0012               	return		;funcret
  4934  001DA8                     __end_of_NoFerMenu:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _LcScroll *****************
  4938 ;; Defined at:
  4939 ;;		line 37 in file "LcTLCD.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/1
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1
  4953 ;;      Params:         0       0       0
  4954 ;;      Locals:         0       0       0
  4955 ;;      Temps:          0       0       0
  4956 ;;      Totals:         0       0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 4
  4960 ;; This function calls:
  4961 ;;		_CantaIR
  4962 ;; This function is called by:
  4963 ;;		_menu
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text39
  4968  001D66                     __ptext39:
  4969                           	callstack 0
  4970  001D66                     _LcScroll:
  4971                           	callstack 25
  4972                           
  4973                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  4974                           
  4975                           ;incstack = 0
  4976  001D66  0E18               	movlw	24
  4977  001D68  EFD7  F00D         	goto	_CantaIR
  4978  001D6C                     __end_of_LcScroll:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _JnovaTecla *****************
  4982 ;; Defined at:
  4983 ;;		line 16 in file "Joc.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  tecla           1    wreg     char 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  tecla           1    5[COMRAM] char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/1
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1
  4997 ;;      Params:         0       0       0
  4998 ;;      Locals:         1       0       0
  4999 ;;      Temps:          0       0       0
  5000 ;;      Totals:         1       0       0
  5001 ;;Total ram usage:        1 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 2
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_menu
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text40
  5012  001CE4                     __ptext40:
  5013                           	callstack 0
  5014  001CE4                     _JnovaTecla:
  5015                           	callstack 27
  5016                           
  5017                           ;incstack = 0
  5018                           ;JnovaTecla@tecla stored from wreg
  5019  001CE4  6E63               	movwf	JnovaTecla@tecla^0,c
  5020                           
  5021                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5022  001CE6  C063  F049         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5023  001CEA  0012               	return		;funcret
  5024  001CEC                     __end_of_JnovaTecla:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _JnovaDireccio *****************
  5028 ;; Defined at:
  5029 ;;		line 19 in file "Joc.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  dir             1    wreg     unsigned char 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  dir             1    5[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/1
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1
  5043 ;;      Params:         0       0       0
  5044 ;;      Locals:         1       0       0
  5045 ;;      Temps:          0       0       0
  5046 ;;      Totals:         1       0       0
  5047 ;;Total ram usage:        1 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_menu
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text41
  5058  001CEC                     __ptext41:
  5059                           	callstack 0
  5060  001CEC                     _JnovaDireccio:
  5061                           	callstack 27
  5062                           
  5063                           ;incstack = 0
  5064                           ;JnovaDireccio@dir stored from wreg
  5065  001CEC  6E63               	movwf	JnovaDireccio@dir^0,c
  5066                           
  5067                           ;Joc.c: 20:     direccioJoc = dir;
  5068  001CEE  C063  F012         	movff	JnovaDireccio@dir,_direccioJoc
  5069  001CF2  0012               	return		;funcret
  5070  001CF4                     __end_of_JnovaDireccio:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function _JendGame *****************
  5074 ;; Defined at:
  5075 ;;		line 27 in file "Joc.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		None
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/1
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1
  5089 ;;      Params:         0       0       0
  5090 ;;      Locals:         0       0       0
  5091 ;;      Temps:          0       0       0
  5092 ;;      Totals:         0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 2
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_menu
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text42
  5104  001DA8                     __ptext42:
  5105                           	callstack 0
  5106  001DA8                     _JendGame:
  5107                           	callstack 27
  5108                           
  5109                           ;Joc.c: 28:     jugantJoc = 0;
  5110                           
  5111                           ;incstack = 0
  5112  001DA8  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5113  001DAA  0012               	return		;funcret
  5114  001DAC                     __end_of_JendGame:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _JJuguem *****************
  5118 ;; Defined at:
  5119 ;;		line 13 in file "Joc.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  usuari          1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  usuari          1    5[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/1
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1
  5133 ;;      Params:         0       0       0
  5134 ;;      Locals:         1       0       0
  5135 ;;      Temps:          0       0       0
  5136 ;;      Totals:         1       0       0
  5137 ;;Total ram usage:        1 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 2
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_menu
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text43
  5148  001CF4                     __ptext43:
  5149                           	callstack 0
  5150  001CF4                     _JJuguem:
  5151                           	callstack 27
  5152                           
  5153                           ;incstack = 0
  5154                           ;JJuguem@usuari stored from wreg
  5155  001CF4  6E63               	movwf	JJuguem@usuari^0,c
  5156                           
  5157                           ;Joc.c: 14:     usuariJoc = usuari;
  5158  001CF6  C063  F04A         	movff	JJuguem@usuari,_usuariJoc
  5159  001CFA  0012               	return		;funcret
  5160  001CFC                     __end_of_JJuguem:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _HActualitzaHora *****************
  5164 ;; Defined at:
  5165 ;;		line 15 in file "Hora.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5168 ;;		 -> horaTmp(4), 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/1
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1
  5180 ;;      Params:         1       0       0
  5181 ;;      Locals:         0       0       0
  5182 ;;      Temps:          0       0       0
  5183 ;;      Totals:         1       0       0
  5184 ;;Total ram usage:        1 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; Hardware stack levels required when called: 2
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_menu
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text44
  5195  00199E                     __ptext44:
  5196                           	callstack 0
  5197  00199E                     _HActualitzaHora:
  5198                           	callstack 27
  5199                           
  5200                           ;Hora.c: 16:     hora[0] = nova[0];
  5201                           
  5202                           ;incstack = 0
  5203  00199E  5063               	movf	HActualitzaHora@nova^0,w,c
  5204  0019A0  6ED9               	movwf	fsr2l,c
  5205  0019A2  6ADA               	clrf	fsr2h,c
  5206  0019A4  50DF               	movf	indf2,w,c
  5207  0019A6  6E55               	movwf	_hora^0,c
  5208                           
  5209                           ;Hora.c: 17:     hora[1] = nova[1];
  5210  0019A8  5063               	movf	HActualitzaHora@nova^0,w,c
  5211  0019AA  6ED9               	movwf	fsr2l,c
  5212  0019AC  6ADA               	clrf	fsr2h,c
  5213  0019AE  2AD9               	incf	fsr2l,f,c
  5214  0019B0  50DF               	movf	indf2,w,c
  5215  0019B2  6E56               	movwf	(_hora+1)^0,c
  5216                           
  5217                           ;Hora.c: 18:     hora[3] = nova[2];
  5218  0019B4  5063               	movf	HActualitzaHora@nova^0,w,c
  5219  0019B6  6ED9               	movwf	fsr2l,c
  5220  0019B8  6ADA               	clrf	fsr2h,c
  5221  0019BA  0E02               	movlw	2
  5222  0019BC  26D9               	addwf	fsr2l,f,c
  5223  0019BE  50DF               	movf	indf2,w,c
  5224  0019C0  6E58               	movwf	(_hora+3)^0,c
  5225                           
  5226                           ;Hora.c: 19:     hora[4] = nova[3];
  5227  0019C2  5063               	movf	HActualitzaHora@nova^0,w,c
  5228  0019C4  6ED9               	movwf	fsr2l,c
  5229  0019C6  6ADA               	clrf	fsr2h,c
  5230  0019C8  0E03               	movlw	3
  5231  0019CA  26D9               	addwf	fsr2l,f,c
  5232  0019CC  50DF               	movf	indf2,w,c
  5233  0019CE  6E59               	movwf	(_hora+4)^0,c
  5234  0019D0  0012               	return		;funcret
  5235  0019D2                     __end_of_HActualitzaHora:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function _GLCDMostraMenu *****************
  5239 ;; Defined at:
  5240 ;;		line 30 in file "GestioLCD.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  num             1    wreg     unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  num             1    5[COMRAM] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/1
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1
  5254 ;;      Params:         0       0       0
  5255 ;;      Locals:         1       0       0
  5256 ;;      Temps:          0       0       0
  5257 ;;      Totals:         1       0       0
  5258 ;;Total ram usage:        1 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 2
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_menu
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text45
  5269  001CA0                     __ptext45:
  5270                           	callstack 0
  5271  001CA0                     _GLCDMostraMenu:
  5272                           	callstack 27
  5273                           
  5274                           ;incstack = 0
  5275                           ;GLCDMostraMenu@num stored from wreg
  5276  001CA0  6E63               	movwf	GLCDMostraMenu@num^0,c
  5277                           
  5278                           ;GestioLCD.c: 31:     newString = 1;
  5279  001CA2  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5280                           
  5281                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5282  001CA4  C063  F020         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5283                           
  5284                           ;GestioLCD.c: 33:     ferMenu = 1;
  5285  001CA8  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5286  001CAA  0012               	return		;funcret
  5287  001CAC                     __end_of_GLCDMostraMenu:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _init_ports *****************
  5291 ;; Defined at:
  5292 ;;		line 26 in file "main.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1
  5306 ;;      Params:         0       0       0
  5307 ;;      Locals:         0       0       0
  5308 ;;      Temps:          0       0       0
  5309 ;;      Totals:         0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 2
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text46
  5321  001B58                     __ptext46:
  5322                           	callstack 0
  5323  001B58                     _init_ports:
  5324                           	callstack 28
  5325                           
  5326                           ;incstack = 0
  5327  001B58  0E03               	movlw	3
  5328  001B5A  6E92               	movwf	146,c	;volatile
  5329  001B5C  0EE0               	movlw	224
  5330  001B5E  6E93               	movwf	147,c	;volatile
  5331  001B60  8293               	bsf	147,1,c	;volatile
  5332  001B62  968A               	bcf	138,3,c	;volatile
  5333  001B64  908A               	bcf	138,0,c	;volatile
  5334                           
  5335                           ;main.c: 51:     TRISC = 0xC0;
  5336  001B66  0EC0               	movlw	192
  5337  001B68  6E94               	movwf	148,c	;volatile
  5338                           
  5339                           ;main.c: 61:     TRISD = 0x8F;
  5340  001B6A  0E8F               	movlw	143
  5341  001B6C  6E95               	movwf	149,c	;volatile
  5342                           
  5343                           ;main.c: 62:     LATD = 0x00;
  5344  001B6E  6A8C               	clrf	140,c	;volatile
  5345                           
  5346                           ;main.c: 65:     EECON1bits.EEPGD = 1;
  5347  001B70  8EA6               	bsf	166,7,c	;volsfr
  5348                           
  5349                           ;main.c: 66:     EECON1bits.CFGS = 0;
  5350  001B72  9CA6               	bcf	166,6,c	;volsfr
  5351  001B74  0012               	return		;funcret
  5352  001B76                     __end_of_init_ports:
  5353                           	callstack 0
  5354                           
  5355 ;; *************** function _init_eusart *****************
  5356 ;; Defined at:
  5357 ;;		line 69 in file "main.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1
  5371 ;;      Params:         0       0       0
  5372 ;;      Locals:         0       0       0
  5373 ;;      Temps:          0       0       0
  5374 ;;      Totals:         0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text47
  5386  001BE6                     __ptext47:
  5387                           	callstack 0
  5388  001BE6                     _init_eusart:
  5389                           	callstack 28
  5390                           
  5391                           ;main.c: 70:     TXSTA = 0x24;
  5392                           
  5393                           ;incstack = 0
  5394  001BE6  0E24               	movlw	36
  5395  001BE8  6EAC               	movwf	172,c	;volatile
  5396                           
  5397                           ;main.c: 71:     RCSTA = 0x90;
  5398  001BEA  0E90               	movlw	144
  5399  001BEC  6EAB               	movwf	171,c	;volatile
  5400                           
  5401                           ;main.c: 72:     BAUDCON = 0x08;
  5402  001BEE  0E08               	movlw	8
  5403  001BF0  6EB8               	movwf	184,c	;volatile
  5404                           
  5405                           ;main.c: 73:     SPBRGH = 0x04;
  5406  001BF2  0E04               	movlw	4
  5407  001BF4  6EB0               	movwf	176,c	;volatile
  5408                           
  5409                           ;main.c: 74:     SPBRG = 0x10;
  5410  001BF6  0E10               	movlw	16
  5411  001BF8  6EAF               	movwf	175,c	;volatile
  5412  001BFA  0C10               	retlw	16	;funcret
  5413  001BFC                     __end_of_init_eusart:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _initSIO *****************
  5417 ;; Defined at:
  5418 ;;		line 18 in file "SIO.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1
  5432 ;;      Params:         0       0       0
  5433 ;;      Locals:         0       0       0
  5434 ;;      Temps:          0       0       0
  5435 ;;      Totals:         0       0       0
  5436 ;;Total ram usage:        0 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; Hardware stack levels required when called: 3
  5439 ;; This function calls:
  5440 ;;		_TiGetTimer
  5441 ;; This function is called by:
  5442 ;;		_main
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text48
  5447  001CFC                     __ptext48:
  5448                           	callstack 0
  5449  001CFC                     _initSIO:
  5450                           	callstack 27
  5451                           
  5452                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  5453                           
  5454                           ;incstack = 0
  5455  001CFC  EC03  F00D         	call	_TiGetTimer	;wreg free
  5456  001D00  6E10               	movwf	_timerSIO^0,c
  5457  001D02  0012               	return		;funcret
  5458  001D04                     __end_of_initSIO:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function _initHora *****************
  5462 ;; Defined at:
  5463 ;;		line 11 in file "Hora.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1
  5477 ;;      Params:         0       0       0
  5478 ;;      Locals:         0       0       0
  5479 ;;      Temps:          0       0       0
  5480 ;;      Totals:         0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 3
  5484 ;; This function calls:
  5485 ;;		_TiGetTimer
  5486 ;; This function is called by:
  5487 ;;		_main
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text49
  5492  001D04                     __ptext49:
  5493                           	callstack 0
  5494  001D04                     _initHora:
  5495                           	callstack 27
  5496                           
  5497                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5498                           
  5499                           ;incstack = 0
  5500  001D04  EC03  F00D         	call	_TiGetTimer	;wreg free
  5501  001D08  6E15               	movwf	_timerHora^0,c
  5502  001D0A  0012               	return		;funcret
  5503  001D0C                     __end_of_initHora:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function _initAltaveu *****************
  5507 ;; Defined at:
  5508 ;;		line 10 in file "Altaveu.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1
  5522 ;;      Params:         0       0       0
  5523 ;;      Locals:         0       0       0
  5524 ;;      Temps:          0       0       0
  5525 ;;      Totals:         0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 3
  5529 ;; This function calls:
  5530 ;;		_TiGetTimer
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text50
  5537  001D0C                     __ptext50:
  5538                           	callstack 0
  5539  001D0C                     _initAltaveu:
  5540                           	callstack 27
  5541                           
  5542                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5543                           
  5544                           ;incstack = 0
  5545  001D0C  EC03  F00D         	call	_TiGetTimer	;wreg free
  5546  001D10  6E24               	movwf	_timerAltaveu^0,c
  5547  001D12  0012               	return		;funcret
  5548  001D14                     __end_of_initAltaveu:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function _escriureEEPROM *****************
  5552 ;; Defined at:
  5553 ;;		line 293 in file "Usuaris.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  caca            1    5[COMRAM] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1
  5567 ;;      Params:         0       0       0
  5568 ;;      Locals:         1       0       0
  5569 ;;      Temps:          0       0       0
  5570 ;;      Totals:         1       0       0
  5571 ;;Total ram usage:        1 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 2
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_main
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text51
  5582  001A32                     __ptext51:
  5583                           	callstack 0
  5584  001A32                     _escriureEEPROM:
  5585                           	callstack 28
  5586                           
  5587                           ;Usuaris.c: 294:     for(unsigned char caca = 0; caca < 160; caca++){
  5588                           
  5589                           ;incstack = 0
  5590  001A32  6A63               	clrf	escriureEEPROM@caca^0,c
  5591  001A34                     l797:
  5592                           
  5593                           ;Usuaris.c: 295:         EEADR = 0;
  5594  001A34  6AA9               	clrf	169,c	;volatile
  5595                           
  5596                           ;Usuaris.c: 296:         EEDATA = 0;
  5597  001A36  6AA8               	clrf	168,c	;volatile
  5598                           
  5599                           ;Usuaris.c: 297:         EECON1bits.EEPGD = 0;
  5600  001A38  9EA6               	bcf	166,7,c	;volsfr
  5601                           
  5602                           ;Usuaris.c: 298:         EECON1bits.CFGS = 0;
  5603  001A3A  9CA6               	bcf	166,6,c	;volsfr
  5604                           
  5605                           ;Usuaris.c: 299:         EECON1bits.WREN = 1;
  5606  001A3C  84A6               	bsf	166,2,c	;volsfr
  5607                           
  5608                           ;Usuaris.c: 300:         INTCONbits.GIE = 0;
  5609  001A3E  9EF2               	bcf	242,7,c	;volatile
  5610                           
  5611                           ;Usuaris.c: 301:         EECON2 = 85;
  5612  001A40  0E55               	movlw	85
  5613  001A42  6EA7               	movwf	167,c	;volsfr
  5614                           
  5615                           ;Usuaris.c: 302:         EECON2 = 170;
  5616  001A44  0EAA               	movlw	170
  5617  001A46  6EA7               	movwf	167,c	;volsfr
  5618                           
  5619                           ;Usuaris.c: 303:          EECON1bits.WR = 1;
  5620  001A48  82A6               	bsf	166,1,c	;volsfr
  5621  001A4A                     l799:
  5622                           
  5623                           ;Usuaris.c: 304:         while(EECON1bits.WR){
  5624  001A4A  B2A6               	btfsc	166,1,c	;volsfr
  5625  001A4C  D7FE               	goto	l799
  5626                           
  5627                           ;Usuaris.c: 309:     }
  5628  001A4E  2A63               	incf	escriureEEPROM@caca^0,f,c
  5629  001A50  0E9F               	movlw	159
  5630  001A52  6463               	cpfsgt	escriureEEPROM@caca^0,c
  5631  001A54  D7EF               	goto	l797
  5632                           
  5633                           ;Usuaris.c: 310:    INTCONbits.GIE = 1;
  5634  001A56  8EF2               	bsf	242,7,c	;volatile
  5635  001A58  0C9F               	retlw	159	;funcret
  5636  001A5A                     __end_of_escriureEEPROM:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _escriure2usuarisStruct *****************
  5640 ;; Defined at:
  5641 ;;		line 142 in file "Usuaris.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 3F/1
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1
  5655 ;;      Params:         0       0       0
  5656 ;;      Locals:         0       0       0
  5657 ;;      Temps:          0       0       0
  5658 ;;      Totals:         0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; Hardware stack levels required when called: 2
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_main
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text52
  5670  00192A                     __ptext52:
  5671                           	callstack 0
  5672  00192A                     _escriure2usuarisStruct:
  5673                           	callstack 28
  5674                           
  5675                           ;Usuaris.c: 144:     usuaris[0].username[0] = '1';
  5676                           
  5677                           ;incstack = 0
  5678  00192A  0E31               	movlw	49
  5679  00192C  0101               	movlb	1	; () banked
  5680  00192E  6F00               	movwf	_usuaris& (0+255),b
  5681                           
  5682                           ; BSR set to: 1
  5683                           ;Usuaris.c: 145:     usuaris[0].username[1] = '\0';
  5684  001930  6B01               	clrf	(_usuaris+1)& (0+255),b
  5685                           
  5686                           ;Usuaris.c: 147:     usuaris[1].username[0] = 'A';
  5687  001932  0E41               	movlw	65
  5688  001934  6F17               	movwf	(_usuaris+23)& (0+255),b
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;Usuaris.c: 148:     usuaris[1].username[1] = '\0';
  5692  001936  6B18               	clrf	(_usuaris+24)& (0+255),b
  5693                           
  5694                           ;Usuaris.c: 150:     usuaris[2].username[0] = 'D';
  5695  001938  0E44               	movlw	68
  5696  00193A  6F2E               	movwf	(_usuaris+46)& (0+255),b
  5697                           
  5698                           ; BSR set to: 1
  5699                           ;Usuaris.c: 151:     usuaris[2].username[1] = '\0';
  5700  00193C  6B2F               	clrf	(_usuaris+47)& (0+255),b
  5701                           
  5702                           ;Usuaris.c: 153:     usuaris[3].username[0] = 'G';
  5703  00193E  0E47               	movlw	71
  5704  001940  6F45               	movwf	(_usuaris+69)& (0+255),b
  5705                           
  5706                           ; BSR set to: 1
  5707                           ;Usuaris.c: 154:     usuaris[3].username[1] = '\0';
  5708  001942  6B46               	clrf	(_usuaris+70)& (0+255),b
  5709                           
  5710                           ;Usuaris.c: 156:     usuaris[4].username[0] = 'J';
  5711  001944  0E4A               	movlw	74
  5712  001946  6F5C               	movwf	(_usuaris+92)& (0+255),b
  5713                           
  5714                           ; BSR set to: 1
  5715                           ;Usuaris.c: 157:     usuaris[4].username[1] = '\0';
  5716  001948  6B5D               	clrf	(_usuaris+93)& (0+255),b
  5717                           
  5718                           ;Usuaris.c: 159:     usuaris[5].username[0] = 'M';
  5719  00194A  0E4D               	movlw	77
  5720  00194C  6F73               	movwf	(_usuaris+115)& (0+255),b
  5721                           
  5722                           ; BSR set to: 1
  5723                           ;Usuaris.c: 160:     usuaris[5].username[1] = '\0';
  5724  00194E  6B74               	clrf	(_usuaris+116)& (0+255),b
  5725                           
  5726                           ;Usuaris.c: 162:     usuaris[6].username[0] = 'P';
  5727  001950  0E50               	movlw	80
  5728  001952  6F8A               	movwf	(_usuaris+138)& (0+255),b
  5729                           
  5730                           ; BSR set to: 1
  5731                           ;Usuaris.c: 163:     usuaris[6].username[1] = '\0';
  5732  001954  6B8B               	clrf	(_usuaris+139)& (0+255),b
  5733                           
  5734                           ;Usuaris.c: 165:     usuaris[7].username[0] = 'T';
  5735  001956  0E54               	movlw	84
  5736  001958  6FA1               	movwf	(_usuaris+161)& (0+255),b
  5737                           
  5738                           ; BSR set to: 1
  5739                           ;Usuaris.c: 166:     usuaris[7].username[1] = '\0';
  5740  00195A  6BA2               	clrf	(_usuaris+162)& (0+255),b
  5741                           
  5742                           ;Usuaris.c: 167:     numUsuaris = 8;
  5743  00195C  0E08               	movlw	8
  5744  00195E  6E2B               	movwf	_numUsuaris^0,c
  5745                           
  5746                           ;Usuaris.c: 168:     indexNextUserStruct = 3;
  5747  001960  0E03               	movlw	3
  5748  001962  6E29               	movwf	_indexNextUserStruct^0,c
  5749                           
  5750                           ; BSR set to: 1
  5751  001964  0C03               	retlw	3	;funcret
  5752  001966                     __end_of_escriure2usuarisStruct:
  5753                           	callstack 0
  5754                           
  5755 ;; *************** function _UmotorUsers *****************
  5756 ;; Defined at:
  5757 ;;		line 187 in file "Usuaris.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/1
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1
  5771 ;;      Params:         0       0       0
  5772 ;;      Locals:         0       0       0
  5773 ;;      Temps:          2       0       0
  5774 ;;      Totals:         2       0       0
  5775 ;;Total ram usage:        2 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; Hardware stack levels required when called: 3
  5778 ;; This function calls:
  5779 ;;		_compareStrings
  5780 ;;		_escriureCharEEPROM
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text53
  5787  000D20                     __ptext53:
  5788                           	callstack 0
  5789  000D20                     _UmotorUsers:
  5790                           	callstack 27
  5791                           
  5792                           ;Usuaris.c: 188:     static char state = 0;;Usuaris.c: 190:  switch(state) {
  5793                           
  5794                           ; BSR set to: 1
  5795                           ;incstack = 0
  5796  000D20  D0A8               	goto	l5589
  5797  000D22                     l757:
  5798                           
  5799                           ;Usuaris.c: 192:    if (!do_check_exists && !do_register && !do_updateScores && !do_show
      +                          Users) {
  5800  000D22  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5801  000D24  BA78               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5802  000D26  D006               	goto	l758
  5803  000D28  A678               	btfss	(_do_updateScores/(0+8))^0,_do_updateScores& (0+7),c
  5804  000D2A  B878               	btfsc	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5805  000D2C  D003               	goto	l758
  5806                           
  5807                           ;Usuaris.c: 193:     i = 0;
  5808  000D2E  6A28               	clrf	_i^0,c
  5809                           
  5810                           ;Usuaris.c: 194:     j = 0;
  5811  000D30  6A27               	clrf	_j^0,c
  5812                           
  5813                           ;Usuaris.c: 195:    }
  5814  000D32  0012               	return	
  5815  000D34                     l758:
  5816  000D34  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5817  000D36  D004               	goto	l760
  5818                           
  5819                           ;Usuaris.c: 197:     usuariLoguejat = -1;
  5820  000D38  684D               	setf	_usuariLoguejat^0,c
  5821  000D3A                     l5483:
  5822                           
  5823                           ;Usuaris.c: 198:     state = 1;
  5824  000D3A  0E01               	movlw	1
  5825  000D3C  6E26               	movwf	UmotorUsers@state^0,c
  5826                           
  5827                           ;Usuaris.c: 199:    }
  5828  000D3E  0C01               	retlw	1
  5829  000D40                     l760:
  5830  000D40  AA78               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5831  000D42  D003               	goto	l764
  5832  000D44                     u5150:
  5833                           
  5834                           ;Usuaris.c: 201:     state = 2;
  5835  000D44  0E02               	movlw	2
  5836  000D46  6E26               	movwf	UmotorUsers@state^0,c
  5837                           
  5838                           ;Usuaris.c: 202:    }
  5839  000D48  0C02               	retlw	2
  5840  000D4A                     l764:
  5841  000D4A  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5842  000D4C  0012               	return	
  5843                           
  5844                           ;Usuaris.c: 207:     arrayShowUsers[0] = usuariLoguejat;
  5845  000D4E  C04D  F001         	movff	_usuariLoguejat,_arrayShowUsers
  5846                           
  5847                           ;Usuaris.c: 208:     arrayShowUsers[1] = -1;
  5848  000D52  6802               	setf	(_arrayShowUsers+1)^0,c
  5849                           
  5850                           ;Usuaris.c: 209:     arrayShowUsers[2] = -1;
  5851  000D54  6803               	setf	(_arrayShowUsers+2)^0,c
  5852                           
  5853                           ;Usuaris.c: 210:     arrayShowUsers[3] = -1;
  5854  000D56  6804               	setf	(_arrayShowUsers+3)^0,c
  5855                           
  5856                           ;Usuaris.c: 211:     arrayShowUsers[4] = -1;
  5857  000D58  6805               	setf	(_arrayShowUsers+4)^0,c
  5858                           
  5859                           ;Usuaris.c: 212:     arrayShowUsers[5] = -1;
  5860  000D5A  6806               	setf	(_arrayShowUsers+5)^0,c
  5861                           
  5862                           ;Usuaris.c: 213:     arrayShowUsers[6] = -1;
  5863  000D5C  6807               	setf	(_arrayShowUsers+6)^0,c
  5864                           
  5865                           ;Usuaris.c: 214:     arrayShowUsers[7] = -1;
  5866  000D5E  6808               	setf	(_arrayShowUsers+7)^0,c
  5867                           
  5868                           ;Usuaris.c: 215:     i = 1;
  5869  000D60  0E01               	movlw	1
  5870  000D62  6E28               	movwf	_i^0,c
  5871                           
  5872                           ;Usuaris.c: 216:     if(numUsuaris < 7) {
  5873  000D64  0E07               	movlw	7
  5874  000D66  602B               	cpfslt	_numUsuaris^0,c
  5875  000D68  D002               	goto	l767
  5876  000D6A                     u5170:
  5877                           
  5878                           ;Usuaris.c: 217:       j = 0;
  5879  000D6A  6A27               	clrf	_j^0,c
  5880                           
  5881                           ;Usuaris.c: 218:     }
  5882  000D6C  D002               	goto	l5497
  5883  000D6E                     l767:
  5884                           
  5885                           ;Usuaris.c: 220:       j = indexNextUserStruct;
  5886  000D6E  C029  F027         	movff	_indexNextUserStruct,_j
  5887  000D72                     l5497:
  5888                           
  5889                           ;Usuaris.c: 222:     state = 5;
  5890  000D72  0E05               	movlw	5
  5891  000D74  6E26               	movwf	UmotorUsers@state^0,c
  5892  000D76  0C05               	retlw	5
  5893  000D78                     l5499:
  5894                           
  5895                           ;Usuaris.c: 226:    if (i < numUsuaris) {
  5896  000D78  502B               	movf	_numUsuaris^0,w,c
  5897  000D7A  5C28               	subwf	_i^0,w,c
  5898  000D7C  E212               	bc	l5509
  5899                           
  5900                           ;Usuaris.c: 227:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  5901  000D7E  0EA1               	movlw	low _tmpUsername
  5902  000D80  6E63               	movwf	compareStrings@a^0,c
  5903  000D82  5028               	movf	_i^0,w,c
  5904  000D84  0D17               	mullw	23
  5905  000D86  0E00               	movlw	low _usuaris
  5906  000D88  24F3               	addwf	243,w,c
  5907  000D8A  6E64               	movwf	compareStrings@b^0,c
  5908  000D8C  0E01               	movlw	high _usuaris
  5909  000D8E  20F4               	addwfc	prodh,w,c
  5910  000D90  6E65               	movwf	(compareStrings@b+1)^0,c
  5911  000D92  EC57  F00C         	call	_compareStrings	;wreg free
  5912  000D96  0900               	iorlw	0
  5913  000D98  E102               	bnz	l5505
  5914                           
  5915                           ;Usuaris.c: 228:      usuariLoguejat = i;
  5916  000D9A  C028  F04D         	movff	_i,_usuariLoguejat
  5917  000D9E                     l5505:
  5918                           
  5919                           ;Usuaris.c: 231:     i++;
  5920  000D9E  2A28               	incf	_i^0,f,c
  5921  000DA0  D7CC               	goto	l5483
  5922  000DA2                     l5509:
  5923  000DA2  502B               	movf	_numUsuaris^0,w,c
  5924  000DA4  1828               	xorwf	_i^0,w,c
  5925  000DA6  A4D8               	btfss	status,2,c
  5926  000DA8  0012               	return	
  5927                           
  5928                           ;Usuaris.c: 235:     do_check_exists = 0;
  5929  000DAA  9C78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5930                           
  5931                           ;Usuaris.c: 236:     state = 0;
  5932  000DAC  6A26               	clrf	UmotorUsers@state^0,c
  5933  000DAE  0012               	return	
  5934  000DB0                     l5513:
  5935                           
  5936                           ;Usuaris.c: 240:    if (i != 8) {
  5937  000DB0  0E08               	movlw	8
  5938  000DB2  1828               	xorwf	_i^0,w,c
  5939  000DB4  E00D               	bz	l5525
  5940                           
  5941                           ;Usuaris.c: 241:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5942  000DB6  C02A  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5943  000DBA  5028               	movf	_i^0,w,c
  5944  000DBC  0FA1               	addlw	low _tmpUsername
  5945  000DBE  D886               	call	PL42	;call to abstracted procedure
  5946  000DC0  EC66  F00D         	call	_escriureCharEEPROM
  5947  000DC4  2A2A               	incf	_indexNextUser^0,f,c
  5948                           
  5949                           ;Usuaris.c: 242:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5950  000DC6  5028               	movf	_i^0,w,c
  5951  000DC8  0FA1               	addlw	low _tmpUsername
  5952  000DCA  D877               	call	PL20	;call to abstracted procedure
  5953                           
  5954                           ;Usuaris.c: 243:     i++;
  5955  000DCC  D868               	call	PL14	;call to abstracted procedure
  5956  000DCE  D7BA               	goto	u5150
  5957  000DD0                     l5525:
  5958  000DD0  0E08               	movlw	8
  5959  000DD2  1828               	xorwf	_i^0,w,c
  5960  000DD4  A4D8               	btfss	status,2,c
  5961  000DD6  0012               	return	
  5962                           
  5963                           ;Usuaris.c: 247:     i = 0;
  5964  000DD8  6A28               	clrf	_i^0,c
  5965  000DDA                     l5529:
  5966                           
  5967                           ;Usuaris.c: 248:     state = 3;
  5968  000DDA  0E03               	movlw	3
  5969  000DDC  6E26               	movwf	UmotorUsers@state^0,c
  5970  000DDE  0C03               	retlw	3
  5971  000DE0                     l5531:
  5972                           
  5973                           ;Usuaris.c: 252:    if (i != 8) {
  5974  000DE0  0E08               	movlw	8
  5975  000DE2  1828               	xorwf	_i^0,w,c
  5976  000DE4  E011               	bz	l5543
  5977                           
  5978                           ;Usuaris.c: 253:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5979  000DE6  C02A  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5980  000DEA  5028               	movf	_i^0,w,c
  5981  000DEC  0F98               	addlw	low _tmpPassword
  5982  000DEE  D86E               	call	PL42	;call to abstracted procedure
  5983  000DF0  EC66  F00D         	call	_escriureCharEEPROM
  5984  000DF4  2A2A               	incf	_indexNextUser^0,f,c
  5985                           
  5986                           ;Usuaris.c: 254:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5987  000DF6  5028               	movf	_i^0,w,c
  5988  000DF8  0F98               	addlw	low _tmpPassword
  5989  000DFA  D85F               	call	PL20	;call to abstracted procedure
  5990  000DFC  0E09               	movlw	9
  5991  000DFE  2668               	addwf	??_UmotorUsers^0,f,c
  5992  000E00  0E00               	movlw	0
  5993  000E02  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  5994                           
  5995                           ;Usuaris.c: 255:     i++;
  5996  000E04  D84C               	call	PL14	;call to abstracted procedure
  5997  000E06  D7E9               	goto	l5529
  5998  000E08                     l5543:
  5999  000E08  0E08               	movlw	8
  6000  000E0A  1828               	xorwf	_i^0,w,c
  6001  000E0C  A4D8               	btfss	status,2,c
  6002  000E0E  0012               	return	
  6003                           
  6004                           ;Usuaris.c: 259:     do_register = 0;
  6005  000E10  9A78               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6006                           
  6007                           ;Usuaris.c: 260:     indexNextUser++;
  6008  000E12  2A2A               	incf	_indexNextUser^0,f,c
  6009                           
  6010                           ;Usuaris.c: 261:     if(indexNextUser == 159) indexNextUser = 16;
  6011  000E14  0E9F               	movlw	159
  6012  000E16  182A               	xorwf	_indexNextUser^0,w,c
  6013  000E18  E102               	bnz	l5553
  6014  000E1A  0E10               	movlw	16
  6015  000E1C  6E2A               	movwf	_indexNextUser^0,c
  6016  000E1E                     l5553:
  6017                           
  6018                           ;Usuaris.c: 262:     indexNextUserStruct++;
  6019  000E1E  2A29               	incf	_indexNextUserStruct^0,f,c
  6020                           
  6021                           ;Usuaris.c: 263:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6022  000E20  0E08               	movlw	8
  6023  000E22  1829               	xorwf	_indexNextUserStruct^0,w,c
  6024  000E24  E101               	bnz	l5559
  6025  000E26  6A29               	clrf	_indexNextUserStruct^0,c
  6026  000E28                     l5559:
  6027                           
  6028                           ;Usuaris.c: 264:     if(numUsuaris != 8) numUsuaris++;
  6029  000E28  0E08               	movlw	8
  6030  000E2A  182B               	xorwf	_numUsuaris^0,w,c
  6031  000E2C  E001               	bz	l5563
  6032  000E2E  2A2B               	incf	_numUsuaris^0,f,c
  6033  000E30                     l5563:
  6034                           
  6035                           ;Usuaris.c: 265:     state = 0;
  6036  000E30  6A26               	clrf	UmotorUsers@state^0,c
  6037  000E32  0012               	return	
  6038  000E34                     l5565:
  6039                           
  6040                           ;Usuaris.c: 272:    if (i < numUsuaris) {
  6041  000E34  502B               	movf	_numUsuaris^0,w,c
  6042  000E36  5C28               	subwf	_i^0,w,c
  6043  000E38  E215               	bc	l5583
  6044                           
  6045                           ;Usuaris.c: 273:     if(j != usuariLoguejat){
  6046  000E3A  C04D  F068         	movff	_usuariLoguejat,??_UmotorUsers
  6047  000E3E  6A69               	clrf	(??_UmotorUsers+1)^0,c
  6048  000E40  BE68               	btfsc	??_UmotorUsers^0,7,c
  6049  000E42  0669               	decf	(??_UmotorUsers+1)^0,f,c
  6050  000E44  5027               	movf	_j^0,w,c
  6051  000E46  1868               	xorwf	??_UmotorUsers^0,w,c
  6052  000E48  1069               	iorwf	(??_UmotorUsers+1)^0,w,c
  6053  000E4A  E007               	bz	l5573
  6054                           
  6055                           ;Usuaris.c: 274:       arrayShowUsers[i] = j;
  6056  000E4C  5028               	movf	_i^0,w,c
  6057  000E4E  0F01               	addlw	low _arrayShowUsers
  6058  000E50  6ED9               	movwf	fsr2l,c
  6059  000E52  6ADA               	clrf	fsr2h,c
  6060  000E54  C027  FFDF         	movff	_j,indf2
  6061                           
  6062                           ;Usuaris.c: 275:      i++;
  6063  000E58  2A28               	incf	_i^0,f,c
  6064  000E5A                     l5573:
  6065                           
  6066                           ;Usuaris.c: 276:                     j++;
  6067  000E5A  2A27               	incf	_j^0,f,c
  6068                           
  6069                           ;Usuaris.c: 281:     if(j > 7) j=0;
  6070                           
  6071                           ;Usuaris.c: 277:     }else{
  6072  000E5C  0E07               	movlw	7
  6073  000E5E  6427               	cpfsgt	_j^0,c
  6074  000E60  D788               	goto	l5497
  6075  000E62  D783               	goto	u5170
  6076  000E64                     l5583:
  6077  000E64  502B               	movf	_numUsuaris^0,w,c
  6078  000E66  1828               	xorwf	_i^0,w,c
  6079  000E68  A4D8               	btfss	status,2,c
  6080  000E6A  0012               	return	
  6081                           
  6082                           ;Usuaris.c: 285:     do_showUsers = 0;
  6083  000E6C  9878               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6084                           
  6085                           ;Usuaris.c: 286:     state = 0;
  6086  000E6E  6A26               	clrf	UmotorUsers@state^0,c
  6087  000E70  0012               	return	
  6088  000E72                     l5589:
  6089  000E72  5026               	movf	UmotorUsers@state^0,w,c
  6090  000E74  6E68               	movwf	??_UmotorUsers^0,c
  6091  000E76  6A69               	clrf	(??_UmotorUsers+1)^0,c
  6092                           
  6093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6094                           ; Switch size 1, requested type "space"
  6095                           ; Number of cases is 1, Range of values is 0 to 0
  6096                           ; switch strategies available:
  6097                           ; Name         Instructions Cycles
  6098                           ; simple_byte            4     3 (average)
  6099                           ;	Chosen strategy is simple_byte
  6100  000E78  5069               	movf	(??_UmotorUsers+1)^0,w,c
  6101  000E7A  A4D8               	btfss	status,2,c
  6102  000E7C  0012               	return	
  6103                           
  6104                           ; Switch size 1, requested type "space"
  6105                           ; Number of cases is 6, Range of values is 0 to 5
  6106                           ; switch strategies available:
  6107                           ; Name         Instructions Cycles
  6108                           ; simple_byte           19    10 (average)
  6109                           ;	Chosen strategy is simple_byte
  6110  000E7E  5068               	movf	??_UmotorUsers^0,w,c
  6111  000E80  E101 D74F          	bz	l757
  6112  000E84  0A01               	xorlw	1	; case 1
  6113  000E86  E101 D777          	bz	l5499
  6114  000E8A  0A03               	xorlw	3	; case 2
  6115  000E8C  E091               	bz	l5513
  6116  000E8E  0A01               	xorlw	1	; case 3
  6117  000E90  E0A7               	bz	l5531
  6118  000E92  0A07               	xorlw	7	; case 4
  6119  000E94  B4D8               	btfsc	status,2,c
  6120  000E96  0012               	return	
  6121  000E98  0A01               	xorlw	1	; case 5
  6122  000E9A  E0CC               	bz	l5565
  6123  000E9C  0012               	return		;funcret
  6124  000E9E                     __end_of_UmotorUsers:
  6125                           	callstack 0
  6126  000E9E                     PL14:
  6127                           	callstack 27
  6128  000E9E  50F3               	movf	243,w,c
  6129  000EA0  2668               	addwf	??_UmotorUsers^0,f,c
  6130  000EA2  50F4               	movf	244,w,c
  6131  000EA4  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  6132  000EA6  5028               	movf	_i^0,w,c
  6133  000EA8  2468               	addwf	??_UmotorUsers^0,w,c
  6134  000EAA  6EE1               	movwf	fsr1l,c
  6135  000EAC  0E00               	movlw	0
  6136  000EAE  2069               	addwfc	(??_UmotorUsers+1)^0,w,c
  6137  000EB0  6EE2               	movwf	fsr1h,c
  6138  000EB2  CFDF FFE7          	movff	indf2,indf1
  6139  000EB6  2A28               	incf	_i^0,f,c
  6140  000EB8  0012               	return	
  6141  000EBA                     __end_ofPL14:
  6142                           	callstack 0
  6143  000EBA                     PL20:
  6144                           	callstack 27
  6145  000EBA  6ED9               	movwf	fsr2l,c
  6146  000EBC  6ADA               	clrf	fsr2h,c
  6147  000EBE  5029               	movf	_indexNextUserStruct^0,w,c
  6148  000EC0  0D17               	mullw	23
  6149  000EC2  0E00               	movlw	low _usuaris
  6150  000EC4  6E68               	movwf	??_UmotorUsers^0,c
  6151  000EC6  0E01               	movlw	high _usuaris
  6152  000EC8  6E69               	movwf	(??_UmotorUsers+1)^0,c
  6153  000ECA  0012               	return	
  6154  000ECC                     __end_ofPL20:
  6155                           	callstack 0
  6156  000ECC                     PL42:
  6157                           	callstack 27
  6158  000ECC  6ED9               	movwf	fsr2l,c
  6159  000ECE  6ADA               	clrf	fsr2h,c
  6160  000ED0  50DF               	movf	indf2,w,c
  6161  000ED2  0012               	return	
  6162  000ED4                     __end_ofPL42:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function _escriureCharEEPROM *****************
  6166 ;; Defined at:
  6167 ;;		line 84 in file "Usuaris.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  c               1    wreg     unsigned char 
  6170 ;;  pos             1    5[COMRAM] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  c               1    6[COMRAM] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/1
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1
  6182 ;;      Params:         1       0       0
  6183 ;;      Locals:         1       0       0
  6184 ;;      Temps:          0       0       0
  6185 ;;      Totals:         2       0       0
  6186 ;;Total ram usage:        2 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 2
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_UmotorUsers
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text54
  6197  001ACC                     __ptext54:
  6198                           	callstack 0
  6199  001ACC                     _escriureCharEEPROM:
  6200                           	callstack 27
  6201                           
  6202                           ;incstack = 0
  6203                           ;escriureCharEEPROM@c stored from wreg
  6204  001ACC  6E64               	movwf	escriureCharEEPROM@c^0,c
  6205                           
  6206                           ;Usuaris.c: 85:     EEADR = pos;
  6207  001ACE  C063  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6208                           
  6209                           ;Usuaris.c: 86:     EEDATA = c;
  6210  001AD2  C064  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6211                           
  6212                           ;Usuaris.c: 87:     EECON1bits.EEPGD = 0;
  6213  001AD6  9EA6               	bcf	166,7,c	;volsfr
  6214                           
  6215                           ;Usuaris.c: 88:     EECON1bits.CFGS = 0;
  6216  001AD8  9CA6               	bcf	166,6,c	;volsfr
  6217                           
  6218                           ;Usuaris.c: 89:     EECON1bits.WREN = 1;
  6219  001ADA  84A6               	bsf	166,2,c	;volsfr
  6220                           
  6221                           ;Usuaris.c: 90:     INTCONbits.GIE = 0;
  6222  001ADC  9EF2               	bcf	242,7,c	;volatile
  6223                           
  6224                           ;Usuaris.c: 91:     EECON2 = 85;
  6225  001ADE  0E55               	movlw	85
  6226  001AE0  6EA7               	movwf	167,c	;volsfr
  6227                           
  6228                           ;Usuaris.c: 92:     EECON2 = 170;
  6229  001AE2  0EAA               	movlw	170
  6230  001AE4  6EA7               	movwf	167,c	;volsfr
  6231                           
  6232                           ;Usuaris.c: 93:     EECON1bits.WR = 1;
  6233  001AE6  82A6               	bsf	166,1,c	;volsfr
  6234  001AE8                     l706:
  6235  001AE8  B2A6               	btfsc	166,1,c	;volsfr
  6236  001AEA  D7FE               	goto	l706
  6237                           
  6238                           ;Usuaris.c: 95:     INTCONbits.GIE = 1;
  6239  001AEC  8EF2               	bsf	242,7,c	;volatile
  6240  001AEE  0012               	return		;funcret
  6241  001AF0                     __end_of_escriureCharEEPROM:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _compareStrings *****************
  6245 ;; Defined at:
  6246 ;;		line 171 in file "Usuaris.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6249 ;;		 -> tmpUsername(9), 
  6250 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6251 ;;		 -> usuaris.username(9), usuaris(184), 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      unsigned char 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/1
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1
  6263 ;;      Params:         3       0       0
  6264 ;;      Locals:         0       0       0
  6265 ;;      Temps:          2       0       0
  6266 ;;      Totals:         5       0       0
  6267 ;;Total ram usage:        5 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 2
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_UmotorUsers
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text55
  6278  0018AE                     __ptext55:
  6279                           	callstack 0
  6280  0018AE                     _compareStrings:
  6281                           	callstack 27
  6282                           
  6283                           ;Usuaris.c: 172:     while (*a){
  6284                           
  6285                           ;incstack = 0
  6286  0018AE  D00A               	goto	l4419
  6287  0018B0                     l4413:
  6288                           
  6289                           ;Usuaris.c: 173:         if (*a != *b)break;
  6290  0018B0  D813               	call	PL44	;call to abstracted procedure
  6291  0018B2  5063               	movf	compareStrings@a^0,w,c
  6292  0018B4  6EE1               	movwf	fsr1l,c
  6293  0018B6  6AE2               	clrf	fsr1h,c
  6294  0018B8  50DE               	movf	postinc2,w,c
  6295  0018BA  18E6               	xorwf	postinc1,w,c
  6296  0018BC  E105               	bnz	u3490
  6297                           
  6298                           ;Usuaris.c: 174:         a++;
  6299  0018BE  2A63               	incf	compareStrings@a^0,f,c
  6300                           
  6301                           ;Usuaris.c: 175:         b++;
  6302  0018C0  4A64               	infsnz	compareStrings@b^0,f,c
  6303  0018C2  2A65               	incf	(compareStrings@b+1)^0,f,c
  6304  0018C4                     l4419:
  6305                           
  6306                           ;Usuaris.c: 172:     while (*a){
  6307  0018C4  D80E               	call	PL62	;call to abstracted procedure
  6308  0018C6  E1F4               	bnz	l4413
  6309  0018C8                     u3490:
  6310                           
  6311                           ;Usuaris.c: 177:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6312  0018C8  D807               	call	PL44	;call to abstracted procedure
  6313  0018CA  50DF               	movf	indf2,w,c
  6314  0018CC  6E66               	movwf	??_compareStrings^0,c
  6315  0018CE  D809               	call	PL62	;call to abstracted procedure
  6316  0018D0  6E67               	movwf	(??_compareStrings+1)^0,c
  6317  0018D2  5066               	movf	??_compareStrings^0,w,c
  6318  0018D4  5C67               	subwf	(??_compareStrings+1)^0,w,c
  6319  0018D6  0012               	return		;funcret
  6320  0018D8                     __end_of_compareStrings:
  6321                           	callstack 0
  6322  0018D8                     PL44:
  6323                           	callstack 27
  6324  0018D8  C064  FFD9         	movff	compareStrings@b,fsr2l
  6325  0018DC  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  6326  0018E0  0012               	return	
  6327  0018E2                     __end_ofPL44:
  6328                           	callstack 0
  6329  0018E2                     PL62:
  6330                           	callstack 27
  6331  0018E2  5063               	movf	compareStrings@a^0,w,c
  6332  0018E4  6ED9               	movwf	fsr2l,c
  6333  0018E6  6ADA               	clrf	fsr2h,c
  6334  0018E8  50DF               	movf	indf2,w,c
  6335  0018EA  0012               	return	
  6336  0018EC                     __end_ofPL62:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _Uinit *****************
  6340 ;; Defined at:
  6341 ;;		line 97 in file "Usuaris.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  j               1    9[COMRAM] unsigned char 
  6346 ;;  j               1    8[COMRAM] unsigned char 
  6347 ;;  i               1    7[COMRAM] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1
  6357 ;;      Params:         0       0       0
  6358 ;;      Locals:         3       0       0
  6359 ;;      Temps:          2       0       0
  6360 ;;      Totals:         5       0       0
  6361 ;;Total ram usage:        5 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; Hardware stack levels required when called: 2
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_main
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text56
  6372  0013E6                     __ptext56:
  6373                           	callstack 0
  6374  0013E6                     _Uinit:
  6375                           	callstack 28
  6376                           
  6377                           ;Usuaris.c: 102:     EEADR = 0;
  6378                           
  6379                           ;incstack = 0
  6380  0013E6  6AA9               	clrf	169,c	;volatile
  6381                           
  6382                           ;Usuaris.c: 103:     EECON1bits.EEPGD = 0;
  6383  0013E8  9EA6               	bcf	166,7,c	;volsfr
  6384                           
  6385                           ;Usuaris.c: 104:     EECON1bits.CFGS = 0;
  6386  0013EA  9CA6               	bcf	166,6,c	;volsfr
  6387                           
  6388                           ;Usuaris.c: 105:     EECON1bits.RD = 1;
  6389  0013EC  80A6               	bsf	166,0,c	;volsfr
  6390  0013EE                     l712:
  6391  0013EE  B0A6               	btfsc	166,0,c	;volsfr
  6392  0013F0  D7FE               	goto	l712
  6393                           
  6394                           ;Usuaris.c: 107:     numUsuaris = EEDATA;
  6395  0013F2  CFA8 F02B          	movff	4008,_numUsuaris	;volatile
  6396                           
  6397                           ;Usuaris.c: 110:     EEADR++;
  6398  0013F6  2AA9               	incf	169,f,c	;volatile
  6399                           
  6400                           ;Usuaris.c: 111:     EECON1bits.EEPGD = 0;
  6401  0013F8  9EA6               	bcf	166,7,c	;volsfr
  6402                           
  6403                           ;Usuaris.c: 112:     EECON1bits.CFGS = 0;
  6404  0013FA  9CA6               	bcf	166,6,c	;volsfr
  6405  0013FC                     l715:
  6406  0013FC  B0A6               	btfsc	166,0,c	;volsfr
  6407  0013FE  D7FE               	goto	l715
  6408                           
  6409                           ;Usuaris.c: 115:     indexNextUser = EEDATA;
  6410  001400  CFA8 F02A          	movff	4008,_indexNextUser	;volatile
  6411                           
  6412                           ;Usuaris.c: 117:     EEADR++;
  6413  001404  2AA9               	incf	169,f,c	;volatile
  6414                           
  6415                           ;Usuaris.c: 119:     for(char i = 0; i< numUsuaris; i++){
  6416  001406  6A65               	clrf	Uinit@i^0,c
  6417  001408  D021               	goto	l2667
  6418  00140A                     l719:
  6419                           
  6420                           ;Usuaris.c: 120:         for(char j = 0; j<9; j++){
  6421  00140A  6A66               	clrf	Uinit@j^0,c
  6422  00140C                     l720:
  6423                           
  6424                           ;Usuaris.c: 121:             EECON1bits.EEPGD = 0;
  6425  00140C  9EA6               	bcf	166,7,c	;volsfr
  6426                           
  6427                           ;Usuaris.c: 122:             EECON1bits.CFGS = 0;
  6428  00140E  9CA6               	bcf	166,6,c	;volsfr
  6429                           
  6430                           ;Usuaris.c: 123:             EECON1bits.RD = 1;
  6431  001410  80A6               	bsf	166,0,c	;volsfr
  6432  001412                     l722:
  6433  001412  B0A6               	btfsc	166,0,c	;volsfr
  6434  001414  D7FE               	goto	l722
  6435                           
  6436                           ;Usuaris.c: 125:             usuaris[i].username[j] = EEDATA;
  6437  001416  D827               	call	PL38	;call to abstracted procedure
  6438  001418  D82D               	call	PL52	;call to abstracted procedure
  6439  00141A  5066               	movf	Uinit@j^0,w,c
  6440                           
  6441                           ;Usuaris.c: 126:             EEADR++;
  6442  00141C  D81B               	call	PL22	;call to abstracted procedure
  6443                           
  6444                           ;Usuaris.c: 127:         }
  6445  00141E  2A66               	incf	Uinit@j^0,f,c
  6446  001420  0E08               	movlw	8
  6447  001422  6466               	cpfsgt	Uinit@j^0,c
  6448  001424  D7F3               	goto	l720
  6449                           
  6450                           ;Usuaris.c: 128:         for(char j = 0; j<9; j++){
  6451  001426  6A67               	clrf	Uinit@j_1215^0,c
  6452  001428                     l725:
  6453                           
  6454                           ;Usuaris.c: 129:             EECON1bits.EEPGD = 0;
  6455  001428  9EA6               	bcf	166,7,c	;volsfr
  6456                           
  6457                           ;Usuaris.c: 130:             EECON1bits.CFGS = 0;
  6458  00142A  9CA6               	bcf	166,6,c	;volsfr
  6459                           
  6460                           ;Usuaris.c: 131:             EECON1bits.RD = 1;
  6461  00142C  80A6               	bsf	166,0,c	;volsfr
  6462  00142E                     l727:
  6463  00142E  B0A6               	btfsc	166,0,c	;volsfr
  6464  001430  D7FE               	goto	l727
  6465                           
  6466                           ;Usuaris.c: 133:             usuaris[i].password[j] = EEDATA;
  6467  001432  D819               	call	PL38	;call to abstracted procedure
  6468  001434  0E09               	movlw	9
  6469  001436  2663               	addwf	??_Uinit^0,f,c
  6470  001438  0E00               	movlw	0
  6471  00143A  2264               	addwfc	(??_Uinit+1)^0,f,c
  6472  00143C  D81B               	call	PL52	;call to abstracted procedure
  6473  00143E  5067               	movf	Uinit@j_1215^0,w,c
  6474                           
  6475                           ;Usuaris.c: 134:             EEADR++;
  6476  001440  D809               	call	PL22	;call to abstracted procedure
  6477                           
  6478                           ;Usuaris.c: 135:         }
  6479  001442  2A67               	incf	Uinit@j_1215^0,f,c
  6480  001444  0E08               	movlw	8
  6481  001446  6467               	cpfsgt	Uinit@j_1215^0,c
  6482  001448  D7EF               	goto	l725
  6483                           
  6484                           ;Usuaris.c: 136:     }
  6485  00144A  2A65               	incf	Uinit@i^0,f,c
  6486  00144C                     l2667:
  6487  00144C  502B               	movf	_numUsuaris^0,w,c
  6488  00144E  5C65               	subwf	Uinit@i^0,w,c
  6489  001450  E3DC               	bnc	l719
  6490  001452  0012               	return		;funcret
  6491  001454                     __end_of_Uinit:
  6492                           	callstack 0
  6493  001454                     PL22:
  6494                           	callstack 28
  6495  001454  2463               	addwf	??_Uinit^0,w,c
  6496  001456  6ED9               	movwf	fsr2l,c
  6497  001458  0E00               	movlw	0
  6498  00145A  2064               	addwfc	(??_Uinit+1)^0,w,c
  6499  00145C  6EDA               	movwf	fsr2h,c
  6500  00145E  CFA8 FFDF          	movff	4008,indf2	;volatile
  6501  001462  2AA9               	incf	169,f,c	;volatile
  6502  001464  0012               	return	
  6503  001466                     __end_ofPL22:
  6504                           	callstack 0
  6505  001466                     PL38:
  6506                           	callstack 28
  6507  001466  5065               	movf	Uinit@i^0,w,c
  6508  001468  0D17               	mullw	23
  6509  00146A  0E00               	movlw	low _usuaris
  6510  00146C  6E63               	movwf	??_Uinit^0,c
  6511  00146E  0E01               	movlw	high _usuaris
  6512  001470  6E64               	movwf	(??_Uinit+1)^0,c
  6513  001472  0012               	return	
  6514  001474                     __end_ofPL38:
  6515                           	callstack 0
  6516  001474                     PL52:
  6517                           	callstack 28
  6518  001474  50F3               	movf	243,w,c
  6519  001476  2663               	addwf	??_Uinit^0,f,c
  6520  001478  50F4               	movf	244,w,c
  6521  00147A  2264               	addwfc	(??_Uinit+1)^0,f,c
  6522  00147C  0012               	return	
  6523  00147E                     __end_ofPL52:
  6524                           	callstack 0
  6525                           
  6526 ;; *************** function _TiInitTimer *****************
  6527 ;; Defined at:
  6528 ;;		line 18 in file "TiTTimer.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1
  6542 ;;      Params:         0       0       0
  6543 ;;      Locals:         0       0       0
  6544 ;;      Temps:          0       0       0
  6545 ;;      Totals:         0       0       0
  6546 ;;Total ram usage:        0 bytes
  6547 ;; Hardware stack levels used: 1
  6548 ;; Hardware stack levels required when called: 2
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_main
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text57
  6557  001A5A                     __ptext57:
  6558                           	callstack 0
  6559  001A5A                     _TiInitTimer:
  6560                           	callstack 28
  6561                           
  6562                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6563                           
  6564                           ;incstack = 0
  6565  001A5A  9ED0               	bcf	208,7,c	;volatile
  6566                           
  6567                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6568  001A5C  8EF2               	bsf	242,7,c	;volatile
  6569                           
  6570                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6571  001A5E  8CF2               	bsf	242,6,c	;volatile
  6572                           
  6573                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6574  001A60  8AF2               	bsf	242,5,c	;volatile
  6575                           
  6576                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6577  001A62  94F2               	bcf	242,2,c	;volatile
  6578                           
  6579                           ;TiTTimer.c: 25:     T0CON = 136;
  6580  001A64  0E88               	movlw	136
  6581  001A66  6ED5               	movwf	213,c	;volatile
  6582                           
  6583                           ;TiTTimer.c: 27:     TMR0H = 223;
  6584                           
  6585                           ;TiTTimer.c: 28:     TMR0L = 148;
  6586  001A68  EC52  F00C         	call	PL48	;call to abstracted procedure
  6587                           
  6588                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6589  001A6C  8ED5               	bsf	213,7,c	;volatile
  6590                           
  6591                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6592  001A6E  6A32               	clrf	_counter^0,c
  6593  001A70                     l4523:
  6594  001A70  0E07               	movlw	7
  6595  001A72  6432               	cpfsgt	_counter^0,c
  6596  001A74  D001               	goto	l4527
  6597  001A76  0C07               	retlw	7
  6598  001A78                     l4527:
  6599                           
  6600                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6601  001A78  EC12  F00D         	call	PL12	;call to abstracted procedure
  6602  001A7C  6ADF               	clrf	indf2,c
  6603                           
  6604                           ;TiTTimer.c: 33:     }
  6605  001A7E  2A32               	incf	_counter^0,f,c
  6606  001A80  D7F7               	goto	l4523
  6607  001A82                     __end_of_TiInitTimer:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _TeTeclat *****************
  6611 ;; Defined at:
  6612 ;;		line 22 in file "TeTeclat.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/1
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1
  6626 ;;      Params:         0       0       0
  6627 ;;      Locals:         0       0       0
  6628 ;;      Temps:          3       0       0
  6629 ;;      Totals:         3       0       0
  6630 ;;Total ram usage:        3 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 3
  6633 ;; This function calls:
  6634 ;;		_MsetNovaTecla
  6635 ;;		_SsetNovaTecla
  6636 ;;		_TiGetTics
  6637 ;;		_TiResetTics
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text58
  6644  001082                     __ptext58:
  6645                           	callstack 0
  6646  001082                     _TeTeclat:
  6647                           	callstack 27
  6648                           
  6649                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6650                           
  6651                           ;incstack = 0
  6652  001082  A083               	btfss	131,0,c	;volatile
  6653  001084  D003               	goto	u5710
  6654  001086  6A6A               	clrf	??_TeTeclat^0,c
  6655  001088  2A6A               	incf	??_TeTeclat^0,f,c
  6656  00108A  D001               	goto	u5718
  6657  00108C                     u5710:
  6658  00108C  6A6A               	clrf	??_TeTeclat^0,c
  6659  00108E                     u5718:
  6660  00108E  0E01               	movlw	1
  6661  001090  A283               	btfss	131,1,c	;volatile
  6662  001092  0E00               	movlw	0
  6663  001094  0D02               	mullw	2
  6664  001096  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  6665  00109A  0E01               	movlw	1
  6666  00109C  A483               	btfss	131,2,c	;volatile
  6667  00109E  0E00               	movlw	0
  6668  0010A0  0D03               	mullw	3
  6669  0010A2  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  6670  0010A6  0E01               	movlw	1
  6671  0010A8  A683               	btfss	131,3,c	;volatile
  6672  0010AA  0E00               	movlw	0
  6673  0010AC  0D04               	mullw	4
  6674  0010AE  50F3               	movf	243,w,c
  6675  0010B0  246C               	addwf	(??_TeTeclat+2)^0,w,c
  6676  0010B2  246B               	addwf	(??_TeTeclat+1)^0,w,c
  6677  0010B4  246A               	addwf	??_TeTeclat^0,w,c
  6678  0010B6  6E33               	movwf	TeTeclat@files^0,c
  6679                           
  6680                           ;TeTeclat.c: 27:  switch(state) {
  6681  0010B8  D058               	goto	l5863
  6682  0010BA                     l5789:
  6683                           
  6684                           ;TeTeclat.c: 29:    if (files==0) {
  6685  0010BA  5033               	movf	TeTeclat@files^0,w,c
  6686  0010BC  E106               	bnz	l5795
  6687                           
  6688                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  6689  0010BE  888C               	bsf	140,4,c	;volatile
  6690                           
  6691                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  6692  0010C0  9A8C               	bcf	140,5,c	;volatile
  6693                           
  6694                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  6695  0010C2  9C8C               	bcf	140,6,c	;volatile
  6696                           
  6697                           ;TeTeclat.c: 33:     cols=0;
  6698  0010C4  6A34               	clrf	TeTeclat@cols^0,c
  6699  0010C6                     l5793:
  6700                           
  6701                           ;TeTeclat.c: 34:     state++;
  6702  0010C6  2A35               	incf	TeTeclat@state^0,f,c
  6703                           
  6704                           ;TeTeclat.c: 35:    }
  6705  0010C8  0012               	return	
  6706  0010CA                     l5795:
  6707  0010CA  5033               	movf	TeTeclat@files^0,w,c
  6708  0010CC  B4D8               	btfsc	status,2,c
  6709  0010CE  0012               	return	
  6710                           
  6711                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  6712  0010D0  5036               	movf	_tiTeclat^0,w,c
  6713  0010D2  ECE5  F00D         	call	_TiResetTics
  6714  0010D6                     l5799:
  6715                           
  6716                           ;TeTeclat.c: 38:     state = 3;
  6717  0010D6  0E03               	movlw	3
  6718  0010D8  6E35               	movwf	TeTeclat@state^0,c
  6719  0010DA  0C03               	retlw	3
  6720  0010DC                     l5801:
  6721                           
  6722                           ;TeTeclat.c: 42:    if (files==0) {
  6723  0010DC  5033               	movf	TeTeclat@files^0,w,c
  6724  0010DE  E106               	bnz	l5809
  6725                           
  6726                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  6727  0010E0  988C               	bcf	140,4,c	;volatile
  6728                           
  6729                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  6730  0010E2  8A8C               	bsf	140,5,c	;volatile
  6731                           
  6732                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  6733  0010E4  9C8C               	bcf	140,6,c	;volatile
  6734                           
  6735                           ;TeTeclat.c: 46:     cols=1;
  6736  0010E6  0E01               	movlw	1
  6737  0010E8  6E34               	movwf	TeTeclat@cols^0,c
  6738  0010EA  D7ED               	goto	l5793
  6739  0010EC                     l5809:
  6740  0010EC  5033               	movf	TeTeclat@files^0,w,c
  6741  0010EE  B4D8               	btfsc	status,2,c
  6742  0010F0  0012               	return	
  6743                           
  6744                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  6745  0010F2  5036               	movf	_tiTeclat^0,w,c
  6746  0010F4  ECE5  F00D         	call	_TiResetTics
  6747  0010F8  D7EE               	goto	l5799
  6748  0010FA                     l5815:
  6749                           
  6750                           ;TeTeclat.c: 55:    if (files==0) {
  6751  0010FA  5033               	movf	TeTeclat@files^0,w,c
  6752  0010FC  E107               	bnz	l5823
  6753                           
  6754                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  6755  0010FE  988C               	bcf	140,4,c	;volatile
  6756                           
  6757                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  6758  001100  9A8C               	bcf	140,5,c	;volatile
  6759                           
  6760                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  6761  001102  8C8C               	bsf	140,6,c	;volatile
  6762                           
  6763                           ;TeTeclat.c: 59:     cols=2;
  6764  001104  0E02               	movlw	2
  6765  001106  6E34               	movwf	TeTeclat@cols^0,c
  6766  001108                     l5821:
  6767                           
  6768                           ;TeTeclat.c: 60:     state = 0;
  6769  001108  6A35               	clrf	TeTeclat@state^0,c
  6770                           
  6771                           ;TeTeclat.c: 61:    }
  6772  00110A  0012               	return	
  6773  00110C                     l5823:
  6774  00110C  5033               	movf	TeTeclat@files^0,w,c
  6775  00110E  B4D8               	btfsc	status,2,c
  6776  001110  0012               	return	
  6777                           
  6778                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  6779  001112  5036               	movf	_tiTeclat^0,w,c
  6780  001114  ECE5  F00D         	call	_TiResetTics
  6781  001118  D7D6               	goto	l5793
  6782  00111A                     l5829:
  6783                           
  6784                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  6785  00111A  5036               	movf	_tiTeclat^0,w,c
  6786  00111C  EC41  F00D         	call	_TiGetTics
  6787  001120  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  6788  001122  0012               	return	
  6789  001124  D7D0               	goto	l5793
  6790  001126                     l5833:
  6791                           
  6792                           ;TeTeclat.c: 73:    if (files==0) {
  6793  001126  5033               	movf	TeTeclat@files^0,w,c
  6794  001128  E103               	bnz	l5837
  6795                           
  6796                           ;TeTeclat.c: 74:     state = 1;
  6797  00112A  0E01               	movlw	1
  6798  00112C  6E35               	movwf	TeTeclat@state^0,c
  6799                           
  6800                           ;TeTeclat.c: 75:    }
  6801  00112E  0C01               	retlw	1
  6802  001130                     l5837:
  6803  001130  5033               	movf	TeTeclat@files^0,w,c
  6804  001132  B4D8               	btfsc	status,2,c
  6805  001134  0012               	return	
  6806                           
  6807                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  6808  001136  D830               	call	PL18	;call to abstracted procedure
  6809  001138  EC8E  F00E         	call	_MsetNovaTecla
  6810                           
  6811                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  6812  00113C  D82D               	call	PL18	;call to abstracted procedure
  6813  00113E  EC8A  F00E         	call	_SsetNovaTecla
  6814  001142  D7C1               	goto	l5793
  6815  001144                     l5843:
  6816                           
  6817                           ;TeTeclat.c: 84:    if (files==0) {
  6818  001144  5033               	movf	TeTeclat@files^0,w,c
  6819  001146  A4D8               	btfss	status,2,c
  6820  001148  0012               	return	
  6821                           
  6822                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  6823  00114A  5036               	movf	_tiTeclat^0,w,c
  6824  00114C  ECE5  F00D         	call	_TiResetTics
  6825  001150  D7BA               	goto	l5793
  6826  001152                     l5849:
  6827                           
  6828                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  6829  001152  5036               	movf	_tiTeclat^0,w,c
  6830  001154  EC41  F00D         	call	_TiGetTics
  6831  001158  D7E3               	goto	L3
  6832  00115A                     l5853:
  6833                           
  6834                           ;TeTeclat.c: 95:    if (files!=0) {
  6835  00115A  5033               	movf	TeTeclat@files^0,w,c
  6836  00115C  E003               	bz	l5857
  6837                           
  6838                           ;TeTeclat.c: 96:     state = 5;
  6839  00115E  0E05               	movlw	5
  6840  001160  6E35               	movwf	TeTeclat@state^0,c
  6841                           
  6842                           ;TeTeclat.c: 97:    }
  6843  001162  0C05               	retlw	5
  6844  001164                     l5857:
  6845  001164  5033               	movf	TeTeclat@files^0,w,c
  6846  001166  E0D0               	bz	l5821
  6847  001168  0012               	return	
  6848  00116A                     l5863:
  6849  00116A  5035               	movf	TeTeclat@state^0,w,c
  6850  00116C  6E6A               	movwf	??_TeTeclat^0,c
  6851  00116E  6A6B               	clrf	(??_TeTeclat+1)^0,c
  6852                           
  6853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6854                           ; Switch size 1, requested type "space"
  6855                           ; Number of cases is 1, Range of values is 0 to 0
  6856                           ; switch strategies available:
  6857                           ; Name         Instructions Cycles
  6858                           ; simple_byte            4     3 (average)
  6859                           ;	Chosen strategy is simple_byte
  6860  001170  506B               	movf	(??_TeTeclat+1)^0,w,c
  6861  001172  A4D8               	btfss	status,2,c
  6862  001174  0012               	return	
  6863                           
  6864                           ; Switch size 1, requested type "space"
  6865                           ; Number of cases is 8, Range of values is 0 to 7
  6866                           ; switch strategies available:
  6867                           ; Name         Instructions Cycles
  6868                           ; simple_byte           25    13 (average)
  6869                           ;	Chosen strategy is simple_byte
  6870  001176  506A               	movf	??_TeTeclat^0,w,c
  6871  001178  E0A0               	bz	l5789
  6872  00117A  0A01               	xorlw	1	; case 1
  6873  00117C  E0AF               	bz	l5801
  6874  00117E  0A03               	xorlw	3	; case 2
  6875  001180  E0BC               	bz	l5815
  6876  001182  0A01               	xorlw	1	; case 3
  6877  001184  E0CA               	bz	l5829
  6878  001186  0A07               	xorlw	7	; case 4
  6879  001188  E0CE               	bz	l5833
  6880  00118A  0A01               	xorlw	1	; case 5
  6881  00118C  E0DB               	bz	l5843
  6882  00118E  0A03               	xorlw	3	; case 6
  6883  001190  E0E0               	bz	l5849
  6884  001192  0A01               	xorlw	1	; case 7
  6885  001194  E0E2               	bz	l5853
  6886  001196  0012               	return		;funcret
  6887  001198                     __end_of_TeTeclat:
  6888                           	callstack 0
  6889  001198                     PL18:
  6890                           	callstack 27
  6891  001198  5033               	movf	TeTeclat@files^0,w,c
  6892  00119A  0D03               	mullw	3
  6893  00119C  50F3               	movf	243,w,c
  6894  00119E  0FB0               	addlw	low (_teclaPremuda+253)
  6895  0011A0  2434               	addwf	TeTeclat@cols^0,w,c
  6896  0011A2  6ED9               	movwf	fsr2l,c
  6897  0011A4  6ADA               	clrf	fsr2h,c
  6898  0011A6  50DF               	movf	indf2,w,c
  6899  0011A8  0012               	return	
  6900  0011AA                     __end_ofPL18:
  6901                           	callstack 0
  6902                           
  6903 ;; *************** function _SsetNovaTecla *****************
  6904 ;; Defined at:
  6905 ;;		line 125 in file "Ssms.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  tecla           1    wreg     unsigned char 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  tecla           1    5[COMRAM] unsigned char 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/1
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1
  6919 ;;      Params:         0       0       0
  6920 ;;      Locals:         1       0       0
  6921 ;;      Temps:          0       0       0
  6922 ;;      Totals:         1       0       0
  6923 ;;Total ram usage:        1 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 2
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_TeTeclat
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text59
  6934  001D14                     __ptext59:
  6935                           	callstack 0
  6936  001D14                     _SsetNovaTecla:
  6937                           	callstack 27
  6938                           
  6939                           ;incstack = 0
  6940                           ;SsetNovaTecla@tecla stored from wreg
  6941  001D14  6E63               	movwf	SsetNovaTecla@tecla^0,c
  6942                           
  6943                           ;Ssms.c: 126:     novaTecla = tecla;
  6944  001D16  C063  F053         	movff	SsetNovaTecla@tecla,_novaTecla
  6945  001D1A  0012               	return		;funcret
  6946  001D1C                     __end_of_SsetNovaTecla:
  6947                           	callstack 0
  6948                           
  6949 ;; *************** function _MsetNovaTecla *****************
  6950 ;; Defined at:
  6951 ;;		line 28 in file "Menu.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  tecla           1    wreg     unsigned char 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  tecla           1    5[COMRAM] unsigned char 
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      void 
  6958 ;; Registers used:
  6959 ;;		wreg
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/1
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1
  6965 ;;      Params:         0       0       0
  6966 ;;      Locals:         1       0       0
  6967 ;;      Temps:          0       0       0
  6968 ;;      Totals:         1       0       0
  6969 ;;Total ram usage:        1 bytes
  6970 ;; Hardware stack levels used: 1
  6971 ;; Hardware stack levels required when called: 2
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_TeTeclat
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text60
  6980  001D1C                     __ptext60:
  6981                           	callstack 0
  6982  001D1C                     _MsetNovaTecla:
  6983                           	callstack 27
  6984                           
  6985                           ;incstack = 0
  6986                           ;MsetNovaTecla@tecla stored from wreg
  6987  001D1C  6E63               	movwf	MsetNovaTecla@tecla^0,c
  6988                           
  6989                           ;Menu.c: 29:     NovaTecla = tecla;
  6990  001D1E  C063  F050         	movff	MsetNovaTecla@tecla,_NovaTecla
  6991  001D22  0012               	return		;funcret
  6992  001D24                     __end_of_MsetNovaTecla:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function _TeInit *****************
  6996 ;; Defined at:
  6997 ;;		line 18 in file "TeTeclat.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;		None
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;		None
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1
  7011 ;;      Params:         0       0       0
  7012 ;;      Locals:         0       0       0
  7013 ;;      Temps:          0       0       0
  7014 ;;      Totals:         0       0       0
  7015 ;;Total ram usage:        0 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 3
  7018 ;; This function calls:
  7019 ;;		_TiGetTimer
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text61
  7026  001D24                     __ptext61:
  7027                           	callstack 0
  7028  001D24                     _TeInit:
  7029                           	callstack 27
  7030                           
  7031                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  7032                           
  7033                           ;incstack = 0
  7034  001D24  EC03  F00D         	call	_TiGetTimer	;wreg free
  7035  001D28  6E36               	movwf	_tiTeclat^0,c
  7036  001D2A  0012               	return		;funcret
  7037  001D2C                     __end_of_TeInit:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _Sinit *****************
  7041 ;; Defined at:
  7042 ;;		line 18 in file "Ssms.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1
  7056 ;;      Params:         0       0       0
  7057 ;;      Locals:         0       0       0
  7058 ;;      Temps:          0       0       0
  7059 ;;      Totals:         0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 3
  7063 ;; This function calls:
  7064 ;;		_TiGetTimer
  7065 ;; This function is called by:
  7066 ;;		_main
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text62
  7071  001D2C                     __ptext62:
  7072                           	callstack 0
  7073  001D2C                     _Sinit:
  7074                           	callstack 27
  7075                           
  7076                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7077                           
  7078                           ;incstack = 0
  7079  001D2C  EC03  F00D         	call	_TiGetTimer	;wreg free
  7080  001D30  6E52               	movwf	_timerSMS^0,c
  7081  001D32  0012               	return		;funcret
  7082  001D34                     __end_of_Sinit:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _SMotor *****************
  7086 ;; Defined at:
  7087 ;;		line 22 in file "Ssms.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1
  7101 ;;      Params:         0       0       0
  7102 ;;      Locals:         0       0       0
  7103 ;;      Temps:          2       0       0
  7104 ;;      Totals:         2       0       0
  7105 ;;Total ram usage:        2 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 3
  7108 ;; This function calls:
  7109 ;;		_MNovaLletra
  7110 ;;		_TiGetTics
  7111 ;;		_TiResetTics
  7112 ;; This function is called by:
  7113 ;;		_main
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text63
  7118  000ED4                     __ptext63:
  7119                           	callstack 0
  7120  000ED4                     _SMotor:
  7121                           	callstack 27
  7122                           
  7123                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7124                           
  7125                           ;incstack = 0
  7126  000ED4  D0BA               	goto	l4699
  7127  000ED6                     l4539:
  7128                           
  7129                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7130  000ED6  2853               	incf	_novaTecla^0,w,c
  7131  000ED8  E008               	bz	l4547
  7132  000EDA  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7133  000EDC  D006               	goto	l4547
  7134                           
  7135                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7136  000EDE  5052               	movf	_timerSMS^0,w,c
  7137  000EE0  ECE5  F00D         	call	_TiResetTics
  7138                           
  7139                           ;Ssms.c: 29:     state = 3;
  7140  000EE4  0E03               	movlw	3
  7141  000EE6  6E37               	movwf	SMotor@state^0,c
  7142                           
  7143                           ;Ssms.c: 30:    }
  7144  000EE8  0C03               	retlw	3
  7145  000EEA                     l4547:
  7146  000EEA  2853               	incf	_novaTecla^0,w,c
  7147  000EEC  A4D8               	btfss	status,2,c
  7148  000EEE  0012               	return	
  7149  000EF0  5052               	movf	_timerSMS^0,w,c
  7150  000EF2  EC41  F00D         	call	_TiGetTics
  7151  000EF6  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  7152  000EF8  0012               	return	
  7153  000EFA  D8BE               	call	PL66	;call to abstracted procedure
  7154  000EFC  A0D8               	btfss	status,0,c
  7155  000EFE  0012               	return	
  7156  000F00  2854               	incf	_lletraASCII^0,w,c
  7157  000F02  A4D8               	btfss	status,2,c
  7158  000F04  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7159  000F06  0012               	return	
  7160                           
  7161                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7162  000F08  5054               	movf	_lletraASCII^0,w,c
  7163  000F0A  EC9A  F00E         	call	_MNovaLletra
  7164                           
  7165                           ;Ssms.c: 33:     lletraASCII = -1;
  7166  000F0E  6854               	setf	_lletraASCII^0,c
  7167                           
  7168                           ;Ssms.c: 34:     ultimaTecla = -1;
  7169  000F10  6851               	setf	_ultimaTecla^0,c
  7170                           
  7171                           ;Ssms.c: 35:     zeroTecla = 0;
  7172  000F12  6A38               	clrf	_zeroTecla^0,c
  7173  000F14                     l4563:
  7174                           
  7175                           ;Ssms.c: 36:     state = 0;
  7176  000F14  6A37               	clrf	SMotor@state^0,c
  7177  000F16  0012               	return	
  7178  000F18                     l4565:
  7179                           
  7180                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7181  000F18  5051               	movf	_ultimaTecla^0,w,c
  7182  000F1A  1853               	xorwf	_novaTecla^0,w,c
  7183  000F1C  E10D               	bnz	l4575
  7184  000F1E  5052               	movf	_timerSMS^0,w,c
  7185  000F20  EC41  F00D         	call	_TiGetTics
  7186  000F24  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  7187  000F26  D002               	goto	u3660
  7188  000F28  D8A7               	call	PL66	;call to abstracted procedure
  7189  000F2A  E206               	bc	l4575
  7190  000F2C                     u3660:
  7191                           
  7192                           ;Ssms.c: 41:     novaTecla = -1;
  7193  000F2C  6853               	setf	_novaTecla^0,c
  7194                           
  7195                           ;Ssms.c: 42:     sumaPulsacions++;
  7196  000F2E  2A39               	incf	_sumaPulsacions^0,f,c
  7197                           
  7198                           ;Ssms.c: 43:     lletraASCII++;
  7199  000F30  2A54               	incf	_lletraASCII^0,f,c
  7200                           
  7201                           ;Ssms.c: 44:     state = 2;
  7202  000F32  0E02               	movlw	2
  7203  000F34  6E37               	movwf	SMotor@state^0,c
  7204                           
  7205                           ;Ssms.c: 45:    }
  7206  000F36  0C02               	retlw	2
  7207  000F38                     l4575:
  7208  000F38  2853               	incf	_novaTecla^0,w,c
  7209  000F3A  B4D8               	btfsc	status,2,c
  7210  000F3C  0012               	return	
  7211  000F3E  5051               	movf	_ultimaTecla^0,w,c
  7212  000F40  1853               	xorwf	_novaTecla^0,w,c
  7213  000F42  B4D8               	btfsc	status,2,c
  7214  000F44  0012               	return	
  7215                           
  7216                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  7217  000F46  5054               	movf	_lletraASCII^0,w,c
  7218  000F48  EC9A  F00E         	call	_MNovaLletra
  7219                           
  7220                           ;Ssms.c: 48:     if(novaTecla != 0){
  7221  000F4C  5053               	movf	_novaTecla^0,w,c
  7222  000F4E  E005               	bz	l4585
  7223                           
  7224                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  7225  000F50  5053               	movf	_novaTecla^0,w,c
  7226  000F52  0FA8               	addlw	low (_lletraInici+254)
  7227  000F54  EC66  F007         	call	PL42	;call to abstracted procedure
  7228  000F58  D001               	goto	L4
  7229  000F5A                     l4585:
  7230                           
  7231                           ;Ssms.c: 51:       lletraASCII = '0';
  7232  000F5A  0E30               	movlw	48
  7233  000F5C                     L4:
  7234  000F5C  6E54               	movwf	_lletraASCII^0,c
  7235                           
  7236                           ;Ssms.c: 53:     zeroTecla=0;
  7237  000F5E  6A38               	clrf	_zeroTecla^0,c
  7238                           
  7239                           ;Ssms.c: 54:     ultimaTecla = novaTecla;
  7240  000F60  C053  F051         	movff	_novaTecla,_ultimaTecla
  7241                           
  7242                           ;Ssms.c: 55:     sumaPulsacions = 0;
  7243  000F64  6A39               	clrf	_sumaPulsacions^0,c
  7244  000F66                     l4593:
  7245                           
  7246                           ;Ssms.c: 56:     novaTecla = -1;
  7247  000F66  6853               	setf	_novaTecla^0,c
  7248  000F68  D7D5               	goto	l4563
  7249  000F6A                     l4597:
  7250                           
  7251                           ;Ssms.c: 61:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7252  000F6A  0E07               	movlw	7
  7253  000F6C  1851               	xorwf	_ultimaTecla^0,w,c
  7254  000F6E  E008               	bz	l4605
  7255  000F70  0E09               	movlw	9
  7256  000F72  1851               	xorwf	_ultimaTecla^0,w,c
  7257  000F74  E005               	bz	l4605
  7258  000F76  5051               	movf	_ultimaTecla^0,w,c
  7259  000F78  E003               	bz	l4605
  7260                           
  7261                           ;Ssms.c: 62:     state = 5;
  7262  000F7A  0E05               	movlw	5
  7263  000F7C  6E37               	movwf	SMotor@state^0,c
  7264                           
  7265                           ;Ssms.c: 63:    }
  7266  000F7E  0C05               	retlw	5
  7267  000F80                     l4605:
  7268  000F80  0E07               	movlw	7
  7269  000F82  1851               	xorwf	_ultimaTecla^0,w,c
  7270  000F84  E003               	bz	u3740
  7271  000F86  0E09               	movlw	9
  7272  000F88  1851               	xorwf	_ultimaTecla^0,w,c
  7273  000F8A  E103               	bnz	l4611
  7274  000F8C                     u3740:
  7275                           
  7276                           ;Ssms.c: 65:     state = 6;
  7277  000F8C  0E06               	movlw	6
  7278  000F8E  6E37               	movwf	SMotor@state^0,c
  7279                           
  7280                           ;Ssms.c: 66:    }
  7281  000F90  0C06               	retlw	6
  7282  000F92                     l4611:
  7283  000F92  5051               	movf	_ultimaTecla^0,w,c
  7284  000F94  A4D8               	btfss	status,2,c
  7285  000F96  0012               	return	
  7286                           
  7287                           ;Ssms.c: 68:     zeroTecla++;
  7288  000F98  2A38               	incf	_zeroTecla^0,f,c
  7289                           
  7290                           ;Ssms.c: 69:     if(zeroTecla == 2) zeroTecla = 0;
  7291  000F9A  0E02               	movlw	2
  7292  000F9C  1838               	xorwf	_zeroTecla^0,w,c
  7293  000F9E  E101               	bnz	l4619
  7294  000FA0  6A38               	clrf	_zeroTecla^0,c
  7295  000FA2                     l4619:
  7296                           
  7297                           ;Ssms.c: 70:     lletraASCII = arrayZero[zeroTecla];
  7298  000FA2  5038               	movf	_zeroTecla^0,w,c
  7299  000FA4  0F42               	addlw	low _arrayZero
  7300  000FA6  EC66  F007         	call	PL42	;call to abstracted procedure
  7301  000FAA  D041               	goto	L5
  7302  000FAC                     l4623:
  7303                           
  7304                           ;Ssms.c: 75:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7305  000FAC  5053               	movf	_novaTecla^0,w,c
  7306  000FAE  0A80               	xorlw	128
  7307  000FB0  0F7E               	addlw	-130
  7308  000FB2  E202               	bc	u3780
  7309  000FB4  5053               	movf	_novaTecla^0,w,c
  7310  000FB6  E107               	bnz	l4631
  7311  000FB8                     u3780:
  7312  000FB8  5053               	movf	_novaTecla^0,w,c
  7313  000FBA  0A80               	xorlw	128
  7314  000FBC  0F76               	addlw	-138
  7315  000FBE  E203               	bc	l4631
  7316                           
  7317                           ;Ssms.c: 76:     state = 1;
  7318  000FC0  0E01               	movlw	1
  7319  000FC2  6E37               	movwf	SMotor@state^0,c
  7320                           
  7321                           ;Ssms.c: 77:    }
  7322  000FC4  0C01               	retlw	1
  7323  000FC6                     l4631:
  7324  000FC6  5053               	movf	_novaTecla^0,w,c
  7325  000FC8  E00B               	bz	l4643
  7326  000FCA  5053               	movf	_novaTecla^0,w,c
  7327  000FCC  0A80               	xorlw	128
  7328  000FCE  0F7E               	addlw	-130
  7329  000FD0  E207               	bc	l4643
  7330  000FD2  2854               	incf	_lletraASCII^0,w,c
  7331  000FD4  E105               	bnz	l4643
  7332                           
  7333                           ;Ssms.c: 79:     MNovaLletra(novaTecla+48);
  7334  000FD6  5053               	movf	_novaTecla^0,w,c
  7335  000FD8  0F30               	addlw	48
  7336  000FDA  EC9A  F00E         	call	_MNovaLletra
  7337  000FDE  D7C3               	goto	l4593
  7338  000FE0                     l4643:
  7339  000FE0  5053               	movf	_novaTecla^0,w,c
  7340  000FE2  B4D8               	btfsc	status,2,c
  7341  000FE4  0012               	return	
  7342  000FE6  5053               	movf	_novaTecla^0,w,c
  7343  000FE8  0A80               	xorlw	128
  7344  000FEA  0F7E               	addlw	-130
  7345  000FEC  B0D8               	btfsc	status,0,c
  7346  000FEE  0012               	return	
  7347  000FF0  2854               	incf	_lletraASCII^0,w,c
  7348  000FF2  B4D8               	btfsc	status,2,c
  7349  000FF4  0012               	return	
  7350                           
  7351                           ;Ssms.c: 84:     MNovaLletra(lletraASCII);
  7352  000FF6  5054               	movf	_lletraASCII^0,w,c
  7353  000FF8  EC9A  F00E         	call	_MNovaLletra
  7354                           
  7355                           ;Ssms.c: 85:     lletraASCII = -1;
  7356  000FFC  6854               	setf	_lletraASCII^0,c
  7357                           
  7358                           ;Ssms.c: 86:     state = 4;
  7359  000FFE  0E04               	movlw	4
  7360  001000  6E37               	movwf	SMotor@state^0,c
  7361  001002  0C04               	retlw	4
  7362  001004                     l4655:
  7363                           
  7364                           ;Ssms.c: 90:    MNovaLletra(novaTecla+48);
  7365  001004  5053               	movf	_novaTecla^0,w,c
  7366  001006  0F30               	addlw	48
  7367  001008  EC9A  F00E         	call	_MNovaLletra
  7368  00100C  D7AC               	goto	l4593
  7369  00100E                     l4661:
  7370                           
  7371                           ;Ssms.c: 95:    if (sumaPulsacions == 4) {
  7372  00100E  0E04               	movlw	4
  7373  001010  1839               	xorwf	_sumaPulsacions^0,w,c
  7374  001012  E108               	bnz	l4669
  7375  001014                     u3860:
  7376                           
  7377                           ;Ssms.c: 96:     lletraASCII = lletraInici[ultimaTecla-2];
  7378  001014  5051               	movf	_ultimaTecla^0,w,c
  7379  001016  0FA8               	addlw	low (_lletraInici+254)
  7380  001018  6ED9               	movwf	fsr2l,c
  7381  00101A  6ADA               	clrf	fsr2h,c
  7382  00101C  50DF               	movf	indf2,w,c
  7383  00101E  6E54               	movwf	_lletraASCII^0,c
  7384                           
  7385                           ;Ssms.c: 97:     sumaPulsacions = 0;
  7386  001020  6A39               	clrf	_sumaPulsacions^0,c
  7387  001022  D778               	goto	l4563
  7388  001024                     l4669:
  7389  001024  0E03               	movlw	3
  7390  001026  1839               	xorwf	_sumaPulsacions^0,w,c
  7391  001028  E104               	bnz	l4675
  7392  00102A                     u3870:
  7393                           
  7394                           ;Ssms.c: 101:     lletraASCII = ultimaTecla+48;
  7395  00102A  5051               	movf	_ultimaTecla^0,w,c
  7396  00102C  0F30               	addlw	48
  7397  00102E                     L5:
  7398  00102E  6E54               	movwf	_lletraASCII^0,c
  7399  001030  D771               	goto	l4563
  7400  001032                     l4675:
  7401  001032  0E03               	movlw	3
  7402  001034  6039               	cpfslt	_sumaPulsacions^0,c
  7403  001036  0012               	return	
  7404  001038  D76D               	goto	l4563
  7405  00103A                     l4679:
  7406                           
  7407                           ;Ssms.c: 109:    if (sumaPulsacions == 4) {
  7408  00103A  0E04               	movlw	4
  7409  00103C  1839               	xorwf	_sumaPulsacions^0,w,c
  7410  00103E  E0F5               	bz	u3870
  7411  001040  0E05               	movlw	5
  7412  001042  1839               	xorwf	_sumaPulsacions^0,w,c
  7413  001044  E0E7               	bz	u3860
  7414  001046  0E04               	movlw	4
  7415  001048  D7F5               	goto	L6
  7416  00104A                     l4699:
  7417  00104A  5037               	movf	SMotor@state^0,w,c
  7418  00104C  6E6A               	movwf	??_SMotor^0,c
  7419  00104E  6A6B               	clrf	(??_SMotor+1)^0,c
  7420                           
  7421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7422                           ; Switch size 1, requested type "space"
  7423                           ; Number of cases is 1, Range of values is 0 to 0
  7424                           ; switch strategies available:
  7425                           ; Name         Instructions Cycles
  7426                           ; simple_byte            4     3 (average)
  7427                           ;	Chosen strategy is simple_byte
  7428  001050  506B               	movf	(??_SMotor+1)^0,w,c
  7429  001052  A4D8               	btfss	status,2,c
  7430  001054  0012               	return	
  7431                           
  7432                           ; Switch size 1, requested type "space"
  7433                           ; Number of cases is 7, Range of values is 0 to 6
  7434                           ; switch strategies available:
  7435                           ; Name         Instructions Cycles
  7436                           ; simple_byte           22    12 (average)
  7437                           ;	Chosen strategy is simple_byte
  7438  001056  506A               	movf	??_SMotor^0,w,c
  7439  001058  E101 D73D          	bz	l4539
  7440  00105C  0A01               	xorlw	1	; case 1
  7441  00105E  E101 D75B          	bz	l4565
  7442  001062  0A03               	xorlw	3	; case 2
  7443  001064  E082               	bz	l4597
  7444  001066  0A01               	xorlw	1	; case 3
  7445  001068  E0A1               	bz	l4623
  7446  00106A  0A07               	xorlw	7	; case 4
  7447  00106C  E0CB               	bz	l4655
  7448  00106E  0A01               	xorlw	1	; case 5
  7449  001070  E0CE               	bz	l4661
  7450  001072  0A03               	xorlw	3	; case 6
  7451  001074  E0E2               	bz	l4679
  7452  001076  0012               	return		;funcret
  7453  001078                     __end_of_SMotor:
  7454                           	callstack 0
  7455  001078                     PL66:
  7456                           	callstack 27
  7457  001078  0E5A               	movlw	90
  7458  00107A  5C63               	subwf	?_TiGetTics^0,w,c
  7459  00107C  0E02               	movlw	2
  7460  00107E  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  7461  001080  0012               	return	
  7462  001082                     __end_ofPL66:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function _MNovaLletra *****************
  7466 ;; Defined at:
  7467 ;;		line 32 in file "Menu.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  lletra          1    wreg     unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  lletra          1    5[COMRAM] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1
  7481 ;;      Params:         0       0       0
  7482 ;;      Locals:         1       0       0
  7483 ;;      Temps:          0       0       0
  7484 ;;      Totals:         1       0       0
  7485 ;;Total ram usage:        1 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 2
  7488 ;; This function calls:
  7489 ;;		Nothing
  7490 ;; This function is called by:
  7491 ;;		_SMotor
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text64
  7496  001D34                     __ptext64:
  7497                           	callstack 0
  7498  001D34                     _MNovaLletra:
  7499                           	callstack 27
  7500                           
  7501                           ;incstack = 0
  7502                           ;MNovaLletra@lletra stored from wreg
  7503  001D34  6E63               	movwf	MNovaLletra@lletra^0,c
  7504                           
  7505                           ;Menu.c: 33:     novaLletra = lletra;
  7506  001D36  C063  F04F         	movff	MNovaLletra@lletra,_novaLletra
  7507  001D3A  0012               	return		;funcret
  7508  001D3C                     __end_of_MNovaLletra:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _Minit *****************
  7512 ;; Defined at:
  7513 ;;		line 25 in file "Menu.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1
  7527 ;;      Params:         0       0       0
  7528 ;;      Locals:         0       0       0
  7529 ;;      Temps:          0       0       0
  7530 ;;      Totals:         0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 3
  7534 ;; This function calls:
  7535 ;;		_TiGetTimer
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text65
  7542  001D3C                     __ptext65:
  7543                           	callstack 0
  7544  001D3C                     _Minit:
  7545                           	callstack 27
  7546                           
  7547                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  7548                           
  7549                           ;incstack = 0
  7550  001D3C  EC03  F00D         	call	_TiGetTimer	;wreg free
  7551  001D40  6E30               	movwf	_timerMenu^0,c
  7552  001D42  0012               	return		;funcret
  7553  001D44                     __end_of_Minit:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _LcLCD *****************
  7557 ;; Defined at:
  7558 ;;		line 246 in file "LcTLCD.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/1
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1
  7572 ;;      Params:         0       0       0
  7573 ;;      Locals:         0       0       0
  7574 ;;      Temps:          0       0       0
  7575 ;;      Totals:         0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 6
  7579 ;; This function calls:
  7580 ;;		_LcPutChar
  7581 ;; This function is called by:
  7582 ;;		_main
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text66
  7587  0017CE                     __ptext66:
  7588                           	callstack 0
  7589  0017CE                     _LcLCD:
  7590                           	callstack 24
  7591                           
  7592                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7593                           
  7594                           ;incstack = 0
  7595  0017CE  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7596  0017D0  0012               	return	
  7597                           
  7598                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7599  0017D2  D818               	call	PL32	;call to abstracted procedure
  7600  0017D4  64F7               	cpfsgt	tblptrh,c
  7601  0017D6  D003               	bra	u3527
  7602  0017D8  0008               	tblrd		*
  7603  0017DA  50F5               	movf	tablat,w,c
  7604  0017DC  D001               	bra	u3520
  7605  0017DE                     u3527:
  7606  0017DE  D819               	call	PL40	;call to abstracted procedure
  7607  0017E0                     u3520:
  7608  0017E0  EC0F  F00C         	call	_LcPutChar
  7609                           
  7610                           ;LcTLCD.c: 249:         s_ptr++;
  7611  0017E4  4A0D               	infsnz	_s_ptr^0,f,c
  7612  0017E6  2A0E               	incf	(_s_ptr+1)^0,f,c
  7613                           
  7614                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7615  0017E8  D80D               	call	PL32	;call to abstracted procedure
  7616  0017EA  64F7               	cpfsgt	tblptrh,c
  7617  0017EC  D003               	bra	u3537
  7618  0017EE  0008               	tblrd		*
  7619  0017F0  50F5               	movf	tablat,w,c
  7620  0017F2  D001               	bra	u3530
  7621  0017F4                     u3537:
  7622  0017F4  D80E               	call	PL40	;call to abstracted procedure
  7623  0017F6                     u3530:
  7624  0017F6  0900               	iorlw	0
  7625  0017F8  A4D8               	btfss	status,2,c
  7626  0017FA  0012               	return	
  7627                           
  7628                           ;LcTLCD.c: 251:             nou_s = 0;
  7629  0017FC  9279               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7630                           
  7631                           ;LcTLCD.c: 252:             s_ptr=0;
  7632  0017FE  6A0D               	clrf	_s_ptr^0,c
  7633  001800  6A0E               	clrf	(_s_ptr+1)^0,c
  7634  001802  0012               	return		;funcret
  7635  001804                     __end_of_LcLCD:
  7636                           	callstack 0
  7637  001804                     PL32:
  7638                           	callstack 24
  7639  001804  C00D  FFF6         	movff	_s_ptr,tblptrl
  7640  001808  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  7641  00180C  6AF8               	clrf	tblptru,c
  7642  00180E  0E01               	movlw	(high __ramtop+-1)
  7643  001810  0012               	return	
  7644  001812                     __end_ofPL32:
  7645                           	callstack 0
  7646  001812                     PL40:
  7647                           	callstack 24
  7648  001812  CFF6 FFE1          	movff	tblptrl,fsr1l
  7649  001816  CFF7 FFE2          	movff	tblptrh,fsr1h
  7650  00181A  50E7               	movf	indf1,w,c
  7651  00181C  0012               	return	
  7652  00181E                     __end_ofPL40:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function _LcInit *****************
  7656 ;; Defined at:
  7657 ;;		line 41 in file "LcTLCD.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  rows            1    wreg     unsigned char 
  7660 ;;  columns         1   16[COMRAM] unsigned char 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  rows            1   17[COMRAM] unsigned char 
  7663 ;;  i               2   18[COMRAM] int 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1
  7673 ;;      Params:         1       0       0
  7674 ;;      Locals:         3       0       0
  7675 ;;      Temps:          0       0       0
  7676 ;;      Totals:         4       0       0
  7677 ;;Total ram usage:        4 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 4
  7680 ;; This function calls:
  7681 ;;		_CantaIR
  7682 ;;		_EscriuPrimeraOrdre
  7683 ;;		_Espera
  7684 ;;		_TiGetTimer
  7685 ;;		_WaitForBusy
  7686 ;; This function is called by:
  7687 ;;		_main
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text67
  7692  001280                     __ptext67:
  7693                           	callstack 0
  7694  001280                     _LcInit:
  7695                           	callstack 26
  7696                           
  7697                           ;incstack = 0
  7698                           ;LcInit@rows stored from wreg
  7699  001280  6E6F               	movwf	LcInit@rows^0,c
  7700                           
  7701                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7702  001282  EC03  F00D         	call	_TiGetTimer	;wreg free
  7703  001286  6E3A               	movwf	_Timer^0,c
  7704                           
  7705                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  7706  001288  C06F  F03D         	movff	LcInit@rows,_Rows
  7707                           
  7708                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7709  00128C  6A3B               	clrf	_ColumnAct^0,c
  7710  00128E  6A3C               	clrf	_RowAct^0,c
  7711                           
  7712                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7713  001290  9894               	bcf	148,4,c	;volatile
  7714  001292  9E95               	bcf	149,7,c	;volatile
  7715  001294  9A94               	bcf	148,5,c	;volatile
  7716                           
  7717                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7718  001296  6A70               	clrf	LcInit@i^0,c
  7719  001298  6A71               	clrf	(LcInit@i+1)^0,c
  7720  00129A                     l4447:
  7721                           
  7722                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7723  00129A  6A6B               	clrf	(Espera@ms+1)^0,c
  7724  00129C  0E64               	movlw	100
  7725  00129E  6E6A               	movwf	Espera@ms^0,c
  7726  0012A0  503A               	movf	_Timer^0,w,c
  7727  0012A2  EC9B  F00D         	call	_Espera
  7728                           
  7729                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  7730  0012A6  0E03               	movlw	3
  7731  0012A8  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7732                           
  7733                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  7734  0012AC  6A6B               	clrf	(Espera@ms+1)^0,c
  7735  0012AE  0E05               	movlw	5
  7736  0012B0  6E6A               	movwf	Espera@ms^0,c
  7737  0012B2  503A               	movf	_Timer^0,w,c
  7738  0012B4  EC9B  F00D         	call	_Espera
  7739                           
  7740                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  7741  0012B8  0E03               	movlw	3
  7742  0012BA  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7743                           
  7744                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  7745  0012BE  D83A               	call	PL56	;call to abstracted procedure
  7746  0012C0  EC9B  F00D         	call	_Espera
  7747                           
  7748                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  7749  0012C4  0E03               	movlw	3
  7750  0012C6  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7751                           
  7752                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  7753  0012CA  D834               	call	PL56	;call to abstracted procedure
  7754  0012CC  EC9B  F00D         	call	_Espera
  7755                           
  7756                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  7757  0012D0  0E02               	movlw	2
  7758  0012D2  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7759                           
  7760                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  7761  0012D6  6A6B               	clrf	(Espera@ms+1)^0,c
  7762  0012D8  0E04               	movlw	4
  7763  0012DA  6E6A               	movwf	Espera@ms^0,c
  7764  0012DC  503A               	movf	_Timer^0,w,c
  7765  0012DE  EC9B  F00D         	call	_Espera
  7766                           
  7767                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  7768  0012E2  0E28               	movlw	40
  7769  0012E4  ECD7  F00D         	call	_CantaIR
  7770                           
  7771                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  7772  0012E8  EC76  F00C         	call	_WaitForBusy	;wreg free
  7773  0012EC  0E08               	movlw	8
  7774  0012EE  ECD7  F00D         	call	_CantaIR
  7775                           
  7776                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  7777  0012F2  EC76  F00C         	call	_WaitForBusy	;wreg free
  7778  0012F6  0E01               	movlw	1
  7779  0012F8  ECD7  F00D         	call	_CantaIR
  7780                           
  7781                           ;LcTLCD.c: 71:   Espera(Timer,3);
  7782  0012FC  EC96  F00D         	call	PL54	;call to abstracted procedure
  7783  001300  EC9B  F00D         	call	_Espera
  7784                           
  7785                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  7786  001304  EC76  F00C         	call	_WaitForBusy	;wreg free
  7787  001308  0E06               	movlw	6
  7788  00130A  ECD7  F00D         	call	_CantaIR
  7789                           
  7790                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  7791  00130E  EC76  F00C         	call	_WaitForBusy	;wreg free
  7792  001312  0E0F               	movlw	15
  7793  001314  ECD7  F00D         	call	_CantaIR
  7794                           
  7795                           ;LcTLCD.c: 74:  }
  7796  001318  4A70               	infsnz	LcInit@i^0,f,c
  7797  00131A  2A71               	incf	(LcInit@i+1)^0,f,c
  7798  00131C  BE71               	btfsc	(LcInit@i+1)^0,7,c
  7799  00131E  D7BD               	goto	l4447
  7800  001320  5071               	movf	(LcInit@i+1)^0,w,c
  7801  001322  E103               	bnz	u3500
  7802  001324  0E02               	movlw	2
  7803  001326  5C70               	subwf	LcInit@i^0,w,c
  7804  001328  E3B8               	bnc	l4447
  7805  00132A                     u3500:
  7806                           
  7807                           ;LcTLCD.c: 80:     WaitForBusy();
  7808  00132A  EC76  F00C         	call	_WaitForBusy	;wreg free
  7809                           
  7810                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  7811  00132E  0E0C               	movlw	12
  7812  001330  EFD7  F00D         	goto	_CantaIR
  7813  001334                     __end_of_LcInit:
  7814                           	callstack 0
  7815  001334                     PL56:
  7816                           	callstack 26
  7817  001334  6A6B               	clrf	(Espera@ms+1)^0,c
  7818  001336  0E01               	movlw	1
  7819  001338  6E6A               	movwf	Espera@ms^0,c
  7820  00133A  503A               	movf	_Timer^0,w,c
  7821  00133C  0012               	return	
  7822  00133E                     __end_ofPL56:
  7823                           	callstack 0
  7824                           
  7825 ;; *************** function _EscriuPrimeraOrdre *****************
  7826 ;; Defined at:
  7827 ;;		line 230 in file "LcTLCD.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  ordre           1    wreg     unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  ordre           1    6[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1
  7841 ;;      Params:         0       0       0
  7842 ;;      Locals:         1       0       0
  7843 ;;      Temps:          1       0       0
  7844 ;;      Totals:         2       0       0
  7845 ;;Total ram usage:        2 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_LcInit
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text68
  7856  001596                     __ptext68:
  7857                           	callstack 0
  7858  001596                     _EscriuPrimeraOrdre:
  7859                           	callstack 27
  7860                           
  7861                           ;incstack = 0
  7862                           ;EscriuPrimeraOrdre@ordre stored from wreg
  7863  001596  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  7864                           
  7865                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  7866  001598  9694               	bcf	148,3,c	;volatile
  7867                           
  7868                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  7869  00159A  D82F               	call	PL36	;call to abstracted procedure
  7870  00159C  888B               	bsf	139,4,c	;volatile
  7871                           
  7872                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  7873  00159E  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  7874  0015A0  D003               	goto	u230
  7875  0015A2  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7876  0015A4  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7877  0015A6  D001               	goto	u248
  7878  0015A8                     u230:
  7879  0015A8  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7880  0015AA                     u248:
  7881  0015AA  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7882  0015AC  D82D               	call	PL50	;call to abstracted procedure
  7883  0015AE  0BF7               	andlw	-9
  7884  0015B0  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7885  0015B2  6E8B               	movwf	139,c	;volatile
  7886                           
  7887                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7888  0015B4  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7889  0015B6  D003               	goto	u250
  7890  0015B8  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7891  0015BA  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7892  0015BC  D001               	goto	u268
  7893  0015BE                     u250:
  7894  0015BE  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7895  0015C0                     u268:
  7896  0015C0  D823               	call	PL50	;call to abstracted procedure
  7897  0015C2  0BFB               	andlw	-5
  7898  0015C4  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7899  0015C6  6E8B               	movwf	139,c	;volatile
  7900                           
  7901                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7902  0015C8  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7903  0015CA  D003               	goto	u270
  7904  0015CC  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7905  0015CE  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7906  0015D0  D001               	goto	u288
  7907  0015D2                     u270:
  7908  0015D2  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7909  0015D4                     u288:
  7910  0015D4  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7911  0015D6  508B               	movf	139,w,c	;volatile
  7912  0015D8  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7913  0015DA  0BFD               	andlw	-3
  7914  0015DC  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7915  0015DE  6E8B               	movwf	139,c	;volatile
  7916                           
  7917                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7918  0015E0  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7919  0015E2  D003               	goto	u290
  7920  0015E4  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7921  0015E6  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7922  0015E8  D001               	goto	u308
  7923  0015EA                     u290:
  7924  0015EA  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7925  0015EC                     u308:
  7926  0015EC  508B               	movf	139,w,c	;volatile
  7927  0015EE  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7928  0015F0  0BFE               	andlw	-2
  7929  0015F2  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7930  0015F4  6E8B               	movwf	139,c	;volatile
  7931                           
  7932                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7933  0015F6  988B               	bcf	139,4,c	;volatile
  7934  0015F8  0012               	return		;funcret
  7935  0015FA                     __end_of_EscriuPrimeraOrdre:
  7936                           	callstack 0
  7937  0015FA                     PL36:
  7938                           	callstack 24
  7939  0015FA  9494               	bcf	148,2,c	;volatile
  7940  0015FC  9294               	bcf	148,1,c	;volatile
  7941  0015FE  9094               	bcf	148,0,c	;volatile
  7942  001600  9A8B               	bcf	139,5,c	;volatile
  7943  001602  9E8C               	bcf	140,7,c	;volatile
  7944  001604  888B               	bsf	139,4,c	;volatile
  7945  001606  0012               	return	
  7946  001608                     __end_ofPL36:
  7947                           	callstack 0
  7948  001608                     PL50:
  7949                           	callstack 27
  7950  001608  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7951  00160A  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7952  00160C  508B               	movf	139,w,c	;volatile
  7953  00160E  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7954  001610  0012               	return	
  7955  001612                     __end_ofPL50:
  7956                           	callstack 0
  7957                           
  7958 ;; *************** function _JoystickMotor *****************
  7959 ;; Defined at:
  7960 ;;		line 18 in file "Joystick.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;		None
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;		None
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/1
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1
  7974 ;;      Params:         0       0       0
  7975 ;;      Locals:         0       0       0
  7976 ;;      Temps:          2       0       0
  7977 ;;      Totals:         2       0       0
  7978 ;;Total ram usage:        2 bytes
  7979 ;; Hardware stack levels used: 1
  7980 ;; Hardware stack levels required when called: 3
  7981 ;; This function calls:
  7982 ;;		_MNouJoystick
  7983 ;; This function is called by:
  7984 ;;		_main
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text69
  7989  0011AA                     __ptext69:
  7990                           	callstack 0
  7991  0011AA                     _JoystickMotor:
  7992                           	callstack 27
  7993                           
  7994                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7995                           
  7996                           ;incstack = 0
  7997  0011AA  D056               	goto	l3021
  7998  0011AC                     l980:
  7999                           
  8000                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8001  0011AC  B2C2               	btfsc	194,1,c	;volatile
  8002  0011AE  D00B               	goto	l981
  8003  0011B0  0EC8               	movlw	200
  8004  0011B2  60C4               	cpfslt	196,c	;volatile
  8005  0011B4  D008               	goto	l981
  8006  0011B6  0E32               	movlw	50
  8007  0011B8  64C4               	cpfsgt	196,c	;volatile
  8008  0011BA  D005               	goto	l981
  8009                           
  8010                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8011  0011BC  0E07               	movlw	7
  8012  0011BE  6EC2               	movwf	194,c	;volatile
  8013                           
  8014                           ;Joystick.c: 24:                 cap1 = 1;
  8015  0011C0  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8016  0011C2                     l2951:
  8017                           
  8018                           ;Joystick.c: 25:     state++;
  8019  0011C2  2A16               	incf	JoystickMotor@state^0,f,c
  8020                           
  8021                           ;Joystick.c: 26:    }
  8022  0011C4  D052               	goto	l988
  8023  0011C6                     l981:
  8024  0011C6  B2C2               	btfsc	194,1,c	;volatile
  8025  0011C8  D00F               	goto	l983
  8026  0011CA  0EC7               	movlw	199
  8027  0011CC  64C4               	cpfsgt	196,c	;volatile
  8028  0011CE  D00C               	goto	l983
  8029                           
  8030                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8031  0011D0  0E02               	movlw	2
  8032  0011D2  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8033  0011D4  E003               	bz	l2959
  8034  0011D6  0E02               	movlw	2
  8035  0011D8  ECA2  F00E         	call	_MNouJoystick
  8036  0011DC                     l2959:
  8037                           
  8038                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8039  0011DC  0E02               	movlw	2
  8040  0011DE  6E17               	movwf	_ultimaTeclaAD^0,c
  8041                           
  8042                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8043  0011E0  0E07               	movlw	7
  8044  0011E2  6EC2               	movwf	194,c	;volatile
  8045                           
  8046                           ;Joystick.c: 31:                 cap1 = 0;
  8047  0011E4  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8048  0011E6  D7ED               	goto	l2951
  8049  0011E8                     l983:
  8050  0011E8  B2C2               	btfsc	194,1,c	;volatile
  8051  0011EA  D03F               	goto	l988
  8052  0011EC  0E33               	movlw	51
  8053  0011EE  60C4               	cpfslt	196,c	;volatile
  8054  0011F0  D03C               	goto	l988
  8055                           
  8056                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8057  0011F2  0E08               	movlw	8
  8058  0011F4  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8059  0011F6  E003               	bz	l2973
  8060  0011F8  0E08               	movlw	8
  8061  0011FA  ECA2  F00E         	call	_MNouJoystick
  8062  0011FE                     l2973:
  8063                           
  8064                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8065  0011FE  0E08               	movlw	8
  8066  001200  D7EE               	goto	L7
  8067  001202                     l989:
  8068                           
  8069                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8070  001202  B2C2               	btfsc	194,1,c	;volatile
  8071  001204  D00B               	goto	l990
  8072  001206  0EC8               	movlw	200
  8073  001208  60C4               	cpfslt	196,c	;volatile
  8074  00120A  D008               	goto	l990
  8075  00120C  0E32               	movlw	50
  8076  00120E  64C4               	cpfsgt	196,c	;volatile
  8077  001210  D005               	goto	l990
  8078                           
  8079                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8080  001212  0E03               	movlw	3
  8081  001214  6EC2               	movwf	194,c	;volatile
  8082                           
  8083                           ;Joystick.c: 45:                 cap2 = 1;
  8084  001216  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8085  001218                     l2989:
  8086                           
  8087                           ;Joystick.c: 46:     state--;
  8088  001218  0616               	decf	JoystickMotor@state^0,f,c
  8089                           
  8090                           ;Joystick.c: 47:    }
  8091  00121A  D027               	goto	l988
  8092  00121C                     l990:
  8093  00121C  B2C2               	btfsc	194,1,c	;volatile
  8094  00121E  D00F               	goto	l992
  8095  001220  0EC7               	movlw	199
  8096  001222  64C4               	cpfsgt	196,c	;volatile
  8097  001224  D00C               	goto	l992
  8098                           
  8099                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8100  001226  0E06               	movlw	6
  8101  001228  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8102  00122A  E003               	bz	l2997
  8103  00122C  0E06               	movlw	6
  8104  00122E  ECA2  F00E         	call	_MNouJoystick
  8105  001232                     l2997:
  8106                           
  8107                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8108  001232  0E06               	movlw	6
  8109  001234  6E17               	movwf	_ultimaTeclaAD^0,c
  8110                           
  8111                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8112  001236  0E03               	movlw	3
  8113  001238  6EC2               	movwf	194,c	;volatile
  8114                           
  8115                           ;Joystick.c: 52:                 cap2 = 0;
  8116  00123A  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8117  00123C  D7ED               	goto	l2989
  8118  00123E                     l992:
  8119  00123E  B2C2               	btfsc	194,1,c	;volatile
  8120  001240  D014               	goto	l988
  8121  001242  0E33               	movlw	51
  8122  001244  60C4               	cpfslt	196,c	;volatile
  8123  001246  D011               	goto	l988
  8124                           
  8125                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8126  001248  0E04               	movlw	4
  8127  00124A  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8128  00124C  E003               	bz	l3011
  8129  00124E  0E04               	movlw	4
  8130  001250  ECA2  F00E         	call	_MNouJoystick
  8131  001254                     l3011:
  8132                           
  8133                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8134  001254  0E04               	movlw	4
  8135  001256  D7EE               	goto	L8
  8136  001258                     l3021:
  8137  001258  5016               	movf	JoystickMotor@state^0,w,c
  8138  00125A  6E64               	movwf	??_JoystickMotor^0,c
  8139  00125C  6A65               	clrf	(??_JoystickMotor+1)^0,c
  8140                           
  8141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8142                           ; Switch size 1, requested type "space"
  8143                           ; Number of cases is 1, Range of values is 0 to 0
  8144                           ; switch strategies available:
  8145                           ; Name         Instructions Cycles
  8146                           ; simple_byte            4     3 (average)
  8147                           ;	Chosen strategy is simple_byte
  8148  00125E  5065               	movf	(??_JoystickMotor+1)^0,w,c
  8149  001260  E104               	bnz	l988
  8150                           
  8151                           ; Switch size 1, requested type "space"
  8152                           ; Number of cases is 2, Range of values is 0 to 1
  8153                           ; switch strategies available:
  8154                           ; Name         Instructions Cycles
  8155                           ; simple_byte            7     4 (average)
  8156                           ;	Chosen strategy is simple_byte
  8157  001262  5064               	movf	??_JoystickMotor^0,w,c
  8158  001264  E0A3               	bz	l980
  8159  001266  0A01               	xorlw	1	; case 1
  8160  001268  E0CC               	bz	l989
  8161  00126A                     l988:
  8162                           
  8163                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8164  00126A  BE77               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8165  00126C  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8166  00126E  0012               	return	
  8167  001270  5017               	movf	_ultimaTeclaAD^0,w,c
  8168  001272  B4D8               	btfsc	status,2,c
  8169  001274  0012               	return	
  8170                           
  8171                           ;Joystick.c: 66:         MNouJoystick(-1);
  8172  001276  0EFF               	movlw	255
  8173  001278  ECA2  F00E         	call	_MNouJoystick
  8174                           
  8175                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8176  00127C  6817               	setf	_ultimaTeclaAD^0,c
  8177  00127E  0012               	return		;funcret
  8178  001280                     __end_of_JoystickMotor:
  8179                           	callstack 0
  8180                           
  8181 ;; *************** function _MNouJoystick *****************
  8182 ;; Defined at:
  8183 ;;		line 35 in file "Menu.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  posicio         1    wreg     char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  posicio         1    5[COMRAM] char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/1
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1
  8197 ;;      Params:         0       0       0
  8198 ;;      Locals:         1       0       0
  8199 ;;      Temps:          0       0       0
  8200 ;;      Totals:         1       0       0
  8201 ;;Total ram usage:        1 bytes
  8202 ;; Hardware stack levels used: 1
  8203 ;; Hardware stack levels required when called: 2
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_JoystickMotor
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text70
  8212  001D44                     __ptext70:
  8213                           	callstack 0
  8214  001D44                     _MNouJoystick:
  8215                           	callstack 27
  8216                           
  8217                           ;incstack = 0
  8218                           ;MNouJoystick@posicio stored from wreg
  8219  001D44  6E63               	movwf	MNouJoystick@posicio^0,c
  8220                           
  8221                           ;Menu.c: 36:     novaDireccio = posicio;
  8222  001D46  C063  F04E         	movff	MNouJoystick@posicio,_novaDireccio
  8223  001D4A  0012               	return		;funcret
  8224  001D4C                     __end_of_MNouJoystick:
  8225                           	callstack 0
  8226                           
  8227 ;; *************** function _JoystickInit *****************
  8228 ;; Defined at:
  8229 ;;		line 12 in file "Joystick.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1
  8243 ;;      Params:         0       0       0
  8244 ;;      Locals:         0       0       0
  8245 ;;      Temps:          0       0       0
  8246 ;;      Totals:         0       0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 2
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text71
  8258  001C26                     __ptext71:
  8259                           	callstack 0
  8260  001C26                     _JoystickInit:
  8261                           	callstack 28
  8262                           
  8263                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8264                           
  8265                           ;incstack = 0
  8266  001C26  0E01               	movlw	1
  8267  001C28  6EC2               	movwf	194,c	;volatile
  8268                           
  8269                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8270  001C2A  0E0D               	movlw	13
  8271  001C2C  6EC1               	movwf	193,c	;volatile
  8272                           
  8273                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8274  001C2E  0E09               	movlw	9
  8275  001C30  6EC0               	movwf	192,c	;volatile
  8276                           
  8277                           ;Joystick.c: 16:     ADRESH = 127;
  8278  001C32  0E7F               	movlw	127
  8279  001C34  6EC4               	movwf	196,c	;volatile
  8280  001C36  0C7F               	retlw	127	;funcret
  8281  001C38                     __end_of_JoystickInit:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function _GLCDMotor *****************
  8285 ;; Defined at:
  8286 ;;		line 36 in file "GestioLCD.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/1
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1
  8300 ;;      Params:         0       0       0
  8301 ;;      Locals:         0       0       0
  8302 ;;      Temps:          2       0       0
  8303 ;;      Totals:         2       0       0
  8304 ;;Total ram usage:        2 bytes
  8305 ;; Hardware stack levels used: 1
  8306 ;; Hardware stack levels required when called: 6
  8307 ;; This function calls:
  8308 ;;		_LcClear
  8309 ;;		_LcGotoXY
  8310 ;;		_LcLliure
  8311 ;;		_LcNewString
  8312 ;;		_LcPutChar
  8313 ;;		_TiGetTics
  8314 ;;		_TiResetTics
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text72
  8321  0008B0                     __ptext72:
  8322                           	callstack 0
  8323  0008B0                     _GLCDMotor:
  8324                           	callstack 24
  8325                           
  8326                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8327                           
  8328                           ;incstack = 0
  8329  0008B0  D10B               	goto	l5781
  8330  0008B2                     l5597:
  8331                           
  8332                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8333  0008B2  0E11               	movlw	17
  8334  0008B4  6019               	cpfslt	GLCDMotor@length1^0,c
  8335  0008B6  D010               	goto	l5607
  8336  0008B8  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8337  0008BA  D00E               	goto	l5607
  8338                           
  8339                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8340  0008BC  0E00               	movlw	0
  8341  0008BE  6E6B               	movwf	LcGotoXY@Row^0,c
  8342  0008C0  ECE9  F00C         	call	_LcGotoXY
  8343                           
  8344                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8345  0008C4  D932               	call	PL8	;call to abstracted procedure
  8346  0008C6  6E72               	movwf	??_GLCDMotor^0,c
  8347  0008C8  C072  F066         	movff	??_GLCDMotor,LcNewString@new_s
  8348  0008CC  D933               	call	PL10	;call to abstracted procedure
  8349  0008CE  EC56  F00E         	call	_LcNewString	;wreg free
  8350                           
  8351                           ;GestioLCD.c: 53:     state = 5;
  8352  0008D2  0E05               	movlw	5
  8353  0008D4  6E1F               	movwf	GLCDMotor@state^0,c
  8354                           
  8355                           ;GestioLCD.c: 54:    }
  8356  0008D6  0C05               	retlw	5
  8357  0008D8                     l5607:
  8358  0008D8  0E10               	movlw	16
  8359  0008DA  6419               	cpfsgt	GLCDMotor@length1^0,c
  8360  0008DC  0C10               	retlw	16
  8361  0008DE  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8362  0008E0  0C10               	retlw	16
  8363  0008E2                     u5350:
  8364                           
  8365                           ;GestioLCD.c: 56:     state++;
  8366  0008E2  2A1F               	incf	GLCDMotor@state^0,f,c
  8367  0008E4  0012               	return	
  8368  0008E6                     l5613:
  8369                           
  8370                           ;GestioLCD.c: 60:    if (j>=16) {
  8371  0008E6  0E0F               	movlw	15
  8372  0008E8  641E               	cpfsgt	GLCDMotor@j^0,c
  8373  0008EA  D014               	goto	l5627
  8374                           
  8375                           ;GestioLCD.c: 61:     min1++;
  8376  0008EC  2A1D               	incf	GLCDMotor@min1^0,f,c
  8377                           
  8378                           ;GestioLCD.c: 62:     max1++;
  8379  0008EE  2A4C               	incf	GLCDMotor@max1^0,f,c
  8380                           
  8381                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8382  0008F0  D91C               	call	PL8	;call to abstracted procedure
  8383  0008F2  244C               	addwf	GLCDMotor@max1^0,w,c
  8384  0008F4  6E72               	movwf	??_GLCDMotor^0,c
  8385  0008F6  D90E               	call	PL2	;call to abstracted procedure
  8386  0008F8  E101               	bnz	l5621
  8387  0008FA  6A4C               	clrf	GLCDMotor@max1^0,c
  8388  0008FC                     l5621:
  8389                           
  8390                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8391  0008FC  D916               	call	PL8	;call to abstracted procedure
  8392  0008FE  241D               	addwf	GLCDMotor@min1^0,w,c
  8393  000900  6E72               	movwf	??_GLCDMotor^0,c
  8394  000902  D908               	call	PL2	;call to abstracted procedure
  8395  000904  E101               	bnz	l911
  8396  000906  6A1D               	clrf	GLCDMotor@min1^0,c
  8397  000908                     l911:
  8398                           
  8399                           ;GestioLCD.c: 65:     j=0;
  8400  000908  6A1E               	clrf	GLCDMotor@j^0,c
  8401                           
  8402                           ;GestioLCD.c: 66:     k1=min1;
  8403  00090A  C01D  F01B         	movff	GLCDMotor@min1,GLCDMotor@k1
  8404                           
  8405                           ;GestioLCD.c: 67:     state = 6;
  8406  00090E  0E06               	movlw	6
  8407  000910  6E1F               	movwf	GLCDMotor@state^0,c
  8408                           
  8409                           ;GestioLCD.c: 68:    }
  8410  000912  0C06               	retlw	6
  8411  000914                     l5627:
  8412  000914  0E10               	movlw	16
  8413  000916  601E               	cpfslt	GLCDMotor@j^0,c
  8414  000918  0C10               	retlw	16
  8415                           
  8416                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8417  00091A  0E00               	movlw	0
  8418  00091C  6E6B               	movwf	LcGotoXY@Row^0,c
  8419  00091E  501E               	movf	GLCDMotor@j^0,w,c
  8420  000920  ECE9  F00C         	call	_LcGotoXY
  8421                           
  8422                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8423  000924  D902               	call	PL8	;call to abstracted procedure
  8424  000926  241B               	addwf	GLCDMotor@k1^0,w,c
  8425  000928  6E72               	movwf	??_GLCDMotor^0,c
  8426  00092A  D8F4               	call	PL2	;call to abstracted procedure
  8427  00092C  EC0F  F00C         	call	_LcPutChar
  8428                           
  8429                           ;GestioLCD.c: 72:     j++;
  8430  000930  2A1E               	incf	GLCDMotor@j^0,f,c
  8431                           
  8432                           ;GestioLCD.c: 73:     k1++;
  8433  000932  2A1B               	incf	GLCDMotor@k1^0,f,c
  8434                           
  8435                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8436  000934  D8FA               	call	PL8	;call to abstracted procedure
  8437  000936  241B               	addwf	GLCDMotor@k1^0,w,c
  8438  000938  6E72               	movwf	??_GLCDMotor^0,c
  8439  00093A  D8EC               	call	PL2	;call to abstracted procedure
  8440  00093C  B4D8               	btfsc	status,2,c
  8441  00093E  6A1B               	clrf	GLCDMotor@k1^0,c
  8442  000940  0012               	return	
  8443  000942                     l5641:
  8444                           
  8445                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8446  000942  0E04               	movlw	4
  8447  000944  6020               	cpfslt	_menuDaltGLCD^0,c
  8448  000946  D010               	goto	u5450
  8449  000948  D7CC               	goto	u5350
  8450  00094A                     u5420:
  8451                           
  8452                           ;GestioLCD.c: 82:     state = 0;
  8453  00094A  6A1F               	clrf	GLCDMotor@state^0,c
  8454  00094C  0012               	return	
  8455  00094E                     l5649:
  8456                           
  8457                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8458  00094E  EC5C  F00E         	call	_LcLliure	;wreg free
  8459  000952  E306               	bnc	l5655
  8460  000954  0E04               	movlw	4
  8461  000956  6020               	cpfslt	_menuDaltGLCD^0,c
  8462  000958  D003               	goto	l5655
  8463                           
  8464                           ;GestioLCD.c: 87:     state = 7;
  8465  00095A  0E07               	movlw	7
  8466  00095C  6E1F               	movwf	GLCDMotor@state^0,c
  8467                           
  8468                           ;GestioLCD.c: 88:    }
  8469  00095E  0C07               	retlw	7
  8470  000960                     l5655:
  8471  000960  EC5C  F00E         	call	_LcLliure	;wreg free
  8472  000964  A0D8               	btfss	status,0,c
  8473  000966  0012               	return	
  8474  000968                     u5450:
  8475  000968  0E03               	movlw	3
  8476  00096A  6420               	cpfsgt	_menuDaltGLCD^0,c
  8477  00096C  0C03               	retlw	3
  8478  00096E  D7ED               	goto	u5420
  8479  000970                     l923:
  8480                           
  8481                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8482  000970  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8483  000972  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8484  000974  0012               	return	
  8485                           
  8486                           ;GestioLCD.c: 95:     length1 = 0;
  8487  000976  6A19               	clrf	GLCDMotor@length1^0,c
  8488                           
  8489                           ;GestioLCD.c: 96:     length2 = 0;
  8490  000978  6A18               	clrf	GLCDMotor@length2^0,c
  8491                           
  8492                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8493  00097A  0E00               	movlw	0
  8494  00097C  6E6B               	movwf	LcGotoXY@Row^0,c
  8495  00097E  ECE9  F00C         	call	_LcGotoXY
  8496                           
  8497                           ;GestioLCD.c: 98:     min1 = 0;
  8498  000982  6A1D               	clrf	GLCDMotor@min1^0,c
  8499                           
  8500                           ;GestioLCD.c: 99:     max1 = 15;
  8501  000984  0E0F               	movlw	15
  8502  000986  6E4C               	movwf	GLCDMotor@max1^0,c
  8503                           
  8504                           ;GestioLCD.c: 100:     min2 = 0;
  8505  000988  6A1C               	clrf	GLCDMotor@min2^0,c
  8506                           
  8507                           ;GestioLCD.c: 101:     max2 = 15;
  8508  00098A  0E0F               	movlw	15
  8509  00098C  6E4B               	movwf	GLCDMotor@max2^0,c
  8510                           
  8511                           ;GestioLCD.c: 102:     j = 0;
  8512  00098E  6A1E               	clrf	GLCDMotor@j^0,c
  8513                           
  8514                           ;GestioLCD.c: 103:     k1 = 0;
  8515  000990  6A1B               	clrf	GLCDMotor@k1^0,c
  8516                           
  8517                           ;GestioLCD.c: 104:     k2 = 0;
  8518  000992  6A1A               	clrf	GLCDMotor@k2^0,c
  8519                           
  8520                           ;GestioLCD.c: 105:     newString = 0;
  8521  000994  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8522  000996  D7A5               	goto	u5350
  8523  000998                     l5685:
  8524                           
  8525                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8526  000998  D8C8               	call	PL8	;call to abstracted procedure
  8527  00099A  2419               	addwf	GLCDMotor@length1^0,w,c
  8528  00099C  6E72               	movwf	??_GLCDMotor^0,c
  8529  00099E  D8BA               	call	PL2	;call to abstracted procedure
  8530  0009A0  E104               	bnz	l5691
  8531  0009A2  0E03               	movlw	3
  8532  0009A4  6420               	cpfsgt	_menuDaltGLCD^0,c
  8533  0009A6  D001               	goto	l5691
  8534  0009A8  D79C               	goto	u5350
  8535  0009AA                     l5691:
  8536  0009AA  D8BF               	call	PL8	;call to abstracted procedure
  8537  0009AC  2419               	addwf	GLCDMotor@length1^0,w,c
  8538  0009AE  6E72               	movwf	??_GLCDMotor^0,c
  8539  0009B0  D8B1               	call	PL2	;call to abstracted procedure
  8540  0009B2  E002               	bz	l5695
  8541                           
  8542                           ;GestioLCD.c: 114:     length1++;
  8543  0009B4  2A19               	incf	GLCDMotor@length1^0,f,c
  8544                           
  8545                           ;GestioLCD.c: 115:    }
  8546  0009B6  0012               	return	
  8547  0009B8                     l5695:
  8548  0009B8  0E04               	movlw	4
  8549  0009BA  6020               	cpfslt	_menuDaltGLCD^0,c
  8550  0009BC  0C04               	retlw	4
  8551  0009BE  D8B5               	call	PL8	;call to abstracted procedure
  8552  0009C0  2419               	addwf	GLCDMotor@length1^0,w,c
  8553  0009C2  6E72               	movwf	??_GLCDMotor^0,c
  8554  0009C4  D8A7               	call	PL2	;call to abstracted procedure
  8555  0009C6  A4D8               	btfss	status,2,c
  8556  0009C8  0012               	return	
  8557                           
  8558                           ;GestioLCD.c: 117:     state = 13;
  8559  0009CA  0E0D               	movlw	13
  8560  0009CC  6E1F               	movwf	GLCDMotor@state^0,c
  8561  0009CE  0C0D               	retlw	13
  8562  0009D0                     l5701:
  8563                           
  8564                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8565  0009D0  0E11               	movlw	17
  8566  0009D2  6018               	cpfslt	GLCDMotor@length2^0,c
  8567  0009D4  D015               	goto	l5711
  8568  0009D6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8569  0009D8  D013               	goto	l5711
  8570                           
  8571                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8572  0009DA  EC4D  F004         	call	PL34	;call to abstracted procedure
  8573  0009DE  ECE9  F00C         	call	_LcGotoXY
  8574                           
  8575                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8576  0009E2  5020               	movf	_menuDaltGLCD^0,w,c
  8577  0009E4  0D1D               	mullw	29
  8578  0009E6  CFF3 F072          	movff	prodl,??_GLCDMotor
  8579  0009EA  0E1D               	movlw	29
  8580  0009EC  2672               	addwf	??_GLCDMotor^0,f,c
  8581  0009EE  5072               	movf	??_GLCDMotor^0,w,c
  8582  0009F0  0F01               	addlw	low _menuList
  8583  0009F2  6E73               	movwf	(??_GLCDMotor+1)^0,c
  8584  0009F4  C073  F066         	movff	??_GLCDMotor+1,LcNewString@new_s
  8585  0009F8  D89D               	call	PL10	;call to abstracted procedure
  8586  0009FA  EC56  F00E         	call	_LcNewString	;wreg free
  8587  0009FE  D771               	goto	u5350
  8588  000A00                     l5711:
  8589  000A00  0E10               	movlw	16
  8590  000A02  6418               	cpfsgt	GLCDMotor@length2^0,c
  8591  000A04  0C10               	retlw	16
  8592  000A06  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8593  000A08  0C10               	retlw	16
  8594                           
  8595                           ;GestioLCD.c: 127:     state = 9;
  8596  000A0A  0E09               	movlw	9
  8597  000A0C  6E1F               	movwf	GLCDMotor@state^0,c
  8598  000A0E  0C09               	retlw	9
  8599  000A10                     l5717:
  8600                           
  8601                           ;GestioLCD.c: 131:    if (j<16) {
  8602  000A10  0E10               	movlw	16
  8603  000A12  601E               	cpfslt	GLCDMotor@j^0,c
  8604  000A14  D014               	goto	l5731
  8605                           
  8606                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8607  000A16  0E01               	movlw	1
  8608  000A18  6E6B               	movwf	LcGotoXY@Row^0,c
  8609  000A1A  501E               	movf	GLCDMotor@j^0,w,c
  8610  000A1C  ECE9  F00C         	call	_LcGotoXY
  8611                           
  8612                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8613  000A20  D884               	call	PL8	;call to abstracted procedure
  8614  000A22  241A               	addwf	GLCDMotor@k2^0,w,c
  8615  000A24  D87E               	call	PL4	;call to abstracted procedure
  8616  000A26  D876               	call	PL2	;call to abstracted procedure
  8617  000A28  EC0F  F00C         	call	_LcPutChar
  8618                           
  8619                           ;GestioLCD.c: 134:     j++;
  8620  000A2C  2A1E               	incf	GLCDMotor@j^0,f,c
  8621                           
  8622                           ;GestioLCD.c: 135:     k2++;
  8623  000A2E  2A1A               	incf	GLCDMotor@k2^0,f,c
  8624                           
  8625                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8626  000A30  D87C               	call	PL8	;call to abstracted procedure
  8627  000A32  241A               	addwf	GLCDMotor@k2^0,w,c
  8628  000A34  D876               	call	PL4	;call to abstracted procedure
  8629  000A36  D86E               	call	PL2	;call to abstracted procedure
  8630  000A38  B4D8               	btfsc	status,2,c
  8631  000A3A  6A1A               	clrf	GLCDMotor@k2^0,c
  8632  000A3C  0012               	return	
  8633  000A3E                     l5731:
  8634  000A3E  0E0F               	movlw	15
  8635  000A40  641E               	cpfsgt	GLCDMotor@j^0,c
  8636  000A42  0C0F               	retlw	15
  8637                           
  8638                           ;GestioLCD.c: 139:     min2++;
  8639  000A44  2A1C               	incf	GLCDMotor@min2^0,f,c
  8640                           
  8641                           ;GestioLCD.c: 140:     max2++;
  8642  000A46  2A4B               	incf	GLCDMotor@max2^0,f,c
  8643                           
  8644                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8645  000A48  D870               	call	PL8	;call to abstracted procedure
  8646  000A4A  244B               	addwf	GLCDMotor@max2^0,w,c
  8647  000A4C  D86A               	call	PL4	;call to abstracted procedure
  8648  000A4E  D862               	call	PL2	;call to abstracted procedure
  8649  000A50  E101               	bnz	l5739
  8650  000A52  6A4B               	clrf	GLCDMotor@max2^0,c
  8651  000A54                     l5739:
  8652                           
  8653                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8654  000A54  D86A               	call	PL8	;call to abstracted procedure
  8655  000A56  241C               	addwf	GLCDMotor@min2^0,w,c
  8656  000A58  D864               	call	PL4	;call to abstracted procedure
  8657  000A5A  D85C               	call	PL2	;call to abstracted procedure
  8658  000A5C  E101               	bnz	l941
  8659  000A5E  6A1C               	clrf	GLCDMotor@min2^0,c
  8660  000A60                     l941:
  8661                           
  8662                           ;GestioLCD.c: 143:     j=0;
  8663  000A60  6A1E               	clrf	GLCDMotor@j^0,c
  8664                           
  8665                           ;GestioLCD.c: 144:     k2=min2;
  8666  000A62  C01C  F01A         	movff	GLCDMotor@min2,GLCDMotor@k2
  8667  000A66  D73D               	goto	u5350
  8668  000A68                     l5745:
  8669                           
  8670                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8671  000A68  5021               	movf	_timerGLCD^0,w,c
  8672  000A6A  EC41  F00D         	call	_TiGetTics
  8673  000A6E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  8674  000A70  D00A               	goto	l943
  8675  000A72  D865               	call	PL60	;call to abstracted procedure
  8676  000A74  E308               	bnc	l943
  8677  000A76  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8678  000A78  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8679  000A7A  D005               	goto	l943
  8680                           
  8681                           ;GestioLCD.c: 150:     LcClear();
  8682  000A7C  EC8A  F00D         	call	_LcClear	;wreg free
  8683  000A80                     l5753:
  8684                           
  8685                           ;GestioLCD.c: 151:     state = 2;
  8686  000A80  0E02               	movlw	2
  8687  000A82  6E1F               	movwf	GLCDMotor@state^0,c
  8688                           
  8689                           ;GestioLCD.c: 152:    }
  8690  000A84  0C02               	retlw	2
  8691  000A86                     l943:
  8692  000A86  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8693  000A88  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8694  000A8A  0012               	return	
  8695                           
  8696                           ;GestioLCD.c: 154:     LcClear();
  8697  000A8C  EC8A  F00D         	call	_LcClear	;wreg free
  8698  000A90  D75C               	goto	u5420
  8699  000A92                     l5761:
  8700                           
  8701                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8702  000A92  5021               	movf	_timerGLCD^0,w,c
  8703  000A94  ECE5  F00D         	call	_TiResetTics
  8704  000A98  D724               	goto	u5350
  8705  000A9A                     l5765:
  8706                           
  8707                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8708  000A9A  EC5C  F00E         	call	_LcLliure	;wreg free
  8709  000A9E  A0D8               	btfss	status,0,c
  8710  000AA0  0012               	return	
  8711                           
  8712                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8713  000AA2  5021               	movf	_timerGLCD^0,w,c
  8714  000AA4  ECE5  F00D         	call	_TiResetTics
  8715                           
  8716                           ;GestioLCD.c: 165:     state = 11;
  8717  000AA8  0E0B               	movlw	11
  8718  000AAA  6E1F               	movwf	GLCDMotor@state^0,c
  8719  000AAC  0C0B               	retlw	11
  8720  000AAE                     l5771:
  8721                           
  8722                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8723  000AAE  D83D               	call	PL8	;call to abstracted procedure
  8724  000AB0  2418               	addwf	GLCDMotor@length2^0,w,c
  8725  000AB2  D837               	call	PL4	;call to abstracted procedure
  8726  000AB4  D82F               	call	PL2	;call to abstracted procedure
  8727  000AB6  E002               	bz	l5775
  8728                           
  8729                           ;GestioLCD.c: 170:     length2++;
  8730  000AB8  2A18               	incf	GLCDMotor@length2^0,f,c
  8731                           
  8732                           ;GestioLCD.c: 171:    }
  8733  000ABA  0012               	return	
  8734  000ABC                     l5775:
  8735  000ABC  D836               	call	PL8	;call to abstracted procedure
  8736  000ABE  2418               	addwf	GLCDMotor@length2^0,w,c
  8737  000AC0  D830               	call	PL4	;call to abstracted procedure
  8738  000AC2  D828               	call	PL2	;call to abstracted procedure
  8739  000AC4  E0DD               	bz	l5753
  8740  000AC6  0012               	return	
  8741  000AC8                     l5781:
  8742  000AC8  501F               	movf	GLCDMotor@state^0,w,c
  8743  000ACA  6E72               	movwf	??_GLCDMotor^0,c
  8744  000ACC  6A73               	clrf	(??_GLCDMotor+1)^0,c
  8745                           
  8746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8747                           ; Switch size 1, requested type "space"
  8748                           ; Number of cases is 1, Range of values is 0 to 0
  8749                           ; switch strategies available:
  8750                           ; Name         Instructions Cycles
  8751                           ; simple_byte            4     3 (average)
  8752                           ;	Chosen strategy is simple_byte
  8753  000ACE  5073               	movf	(??_GLCDMotor+1)^0,w,c
  8754  000AD0  A4D8               	btfss	status,2,c
  8755  000AD2  0012               	return	
  8756                           
  8757                           ; Switch size 1, requested type "space"
  8758                           ; Number of cases is 12, Range of values is 0 to 13
  8759                           ; switch strategies available:
  8760                           ; Name         Instructions Cycles
  8761                           ; simple_byte           37    19 (average)
  8762                           ;	Chosen strategy is simple_byte
  8763  000AD4  5072               	movf	??_GLCDMotor^0,w,c
  8764  000AD6  E101 D74B          	bz	l923
  8765  000ADA  0A01               	xorlw	1	; case 1
  8766  000ADC  E101 D75C          	bz	l5685
  8767  000AE0  0A03               	xorlw	3	; case 2
  8768  000AE2  E101 D6E6          	bz	l5597
  8769  000AE6  0A01               	xorlw	1	; case 3
  8770  000AE8  E101 D6FD          	bz	l5613
  8771  000AEC  0A06               	xorlw	6	; case 5
  8772  000AEE  E101 D72E          	bz	l5649
  8773  000AF2  0A03               	xorlw	3	; case 6
  8774  000AF4  E101 D725          	bz	l5641
  8775  000AF8  0A01               	xorlw	1	; case 7
  8776  000AFA  E101 D769          	bz	l5701
  8777  000AFE  0A0F               	xorlw	15	; case 8
  8778  000B00  E0CC               	bz	l5765
  8779  000B02  0A01               	xorlw	1	; case 9
  8780  000B04  E085               	bz	l5717
  8781  000B06  0A03               	xorlw	3	; case 10
  8782  000B08  E0C4               	bz	l5761
  8783  000B0A  0A01               	xorlw	1	; case 11
  8784  000B0C  E0AD               	bz	l5745
  8785  000B0E  0A06               	xorlw	6	; case 13
  8786  000B10  E0CE               	bz	l5771
  8787  000B12  0012               	return		;funcret
  8788  000B14                     __end_of_GLCDMotor:
  8789                           	callstack 0
  8790  000B14                     PL2:
  8791                           	callstack 24
  8792  000B14  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  8793  000B18                     	if	1	;There is more than 1 active tblptr byte
  8794  000B18  0E02               	movlw	high __smallconst
  8795  000B1A  6EF7               	movwf	tblptrh,c
  8796  000B1C                     	endif
  8797  000B1C                     	if	0	;tblptru may be non-zero
  8798  000B1C                     	endif
  8799  000B1C                     	if	0	;tblptru may be non-zero
  8800  000B1C                     	endif
  8801  000B1C  0008               	tblrd		*
  8802  000B1E  50F5               	movf	tablat,w,c
  8803  000B20  0012               	return	
  8804  000B22                     __end_ofPL2:
  8805                           	callstack 0
  8806  000B22                     PL4:
  8807                           	callstack 24
  8808  000B22  6E72               	movwf	??_GLCDMotor^0,c
  8809  000B24  0E1D               	movlw	29
  8810  000B26  2672               	addwf	??_GLCDMotor^0,f,c
  8811  000B28  0C1D               	retlw	29
  8812  000B2A                     __end_ofPL4:
  8813                           	callstack 0
  8814  000B2A                     PL8:
  8815                           	callstack 24
  8816  000B2A  5020               	movf	_menuDaltGLCD^0,w,c
  8817  000B2C  0D1D               	mullw	29
  8818  000B2E  50F3               	movf	243,w,c
  8819  000B30  0F01               	addlw	low _menuList
  8820  000B32  0012               	return	
  8821  000B34                     __end_ofPL8:
  8822                           	callstack 0
  8823  000B34                     PL10:
  8824                           	callstack 24
  8825  000B34  5066               	movf	LcNewString@new_s^0,w,c
  8826  000B36  A4D8               	btfss	status,2,c
  8827  000B38  0E02               	movlw	high __smallconst
  8828  000B3A  6E67               	movwf	(LcNewString@new_s+1)^0,c
  8829  000B3C  0012               	return	
  8830  000B3E                     __end_ofPL10:
  8831                           	callstack 0
  8832  000B3E                     PL60:
  8833                           	callstack 27
  8834  000B3E  0EB5               	movlw	181
  8835  000B40  5C63               	subwf	?_TiGetTics^0,w,c
  8836  000B42  0E04               	movlw	4
  8837  000B44  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  8838  000B46  0012               	return	
  8839  000B48                     __end_ofPL60:
  8840                           	callstack 0
  8841                           
  8842 ;; *************** function _LcPutChar *****************
  8843 ;; Defined at:
  8844 ;;		line 134 in file "LcTLCD.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  c               1    wreg     unsigned char 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  c               1   19[COMRAM] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/1
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1
  8858 ;;      Params:         0       0       0
  8859 ;;      Locals:         1       0       0
  8860 ;;      Temps:          0       0       0
  8861 ;;      Totals:         1       0       0
  8862 ;;Total ram usage:        1 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 5
  8865 ;; This function calls:
  8866 ;;		_CantaData
  8867 ;;		_LcGotoXY
  8868 ;;		_WaitForBusy
  8869 ;; This function is called by:
  8870 ;;		_LcLCD
  8871 ;;		_menu
  8872 ;;		_GLCDMotor
  8873 ;;		_motorSIO
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text73
  8878  00181E                     __ptext73:
  8879                           	callstack 0
  8880  00181E                     _LcPutChar:
  8881                           	callstack 24
  8882                           
  8883                           ;incstack = 0
  8884                           ;LcPutChar@c stored from wreg
  8885  00181E  6E71               	movwf	LcPutChar@c^0,c
  8886                           
  8887                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8888  001820  EC76  F00C         	call	_WaitForBusy	;wreg free
  8889  001824  5071               	movf	LcPutChar@c^0,w,c
  8890  001826  ECB3  F00C         	call	_CantaData
  8891                           
  8892                           ;LcTLCD.c: 138:  ++ColumnAct;
  8893  00182A  2A3B               	incf	_ColumnAct^0,f,c
  8894                           
  8895                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8896  00182C  0E02               	movlw	2
  8897  00182E  183D               	xorwf	_Rows^0,w,c
  8898  001830  E10C               	bnz	l4355
  8899                           
  8900                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8901  001832  0E27               	movlw	39
  8902  001834  643B               	cpfsgt	_ColumnAct^0,c
  8903  001836  D009               	goto	l4355
  8904                           
  8905                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8906  001838  6A3B               	clrf	_ColumnAct^0,c
  8907                           
  8908                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8909  00183A  2A3C               	incf	_RowAct^0,f,c
  8910  00183C  0E01               	movlw	1
  8911  00183E  643C               	cpfsgt	_RowAct^0,c
  8912  001840  D001               	goto	l4353
  8913  001842  6A3C               	clrf	_RowAct^0,c
  8914  001844                     l4353:
  8915                           
  8916                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8917  001844  D80C               	call	PL70	;call to abstracted procedure
  8918  001846  ECE9  F00C         	call	_LcGotoXY
  8919  00184A                     l4355:
  8920                           
  8921                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8922  00184A  043C               	decf	_RowAct^0,w,c
  8923  00184C  A4D8               	btfss	status,2,c
  8924  00184E  0012               	return	
  8925                           
  8926                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8927  001850  0E27               	movlw	39
  8928  001852  643B               	cpfsgt	_ColumnAct^0,c
  8929  001854  D001               	goto	l4361
  8930  001856  6A3B               	clrf	_ColumnAct^0,c
  8931  001858                     l4361:
  8932                           
  8933                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8934  001858  D802               	call	PL70	;call to abstracted procedure
  8935  00185A  EFE9  F00C         	goto	_LcGotoXY
  8936  00185E                     __end_of_LcPutChar:
  8937                           	callstack 0
  8938  00185E                     PL70:
  8939                           	callstack 24
  8940  00185E  C03C  F06B         	movff	_RowAct,LcGotoXY@Row
  8941  001862  503B               	movf	_ColumnAct^0,w,c
  8942  001864  0012               	return	
  8943  001866                     __end_ofPL70:
  8944                           	callstack 0
  8945                           
  8946 ;; *************** function _CantaData *****************
  8947 ;; Defined at:
  8948 ;;		line 196 in file "LcTLCD.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  Data            1    wreg     unsigned char 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  Data            1    7[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/1
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1
  8962 ;;      Params:         0       0       0
  8963 ;;      Locals:         1       0       0
  8964 ;;      Temps:          0       0       0
  8965 ;;      Totals:         1       0       0
  8966 ;;Total ram usage:        1 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 3
  8969 ;; This function calls:
  8970 ;;		_CantaPartAlta
  8971 ;;		_CantaPartBaixa
  8972 ;; This function is called by:
  8973 ;;		_LcPutChar
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text74
  8978  001966                     __ptext74:
  8979                           	callstack 0
  8980  001966                     _CantaData:
  8981                           	callstack 25
  8982                           
  8983                           ;incstack = 0
  8984                           ;CantaData@Data stored from wreg
  8985  001966  6E65               	movwf	CantaData@Data^0,c
  8986                           
  8987                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8988  001968  9694               	bcf	148,3,c	;volatile
  8989  00196A  9494               	bcf	148,2,c	;volatile
  8990  00196C  9294               	bcf	148,1,c	;volatile
  8991  00196E  9094               	bcf	148,0,c	;volatile
  8992                           
  8993                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8994  001970  8A8B               	bsf	139,5,c	;volatile
  8995                           
  8996                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8997  001972  9E8C               	bcf	140,7,c	;volatile
  8998                           
  8999                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  9000  001974  888B               	bsf	139,4,c	;volatile
  9001                           
  9002                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9003  001976  5065               	movf	CantaData@Data^0,w,c
  9004  001978  ECB4  F00B         	call	_CantaPartAlta
  9005                           
  9006                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9007                           
  9008                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9009                           
  9010                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9011                           
  9012                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9013  00197C  D80B               	call	PL64	;call to abstracted procedure
  9014                           
  9015                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9016  00197E  5065               	movf	CantaData@Data^0,w,c
  9017  001980  EC81  F00B         	call	_CantaPartBaixa
  9018                           
  9019                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9020                           
  9021                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9022                           
  9023                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9024  001984  D000               	goto	PL30	;call to abstracted procedure
  9025  001986                     __end_of_CantaData:
  9026                           	callstack 0
  9027  001986                     PL30:
  9028                           	callstack 24
  9029  001986  888B               	bsf	139,4,c	;volatile
  9030  001988  988B               	bcf	139,4,c	;volatile
  9031  00198A  8694               	bsf	148,3,c	;volatile
  9032  00198C  8494               	bsf	148,2,c	;volatile
  9033  00198E  8294               	bsf	148,1,c	;volatile
  9034  001990  8094               	bsf	148,0,c	;volatile
  9035  001992  0012               	return		;funcret
  9036  001994                     __end_ofPL30:
  9037                           	callstack 0
  9038  001994                     PL64:
  9039                           	callstack 24
  9040  001994  888B               	bsf	139,4,c	;volatile
  9041  001996  988B               	bcf	139,4,c	;volatile
  9042  001998  988B               	bcf	139,4,c	;volatile
  9043  00199A  888B               	bsf	139,4,c	;volatile
  9044  00199C  0012               	return	
  9045  00199E                     __end_ofPL64:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _LcNewString *****************
  9049 ;; Defined at:
  9050 ;;		line 241 in file "LcTLCD.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9053 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  9054 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9055 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  9056 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/1
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMRAM   BANK0   BANK1
  9068 ;;      Params:         2       0       0
  9069 ;;      Locals:         0       0       0
  9070 ;;      Temps:          0       0       0
  9071 ;;      Totals:         2       0       0
  9072 ;;Total ram usage:        2 bytes
  9073 ;; Hardware stack levels used: 1
  9074 ;; Hardware stack levels required when called: 2
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_menu
  9079 ;;		_GLCDMotor
  9080 ;;		_motorJoc
  9081 ;;		_motorSIO
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text75
  9086  001CAC                     __ptext75:
  9087                           	callstack 0
  9088  001CAC                     _LcNewString:
  9089                           	callstack 27
  9090                           
  9091                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9092                           
  9093                           ;incstack = 0
  9094  001CAC  C066  F00D         	movff	LcNewString@new_s,_s_ptr
  9095  001CB0  C067  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9096                           
  9097                           ;LcTLCD.c: 243:     nou_s = 1;
  9098  001CB4  8279               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9099  001CB6  0012               	return		;funcret
  9100  001CB8                     __end_of_LcNewString:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _LcLliure *****************
  9104 ;; Defined at:
  9105 ;;		line 257 in file "LcTLCD.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;		None               void
  9112 ;; Registers used:
  9113 ;;		status,0
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/1
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1
  9119 ;;      Params:         0       0       0
  9120 ;;      Locals:         0       0       0
  9121 ;;      Temps:          0       0       0
  9122 ;;      Totals:         0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used: 1
  9125 ;; Hardware stack levels required when called: 2
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_menu
  9130 ;;		_GLCDMotor
  9131 ;;		_motorJoc
  9132 ;;		_motorSIO
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text76
  9137  001CB8                     __ptext76:
  9138                           	callstack 0
  9139  001CB8                     _LcLliure:
  9140                           	callstack 27
  9141                           
  9142                           ;LcTLCD.c: 258:     return !nou_s;
  9143                           
  9144                           ;incstack = 0
  9145  001CB8  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9146  001CBA  D002               	goto	l2123
  9147  001CBC  90D8               	bcf	status,0,c
  9148  001CBE  0012               	return	
  9149  001CC0                     l2123:
  9150  001CC0  80D8               	bsf	status,0,c
  9151  001CC2  0012               	return		;funcret
  9152  001CC4                     __end_of_LcLliure:
  9153                           	callstack 0
  9154                           
  9155 ;; *************** function _LcClear *****************
  9156 ;; Defined at:
  9157 ;;		line 84 in file "LcTLCD.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/1
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1
  9171 ;;      Params:         0       0       0
  9172 ;;      Locals:         0       0       0
  9173 ;;      Temps:          0       0       0
  9174 ;;      Totals:         0       0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 5
  9178 ;; This function calls:
  9179 ;;		_CantaIR
  9180 ;;		_Espera
  9181 ;;		_LcGotoXY
  9182 ;;		_WaitForBusy
  9183 ;; This function is called by:
  9184 ;;		_menu
  9185 ;;		_GLCDMotor
  9186 ;;		_motorSIO
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text77
  9191  001B14                     __ptext77:
  9192                           	callstack 0
  9193  001B14                     _LcClear:
  9194                           	callstack 24
  9195                           
  9196                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9197                           
  9198                           ;incstack = 0
  9199  001B14  EC76  F00C         	call	_WaitForBusy	;wreg free
  9200  001B18  0E01               	movlw	1
  9201  001B1A  ECD7  F00D         	call	_CantaIR
  9202                           
  9203                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9204  001B1E  D806               	call	PL54	;call to abstracted procedure
  9205  001B20  EC9B  F00D         	call	_Espera
  9206                           
  9207                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9208  001B24  0E00               	movlw	0
  9209  001B26  6E6B               	movwf	LcGotoXY@Row^0,c
  9210  001B28  EFE9  F00C         	goto	_LcGotoXY
  9211  001B2C                     __end_of_LcClear:
  9212                           	callstack 0
  9213  001B2C                     PL54:
  9214                           	callstack 26
  9215  001B2C  6A6B               	clrf	(Espera@ms+1)^0,c
  9216  001B2E  0E03               	movlw	3
  9217  001B30  6E6A               	movwf	Espera@ms^0,c
  9218  001B32  503A               	movf	_Timer^0,w,c
  9219  001B34  0012               	return	
  9220  001B36                     __end_ofPL54:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _LcGotoXY *****************
  9224 ;; Defined at:
  9225 ;;		line 106 in file "LcTLCD.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  Column          1    wreg     unsigned char 
  9228 ;;  Row             1   13[COMRAM] unsigned char 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  Column          1   18[COMRAM] unsigned char 
  9231 ;;  Fisics          2   14[COMRAM] int 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/1
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1
  9241 ;;      Params:         1       0       0
  9242 ;;      Locals:         5       0       0
  9243 ;;      Temps:          0       0       0
  9244 ;;      Totals:         6       0       0
  9245 ;;Total ram usage:        6 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 4
  9248 ;; This function calls:
  9249 ;;		_CantaIR
  9250 ;;		_WaitForBusy
  9251 ;; This function is called by:
  9252 ;;		_LcClear
  9253 ;;		_LcPutChar
  9254 ;;		_menu
  9255 ;;		_GLCDMotor
  9256 ;;		_motorJoc
  9257 ;;		_motorSIO
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text78
  9262  0019D2                     __ptext78:
  9263                           	callstack 0
  9264  0019D2                     _LcGotoXY:
  9265                           	callstack 24
  9266                           
  9267                           ;incstack = 0
  9268                           ;LcGotoXY@Column stored from wreg
  9269  0019D2  6E70               	movwf	LcGotoXY@Column^0,c
  9270                           
  9271                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9272  0019D4  506B               	movf	LcGotoXY@Row^0,w,c
  9273  0019D6  E004               	bz	l57
  9274  0019D8  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  9275  0019DA  0E40               	movlw	64
  9276  0019DC  6E6E               	movwf	_LcGotoXY$336^0,c
  9277  0019DE  D002               	goto	l4281
  9278  0019E0                     l57:
  9279  0019E0  6A6E               	clrf	_LcGotoXY$336^0,c
  9280  0019E2  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  9281  0019E4                     l4281:
  9282  0019E4  5070               	movf	LcGotoXY@Column^0,w,c
  9283  0019E6  246E               	addwf	_LcGotoXY$336^0,w,c
  9284  0019E8  6E6C               	movwf	LcGotoXY@Fisics^0,c
  9285  0019EA  0E00               	movlw	0
  9286  0019EC  206F               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9287  0019EE  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  9288                           
  9289                           ;LcTLCD.c: 127:  WaitForBusy();
  9290  0019F0  EC76  F00C         	call	_WaitForBusy	;wreg free
  9291                           
  9292                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9293  0019F4  506C               	movf	LcGotoXY@Fisics^0,w,c
  9294  0019F6  0980               	iorlw	128
  9295  0019F8  ECD7  F00D         	call	_CantaIR
  9296                           
  9297                           ;LcTLCD.c: 130:  RowAct = Row;
  9298  0019FC  C06B  F03C         	movff	LcGotoXY@Row,_RowAct
  9299                           
  9300                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9301  001A00  C070  F03B         	movff	LcGotoXY@Column,_ColumnAct
  9302  001A04  0012               	return		;funcret
  9303  001A06                     __end_of_LcGotoXY:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function _WaitForBusy *****************
  9307 ;; Defined at:
  9308 ;;		line 212 in file "LcTLCD.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  Busy            1   12[COMRAM] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1
  9322 ;;      Params:         0       0       0
  9323 ;;      Locals:         1       0       0
  9324 ;;      Temps:          0       0       0
  9325 ;;      Totals:         1       0       0
  9326 ;;Total ram usage:        1 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; Hardware stack levels required when called: 3
  9329 ;; This function calls:
  9330 ;;		_TiGetTics
  9331 ;;		_TiResetTics
  9332 ;; This function is called by:
  9333 ;;		_LcInit
  9334 ;;		_LcClear
  9335 ;;		_LcGotoXY
  9336 ;;		_LcPutChar
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text79
  9341  0018EC                     __ptext79:
  9342                           	callstack 0
  9343  0018EC                     _WaitForBusy:
  9344                           	callstack 25
  9345                           
  9346                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9347                           
  9348                           ;incstack = 0
  9349  0018EC  8694               	bsf	148,3,c	;volatile
  9350  0018EE  8494               	bsf	148,2,c	;volatile
  9351  0018F0  8294               	bsf	148,1,c	;volatile
  9352  0018F2  8094               	bsf	148,0,c	;volatile
  9353                           
  9354                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9355  0018F4  9A8B               	bcf	139,5,c	;volatile
  9356                           
  9357                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9358  0018F6  8E8C               	bsf	140,7,c	;volatile
  9359                           
  9360                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9361  0018F8  503A               	movf	_Timer^0,w,c
  9362  0018FA  ECE5  F00D         	call	_TiResetTics
  9363  0018FE                     l4249:
  9364                           
  9365                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9366  0018FE  888B               	bsf	139,4,c	;volatile
  9367  001900  888B               	bsf	139,4,c	;volatile
  9368                           
  9369                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9370  001902  0E00               	movlw	0
  9371  001904  B682               	btfsc	130,3,c	;volatile
  9372  001906  0E01               	movlw	1
  9373  001908  6E6A               	movwf	WaitForBusy@Busy^0,c
  9374                           
  9375                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9376  00190A  988B               	bcf	139,4,c	;volatile
  9377                           
  9378                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9379  00190C  988B               	bcf	139,4,c	;volatile
  9380                           
  9381                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9382  00190E  888B               	bsf	139,4,c	;volatile
  9383  001910  888B               	bsf	139,4,c	;volatile
  9384                           
  9385                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9386  001912  988B               	bcf	139,4,c	;volatile
  9387                           
  9388                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9389  001914  988B               	bcf	139,4,c	;volatile
  9390                           
  9391                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9392  001916  503A               	movf	_Timer^0,w,c
  9393  001918  EC41  F00D         	call	_TiGetTics
  9394  00191C  5063               	movf	?_TiGetTics^0,w,c
  9395  00191E  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  9396  001920  E001               	bz	l4271
  9397  001922  0012               	return	
  9398  001924                     l4271:
  9399                           
  9400                           ;LcTLCD.c: 227:  } while(Busy);
  9401  001924  506A               	movf	WaitForBusy@Busy^0,w,c
  9402  001926  E1EB               	bnz	l4249
  9403  001928  0012               	return		;funcret
  9404  00192A                     __end_of_WaitForBusy:
  9405                           	callstack 0
  9406                           
  9407 ;; *************** function _CantaIR *****************
  9408 ;; Defined at:
  9409 ;;		line 180 in file "LcTLCD.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  IR              1    wreg     unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  IR              1    7[COMRAM] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, status,2, status,0, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/1
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1
  9423 ;;      Params:         0       0       0
  9424 ;;      Locals:         1       0       0
  9425 ;;      Temps:          0       0       0
  9426 ;;      Totals:         1       0       0
  9427 ;;Total ram usage:        1 bytes
  9428 ;; Hardware stack levels used: 1
  9429 ;; Hardware stack levels required when called: 3
  9430 ;; This function calls:
  9431 ;;		_CantaPartAlta
  9432 ;;		_CantaPartBaixa
  9433 ;; This function is called by:
  9434 ;;		_LcScroll
  9435 ;;		_LcInit
  9436 ;;		_LcClear
  9437 ;;		_LcGotoXY
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text80
  9442  001BAE                     __ptext80:
  9443                           	callstack 0
  9444  001BAE                     _CantaIR:
  9445                           	callstack 24
  9446                           
  9447                           ;incstack = 0
  9448                           ;CantaIR@IR stored from wreg
  9449  001BAE  6E65               	movwf	CantaIR@IR^0,c
  9450                           
  9451                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9452  001BB0  9694               	bcf	148,3,c	;volatile
  9453                           
  9454                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9455                           
  9456                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9457                           
  9458                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9459  001BB2  ECFD  F00A         	call	PL36	;call to abstracted procedure
  9460                           
  9461                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9462  001BB6  5065               	movf	CantaIR@IR^0,w,c
  9463  001BB8  ECB4  F00B         	call	_CantaPartAlta
  9464                           
  9465                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9466                           
  9467                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9468                           
  9469                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9470                           
  9471                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9472  001BBC  ECCA  F00C         	call	PL64	;call to abstracted procedure
  9473                           
  9474                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9475  001BC0  5065               	movf	CantaIR@IR^0,w,c
  9476  001BC2  EC81  F00B         	call	_CantaPartBaixa
  9477                           
  9478                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9479                           
  9480                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9481                           
  9482                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9483  001BC6  EFC3  F00C         	goto	PL30	;call to abstracted procedure
  9484  001BCA                     __end_of_CantaIR:
  9485                           	callstack 0
  9486                           
  9487 ;; *************** function _CantaPartBaixa *****************
  9488 ;; Defined at:
  9489 ;;		line 173 in file "LcTLCD.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  c               1    wreg     unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  c               1    6[COMRAM] unsigned char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/1
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1
  9503 ;;      Params:         0       0       0
  9504 ;;      Locals:         1       0       0
  9505 ;;      Temps:          1       0       0
  9506 ;;      Totals:         2       0       0
  9507 ;;Total ram usage:        2 bytes
  9508 ;; Hardware stack levels used: 1
  9509 ;; Hardware stack levels required when called: 2
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_CantaIR
  9514 ;;		_CantaData
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text81
  9519  001702                     __ptext81:
  9520                           	callstack 0
  9521  001702                     _CantaPartBaixa:
  9522                           	callstack 24
  9523                           
  9524                           ;incstack = 0
  9525                           ;CantaPartBaixa@c stored from wreg
  9526  001702  6E64               	movwf	CantaPartBaixa@c^0,c
  9527                           
  9528                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9529  001704  A664               	btfss	CantaPartBaixa@c^0,3,c
  9530  001706  D003               	goto	u3280
  9531  001708  6A63               	clrf	??_CantaPartBaixa^0,c
  9532  00170A  2A63               	incf	??_CantaPartBaixa^0,f,c
  9533  00170C  D001               	goto	u3298
  9534  00170E                     u3280:
  9535  00170E  6A63               	clrf	??_CantaPartBaixa^0,c
  9536  001710                     u3298:
  9537  001710  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9538  001712  D825               	call	PL68	;call to abstracted procedure
  9539  001714  0BF7               	andlw	-9
  9540  001716  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9541  001718  6E8B               	movwf	139,c	;volatile
  9542                           
  9543                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9544  00171A  A464               	btfss	CantaPartBaixa@c^0,2,c
  9545  00171C  D003               	goto	u3300
  9546  00171E  6A63               	clrf	??_CantaPartBaixa^0,c
  9547  001720  2A63               	incf	??_CantaPartBaixa^0,f,c
  9548  001722  D001               	goto	u3318
  9549  001724                     u3300:
  9550  001724  6A63               	clrf	??_CantaPartBaixa^0,c
  9551  001726                     u3318:
  9552  001726  D81B               	call	PL68	;call to abstracted procedure
  9553  001728  0BFB               	andlw	-5
  9554  00172A  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9555  00172C  6E8B               	movwf	139,c	;volatile
  9556                           
  9557                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9558  00172E  A264               	btfss	CantaPartBaixa@c^0,1,c
  9559  001730  D003               	goto	u3320
  9560  001732  6A63               	clrf	??_CantaPartBaixa^0,c
  9561  001734  2A63               	incf	??_CantaPartBaixa^0,f,c
  9562  001736  D001               	goto	u3338
  9563  001738                     u3320:
  9564  001738  6A63               	clrf	??_CantaPartBaixa^0,c
  9565  00173A                     u3338:
  9566  00173A  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9567  00173C  508B               	movf	139,w,c	;volatile
  9568  00173E  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9569  001740  0BFD               	andlw	-3
  9570  001742  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9571  001744  6E8B               	movwf	139,c	;volatile
  9572                           
  9573                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9574  001746  A064               	btfss	CantaPartBaixa@c^0,0,c
  9575  001748  D003               	goto	u3340
  9576  00174A  6A63               	clrf	??_CantaPartBaixa^0,c
  9577  00174C  2A63               	incf	??_CantaPartBaixa^0,f,c
  9578  00174E  D001               	goto	u3358
  9579  001750                     u3340:
  9580  001750  6A63               	clrf	??_CantaPartBaixa^0,c
  9581  001752                     u3358:
  9582  001752  508B               	movf	139,w,c	;volatile
  9583  001754  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9584  001756  0BFE               	andlw	-2
  9585  001758  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9586  00175A  6E8B               	movwf	139,c	;volatile
  9587  00175C  0012               	return		;funcret
  9588  00175E                     __end_of_CantaPartBaixa:
  9589                           	callstack 0
  9590  00175E                     PL68:
  9591                           	callstack 24
  9592  00175E  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9593  001760  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9594  001762  508B               	movf	139,w,c	;volatile
  9595  001764  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9596  001766  0012               	return	
  9597  001768                     __end_ofPL68:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _CantaPartAlta *****************
  9601 ;; Defined at:
  9602 ;;		line 166 in file "LcTLCD.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  c               1    wreg     unsigned char 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  c               1    6[COMRAM] unsigned char 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2, status,0
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/1
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1
  9616 ;;      Params:         0       0       0
  9617 ;;      Locals:         1       0       0
  9618 ;;      Temps:          1       0       0
  9619 ;;      Totals:         2       0       0
  9620 ;;Total ram usage:        2 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 2
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_CantaIR
  9627 ;;		_CantaData
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text82
  9632  001768                     __ptext82:
  9633                           	callstack 0
  9634  001768                     _CantaPartAlta:
  9635                           	callstack 24
  9636                           
  9637                           ;incstack = 0
  9638                           ;CantaPartAlta@c stored from wreg
  9639  001768  6E64               	movwf	CantaPartAlta@c^0,c
  9640                           
  9641                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9642  00176A  AE64               	btfss	CantaPartAlta@c^0,7,c
  9643  00176C  D003               	goto	u3200
  9644  00176E  6A63               	clrf	??_CantaPartAlta^0,c
  9645  001770  2A63               	incf	??_CantaPartAlta^0,f,c
  9646  001772  D001               	goto	u3218
  9647  001774                     u3200:
  9648  001774  6A63               	clrf	??_CantaPartAlta^0,c
  9649  001776                     u3218:
  9650  001776  4663               	rlncf	??_CantaPartAlta^0,f,c
  9651  001778  D825               	call	PL58	;call to abstracted procedure
  9652  00177A  0BF7               	andlw	-9
  9653  00177C  1863               	xorwf	??_CantaPartAlta^0,w,c
  9654  00177E  6E8B               	movwf	139,c	;volatile
  9655                           
  9656                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9657  001780  AC64               	btfss	CantaPartAlta@c^0,6,c
  9658  001782  D003               	goto	u3220
  9659  001784  6A63               	clrf	??_CantaPartAlta^0,c
  9660  001786  2A63               	incf	??_CantaPartAlta^0,f,c
  9661  001788  D001               	goto	u3238
  9662  00178A                     u3220:
  9663  00178A  6A63               	clrf	??_CantaPartAlta^0,c
  9664  00178C                     u3238:
  9665  00178C  D81B               	call	PL58	;call to abstracted procedure
  9666  00178E  0BFB               	andlw	-5
  9667  001790  1863               	xorwf	??_CantaPartAlta^0,w,c
  9668  001792  6E8B               	movwf	139,c	;volatile
  9669                           
  9670                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9671  001794  AA64               	btfss	CantaPartAlta@c^0,5,c
  9672  001796  D003               	goto	u3240
  9673  001798  6A63               	clrf	??_CantaPartAlta^0,c
  9674  00179A  2A63               	incf	??_CantaPartAlta^0,f,c
  9675  00179C  D001               	goto	u3258
  9676  00179E                     u3240:
  9677  00179E  6A63               	clrf	??_CantaPartAlta^0,c
  9678  0017A0                     u3258:
  9679  0017A0  4663               	rlncf	??_CantaPartAlta^0,f,c
  9680  0017A2  508B               	movf	139,w,c	;volatile
  9681  0017A4  1863               	xorwf	??_CantaPartAlta^0,w,c
  9682  0017A6  0BFD               	andlw	-3
  9683  0017A8  1863               	xorwf	??_CantaPartAlta^0,w,c
  9684  0017AA  6E8B               	movwf	139,c	;volatile
  9685                           
  9686                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9687  0017AC  A864               	btfss	CantaPartAlta@c^0,4,c
  9688  0017AE  D003               	goto	u3260
  9689  0017B0  6A63               	clrf	??_CantaPartAlta^0,c
  9690  0017B2  2A63               	incf	??_CantaPartAlta^0,f,c
  9691  0017B4  D001               	goto	u3278
  9692  0017B6                     u3260:
  9693  0017B6  6A63               	clrf	??_CantaPartAlta^0,c
  9694  0017B8                     u3278:
  9695  0017B8  508B               	movf	139,w,c	;volatile
  9696  0017BA  1863               	xorwf	??_CantaPartAlta^0,w,c
  9697  0017BC  0BFE               	andlw	-2
  9698  0017BE  1863               	xorwf	??_CantaPartAlta^0,w,c
  9699  0017C0  6E8B               	movwf	139,c	;volatile
  9700  0017C2  0012               	return		;funcret
  9701  0017C4                     __end_of_CantaPartAlta:
  9702                           	callstack 0
  9703  0017C4                     PL58:
  9704                           	callstack 24
  9705  0017C4  4663               	rlncf	??_CantaPartAlta^0,f,c
  9706  0017C6  4663               	rlncf	??_CantaPartAlta^0,f,c
  9707  0017C8  508B               	movf	139,w,c	;volatile
  9708  0017CA  1863               	xorwf	??_CantaPartAlta^0,w,c
  9709  0017CC  0012               	return	
  9710  0017CE                     __end_ofPL58:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _Espera *****************
  9714 ;; Defined at:
  9715 ;;		line 161 in file "LcTLCD.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  Timer           1    wreg     unsigned char 
  9718 ;;  ms              2   12[COMRAM] int 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  Timer           1   15[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1
  9730 ;;      Params:         2       0       0
  9731 ;;      Locals:         1       0       0
  9732 ;;      Temps:          1       0       0
  9733 ;;      Totals:         4       0       0
  9734 ;;Total ram usage:        4 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 3
  9737 ;; This function calls:
  9738 ;;		_TiGetTics
  9739 ;;		_TiResetTics
  9740 ;; This function is called by:
  9741 ;;		_LcInit
  9742 ;;		_LcClear
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text83
  9747  001B36                     __ptext83:
  9748                           	callstack 0
  9749  001B36                     _Espera:
  9750                           	callstack 25
  9751                           
  9752                           ;incstack = 0
  9753                           ;Espera@Timer stored from wreg
  9754  001B36  6E6D               	movwf	Espera@Timer^0,c
  9755                           
  9756                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9757  001B38  506D               	movf	Espera@Timer^0,w,c
  9758  001B3A  ECE5  F00D         	call	_TiResetTics
  9759  001B3E                     l4275:
  9760  001B3E  506D               	movf	Espera@Timer^0,w,c
  9761  001B40  EC41  F00D         	call	_TiGetTics
  9762  001B44  506A               	movf	Espera@ms^0,w,c
  9763  001B46  5C63               	subwf	?_TiGetTics^0,w,c
  9764  001B48  5064               	movf	(?_TiGetTics+1)^0,w,c
  9765  001B4A  0A80               	xorlw	128
  9766  001B4C  6E6C               	movwf	??_Espera^0,c
  9767  001B4E  506B               	movf	(Espera@ms+1)^0,w,c
  9768  001B50  0A80               	xorlw	128
  9769  001B52  586C               	subwfb	??_Espera^0,w,c
  9770  001B54  E3F4               	bnc	l4275
  9771  001B56  0012               	return		;funcret
  9772  001B58                     __end_of_Espera:
  9773                           	callstack 0
  9774                           
  9775 ;; *************** function _TiResetTics *****************
  9776 ;; Defined at:
  9777 ;;		line 55 in file "TiTTimer.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  Handle          1    wreg     unsigned char 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  Handle          1    5[COMRAM] unsigned char 
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/1
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1
  9791 ;;      Params:         0       0       0
  9792 ;;      Locals:         1       0       0
  9793 ;;      Temps:          0       0       0
  9794 ;;      Totals:         1       0       0
  9795 ;;Total ram usage:        1 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 2
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_Espera
  9802 ;;		_WaitForBusy
  9803 ;;		_SMotor
  9804 ;;		_TeTeclat
  9805 ;;		_menu
  9806 ;;		_motorAltaveu
  9807 ;;		_GLCDMotor
  9808 ;;		_motorHora
  9809 ;;		_motorSIO
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text84
  9814  001BCA                     __ptext84:
  9815                           	callstack 0
  9816  001BCA                     _TiResetTics:
  9817                           	callstack 27
  9818                           
  9819                           ;incstack = 0
  9820                           ;TiResetTics@Handle stored from wreg
  9821  001BCA  6E63               	movwf	TiResetTics@Handle^0,c
  9822                           
  9823                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9824  001BCC  5063               	movf	TiResetTics@Handle^0,w,c
  9825  001BCE  D805               	call	PL26	;call to abstracted procedure
  9826  001BD0  C00B  FFDE         	movff	_h_Tics,postinc2
  9827  001BD4  C00C  FFDD         	movff	_h_Tics+1,postdec2
  9828  001BD8  0012               	return		;funcret
  9829  001BDA                     __end_of_TiResetTics:
  9830                           	callstack 0
  9831  001BDA                     PL26:
  9832                           	callstack 24
  9833  001BDA  0D03               	mullw	3
  9834  001BDC  50F3               	movf	243,w,c
  9835  001BDE  0F80               	addlw	low _s_Timers
  9836  001BE0  6ED9               	movwf	fsr2l,c
  9837  001BE2  6ADA               	clrf	fsr2h,c
  9838  001BE4  0012               	return	
  9839  001BE6                     __end_ofPL26:
  9840                           	callstack 0
  9841                           
  9842 ;; *************** function _TiGetTics *****************
  9843 ;; Defined at:
  9844 ;;		line 61 in file "TiTTimer.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  Handle          1    wreg     unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  Handle          1    9[COMRAM] unsigned char 
  9849 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  2    5[COMRAM] int 
  9852 ;; Registers used:
  9853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/1
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1
  9859 ;;      Params:         2       0       0
  9860 ;;      Locals:         3       0       0
  9861 ;;      Temps:          2       0       0
  9862 ;;      Totals:         7       0       0
  9863 ;;Total ram usage:        7 bytes
  9864 ;; Hardware stack levels used: 1
  9865 ;; Hardware stack levels required when called: 2
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_Espera
  9870 ;;		_WaitForBusy
  9871 ;;		_SMotor
  9872 ;;		_TeTeclat
  9873 ;;		_menu
  9874 ;;		_motorAltaveu
  9875 ;;		_GLCDMotor
  9876 ;;		_motorHora
  9877 ;;		_motorSIO
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text85
  9882  001A82                     __ptext85:
  9883                           	callstack 0
  9884  001A82                     _TiGetTics:
  9885                           	callstack 27
  9886                           
  9887                           ;incstack = 0
  9888                           ;TiGetTics@Handle stored from wreg
  9889  001A82  6E67               	movwf	TiGetTics@Handle^0,c
  9890                           
  9891                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9892  001A84  C00B  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  9893  001A88  C00C  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9894                           
  9895                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9896  001A8C  5067               	movf	TiGetTics@Handle^0,w,c
  9897  001A8E  ECED  F00D         	call	PL26	;call to abstracted procedure
  9898  001A92  CFDE F065          	movff	postinc2,??_TiGetTics
  9899  001A96  CFDD F066          	movff	postdec2,??_TiGetTics+1
  9900  001A9A  5065               	movf	??_TiGetTics^0,w,c
  9901  001A9C  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  9902  001A9E  6E63               	movwf	?_TiGetTics^0,c
  9903  001AA0  5066               	movf	(??_TiGetTics+1)^0,w,c
  9904  001AA2  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9905  001AA4  6E64               	movwf	(?_TiGetTics+1)^0,c
  9906  001AA6  0012               	return		;funcret
  9907  001AA8                     __end_of_TiGetTics:
  9908                           	callstack 0
  9909                           
  9910 ;; *************** function _GLCDInit *****************
  9911 ;; Defined at:
  9912 ;;		line 26 in file "GestioLCD.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1
  9926 ;;      Params:         0       0       0
  9927 ;;      Locals:         0       0       0
  9928 ;;      Temps:          0       0       0
  9929 ;;      Totals:         0       0       0
  9930 ;;Total ram usage:        0 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 3
  9933 ;; This function calls:
  9934 ;;		_TiGetTimer
  9935 ;; This function is called by:
  9936 ;;		_main
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text86
  9941  001D4C                     __ptext86:
  9942                           	callstack 0
  9943  001D4C                     _GLCDInit:
  9944                           	callstack 27
  9945                           
  9946                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9947                           
  9948                           ;incstack = 0
  9949  001D4C  EC03  F00D         	call	_TiGetTimer	;wreg free
  9950  001D50  6E21               	movwf	_timerGLCD^0,c
  9951  001D52  0012               	return		;funcret
  9952  001D54                     __end_of_GLCDInit:
  9953                           	callstack 0
  9954                           
  9955 ;; *************** function _TiGetTimer *****************
  9956 ;; Defined at:
  9957 ;;		line 70 in file "TiTTimer.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;		None
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;		None
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1    wreg      unsigned char 
  9964 ;; Registers used:
  9965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1
  9971 ;;      Params:         0       0       0
  9972 ;;      Locals:         0       0       0
  9973 ;;      Temps:          1       0       0
  9974 ;;      Totals:         1       0       0
  9975 ;;Total ram usage:        1 bytes
  9976 ;; Hardware stack levels used: 1
  9977 ;; Hardware stack levels required when called: 2
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_LcInit
  9982 ;;		_Sinit
  9983 ;;		_TeInit
  9984 ;;		_Minit
  9985 ;;		_initAltaveu
  9986 ;;		_GLCDInit
  9987 ;;		_initHora
  9988 ;;		_initSIO
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text87
  9993  001A06                     __ptext87:
  9994                           	callstack 0
  9995  001A06                     _TiGetTimer:
  9996                           	callstack 27
  9997                           
  9998                           ;TiTTimer.c: 74:     counter=0;
  9999                           
 10000                           ;incstack = 0
 10001  001A06  6A32               	clrf	_counter^0,c
 10002                           
 10003                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10004  001A08  D005               	goto	l4321
 10005  001A0A                     l4313:
 10006                           
 10007                           ;TiTTimer.c: 76:         counter++;
 10008  001A0A  2A32               	incf	_counter^0,f,c
 10009                           
 10010                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10011  001A0C  0E08               	movlw	8
 10012  001A0E  1832               	xorwf	_counter^0,w,c
 10013  001A10  E101               	bnz	l4321
 10014  001A12  0CFF               	retlw	255
 10015  001A14                     l4321:
 10016                           
 10017                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10018  001A14  D807               	call	PL12	;call to abstracted procedure
 10019  001A16  04DE               	decf	postinc2,w,c
 10020  001A18  E0F8               	bz	l4313
 10021                           
 10022                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10023  001A1A  D804               	call	PL12	;call to abstracted procedure
 10024  001A1C  0E01               	movlw	1
 10025  001A1E  6EDF               	movwf	indf2,c
 10026                           
 10027                           ;TiTTimer.c: 80:     return (counter);
 10028  001A20  5032               	movf	_counter^0,w,c
 10029  001A22  0012               	return		;funcret
 10030  001A24                     __end_of_TiGetTimer:
 10031                           	callstack 0
 10032  001A24                     PL12:
 10033                           	callstack 28
 10034  001A24  5032               	movf	_counter^0,w,c
 10035  001A26  0D03               	mullw	3
 10036  001A28  50F3               	movf	243,w,c
 10037  001A2A  0F82               	addlw	low (_s_Timers+2)
 10038  001A2C  6ED9               	movwf	fsr2l,c
 10039  001A2E  6ADA               	clrf	fsr2h,c
 10040  001A30  0012               	return	
 10041  001A32                     __end_ofPL12:
 10042                           	callstack 0
 10043                           
 10044 ;; *************** function _CtoA *****************
 10045 ;; Defined at:
 10046 ;;		line 22 in file "CtoA.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		wreg, status,2, status,0
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/1
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1
 10060 ;;      Params:         0       0       0
 10061 ;;      Locals:         0       0       0
 10062 ;;      Temps:          0       0       0
 10063 ;;      Totals:         0       0       0
 10064 ;;Total ram usage:        0 bytes
 10065 ;; Hardware stack levels used: 1
 10066 ;; Hardware stack levels required when called: 2
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text88
 10075  001AF0                     __ptext88:
 10076                           	callstack 0
 10077  001AF0                     _CtoA:
 10078                           	callstack 28
 10079                           
 10080                           ;CtoA.c: 23:     if (convertir != 250) {
 10081                           
 10082                           ;incstack = 0
 10083  001AF0  0EFA               	movlw	250
 10084  001AF2  1845               	xorwf	_convertir^0,w,c
 10085  001AF4  B4D8               	btfsc	status,2,c
 10086  001AF6  0012               	return	
 10087                           
 10088                           ;CtoA.c: 24:         if (convertir != 0){
 10089  001AF8  5045               	movf	_convertir^0,w,c
 10090  001AFA  E009               	bz	l3515
 10091                           
 10092                           ;CtoA.c: 25:             stringScore[1]++;
 10093  001AFC  2A5C               	incf	(_stringScore+1)^0,f,c
 10094                           
 10095                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10096  001AFE  0E3A               	movlw	58
 10097  001B00  185C               	xorwf	(_stringScore+1)^0,w,c
 10098  001B02  E103               	bnz	l3513
 10099                           
 10100                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10101  001B04  0E30               	movlw	48
 10102  001B06  6E5C               	movwf	(_stringScore+1)^0,c
 10103                           
 10104                           ;CtoA.c: 28:                 stringScore[0]++;
 10105  001B08  2A5B               	incf	_stringScore^0,f,c
 10106  001B0A                     l3513:
 10107                           
 10108                           ;CtoA.c: 30:             convertir--;
 10109  001B0A  0645               	decf	_convertir^0,f,c
 10110                           
 10111                           ;CtoA.c: 31:         } else {
 10112  001B0C  0012               	return	
 10113  001B0E                     l3515:
 10114                           
 10115                           ;CtoA.c: 32:             convertir = 250;
 10116  001B0E  0EFA               	movlw	250
 10117  001B10  6E45               	movwf	_convertir^0,c
 10118  001B12  0CFA               	retlw	250	;funcret
 10119  001B14                     __end_of_CtoA:
 10120                           	callstack 0
 10121                           
 10122 ;; *************** function _high_rsi *****************
 10123 ;; Defined at:
 10124 ;;		line 22 in file "main.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;		None
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;		None
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  1    wreg      void 
 10131 ;; Registers used:
 10132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1
 10138 ;;      Params:         0       0       0
 10139 ;;      Locals:         0       0       0
 10140 ;;      Temps:          4       0       0
 10141 ;;      Totals:         4       0       0
 10142 ;;Total ram usage:        4 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; Hardware stack levels required when called: 1
 10145 ;; This function calls:
 10146 ;;		__TiRSITimer
 10147 ;; This function is called by:
 10148 ;;		Interrupt level 2
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	intcode
 10153  000008                     __pintcode:
 10154                           	callstack 0
 10155  000008                     _high_rsi:
 10156                           	callstack 24
 10157                           
 10158                           ;incstack = 0
 10159  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10160  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
 10161  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
 10162  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
 10163  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
 10164  00001A  EC33  F00C         	call	__TiRSITimer	;wreg free
 10165  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
 10166  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
 10167  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
 10168  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
 10169  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10170  000030  0011               	retfie		f
 10171  000032                     __end_of_high_rsi:
 10172                           	callstack 0
 10173                           
 10174 ;; *************** function __TiRSITimer *****************
 10175 ;; Defined at:
 10176 ;;		line 37 in file "TiTTimer.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;		None
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1
 10190 ;;      Params:         0       0       0
 10191 ;;      Locals:         0       0       0
 10192 ;;      Temps:          1       0       0
 10193 ;;      Totals:         1       0       0
 10194 ;;Total ram usage:        1 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_high_rsi
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text90
 10204  001866                     __ptext90:
 10205                           	callstack 0
 10206  001866                     __TiRSITimer:
 10207                           	callstack 0
 10208                           
 10209                           ;TiTTimer.c: 39:     TMR0H = 223;
 10210                           
 10211                           ;incstack = 0
 10212                           
 10213                           ;TiTTimer.c: 40:     TMR0L = 148;
 10214  001866  D81E               	call	PL48	;call to abstracted procedure
 10215                           
 10216                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10217  001868  94F2               	bcf	242,2,c	;volatile
 10218                           
 10219                           ;TiTTimer.c: 42:     h_Tics++;
 10220  00186A  4A0B               	infsnz	_h_Tics^0,f,c
 10221  00186C  2A0C               	incf	(_h_Tics+1)^0,f,c
 10222                           
 10223                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10224  00186E  0E48               	movlw	72
 10225  001870  5C0B               	subwf	_h_Tics^0,w,c
 10226  001872  0EEE               	movlw	238
 10227  001874  580C               	subwfb	(_h_Tics+1)^0,w,c
 10228  001876  A0D8               	btfss	status,0,c
 10229  001878  0012               	return	
 10230                           
 10231                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10232  00187A  6A32               	clrf	_counter^0,c
 10233  00187C                     i2l4503:
 10234  00187C  0E07               	movlw	7
 10235  00187E  6432               	cpfsgt	_counter^0,c
 10236  001880  D001               	goto	i2l4507
 10237  001882  D00D               	goto	i2l378
 10238  001884                     i2l4507:
 10239                           
 10240                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10241  001884  EC12  F00D         	call	PL12	;call to abstracted procedure
 10242  001888  04DE               	decf	postinc2,w,c
 10243  00188A  E107               	bnz	i2l4511
 10244                           
 10245                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10246  00188C  5032               	movf	_counter^0,w,c
 10247  00188E  ECED  F00D         	call	PL26	;call to abstracted procedure
 10248  001892  500B               	movf	_h_Tics^0,w,c
 10249  001894  5EDE               	subwf	postinc2,f,c
 10250  001896  500C               	movf	(_h_Tics+1)^0,w,c
 10251  001898  5ADD               	subwfb	postdec2,f,c
 10252  00189A                     i2l4511:
 10253                           
 10254                           ;TiTTimer.c: 50:         }
 10255  00189A  2A32               	incf	_counter^0,f,c
 10256  00189C  D7EF               	goto	i2l4503
 10257  00189E                     i2l378:
 10258                           
 10259                           ;TiTTimer.c: 51:         h_Tics=0;
 10260  00189E  6A0B               	clrf	_h_Tics^0,c
 10261  0018A0  6A0C               	clrf	(_h_Tics+1)^0,c
 10262  0018A2  0012               	return		;funcret
 10263  0018A4                     __end_of__TiRSITimer:
 10264                           	callstack 0
 10265  0018A4                     PL48:
 10266                           	callstack 28
 10267  0018A4  0EDF               	movlw	223
 10268  0018A6  6ED7               	movwf	215,c	;volatile
 10269  0018A8  0E94               	movlw	148
 10270  0018AA  6ED6               	movwf	214,c	;volatile
 10271  0018AC  0C94               	retlw	148
 10272  0018AE                     __end_ofPL48:
 10273                           	callstack 0
 10274                           
 10275                           	psect	rparam
 10276  0000                     
 10277                           	psect	temp
 10278  00007A                     btemp:
 10279                           	callstack 0
 10280  00007A                     	ds	1
 10281  0000                     int$flags	set	btemp
 10282  0000                     wtemp8	set	btemp+1
 10283  0000                     ttemp5	set	btemp+1
 10284  0000                     ttemp6	set	btemp+4
 10285  0000                     ttemp7	set	btemp+8
 10286                           
 10287                           	psect	idloc
 10288                           
 10289                           ;Config register IDLOC0 @ 0x200000
 10290                           ;	unspecified, using default values
 10291  200000                     	org	2097152
 10292  200000  FF                 	db	255
 10293                           
 10294                           ;Config register IDLOC1 @ 0x200001
 10295                           ;	unspecified, using default values
 10296  200001                     	org	2097153
 10297  200001  FF                 	db	255
 10298                           
 10299                           ;Config register IDLOC2 @ 0x200002
 10300                           ;	unspecified, using default values
 10301  200002                     	org	2097154
 10302  200002  FF                 	db	255
 10303                           
 10304                           ;Config register IDLOC3 @ 0x200003
 10305                           ;	unspecified, using default values
 10306  200003                     	org	2097155
 10307  200003  FF                 	db	255
 10308                           
 10309                           ;Config register IDLOC4 @ 0x200004
 10310                           ;	unspecified, using default values
 10311  200004                     	org	2097156
 10312  200004  FF                 	db	255
 10313                           
 10314                           ;Config register IDLOC5 @ 0x200005
 10315                           ;	unspecified, using default values
 10316  200005                     	org	2097157
 10317  200005  FF                 	db	255
 10318                           
 10319                           ;Config register IDLOC6 @ 0x200006
 10320                           ;	unspecified, using default values
 10321  200006                     	org	2097158
 10322  200006  FF                 	db	255
 10323                           
 10324                           ;Config register IDLOC7 @ 0x200007
 10325                           ;	unspecified, using default values
 10326  200007                     	org	2097159
 10327  200007  FF                 	db	255
 10328                           
 10329                           	psect	config
 10330                           
 10331                           ; Padding undefined space
 10332  300000                     	org	3145728
 10333  300000  FF                 	db	255
 10334                           
 10335                           ;Config register CONFIG1H @ 0x300001
 10336                           ;	Oscillator
 10337                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10338                           ;	Fail-Safe Clock Monitor Enable bit
 10339                           ;	FCMEN = 0x0, unprogrammed default
 10340                           ;	Internal/External Oscillator Switchover bit
 10341                           ;	IESO = 0x0, unprogrammed default
 10342  300001                     	org	3145729
 10343  300001  06                 	db	6
 10344                           
 10345                           ;Config register CONFIG2L @ 0x300002
 10346                           ;	unspecified, using default values
 10347                           ;	Power-up Timer Enable bit
 10348                           ;	PWRT = 0x1, unprogrammed default
 10349                           ;	Brown-out Reset Enable bits
 10350                           ;	BOR = 0x3, unprogrammed default
 10351                           ;	Brown-out Reset Voltage bits
 10352                           ;	BORV = 0x3, unprogrammed default
 10353  300002                     	org	3145730
 10354  300002  1F                 	db	31
 10355                           
 10356                           ;Config register CONFIG2H @ 0x300003
 10357                           ;	Watchdog Timer Enable bit
 10358                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10359                           ;	Watchdog Timer Postscale Select bits
 10360                           ;	WDTPS = 0xF, unprogrammed default
 10361  300003                     	org	3145731
 10362  300003  1E                 	db	30
 10363                           
 10364                           ; Padding undefined space
 10365  300004                     	org	3145732
 10366  300004  FF                 	db	255
 10367                           
 10368                           ;Config register CONFIG3H @ 0x300005
 10369                           ;	CCP2 MUX bit
 10370                           ;	CCP2MX = 0x1, unprogrammed default
 10371                           ;	PORTB A/D Enable bit
 10372                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10373                           ;	Low-Power Timer1 Oscillator Enable bit
 10374                           ;	LPT1OSC = 0x0, unprogrammed default
 10375                           ;	MCLR Pin Enable bit
 10376                           ;	MCLRE = 0x1, unprogrammed default
 10377  300005                     	org	3145733
 10378  300005  81                 	db	129
 10379                           
 10380                           ;Config register CONFIG4L @ 0x300006
 10381                           ;	Stack Full/Underflow Reset Enable bit
 10382                           ;	STVREN = 0x1, unprogrammed default
 10383                           ;	Single-Supply ICSP Enable bit
 10384                           ;	LVP = OFF, Single-Supply ICSP disabled
 10385                           ;	Boot Block Size Select bits
 10386                           ;	BBSIZ = 0x0, unprogrammed default
 10387                           ;	Extended Instruction Set Enable bit
 10388                           ;	XINST = 0x0, unprogrammed default
 10389                           ;	Background Debugger Enable bit
 10390                           ;	DEBUG = 0x1, unprogrammed default
 10391  300006                     	org	3145734
 10392  300006  81                 	db	129
 10393                           
 10394                           ; Padding undefined space
 10395  300007                     	org	3145735
 10396  300007  FF                 	db	255
 10397                           
 10398                           ;Config register CONFIG5L @ 0x300008
 10399                           ;	unspecified, using default values
 10400                           ;	Code Protection bit
 10401                           ;	CP0 = 0x1, unprogrammed default
 10402                           ;	Code Protection bit
 10403                           ;	CP1 = 0x1, unprogrammed default
 10404  300008                     	org	3145736
 10405  300008  03                 	db	3
 10406                           
 10407                           ;Config register CONFIG5H @ 0x300009
 10408                           ;	unspecified, using default values
 10409                           ;	Boot Block Code Protection bitProtect Boot
 10410                           ;	CPB = 0x1, unprogrammed default
 10411                           ;	Data EEPROM Code Protection bit
 10412                           ;	CPD = 0x1, unprogrammed default
 10413  300009                     	org	3145737
 10414  300009  C0                 	db	192
 10415                           
 10416                           ;Config register CONFIG6L @ 0x30000A
 10417                           ;	unspecified, using default values
 10418                           ;	Write Protection bit
 10419                           ;	WRT0 = 0x1, unprogrammed default
 10420                           ;	Write Protection bit
 10421                           ;	WRT1 = 0x1, unprogrammed default
 10422  30000A                     	org	3145738
 10423  30000A  03                 	db	3
 10424                           
 10425                           ;Config register CONFIG6H @ 0x30000B
 10426                           ;	unspecified, using default values
 10427                           ;	Configuration Register Write Protection bit
 10428                           ;	WRTC = 0x1, unprogrammed default
 10429                           ;	Boot Block Write Protection bit
 10430                           ;	WRTB = 0x1, unprogrammed default
 10431                           ;	Data EEPROM Write Protection bit
 10432                           ;	WRTD = 0x1, unprogrammed default
 10433  30000B                     	org	3145739
 10434  30000B  E0                 	db	224
 10435                           
 10436                           ;Config register CONFIG7L @ 0x30000C
 10437                           ;	unspecified, using default values
 10438                           ;	Table Read Protection bit
 10439                           ;	EBTR0 = 0x1, unprogrammed default
 10440                           ;	Table Read Protection bit
 10441                           ;	EBTR1 = 0x1, unprogrammed default
 10442  30000C                     	org	3145740
 10443  30000C  03                 	db	3
 10444                           
 10445                           ;Config register CONFIG7H @ 0x30000D
 10446                           ;	unspecified, using default values
 10447                           ;	Boot Block Table Read Protection bit
 10448                           ;	EBTRB = 0x1, unprogrammed default
 10449  30000D                     	org	3145741
 10450  30000D  40                 	db	64
 10451                           tosu	equ	0xFFF
 10452                           tosh	equ	0xFFE
 10453                           tosl	equ	0xFFD
 10454                           stkptr	equ	0xFFC
 10455                           pclatu	equ	0xFFB
 10456                           pclath	equ	0xFFA
 10457                           pcl	equ	0xFF9
 10458                           tblptru	equ	0xFF8
 10459                           tblptrh	equ	0xFF7
 10460                           tblptrl	equ	0xFF6
 10461                           tablat	equ	0xFF5
 10462                           prodh	equ	0xFF4
 10463                           prodl	equ	0xFF3
 10464                           indf0	equ	0xFEF
 10465                           postinc0	equ	0xFEE
 10466                           postdec0	equ	0xFED
 10467                           preinc0	equ	0xFEC
 10468                           plusw0	equ	0xFEB
 10469                           fsr0h	equ	0xFEA
 10470                           fsr0l	equ	0xFE9
 10471                           wreg	equ	0xFE8
 10472                           indf1	equ	0xFE7
 10473                           postinc1	equ	0xFE6
 10474                           postdec1	equ	0xFE5
 10475                           preinc1	equ	0xFE4
 10476                           plusw1	equ	0xFE3
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           bsr	equ	0xFE0
 10480                           indf2	equ	0xFDF
 10481                           postinc2	equ	0xFDE
 10482                           postdec2	equ	0xFDD
 10483                           preinc2	equ	0xFDC
 10484                           plusw2	equ	0xFDB
 10485                           fsr2h	equ	0xFDA
 10486                           fsr2l	equ	0xFD9
 10487                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        49
    BSS         291
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     121
    BANK0           128      0      63
    BANK1           256      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35423
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    8848
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    3612
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0    9691
                                             20 COMRAM     5     5      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2297
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8811
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2297
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1542
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2940
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1965
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      3F       4       49.2%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     19      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     170       7        0.0%
DATA                 0      0     170       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 06 13:53:41 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03C7  
                               _i 0028                                 _j 0027  
                              PL2 0B14                                PL4 0B22  
                              PL6 0884                                PL8 0B2A  
                              l57 19E0                  UgetUserName@quin 0065  
       ??_UcheckExistsNotFinished 0063                               PL10 0B34  
                             PL20 0EBA                               PL12 1A24  
                             PL30 1986                               PL22 1454  
                             PL14 0E9E                               PL40 1812  
                             PL32 1804                               PL24 0D0A  
                             PL16 14FA                               PL50 1608  
                             PL42 0ECC                               PL34 089A  
                             PL26 1BDA                               PL18 1198  
                             PL60 0B3E                               PL52 1474  
                             PL44 18D8                               PL36 15FA  
                             PL28 0890                               PL70 185E  
                             PL62 18E2                               PL54 1B2C  
                             PL46 0D16                               PL38 1466  
                             PL72 08A0                               PL64 1994  
                             PL56 1334                               PL48 18A4  
                             PL74 08A8                               PL66 1078  
                             PL58 17C4                               PL68 175E  
          __end_of_compareStrings 18D8                               l600 06DA  
                             l505 0348                               l720 140C  
                             l712 13EE                               l722 1412  
                             l706 1AE8                               l715 13FC  
                             l725 1428                               l830 1480  
                             l911 0908                               l727 142E  
                             l719 140A                               l760 0D40  
                             l923 0970                               l764 0D4A  
                             l941 0A60                               l757 0D22  
                             l758 0D34                               l943 0A86  
                             l767 0D6E                               l980 11AC  
                             l981 11C6                               l797 1A34  
                             l990 121C                               l983 11E8  
                             l799 1A4A                               l992 123E  
                             l988 126A                               l989 1202  
                             u230 15A8                               u250 15BE  
                             u308 15EC                               u270 15D2  
                             u248 15AA                               u290 15EA  
                             u268 15C0                               u288 15D4  
                             _pos 002D                               _tmp 0031  
                ??_CantaPartBaixa 0063                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0051                __size_of_GLCDMotor 0264  
                            l1132 1354                              l2123 1CC0  
                            l3011 1254                              l1252 0C76  
                            l1244 0BEA                              l3021 1258  
                            l1237 0BC4                              l2215 1C90  
                            l2311 1C6C                              l2153 1C9C  
                            l2193 1C84                              l2257 1C78  
                            l5011 0392                              l5003 037A  
                            l2283 1ABA                              l5021 03B6  
                            l5013 0398                              l2277 1AB2  
                            l5111 047C                              l5023 03BC  
                            l2295 1ACA                              l3513 1B0A  
                            l4313 1A0A                              l4321 1A14  
                            l5121 0480                              l5105 0476  
                            l2289 1AC2                              l3515 1B0E  
                            l5027 03C4                              l4413 18B0  
                            l5301 0630                              l5141 04A8  
                            l5133 0498                              l5053 03F8  
                            l4271 1924                              l5215 056E  
                            l5207 0548                              l5063 041C  
                            l5055 03FE                              l5039 03D4  
                            l4249 18FE                              l4281 19E4  
                            l4361 1858                              l4353 1844  
                            l5401 07A2                              l5313 0650  
                            l5161 04D8                              l5081 043A  
                            l5065 0422                              l4275 1B3E  
                            l4355 184A                              l4611 0F92  
                            l4523 1A70                              l2667 144C  
                            l4419 18C4                              l5411 07BA  
                            l5403 07A8                              l5331 0678  
                            l5323 066A                              l5219 0586  
                            l4605 0F80                              l5149 04B6  
                            l5069 042A                              l2951 11C2  
                            l4447 129A                              l4631 0FC6  
                            l4623 0FAC                              l4527 1A78  
                            l5343 0698                              l5239 05BA  
                            l5191 0522                              l5175 04FA  
                            l5431 1490                              l5513 0DB0  
                            l5505 0D9E                              l5337 0686  
                            l5273 05FC                              l5257 05DE  
                            l5417 07C2                              l5433 1496  
                            l4643 0FE0                              l4619 0FA2  
                            l4563 0F14                              l4547 0EEA  
                            l4539 0ED6                              l5531 0DE0  
                            l5099 0462                              l4803 0B8C  
                            l5701 09D0                              l5621 08FC  
                            l5613 08E6                              l2973 11FE  
                            l4661 100E                              l4565 0F18  
                            l5525 0DD0                              l5509 0DA2  
                            l5381 0774                              l5365 06F4  
                            l5357 06DC                              l5349 06B4  
                            l5285 061A                              l5189 051C  
                            l5453 14C8                              l5445 14AE  
                            l5437 14A2                              l4901 1514  
                            l4741 137E                              l4733 1368  
                            l4717 1340                              l5711 0A00  
                            l5607 08D8                              l2959 11DC  
                            l4655 1004                              l4575 0F38  
                            l5543 0E08                              l5391 078A  
                            l5375 0754                              l5359 06E2  
                            l4807 0B96                              l5641 0942  
                            l4593 0F66                              l4585 0F5A  
                            l5801 10DC                              l5553 0E1E  
                            l5529 0DDA                              l5393 0790  
                            l5377 075A                              l5369 0710  
                            l5289 061E                              l5465 14E0  
                            l4761 13BE                              l4753 13A8  
                            l4817 0BAC                              l4809 0B9C  
                            l5731 0A3E                              l5627 0914  
                            l4675 1032                              l5563 0E30  
                            l5483 0D3A                              l5387 0780  
                            l4923 154C                              l4739 1378  
                            l4843 0BFA                              l5717 0A10  
                            l2997 1232                              l2989 1218  
                            l4669 1024                              l4597 0F6A  
                            l5821 1108                              l5573 0E5A  
                            l5565 0E34                              l4917 1540  
                            l4853 0C28                              l4845 0C00  
                            l5655 0960                              l4679 103A  
                            l5823 110C                              l5815 10FA  
                            l5583 0E64                              l5559 0E28  
                            l4951 1584                              l4863 0C5E  
                            l5903 16D0                              l5761 0A92  
                            l5753 0A80                              l5745 0A68  
                            l5649 094E                              l5833 1126  
                            l5809 10EC                              l5497 0D72  
                            l4929 1558                              l4769 13CC  
                            l4881 0CA8                              l4873 0C88  
                            l4777 0B4A                              l5771 0AAE  
                            l5739 0A54                              l5691 09AA  
                            l4699 104A                              l5843 1144  
                            l5499 0D78                              l4939 1572  
                            l4947 1580                              l4795 0B7A  
                            l4787 0B66                              l5765 0A9A  
                            l5685 0998                              l5597 08B2  
                            l5781 0AC8                              l5853 115A  
                            l5837 1130                              l5829 111A  
                            l5589 0E72                              l4981 0336  
                            l4965 030A                              l4893 0CCA  
                            l5775 0ABC                              l5695 09B8  
                            l5863 116A                              l4983 033C  
                            l4975 0328                              l4959 02F8  
                            l5857 1164                              l5849 1152  
                            l5793 10C6                              l5795 10CA  
                            l4995 035E                              l5789 10BA  
                            l5799 10D6                              STR_1 02DF  
                            STR_2 02BB                              STR_3 02EE  
                            STR_4 02E7                              STR_5 02C6  
                            STR_6 02A2                              STR_7 0292  
                            STR_8 02D7                              STR_9 02AF  
                            u3200 1774                              _LATD 000F8C  
                            u3220 178A                              u3300 1724  
                            u4110 0BCC                              u3240 179E  
                            u3320 1738                              u4120 0BD0  
                            u3218 1776                              u3260 17B6  
                            u3340 1750                              u3500 132A  
                            u3238 178C                              u3318 1726  
                            u4150 0C3E                              u3280 170E  
                            u3520 17E0                              u3258 17A0  
                            u3338 173A                              u3530 17F6  
                            u3278 17B8                              u3358 1752  
                            u5150 0D44                              u3527 17DE  
                            u4520 0448                              u3537 17F4  
                            u3298 1710                              u3490 18C8  
                            u5170 0D6A                              u4450 03E2  
                            u5420 094A                              u3740 0F8C  
                            u3660 0F2C                              u5350 08E2  
                            u5450 0968                              u3860 1014  
                            u3780 0FB8                              u3870 102A  
                            u5710 108C                              u4840 063C  
                            u4850 0642                              u5718 108E  
                            _CtoA 1AF0                   ??_SsetNovaTecla 0063  
          __end_of_SIOcheckKrebut 1C70                              _cap1 03BF  
                            _Rows 003D                              _cap2 03BE  
                            _main 168A                              _hora 0055  
                            _menu 02F6                              _nota 0025  
           getArrayShowUsers@quin 0065                   __end_of_HJugant 1D5A  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1CFC  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1B2C                              start 0032  
                 __end_of_CantaIR 1BCA                      ?_initAltaveu 005E  
                   LcInit@columns 006E                      ___param_bank 000000  
                     _stringScore 005B                  __end_of_GLCDInit 1D54  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D80  
                           ?_CtoA 005E                __size_of_CToAReset 0008  
                     Espera@Timer 006D                             ?_main 005E  
         __size_of_escriureEEPROM 0028                             ?_menu 005E  
                           _EEADR 000FA9                             STR_10 02CF  
                   ??_TiInitTimer 0063                             _T0CON 000FD5  
                 ?_compareStrings 0063                             i2l378 189E  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 17CE  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 005E                             _TXREG 000FAD  
                           _SMSon 1D5A                             _TXSTA 000FAC  
                     _MNovaLletra 1D34                             _Minit 1D3C  
                __end_of_HGetTime 1D80                             _Sinit 1D2C  
                           _Timer 003A                             _Uinit 13E6  
                 __end_of_initSIO 1D04                             _s_ptr 000D  
                           _nou_s 03C9             __end_of_JoystickMotor 1280  
                 _HActualitzaHora 199E       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03B8                             tablat 000FF5  
                     _LcNewString 1CAC                     ??_TiResetTics 0063  
                 ?_SIOcheckKrebut 005E                _UshowUsersCalculat 1C88  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                ?_checkHoraAcabat 005E                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                __end_of_LcGotoXY 1A06              CToAConverteix@numero 0063  
                __end_of_LcLliure 1CC4                     ??__TiRSITimer 005E  
                __end_of_LcScroll 1D6C                        _TiGetTimer 1A06  
         EscriuPrimeraOrdre@ordre 0064                      __end_of_CtoA 1B14  
                __end_of_JendGame 1DAC                       ?_SIOendGame 005E  
                 __initialization 1612               ?_UshowUsersCalculat 005E  
              __size_of_CantaData 0020                      __end_of_main 1702  
          __end_of_HClearNouSegon 1D84                      __end_of_menu 0884  
         ?_SIOHaAcabatPuntuacions 005E             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005E                 __end_of_GLCDMotor 0B14  
                __end_of_TeTeclat 1198                     _indexNextUser 002A  
                          ??_CtoA 0063                            ??_main 0077  
                          ??_menu 0072                __size_of_LcPutChar 0040  
                   __activetblptr 000002                     _ultimaTeclaAD 0017  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 0019  
                GLCDMotor@length2 0018                        _JnovaTecla 1CE4  
                          ?_LcLCD 005E                            ?_SMSon 005E  
                    ?_CToAobtenir 0063                            ?_Minit 005E  
            ??_UshowUsersCalculat 0063                            ?_Sinit 005E  
                          ?_Uinit 005E                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1A82  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0063                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0063                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 0063                         ??_LcClear 0071  
                       ??_CantaIR 0065                            i2l4511 189A  
                          i2l4503 187C                            i2l4507 1884  
                  LcGotoXY@Fisics 006C                    LcGotoXY@Column 0070  
                   ??_WaitForBusy 006A                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 0039  
               __end_of_CToAReset 1CCC                            _SMSoff 1D60  
              SIONovaDireccio@num 0063                            _LcInit 1280  
                    _MNouJoystick 1D44                    _UgetNumUsuaris 1D8C  
                          _SMotor 0ED4               escriureCharEEPROM@c 0064  
                          _TeInit 1D24                            _Espera 1B36  
                    _LcGotoXY$336 006E                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1DA4                            _RowAct 003C  
             __end_of_TiResetTics 1BDA                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 000B                   ?_HClearNouSegon 005E  
                   ?_CToAHaAcabat 005E                  __end_of_initHora 1D0C  
             __end_of__TiRSITimer 18A4                  __end_of_menuList 0292  
                          clear_0 1658                            clear_1 1664  
                          clear_2 1676                            _jugant 03BD  
                          _segons 0014                        _UenviaChar 1C48  
                          isa$std 000001                        UenviaPas@c 0064  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1C7C  
                       ??_initSIO 0064                      __pdataCOMRAM 0042  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0D0A  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 19D2  
               ??_SIONovaDireccio 0063                  __end_of_motorJoc 13E6  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 0063               __size_of_SIOendGame 0004  
               __end_of_CantaData 1986                      TeTeclat@cols 0034  
                       ?_GLCDInit 005E                     ?_UcheckExists 005E  
                      __accesstop 0080           __end_of__initialization 167C  
          __end_of_UgetNumUsuaris 1D90                 __end_of_LcPutChar 185E  
                   _JnovaDireccio 1CEC                  JnovaDireccio@dir 0063  
                   ___rparam_used 000001                     __end_of_LcLCD 1804  
                     ?_TiGetTimer 005E                     __end_of_SMSon 1D60  
               SIONovaTecla@tecla 0063                    __pcstackCOMRAM 005E  
                   __end_of_Minit 1D44               __end_of_WaitForBusy 192A  
                   __end_of_Sinit 1D34                     __end_of_Uinit 1454  
               __end_of_NoFerMenu 1DA8                         ?_HGetTime 0063  
                    __pidataBANK0 1BFC                    ??_CToAHaAcabat 0063  
            __size_of_initAltaveu 0008                 __end_of_URegister 1D9C  
               __end_of_HnoJugant 1D7C                 __end_of_SiFerMenu 1DA0  
                      __end_ofPL2 0B22                        __end_ofPL4 0B2A  
                      __end_ofPL6 0890                        __end_ofPL8 0B34  
                  _escriureEEPROM 1A32                 __end_of_TiGetTics 1AA8  
                     _TiInitTimer 1A5A                       ?_JnovaTecla 005E  
                         ??_LcLCD 0072                           ??_SMSon 0063  
                       ?_LcGotoXY 006B                         ?_LcLliure 005E  
                         ??_Minit 0064                         ?_LcScroll 005E  
                         ??_Sinit 0064                   JnovaTecla@tecla 0063  
                         ??_Uinit 0063              __size_of_init_eusart 0016  
                       ?_JendGame 005E                    ??_UcheckExists 0063  
             MNouJoystick@posicio 0063                        ??_GLCDInit 0064  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 003C  
                       ?_TeTeclat 005E                       _TiResetTics 1BCA  
                 ?_UgetNumUsuaris 005E                    ?_JnovaDireccio 005E  
                   ??_UmotorUsers 0068                     ?_JoystickInit 005E  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 1768                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 1C48                       __TiRSITimer 1866  
             _indexNextUserStruct 0029                        ??_HGetTime 0065  
                   ?_UgetUserName 0063                  ??_compareStrings 0066  
          __end_of_escriureEEPROM 1A5A                           _BAUDCON 000FB8  
                     ?_UenviaChar 0063              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1D8C                           LcInit@i 0070  
                ?_HActualitzaHora 0063                        ??_LcGotoXY 006C  
                    ?_MNovaLletra 005E                        ??_LcLliure 0063  
                      ??_LcScroll 0066                  ??_SIOcheckKrebut 0063  
             __size_of_TiGetTimer 001E              __size_of_CToAobtenir 0004  
                      ??_JendGame 0063                           _HJugant 1D54  
                       ?_high_rsi 005E                           _JJuguem 1CF4  
                         _LcClear 1B14                           _CantaIR 1BAE  
                    ?_LcNewString 0066                    ??_JoystickInit 0063  
                       ?_initHora 005E                        ??_TeTeclat 006A  
                     _WaitForBusy 18EC                    ?_CantaPartAlta 005E  
           __end_of_SsetNovaTecla 1D1C                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01A4               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                      ??_SIOendGame 0063  
                       ?_motorSIO 005E                         ?_motorJoc 005E  
                  ??_UgetUserName 0065                 _getArrayShowUsers 1B92  
             __end_of_UmotorUsers 0E9E          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                     ?_motorAltaveu 005E  
                    __psmallconst 0200                ?_getArrayShowUsers 0063  
          _escriure2usuarisStruct 192A                           __pcinit 1612  
    __end_of_UcheckExistsGetError 1D94                           _ferMenu 03C1  
                      _init_ports 1B58                           __ramtop 0200  
                         __ptext0 168A                           __ptext1 0B48  
                         __ptext2 1D6C                           __ptext3 1D70  
                         __ptext4 1C58                           __ptext5 1CC4  
                         __ptext6 133E                           __ptext7 1AA8  
                         __ptext8 1D74                           __ptext9 1C64  
                       _T0CONbits 000FD5                         _GLCDMotor 08B0  
                       CantaIR@IR 0065                           _initSIO 1CFC  
                         _counter 0032                           _horaTmp 003E  
          conversorJoystick@direc 0063               ??_getArrayShowUsers 0065  
                     UenviaChar@c 0064        __end_of_escriureCharEEPROM 1AF0  
                LcNewString@new_s 0066                   WaitForBusy@Busy 006A  
                     Uinit@j_1215 0067                      _do_showUsers 03C4  
                         _userPtr 0009                 GLCDMostraMenu@num 0063  
              __end_of_SIOendGame 1D78                        ??_high_rsi 005F  
            __end_of_CToAHaAcabat 1D74              end_of_initialization 167C  
                         _usuaris 0100                   ??_JnovaDireccio 0063  
                      ??_initHora 0064           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 0000                   TiGetTics@Handle 0067  
                   _MsetNovaTecla 1D1C               __size_of_UenviaChar 0010  
               _conversorJoystick 1AA8                 __end_of_motorHora 1596  
                ??_HClearNouSegon 0063                        _novaLletra 004F  
       __end_of_getArrayShowUsers 1BAE                ?_conversorJoystick 005E  
                 _usuariActualSIO 0048                        ??_motorSIO 0072  
                       _CToAReset 1CC4                        ??_motorJoc 0071  
                 TiGetTics@actual 0068                     ?_SIONovaTecla 005E  
                      GLCDMotor@j 001E                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1CDC  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006A  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 002B  
            __end_of_UcheckExists 1D98                     TeTeclat@files 0033  
             ??_conversorJoystick 0063                SIOStartGame@usuari 0063  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0035  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 005E                     ?_SIOStartGame 005E  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95       __size_of_UshowUsersCalculat 000C  
                       _HNouSegon 1C70                    _GLCDMostraMenu 1CA0  
       __end_of_conversorJoystick 1ACC                   ??_CantaPartAlta 0063  
                  ?_MsetNovaTecla 005E                         _CantaData 1966  
               __size_of_GLCDInit 0008                       _UmotorUsers 0D20  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1CA0  
                  __end_of_SMSoff 1D66                      ??_TiGetTimer 0063  
                  __end_of_LcInit 1334                    ??_SIONovaTecla 0063  
                      ?_CToAReset 005E                    __end_of_SMotor 1078  
                       _LcPutChar 181E                    __end_of_TeInit 1D2C  
               motorAltaveu@state 0022                    __end_of_Espera 1B58  
                  GLCDMotor@state 001F        __end_of_EscriuPrimeraOrdre 15FA  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1B76  
                     ?_init_ports 005E                         _NoFerMenu 1DA4  
                       _ColumnAct 003B              __end_of_JoystickInit 1C38  
                  ??_SIOStartGame 0063                         _URegister 1D98  
                       _HnoJugant 1D78                      ?_TiInitTimer 005E  
                    ??_JnovaTecla 0063                         _SiFerMenu 1D9C  
                     __end_ofPL10 0B3E                       __end_ofPL20 0ECC  
                     __end_ofPL12 1A32                       __end_ofPL30 1994  
                     __end_ofPL22 1466                       __end_ofPL14 0EBA  
                     __end_ofPL40 181E                       __end_ofPL32 1812  
                     __end_ofPL24 0D16                       __end_ofPL16 1512  
                     __end_ofPL50 1612                       __end_ofPL42 0ED4  
                     __end_ofPL34 08A0                       __end_ofPL26 1BE6  
                     __end_ofPL18 11AA                       __end_ofPL60 0B48  
                     __end_ofPL52 147E                       __end_ofPL44 18E2  
                     __end_ofPL36 1608                       __end_ofPL28 089A  
                     __end_ofPL70 1866                       __end_ofPL62 18EC  
                     __end_ofPL54 1B36                       __end_ofPL46 0D20  
                     __end_ofPL38 1474                       __end_ofPL72 08A8  
                     __end_ofPL64 199E                       __end_ofPL56 133E  
                     __end_ofPL48 18AE                       __end_ofPL74 08B0  
                     __end_ofPL66 1082                       __end_ofPL58 17CE  
                     __end_ofPL68 1768               start_initialization 1612  
                       _TiGetTics 1A82            __end_of_GLCDMostraMenu 1CAC  
                      ?_HNouSegon 005E                  ??_UgetNumUsuaris 0063  
                UmotorUsers@state 0026                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1C26                __end_of_TiGetTimer 1A24  
                 _do_updateScores 03C3                     JJuguem@usuari 0063  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 11AA  
               __size_of_JendGame 0004                      ?_TiResetTics 005E  
                      ?_CantaData 005E              _UcheckExistsGetError 1D90  
         __end_of_SIONovaDireccio 1CE4              __size_of_LcNewString 000C  
                        ??_SMSoff 0063                          ??_LcInit 006F  
                       _NovaTecla 0050                 __size_of_TeTeclat 0116  
                        ??_SMotor 006A        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 0064                      ?__TiRSITimer 005E  
                   ??_initAltaveu 0064                          ??_Espera 006C  
              __end_of_JnovaTecla 1CEC                        ?_LcPutChar 005E  
                       _UenviaPas 1C38                       __pdataBANK0 00AA  
                  motorHora@state 0013                      _menuDaltGLCD 0020  
                    ??_UenviaChar 0064                        ?_NoFerMenu 005E  
                     ??_GLCDMotor 0072                        ?_URegister 005E  
                      ?_HnoJugant 005E                 ??_checkHoraAcabat 0063  
                   ??_init_eusart 0063                        ?_SiFerMenu 005E  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                      ?_TiGetTics 0063                   ?_GLCDMostraMenu 005E  
                        ?_HJugant 005E                    ?_JoystickMotor 005E  
                 ??_MsetNovaTecla 0063              __end_of_motorAltaveu 14FA  
                        ?_JJuguem 005E                          ?_LcClear 005E  
                        ?_CantaIR 005E        __size_of_conversorJoystick 0024  
              _calculateShowUsers 1D88                    _CantaPartBaixa 1702  
        ??_SIOHaAcabatPuntuacions 0063             ?_UcheckExistsGetError 005E  
               __size_of_high_rsi 002A                      ?_WaitForBusy 005E  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0063  
              SsetNovaTecla@tecla 0063                __end_of_UenviaChar 1C58  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
                ??_escriureEEPROM 0063             __size_of_UcheckExists 0004  
             ?_calculateShowUsers 005E                       ??_CToAReset 0063  
         ?_escriure2usuarisStruct 005E                         __pintcode 0008  
                   ??_playAltaveu 0063                        ?_UenviaPas 0063  
               __size_of_motorSIO 01C2                 __size_of_motorJoc 00A8  
                 CantaPartBaixa@c 0064                      _CToAHaAcabat 1D70  
             __end_of_initAltaveu 1D14                         _arrayZero 0042  
                        ?_initSIO 005E                       __smallconst 0200  
                       _convertir 0045                     ??_CToAobtenir 0065  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0006  
            ??_calculateShowUsers 0063  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 1CDC  
                  __size_of_Sinit 0008                       ??_HNouSegon 0063  
                  __size_of_Uinit 006E                       _direccioSIO 0047  
                     _direccioJoc 0012            __end_of_CantaPartBaixa 175E  
              JoystickMotor@state 0016                          _GLCDInit 1D4C  
              escriureEEPROM@caca 0063                       _do_register 03C5  
             __end_of_init_eusart 1BFC                         _newString 03C0  
                    _UcheckExists 1D94                         _jugantSIO 03B9  
        __size_of_HActualitzaHora 0034                         _jugantJoc 03BA  
                     ??_CantaData 0065                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 005E                  ?_SIONovaDireccio 005E  
            __end_of_SIOStartGame 1CD4                     UenviaChar@pos 0063  
  __end_of_escriure2usuarisStruct 1966                _escriureCharEEPROM 1ACC  
                       _novaTecla 0053                     motorSIO@state 000F  
                        _PIR1bits 000F9E                       ??_LcPutChar 0071  
                       _timerGLCD 0021                         _motorHora 1512  
                        _RCONbits 000FD0                         _reproduir 03C2  
                        _HGetTime 1D7C             __size_of_JoystickInit 0012  
                       _timerHora 0015                         _timerMenu 0030  
             ?_escriureCharEEPROM 0063                       ??_NoFerMenu 0063  
                      _ADCON0bits 000FC2                       ??_URegister 0063  
                     ??_HnoJugant 0063                       ??_SiFerMenu 0063  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1D88  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006A  
                       _zeroTecla 0038                          _LcGotoXY 19D2  
                  _usuariLoguejat 004D                          _LcLliure 1CB8  
                     ??_TiGetTics 0065           __size_of_compareStrings 002A  
            __size_of_TiInitTimer 0028                          _LcScroll 1D66  
                 ??_JoystickMotor 0064                     GLCDMotor@max1 004C  
                   GLCDMotor@max2 004B                     GLCDMotor@min1 001D  
                   GLCDMotor@min2 001C                      _teclaPremuda 00B3  
                        _JendGame 1DA8                         _usuariJoc 004A  
                     LcGotoXY@Row 006B                         copy_data0 1626  
                       copy_data1 1646              ??_escriureCharEEPROM 0064  
                 ?_CantaPartBaixa 005E               __end_of_CToAobtenir 1D70  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0063  
           escriureCharEEPROM@pos 0063                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 1082             __end_of_JnovaDireccio 1CF4  
                  ??_MNouJoystick 0063   __size_of_SIOHaAcabatPuntuacions 0004  
                    ?_UmotorUsers 005E                      _JoystickInit 1C26  
                      _EECON1bits 000FA6                       _indexUsuari 002E  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0011                          __Hrparam 0000  
                     _initAltaveu 1D0C                         menu@state 002C  
                        __Lrparam 0000                        ?_motorHora 005E  
            __size_of__TiRSITimer 003E                      _UgetUserName 1C12  
                     ??_UenviaPas 0064                      _novaDireccio 004E  
                    ??_init_ports 0063               HActualitzaHora@nova 0063  
      __end_of_UshowUsersCalculat 1C94                       _init_eusart 1BE6  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007C  
                    _novaTeclaJOC 0049                      _novaTeclaSIO 0046  
                 _do_check_exists 03C6                          __ptext10 1CCC  
                        __ptext11 1CD4                _EscriuPrimeraOrdre 1596  
                        __ptext20 147E                          __ptext12 1CDC  
                        __ptext21 02F6                          __ptext13 1D78  
                        __ptext30 1C94                          __ptext22 1B92  
                        __ptext14 1C70                          __ptext31 1D90  
                        __ptext23 1C7C                          __ptext15 1D54  
                        __ptext40 1CE4                          __ptext32 1D94  
                        __ptext24 1D88                          __ptext16 1D7C  
                        __ptext41 1CEC                          __ptext33 1D98  
                        __ptext25 1C88                          __ptext17 1D80  
                        __ptext50 1D0C                          __ptext42 1DA8  
                        __ptext34 1D9C                          __ptext26 1C12  
                        __ptext18 1512                          __ptext51 1A32  
                        __ptext43 1CF4                          __ptext35 1D5A  
                        __ptext27 1D8C                          __ptext19 1D84  
                        __ptext60 1D1C                          __ptext52 192A  
                        __ptext44 199E                          __ptext36 1D60  
                        __ptext28 1C38                          __ptext61 1D24  
                        __ptext53 0D20                          __ptext45 1CA0  
                        __ptext37 1DA0                          __ptext29 1C48  
                        __ptext70 1D44                          __ptext62 1D2C  
                        __ptext54 1ACC                          __ptext46 1B58  
                        __ptext38 1DA4                          __ptext71 1C26  
                        __ptext63 0ED4                          __ptext55 18AE  
                        __ptext47 1BE6                          __ptext39 1D66  
                        __ptext80 1BAE                          __ptext72 08B0  
                        __ptext64 1D34                          __ptext56 13E6  
                        __ptext48 1CFC                          __ptext81 1702  
                        __ptext73 181E                          __ptext65 1D3C  
                        __ptext57 1A5A                          __ptext49 1D04  
                        __ptext90 1866                          __ptext82 1768  
                        __ptext74 1966                          __ptext66 17CE  
                        __ptext58 1082                          __ptext83 1B36  
                        __ptext75 1CAC                          __ptext67 1280  
                        __ptext59 1D14                          __ptext84 1BCA  
                        __ptext76 1CB8                          __ptext68 1596  
                        __ptext85 1A82                          __ptext77 1B14  
                        __ptext69 11AA                          __ptext86 1D4C  
                        __ptext78 19D2                          __ptext87 1A06  
                        __ptext79 18EC                          __ptext88 1AF0  
                  CantaPartAlta@c 0064                       _lletraASCII 0054  
                        _high_rsi 0008                          _copsNota 0023  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 1D04                       _lletraInici 00AA  
                        _menuDalt 002F                          _menuList 0201  
             ?_EscriuPrimeraOrdre 005E                     __size_of_main 0078  
                   __size_of_menu 058E             __end_of_CantaPartAlta 17C4  
                  _CToAConverteix 1C58                     CantaData@Data 0065  
                        _tiTeclat 0036                __end_of_init_ports 1B76  
                        _setSMSon 03C8                     _SsetNovaTecla 1D14  
            __size_of_WaitForBusy 003E                          _nouSegon 03BC  
                        _motorSIO 0B48                 ??_HActualitzaHora 0064  
                        _motorJoc 133E                   _checkHoraAcabat 1C7C  
                        _timerSIO 0010                          _timerSMS 0052  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 0063                       _playAltaveu 1D84  
                    _motorAltaveu 147E           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1DA0              ??_EscriuPrimeraOrdre 0063  
                      LcInit@rows 006F                  ??_GLCDMostraMenu 0063  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1C94  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0063  
                     _CToAobtenir 1D6C             __size_of_SIOStartGame 0008  
                   ??_LcNewString 0068                          intlevel2 0000  
                    _timerAltaveu 0024                    _arrayShowUsers 0001  
          __end_of_CToAConverteix 1C64                        LcPutChar@c 0071  
                  ?_SsetNovaTecla 005E                 MNovaLletra@lletra 0063  
                 compareStrings@a 0063                   compareStrings@b 0064  
                     ??_motorHora 006A                      _SIONovaTecla 1CD4  
                     _tempsAcabat 03BB                       GLCDMotor@k1 001B  
                     GLCDMotor@k2 001A              __end_of_MNouJoystick 1D4C  
                    _SIOStartGame 1CCC                    _compareStrings 18AE  
                     _tmpPassword 0098               __end_of_MNovaLletra 1D3C  
                 ?_CToAConverteix 005E             __end_of_MsetNovaTecla 1D24  
         __end_of_checkHoraAcabat 1C88                       _tmpUsername 00A1  
                  _SIOcheckKrebut 1C64                       SMotor@state 0037  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1CB8  
            __size_of_UmotorUsers 017E                        _SIOendGame 1D74  
