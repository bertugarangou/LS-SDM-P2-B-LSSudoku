

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 10 19:04:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Pro license) build 20220127204148 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118                           	psect	pa_nodes0,global,class=CODE,delta=1
   119  0000                     
   120                           ; Version 2.36
   121                           ; Generated 28/01/2022 GMT
   122                           ; 
   123                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4321 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  001F08                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _arrayZero
   161  001F08  30                 	db	48
   162  001F09  20                 	db	32
   163                           
   164                           ;initializer for _convertir
   165  001F0A  FA                 	db	250
   166                           
   167                           ;initializer for _novaTeclaSIO
   168  001F0B  FF                 	db	255
   169                           
   170                           ;initializer for _direccioSIO
   171  001F0C  FF                 	db	255
   172                           
   173                           ;initializer for _usuariActualSIO
   174  001F0D  FF                 	db	255
   175                           
   176                           ;initializer for _novaTeclaJOC
   177  001F0E  FF                 	db	255
   178                           
   179                           ;initializer for _usuariJoc
   180  001F0F  FF                 	db	255
   181                           
   182                           ;initializer for GLCDMotor@max2
   183  001F10  0F                 	db	15
   184                           
   185                           ;initializer for GLCDMotor@max1
   186  001F11  0F                 	db	15
   187                           
   188                           ;initializer for _usuariLoguejat
   189  001F12  FF                 	db	255
   190                           
   191                           ;initializer for _novaDireccio
   192  001F13  FF                 	db	255
   193                           
   194                           ;initializer for _novaLletra
   195  001F14  FF                 	db	255
   196                           
   197                           ;initializer for _NovaTecla
   198  001F15  FF                 	db	255
   199                           
   200                           ;initializer for _ultimaTecla
   201  001F16  FF                 	db	255
   202                           
   203                           ;initializer for _novaTecla
   204  001F17  FF                 	db	255
   205                           
   206                           ;initializer for _lletraASCII
   207  001F18  FF                 	db	255
   208                           
   209                           ;initializer for _hora
   210  001F19  33                 	db	51
   211  001F1A  30                 	db	48
   212  001F1B  3A                 	db	58
   213  001F1C  30                 	db	48
   214  001F1D  30                 	db	48
   215  001F1E  00                 	db	0
   216                           
   217                           ;initializer for _stringScore
   218  001F1F  30                 	db	48
   219  001F20  30                 	db	48
   220  001F21  00                 	db	0
   221                           
   222                           	psect	idataBANK0
   223  001D6C                     __pidataBANK0:
   224                           	callstack 0
   225                           
   226                           ;initializer for _lletraInici
   227  001D6C  41                 	db	65
   228  001D6D  44                 	db	68
   229  001D6E  47                 	db	71
   230  001D6F  4A                 	db	74
   231  001D70  4D                 	db	77
   232  001D71  50                 	db	80
   233  001D72  54                 	db	84
   234  001D73  57                 	db	87
   235                           
   236                           ;initializer for _teclaPremuda
   237  001D74  01                 	db	1
   238  001D75  02                 	db	2
   239  001D76  03                 	db	3
   240  001D77  04                 	db	4
   241  001D78  05                 	db	5
   242  001D79  06                 	db	6
   243  001D7A  07                 	db	7
   244  001D7B  08                 	db	8
   245  001D7C  09                 	db	9
   246  001D7D  0A                 	db	10
   247  001D7E  00                 	db	0
   248  001D7F  0B                 	db	11
   249                           
   250                           ;initializer for _registerText
   251  001D80  32                 	db	50
   252  001D81  2E                 	db	46
   253  001D82  52                 	db	82
   254  001D83  45                 	db	69
   255  001D84  47                 	db	71
   256  001D85  49                 	db	73
   257  001D86  53                 	db	83
   258  001D87  54                 	db	84
   259  001D88  45                 	db	69
   260  001D89  52                 	db	82
   261  001D8A  00                 	db	0
   262                           
   263                           ;initializer for _loginText
   264  001D8B  31                 	db	49
   265  001D8C  2E                 	db	46
   266  001D8D  4C                 	db	76
   267  001D8E  4F                 	db	79
   268  001D8F  47                 	db	71
   269  001D90  49                 	db	73
   270  001D91  4E                 	db	78
   271  001D92  00                 	db	0
   272                           
   273                           	psect	smallconst
   274  000200                     __psmallconst:
   275                           	callstack 0
   276  000200  00                 	db	0
   277  000201                     _menuList:
   278                           	callstack 0
   279  000201  31                 	db	49
   280  000202  2E                 	db	46
   281  000203  50                 	db	80
   282  000204  6C                 	db	108
   283  000205  61                 	db	97
   284  000206  79                 	db	121
   285  000207  20                 	db	32
   286  000208  61                 	db	97
   287  000209  20                 	db	32
   288  00020A  47                 	db	71
   289  00020B  61                 	db	97
   290  00020C  6D                 	db	109
   291  00020D  65                 	db	101
   292  00020E  00                 	db	0
   293  00020F  00                 	db	0
   294  000210  00                 	db	0
   295  000211  00                 	db	0
   296  000212  00                 	db	0
   297  000213  00                 	db	0
   298  000214  00                 	db	0
   299  000215  00                 	db	0
   300  000216  00                 	db	0
   301  000217  00                 	db	0
   302  000218  00                 	db	0
   303  000219  00                 	db	0
   304  00021A  00                 	db	0
   305  00021B  00                 	db	0
   306  00021C  00                 	db	0
   307  00021D  00                 	db	0
   308  00021E  32                 	db	50
   309  00021F  2E                 	db	46
   310  000220  4D                 	db	77
   311  000221  6F                 	db	111
   312  000222  64                 	db	100
   313  000223  69                 	db	105
   314  000224  66                 	db	102
   315  000225  79                 	db	121
   316  000226  20                 	db	32
   317  000227  54                 	db	84
   318  000228  69                 	db	105
   319  000229  6D                 	db	109
   320  00022A  65                 	db	101
   321  00022B  00                 	db	0
   322  00022C  00                 	db	0
   323  00022D  00                 	db	0
   324  00022E  00                 	db	0
   325  00022F  00                 	db	0
   326  000230  00                 	db	0
   327  000231  00                 	db	0
   328  000232  00                 	db	0
   329  000233  00                 	db	0
   330  000234  00                 	db	0
   331  000235  00                 	db	0
   332  000236  00                 	db	0
   333  000237  00                 	db	0
   334  000238  00                 	db	0
   335  000239  00                 	db	0
   336  00023A  00                 	db	0
   337  00023B  33                 	db	51
   338  00023C  2E                 	db	46
   339  00023D  53                 	db	83
   340  00023E  68                 	db	104
   341  00023F  6F                 	db	111
   342  000240  77                 	db	119
   343  000241  20                 	db	32
   344  000242  47                 	db	71
   345  000243  65                 	db	101
   346  000244  6E                 	db	110
   347  000245  65                 	db	101
   348  000246  72                 	db	114
   349  000247  61                 	db	97
   350  000248  6C                 	db	108
   351  000249  20                 	db	32
   352  00024A  54                 	db	84
   353  00024B  6F                 	db	111
   354  00024C  70                 	db	112
   355  00024D  20                 	db	32
   356  00024E  35                 	db	53
   357  00024F  20                 	db	32
   358  000250  53                 	db	83
   359  000251  63                 	db	99
   360  000252  6F                 	db	111
   361  000253  72                 	db	114
   362  000254  65                 	db	101
   363  000255  73                 	db	115
   364  000256  20                 	db	32
   365  000257  00                 	db	0
   366  000258  34                 	db	52
   367  000259  2E                 	db	46
   368  00025A  4C                 	db	76
   369  00025B  6F                 	db	111
   370  00025C  67                 	db	103
   371  00025D  6F                 	db	111
   372  00025E  75                 	db	117
   373  00025F  74                 	db	116
   374  000260  00                 	db	0
   375  000261  00                 	db	0
   376  000262  00                 	db	0
   377  000263  00                 	db	0
   378  000264  00                 	db	0
   379  000265  00                 	db	0
   380  000266  00                 	db	0
   381  000267  00                 	db	0
   382  000268  00                 	db	0
   383  000269  00                 	db	0
   384  00026A  00                 	db	0
   385  00026B  00                 	db	0
   386  00026C  00                 	db	0
   387  00026D  00                 	db	0
   388  00026E  00                 	db	0
   389  00026F  00                 	db	0
   390  000270  00                 	db	0
   391  000271  00                 	db	0
   392  000272  00                 	db	0
   393  000273  00                 	db	0
   394  000274  00                 	db	0
   395  000275  35                 	db	53
   396  000276  2E                 	db	46
   397  000277  53                 	db	83
   398  000278  68                 	db	104
   399  000279  6F                 	db	111
   400  00027A  77                 	db	119
   401  00027B  20                 	db	32
   402  00027C  41                 	db	65
   403  00027D  6C                 	db	108
   404  00027E  6C                 	db	108
   405  00027F  20                 	db	32
   406  000280  55                 	db	85
   407  000281  73                 	db	115
   408  000282  65                 	db	101
   409  000283  72                 	db	114
   410  000284  73                 	db	115
   411  000285  00                 	db	0
   412  000286  00                 	db	0
   413  000287  00                 	db	0
   414  000288  00                 	db	0
   415  000289  00                 	db	0
   416  00028A  00                 	db	0
   417  00028B  00                 	db	0
   418  00028C  00                 	db	0
   419  00028D  00                 	db	0
   420  00028E  00                 	db	0
   421  00028F  00                 	db	0
   422  000290  00                 	db	0
   423  000291  00                 	db	0
   424  000292                     __end_of_menuList:
   425                           	callstack 0
   426  0000                     _RCREG	set	4014
   427  0000                     _TXREG	set	4013
   428  0000                     _EECON2	set	4007
   429  0000                     _EEDATA	set	4008
   430  0000                     _EEADR	set	4009
   431  0000                     _TMR0L	set	4054
   432  0000                     _TMR0H	set	4055
   433  0000                     _SPBRG	set	4015
   434  0000                     _SPBRGH	set	4016
   435  0000                     _BAUDCON	set	4024
   436  0000                     _RCSTA	set	4011
   437  0000                     _TXSTA	set	4012
   438  0000                     _TRISB	set	3987
   439  0000                     _TXSTAbits	set	4012
   440  0000                     _ADCON0bits	set	4034
   441  0000                     _T0CONbits	set	4053
   442  0000                     _LATD	set	3980
   443  0000                     _TRISD	set	3989
   444  0000                     _TRISC	set	3988
   445  0000                     _PORTCbits	set	3970
   446  0000                     _LATCbits	set	3979
   447  0000                     _TRISCbits	set	3988
   448  0000                     _PIR1bits	set	3998
   449  0000                     _EECON1bits	set	4006
   450  0000                     _TRISDbits	set	3989
   451  0000                     _TRISA	set	3986
   452  0000                     _LATDbits	set	3980
   453  0000                     _PORTDbits	set	3971
   454  0000                     _LATBbits	set	3978
   455  0000                     _ADCON2	set	4032
   456  0000                     _ADCON1	set	4033
   457  0000                     _ADCON0	set	4034
   458  0000                     _RCONbits	set	4048
   459  0000                     _T0CON	set	4053
   460  0000                     _INTCONbits	set	4082
   461  0000                     _ADRESH	set	4036
   462  000292                     STR_5:
   463  000292  54                 	db	84	;'T'
   464  000293  49                 	db	73	;'I'
   465  000294  4D                 	db	77	;'M'
   466  000295  45                 	db	69	;'E'
   467  000296  20                 	db	32
   468  000297  52                 	db	82	;'R'
   469  000298  45                 	db	69	;'E'
   470  000299  4D                 	db	77	;'M'
   471  00029A  41                 	db	65	;'A'
   472  00029B  49                 	db	73	;'I'
   473  00029C  4E                 	db	78	;'N'
   474  00029D  49                 	db	73	;'I'
   475  00029E  4E                 	db	78	;'N'
   476  00029F  47                 	db	71	;'G'
   477  0002A0  3A                 	db	58	;':'
   478  0002A1  00                 	db	0
   479  0002A2                     STR_4:
   480  0002A2  4D                 	db	77	;'M'
   481  0002A3  6F                 	db	111	;'o'
   482  0002A4  64                 	db	100	;'d'
   483  0002A5  69                 	db	105	;'i'
   484  0002A6  66                 	db	102	;'f'
   485  0002A7  79                 	db	121	;'y'
   486  0002A8  20                 	db	32
   487  0002A9  54                 	db	84	;'T'
   488  0002AA  69                 	db	105	;'i'
   489  0002AB  6D                 	db	109	;'m'
   490  0002AC  65                 	db	101	;'e'
   491  0002AD  3A                 	db	58	;':'
   492  0002AE  00                 	db	0
   493  0002AF                     STR_7:
   494  0002AF  54                 	db	84	;'T'
   495  0002B0  49                 	db	73	;'I'
   496  0002B1  4D                 	db	77	;'M'
   497  0002B2  45                 	db	69	;'E'
   498  0002B3  20                 	db	32
   499  0002B4  4C                 	db	76	;'L'
   500  0002B5  45                 	db	69	;'E'
   501  0002B6  46                 	db	70	;'F'
   502  0002B7  54                 	db	84	;'T'
   503  0002B8  3A                 	db	58	;':'
   504  0002B9  20                 	db	32
   505  0002BA  00                 	db	0
   506  0002BB                     STR_3:
   507  0002BB  42                 	db	66	;'B'
   508  0002BC  59                 	db	89	;'Y'
   509  0002BD  45                 	db	69	;'E'
   510  0002BE  20                 	db	32
   511  0002BF  42                 	db	66	;'B'
   512  0002C0  59                 	db	89	;'Y'
   513  0002C1  45                 	db	69	;'E'
   514  0002C2  20                 	db	32
   515  0002C3  00                 	db	0
   516  0002C4                     STR_8:
   517  0002C4  53                 	db	83	;'S'
   518  0002C5  43                 	db	67	;'C'
   519  0002C6  4F                 	db	79	;'O'
   520  0002C7  52                 	db	82	;'R'
   521  0002C8  45                 	db	69	;'E'
   522  0002C9  3A                 	db	58	;':'
   523  0002CA  20                 	db	32
   524  0002CB  00                 	db	0
   525  0002CC                     STR_6:
   526  0002CC  45                 	db	69	;'E'
   527  0002CD  52                 	db	82	;'R'
   528  0002CE  52                 	db	82	;'R'
   529  0002CF  4F                 	db	79	;'O'
   530  0002D0  52                 	db	82	;'R'
   531  0002D1  53                 	db	83	;'S'
   532  0002D2  3A                 	db	58	;':'
   533  0002D3  00                 	db	0
   534  0002D4                     STR_2:
   535  0002D4  50                 	db	80	;'P'
   536  0002D5  53                 	db	83	;'S'
   537  0002D6  57                 	db	87	;'W'
   538  0002D7  44                 	db	68	;'D'
   539  0002D8  3A                 	db	58	;':'
   540  0002D9  20                 	db	32
   541  0002DA  00                 	db	0
   542  0002DB                     STR_1:
   543  0002DB  55                 	db	85	;'U'
   544  0002DC  53                 	db	83	;'S'
   545  0002DD  45                 	db	69	;'E'
   546  0002DE  52                 	db	82	;'R'
   547  0002DF  3A                 	db	58	;':'
   548  0002E0  20                 	db	32
   549  0002E1  00                 	db	0
   550  0002E2  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555  001970                     __pcinit:
   556                           	callstack 0
   557  001970                     start_initialization:
   558                           	callstack 0
   559  001970                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK0 (39 bytes)
   563                           ; load TBLPTR registers with __pidataBANK0
   564  001970  0E6C               	movlw	low __pidataBANK0
   565  001972  6EF6               	movwf	tblptrl,c
   566  001974  0E1D               	movlw	high __pidataBANK0
   567  001976  6EF7               	movwf	tblptrh,c
   568  001978  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   569  00197A  6EF8               	movwf	tblptru,c
   570  00197C  EE00  F0BC         	lfsr	0,__pdataBANK0
   571  001980  EE10 F027          	lfsr	1,39
   572  001984                     copy_data0:
   573  001984  0009               	tblrd		*+
   574  001986  CFF5 FFEE          	movff	tablat,postinc0
   575  00198A  50E5               	movf	postdec1,w,c
   576  00198C  50E1               	movf	fsr1l,w,c
   577  00198E  E1FA               	bnz	copy_data0
   578                           
   579                           ; Initialize objects allocated to COMRAM (26 bytes)
   580                           ; load TBLPTR registers with __pidataCOMRAM
   581  001990  0E08               	movlw	low __pidataCOMRAM
   582  001992  6EF6               	movwf	tblptrl,c
   583  001994  0E1F               	movlw	high __pidataCOMRAM
   584  001996  6EF7               	movwf	tblptrh,c
   585  001998  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   586  00199A  6EF8               	movwf	tblptru,c
   587  00199C  EE00  F045         	lfsr	0,__pdataCOMRAM
   588  0019A0  EE10 F01A          	lfsr	1,26
   589  0019A4                     copy_data1:
   590  0019A4  0009               	tblrd		*+
   591  0019A6  CFF5 FFEE          	movff	tablat,postinc0
   592  0019AA  50E5               	movf	postdec1,w,c
   593  0019AC  50E1               	movf	fsr1l,w,c
   594  0019AE  E1FA               	bnz	copy_data1
   595                           
   596                           ; Clear objects allocated to BANK1 (144 bytes)
   597  0019B0  EE01  F000         	lfsr	0,__pbssBANK1
   598  0019B4  0E90               	movlw	144
   599  0019B6                     clear_0:
   600  0019B6  6AEE               	clrf	postinc0,c
   601  0019B8  06E8               	decf	wreg,f,c
   602  0019BA  E1FD               	bnz	clear_0
   603                           
   604                           ; Clear objects allocated to BANK0 (60 bytes)
   605  0019BC  EE00  F080         	lfsr	0,__pbssBANK0
   606  0019C0  0E3C               	movlw	60
   607  0019C2                     clear_1:
   608  0019C2  6AEE               	clrf	postinc0,c
   609  0019C4  06E8               	decf	wreg,f,c
   610  0019C6  E1FD               	bnz	clear_1
   611                           
   612                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   613  0019C8  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   614  0019CA  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   615  0019CC  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   616                           
   617                           ; Clear objects allocated to COMRAM (68 bytes)
   618  0019CE  EE00  F001         	lfsr	0,__pbssCOMRAM
   619  0019D2  0E44               	movlw	68
   620  0019D4                     clear_2:
   621  0019D4  6AEE               	clrf	postinc0,c
   622  0019D6  06E8               	decf	wreg,f,c
   623  0019D8  E1FD               	bnz	clear_2
   624  0019DA                     end_of_initialization:
   625                           	callstack 0
   626  0019DA                     __end_of__initialization:
   627                           	callstack 0
   628  0019DA  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   629  0019DC  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   630  0019DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   631  0019E0  6EF8               	movwf	tblptru,c
   632  0019E2  0100               	movlb	0
   633  0019E4  EFF4  F00C         	goto	_main	;jump to C main() function
   634                           
   635                           	psect	bitbssCOMRAM
   636  0003A8                     __pbitbssCOMRAM:
   637                           	callstack 0
   638  0003A8                     _hi_ha_hora_sio2:
   639                           	callstack 0
   640  0003A8                     	ds	1
   641  0003A9                     _Krebut:
   642                           	callstack 0
   643  0003A9                     	ds	1
   644  0003AA                     _jugantSIO:
   645                           	callstack 0
   646  0003AA                     	ds	1
   647  0003AB                     _jugantJoc:
   648                           	callstack 0
   649  0003AB                     	ds	1
   650  0003AC                     _tempsAcabat:
   651                           	callstack 0
   652  0003AC                     	ds	1
   653  0003AD                     _nouSegon:
   654                           	callstack 0
   655  0003AD                     	ds	1
   656  0003AE                     _jugant:
   657                           	callstack 0
   658  0003AE                     	ds	1
   659  0003AF                     _cap2:
   660                           	callstack 0
   661  0003AF                     	ds	1
   662  0003B0                     _cap1:
   663                           	callstack 0
   664  0003B0                     	ds	1
   665  0003B1                     _newString:
   666                           	callstack 0
   667  0003B1                     	ds	1
   668  0003B2                     _ferMenu:
   669                           	callstack 0
   670  0003B2                     	ds	1
   671  0003B3                     _reproduir:
   672                           	callstack 0
   673  0003B3                     	ds	1
   674  0003B4                     _do_updateScore:
   675                           	callstack 0
   676  0003B4                     	ds	1
   677  0003B5                     _do_showUsers:
   678                           	callstack 0
   679  0003B5                     	ds	1
   680  0003B6                     _do_register:
   681                           	callstack 0
   682  0003B6                     	ds	1
   683  0003B7                     _do_check_exists:
   684                           	callstack 0
   685  0003B7                     	ds	1
   686  0003B8                     _loginNOTRegister:
   687                           	callstack 0
   688  0003B8                     	ds	1
   689  0003B9                     _setSMSon:
   690                           	callstack 0
   691  0003B9                     	ds	1
   692  0003BA                     _nou_s:
   693                           	callstack 0
   694  0003BA                     	ds	1
   695                           
   696                           	psect	bssCOMRAM
   697  000001                     __pbssCOMRAM:
   698                           	callstack 0
   699  000001                     _horaTX:
   700                           	callstack 0
   701  000001                     	ds	6
   702  000007                     _userPtr:
   703                           	callstack 0
   704  000007                     	ds	2
   705  000009                     _h_Tics:
   706                           	callstack 0
   707  000009                     	ds	2
   708  00000B                     _s_ptr:
   709                           	callstack 0
   710  00000B                     	ds	2
   711  00000D                     motorSIO@state:
   712                           	callstack 0
   713  00000D                     	ds	1
   714  00000E                     _mask:
   715                           	callstack 0
   716  00000E                     	ds	1
   717  00000F                     _charActu:
   718                           	callstack 0
   719  00000F                     	ds	1
   720  000010                     _score:
   721                           	callstack 0
   722  000010                     	ds	1
   723  000011                     _timerSIO:
   724                           	callstack 0
   725  000011                     	ds	1
   726  000012                     motorJoc@state:
   727                           	callstack 0
   728  000012                     	ds	1
   729  000013                     _direccioJoc:
   730                           	callstack 0
   731  000013                     	ds	1
   732  000014                     motorHora@state:
   733                           	callstack 0
   734  000014                     	ds	1
   735  000015                     _segons:
   736                           	callstack 0
   737  000015                     	ds	1
   738  000016                     _timerHora:
   739                           	callstack 0
   740  000016                     	ds	1
   741  000017                     JoystickMotor@state:
   742                           	callstack 0
   743  000017                     	ds	1
   744  000018                     _ultimaTeclaAD:
   745                           	callstack 0
   746  000018                     	ds	1
   747  000019                     GLCDMotor@length2:
   748                           	callstack 0
   749  000019                     	ds	1
   750  00001A                     GLCDMotor@length1:
   751                           	callstack 0
   752  00001A                     	ds	1
   753  00001B                     GLCDMotor@k2:
   754                           	callstack 0
   755  00001B                     	ds	1
   756  00001C                     GLCDMotor@k1:
   757                           	callstack 0
   758  00001C                     	ds	1
   759  00001D                     GLCDMotor@min2:
   760                           	callstack 0
   761  00001D                     	ds	1
   762  00001E                     GLCDMotor@min1:
   763                           	callstack 0
   764  00001E                     	ds	1
   765  00001F                     GLCDMotor@j:
   766                           	callstack 0
   767  00001F                     	ds	1
   768  000020                     GLCDMotor@state:
   769                           	callstack 0
   770  000020                     	ds	1
   771  000021                     _menuDaltGLCD:
   772                           	callstack 0
   773  000021                     	ds	1
   774  000022                     _timerGLCD:
   775                           	callstack 0
   776  000022                     	ds	1
   777  000023                     motorAltaveu@state:
   778                           	callstack 0
   779  000023                     	ds	1
   780  000024                     _copsNota:
   781                           	callstack 0
   782  000024                     	ds	1
   783  000025                     _timerAltaveu:
   784                           	callstack 0
   785  000025                     	ds	1
   786  000026                     _nota:
   787                           	callstack 0
   788  000026                     	ds	1
   789  000027                     UmotorUsers@state:
   790                           	callstack 0
   791  000027                     	ds	1
   792  000028                     _scoreUsr:
   793                           	callstack 0
   794  000028                     	ds	1
   795  000029                     _j:
   796                           	callstack 0
   797  000029                     	ds	1
   798  00002A                     _i:
   799                           	callstack 0
   800  00002A                     	ds	1
   801  00002B                     _indexNextUserStruct:
   802                           	callstack 0
   803  00002B                     	ds	1
   804  00002C                     _indexNextUser:
   805                           	callstack 0
   806  00002C                     	ds	1
   807  00002D                     _numUsuaris:
   808                           	callstack 0
   809  00002D                     	ds	1
   810  00002E                     menu@state:
   811                           	callstack 0
   812  00002E                     	ds	1
   813  00002F                     _pos:
   814                           	callstack 0
   815  00002F                     	ds	1
   816  000030                     _indexUsuari:
   817                           	callstack 0
   818  000030                     	ds	1
   819  000031                     _menuDalt:
   820                           	callstack 0
   821  000031                     	ds	1
   822  000032                     _timerMenu:
   823                           	callstack 0
   824  000032                     	ds	1
   825  000033                     _tmp:
   826                           	callstack 0
   827  000033                     	ds	1
   828  000034                     _counter:
   829                           	callstack 0
   830  000034                     	ds	1
   831  000035                     TeTeclat@files:
   832                           	callstack 0
   833  000035                     	ds	1
   834  000036                     TeTeclat@cols:
   835                           	callstack 0
   836  000036                     	ds	1
   837  000037                     TeTeclat@state:
   838                           	callstack 0
   839  000037                     	ds	1
   840  000038                     _tiTeclat:
   841                           	callstack 0
   842  000038                     	ds	1
   843  000039                     SMotor@state:
   844                           	callstack 0
   845  000039                     	ds	1
   846  00003A                     _zeroTecla:
   847                           	callstack 0
   848  00003A                     	ds	1
   849  00003B                     _timerSMS:
   850                           	callstack 0
   851  00003B                     	ds	1
   852  00003C                     _sumaPulsacions:
   853                           	callstack 0
   854  00003C                     	ds	1
   855  00003D                     _Timer:
   856                           	callstack 0
   857  00003D                     	ds	1
   858  00003E                     _ColumnAct:
   859                           	callstack 0
   860  00003E                     	ds	1
   861  00003F                     _RowAct:
   862                           	callstack 0
   863  00003F                     	ds	1
   864  000040                     _Rows:
   865                           	callstack 0
   866  000040                     	ds	1
   867  000041                     _horaTmp:
   868                           	callstack 0
   869  000041                     	ds	4
   870                           
   871                           	psect	dataCOMRAM
   872  000045                     __pdataCOMRAM:
   873                           	callstack 0
   874  000045                     _arrayZero:
   875                           	callstack 0
   876  000045                     	ds	2
   877  000047                     _convertir:
   878                           	callstack 0
   879  000047                     	ds	1
   880  000048                     _novaTeclaSIO:
   881                           	callstack 0
   882  000048                     	ds	1
   883  000049                     _direccioSIO:
   884                           	callstack 0
   885  000049                     	ds	1
   886  00004A                     _usuariActualSIO:
   887                           	callstack 0
   888  00004A                     	ds	1
   889  00004B                     _novaTeclaJOC:
   890                           	callstack 0
   891  00004B                     	ds	1
   892  00004C                     _usuariJoc:
   893                           	callstack 0
   894  00004C                     	ds	1
   895  00004D                     GLCDMotor@max2:
   896                           	callstack 0
   897  00004D                     	ds	1
   898  00004E                     GLCDMotor@max1:
   899                           	callstack 0
   900  00004E                     	ds	1
   901  00004F                     _usuariLoguejat:
   902                           	callstack 0
   903  00004F                     	ds	1
   904  000050                     _novaDireccio:
   905                           	callstack 0
   906  000050                     	ds	1
   907  000051                     _novaLletra:
   908                           	callstack 0
   909  000051                     	ds	1
   910  000052                     _NovaTecla:
   911                           	callstack 0
   912  000052                     	ds	1
   913  000053                     _ultimaTecla:
   914                           	callstack 0
   915  000053                     	ds	1
   916  000054                     _novaTecla:
   917                           	callstack 0
   918  000054                     	ds	1
   919  000055                     _lletraASCII:
   920                           	callstack 0
   921  000055                     	ds	1
   922  000056                     _hora:
   923                           	callstack 0
   924  000056                     	ds	6
   925  00005C                     _stringScore:
   926                           	callstack 0
   927  00005C                     	ds	3
   928                           
   929                           	psect	bssBANK0
   930  000080                     __pbssBANK0:
   931                           	callstack 0
   932  000080                     _s_Timers:
   933                           	callstack 0
   934  000080                     	ds	24
   935  000098                     _puntuacions:
   936                           	callstack 0
   937  000098                     	ds	10
   938  0000A2                     _arrayShowUsers:
   939                           	callstack 0
   940  0000A2                     	ds	8
   941  0000AA                     _tmpPassword:
   942                           	callstack 0
   943  0000AA                     	ds	9
   944  0000B3                     _tmpUsername:
   945                           	callstack 0
   946  0000B3                     	ds	9
   947                           
   948                           	psect	dataBANK0
   949  0000BC                     __pdataBANK0:
   950                           	callstack 0
   951  0000BC                     _lletraInici:
   952                           	callstack 0
   953  0000BC                     	ds	8
   954  0000C4                     _teclaPremuda:
   955                           	callstack 0
   956  0000C4                     	ds	12
   957  0000D0                     _registerText:
   958                           	callstack 0
   959  0000D0                     	ds	11
   960  0000DB                     _loginText:
   961                           	callstack 0
   962  0000DB                     	ds	8
   963                           
   964                           	psect	bssBANK1
   965  000100                     __pbssBANK1:
   966                           	callstack 0
   967  000100                     _usuaris:
   968                           	callstack 0
   969  000100                     	ds	144
   970                           
   971                           	psect	cstackBANK0
   972  0000E3                     __pcstackBANK0:
   973                           	callstack 0
   974  0000E3                     ??_menu:
   975                           
   976                           ; 1 bytes @ 0x0
   977  0000E3                     	ds	5
   978                           
   979                           	psect	cstackCOMRAM
   980  00005F                     __pcstackCOMRAM:
   981                           	callstack 0
   982  00005F                     
   983                           ; 1 bytes @ 0x0
   984  00005F                     	ds	1
   985  000060                     ??_high_rsi:
   986                           
   987                           ; 1 bytes @ 0x1
   988  000060                     	ds	4
   989  000064                     ??_EscriuPrimeraOrdre:
   990  000064                     ??_CantaPartAlta:
   991  000064                     ??_CantaPartBaixa:
   992  000064                     ?_TiGetTics:
   993                           	callstack 0
   994  000064                     ?_UgetUserName:
   995                           	callstack 0
   996  000064                     ?_getArrayShowUsers:
   997                           	callstack 0
   998  000064                     SsetNovaTecla@tecla:
   999                           	callstack 0
  1000  000064                     TiResetTics@Handle:
  1001                           	callstack 0
  1002  000064                     MsetNovaTecla@tecla:
  1003                           	callstack 0
  1004  000064                     MNovaLletra@lletra:
  1005                           	callstack 0
  1006  000064                     MNouJoystick@posicio:
  1007                           	callstack 0
  1008  000064                     UenviaChar@pos:
  1009                           	callstack 0
  1010  000064                     UenviaPas@pos:
  1011                           	callstack 0
  1012  000064                     escriureCharEEPROM@pos:
  1013                           	callstack 0
  1014  000064                     llegirCharEEPROM@pos:
  1015                           	callstack 0
  1016  000064                     compareStrings@a:
  1017                           	callstack 0
  1018  000064                     UgetScore@quin:
  1019                           	callstack 0
  1020  000064                     UgetTop5@quin:
  1021                           	callstack 0
  1022  000064                     UnewScore@scoretmp:
  1023                           	callstack 0
  1024  000064                     GLCDMostraMenu@num:
  1025                           	callstack 0
  1026  000064                     HActualitzaHora@nova:
  1027                           	callstack 0
  1028  000064                     JJuguem@usuari:
  1029                           	callstack 0
  1030  000064                     JnovaTecla@tecla:
  1031                           	callstack 0
  1032  000064                     JnovaDireccio@dir:
  1033                           	callstack 0
  1034  000064                     conversorJoystick@direc:
  1035                           	callstack 0
  1036  000064                     SIONovaDireccio@num:
  1037                           	callstack 0
  1038  000064                     SIOStartGame@usuari:
  1039                           	callstack 0
  1040  000064                     SIONovaTecla@tecla:
  1041                           	callstack 0
  1042  000064                     CToAConverteix@numero:
  1043                           	callstack 0
  1044  000064                     ___lbdiv@divisor:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x5
  1048  000064                     	ds	1
  1049  000065                     ??_JoystickMotor:
  1050  000065                     CantaPartAlta@c:
  1051                           	callstack 0
  1052  000065                     CantaPartBaixa@c:
  1053                           	callstack 0
  1054  000065                     EscriuPrimeraOrdre@ordre:
  1055                           	callstack 0
  1056  000065                     UenviaChar@c:
  1057                           	callstack 0
  1058  000065                     UenviaPas@c:
  1059                           	callstack 0
  1060  000065                     escriureCharEEPROM@c:
  1061                           	callstack 0
  1062  000065                     ___lbdiv@dividend:
  1063                           	callstack 0
  1064  000065                     compareStrings@b:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x6
  1068  000065                     	ds	1
  1069  000066                     ??_TiGetTics:
  1070  000066                     CantaIR@IR:
  1071                           	callstack 0
  1072  000066                     CantaData@Data:
  1073                           	callstack 0
  1074  000066                     UgetUserName@quin:
  1075                           	callstack 0
  1076  000066                     getArrayShowUsers@quin:
  1077                           	callstack 0
  1078  000066                     ___lbdiv@counter:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x7
  1082  000066                     	ds	1
  1083  000067                     ??_compareStrings:
  1084  000067                     ___lbdiv@quotient:
  1085                           	callstack 0
  1086  000067                     LcNewString@new_s:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x8
  1090  000067                     	ds	1
  1091  000068                     ??_Uinit:
  1092  000068                     TiGetTics@Handle:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x9
  1096  000068                     	ds	1
  1097  000069                     ??_UmotorUsers:
  1098  000069                     TiGetTics@actual:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xA
  1102  000069                     	ds	1
  1103  00006A                     Uinit@k:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0xB
  1107  00006A                     	ds	1
  1108  00006B                     ??_motorHora:
  1109  00006B                     ??_motorAltaveu:
  1110  00006B                     ??_TeTeclat:
  1111  00006B                     ??_SMotor:
  1112  00006B                     WaitForBusy@Busy:
  1113                           	callstack 0
  1114  00006B                     Uinit@k_1194:
  1115                           	callstack 0
  1116  00006B                     Espera@ms:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xC
  1120  00006B                     	ds	1
  1121  00006C                     LcGotoXY@Row:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0xD
  1125  00006C                     	ds	1
  1126  00006D                     ??_Espera:
  1127  00006D                     LcGotoXY@Fisics:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xE
  1131  00006D                     	ds	1
  1132  00006E                     Espera@Timer:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0xF
  1136  00006E                     	ds	1
  1137  00006F                     LcInit@rows:
  1138                           	callstack 0
  1139  00006F                     _LcGotoXY$343:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x10
  1143  00006F                     	ds	1
  1144  000070                     LcInit@i:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x11
  1148  000070                     	ds	1
  1149  000071                     LcGotoXY@Column:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x12
  1153  000071                     	ds	1
  1154  000072                     ??_motorJoc:
  1155  000072                     LcPutChar@c:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x13
  1159  000072                     	ds	1
  1160  000073                     ??_GLCDMotor:
  1161  000073                     ??_motorSIO:
  1162  000073                     
  1163                           ; 1 bytes @ 0x14
  1164  000073                     	ds	2
  1165  000075                     
  1166                           ; 1 bytes @ 0x16
  1167 ;;
  1168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1169 ;;
  1170 ;; *************** function _main *****************
  1171 ;; Defined at:
  1172 ;;		line 75 in file "main.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1
  1186 ;;      Params:         0       0       0
  1187 ;;      Locals:         0       0       0
  1188 ;;      Temps:          0       0       0
  1189 ;;      Totals:         0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels required when called: 7
  1192 ;; This function calls:
  1193 ;;		_CtoA
  1194 ;;		_GLCDInit
  1195 ;;		_GLCDMotor
  1196 ;;		_JoystickInit
  1197 ;;		_JoystickMotor
  1198 ;;		_LcInit
  1199 ;;		_LcLCD
  1200 ;;		_Minit
  1201 ;;		_SMotor
  1202 ;;		_Sinit
  1203 ;;		_TeInit
  1204 ;;		_TeTeclat
  1205 ;;		_TiInitTimer
  1206 ;;		_Uinit
  1207 ;;		_UmotorUsers
  1208 ;;		_initAltaveu
  1209 ;;		_initHora
  1210 ;;		_initSIO
  1211 ;;		_init_eusart
  1212 ;;		_init_ports
  1213 ;;		_menu
  1214 ;;		_motorAltaveu
  1215 ;;		_motorHora
  1216 ;;		_motorJoc
  1217 ;;		_motorSIO
  1218 ;; This function is called by:
  1219 ;;		Startup code after reset
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text0
  1224  0019E8                     __ptext0:
  1225                           	callstack 0
  1226  0019E8                     _main:
  1227                           	callstack 24
  1228                           
  1229                           ;main.c: 76:     init_ports();
  1230                           
  1231                           ;incstack = 0
  1232  0019E8  EC91  F00F         	call	_init_ports	;wreg free
  1233                           
  1234                           ;main.c: 77:     init_eusart();
  1235  0019EC  EC9E  F00F         	call	_init_eusart	;wreg free
  1236                           
  1237                           ;main.c: 78:     TiInitTimer();
  1238  0019F0  ECA2  F00E         	call	_TiInitTimer	;wreg free
  1239                           
  1240                           ;main.c: 79:     TeInit();
  1241  0019F4  EC6E  F000         	call	_TeInit	;wreg free
  1242                           
  1243                           ;main.c: 80:     Sinit();
  1244  0019F8  EC72  F000         	call	_Sinit	;wreg free
  1245                           
  1246                           ;main.c: 82:     initAltaveu();
  1247  0019FC  EC62  F000         	call	_initAltaveu	;wreg free
  1248                           
  1249                           ;main.c: 83:     GLCDInit();
  1250  001A00  EC82  F000         	call	_GLCDInit	;wreg free
  1251                           
  1252                           ;main.c: 84:     JoystickInit();
  1253  001A04  ECBD  F00F         	call	_JoystickInit	;wreg free
  1254                           
  1255                           ;main.c: 85:     initHora();
  1256  001A08  EC5E  F000         	call	_initHora	;wreg free
  1257                           
  1258                           ;main.c: 86:     initSIO();
  1259  001A0C  EC5A  F000         	call	_initSIO	;wreg free
  1260                           
  1261                           ;main.c: 88:     LcInit(2);
  1262  001A10  0E02               	movlw	2
  1263  001A12  EC3E  F00B         	call	_LcInit
  1264                           
  1265                           ;main.c: 89:     Uinit();
  1266  001A16  EC68  F00A         	call	_Uinit	;wreg free
  1267                           
  1268                           ;main.c: 90:     Minit();
  1269  001A1A  EC7A  F000         	call	_Minit	;wreg free
  1270  001A1E                     l7141:
  1271                           
  1272                           ;main.c: 92:         GLCDMotor();
  1273  001A1E  ECBA  F007         	call	_GLCDMotor	;wreg free
  1274                           
  1275                           ;main.c: 93:         motorJoc();
  1276  001A22  EC9D  F00B         	call	_motorJoc	;wreg free
  1277                           
  1278                           ;main.c: 94:         motorSIO();
  1279  001A26  ECF7  F004         	call	_motorSIO	;wreg free
  1280                           
  1281                           ;main.c: 95:         motorHora();
  1282  001A2A  EC38  F00C         	call	_motorHora	;wreg free
  1283                           
  1284                           ;main.c: 96:         JoystickMotor();
  1285  001A2E  ECD3  F00A         	call	_JoystickMotor	;wreg free
  1286                           
  1287                           ;main.c: 97:         menu();
  1288  001A32  EC72  F001         	call	_menu	;wreg free
  1289                           
  1290                           ;main.c: 98:         CtoA();
  1291  001A36  EC26  F00F         	call	_CtoA	;wreg free
  1292                           
  1293                           ;main.c: 99:         motorAltaveu();
  1294  001A3A  ECEF  F00B         	call	_motorAltaveu	;wreg free
  1295                           
  1296                           ;main.c: 100:         UmotorUsers();
  1297  001A3E  EC60  F006         	call	_UmotorUsers	;wreg free
  1298                           
  1299                           ;main.c: 102:         TeTeclat();
  1300  001A42  ECD7  F009         	call	_TeTeclat	;wreg free
  1301                           
  1302                           ;main.c: 103:         SMotor();
  1303  001A46  EC00  F009         	call	_SMotor	;wreg free
  1304                           
  1305                           ;main.c: 104:         LcLCD();
  1306  001A4A  EC8E  F00D         	call	_LcLCD	;wreg free
  1307  001A4E  D7E7               	goto	l7141
  1308  001A50                     __end_of_main:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _motorSIO *****************
  1312 ;; Defined at:
  1313 ;;		line 50 in file "SIO.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1
  1327 ;;      Params:         0       0       0
  1328 ;;      Locals:         0       0       0
  1329 ;;      Temps:          2       0       0
  1330 ;;      Totals:         2       0       0
  1331 ;;Total ram usage:        2 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 6
  1334 ;; This function calls:
  1335 ;;		_CToAConverteix
  1336 ;;		_CToAHaAcabat
  1337 ;;		_CToAobtenir
  1338 ;;		_HGetTime
  1339 ;;		_LcClear
  1340 ;;		_LcGotoXY
  1341 ;;		_LcLliure
  1342 ;;		_LcNewString
  1343 ;;		_LcPutChar
  1344 ;;		_TiGetTics
  1345 ;;		_TiResetTics
  1346 ;;		_UgetUserName
  1347 ;;		_UnewScore
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text1
  1354  0009EE                     __ptext1:
  1355                           	callstack 0
  1356  0009EE                     _motorSIO:
  1357                           	callstack 24
  1358                           
  1359                           ;SIO.c: 51:     static char state = 0;;SIO.c: 53:  switch(state) {
  1360                           
  1361                           ;incstack = 0
  1362  0009EE  D124               	goto	l5297
  1363  0009F0                     l5121:
  1364                           
  1365                           ;SIO.c: 55:    if (usuariActualSIO > -1) {
  1366  0009F0  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1367  0009F2  0012               	return	
  1368                           
  1369                           ;SIO.c: 56:     userPtr = UgetUserName(usuariActualSIO);
  1370  0009F4  504A               	movf	_usuariActualSIO^0,w,c
  1371  0009F6  ECA9  F00F         	call	_UgetUserName
  1372  0009FA  C064  F007         	movff	?_UgetUserName,_userPtr
  1373  0009FE  C065  F008         	movff	?_UgetUserName+1,_userPtr+1
  1374                           
  1375                           ;SIO.c: 57:     jugantSIO = 1;
  1376  000A02  8475               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1377                           
  1378                           ;SIO.c: 58:     Krebut = 0;
  1379  000A04  9275               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1380  000A06                     l5129:
  1381                           
  1382                           ;SIO.c: 59:     state++;
  1383  000A06  2A0D               	incf	motorSIO@state^0,f,c
  1384                           
  1385                           ;SIO.c: 61:   break;
  1386                           
  1387                           ;SIO.c: 60:    }
  1388  000A08  0012               	return	
  1389  000A0A                     l5131:
  1390                           
  1391                           ;SIO.c: 63:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1392  000A0A  D93E               	call	PL24	;call to abstracted procedure
  1393  000A0C  E104               	bnz	l5139
  1394  000A0E  A2AC               	btfss	172,1,c	;volatile
  1395  000A10  D002               	goto	l5139
  1396                           
  1397                           ;SIO.c: 64:     TXREG = '\0';
  1398  000A12  6AAD               	clrf	173,c	;volatile
  1399  000A14  D032               	goto	l5175
  1400  000A16                     l5139:
  1401  000A16  D938               	call	PL24	;call to abstracted procedure
  1402  000A18  A4D8               	btfss	status,2,c
  1403  000A1A  A2AC               	btfss	172,1,c	;volatile
  1404  000A1C  0012               	return	
  1405                           
  1406                           ;SIO.c: 69:     TXREG = *userPtr;
  1407  000A1E  D934               	call	PL24	;call to abstracted procedure
  1408  000A20  6EAD               	movwf	173,c	;volatile
  1409                           
  1410                           ;SIO.c: 70:     userPtr++;
  1411  000A22  4A07               	infsnz	_userPtr^0,f,c
  1412  000A24  2A08               	incf	(_userPtr+1)^0,f,c
  1413  000A26  0012               	return	
  1414  000A28                     l5147:
  1415                           
  1416                           ;SIO.c: 74:    if (RCREG == 'K') {
  1417  000A28  0E4B               	movlw	75
  1418  000A2A  18AE               	xorwf	174,w,c
  1419  000A2C  A4D8               	btfss	status,2,c
  1420  000A2E  0012               	return	
  1421                           
  1422                           ;SIO.c: 75:     Krebut = 1;
  1423  000A30  8275               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1424  000A32  D7E9               	goto	l5129
  1425  000A34                     l5153:
  1426                           
  1427                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1428  000A34  2849               	incf	_direccioSIO^0,w,c
  1429  000A36  E006               	bz	l5159
  1430  000A38  A2AC               	btfss	172,1,c	;volatile
  1431  000A3A  D004               	goto	l5159
  1432                           
  1433                           ;SIO.c: 81:     TXREG = direccioSIO;
  1434  000A3C  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1435                           
  1436                           ;SIO.c: 82:     direccioSIO = -1;
  1437  000A40  6849               	setf	_direccioSIO^0,c
  1438                           
  1439                           ;SIO.c: 84:    }
  1440  000A42  0012               	return	
  1441  000A44                     l5159:
  1442  000A44  0E30               	movlw	48
  1443  000A46  6448               	cpfsgt	_novaTeclaSIO^0,c
  1444  000A48  D009               	goto	l1337
  1445  000A4A  0E3A               	movlw	58
  1446  000A4C  6048               	cpfslt	_novaTeclaSIO^0,c
  1447  000A4E  D006               	goto	l1337
  1448  000A50  A2AC               	btfss	172,1,c	;volatile
  1449  000A52  D004               	goto	l1337
  1450                           
  1451                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1452  000A54  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1453                           
  1454                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1455  000A58  6A48               	clrf	_novaTeclaSIO^0,c
  1456                           
  1457                           ;SIO.c: 89:    }
  1458  000A5A  0012               	return	
  1459  000A5C                     l1337:
  1460  000A5C  B475               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1461  000A5E  D002               	goto	u4710
  1462  000A60  B2AC               	btfsc	172,1,c	;volatile
  1463  000A62  D002               	goto	u4720
  1464  000A64                     u4710:
  1465  000A64  AA9E               	btfss	158,5,c	;volatile
  1466  000A66  D00B               	goto	l1339
  1467  000A68                     u4720:
  1468                           
  1469                           ;SIO.c: 91:     LcClear();
  1470  000A68  EC38  F00F         	call	_LcClear	;wreg free
  1471                           
  1472                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1473  000A6C  0ECC               	movlw	low STR_6
  1474  000A6E  ECD4  F004         	call	PL10	;call to abstracted procedure
  1475  000A72  EC2D  F000         	call	_LcNewString	;wreg free
  1476                           
  1477                           ;SIO.c: 93:     TXREG = 'F';
  1478  000A76  0E46               	movlw	70
  1479  000A78  6EAD               	movwf	173,c	;volatile
  1480  000A7A                     l5175:
  1481                           
  1482                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1483  000A7A  6A48               	clrf	_novaTeclaSIO^0,c
  1484  000A7C  D7C4               	goto	l5129
  1485  000A7E                     l1339:
  1486  000A7E  A075               	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1487  000A80  0012               	return	
  1488                           
  1489                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1490  000A82  EC95  F000         	call	_HGetTime	;wreg free
  1491  000A86  6ED9               	movwf	fsr2l,c
  1492  000A88  6ADA               	clrf	fsr2h,c
  1493  000A8A  50DF               	movf	indf2,w,c
  1494  000A8C  6E01               	movwf	_horaTX^0,c
  1495                           
  1496                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1497  000A8E  EC95  F000         	call	_HGetTime	;wreg free
  1498  000A92  D911               	call	PL78	;call to abstracted procedure
  1499  000A94  6E02               	movwf	(_horaTX+1)^0,c
  1500                           
  1501                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1502  000A96  EC95  F000         	call	_HGetTime	;wreg free
  1503  000A9A  D8FC               	call	PL50	;call to abstracted procedure
  1504  000A9C  6E03               	movwf	(_horaTX+2)^0,c
  1505                           
  1506                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1507  000A9E  EC95  F000         	call	_HGetTime	;wreg free
  1508  000AA2  D8FE               	call	PL52	;call to abstracted procedure
  1509  000AA4  6E04               	movwf	(_horaTX+3)^0,c
  1510                           
  1511                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1512  000AA6  EC95  F000         	call	_HGetTime	;wreg free
  1513  000AAA  6ED9               	movwf	fsr2l,c
  1514  000AAC  6ADA               	clrf	fsr2h,c
  1515  000AAE  0E04               	movlw	4
  1516  000AB0  26D9               	addwf	fsr2l,f,c
  1517  000AB2  50DF               	movf	indf2,w,c
  1518  000AB4  6E05               	movwf	(_horaTX+4)^0,c
  1519                           
  1520                           ;SIO.c: 103:     horaTX[5] = newLineChar;
  1521  000AB6  0E0D               	movlw	13
  1522  000AB8  6E06               	movwf	(_horaTX+5)^0,c
  1523                           
  1524                           ;SIO.c: 104:     mask = 1;
  1525  000ABA  0E01               	movlw	1
  1526  000ABC  6E0E               	movwf	_mask^0,c
  1527                           
  1528                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1529  000ABE  5011               	movf	_timerSIO^0,w,c
  1530  000AC0  EC76  F00F         	call	_TiResetTics
  1531                           
  1532                           ;SIO.c: 106:     charActu = 0;
  1533  000AC4  6A0F               	clrf	_charActu^0,c
  1534                           
  1535                           ;SIO.c: 107:     state = 10;
  1536  000AC6  0E0A               	movlw	10
  1537  000AC8  6E0D               	movwf	motorSIO@state^0,c
  1538  000ACA  0C0A               	retlw	10
  1539  000ACC                     l1346:
  1540                           
  1541                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1542  000ACC  AA9E               	btfss	158,5,c	;volatile
  1543  000ACE  0012               	return	
  1544                           
  1545                           ;SIO.c: 112:     score = RCREG;
  1546  000AD0  CFAE F010          	movff	4014,_score	;volatile
  1547                           
  1548                           ;SIO.c: 113:     UnewScore(score);
  1549  000AD4  5010               	movf	_score^0,w,c
  1550  000AD6  EC39  F000         	call	_UnewScore
  1551                           
  1552                           ;SIO.c: 114:     CToAConverteix(score);
  1553  000ADA  5010               	movf	_score^0,w,c
  1554  000ADC  EC27  F000         	call	_CToAConverteix
  1555                           
  1556                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1557  000AE0  5011               	movf	_timerSIO^0,w,c
  1558  000AE2  EC76  F00F         	call	_TiResetTics
  1559  000AE6  D78F               	goto	l5129
  1560  000AE8                     l5207:
  1561                           
  1562                           ;SIO.c: 120:    if (TiGetTics(timerSIO) > 2490) {
  1563  000AE8  5011               	movf	_timerSIO^0,w,c
  1564  000AEA  ECDD  F00E         	call	_TiGetTics
  1565  000AEE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1566  000AF0  D00F               	goto	l5215
  1567  000AF2  0EBB               	movlw	187
  1568  000AF4  5C64               	subwf	?_TiGetTics^0,w,c
  1569  000AF6  0E09               	movlw	9
  1570  000AF8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1571  000AFA  E30A               	bnc	l5215
  1572                           
  1573                           ;SIO.c: 121:     LcClear();
  1574  000AFC  EC38  F00F         	call	_LcClear	;wreg free
  1575                           
  1576                           ;SIO.c: 122:     LcNewString("TIME LEFT: ");
  1577  000B00  0EAF               	movlw	low STR_7
  1578  000B02  ECD4  F004         	call	PL10	;call to abstracted procedure
  1579  000B06  EC2D  F000         	call	_LcNewString	;wreg free
  1580                           
  1581                           ;SIO.c: 123:     state = 7;
  1582  000B0A  0E07               	movlw	7
  1583  000B0C  6E0D               	movwf	motorSIO@state^0,c
  1584                           
  1585                           ;SIO.c: 124:    }
  1586  000B0E  0C07               	retlw	7
  1587  000B10                     l5215:
  1588  000B10  5011               	movf	_timerSIO^0,w,c
  1589  000B12  ECDD  F00E         	call	_TiGetTics
  1590  000B16  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1591  000B18  D006               	goto	u4760
  1592  000B1A  0EBA               	movlw	186
  1593  000B1C  5C64               	subwf	?_TiGetTics^0,w,c
  1594  000B1E  0E09               	movlw	9
  1595  000B20  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1596  000B22  B0D8               	btfsc	status,0,c
  1597  000B24  0012               	return	
  1598  000B26                     u4760:
  1599  000B26  AA9E               	btfss	158,5,c	;volatile
  1600  000B28  0012               	return	
  1601  000B2A  EC33  F000         	call	_LcLliure	;wreg free
  1602  000B2E  A0D8               	btfss	status,0,c
  1603  000B30  0012               	return	
  1604                           
  1605                           ;SIO.c: 126:     LcGotoXY(0,1);
  1606  000B32  ECDF  F004         	call	PL32	;call to abstracted procedure
  1607  000B36  EC72  F00E         	call	_LcGotoXY
  1608                           
  1609                           ;SIO.c: 127:     LcPutChar(RCREG);
  1610  000B3A  50AE               	movf	174,w,c	;volatile
  1611  000B3C  ECB6  F00D         	call	_LcPutChar
  1612  000B40  D762               	goto	l5129
  1613  000B42                     l5225:
  1614                           
  1615                           ;SIO.c: 132:    if (LcLliure()) {
  1616  000B42  EC33  F000         	call	_LcLliure	;wreg free
  1617  000B46  A0D8               	btfss	status,0,c
  1618  000B48  0012               	return	
  1619                           
  1620                           ;SIO.c: 133:     LcNewString(HGetTime());
  1621  000B4A  EC95  F000         	call	_HGetTime	;wreg free
  1622  000B4E  D8AE               	call	PL56	;call to abstracted procedure
  1623  000B50  EC2D  F000         	call	_LcNewString	;wreg free
  1624  000B54  D758               	goto	l5129
  1625  000B56                     l1354:
  1626                           
  1627                           ;SIO.c: 138:    if (PIR1bits.RCIF) {
  1628  000B56  AA9E               	btfss	158,5,c	;volatile
  1629  000B58  0012               	return	
  1630                           
  1631                           ;SIO.c: 139:     LcPutChar(RCREG);
  1632  000B5A  50AE               	movf	174,w,c	;volatile
  1633  000B5C  ECB6  F00D         	call	_LcPutChar
  1634                           
  1635                           ;SIO.c: 140:     TiResetTics(timerSIO);
  1636  000B60  5011               	movf	_timerSIO^0,w,c
  1637  000B62  EC76  F00F         	call	_TiResetTics
  1638  000B66                     l5233:
  1639                           
  1640                           ;SIO.c: 141:     state--;
  1641  000B66  060D               	decf	motorSIO@state^0,f,c
  1642  000B68  0012               	return	
  1643  000B6A                     l5235:
  1644                           
  1645                           ;SIO.c: 145:    if (LcLliure()) {
  1646  000B6A  EC33  F000         	call	_LcLliure	;wreg free
  1647  000B6E  A0D8               	btfss	status,0,c
  1648  000B70  0012               	return	
  1649                           
  1650                           ;SIO.c: 146:     LcGotoXY(0,1);
  1651  000B72  ECDF  F004         	call	PL32	;call to abstracted procedure
  1652  000B76  EC72  F00E         	call	_LcGotoXY
  1653                           
  1654                           ;SIO.c: 147:     LcNewString("SCORE: ");
  1655  000B7A  0EC4               	movlw	low STR_8
  1656  000B7C  ECD4  F004         	call	PL10	;call to abstracted procedure
  1657  000B80  EC2D  F000         	call	_LcNewString	;wreg free
  1658  000B84  D740               	goto	l5129
  1659  000B86                     l5243:
  1660                           
  1661                           ;SIO.c: 152:    if (LcLliure() && CToAHaAcabat() == 250) {
  1662  000B86  EC33  F000         	call	_LcLliure	;wreg free
  1663  000B8A  A0D8               	btfss	status,0,c
  1664  000B8C  0012               	return	
  1665  000B8E  ECAF  F000         	call	_CToAHaAcabat	;wreg free
  1666  000B92  0AFA               	xorlw	250
  1667  000B94  A4D8               	btfss	status,2,c
  1668  000B96  0012               	return	
  1669                           
  1670                           ;SIO.c: 153:     LcNewString(CToAobtenir());
  1671  000B98  ECAD  F000         	call	_CToAobtenir	;wreg free
  1672  000B9C  D887               	call	PL56	;call to abstracted procedure
  1673  000B9E  EC2D  F000         	call	_LcNewString	;wreg free
  1674                           
  1675                           ;SIO.c: 154:     usuariActualSIO = -1;
  1676  000BA2  684A               	setf	_usuariActualSIO^0,c
  1677                           
  1678                           ;SIO.c: 155:     state = 0;
  1679  000BA4  6A0D               	clrf	motorSIO@state^0,c
  1680  000BA6  0012               	return	
  1681  000BA8                     l5253:
  1682                           
  1683                           ;SIO.c: 159:    if (charActu == 6) {
  1684  000BA8  0E06               	movlw	6
  1685  000BAA  180F               	xorwf	_charActu^0,w,c
  1686  000BAC  E104               	bnz	l5259
  1687                           
  1688                           ;SIO.c: 160:     hi_ha_hora_sio2 = 0;
  1689  000BAE  9075               	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1690                           
  1691                           ;SIO.c: 161:     state = 3;
  1692  000BB0  0E03               	movlw	3
  1693  000BB2  6E0D               	movwf	motorSIO@state^0,c
  1694                           
  1695                           ;SIO.c: 162:    }
  1696  000BB4  0C03               	retlw	3
  1697  000BB6                     l5259:
  1698  000BB6  0E06               	movlw	6
  1699  000BB8  600F               	cpfslt	_charActu^0,c
  1700  000BBA  0C06               	retlw	6
  1701  000BBC  5011               	movf	_timerSIO^0,w,c
  1702  000BBE  ECDD  F00E         	call	_TiGetTics
  1703  000BC2  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1704  000BC4  0012               	return	
  1705  000BC6  5065               	movf	(?_TiGetTics+1)^0,w,c
  1706  000BC8  E103               	bnz	u4860
  1707  000BCA  0464               	decf	?_TiGetTics^0,w,c
  1708  000BCC  A0D8               	btfss	status,0,c
  1709  000BCE  0012               	return	
  1710  000BD0                     u4860:
  1711                           
  1712                           ;SIO.c: 164:     LATBbits.LATB1 = 0;
  1713  000BD0  928A               	bcf	138,1,c	;volatile
  1714                           
  1715                           ;SIO.c: 165:     TiResetTics(timerSIO);
  1716  000BD2  5011               	movf	_timerSIO^0,w,c
  1717  000BD4  EC76  F00F         	call	_TiResetTics
  1718  000BD8  D716               	goto	l5129
  1719  000BDA                     l5269:
  1720                           
  1721                           ;SIO.c: 171:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1722  000BDA  500E               	movf	_mask^0,w,c
  1723  000BDC  E111               	bnz	l5283
  1724  000BDE  5011               	movf	_timerSIO^0,w,c
  1725  000BE0  ECDD  F00E         	call	_TiGetTics
  1726  000BE4  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1727  000BE6  D00C               	goto	l5283
  1728  000BE8  5065               	movf	(?_TiGetTics+1)^0,w,c
  1729  000BEA  E102               	bnz	u4880
  1730  000BEC  0464               	decf	?_TiGetTics^0,w,c
  1731  000BEE  E308               	bnc	l5283
  1732  000BF0                     u4880:
  1733                           
  1734                           ;SIO.c: 172:     mask = 1;
  1735  000BF0  0E01               	movlw	1
  1736  000BF2  6E0E               	movwf	_mask^0,c
  1737                           
  1738                           ;SIO.c: 173:     charActu++;
  1739  000BF4  2A0F               	incf	_charActu^0,f,c
  1740                           
  1741                           ;SIO.c: 174:     LATBbits.LATB1 = 1;
  1742  000BF6  828A               	bsf	138,1,c	;volatile
  1743                           
  1744                           ;SIO.c: 175:     TiResetTics(timerSIO);
  1745  000BF8  5011               	movf	_timerSIO^0,w,c
  1746  000BFA  EC76  F00F         	call	_TiResetTics
  1747  000BFE  D7B3               	goto	l5233
  1748  000C00                     l5283:
  1749  000C00  5011               	movf	_timerSIO^0,w,c
  1750  000C02  ECDD  F00E         	call	_TiGetTics
  1751  000C06  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1752  000C08  0012               	return	
  1753  000C0A  5065               	movf	(?_TiGetTics+1)^0,w,c
  1754  000C0C  E103               	bnz	u4890
  1755  000C0E  0464               	decf	?_TiGetTics^0,w,c
  1756  000C10  A0D8               	btfss	status,0,c
  1757  000C12  0012               	return	
  1758  000C14                     u4890:
  1759  000C14  500E               	movf	_mask^0,w,c
  1760  000C16  B4D8               	btfsc	status,2,c
  1761  000C18  0012               	return	
  1762                           
  1763                           ;SIO.c: 179:     if(mask & horaTX[charActu]){
  1764  000C1A  500F               	movf	_charActu^0,w,c
  1765  000C1C  0F01               	addlw	low _horaTX
  1766  000C1E  6ED9               	movwf	fsr2l,c
  1767  000C20  6ADA               	clrf	fsr2h,c
  1768  000C22  50DF               	movf	indf2,w,c
  1769  000C24  140E               	andwf	_mask^0,w,c
  1770  000C26  E002               	bz	l1368
  1771                           
  1772                           ;SIO.c: 180:        LATBbits.LATB1 = 1;
  1773  000C28  828A               	bsf	138,1,c	;volatile
  1774                           
  1775                           ;SIO.c: 181:       }else{
  1776  000C2A  D001               	goto	l5291
  1777  000C2C                     l1368:
  1778                           
  1779                           ;SIO.c: 182:        LATBbits.LATB1 = 0;
  1780  000C2C  928A               	bcf	138,1,c	;volatile
  1781  000C2E                     l5291:
  1782                           
  1783                           ;SIO.c: 184:       mask = mask<<1;
  1784  000C2E  90D8               	bcf	status,0,c
  1785  000C30  360E               	rlcf	_mask^0,f,c
  1786                           
  1787                           ;SIO.c: 185:     TiResetTics(timerSIO);
  1788  000C32  5011               	movf	_timerSIO^0,w,c
  1789  000C34  EF76  F00F         	goto	_TiResetTics
  1790  000C38                     l5297:
  1791  000C38  500D               	movf	motorSIO@state^0,w,c
  1792  000C3A  6E73               	movwf	??_motorSIO^0,c
  1793  000C3C  6A74               	clrf	(??_motorSIO+1)^0,c
  1794                           
  1795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1796                           ; Switch size 1, requested type "space"
  1797                           ; Number of cases is 1, Range of values is 0 to 0
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            4     3 (average)
  1801                           ;	Chosen strategy is simple_byte
  1802  000C3E  5074               	movf	(??_motorSIO+1)^0,w,c
  1803  000C40  A4D8               	btfss	status,2,c
  1804  000C42  0012               	return	
  1805                           
  1806                           ; Switch size 1, requested type "space"
  1807                           ; Number of cases is 12, Range of values is 0 to 11
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           37    19 (average)
  1811                           ;	Chosen strategy is simple_byte
  1812  000C44  5073               	movf	??_motorSIO^0,w,c
  1813  000C46  E101 D6D3          	bz	l5121
  1814  000C4A  0A01               	xorlw	1	; case 1
  1815  000C4C  E101 D6DD          	bz	l5131
  1816  000C50  0A03               	xorlw	3	; case 2
  1817  000C52  E101 D6E9          	bz	l5147
  1818  000C56  0A01               	xorlw	1	; case 3
  1819  000C58  E101 D6EC          	bz	l5153
  1820  000C5C  0A07               	xorlw	7	; case 4
  1821  000C5E  E101 D735          	bz	l1346
  1822  000C62  0A01               	xorlw	1	; case 5
  1823  000C64  E101 D740          	bz	l5207
  1824  000C68  0A03               	xorlw	3	; case 6
  1825  000C6A  E101 D774          	bz	l1354
  1826  000C6E  0A01               	xorlw	1	; case 7
  1827  000C70  E101 D767          	bz	l5225
  1828  000C74  0A0F               	xorlw	15	; case 8
  1829  000C76  E101 D778          	bz	l5235
  1830  000C7A  0A01               	xorlw	1	; case 9
  1831  000C7C  E084               	bz	l5243
  1832  000C7E  0A03               	xorlw	3	; case 10
  1833  000C80  E093               	bz	l5253
  1834  000C82  0A01               	xorlw	1	; case 11
  1835  000C84  E0AA               	bz	l5269
  1836  000C86  0012               	return		;funcret
  1837  000C88                     __end_of_motorSIO:
  1838                           	callstack 0
  1839  000C88                     PL24:
  1840                           	callstack 24
  1841  000C88  C007  FFD9         	movff	_userPtr,fsr2l
  1842  000C8C  C008  FFDA         	movff	_userPtr+1,fsr2h
  1843  000C90  50DF               	movf	indf2,w,c
  1844  000C92  0012               	return	
  1845  000C94                     __end_ofPL24:
  1846                           	callstack 0
  1847  000C94                     PL50:
  1848                           	callstack 27
  1849  000C94  6ED9               	movwf	fsr2l,c
  1850  000C96  6ADA               	clrf	fsr2h,c
  1851  000C98  0E02               	movlw	2
  1852  000C9A  26D9               	addwf	fsr2l,f,c
  1853  000C9C  50DF               	movf	indf2,w,c
  1854  000C9E  0012               	return	
  1855  000CA0                     __end_ofPL50:
  1856                           	callstack 0
  1857  000CA0                     PL52:
  1858                           	callstack 27
  1859  000CA0  6ED9               	movwf	fsr2l,c
  1860  000CA2  6ADA               	clrf	fsr2h,c
  1861  000CA4  0E03               	movlw	3
  1862  000CA6  26D9               	addwf	fsr2l,f,c
  1863  000CA8  50DF               	movf	indf2,w,c
  1864  000CAA  0012               	return	
  1865  000CAC                     __end_ofPL52:
  1866                           	callstack 0
  1867  000CAC                     PL56:
  1868                           	callstack 24
  1869  000CAC  6E73               	movwf	??_motorSIO^0,c
  1870  000CAE  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1871  000CB2  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1872  000CB4  0012               	return	
  1873  000CB6                     __end_ofPL56:
  1874                           	callstack 0
  1875  000CB6                     PL78:
  1876                           	callstack 27
  1877  000CB6  6ED9               	movwf	fsr2l,c
  1878  000CB8  6ADA               	clrf	fsr2h,c
  1879  000CBA  2AD9               	incf	fsr2l,f,c
  1880  000CBC  50DF               	movf	indf2,w,c
  1881  000CBE  0012               	return	
  1882  000CC0                     __end_ofPL78:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _UnewScore *****************
  1886 ;; Defined at:
  1887 ;;		line 307 in file "Usuaris.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  scoretmp        1    wreg     unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1
  1901 ;;      Params:         0       0       0
  1902 ;;      Locals:         1       0       0
  1903 ;;      Temps:          0       0       0
  1904 ;;      Totals:         1       0       0
  1905 ;;Total ram usage:        1 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 2
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_motorSIO
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text2
  1916  000072                     __ptext2:
  1917                           	callstack 0
  1918  000072                     _UnewScore:
  1919                           	callstack 27
  1920                           
  1921                           ;incstack = 0
  1922                           ;UnewScore@scoretmp stored from wreg
  1923  000072  6E64               	movwf	UnewScore@scoretmp^0,c
  1924                           
  1925                           ;Usuaris.c: 308:     scoreUsr = scoretmp;
  1926  000074  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1927                           
  1928                           ;Usuaris.c: 309:     do_updateScore = 1;
  1929  000078  8876               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1930  00007A  0012               	return		;funcret
  1931  00007C                     __end_of_UnewScore:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _motorJoc *****************
  1935 ;; Defined at:
  1936 ;;		line 44 in file "Joc.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1
  1950 ;;      Params:         0       0       0
  1951 ;;      Locals:         0       0       0
  1952 ;;      Temps:          2       0       0
  1953 ;;      Totals:         2       0       0
  1954 ;;Total ram usage:        2 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 5
  1957 ;; This function calls:
  1958 ;;		_HClearNouSegon
  1959 ;;		_HGetTime
  1960 ;;		_HJugant
  1961 ;;		_HNouSegon
  1962 ;;		_HnoJugant
  1963 ;;		_LcGotoXY
  1964 ;;		_LcLliure
  1965 ;;		_LcNewString
  1966 ;;		_SIOEnviaHora
  1967 ;;		_SIONovaDireccio
  1968 ;;		_SIONovaTecla
  1969 ;;		_SIOStartGame
  1970 ;;		_SIOcheckKrebut
  1971 ;;		_SIOendGame
  1972 ;;		_conversorJoystick
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text3
  1979  00173A                     __ptext3:
  1980                           	callstack 0
  1981  00173A                     _motorJoc:
  1982                           	callstack 25
  1983                           
  1984                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1985                           
  1986                           ;incstack = 0
  1987  00173A  D044               	goto	l5113
  1988  00173C                     l5067:
  1989                           
  1990                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1991  00173C  284C               	incf	_usuariJoc^0,w,c
  1992  00173E  B4D8               	btfsc	status,2,c
  1993  001740  0012               	return	
  1994                           
  1995                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1996  001742  504C               	movf	_usuariJoc^0,w,c
  1997  001744  EC3E  F000         	call	_SIOStartGame
  1998                           
  1999                           ;Joc.c: 51:     jugantJoc = 1;
  2000  001748  8675               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2001                           
  2002                           ;Joc.c: 52:     state = 2;
  2003  00174A  0E02               	movlw	2
  2004  00174C  6E12               	movwf	motorJoc@state^0,c
  2005                           
  2006                           ;Joc.c: 54:   break;
  2007                           
  2008                           ;Joc.c: 53:    }
  2009  00174E  0C02               	retlw	2
  2010  001750                     l1211:
  2011                           
  2012                           ;Joc.c: 56:    if (!jugantJoc) {
  2013  001750  B675               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2014  001752  D007               	goto	l5081
  2015                           
  2016                           ;Joc.c: 57:     usuariJoc = -1;
  2017  001754  684C               	setf	_usuariJoc^0,c
  2018                           
  2019                           ;Joc.c: 58:     HnoJugant();
  2020  001756  EC93  F000         	call	_HnoJugant	;wreg free
  2021                           
  2022                           ;Joc.c: 59:     SIOendGame();
  2023  00175A  EC8F  F000         	call	_SIOendGame	;wreg free
  2024  00175E                     l5079:
  2025                           
  2026                           ;Joc.c: 61:     state--;
  2027  00175E  0612               	decf	motorJoc@state^0,f,c
  2028                           
  2029                           ;Joc.c: 62:    }
  2030  001760  0012               	return	
  2031  001762                     l5081:
  2032  001762  BE13               	btfsc	_direccioJoc^0,7,c
  2033  001764  D007               	goto	l5087
  2034                           
  2035                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2036  001766  5013               	movf	_direccioJoc^0,w,c
  2037  001768  ECF0  F00E         	call	_conversorJoystick
  2038  00176C  EC46  F000         	call	_SIONovaDireccio
  2039                           
  2040                           ;Joc.c: 65:     direccioJoc = -1;
  2041  001770  6813               	setf	_direccioJoc^0,c
  2042                           
  2043                           ;Joc.c: 66:    }
  2044  001772  0012               	return	
  2045  001774                     l5087:
  2046  001774  ECEB  F00F         	call	_HNouSegon	;wreg free
  2047  001778  E313               	bnc	l5099
  2048  00177A  EC33  F000         	call	_LcLliure	;wreg free
  2049  00177E  E310               	bnc	l5099
  2050                           
  2051                           ;Joc.c: 68:     HClearNouSegon();
  2052  001780  EC97  F000         	call	_HClearNouSegon	;wreg free
  2053                           
  2054                           ;Joc.c: 69:     LcGotoXY(0,1);
  2055  001784  ECDF  F004         	call	PL32	;call to abstracted procedure
  2056  001788  EC72  F00E         	call	_LcGotoXY
  2057                           
  2058                           ;Joc.c: 70:     LcNewString(HGetTime());
  2059  00178C  EC95  F000         	call	_HGetTime	;wreg free
  2060  001790  6E72               	movwf	??_motorJoc^0,c
  2061  001792  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  2062  001796  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2063  001798  EC2D  F000         	call	_LcNewString	;wreg free
  2064                           
  2065                           ;Joc.c: 71:                 SIOEnviaHora();
  2066  00179C  EF91  F000         	goto	_SIOEnviaHora	;wreg free
  2067  0017A0                     l5099:
  2068  0017A0  504B               	movf	_novaTeclaJOC^0,w,c
  2069  0017A2  0A80               	xorlw	128
  2070  0017A4  0F7F               	addlw	-129
  2071  0017A6  A0D8               	btfss	status,0,c
  2072  0017A8  0012               	return	
  2073                           
  2074                           ;Joc.c: 75:     SIONovaTecla(novaTeclaJOC+48);
  2075  0017AA  504B               	movf	_novaTeclaJOC^0,w,c
  2076  0017AC  0F30               	addlw	48
  2077  0017AE  EC42  F000         	call	_SIONovaTecla
  2078                           
  2079                           ;Joc.c: 76:     novaTeclaJOC = -1;
  2080  0017B2  684B               	setf	_novaTeclaJOC^0,c
  2081  0017B4  0012               	return	
  2082  0017B6                     l5105:
  2083                           
  2084                           ;Joc.c: 80:    if (SIOcheckKrebut()) {
  2085  0017B6  ECE5  F00F         	call	_SIOcheckKrebut	;wreg free
  2086  0017BA  A0D8               	btfss	status,0,c
  2087  0017BC  0012               	return	
  2088                           
  2089                           ;Joc.c: 81:     HJugant();
  2090  0017BE  ECFD  F00F         	call	_HJugant	;wreg free
  2091  0017C2  D7CD               	goto	l5079
  2092  0017C4                     l5113:
  2093  0017C4  5012               	movf	motorJoc@state^0,w,c
  2094  0017C6  6E72               	movwf	??_motorJoc^0,c
  2095  0017C8  6A73               	clrf	(??_motorJoc+1)^0,c
  2096                           
  2097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2098                           ; Switch size 1, requested type "space"
  2099                           ; Number of cases is 1, Range of values is 0 to 0
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte            4     3 (average)
  2103                           ;	Chosen strategy is simple_byte
  2104  0017CA  5073               	movf	(??_motorJoc+1)^0,w,c
  2105  0017CC  A4D8               	btfss	status,2,c
  2106  0017CE  0012               	return	
  2107                           
  2108                           ; Switch size 1, requested type "space"
  2109                           ; Number of cases is 3, Range of values is 0 to 2
  2110                           ; switch strategies available:
  2111                           ; Name         Instructions Cycles
  2112                           ; simple_byte           10     6 (average)
  2113                           ;	Chosen strategy is simple_byte
  2114  0017D0  5072               	movf	??_motorJoc^0,w,c
  2115  0017D2  E0B4               	bz	l5067
  2116  0017D4  0A01               	xorlw	1	; case 1
  2117  0017D6  E0BC               	bz	l1211
  2118  0017D8  0A03               	xorlw	3	; case 2
  2119  0017DA  E0ED               	bz	l5105
  2120  0017DC  0012               	return		;funcret
  2121  0017DE                     __end_of_motorJoc:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _conversorJoystick *****************
  2125 ;; Defined at:
  2126 ;;		line 27 in file "Joc.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  direc           1    wreg     unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  direc           1    5[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      unsigned char 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1
  2140 ;;      Params:         0       0       0
  2141 ;;      Locals:         1       0       0
  2142 ;;      Temps:          0       0       0
  2143 ;;      Totals:         1       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 2
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_motorJoc
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text4
  2155  001DE0                     __ptext4:
  2156                           	callstack 0
  2157  001DE0                     _conversorJoystick:
  2158                           	callstack 27
  2159                           
  2160                           ;incstack = 0
  2161                           ;conversorJoystick@direc stored from wreg
  2162  001DE0  6E64               	movwf	conversorJoystick@direc^0,c
  2163                           
  2164                           ;Joc.c: 29:     if (direc==2) {
  2165  001DE2  0E02               	movlw	2
  2166  001DE4  1864               	xorwf	conversorJoystick@direc^0,w,c
  2167  001DE6  E101               	bnz	l2433
  2168                           
  2169                           ;Joc.c: 30:         return 'W';
  2170  001DE8  0C57               	retlw	87
  2171  001DEA                     l2433:
  2172                           
  2173                           ;Joc.c: 32:     if (direc==6) {
  2174  001DEA  0E06               	movlw	6
  2175  001DEC  1864               	xorwf	conversorJoystick@direc^0,w,c
  2176  001DEE  E101               	bnz	l2439
  2177                           
  2178                           ;Joc.c: 33:         return 'D';
  2179  001DF0  0C44               	retlw	68
  2180  001DF2                     l2439:
  2181                           
  2182                           ;Joc.c: 35:     if (direc==8) {
  2183  001DF2  0E08               	movlw	8
  2184  001DF4  1864               	xorwf	conversorJoystick@direc^0,w,c
  2185  001DF6  E101               	bnz	l2445
  2186                           
  2187                           ;Joc.c: 36:         return 'S';
  2188  001DF8  0C53               	retlw	83
  2189  001DFA                     l2445:
  2190                           
  2191                           ;Joc.c: 38:     if (direc==4) {
  2192  001DFA  0E04               	movlw	4
  2193  001DFC  1864               	xorwf	conversorJoystick@direc^0,w,c
  2194  001DFE  E101               	bnz	l2451
  2195                           
  2196                           ;Joc.c: 39:         return 'A';
  2197  001E00  0C41               	retlw	65
  2198  001E02                     l2451:
  2199                           
  2200                           ;Joc.c: 41:     return 0;
  2201  001E02  0C00               	retlw	0	;funcret
  2202  001E04                     __end_of_conversorJoystick:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _SIOendGame *****************
  2206 ;; Defined at:
  2207 ;;		line 28 in file "SIO.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		None
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1
  2221 ;;      Params:         0       0       0
  2222 ;;      Locals:         0       0       0
  2223 ;;      Temps:          0       0       0
  2224 ;;      Totals:         0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 2
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_motorJoc
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text5
  2236  00011E                     __ptext5:
  2237                           	callstack 0
  2238  00011E                     _SIOendGame:
  2239                           	callstack 27
  2240                           
  2241                           ;SIO.c: 29:     jugantSIO = 0;
  2242                           
  2243                           ;incstack = 0
  2244  00011E  9475               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2245  000120  0012               	return		;funcret
  2246  000122                     __end_of_SIOendGame:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _SIOcheckKrebut *****************
  2250 ;; Defined at:
  2251 ;;		line 31 in file "SIO.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1
  2265 ;;      Params:         0       0       0
  2266 ;;      Locals:         0       0       0
  2267 ;;      Temps:          0       0       0
  2268 ;;      Totals:         0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 2
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_motorJoc
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text6
  2280  001FCA                     __ptext6:
  2281                           	callstack 0
  2282  001FCA                     _SIOcheckKrebut:
  2283                           	callstack 27
  2284                           
  2285                           ;SIO.c: 32:     return Krebut;
  2286                           
  2287                           ;incstack = 0
  2288  001FCA  B275               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2289  001FCC  D002               	goto	l2469
  2290  001FCE  90D8               	bcf	status,0,c
  2291  001FD0  0012               	return	
  2292  001FD2                     l2469:
  2293  001FD2  80D8               	bsf	status,0,c
  2294  001FD4  0012               	return		;funcret
  2295  001FD6                     __end_of_SIOcheckKrebut:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _SIOStartGame *****************
  2299 ;; Defined at:
  2300 ;;		line 38 in file "SIO.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  usuari          1    wreg     unsigned char 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  usuari          1    5[COMRAM] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1
  2314 ;;      Params:         0       0       0
  2315 ;;      Locals:         1       0       0
  2316 ;;      Temps:          0       0       0
  2317 ;;      Totals:         1       0       0
  2318 ;;Total ram usage:        1 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 2
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_motorJoc
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text7
  2329  00007C                     __ptext7:
  2330                           	callstack 0
  2331  00007C                     _SIOStartGame:
  2332                           	callstack 27
  2333                           
  2334                           ;incstack = 0
  2335                           ;SIOStartGame@usuari stored from wreg
  2336  00007C  6E64               	movwf	SIOStartGame@usuari^0,c
  2337                           
  2338                           ;SIO.c: 39:     usuariActualSIO = usuari;
  2339  00007E  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2340  000082  0012               	return		;funcret
  2341  000084                     __end_of_SIOStartGame:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _SIONovaTecla *****************
  2345 ;; Defined at:
  2346 ;;		line 47 in file "SIO.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  tecla           1    wreg     char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  tecla           1    5[COMRAM] char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1
  2360 ;;      Params:         0       0       0
  2361 ;;      Locals:         1       0       0
  2362 ;;      Temps:          0       0       0
  2363 ;;      Totals:         1       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 2
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_motorJoc
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text8
  2375  000084                     __ptext8:
  2376                           	callstack 0
  2377  000084                     _SIONovaTecla:
  2378                           	callstack 27
  2379                           
  2380                           ;incstack = 0
  2381                           ;SIONovaTecla@tecla stored from wreg
  2382  000084  6E64               	movwf	SIONovaTecla@tecla^0,c
  2383                           
  2384                           ;SIO.c: 48:     novaTeclaSIO = tecla;
  2385  000086  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2386  00008A  0012               	return		;funcret
  2387  00008C                     __end_of_SIONovaTecla:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _SIONovaDireccio *****************
  2391 ;; Defined at:
  2392 ;;		line 34 in file "SIO.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  num             1    wreg     unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  num             1    5[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1
  2406 ;;      Params:         0       0       0
  2407 ;;      Locals:         1       0       0
  2408 ;;      Temps:          0       0       0
  2409 ;;      Totals:         1       0       0
  2410 ;;Total ram usage:        1 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 2
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_motorJoc
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text9
  2421  00008C                     __ptext9:
  2422                           	callstack 0
  2423  00008C                     _SIONovaDireccio:
  2424                           	callstack 27
  2425                           
  2426                           ;incstack = 0
  2427                           ;SIONovaDireccio@num stored from wreg
  2428  00008C  6E64               	movwf	SIONovaDireccio@num^0,c
  2429                           
  2430                           ;SIO.c: 35:     direccioSIO = num;
  2431  00008E  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2432  000092  0012               	return		;funcret
  2433  000094                     __end_of_SIONovaDireccio:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _SIOEnviaHora *****************
  2437 ;; Defined at:
  2438 ;;		line 41 in file "SIO.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		None
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1
  2452 ;;      Params:         0       0       0
  2453 ;;      Locals:         0       0       0
  2454 ;;      Temps:          0       0       0
  2455 ;;      Totals:         0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 2
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_motorJoc
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text10
  2467  000122                     __ptext10:
  2468                           	callstack 0
  2469  000122                     _SIOEnviaHora:
  2470                           	callstack 27
  2471                           
  2472                           ;SIO.c: 42:     hi_ha_hora_sio2 = 1;
  2473                           
  2474                           ;incstack = 0
  2475  000122  8075               	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2476  000124  0012               	return		;funcret
  2477  000126                     __end_of_SIOEnviaHora:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _HnoJugant *****************
  2481 ;; Defined at:
  2482 ;;		line 37 in file "Hora.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		None
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1
  2496 ;;      Params:         0       0       0
  2497 ;;      Locals:         0       0       0
  2498 ;;      Temps:          0       0       0
  2499 ;;      Totals:         0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_motorJoc
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text11
  2511  000126                     __ptext11:
  2512                           	callstack 0
  2513  000126                     _HnoJugant:
  2514                           	callstack 27
  2515                           
  2516                           ;Hora.c: 38:     jugant = 0;
  2517                           
  2518                           ;incstack = 0
  2519  000126  9C75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2520  000128  0012               	return		;funcret
  2521  00012A                     __end_of_HnoJugant:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _HNouSegon *****************
  2525 ;; Defined at:
  2526 ;;		line 25 in file "Hora.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1
  2540 ;;      Params:         0       0       0
  2541 ;;      Locals:         0       0       0
  2542 ;;      Temps:          0       0       0
  2543 ;;      Totals:         0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_motorJoc
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text12
  2555  001FD6                     __ptext12:
  2556                           	callstack 0
  2557  001FD6                     _HNouSegon:
  2558                           	callstack 27
  2559                           
  2560                           ;Hora.c: 26:     return nouSegon;
  2561                           
  2562                           ;incstack = 0
  2563  001FD6  BA75               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2564  001FD8  D002               	goto	l2413
  2565  001FDA  90D8               	bcf	status,0,c
  2566  001FDC  0012               	return	
  2567  001FDE                     l2413:
  2568  001FDE  80D8               	bsf	status,0,c
  2569  001FE0  0012               	return		;funcret
  2570  001FE2                     __end_of_HNouSegon:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _HJugant *****************
  2574 ;; Defined at:
  2575 ;;		line 40 in file "Hora.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		None
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1
  2589 ;;      Params:         0       0       0
  2590 ;;      Locals:         0       0       0
  2591 ;;      Temps:          0       0       0
  2592 ;;      Totals:         0       0       0
  2593 ;;Total ram usage:        0 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_motorJoc
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text13
  2604  001FFA                     __ptext13:
  2605                           	callstack 0
  2606  001FFA                     _HJugant:
  2607                           	callstack 27
  2608                           
  2609                           ;Hora.c: 41:     jugant = 1;
  2610                           
  2611                           ;incstack = 0
  2612  001FFA  8C75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2613                           
  2614                           ;Hora.c: 42:     tempsAcabat = 0;
  2615  001FFC  9875               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2616  001FFE  0012               	return		;funcret
  2617  002000                     __end_of_HJugant:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _HGetTime *****************
  2621 ;; Defined at:
  2622 ;;		line 33 in file "Hora.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      PTR unsigned char 
  2629 ;; Registers used:
  2630 ;;		wreg
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1
  2636 ;;      Params:         2       0       0
  2637 ;;      Locals:         0       0       0
  2638 ;;      Temps:          0       0       0
  2639 ;;      Totals:         2       0       0
  2640 ;;Total ram usage:        2 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_motorJoc
  2647 ;;		_motorSIO
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text14
  2652  00012A                     __ptext14:
  2653                           	callstack 0
  2654  00012A                     _HGetTime:
  2655                           	callstack 27
  2656                           
  2657                           ;Hora.c: 34:     return hora;
  2658                           
  2659                           ;incstack = 0
  2660  00012A  0E56               	movlw	_hora& (0+255)
  2661  00012C  0012               	return		;funcret
  2662  00012E                     __end_of_HGetTime:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _HClearNouSegon *****************
  2666 ;; Defined at:
  2667 ;;		line 29 in file "Hora.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		None
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1
  2681 ;;      Params:         0       0       0
  2682 ;;      Locals:         0       0       0
  2683 ;;      Temps:          0       0       0
  2684 ;;      Totals:         0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 2
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_motorJoc
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text15
  2696  00012E                     __ptext15:
  2697                           	callstack 0
  2698  00012E                     _HClearNouSegon:
  2699                           	callstack 27
  2700                           
  2701                           ;Hora.c: 30:     nouSegon = 0;
  2702                           
  2703                           ;incstack = 0
  2704  00012E  9A75               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2705  000130  0012               	return		;funcret
  2706  000132                     __end_of_HClearNouSegon:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _motorHora *****************
  2710 ;; Defined at:
  2711 ;;		line 48 in file "Hora.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1
  2725 ;;      Params:         0       0       0
  2726 ;;      Locals:         0       0       0
  2727 ;;      Temps:          2       0       0
  2728 ;;      Totals:         2       0       0
  2729 ;;Total ram usage:        2 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 3
  2732 ;; This function calls:
  2733 ;;		_TiGetTics
  2734 ;;		_TiResetTics
  2735 ;;		_playAltaveu
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text16
  2742  001870                     __ptext16:
  2743                           	callstack 0
  2744  001870                     _motorHora:
  2745                           	callstack 27
  2746                           
  2747                           ;Hora.c: 49:  static char state = 0;;Hora.c: 51:  switch(state) {
  2748                           
  2749                           ;incstack = 0
  2750  001870  D038               	goto	l5355
  2751  001872                     l5305:
  2752                           
  2753                           ;Hora.c: 53:    if (TiGetTics(timerHora) >= 1205) {
  2754  001872  5016               	movf	_timerHora^0,w,c
  2755  001874  ECDD  F00E         	call	_TiGetTics
  2756  001878  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2757  00187A  0012               	return	
  2758  00187C  ECFB  F008         	call	PL66	;call to abstracted procedure
  2759  001880  A0D8               	btfss	status,0,c
  2760  001882  0012               	return	
  2761                           
  2762                           ;Hora.c: 54:     TiResetTics(timerHora);
  2763  001884  5016               	movf	_timerHora^0,w,c
  2764  001886  EC76  F00F         	call	_TiResetTics
  2765                           
  2766                           ;Hora.c: 55:     if(jugant){
  2767  00188A  AC75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2768  00188C  D028               	goto	l5351
  2769                           
  2770                           ;Hora.c: 56:       nouSegon = 1;
  2771  00188E  8A75               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2772                           
  2773                           ;Hora.c: 58:      hora[4]--;
  2774  001890  065A               	decf	(_hora+4)^0,f,c
  2775                           
  2776                           ;Hora.c: 59:      if(hora[4] == ('0'-1)){
  2777  001892  0E2F               	movlw	47
  2778  001894  185A               	xorwf	(_hora+4)^0,w,c
  2779  001896  E103               	bnz	l5321
  2780                           
  2781                           ;Hora.c: 60:       hora[4] = '9';
  2782  001898  0E39               	movlw	57
  2783  00189A  6E5A               	movwf	(_hora+4)^0,c
  2784                           
  2785                           ;Hora.c: 61:       hora[tres]--;
  2786  00189C  0659               	decf	(_hora+3)^0,f,c
  2787  00189E                     l5321:
  2788                           
  2789                           ;Hora.c: 64:      if(hora[tres] == ('0'-1)){
  2790  00189E  0E2F               	movlw	47
  2791  0018A0  1859               	xorwf	(_hora+3)^0,w,c
  2792  0018A2  E103               	bnz	l5327
  2793                           
  2794                           ;Hora.c: 65:       hora[tres] = '5';
  2795  0018A4  0E35               	movlw	53
  2796  0018A6  6E59               	movwf	(_hora+3)^0,c
  2797                           
  2798                           ;Hora.c: 66:       hora[1]--;
  2799  0018A8  0657               	decf	(_hora+1)^0,f,c
  2800  0018AA                     l5327:
  2801                           
  2802                           ;Hora.c: 69:      if(hora[1] == ('0'-1)){
  2803  0018AA  0E2F               	movlw	47
  2804  0018AC  1857               	xorwf	(_hora+1)^0,w,c
  2805  0018AE  E103               	bnz	l5333
  2806                           
  2807                           ;Hora.c: 70:       hora[1] = '9';
  2808  0018B0  0E39               	movlw	57
  2809  0018B2  6E57               	movwf	(_hora+1)^0,c
  2810                           
  2811                           ;Hora.c: 71:       hora[0]--;
  2812  0018B4  0656               	decf	_hora^0,f,c
  2813  0018B6                     l5333:
  2814                           
  2815                           ;Hora.c: 74:      if(hora[0] == '0' && hora[1] == '0' && hora[tres] == '0' && hora[4] ==
      +                           ('0')){
  2816  0018B6  0E30               	movlw	48
  2817  0018B8  1856               	xorwf	_hora^0,w,c
  2818  0018BA  E10A               	bnz	l5343
  2819  0018BC  0E30               	movlw	48
  2820  0018BE  1857               	xorwf	(_hora+1)^0,w,c
  2821  0018C0  E107               	bnz	l5343
  2822  0018C2  0E30               	movlw	48
  2823  0018C4  1859               	xorwf	(_hora+3)^0,w,c
  2824  0018C6  E104               	bnz	l5343
  2825  0018C8  0E30               	movlw	48
  2826  0018CA  185A               	xorwf	(_hora+4)^0,w,c
  2827  0018CC  E101               	bnz	l5343
  2828                           
  2829                           ;Hora.c: 75:       tempsAcabat = 1;
  2830  0018CE  8875               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2831  0018D0                     l5343:
  2832                           
  2833                           ;Hora.c: 78:      segons++;
  2834  0018D0  2A15               	incf	_segons^0,f,c
  2835                           
  2836                           ;Hora.c: 79:      if(segons > cinquantanou){
  2837  0018D2  0E3B               	movlw	59
  2838  0018D4  6415               	cpfsgt	_segons^0,c
  2839  0018D6  D003               	goto	l5351
  2840                           
  2841                           ;Hora.c: 80:       playAltaveu();
  2842  0018D8  EC99  F000         	call	_playAltaveu	;wreg free
  2843                           
  2844                           ;Hora.c: 81:       segons = 0;
  2845  0018DC  6A15               	clrf	_segons^0,c
  2846  0018DE                     l5351:
  2847                           
  2848                           ;Hora.c: 84:     state = 0;
  2849  0018DE  6A14               	clrf	motorHora@state^0,c
  2850  0018E0  0012               	return	
  2851  0018E2                     l5355:
  2852  0018E2  5014               	movf	motorHora@state^0,w,c
  2853  0018E4  6E6B               	movwf	??_motorHora^0,c
  2854  0018E6  6A6C               	clrf	(??_motorHora+1)^0,c
  2855                           
  2856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2857                           ; Switch size 1, requested type "space"
  2858                           ; Number of cases is 1, Range of values is 0 to 0
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte            4     3 (average)
  2862                           ;	Chosen strategy is simple_byte
  2863  0018E8  506C               	movf	(??_motorHora+1)^0,w,c
  2864  0018EA  A4D8               	btfss	status,2,c
  2865  0018EC  0012               	return	
  2866                           
  2867                           ; Switch size 1, requested type "space"
  2868                           ; Number of cases is 1, Range of values is 0 to 0
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            4     3 (average)
  2872                           ;	Chosen strategy is simple_byte
  2873  0018EE  506B               	movf	??_motorHora^0,w,c
  2874  0018F0  E0C0               	bz	l5305
  2875  0018F2  0012               	return		;funcret
  2876  0018F4                     __end_of_motorHora:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _playAltaveu *****************
  2880 ;; Defined at:
  2881 ;;		line 13 in file "Altaveu.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1
  2895 ;;      Params:         0       0       0
  2896 ;;      Locals:         0       0       0
  2897 ;;      Temps:          0       0       0
  2898 ;;      Totals:         0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_motorHora
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text17
  2910  000132                     __ptext17:
  2911                           	callstack 0
  2912  000132                     _playAltaveu:
  2913                           	callstack 27
  2914                           
  2915                           ;Altaveu.c: 14:     reproduir = 1;
  2916                           
  2917                           ;incstack = 0
  2918  000132  8676               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2919  000134  0012               	return		;funcret
  2920  000136                     __end_of_playAltaveu:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _motorAltaveu *****************
  2924 ;; Defined at:
  2925 ;;		line 16 in file "Altaveu.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1
  2939 ;;      Params:         0       0       0
  2940 ;;      Locals:         0       0       0
  2941 ;;      Temps:          3       0       0
  2942 ;;      Totals:         3       0       0
  2943 ;;Total ram usage:        3 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 3
  2946 ;; This function calls:
  2947 ;;		_TiGetTics
  2948 ;;		_TiResetTics
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text18
  2955  0017DE                     __ptext18:
  2956                           	callstack 0
  2957  0017DE                     _motorAltaveu:
  2958                           	callstack 27
  2959                           
  2960                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2961                           
  2962                           ;incstack = 0
  2963  0017DE  D02F               	goto	l5929
  2964  0017E0                     l897:
  2965                           
  2966                           ;Altaveu.c: 21:    if (reproduir) {
  2967  0017E0  A676               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2968  0017E2  0012               	return	
  2969                           
  2970                           ;Altaveu.c: 22:     nota = 1;
  2971  0017E4  0E01               	movlw	1
  2972  0017E6  6E26               	movwf	_nota^0,c
  2973                           
  2974                           ;Altaveu.c: 23:     copsNota = 0;
  2975  0017E8  6A24               	clrf	_copsNota^0,c
  2976                           
  2977                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2978  0017EA  5025               	movf	_timerAltaveu^0,w,c
  2979  0017EC  EC76  F00F         	call	_TiResetTics
  2980                           
  2981                           ;Altaveu.c: 25:     state = 1;
  2982  0017F0  0E01               	movlw	1
  2983  0017F2  6E23               	movwf	motorAltaveu@state^0,c
  2984  0017F4  0C01               	retlw	1
  2985  0017F6                     l5897:
  2986                           
  2987                           ;Altaveu.c: 29:    if (nota > 5) {
  2988  0017F6  0E05               	movlw	5
  2989  0017F8  6426               	cpfsgt	_nota^0,c
  2990  0017FA  D003               	goto	l5903
  2991                           
  2992                           ;Altaveu.c: 30:     reproduir = 0;
  2993  0017FC  9676               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2994  0017FE                     l5901:
  2995                           
  2996                           ;Altaveu.c: 31:     state--;
  2997  0017FE  0623               	decf	motorAltaveu@state^0,f,c
  2998                           
  2999                           ;Altaveu.c: 32:    }
  3000  001800  0012               	return	
  3001  001802                     l5903:
  3002  001802  0EA8               	movlw	168
  3003  001804  1824               	xorwf	_copsNota^0,w,c
  3004  001806  E103               	bnz	l5909
  3005                           
  3006                           ;Altaveu.c: 34:     nota++;
  3007  001808  2A26               	incf	_nota^0,f,c
  3008                           
  3009                           ;Altaveu.c: 35:     copsNota = 0;
  3010  00180A  6A24               	clrf	_copsNota^0,c
  3011                           
  3012                           ;Altaveu.c: 36:    }
  3013  00180C  0012               	return	
  3014  00180E                     l5909:
  3015  00180E  5025               	movf	_timerAltaveu^0,w,c
  3016  001810  ECDD  F00E         	call	_TiGetTics
  3017  001814  D821               	call	PL18	;call to abstracted procedure
  3018  001816  B0D8               	btfsc	status,0,c
  3019  001818  0012               	return	
  3020                           
  3021                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3022  00181A  808A               	bsf	138,0,c	;volatile
  3023                           
  3024                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3025  00181C  5025               	movf	_timerAltaveu^0,w,c
  3026  00181E  EC76  F00F         	call	_TiResetTics
  3027                           
  3028                           ;Altaveu.c: 40:     state++;
  3029  001822  2A23               	incf	motorAltaveu@state^0,f,c
  3030  001824  0012               	return	
  3031  001826                     l5917:
  3032                           
  3033                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3034  001826  5025               	movf	_timerAltaveu^0,w,c
  3035  001828  ECDD  F00E         	call	_TiGetTics
  3036  00182C  D815               	call	PL18	;call to abstracted procedure
  3037  00182E  B0D8               	btfsc	status,0,c
  3038  001830  0012               	return	
  3039                           
  3040                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3041  001832  908A               	bcf	138,0,c	;volatile
  3042                           
  3043                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3044  001834  5025               	movf	_timerAltaveu^0,w,c
  3045  001836  EC76  F00F         	call	_TiResetTics
  3046                           
  3047                           ;Altaveu.c: 47:     copsNota++;
  3048  00183A  2A24               	incf	_copsNota^0,f,c
  3049  00183C  D7E0               	goto	l5901
  3050  00183E                     l5929:
  3051  00183E  5023               	movf	motorAltaveu@state^0,w,c
  3052  001840  6E6B               	movwf	??_motorAltaveu^0,c
  3053  001842  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3054                           
  3055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3056                           ; Switch size 1, requested type "space"
  3057                           ; Number of cases is 1, Range of values is 0 to 0
  3058                           ; switch strategies available:
  3059                           ; Name         Instructions Cycles
  3060                           ; simple_byte            4     3 (average)
  3061                           ;	Chosen strategy is simple_byte
  3062  001844  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3063  001846  A4D8               	btfss	status,2,c
  3064  001848  0012               	return	
  3065                           
  3066                           ; Switch size 1, requested type "space"
  3067                           ; Number of cases is 3, Range of values is 0 to 2
  3068                           ; switch strategies available:
  3069                           ; Name         Instructions Cycles
  3070                           ; simple_byte           10     6 (average)
  3071                           ;	Chosen strategy is simple_byte
  3072  00184A  506B               	movf	??_motorAltaveu^0,w,c
  3073  00184C  E0C9               	bz	l897
  3074  00184E  0A01               	xorlw	1	; case 1
  3075  001850  E0D2               	bz	l5897
  3076  001852  0A03               	xorlw	3	; case 2
  3077  001854  E0E8               	bz	l5917
  3078  001856  0012               	return		;funcret
  3079  001858                     __end_of_motorAltaveu:
  3080                           	callstack 0
  3081  001858                     PL18:
  3082                           	callstack 27
  3083  001858  5026               	movf	_nota^0,w,c
  3084  00185A  6E6B               	movwf	??_motorAltaveu^0,c
  3085  00185C  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3086  00185E  5064               	movf	?_TiGetTics^0,w,c
  3087  001860  5C6B               	subwf	??_motorAltaveu^0,w,c
  3088  001862  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3089  001864  0A80               	xorlw	128
  3090  001866  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  3091  001868  5065               	movf	(?_TiGetTics+1)^0,w,c
  3092  00186A  0A80               	xorlw	128
  3093  00186C  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  3094  00186E  0012               	return	
  3095  001870                     __end_ofPL18:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _menu *****************
  3099 ;; Defined at:
  3100 ;;		line 42 in file "Menu.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1
  3114 ;;      Params:         0       0       0
  3115 ;;      Locals:         0       0       0
  3116 ;;      Temps:          0       5       0
  3117 ;;      Totals:         0       5       0
  3118 ;;Total ram usage:        5 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 6
  3121 ;; This function calls:
  3122 ;;		_CToAConverteix
  3123 ;;		_CToAHaAcabat
  3124 ;;		_CToAobtenir
  3125 ;;		_GLCDMostraMenu
  3126 ;;		_HActualitzaHora
  3127 ;;		_JJuguem
  3128 ;;		_JendGame
  3129 ;;		_JnovaDireccio
  3130 ;;		_JnovaTecla
  3131 ;;		_LcClear
  3132 ;;		_LcGotoXY
  3133 ;;		_LcLliure
  3134 ;;		_LcNewString
  3135 ;;		_LcPutChar
  3136 ;;		_LcScroll
  3137 ;;		_NoFerMenu
  3138 ;;		_SIOHaAcabatPuntuacions
  3139 ;;		_SMSoff
  3140 ;;		_SMSon
  3141 ;;		_SiFerMenu
  3142 ;;		_TiGetTics
  3143 ;;		_TiResetTics
  3144 ;;		_URegister
  3145 ;;		_UcheckExists
  3146 ;;		_UcheckExistsGetError
  3147 ;;		_UcheckExistsNotFinished
  3148 ;;		_UenviaChar
  3149 ;;		_UenviaPas
  3150 ;;		_UgetNumUsuaris
  3151 ;;		_UgetScore
  3152 ;;		_UgetTop5
  3153 ;;		_UgetUserName
  3154 ;;		_UshowUsersCalculat
  3155 ;;		_calculateShowUsers
  3156 ;;		_checkHoraAcabat
  3157 ;;		_getArrayShowUsers
  3158 ;;		_miraPassword
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text19
  3165  0002E4                     __ptext19:
  3166                           	callstack 0
  3167  0002E4                     _menu:
  3168                           	callstack 24
  3169                           
  3170                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3171                           
  3172                           ;incstack = 0
  3173  0002E4  D2EA               	goto	l7117
  3174  0002E6                     l6599:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;Menu.c: 46:    LcClear();
  3178  0002E6  EC38  F00F         	call	_LcClear	;wreg free
  3179                           
  3180                           ;Menu.c: 47:    LcNewString(loginText);
  3181  0002EA  0EDB               	movlw	low _loginText
  3182  0002EC  6E67               	movwf	LcNewString@new_s^0,c
  3183  0002EE  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3184  0002F0  EC2D  F000         	call	_LcNewString	;wreg free
  3185                           
  3186                           ;Menu.c: 48:    state = 1;
  3187  0002F4  0E01               	movlw	1
  3188  0002F6  6E2E               	movwf	menu@state^0,c
  3189                           
  3190                           ;Menu.c: 49:   break;
  3191  0002F8  0C01               	retlw	1
  3192  0002FA                     l6605:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;Menu.c: 51:    if (LcLliure()) {
  3196  0002FA  EC33  F000         	call	_LcLliure	;wreg free
  3197  0002FE  A0D8               	btfss	status,0,c
  3198  000300  0012               	return	
  3199                           
  3200                           ;Menu.c: 52:     LcGotoXY(0,1);
  3201  000302  DB5D               	call	PL32	;call to abstracted procedure
  3202  000304  EC72  F00E         	call	_LcGotoXY
  3203                           
  3204                           ;Menu.c: 53:     LcNewString(registerText);
  3205  000308  0ED0               	movlw	low _registerText
  3206  00030A  6E67               	movwf	LcNewString@new_s^0,c
  3207  00030C  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3208  00030E  EC2D  F000         	call	_LcNewString	;wreg free
  3209  000312                     l6611:
  3210                           
  3211                           ;Menu.c: 54:     NovaTecla = -1;
  3212  000312  6852               	setf	_NovaTecla^0,c
  3213  000314                     l6613:
  3214                           
  3215                           ;Menu.c: 55:     state++;
  3216  000314  2A2E               	incf	menu@state^0,f,c
  3217                           
  3218                           ;Menu.c: 57:   break;
  3219                           
  3220                           ;Menu.c: 56:    }
  3221  000316  0012               	return	
  3222  000318                     l6615:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3226  000318  0452               	decf	_NovaTecla^0,w,c
  3227  00031A  E102               	bnz	l6621
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;Menu.c: 60:     loginNOTRegister = 1;
  3231  00031C  8077               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3232  00031E  D7FA               	goto	l6613
  3233  000320                     l6621:
  3234                           
  3235                           ; BSR set to: 0
  3236  000320  0E02               	movlw	2
  3237  000322  1852               	xorwf	_NovaTecla^0,w,c
  3238  000324  A4D8               	btfss	status,2,c
  3239  000326  0012               	return	
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;Menu.c: 64:     loginNOTRegister = 0;
  3243  000328  9077               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3244  00032A  D7F4               	goto	l6613
  3245  00032C                     l542:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;Menu.c: 69:    NovaTecla = -1;
  3249  00032C  6852               	setf	_NovaTecla^0,c
  3250                           
  3251                           ;Menu.c: 70:    novaLletra = -1;
  3252  00032E  6851               	setf	_novaLletra^0,c
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;Menu.c: 71:    LcClear();
  3256  000330  EC38  F00F         	call	_LcClear	;wreg free
  3257                           
  3258                           ;Menu.c: 72:    LcNewString("USER: ");
  3259  000334  0EDB               	movlw	low STR_1
  3260  000336  DB38               	call	PL10	;call to abstracted procedure
  3261  000338  EC2D  F000         	call	_LcNewString	;wreg free
  3262  00033C  D7EB               	goto	l6613
  3263  00033E                     l6633:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;Menu.c: 76:    if (LcLliure()) {
  3267  00033E  EC33  F000         	call	_LcLliure	;wreg free
  3268  000342  A0D8               	btfss	status,0,c
  3269  000344  0012               	return	
  3270                           
  3271                           ;Menu.c: 77:     LcGotoXY(0,1);
  3272  000346  DB3B               	call	PL32	;call to abstracted procedure
  3273  000348  EC72  F00E         	call	_LcGotoXY
  3274                           
  3275                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3276  00034C  0ED4               	movlw	low STR_2
  3277  00034E  DB2C               	call	PL10	;call to abstracted procedure
  3278  000350  EC2D  F000         	call	_LcNewString	;wreg free
  3279  000354  D7DF               	goto	l6613
  3280  000356                     l6641:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;Menu.c: 83:    if (LcLliure()) {
  3284  000356  EC33  F000         	call	_LcLliure	;wreg free
  3285  00035A  A0D8               	btfss	status,0,c
  3286  00035C  0012               	return	
  3287                           
  3288                           ;Menu.c: 84:     LcGotoXY(6,0);
  3289  00035E  0E00               	movlw	0
  3290  000360  6E6C               	movwf	LcGotoXY@Row^0,c
  3291  000362  0E06               	movlw	6
  3292  000364  EC72  F00E         	call	_LcGotoXY
  3293                           
  3294                           ;Menu.c: 85:     SMSon();
  3295  000368  EC86  F000         	call	_SMSon	;wreg free
  3296  00036C                     l6647:
  3297                           
  3298                           ;Menu.c: 86:     tmp =0;
  3299  00036C  6A33               	clrf	_tmp^0,c
  3300  00036E  D7D2               	goto	l6613
  3301  000370                     l6651:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3305  000370  5051               	movf	_novaLletra^0,w,c
  3306  000372  0A80               	xorlw	128
  3307  000374  0F60               	addlw	-160
  3308  000376  E30C               	bnc	l6661
  3309                           
  3310                           ; BSR set to: 0
  3311  000378  0E0A               	movlw	10
  3312  00037A  1852               	xorwf	_NovaTecla^0,w,c
  3313  00037C  E009               	bz	l6661
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3317  00037E  5051               	movf	_novaLletra^0,w,c
  3318  000380  ECB6  F00D         	call	_LcPutChar
  3319                           
  3320                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3321  000384  C033  F064         	movff	_tmp,UenviaChar@pos
  3322  000388  5051               	movf	_novaLletra^0,w,c
  3323  00038A  ECCE  F00F         	call	_UenviaChar
  3324  00038E  D7C2               	goto	l6613
  3325  000390                     l6661:
  3326                           
  3327                           ; BSR set to: 0
  3328  000390  0E0B               	movlw	11
  3329  000392  1852               	xorwf	_NovaTecla^0,w,c
  3330  000394  E0BF               	bz	l6613
  3331  000396  0012               	return	
  3332  000398                     l6665:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3336  000398  0E07               	movlw	7
  3337  00039A  1833               	xorwf	_tmp^0,w,c
  3338  00039C  E008               	bz	l6675
  3339                           
  3340                           ; BSR set to: 0
  3341  00039E  0E0B               	movlw	11
  3342  0003A0  1852               	xorwf	_NovaTecla^0,w,c
  3343  0003A2  E005               	bz	l6675
  3344  0003A4                     u6960:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;Menu.c: 102:     tmp++;
  3348  0003A4  2A33               	incf	_tmp^0,f,c
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;Menu.c: 103:     NovaTecla = -1;
  3352  0003A6  6852               	setf	_NovaTecla^0,c
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;Menu.c: 104:     novaLletra = -1;
  3356  0003A8  6851               	setf	_novaLletra^0,c
  3357                           
  3358                           ;Menu.c: 105:     state--;
  3359  0003AA  062E               	decf	menu@state^0,f,c
  3360                           
  3361                           ;Menu.c: 106:    }
  3362  0003AC  0012               	return	
  3363  0003AE                     l6675:
  3364                           
  3365                           ; BSR set to: 0
  3366  0003AE  0E07               	movlw	7
  3367  0003B0  1833               	xorwf	_tmp^0,w,c
  3368  0003B2  E004               	bz	u6980
  3369                           
  3370                           ; BSR set to: 0
  3371  0003B4  0E0B               	movlw	11
  3372  0003B6  1852               	xorwf	_NovaTecla^0,w,c
  3373  0003B8  A4D8               	btfss	status,2,c
  3374  0003BA  0012               	return	
  3375  0003BC                     u6980:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;Menu.c: 108:     LcGotoXY(6,1);
  3379  0003BC  0E01               	movlw	1
  3380  0003BE  6E6C               	movwf	LcGotoXY@Row^0,c
  3381  0003C0  0E06               	movlw	6
  3382  0003C2  EC72  F00E         	call	_LcGotoXY
  3383                           
  3384                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3385  0003C6  C033  F064         	movff	_tmp,UenviaChar@pos
  3386  0003CA  0E00               	movlw	0
  3387  0003CC  ECCE  F00F         	call	_UenviaChar
  3388                           
  3389                           ;Menu.c: 110:     NovaTecla = -1;
  3390  0003D0  6852               	setf	_NovaTecla^0,c
  3391                           
  3392                           ;Menu.c: 111:     novaLletra = -1;
  3393  0003D2  6851               	setf	_novaLletra^0,c
  3394  0003D4  D7CB               	goto	l6647
  3395  0003D6                     l6691:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3399  0003D6  5051               	movf	_novaLletra^0,w,c
  3400  0003D8  0A80               	xorlw	128
  3401  0003DA  0F60               	addlw	-160
  3402  0003DC  E30C               	bnc	l6701
  3403                           
  3404                           ; BSR set to: 0
  3405  0003DE  0E0A               	movlw	10
  3406  0003E0  1852               	xorwf	_NovaTecla^0,w,c
  3407  0003E2  E009               	bz	l6701
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3411  0003E4  5051               	movf	_novaLletra^0,w,c
  3412  0003E6  ECB6  F00D         	call	_LcPutChar
  3413                           
  3414                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3415  0003EA  C033  F064         	movff	_tmp,UenviaPas@pos
  3416  0003EE  5051               	movf	_novaLletra^0,w,c
  3417  0003F0  ECC6  F00F         	call	_UenviaPas
  3418  0003F4  D78F               	goto	l6613
  3419  0003F6                     l6701:
  3420                           
  3421                           ; BSR set to: 0
  3422  0003F6  0E0B               	movlw	11
  3423  0003F8  1852               	xorwf	_NovaTecla^0,w,c
  3424  0003FA  E08C               	bz	l6613
  3425  0003FC  0012               	return	
  3426  0003FE                     l6705:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3430  0003FE  0E07               	movlw	7
  3431  000400  1833               	xorwf	_tmp^0,w,c
  3432  000402  E003               	bz	l6715
  3433                           
  3434                           ; BSR set to: 0
  3435  000404  0E0B               	movlw	11
  3436  000406  1852               	xorwf	_NovaTecla^0,w,c
  3437  000408  E1CD               	bnz	u6960
  3438  00040A                     l6715:
  3439                           
  3440                           ; BSR set to: 0
  3441  00040A  0E07               	movlw	7
  3442  00040C  1833               	xorwf	_tmp^0,w,c
  3443  00040E  E004               	bz	u7050
  3444                           
  3445                           ; BSR set to: 0
  3446  000410  0E0B               	movlw	11
  3447  000412  1852               	xorwf	_NovaTecla^0,w,c
  3448  000414  A4D8               	btfss	status,2,c
  3449  000416  0012               	return	
  3450  000418                     u7050:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3454  000418  C033  F064         	movff	_tmp,UenviaPas@pos
  3455  00041C  0E00               	movlw	0
  3456  00041E  ECC6  F00F         	call	_UenviaPas
  3457                           
  3458                           ;Menu.c: 135:     NovaTecla = -1;
  3459  000422  6852               	setf	_NovaTecla^0,c
  3460                           
  3461                           ;Menu.c: 136:     novaLletra = -1;
  3462  000424  6851               	setf	_novaLletra^0,c
  3463                           
  3464                           ;Menu.c: 137:     tmp = 0;
  3465  000426  6A33               	clrf	_tmp^0,c
  3466                           
  3467                           ;Menu.c: 138:     UcheckExists();
  3468  000428  ECA1  F000         	call	_UcheckExists	;wreg free
  3469                           
  3470                           ;Menu.c: 139:     SMSoff();
  3471  00042C  EC89  F000         	call	_SMSoff	;wreg free
  3472  000430  D771               	goto	l6613
  3473  000432                     l6733:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3477  000432  EC1B  F000         	call	_UcheckExistsNotFinished	;wreg free
  3478  000436  B0D8               	btfsc	status,0,c
  3479  000438  0012               	return	
  3480                           
  3481                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3482  00043A  EC9F  F000         	call	_UcheckExistsGetError	;wreg free
  3483  00043E  6E30               	movwf	_indexUsuari^0,c
  3484  000440  D769               	goto	l6613
  3485  000442                     l569:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3489  000442  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3490  000444  D006               	goto	l570
  3491                           
  3492                           ; BSR set to: 0
  3493  000446  2830               	incf	_indexUsuari^0,w,c
  3494  000448  E104               	bnz	l570
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;Menu.c: 151:     URegister();
  3498  00044A  ECA3  F000         	call	_URegister	;wreg free
  3499  00044E                     l6743:
  3500                           
  3501                           ;Menu.c: 152:     state = 0;
  3502  00044E  6A2E               	clrf	menu@state^0,c
  3503                           
  3504                           ;Menu.c: 153:    }
  3505  000450  0012               	return	
  3506  000452                     l570:
  3507                           
  3508                           ; BSR set to: 0
  3509  000452  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3510                           
  3511                           ; BSR set to: 0
  3512  000454  BE30               	btfsc	_indexUsuari^0,7,c
  3513  000456  D004               	goto	l572
  3514                           
  3515                           ; BSR set to: 0
  3516  000458  EC02  F00F         	call	_miraPassword	;wreg free
  3517  00045C  E301 D75A          	bc	l6613
  3518  000460                     l572:
  3519  000460  A077               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3520  000462  D002               	goto	u7130
  3521  000464  2830               	incf	_indexUsuari^0,w,c
  3522  000466  E0F3               	bz	l6743
  3523  000468                     u7130:
  3524  000468  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3525  00046A  D002               	goto	u7150
  3526  00046C  AE30               	btfss	_indexUsuari^0,7,c
  3527  00046E  D7EF               	goto	l6743
  3528  000470                     u7150:
  3529  000470  EC02  F00F         	call	_miraPassword	;wreg free
  3530  000474  E3EC               	bnc	l6743
  3531  000476  0012               	return	
  3532  000478                     l6757:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;Menu.c: 162:    LcClear();
  3536  000478  EC38  F00F         	call	_LcClear	;wreg free
  3537                           
  3538                           ;Menu.c: 163:    SiFerMenu();
  3539  00047C  ECA5  F000         	call	_SiFerMenu	;wreg free
  3540                           
  3541                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3542  000480  5031               	movf	_menuDalt^0,w,c
  3543  000482  EC21  F000         	call	_GLCDMostraMenu
  3544                           
  3545                           ;Menu.c: 165:    novaDireccio = -1;
  3546  000486  6850               	setf	_novaDireccio^0,c
  3547  000488  D744               	goto	l6611
  3548  00048A                     l6769:
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3552  00048A  0E08               	movlw	8
  3553  00048C  1850               	xorwf	_novaDireccio^0,w,c
  3554  00048E  E106               	bnz	l6775
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3558  000490  0E04               	movlw	4
  3559  000492  6031               	cpfslt	_menuDalt^0,c
  3560  000494  D001               	goto	l584
  3561                           
  3562                           ; BSR set to: 0
  3563  000496  2A31               	incf	_menuDalt^0,f,c
  3564  000498                     l584:
  3565                           
  3566                           ;Menu.c: 172:     state--;
  3567  000498  062E               	decf	menu@state^0,f,c
  3568                           
  3569                           ;Menu.c: 173:    }
  3570  00049A  0012               	return	
  3571  00049C                     l6775:
  3572                           
  3573                           ; BSR set to: 0
  3574  00049C  0E02               	movlw	2
  3575  00049E  1850               	xorwf	_novaDireccio^0,w,c
  3576  0004A0  E104               	bnz	l6781
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3580  0004A2  5031               	movf	_menuDalt^0,w,c
  3581  0004A4  E0F9               	bz	l584
  3582                           
  3583                           ; BSR set to: 0
  3584  0004A6  0631               	decf	_menuDalt^0,f,c
  3585  0004A8  D7F7               	goto	l584
  3586  0004AA                     l6781:
  3587                           
  3588                           ; BSR set to: 0
  3589  0004AA  0E0B               	movlw	11
  3590  0004AC  1852               	xorwf	_NovaTecla^0,w,c
  3591  0004AE  E10C               	bnz	l6793
  3592                           
  3593                           ; BSR set to: 0
  3594  0004B0  0E03               	movlw	3
  3595  0004B2  1831               	xorwf	_menuDalt^0,w,c
  3596  0004B4  E109               	bnz	l6793
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;Menu.c: 179:     NoFerMenu();
  3600  0004B6  ECA9  F000         	call	_NoFerMenu	;wreg free
  3601                           
  3602                           ;Menu.c: 180:     LcClear();
  3603  0004BA  EC38  F00F         	call	_LcClear	;wreg free
  3604                           
  3605                           ;Menu.c: 181:     LcNewString("BYE BYE ");
  3606  0004BE  0EBB               	movlw	low STR_3
  3607  0004C0  DA73               	call	PL10	;call to abstracted procedure
  3608  0004C2  EC2D  F000         	call	_LcNewString	;wreg free
  3609  0004C6  D726               	goto	l6613
  3610  0004C8                     l6793:
  3611                           
  3612                           ; BSR set to: 0
  3613  0004C8  0E0B               	movlw	11
  3614  0004CA  1852               	xorwf	_NovaTecla^0,w,c
  3615  0004CC  E10E               	bnz	l6807
  3616                           
  3617                           ; BSR set to: 0
  3618  0004CE  0431               	decf	_menuDalt^0,w,c
  3619  0004D0  E10C               	bnz	l6807
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;Menu.c: 185:     LcClear();
  3623  0004D2  EC38  F00F         	call	_LcClear	;wreg free
  3624                           
  3625                           ;Menu.c: 186:     NoFerMenu();
  3626  0004D6  ECA9  F000         	call	_NoFerMenu	;wreg free
  3627                           
  3628                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3629  0004DA  0EA2               	movlw	low STR_4
  3630  0004DC  DA65               	call	PL10	;call to abstracted procedure
  3631  0004DE  EC2D  F000         	call	_LcNewString	;wreg free
  3632                           
  3633                           ;Menu.c: 188:     NovaTecla = -1;
  3634  0004E2  6852               	setf	_NovaTecla^0,c
  3635                           
  3636                           ;Menu.c: 189:     state = 16;
  3637  0004E4  0E10               	movlw	16
  3638  0004E6  6E2E               	movwf	menu@state^0,c
  3639                           
  3640                           ;Menu.c: 190:    }
  3641  0004E8  0C10               	retlw	16
  3642  0004EA                     l6807:
  3643                           
  3644                           ; BSR set to: 0
  3645  0004EA  5031               	movf	_menuDalt^0,w,c
  3646  0004EC  E112               	bnz	l6823
  3647                           
  3648                           ; BSR set to: 0
  3649  0004EE  0E0B               	movlw	11
  3650  0004F0  1852               	xorwf	_NovaTecla^0,w,c
  3651  0004F2  E10F               	bnz	l6823
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;Menu.c: 192:     NoFerMenu();
  3655  0004F4  ECA9  F000         	call	_NoFerMenu	;wreg free
  3656                           
  3657                           ;Menu.c: 193:     NovaTecla = -1;
  3658  0004F8  6852               	setf	_NovaTecla^0,c
  3659                           
  3660                           ;Menu.c: 194:     LcClear();
  3661  0004FA  EC38  F00F         	call	_LcClear	;wreg free
  3662                           
  3663                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3664  0004FE  0E92               	movlw	low STR_5
  3665  000500  DA53               	call	PL10	;call to abstracted procedure
  3666  000502  EC2D  F000         	call	_LcNewString	;wreg free
  3667                           
  3668                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3669  000506  5030               	movf	_indexUsuari^0,w,c
  3670  000508  EC52  F000         	call	_JJuguem
  3671                           
  3672                           ;Menu.c: 197:     state = 21;
  3673  00050C  0E15               	movlw	21
  3674  00050E  6E2E               	movwf	menu@state^0,c
  3675                           
  3676                           ;Menu.c: 198:    }
  3677  000510  0C15               	retlw	21
  3678  000512                     l6823:
  3679                           
  3680                           ; BSR set to: 0
  3681  000512  0E0B               	movlw	11
  3682  000514  1852               	xorwf	_NovaTecla^0,w,c
  3683  000516  E10E               	bnz	l6839
  3684                           
  3685                           ; BSR set to: 0
  3686  000518  0E04               	movlw	4
  3687  00051A  1831               	xorwf	_menuDalt^0,w,c
  3688  00051C  E10B               	bnz	l6839
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;Menu.c: 200:     NoFerMenu();
  3692  00051E  ECA9  F000         	call	_NoFerMenu	;wreg free
  3693                           
  3694                           ;Menu.c: 201:     LcClear();
  3695  000522  EC38  F00F         	call	_LcClear	;wreg free
  3696                           
  3697                           ;Menu.c: 202:     menuDalt = 0;
  3698  000526  6A31               	clrf	_menuDalt^0,c
  3699                           
  3700                           ;Menu.c: 203:     NovaTecla = -1;
  3701  000528  6852               	setf	_NovaTecla^0,c
  3702                           
  3703                           ;Menu.c: 204:     calculateShowUsers();
  3704  00052A  EC9B  F000         	call	_calculateShowUsers	;wreg free
  3705                           
  3706                           ;Menu.c: 205:     state = 30;
  3707  00052E  0E1E               	movlw	30
  3708  000530  6E2E               	movwf	menu@state^0,c
  3709                           
  3710                           ;Menu.c: 206:    }
  3711  000532  0C1E               	retlw	30
  3712  000534                     l6839:
  3713                           
  3714                           ; BSR set to: 0
  3715  000534  0E0B               	movlw	11
  3716  000536  1852               	xorwf	_NovaTecla^0,w,c
  3717  000538  A4D8               	btfss	status,2,c
  3718  00053A  0012               	return	
  3719                           
  3720                           ; BSR set to: 0
  3721  00053C  0E02               	movlw	2
  3722  00053E  1831               	xorwf	_menuDalt^0,w,c
  3723  000540  A4D8               	btfss	status,2,c
  3724  000542  0012               	return	
  3725                           
  3726                           ; BSR set to: 0
  3727  000544  0E00               	movlw	0
  3728  000546  ECB3  F00F         	call	_UgetTop5
  3729  00054A  0AFF               	xorlw	255
  3730  00054C  B4D8               	btfsc	status,2,c
  3731  00054E  0012               	return	
  3732                           
  3733                           ;Menu.c: 208:     NoFerMenu();
  3734  000550  ECA9  F000         	call	_NoFerMenu	;wreg free
  3735                           
  3736                           ;Menu.c: 209:     LcClear();
  3737  000554  EC38  F00F         	call	_LcClear	;wreg free
  3738                           
  3739                           ;Menu.c: 210:     menuDalt = 0;
  3740  000558  6A31               	clrf	_menuDalt^0,c
  3741                           
  3742                           ;Menu.c: 211:     NovaTecla = -1;
  3743  00055A  6852               	setf	_NovaTecla^0,c
  3744  00055C                     l6853:
  3745                           
  3746                           ;Menu.c: 212:     state = 31;
  3747  00055C  0E1F               	movlw	31
  3748  00055E  6E2E               	movwf	menu@state^0,c
  3749  000560  0C1F               	retlw	31
  3750  000562                     l6855:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;Menu.c: 216:    if (LcLliure()) {
  3754  000562  EC33  F000         	call	_LcLliure	;wreg free
  3755  000566  A0D8               	btfss	status,0,c
  3756  000568  0012               	return	
  3757                           
  3758                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3759  00056A  5030               	movf	_indexUsuari^0,w,c
  3760  00056C  ECA9  F00F         	call	_UgetUserName
  3761  000570  DA29               	call	PL42	;call to abstracted procedure
  3762  000572  EC2D  F000         	call	_LcNewString	;wreg free
  3763                           
  3764                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3765  000576  5032               	movf	_timerMenu^0,w,c
  3766  000578  EC76  F00F         	call	_TiResetTics
  3767  00057C  D6CB               	goto	l6613
  3768  00057E                     l6863:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3772  00057E  5032               	movf	_timerMenu^0,w,c
  3773  000580  ECDD  F00E         	call	_TiGetTics
  3774  000584  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3775  000586  0012               	return	
  3776  000588  0E6B               	movlw	107
  3777  00058A  5C64               	subwf	?_TiGetTics^0,w,c
  3778  00058C  0E09               	movlw	9
  3779  00058E  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3780  000590  E301 D75D          	bc	l6743
  3781  000594  0012               	return	
  3782  000596                     l6867:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3786  000596  EC33  F000         	call	_LcLliure	;wreg free
  3787  00059A  B0D8               	btfsc	status,0,c
  3788  00059C  BE52               	btfsc	_NovaTecla^0,7,c
  3789  00059E  0012               	return	
  3790  0005A0  5052               	movf	_NovaTecla^0,w,c
  3791  0005A2  0A80               	xorlw	128
  3792  0005A4  0F76               	addlw	-138
  3793  0005A6  B0D8               	btfsc	status,0,c
  3794  0005A8  0012               	return	
  3795                           
  3796                           ;Menu.c: 229:     LcGotoXY(0,1);
  3797  0005AA  DA09               	call	PL32	;call to abstracted procedure
  3798  0005AC  EC72  F00E         	call	_LcGotoXY
  3799                           
  3800                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  3801  0005B0  5052               	movf	_NovaTecla^0,w,c
  3802  0005B2  0F30               	addlw	48
  3803  0005B4  6E41               	movwf	_horaTmp^0,c
  3804                           
  3805                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  3806  0005B6  5041               	movf	_horaTmp^0,w,c
  3807  0005B8  ECB6  F00D         	call	_LcPutChar
  3808  0005BC  D6AA               	goto	l6611
  3809  0005BE                     l6883:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3813  0005BE  BE52               	btfsc	_NovaTecla^0,7,c
  3814  0005C0  0012               	return	
  3815                           
  3816                           ; BSR set to: 0
  3817  0005C2  DA0B               	call	PL84	;call to abstracted procedure
  3818  0005C4  B0D8               	btfsc	status,0,c
  3819  0005C6  0012               	return	
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  3823  0005C8  5052               	movf	_NovaTecla^0,w,c
  3824  0005CA  0F30               	addlw	48
  3825  0005CC  6E42               	movwf	(_horaTmp+1)^0,c
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  3829  0005CE  5042               	movf	(_horaTmp+1)^0,w,c
  3830  0005D0  ECB6  F00D         	call	_LcPutChar
  3831                           
  3832                           ;Menu.c: 243:     NovaTecla = -1;
  3833  0005D4  6852               	setf	_NovaTecla^0,c
  3834                           
  3835                           ;Menu.c: 244:     LcPutChar(':');
  3836  0005D6  0E3A               	movlw	58
  3837  0005D8  ECB6  F00D         	call	_LcPutChar
  3838  0005DC  D69B               	goto	l6613
  3839  0005DE                     l6897:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  3843  0005DE  BE52               	btfsc	_NovaTecla^0,7,c
  3844  0005E0  0012               	return	
  3845                           
  3846                           ; BSR set to: 0
  3847  0005E2  D9FB               	call	PL84	;call to abstracted procedure
  3848  0005E4  B0D8               	btfsc	status,0,c
  3849  0005E6  0012               	return	
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  3853  0005E8  5052               	movf	_NovaTecla^0,w,c
  3854  0005EA  0F30               	addlw	48
  3855  0005EC  6E43               	movwf	(_horaTmp+2)^0,c
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  3859  0005EE  5043               	movf	(_horaTmp+2)^0,w,c
  3860  0005F0  ECB6  F00D         	call	_LcPutChar
  3861  0005F4  D68E               	goto	l6611
  3862  0005F6                     l6909:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  3866  0005F6  BE52               	btfsc	_NovaTecla^0,7,c
  3867  0005F8  0012               	return	
  3868                           
  3869                           ; BSR set to: 0
  3870  0005FA  D9EF               	call	PL84	;call to abstracted procedure
  3871  0005FC  B0D8               	btfsc	status,0,c
  3872  0005FE  0012               	return	
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  3876  000600  5052               	movf	_NovaTecla^0,w,c
  3877  000602  0F30               	addlw	48
  3878  000604  6E44               	movwf	(_horaTmp+3)^0,c
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  3882  000606  5044               	movf	(_horaTmp+3)^0,w,c
  3883  000608  ECB6  F00D         	call	_LcPutChar
  3884  00060C  D682               	goto	l6611
  3885  00060E                     l6921:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;Menu.c: 274:    if (NovaTecla == 11) {
  3889  00060E  0E0B               	movlw	11
  3890  000610  1852               	xorwf	_NovaTecla^0,w,c
  3891  000612  E108               	bnz	l6929
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  3895  000614  0E41               	movlw	low _horaTmp
  3896  000616  6E64               	movwf	HActualitzaHora@nova^0,c
  3897  000618  EC14  F00F         	call	_HActualitzaHora	;wreg free
  3898                           
  3899                           ;Menu.c: 276:     NovaTecla = -1;
  3900  00061C  6852               	setf	_NovaTecla^0,c
  3901  00061E                     l6927:
  3902                           
  3903                           ;Menu.c: 277:     state = 12;
  3904  00061E  0E0C               	movlw	12
  3905  000620  6E2E               	movwf	menu@state^0,c
  3906                           
  3907                           ;Menu.c: 278:    }
  3908  000622  0C0C               	retlw	12
  3909  000624                     l6929:
  3910                           
  3911                           ; BSR set to: 0
  3912  000624  0E0A               	movlw	10
  3913  000626  1852               	xorwf	_NovaTecla^0,w,c
  3914  000628  E0FA               	bz	l6927
  3915  00062A  0012               	return	
  3916  00062C                     l6933:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3920  00062C  0E0A               	movlw	10
  3921  00062E  1852               	xorwf	_NovaTecla^0,w,c
  3922  000630  E103               	bnz	u7460
  3923                           
  3924                           ; BSR set to: 0
  3925  000632  EC33  F000         	call	_LcLliure	;wreg free
  3926  000636  E203               	bc	u7470
  3927  000638                     u7460:
  3928  000638  ECF1  F00F         	call	_checkHoraAcabat	;wreg free
  3929  00063C  E305               	bnc	l6945
  3930  00063E                     u7470:
  3931                           
  3932                           ;Menu.c: 285:     LcClear();
  3933  00063E  EC38  F00F         	call	_LcClear	;wreg free
  3934                           
  3935                           ;Menu.c: 286:     JendGame();
  3936  000642  ECAB  F000         	call	_JendGame	;wreg free
  3937  000646  D666               	goto	l6613
  3938  000648                     l6945:
  3939  000648  5052               	movf	_NovaTecla^0,w,c
  3940  00064A  0A80               	xorlw	128
  3941  00064C  0F7F               	addlw	-129
  3942  00064E  E309               	bnc	l6953
  3943  000650  5052               	movf	_NovaTecla^0,w,c
  3944  000652  0A80               	xorlw	128
  3945  000654  0F76               	addlw	-138
  3946  000656  E205               	bc	l6953
  3947                           
  3948                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  3949  000658  5052               	movf	_NovaTecla^0,w,c
  3950  00065A  EC4A  F000         	call	_JnovaTecla
  3951                           
  3952                           ;Menu.c: 291:     NovaTecla = -1;
  3953  00065E  6852               	setf	_NovaTecla^0,c
  3954                           
  3955                           ;Menu.c: 293:    }
  3956  000660  0012               	return	
  3957  000662                     l6953:
  3958  000662  BE50               	btfsc	_novaDireccio^0,7,c
  3959  000664  0012               	return	
  3960                           
  3961                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  3962  000666  5050               	movf	_novaDireccio^0,w,c
  3963  000668  EC4E  F000         	call	_JnovaDireccio
  3964                           
  3965                           ;Menu.c: 296:     novaDireccio = -1;
  3966  00066C  6850               	setf	_novaDireccio^0,c
  3967  00066E  0012               	return	
  3968  000670                     l6959:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3972  000670  ECA7  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  3973  000674  0900               	iorlw	0
  3974  000676  B4D8               	btfsc	status,2,c
  3975  000678  0012               	return	
  3976  00067A  0E0B               	movlw	11
  3977  00067C  D7D4               	goto	L1
  3978  00067E                     l6965:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;Menu.c: 306:    if (LcLliure()) {
  3982  00067E  EC33  F000         	call	_LcLliure	;wreg free
  3983  000682  A0D8               	btfss	status,0,c
  3984  000684  0012               	return	
  3985                           
  3986                           ;Menu.c: 307:     LcGotoXY(0,0);
  3987  000686  0E00               	movlw	0
  3988  000688  6E6C               	movwf	LcGotoXY@Row^0,c
  3989  00068A  EC72  F00E         	call	_LcGotoXY
  3990                           
  3991                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  3992  00068E  5031               	movf	_menuDalt^0,w,c
  3993  000690  EC5A  F00F         	call	_getArrayShowUsers
  3994  000694  D98F               	call	PL28	;call to abstracted procedure
  3995  000696  EC2D  F000         	call	_LcNewString	;wreg free
  3996  00069A                     l6969:
  3997                           
  3998                           ;Menu.c: 309:     menuDalt++;
  3999  00069A  2A31               	incf	_menuDalt^0,f,c
  4000  00069C  D63B               	goto	l6613
  4001  00069E                     l6973:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;Menu.c: 314:    if (LcLliure()) {
  4005  00069E  EC33  F000         	call	_LcLliure	;wreg free
  4006  0006A2  A0D8               	btfss	status,0,c
  4007  0006A4  0012               	return	
  4008                           
  4009                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4010  0006A6  EC9D  F000         	call	_UgetNumUsuaris	;wreg free
  4011  0006AA  6031               	cpfslt	_menuDalt^0,c
  4012  0006AC  D00A               	goto	l630
  4013                           
  4014                           ;Menu.c: 316:       LcGotoXY(0,1);
  4015  0006AE  D987               	call	PL32	;call to abstracted procedure
  4016  0006B0  EC72  F00E         	call	_LcGotoXY
  4017                           
  4018                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4019  0006B4  5031               	movf	_menuDalt^0,w,c
  4020  0006B6  EC5A  F00F         	call	_getArrayShowUsers
  4021  0006BA  D97C               	call	PL28	;call to abstracted procedure
  4022  0006BC  EC2D  F000         	call	_LcNewString	;wreg free
  4023  0006C0  D7EC               	goto	l6969
  4024  0006C2                     l630:
  4025                           
  4026                           ;Menu.c: 320:       menuDalt = 0;
  4027  0006C2  6A31               	clrf	_menuDalt^0,c
  4028  0006C4  D627               	goto	l6613
  4029  0006C6                     l6983:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;Menu.c: 326:    if (LcLliure()) {
  4033  0006C6  EC33  F000         	call	_LcLliure	;wreg free
  4034  0006CA  A0D8               	btfss	status,0,c
  4035  0006CC  0012               	return	
  4036                           
  4037                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4038  0006CE  EC9D  F000         	call	_UgetNumUsuaris	;wreg free
  4039  0006D2  1831               	xorwf	_menuDalt^0,w,c
  4040  0006D4  E101               	bnz	l6989
  4041                           
  4042                           ;Menu.c: 328:       menuDalt = 0;
  4043  0006D6  6A31               	clrf	_menuDalt^0,c
  4044  0006D8                     l6989:
  4045                           
  4046                           ;Menu.c: 330:     LcGotoXY(16,0);
  4047  0006D8  D987               	call	PL90	;call to abstracted procedure
  4048  0006DA  EC72  F00E         	call	_LcGotoXY
  4049                           
  4050                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4051  0006DE  5031               	movf	_menuDalt^0,w,c
  4052  0006E0  EC5A  F00F         	call	_getArrayShowUsers
  4053  0006E4  D967               	call	PL28	;call to abstracted procedure
  4054  0006E6  EC2D  F000         	call	_LcNewString	;wreg free
  4055  0006EA  D614               	goto	l6613
  4056  0006EC                     l6993:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;Menu.c: 336:    if (LcLliure()) {
  4060  0006EC  EC33  F000         	call	_LcLliure	;wreg free
  4061  0006F0  A0D8               	btfss	status,0,c
  4062  0006F2  0012               	return	
  4063                           
  4064                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4065  0006F4  EC9D  F000         	call	_UgetNumUsuaris	;wreg free
  4066  0006F8  0100               	movlb	0	; () banked
  4067  0006FA  6FE3               	movwf	??_menu& (0+255),b
  4068  0006FC  6BE4               	clrf	(??_menu+1)& (0+255),b
  4069  0006FE  5031               	movf	_menuDalt^0,w,c
  4070  000700  6FE5               	movwf	(??_menu+2)& (0+255),b
  4071  000702  6BE6               	clrf	(??_menu+3)& (0+255),b
  4072  000704  2BE5               	incf	(??_menu+2)& (0+255),f,b
  4073  000706  0E00               	movlw	0
  4074  000708  23E6               	addwfc	(??_menu+3)& (0+255),f,b
  4075  00070A  51E3               	movf	??_menu& (0+255),w,b
  4076  00070C  5DE5               	subwf	(??_menu+2)& (0+255),w,b
  4077  00070E  51E6               	movf	(??_menu+3)& (0+255),w,b
  4078  000710  0A80               	xorlw	128
  4079  000712  6FE7               	movwf	(??_menu+4)& (0+255),b
  4080  000714  51E4               	movf	(??_menu+1)& (0+255),w,b
  4081  000716  0A80               	xorlw	128
  4082  000718  59E7               	subwfb	(??_menu+4)& (0+255),w,b
  4083  00071A  E301 D5FB          	bc	l6613
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;Menu.c: 338:       LcGotoXY(16,1);
  4087  00071E  D961               	call	PL88	;call to abstracted procedure
  4088  000720  EC72  F00E         	call	_LcGotoXY
  4089                           
  4090                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4091  000724  2831               	incf	_menuDalt^0,w,c
  4092  000726  EC5A  F00F         	call	_getArrayShowUsers
  4093  00072A  D944               	call	PL28	;call to abstracted procedure
  4094  00072C  EC2D  F000         	call	_LcNewString	;wreg free
  4095  000730  D5F1               	goto	l6613
  4096  000732                     l7001:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4100  000732  5032               	movf	_timerMenu^0,w,c
  4101  000734  ECDD  F00E         	call	_TiGetTics
  4102  000738  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4103  00073A  D006               	goto	l7005
  4104  00073C  0EB6               	movlw	182
  4105  00073E  5C64               	subwf	?_TiGetTics^0,w,c
  4106  000740  0E04               	movlw	4
  4107  000742  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4108  000744  E301 D5E6          	bc	l6613
  4109  000748                     l7005:
  4110  000748  0E0B               	movlw	11
  4111  00074A  1852               	xorwf	_NovaTecla^0,w,c
  4112  00074C  A4D8               	btfss	status,2,c
  4113  00074E  0012               	return	
  4114  000750                     u7610:
  4115                           
  4116                           ;Menu.c: 349:     menuDalt = 0;
  4117  000750  6A31               	clrf	_menuDalt^0,c
  4118  000752  D765               	goto	l6927
  4119  000754                     l7011:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;Menu.c: 354:    if (pos > 15) {
  4123  000754  0E0F               	movlw	15
  4124  000756  642F               	cpfsgt	_pos^0,c
  4125  000758  D005               	goto	l7017
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;Menu.c: 355:     LcClear();
  4129  00075A  EC38  F00F         	call	_LcClear	;wreg free
  4130  00075E                     l7015:
  4131                           
  4132                           ;Menu.c: 356:     state = 23;
  4133  00075E  0E17               	movlw	23
  4134  000760  6E2E               	movwf	menu@state^0,c
  4135                           
  4136                           ;Menu.c: 357:    }
  4137  000762  0C17               	retlw	23
  4138  000764                     l7017:
  4139                           
  4140                           ; BSR set to: 0
  4141  000764  0E10               	movlw	16
  4142  000766  602F               	cpfslt	_pos^0,c
  4143  000768  0C10               	retlw	16
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4147  00076A  5032               	movf	_timerMenu^0,w,c
  4148  00076C  EC76  F00F         	call	_TiResetTics
  4149  000770                     l7021:
  4150                           
  4151                           ;Menu.c: 360:     LcScroll();
  4152  000770  EC8C  F000         	call	_LcScroll	;wreg free
  4153                           
  4154                           ;Menu.c: 361:     pos++;
  4155  000774  2A2F               	incf	_pos^0,f,c
  4156  000776  D690               	goto	l584
  4157  000778                     l7027:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;Menu.c: 366:    if (LcLliure()) {
  4161  000778  EC33  F000         	call	_LcLliure	;wreg free
  4162  00077C  A0D8               	btfss	status,0,c
  4163  00077E  0012               	return	
  4164                           
  4165                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4166  000780  5032               	movf	_timerMenu^0,w,c
  4167  000782  EC76  F00F         	call	_TiResetTics
  4168                           
  4169                           ;Menu.c: 368:     pos = 0;
  4170  000786  6A2F               	clrf	_pos^0,c
  4171  000788  D5C5               	goto	l6613
  4172  00078A                     l7035:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4176  00078A  ECF7  F00F         	call	_UshowUsersCalculat	;wreg free
  4177  00078E  E2E7               	bc	l7015
  4178  000790  0012               	return	
  4179  000792                     l7039:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;Menu.c: 378:    if (LcLliure()) {
  4183  000792  EC33  F000         	call	_LcLliure	;wreg free
  4184  000796  A0D8               	btfss	status,0,c
  4185  000798  0012               	return	
  4186                           
  4187                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4188  00079A  5031               	movf	_menuDalt^0,w,c
  4189  00079C  ECB3  F00F         	call	_UgetTop5
  4190  0007A0  ECA9  F00F         	call	_UgetUserName
  4191  0007A4  D90F               	call	PL42	;call to abstracted procedure
  4192  0007A6  EC2D  F000         	call	_LcNewString	;wreg free
  4193                           
  4194                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4195  0007AA  5031               	movf	_menuDalt^0,w,c
  4196  0007AC  ECB3  F00F         	call	_UgetTop5
  4197  0007B0  ECDE  F00F         	call	_UgetScore
  4198  0007B4  EC27  F000         	call	_CToAConverteix
  4199  0007B8  D5AD               	goto	l6613
  4200  0007BA                     l7045:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4204  0007BA  ECAF  F000         	call	_CToAHaAcabat	;wreg free
  4205  0007BE  0AFA               	xorlw	250
  4206  0007C0  A4D8               	btfss	status,2,c
  4207  0007C2  0012               	return	
  4208  0007C4  EC33  F000         	call	_LcLliure	;wreg free
  4209  0007C8  A0D8               	btfss	status,0,c
  4210  0007CA  0012               	return	
  4211                           
  4212                           ;Menu.c: 386:     LcPutChar(':');
  4213  0007CC  0E3A               	movlw	58
  4214  0007CE  ECB6  F00D         	call	_LcPutChar
  4215                           
  4216                           ;Menu.c: 387:     LcGotoXY(0,1);
  4217  0007D2  D8F5               	call	PL32	;call to abstracted procedure
  4218  0007D4  EC72  F00E         	call	_LcGotoXY
  4219                           
  4220                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4221  0007D8  ECAD  F000         	call	_CToAobtenir	;wreg free
  4222  0007DC  D8F8               	call	PL48	;call to abstracted procedure
  4223  0007DE  EC2D  F000         	call	_LcNewString	;wreg free
  4224                           
  4225                           ;Menu.c: 389:     menuDalt++;
  4226  0007E2  2A31               	incf	_menuDalt^0,f,c
  4227                           
  4228                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4229  0007E4  0E05               	movlw	5
  4230  0007E6  1831               	xorwf	_menuDalt^0,w,c
  4231  0007E8  E005               	bz	u7700
  4232  0007EA  5031               	movf	_menuDalt^0,w,c
  4233  0007EC  ECB3  F00F         	call	_UgetTop5
  4234  0007F0  0AFF               	xorlw	255
  4235  0007F2  E101               	bnz	l7059
  4236  0007F4                     u7700:
  4237  0007F4  6A31               	clrf	_menuDalt^0,c
  4238  0007F6                     l7059:
  4239                           
  4240                           ;Menu.c: 391:     state = 34;
  4241  0007F6  0E22               	movlw	34
  4242  0007F8  6E2E               	movwf	menu@state^0,c
  4243  0007FA  0C22               	retlw	34
  4244  0007FC                     l7061:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4248  0007FC  5031               	movf	_menuDalt^0,w,c
  4249  0007FE  ECB3  F00F         	call	_UgetTop5
  4250  000802  0AFF               	xorlw	255
  4251  000804  E104               	bnz	u7720
  4252  000806  0E05               	movlw	5
  4253  000808  1831               	xorwf	_menuDalt^0,w,c
  4254  00080A  B4D8               	btfsc	status,2,c
  4255  00080C  0012               	return	
  4256  00080E                     u7720:
  4257  00080E  EC33  F000         	call	_LcLliure	;wreg free
  4258  000812  A0D8               	btfss	status,0,c
  4259  000814  0012               	return	
  4260                           
  4261                           ;Menu.c: 396:     LcGotoXY(16,0);
  4262  000816  D8E8               	call	PL90	;call to abstracted procedure
  4263  000818  EC72  F00E         	call	_LcGotoXY
  4264                           
  4265                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4266  00081C  5031               	movf	_menuDalt^0,w,c
  4267  00081E  ECB3  F00F         	call	_UgetTop5
  4268  000822  ECA9  F00F         	call	_UgetUserName
  4269  000826  D8CE               	call	PL42	;call to abstracted procedure
  4270  000828  EC2D  F000         	call	_LcNewString	;wreg free
  4271                           
  4272                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4273  00082C  5031               	movf	_menuDalt^0,w,c
  4274  00082E  ECB3  F00F         	call	_UgetTop5
  4275  000832  ECDE  F00F         	call	_UgetScore
  4276  000836  EC27  F000         	call	_CToAConverteix
  4277  00083A  D56C               	goto	l6613
  4278  00083C                     l7071:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4282  00083C  EC33  F000         	call	_LcLliure	;wreg free
  4283  000840  A0D8               	btfss	status,0,c
  4284  000842  0012               	return	
  4285  000844  ECAF  F000         	call	_CToAHaAcabat	;wreg free
  4286  000848  0AFA               	xorlw	250
  4287  00084A  A4D8               	btfss	status,2,c
  4288  00084C  0012               	return	
  4289                           
  4290                           ;Menu.c: 404:     LcPutChar(':');
  4291  00084E  0E3A               	movlw	58
  4292  000850  ECB6  F00D         	call	_LcPutChar
  4293                           
  4294                           ;Menu.c: 405:     LcGotoXY(16,1);
  4295  000854  D8C6               	call	PL88	;call to abstracted procedure
  4296  000856  EC72  F00E         	call	_LcGotoXY
  4297                           
  4298                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4299  00085A  ECAD  F000         	call	_CToAobtenir	;wreg free
  4300  00085E  D8B7               	call	PL48	;call to abstracted procedure
  4301  000860  EC2D  F000         	call	_LcNewString	;wreg free
  4302                           
  4303                           ;Menu.c: 407:     pos = 0;
  4304  000864  6A2F               	clrf	_pos^0,c
  4305                           
  4306                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4307  000866  5032               	movf	_timerMenu^0,w,c
  4308  000868  EC76  F00F         	call	_TiResetTics
  4309                           
  4310                           ;Menu.c: 409:     state = 37;
  4311  00086C  0E25               	movlw	37
  4312  00086E  6E2E               	movwf	menu@state^0,c
  4313  000870  0C25               	retlw	37
  4314  000872                     l7085:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4318  000872  0E0B               	movlw	11
  4319  000874  1852               	xorwf	_NovaTecla^0,w,c
  4320  000876  E104               	bnz	l7093
  4321                           
  4322                           ; BSR set to: 0
  4323  000878  EC33  F000         	call	_LcLliure	;wreg free
  4324  00087C  E301 D768          	bc	u7610
  4325  000880                     l7093:
  4326  000880  5032               	movf	_timerMenu^0,w,c
  4327  000882  ECDD  F00E         	call	_TiGetTics
  4328  000886  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4329  000888  0012               	return	
  4330  00088A  0E91               	movlw	145
  4331  00088C  5C64               	subwf	?_TiGetTics^0,w,c
  4332  00088E  0E01               	movlw	1
  4333  000890  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4334  000892  A0D8               	btfss	status,0,c
  4335  000894  0012               	return	
  4336  000896  EC33  F000         	call	_LcLliure	;wreg free
  4337  00089A  E301 D53B          	bc	l6613
  4338  00089E  0012               	return	
  4339  0008A0                     l7099:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;Menu.c: 422:    if (pos < 16) {
  4343  0008A0  0E10               	movlw	16
  4344  0008A2  602F               	cpfslt	_pos^0,c
  4345  0008A4  D004               	goto	l7109
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4349  0008A6  5032               	movf	_timerMenu^0,w,c
  4350  0008A8  EC76  F00F         	call	_TiResetTics
  4351  0008AC  D761               	goto	l7021
  4352  0008AE                     l7109:
  4353                           
  4354                           ; BSR set to: 0
  4355  0008AE  0E0F               	movlw	15
  4356  0008B0  642F               	cpfsgt	_pos^0,c
  4357  0008B2  0C0F               	retlw	15
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;Menu.c: 429:     LcClear();
  4361  0008B4  EC38  F00F         	call	_LcClear	;wreg free
  4362  0008B8  D651               	goto	l6853
  4363  0008BA                     l7117:
  4364  0008BA  502E               	movf	menu@state^0,w,c
  4365  0008BC  0100               	movlb	0	; () banked
  4366  0008BE  6FE3               	movwf	??_menu& (0+255),b
  4367  0008C0  6BE4               	clrf	(??_menu+1)& (0+255),b
  4368                           
  4369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4370                           ; Switch size 1, requested type "space"
  4371                           ; Number of cases is 1, Range of values is 0 to 0
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte            4     3 (average)
  4375                           ;	Chosen strategy is simple_byte
  4376  0008C2  51E4               	movf	(??_menu+1)& (0+255),w,b
  4377  0008C4  A4D8               	btfss	status,2,c
  4378  0008C6  0012               	return	
  4379                           
  4380                           ; BSR set to: 0
  4381                           ; Switch size 1, requested type "space"
  4382                           ; Number of cases is 37, Range of values is 0 to 38
  4383                           ; switch strategies available:
  4384                           ; Name         Instructions Cycles
  4385                           ; simple_byte          112    57 (average)
  4386                           ;	Chosen strategy is simple_byte
  4387  0008C8  51E3               	movf	??_menu& (0+255),w,b
  4388  0008CA  E101 D50C          	bz	l6599
  4389  0008CE  0A01               	xorlw	1	; case 1
  4390  0008D0  E101 D513          	bz	l6605
  4391  0008D4  0A03               	xorlw	3	; case 2
  4392  0008D6  E101 D51F          	bz	l6615
  4393  0008DA  0A01               	xorlw	1	; case 3
  4394  0008DC  E101 D526          	bz	l542
  4395  0008E0  0A07               	xorlw	7	; case 4
  4396  0008E2  E101 D52C          	bz	l6633
  4397  0008E6  0A01               	xorlw	1	; case 5
  4398  0008E8  E101 D535          	bz	l6641
  4399  0008EC  0A03               	xorlw	3	; case 6
  4400  0008EE  E101 D53F          	bz	l6651
  4401  0008F2  0A01               	xorlw	1	; case 7
  4402  0008F4  E101 D550          	bz	l6665
  4403  0008F8  0A0F               	xorlw	15	; case 8
  4404  0008FA  E101 D56C          	bz	l6691
  4405  0008FE  0A01               	xorlw	1	; case 9
  4406  000900  E101 D57D          	bz	l6705
  4407  000904  0A03               	xorlw	3	; case 10
  4408  000906  E101 D594          	bz	l6733
  4409  00090A  0A01               	xorlw	1	; case 11
  4410  00090C  E101 D599          	bz	l569
  4411  000910  0A07               	xorlw	7	; case 12
  4412  000912  E101 D5B1          	bz	l6757
  4413  000916  0A01               	xorlw	1	; case 13
  4414  000918  E101 D5B7          	bz	l6769
  4415  00091C  0A03               	xorlw	3	; case 14
  4416  00091E  E101 D620          	bz	l6855
  4417  000922  0A01               	xorlw	1	; case 15
  4418  000924  E101 D62B          	bz	l6863
  4419  000928  0A1F               	xorlw	31	; case 16
  4420  00092A  E101 D634          	bz	l6867
  4421  00092E  0A01               	xorlw	1	; case 17
  4422  000930  E101 D645          	bz	l6883
  4423  000934  0A03               	xorlw	3	; case 18
  4424  000936  E101 D652          	bz	l6897
  4425  00093A  0A01               	xorlw	1	; case 19
  4426  00093C  E101 D65B          	bz	l6909
  4427  000940  0A07               	xorlw	7	; case 20
  4428  000942  E101 D664          	bz	l6921
  4429  000946  0A01               	xorlw	1	; case 21
  4430  000948  E101 D670          	bz	l6933
  4431  00094C  0A03               	xorlw	3	; case 22
  4432  00094E  E101 D68F          	bz	l6959
  4433  000952  0A01               	xorlw	1	; case 23
  4434  000954  E101 D693          	bz	l6965
  4435  000958  0A0F               	xorlw	15	; case 24
  4436  00095A  E101 D6A0          	bz	l6973
  4437  00095E  0A01               	xorlw	1	; case 25
  4438  000960  E101 D6B1          	bz	l6983
  4439  000964  0A03               	xorlw	3	; case 26
  4440  000966  E101 D6C1          	bz	l6993
  4441  00096A  0A01               	xorlw	1	; case 27
  4442  00096C  E101 D704          	bz	l7027
  4443  000970  0A07               	xorlw	7	; case 28
  4444  000972  E101 D6DE          	bz	l7001
  4445  000976  0A01               	xorlw	1	; case 29
  4446  000978  E101 D6EC          	bz	l7011
  4447  00097C  0A03               	xorlw	3	; case 30
  4448  00097E  E101 D704          	bz	l7035
  4449  000982  0A01               	xorlw	1	; case 31
  4450  000984  E101 D705          	bz	l7039
  4451  000988  0A3F               	xorlw	63	; case 32
  4452  00098A  E101 D716          	bz	l7045
  4453  00098E  0A02               	xorlw	2	; case 34
  4454  000990  E101 D734          	bz	l7061
  4455  000994  0A01               	xorlw	1	; case 35
  4456  000996  E101 D751          	bz	l7071
  4457  00099A  0A06               	xorlw	6	; case 37
  4458  00099C  E101 D769          	bz	l7085
  4459  0009A0  0A03               	xorlw	3	; case 38
  4460  0009A2  E101 D77D          	bz	l7099
  4461  0009A6  0012               	return		;funcret
  4462  0009A8                     __end_of_menu:
  4463                           	callstack 0
  4464  0009A8                     PL10:
  4465                           	callstack 24
  4466  0009A8  6E67               	movwf	LcNewString@new_s^0,c
  4467  0009AA  5067               	movf	LcNewString@new_s^0,w,c
  4468  0009AC  A4D8               	btfss	status,2,c
  4469  0009AE  0E02               	movlw	high __smallconst
  4470  0009B0  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4471  0009B2  0012               	return	
  4472  0009B4                     __end_ofPL10:
  4473                           	callstack 0
  4474  0009B4                     PL28:
  4475                           	callstack 24
  4476  0009B4  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4477  0009B8  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4478  0009BC  0012               	return	
  4479  0009BE                     __end_ofPL28:
  4480                           	callstack 0
  4481  0009BE                     PL32:
  4482                           	callstack 24
  4483  0009BE  0E01               	movlw	1
  4484  0009C0  6E6C               	movwf	LcGotoXY@Row^0,c
  4485  0009C2  0C00               	retlw	0
  4486  0009C4                     __end_ofPL32:
  4487                           	callstack 0
  4488  0009C4                     PL42:
  4489                           	callstack 24
  4490  0009C4  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4491  0009C8  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4492  0009CC  0012               	return	
  4493  0009CE                     __end_ofPL42:
  4494                           	callstack 0
  4495  0009CE                     PL48:
  4496                           	callstack 24
  4497  0009CE  0100               	movlb	0	; () banked
  4498  0009D0  6FE3               	movwf	??_menu& (0+255),b
  4499  0009D2  C0E3  F067         	movff	??_menu,LcNewString@new_s
  4500  0009D6  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4501  0009D8  0012               	return	
  4502  0009DA                     __end_ofPL48:
  4503                           	callstack 0
  4504  0009DA                     PL84:
  4505                           	callstack 24
  4506  0009DA  5052               	movf	_NovaTecla^0,w,c
  4507  0009DC  0A80               	xorlw	128
  4508  0009DE  0F76               	addlw	-138
  4509  0009E0  0012               	return	
  4510  0009E2                     __end_ofPL84:
  4511                           	callstack 0
  4512  0009E2                     PL88:
  4513                           	callstack 24
  4514  0009E2  0E01               	movlw	1
  4515  0009E4  6E6C               	movwf	LcGotoXY@Row^0,c
  4516  0009E6  0C10               	retlw	16
  4517  0009E8                     __end_ofPL88:
  4518                           	callstack 0
  4519  0009E8                     PL90:
  4520                           	callstack 24
  4521  0009E8  0E00               	movlw	0
  4522  0009EA  6E6C               	movwf	LcGotoXY@Row^0,c
  4523  0009EC  0C10               	retlw	16
  4524  0009EE                     __end_ofPL90:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _miraPassword *****************
  4528 ;; Defined at:
  4529 ;;		line 312 in file "Usuaris.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1
  4543 ;;      Params:         0       0       0
  4544 ;;      Locals:         0       0       0
  4545 ;;      Temps:          0       0       0
  4546 ;;      Totals:         0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 3
  4550 ;; This function calls:
  4551 ;;		_compareStrings
  4552 ;; This function is called by:
  4553 ;;		_menu
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text20
  4558  001E04                     __ptext20:
  4559                           	callstack 0
  4560  001E04                     _miraPassword:
  4561                           	callstack 26
  4562                           
  4563                           ;Usuaris.c: 313:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4564                           
  4565                           ;incstack = 0
  4566  001E04  0EAA               	movlw	low _tmpPassword
  4567  001E06  6E64               	movwf	compareStrings@a^0,c
  4568  001E08  504F               	movf	_usuariLoguejat^0,w,c
  4569  001E0A  0D12               	mullw	18
  4570  001E0C  0E09               	movlw	low (_usuaris+9)
  4571  001E0E  24F3               	addwf	243,w,c
  4572  001E10  6E65               	movwf	compareStrings@b^0,c
  4573  001E12  0E01               	movlw	high (_usuaris+9)
  4574  001E14  20F4               	addwfc	prodh,w,c
  4575  001E16  6E66               	movwf	(compareStrings@b+1)^0,c
  4576  001E18  ECFE  F00D         	call	_compareStrings	;wreg free
  4577  001E1C  0900               	iorlw	0
  4578  001E1E  E002               	bz	l4563
  4579  001E20  90D8               	bcf	status,0,c
  4580  001E22  0012               	return	
  4581  001E24                     l4563:
  4582  001E24  80D8               	bsf	status,0,c
  4583  001E26  0012               	return		;funcret
  4584  001E28                     __end_of_miraPassword:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _getArrayShowUsers *****************
  4588 ;; Defined at:
  4589 ;;		line 63 in file "Usuaris.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  quin            1    wreg     unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  quin            1    7[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  2    5[COMRAM] PTR unsigned char 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1
  4603 ;;      Params:         2       0       0
  4604 ;;      Locals:         1       0       0
  4605 ;;      Temps:          0       0       0
  4606 ;;      Totals:         3       0       0
  4607 ;;Total ram usage:        3 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 2
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_menu
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text21
  4618  001EB4                     __ptext21:
  4619                           	callstack 0
  4620  001EB4                     _getArrayShowUsers:
  4621                           	callstack 27
  4622                           
  4623                           ;incstack = 0
  4624                           ;getArrayShowUsers@quin stored from wreg
  4625  001EB4  6E66               	movwf	getArrayShowUsers@quin^0,c
  4626                           
  4627                           ;Usuaris.c: 64:     return usuaris[arrayShowUsers[quin]].username;
  4628  001EB6  5066               	movf	getArrayShowUsers@quin^0,w,c
  4629  001EB8  0FA2               	addlw	low _arrayShowUsers
  4630  001EBA  6ED9               	movwf	fsr2l,c
  4631  001EBC  6ADA               	clrf	fsr2h,c
  4632  001EBE  50DF               	movf	indf2,w,c
  4633  001EC0  0D12               	mullw	18
  4634  001EC2  0E00               	movlw	low _usuaris
  4635  001EC4  24F3               	addwf	243,w,c
  4636  001EC6  6E64               	movwf	?_getArrayShowUsers^0,c
  4637  001EC8  0E01               	movlw	high _usuaris
  4638  001ECA  20F4               	addwfc	prodh,w,c
  4639  001ECC  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4640  001ECE  0012               	return		;funcret
  4641  001ED0                     __end_of_getArrayShowUsers:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _checkHoraAcabat *****************
  4645 ;; Defined at:
  4646 ;;		line 44 in file "Hora.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;		None               void
  4653 ;; Registers used:
  4654 ;;		status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1
  4660 ;;      Params:         0       0       0
  4661 ;;      Locals:         0       0       0
  4662 ;;      Temps:          0       0       0
  4663 ;;      Totals:         0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 2
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_menu
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text22
  4675  001FE2                     __ptext22:
  4676                           	callstack 0
  4677  001FE2                     _checkHoraAcabat:
  4678                           	callstack 27
  4679                           
  4680                           ;Hora.c: 45:     return tempsAcabat;
  4681                           
  4682                           ;incstack = 0
  4683  001FE2  B875               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4684  001FE4  D002               	goto	l4601
  4685  001FE6  90D8               	bcf	status,0,c
  4686  001FE8  0012               	return	
  4687  001FEA                     l4601:
  4688  001FEA  80D8               	bsf	status,0,c
  4689  001FEC  0012               	return		;funcret
  4690  001FEE                     __end_of_checkHoraAcabat:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _calculateShowUsers *****************
  4694 ;; Defined at:
  4695 ;;		line 136 in file "Usuaris.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		None
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1
  4709 ;;      Params:         0       0       0
  4710 ;;      Locals:         0       0       0
  4711 ;;      Temps:          0       0       0
  4712 ;;      Totals:         0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 2
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_menu
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text23
  4724  000136                     __ptext23:
  4725                           	callstack 0
  4726  000136                     _calculateShowUsers:
  4727                           	callstack 27
  4728                           
  4729                           ;Usuaris.c: 137:     do_showUsers = 1;
  4730                           
  4731                           ;incstack = 0
  4732  000136  8A76               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4733  000138  0012               	return		;funcret
  4734  00013A                     __end_of_calculateShowUsers:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _UshowUsersCalculat *****************
  4738 ;; Defined at:
  4739 ;;		line 139 in file "Usuaris.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;		None               void
  4746 ;; Registers used:
  4747 ;;		status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1
  4753 ;;      Params:         0       0       0
  4754 ;;      Locals:         0       0       0
  4755 ;;      Temps:          0       0       0
  4756 ;;      Totals:         0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_menu
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text24
  4768  001FEE                     __ptext24:
  4769                           	callstack 0
  4770  001FEE                     _UshowUsersCalculat:
  4771                           	callstack 27
  4772                           
  4773                           ;Usuaris.c: 140:     return !do_showUsers;
  4774                           
  4775                           ;incstack = 0
  4776  001FEE  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4777  001FF0  D002               	goto	l4627
  4778  001FF2  90D8               	bcf	status,0,c
  4779  001FF4  0012               	return	
  4780  001FF6                     l4627:
  4781  001FF6  80D8               	bsf	status,0,c
  4782  001FF8  0012               	return		;funcret
  4783  001FFA                     __end_of_UshowUsersCalculat:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _UgetUserName *****************
  4787 ;; Defined at:
  4788 ;;		line 59 in file "Usuaris.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  quin            1    wreg     unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  quin            1    7[COMRAM] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  2    5[COMRAM] PTR unsigned char 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, prodl, prodh
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1
  4802 ;;      Params:         2       0       0
  4803 ;;      Locals:         1       0       0
  4804 ;;      Temps:          0       0       0
  4805 ;;      Totals:         3       0       0
  4806 ;;Total ram usage:        3 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 2
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_menu
  4813 ;;		_motorSIO
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text25
  4818  001F52                     __ptext25:
  4819                           	callstack 0
  4820  001F52                     _UgetUserName:
  4821                           	callstack 27
  4822                           
  4823                           ;incstack = 0
  4824                           ;UgetUserName@quin stored from wreg
  4825  001F52  6E66               	movwf	UgetUserName@quin^0,c
  4826                           
  4827                           ;Usuaris.c: 60:     return usuaris[quin].username;
  4828  001F54  5066               	movf	UgetUserName@quin^0,w,c
  4829  001F56  0D12               	mullw	18
  4830  001F58  0E00               	movlw	low _usuaris
  4831  001F5A  24F3               	addwf	243,w,c
  4832  001F5C  6E64               	movwf	?_UgetUserName^0,c
  4833  001F5E  0E01               	movlw	high _usuaris
  4834  001F60  20F4               	addwfc	prodh,w,c
  4835  001F62  6E65               	movwf	(?_UgetUserName+1)^0,c
  4836  001F64  0012               	return		;funcret
  4837  001F66                     __end_of_UgetUserName:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _UgetTop5 *****************
  4841 ;; Defined at:
  4842 ;;		line 304 in file "Usuaris.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  quin            1    wreg     unsigned char 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  quin            1    5[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      char 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1
  4856 ;;      Params:         0       0       0
  4857 ;;      Locals:         1       0       0
  4858 ;;      Temps:          0       0       0
  4859 ;;      Totals:         1       0       0
  4860 ;;Total ram usage:        1 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 2
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_menu
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text26
  4871  001F66                     __ptext26:
  4872                           	callstack 0
  4873  001F66                     _UgetTop5:
  4874                           	callstack 27
  4875                           
  4876                           ;incstack = 0
  4877                           ;UgetTop5@quin stored from wreg
  4878  001F66  6E64               	movwf	UgetTop5@quin^0,c
  4879                           
  4880                           ;Usuaris.c: 305:     return puntuacions[quin].indexStruct;
  4881  001F68  5064               	movf	UgetTop5@quin^0,w,c
  4882  001F6A  0D02               	mullw	2
  4883  001F6C  50F3               	movf	243,w,c
  4884  001F6E  0F98               	addlw	low _puntuacions
  4885  001F70  D000               	goto	PL76	;call to abstracted procedure
  4886  001F72                     __end_of_UgetTop5:
  4887                           	callstack 0
  4888  001F72                     PL76:
  4889                           	callstack 27
  4890  001F72  6ED9               	movwf	fsr2l,c
  4891  001F74  6ADA               	clrf	fsr2h,c
  4892  001F76  50DF               	movf	indf2,w,c
  4893  001F78  0012               	return		;funcret
  4894  001F7A                     __end_ofPL76:
  4895                           	callstack 0
  4896                           
  4897 ;; *************** function _UgetScore *****************
  4898 ;; Defined at:
  4899 ;;		line 301 in file "Usuaris.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  quin            1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  quin            1    5[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      unsigned char 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1
  4913 ;;      Params:         0       0       0
  4914 ;;      Locals:         1       0       0
  4915 ;;      Temps:          0       0       0
  4916 ;;      Totals:         1       0       0
  4917 ;;Total ram usage:        1 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 2
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_menu
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text27
  4928  001FBC                     __ptext27:
  4929                           	callstack 0
  4930  001FBC                     _UgetScore:
  4931                           	callstack 27
  4932                           
  4933                           ;incstack = 0
  4934                           ;UgetScore@quin stored from wreg
  4935  001FBC  6E64               	movwf	UgetScore@quin^0,c
  4936                           
  4937                           ;Usuaris.c: 302:     return puntuacions[quin].score;
  4938  001FBE  5064               	movf	UgetScore@quin^0,w,c
  4939  001FC0  0D02               	mullw	2
  4940  001FC2  50F3               	movf	243,w,c
  4941  001FC4  0F99               	addlw	low (_puntuacions+1)
  4942  001FC6  EFB9  F00F         	goto	PL76	;call to abstracted procedure
  4943  001FCA                     __end_of_UgetScore:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _UgetNumUsuaris *****************
  4947 ;; Defined at:
  4948 ;;		line 35 in file "Usuaris.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      unsigned char 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1
  4962 ;;      Params:         0       0       0
  4963 ;;      Locals:         0       0       0
  4964 ;;      Temps:          0       0       0
  4965 ;;      Totals:         0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 2
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_menu
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text28
  4977  00013A                     __ptext28:
  4978                           	callstack 0
  4979  00013A                     _UgetNumUsuaris:
  4980                           	callstack 27
  4981                           
  4982                           ;Usuaris.c: 36:     return numUsuaris;
  4983                           
  4984                           ;incstack = 0
  4985  00013A  502D               	movf	_numUsuaris^0,w,c
  4986  00013C  0012               	return		;funcret
  4987  00013E                     __end_of_UgetNumUsuaris:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _UenviaPas *****************
  4991 ;; Defined at:
  4992 ;;		line 51 in file "Usuaris.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  c               1    wreg     unsigned char 
  4995 ;;  pos             1    5[COMRAM] unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  c               1    6[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1
  5007 ;;      Params:         1       0       0
  5008 ;;      Locals:         1       0       0
  5009 ;;      Temps:          0       0       0
  5010 ;;      Totals:         2       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 2
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_menu
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text29
  5022  001F8C                     __ptext29:
  5023                           	callstack 0
  5024  001F8C                     _UenviaPas:
  5025                           	callstack 27
  5026                           
  5027                           ;incstack = 0
  5028                           ;UenviaPas@c stored from wreg
  5029  001F8C  6E65               	movwf	UenviaPas@c^0,c
  5030                           
  5031                           ;Usuaris.c: 52:     tmpPassword[pos] = c;
  5032  001F8E  5064               	movf	UenviaPas@pos^0,w,c
  5033  001F90  0FAA               	addlw	low _tmpPassword
  5034  001F92  6ED9               	movwf	fsr2l,c
  5035  001F94  6ADA               	clrf	fsr2h,c
  5036  001F96  C065  FFDF         	movff	UenviaPas@c,indf2
  5037  001F9A  0012               	return		;funcret
  5038  001F9C                     __end_of_UenviaPas:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _UenviaChar *****************
  5042 ;; Defined at:
  5043 ;;		line 48 in file "Usuaris.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  c               1    wreg     unsigned char 
  5046 ;;  pos             1    5[COMRAM] unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  c               1    6[COMRAM] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1
  5058 ;;      Params:         1       0       0
  5059 ;;      Locals:         1       0       0
  5060 ;;      Temps:          0       0       0
  5061 ;;      Totals:         2       0       0
  5062 ;;Total ram usage:        2 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 2
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_menu
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text30
  5073  001F9C                     __ptext30:
  5074                           	callstack 0
  5075  001F9C                     _UenviaChar:
  5076                           	callstack 27
  5077                           
  5078                           ;incstack = 0
  5079                           ;UenviaChar@c stored from wreg
  5080  001F9C  6E65               	movwf	UenviaChar@c^0,c
  5081                           
  5082                           ;Usuaris.c: 49:     tmpUsername[pos] = c;
  5083  001F9E  5064               	movf	UenviaChar@pos^0,w,c
  5084  001FA0  0FB3               	addlw	low _tmpUsername
  5085  001FA2  6ED9               	movwf	fsr2l,c
  5086  001FA4  6ADA               	clrf	fsr2h,c
  5087  001FA6  C065  FFDF         	movff	UenviaChar@c,indf2
  5088  001FAA  0012               	return		;funcret
  5089  001FAC                     __end_of_UenviaChar:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _UcheckExistsNotFinished *****************
  5093 ;; Defined at:
  5094 ;;		line 42 in file "Usuaris.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;		None               void
  5101 ;; Registers used:
  5102 ;;		status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1
  5108 ;;      Params:         0       0       0
  5109 ;;      Locals:         0       0       0
  5110 ;;      Temps:          0       0       0
  5111 ;;      Totals:         0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 2
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_menu
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text31
  5123  000036                     __ptext31:
  5124                           	callstack 0
  5125  000036                     _UcheckExistsNotFinished:
  5126                           	callstack 27
  5127                           
  5128                           ;Usuaris.c: 43:     return do_check_exists;
  5129                           
  5130                           ;incstack = 0
  5131  000036  BE76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5132  000038  D002               	goto	l4549
  5133  00003A  90D8               	bcf	status,0,c
  5134  00003C  0012               	return	
  5135  00003E                     l4549:
  5136  00003E  80D8               	bsf	status,0,c
  5137  000040  0012               	return		;funcret
  5138  000042                     __end_of_UcheckExistsNotFinished:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _UcheckExistsGetError *****************
  5142 ;; Defined at:
  5143 ;;		line 45 in file "Usuaris.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      char 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1
  5157 ;;      Params:         0       0       0
  5158 ;;      Locals:         0       0       0
  5159 ;;      Temps:          0       0       0
  5160 ;;      Totals:         0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 2
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_menu
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text32
  5172  00013E                     __ptext32:
  5173                           	callstack 0
  5174  00013E                     _UcheckExistsGetError:
  5175                           	callstack 27
  5176                           
  5177                           ;Usuaris.c: 46:     return usuariLoguejat;
  5178                           
  5179                           ;incstack = 0
  5180  00013E  504F               	movf	_usuariLoguejat^0,w,c
  5181  000140  0012               	return		;funcret
  5182  000142                     __end_of_UcheckExistsGetError:
  5183                           	callstack 0
  5184                           
  5185 ;; *************** function _UcheckExists *****************
  5186 ;; Defined at:
  5187 ;;		line 39 in file "Usuaris.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		None
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1
  5201 ;;      Params:         0       0       0
  5202 ;;      Locals:         0       0       0
  5203 ;;      Temps:          0       0       0
  5204 ;;      Totals:         0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 2
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_menu
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text33
  5216  000142                     __ptext33:
  5217                           	callstack 0
  5218  000142                     _UcheckExists:
  5219                           	callstack 27
  5220                           
  5221                           ;Usuaris.c: 40:     do_check_exists = 1;
  5222                           
  5223                           ;incstack = 0
  5224  000142  8E76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5225  000144  0012               	return		;funcret
  5226  000146                     __end_of_UcheckExists:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _URegister *****************
  5230 ;; Defined at:
  5231 ;;		line 55 in file "Usuaris.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		None
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1
  5245 ;;      Params:         0       0       0
  5246 ;;      Locals:         0       0       0
  5247 ;;      Temps:          0       0       0
  5248 ;;      Totals:         0       0       0
  5249 ;;Total ram usage:        0 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 2
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_menu
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text34
  5260  000146                     __ptext34:
  5261                           	callstack 0
  5262  000146                     _URegister:
  5263                           	callstack 27
  5264                           
  5265                           ;Usuaris.c: 56:     do_register = 1;
  5266                           
  5267                           ;incstack = 0
  5268  000146  8C76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5269  000148  0012               	return		;funcret
  5270  00014A                     __end_of_URegister:
  5271                           	callstack 0
  5272                           
  5273 ;; *************** function _SiFerMenu *****************
  5274 ;; Defined at:
  5275 ;;		line 19 in file "GestioLCD.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		None
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1
  5289 ;;      Params:         0       0       0
  5290 ;;      Locals:         0       0       0
  5291 ;;      Temps:          0       0       0
  5292 ;;      Totals:         0       0       0
  5293 ;;Total ram usage:        0 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 2
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_menu
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text35
  5304  00014A                     __ptext35:
  5305                           	callstack 0
  5306  00014A                     _SiFerMenu:
  5307                           	callstack 27
  5308                           
  5309                           ;GestioLCD.c: 20:     ferMenu = one;
  5310                           
  5311                           ;incstack = 0
  5312  00014A  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5313  00014C  0012               	return		;funcret
  5314  00014E                     __end_of_SiFerMenu:
  5315                           	callstack 0
  5316                           
  5317 ;; *************** function _SMSon *****************
  5318 ;; Defined at:
  5319 ;;		line 128 in file "Ssms.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		None
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1
  5333 ;;      Params:         0       0       0
  5334 ;;      Locals:         0       0       0
  5335 ;;      Temps:          0       0       0
  5336 ;;      Totals:         0       0       0
  5337 ;;Total ram usage:        0 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 2
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_menu
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text36
  5348  00010C                     __ptext36:
  5349                           	callstack 0
  5350  00010C                     _SMSon:
  5351                           	callstack 27
  5352                           
  5353                           ;Ssms.c: 129:     setSMSon = 1;
  5354                           
  5355                           ;incstack = 0
  5356  00010C  8277               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5357                           
  5358                           ;Ssms.c: 130:     novaTecla = -1;
  5359  00010E  6854               	setf	_novaTecla^0,c
  5360  000110  0012               	return		;funcret
  5361  000112                     __end_of_SMSon:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _SMSoff *****************
  5365 ;; Defined at:
  5366 ;;		line 133 in file "Ssms.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		None
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1
  5380 ;;      Params:         0       0       0
  5381 ;;      Locals:         0       0       0
  5382 ;;      Temps:          0       0       0
  5383 ;;      Totals:         0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; Hardware stack levels required when called: 2
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_menu
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text37
  5395  000112                     __ptext37:
  5396                           	callstack 0
  5397  000112                     _SMSoff:
  5398                           	callstack 27
  5399                           
  5400                           ;Ssms.c: 134:     setSMSon = 0;
  5401                           
  5402                           ;incstack = 0
  5403  000112  9277               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5404                           
  5405                           ;Ssms.c: 135:     novaTecla = -1;
  5406  000114  6854               	setf	_novaTecla^0,c
  5407  000116  0012               	return		;funcret
  5408  000118                     __end_of_SMSoff:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5412 ;; Defined at:
  5413 ;;		line 44 in file "SIO.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      char 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1
  5427 ;;      Params:         0       0       0
  5428 ;;      Locals:         0       0       0
  5429 ;;      Temps:          0       0       0
  5430 ;;      Totals:         0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 2
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_menu
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text38
  5442  00014E                     __ptext38:
  5443                           	callstack 0
  5444  00014E                     _SIOHaAcabatPuntuacions:
  5445                           	callstack 27
  5446                           
  5447                           ;SIO.c: 45:     return usuariActualSIO;
  5448                           
  5449                           ;incstack = 0
  5450  00014E  504A               	movf	_usuariActualSIO^0,w,c
  5451  000150  0012               	return		;funcret
  5452  000152                     __end_of_SIOHaAcabatPuntuacions:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _NoFerMenu *****************
  5456 ;; Defined at:
  5457 ;;		line 22 in file "GestioLCD.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		None
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1
  5471 ;;      Params:         0       0       0
  5472 ;;      Locals:         0       0       0
  5473 ;;      Temps:          0       0       0
  5474 ;;      Totals:         0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 2
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_menu
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text39
  5486  000152                     __ptext39:
  5487                           	callstack 0
  5488  000152                     _NoFerMenu:
  5489                           	callstack 27
  5490                           
  5491                           ;GestioLCD.c: 23:     ferMenu = 0;
  5492                           
  5493                           ;incstack = 0
  5494  000152  9476               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5495  000154  0012               	return		;funcret
  5496  000156                     __end_of_NoFerMenu:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function _LcScroll *****************
  5500 ;; Defined at:
  5501 ;;		line 35 in file "LcTLCD.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1
  5515 ;;      Params:         0       0       0
  5516 ;;      Locals:         0       0       0
  5517 ;;      Temps:          0       0       0
  5518 ;;      Totals:         0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 4
  5522 ;; This function calls:
  5523 ;;		_CantaIR
  5524 ;; This function is called by:
  5525 ;;		_menu
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text40
  5530  000118                     __ptext40:
  5531                           	callstack 0
  5532  000118                     _LcScroll:
  5533                           	callstack 25
  5534                           
  5535                           ;incstack = 0
  5536  000118  0E18               	movlw	24
  5537  00011A  EF68  F00F         	goto	_CantaIR
  5538  00011E                     __end_of_LcScroll:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _JnovaTecla *****************
  5542 ;; Defined at:
  5543 ;;		line 16 in file "Joc.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  tecla           1    wreg     char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  tecla           1    5[COMRAM] char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1
  5557 ;;      Params:         0       0       0
  5558 ;;      Locals:         1       0       0
  5559 ;;      Temps:          0       0       0
  5560 ;;      Totals:         1       0       0
  5561 ;;Total ram usage:        1 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 2
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_menu
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text41
  5572  000094                     __ptext41:
  5573                           	callstack 0
  5574  000094                     _JnovaTecla:
  5575                           	callstack 27
  5576                           
  5577                           ;incstack = 0
  5578                           ;JnovaTecla@tecla stored from wreg
  5579  000094  6E64               	movwf	JnovaTecla@tecla^0,c
  5580                           
  5581                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5582  000096  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5583  00009A  0012               	return		;funcret
  5584  00009C                     __end_of_JnovaTecla:
  5585                           	callstack 0
  5586                           
  5587 ;; *************** function _JnovaDireccio *****************
  5588 ;; Defined at:
  5589 ;;		line 19 in file "Joc.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  dir             1    wreg     unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  dir             1    5[COMRAM] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1
  5603 ;;      Params:         0       0       0
  5604 ;;      Locals:         1       0       0
  5605 ;;      Temps:          0       0       0
  5606 ;;      Totals:         1       0       0
  5607 ;;Total ram usage:        1 bytes
  5608 ;; Hardware stack levels used: 1
  5609 ;; Hardware stack levels required when called: 2
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_menu
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text42
  5618  00009C                     __ptext42:
  5619                           	callstack 0
  5620  00009C                     _JnovaDireccio:
  5621                           	callstack 27
  5622                           
  5623                           ;incstack = 0
  5624                           ;JnovaDireccio@dir stored from wreg
  5625  00009C  6E64               	movwf	JnovaDireccio@dir^0,c
  5626                           
  5627                           ;Joc.c: 20:     direccioJoc = dir;
  5628  00009E  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5629  0000A2  0012               	return		;funcret
  5630  0000A4                     __end_of_JnovaDireccio:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _JendGame *****************
  5634 ;; Defined at:
  5635 ;;		line 23 in file "Joc.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		None
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1
  5649 ;;      Params:         0       0       0
  5650 ;;      Locals:         0       0       0
  5651 ;;      Temps:          0       0       0
  5652 ;;      Totals:         0       0       0
  5653 ;;Total ram usage:        0 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 2
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_menu
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text43
  5664  000156                     __ptext43:
  5665                           	callstack 0
  5666  000156                     _JendGame:
  5667                           	callstack 27
  5668                           
  5669                           ;Joc.c: 24:     jugantJoc = 0;
  5670                           
  5671                           ;incstack = 0
  5672  000156  9675               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5673  000158  0012               	return		;funcret
  5674  00015A                     __end_of_JendGame:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _JJuguem *****************
  5678 ;; Defined at:
  5679 ;;		line 13 in file "Joc.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  usuari          1    wreg     unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  usuari          1    5[COMRAM] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1
  5693 ;;      Params:         0       0       0
  5694 ;;      Locals:         1       0       0
  5695 ;;      Temps:          0       0       0
  5696 ;;      Totals:         1       0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 2
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_menu
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text44
  5708  0000A4                     __ptext44:
  5709                           	callstack 0
  5710  0000A4                     _JJuguem:
  5711                           	callstack 27
  5712                           
  5713                           ;incstack = 0
  5714                           ;JJuguem@usuari stored from wreg
  5715  0000A4  6E64               	movwf	JJuguem@usuari^0,c
  5716                           
  5717                           ;Joc.c: 14:     usuariJoc = usuari;
  5718  0000A6  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5719  0000AA  0012               	return		;funcret
  5720  0000AC                     __end_of_JJuguem:
  5721                           	callstack 0
  5722                           
  5723 ;; *************** function _HActualitzaHora *****************
  5724 ;; Defined at:
  5725 ;;		line 18 in file "Hora.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5728 ;;		 -> horaTmp(4), 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1
  5740 ;;      Params:         1       0       0
  5741 ;;      Locals:         0       0       0
  5742 ;;      Temps:          0       0       0
  5743 ;;      Totals:         1       0       0
  5744 ;;Total ram usage:        1 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 2
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_menu
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text45
  5755  001E28                     __ptext45:
  5756                           	callstack 0
  5757  001E28                     _HActualitzaHora:
  5758                           	callstack 27
  5759                           
  5760                           ;Hora.c: 19:     hora[0] = nova[0];
  5761                           
  5762                           ;incstack = 0
  5763  001E28  5064               	movf	HActualitzaHora@nova^0,w,c
  5764  001E2A  6ED9               	movwf	fsr2l,c
  5765  001E2C  6ADA               	clrf	fsr2h,c
  5766  001E2E  50DF               	movf	indf2,w,c
  5767  001E30  6E56               	movwf	_hora^0,c
  5768                           
  5769                           ;Hora.c: 20:     hora[1] = nova[1];
  5770  001E32  5064               	movf	HActualitzaHora@nova^0,w,c
  5771  001E34  EC5B  F006         	call	PL78	;call to abstracted procedure
  5772  001E38  6E57               	movwf	(_hora+1)^0,c
  5773                           
  5774                           ;Hora.c: 21:     hora[3] = nova[2];
  5775  001E3A  5064               	movf	HActualitzaHora@nova^0,w,c
  5776  001E3C  EC4A  F006         	call	PL50	;call to abstracted procedure
  5777  001E40  6E59               	movwf	(_hora+3)^0,c
  5778                           
  5779                           ;Hora.c: 22:     hora[4] = nova[3];
  5780  001E42  5064               	movf	HActualitzaHora@nova^0,w,c
  5781  001E44  EC50  F006         	call	PL52	;call to abstracted procedure
  5782  001E48  6E5A               	movwf	(_hora+4)^0,c
  5783  001E4A  0012               	return		;funcret
  5784  001E4C                     __end_of_HActualitzaHora:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _GLCDMostraMenu *****************
  5788 ;; Defined at:
  5789 ;;		line 30 in file "GestioLCD.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  num             1    wreg     unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  num             1    5[COMRAM] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1
  5803 ;;      Params:         0       0       0
  5804 ;;      Locals:         1       0       0
  5805 ;;      Temps:          0       0       0
  5806 ;;      Totals:         1       0       0
  5807 ;;Total ram usage:        1 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 2
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_menu
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text46
  5818  000042                     __ptext46:
  5819                           	callstack 0
  5820  000042                     _GLCDMostraMenu:
  5821                           	callstack 27
  5822                           
  5823                           ;incstack = 0
  5824                           ;GLCDMostraMenu@num stored from wreg
  5825  000042  6E64               	movwf	GLCDMostraMenu@num^0,c
  5826                           
  5827                           ;GestioLCD.c: 31:     newString = one;
  5828  000044  8276               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5829                           
  5830                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5831  000046  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5832                           
  5833                           ;GestioLCD.c: 33:     ferMenu = one;
  5834  00004A  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5835  00004C  0012               	return		;funcret
  5836  00004E                     __end_of_GLCDMostraMenu:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _CToAobtenir *****************
  5840 ;; Defined at:
  5841 ;;		line 7 in file "CtoA.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      PTR unsigned char 
  5848 ;; Registers used:
  5849 ;;		wreg
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1
  5855 ;;      Params:         2       0       0
  5856 ;;      Locals:         0       0       0
  5857 ;;      Temps:          0       0       0
  5858 ;;      Totals:         2       0       0
  5859 ;;Total ram usage:        2 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_menu
  5866 ;;		_motorSIO
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text47
  5871  00015A                     __ptext47:
  5872                           	callstack 0
  5873  00015A                     _CToAobtenir:
  5874                           	callstack 27
  5875                           
  5876                           ;CtoA.c: 8:     return stringScore;
  5877                           
  5878                           ;incstack = 0
  5879  00015A  0E5C               	movlw	_stringScore& (0+255)
  5880  00015C  0012               	return		;funcret
  5881  00015E                     __end_of_CToAobtenir:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _CToAHaAcabat *****************
  5885 ;; Defined at:
  5886 ;;		line 10 in file "CtoA.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      unsigned char 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1
  5900 ;;      Params:         0       0       0
  5901 ;;      Locals:         0       0       0
  5902 ;;      Temps:          0       0       0
  5903 ;;      Totals:         0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 2
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_menu
  5911 ;;		_motorSIO
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text48
  5916  00015E                     __ptext48:
  5917                           	callstack 0
  5918  00015E                     _CToAHaAcabat:
  5919                           	callstack 27
  5920                           
  5921                           ;CtoA.c: 11:     return convertir;
  5922                           
  5923                           ;incstack = 0
  5924  00015E  5047               	movf	_convertir^0,w,c
  5925  000160  0012               	return		;funcret
  5926  000162                     __end_of_CToAHaAcabat:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _CToAConverteix *****************
  5930 ;; Defined at:
  5931 ;;		line 14 in file "CtoA.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  numero          1    wreg     unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  numero          1    5[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1
  5945 ;;      Params:         0       0       0
  5946 ;;      Locals:         1       0       0
  5947 ;;      Temps:          0       0       0
  5948 ;;      Totals:         1       0       0
  5949 ;;Total ram usage:        1 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 3
  5952 ;; This function calls:
  5953 ;;		_CToAReset
  5954 ;; This function is called by:
  5955 ;;		_menu
  5956 ;;		_motorSIO
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text49
  5961  00004E                     __ptext49:
  5962                           	callstack 0
  5963  00004E                     _CToAConverteix:
  5964                           	callstack 26
  5965                           
  5966                           ;incstack = 0
  5967                           ;CToAConverteix@numero stored from wreg
  5968  00004E  6E64               	movwf	CToAConverteix@numero^0,c
  5969                           
  5970                           ;CtoA.c: 15:     CToAReset();
  5971  000050  EC56  F000         	call	_CToAReset	;wreg free
  5972                           
  5973                           ;CtoA.c: 16:     convertir = numero;
  5974  000054  C064  F047         	movff	CToAConverteix@numero,_convertir
  5975  000058  0012               	return		;funcret
  5976  00005A                     __end_of_CToAConverteix:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function _CToAReset *****************
  5980 ;; Defined at:
  5981 ;;		line 18 in file "CtoA.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1
  5995 ;;      Params:         0       0       0
  5996 ;;      Locals:         0       0       0
  5997 ;;      Temps:          0       0       0
  5998 ;;      Totals:         0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_CToAConverteix
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text50
  6010  0000AC                     __ptext50:
  6011                           	callstack 0
  6012  0000AC                     _CToAReset:
  6013                           	callstack 26
  6014                           
  6015                           ;CtoA.c: 19:     stringScore[0] = '0';
  6016                           
  6017                           ;incstack = 0
  6018  0000AC  0E30               	movlw	48
  6019  0000AE  6E5C               	movwf	_stringScore^0,c
  6020                           
  6021                           ;CtoA.c: 20:     stringScore[1] = '0';
  6022  0000B0  6E5D               	movwf	(_stringScore+1)^0,c
  6023  0000B2  0C30               	retlw	48	;funcret
  6024  0000B4                     __end_of_CToAReset:
  6025                           	callstack 0
  6026                           
  6027 ;; *************** function _init_ports *****************
  6028 ;; Defined at:
  6029 ;;		line 24 in file "main.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		wreg, status,2
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1
  6043 ;;      Params:         0       0       0
  6044 ;;      Locals:         0       0       0
  6045 ;;      Temps:          0       0       0
  6046 ;;      Totals:         0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used: 1
  6049 ;; Hardware stack levels required when called: 2
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text51
  6058  001F22                     __ptext51:
  6059                           	callstack 0
  6060  001F22                     _init_ports:
  6061                           	callstack 28
  6062                           
  6063                           ;incstack = 0
  6064  001F22  0E03               	movlw	3
  6065  001F24  6E92               	movwf	146,c	;volatile
  6066  001F26  0EE0               	movlw	224
  6067  001F28  6E93               	movwf	147,c	;volatile
  6068  001F2A  828A               	bsf	138,1,c	;volatile
  6069                           
  6070                           ;main.c: 48:     TRISC = 0xC0;
  6071  001F2C  0EC0               	movlw	192
  6072  001F2E  6E94               	movwf	148,c	;volatile
  6073                           
  6074                           ;main.c: 58:     TRISD = 0x8F;
  6075  001F30  0E8F               	movlw	143
  6076  001F32  6E95               	movwf	149,c	;volatile
  6077                           
  6078                           ;main.c: 59:     LATD = 0x00;
  6079  001F34  6A8C               	clrf	140,c	;volatile
  6080                           
  6081                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6082  001F36  8EA6               	bsf	166,7,c	;volsfr
  6083                           
  6084                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6085  001F38  9CA6               	bcf	166,6,c	;volsfr
  6086  001F3A  0012               	return		;funcret
  6087  001F3C                     __end_of_init_ports:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _init_eusart *****************
  6091 ;; Defined at:
  6092 ;;		line 66 in file "main.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1
  6106 ;;      Params:         0       0       0
  6107 ;;      Locals:         0       0       0
  6108 ;;      Temps:          0       0       0
  6109 ;;      Totals:         0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 2
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_main
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text52
  6121  001F3C                     __ptext52:
  6122                           	callstack 0
  6123  001F3C                     _init_eusart:
  6124                           	callstack 28
  6125                           
  6126                           ;main.c: 67:     TXSTA = 0x24;
  6127                           
  6128                           ;incstack = 0
  6129  001F3C  0E24               	movlw	36
  6130  001F3E  6EAC               	movwf	172,c	;volatile
  6131                           
  6132                           ;main.c: 68:     RCSTA = 0x90;
  6133  001F40  0E90               	movlw	144
  6134  001F42  6EAB               	movwf	171,c	;volatile
  6135                           
  6136                           ;main.c: 69:     BAUDCON = 0x08;
  6137  001F44  0E08               	movlw	8
  6138  001F46  6EB8               	movwf	184,c	;volatile
  6139                           
  6140                           ;main.c: 70:     SPBRGH = 0x04;
  6141  001F48  0E04               	movlw	4
  6142  001F4A  6EB0               	movwf	176,c	;volatile
  6143                           
  6144                           ;main.c: 71:     SPBRG = 0x10;
  6145  001F4C  0E10               	movlw	16
  6146  001F4E  6EAF               	movwf	175,c	;volatile
  6147  001F50  0C10               	retlw	16	;funcret
  6148  001F52                     __end_of_init_eusart:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _initSIO *****************
  6152 ;; Defined at:
  6153 ;;		line 24 in file "SIO.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1
  6167 ;;      Params:         0       0       0
  6168 ;;      Locals:         0       0       0
  6169 ;;      Temps:          0       0       0
  6170 ;;      Totals:         0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; Hardware stack levels required when called: 3
  6174 ;; This function calls:
  6175 ;;		_TiGetTimer
  6176 ;; This function is called by:
  6177 ;;		_main
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text53
  6182  0000B4                     __ptext53:
  6183                           	callstack 0
  6184  0000B4                     _initSIO:
  6185                           	callstack 27
  6186                           
  6187                           ;SIO.c: 25:     timerSIO = TiGetTimer();
  6188                           
  6189                           ;incstack = 0
  6190  0000B4  EC8C  F00E         	call	_TiGetTimer	;wreg free
  6191  0000B8  6E11               	movwf	_timerSIO^0,c
  6192  0000BA  0012               	return		;funcret
  6193  0000BC                     __end_of_initSIO:
  6194                           	callstack 0
  6195                           
  6196 ;; *************** function _initHora *****************
  6197 ;; Defined at:
  6198 ;;		line 14 in file "Hora.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1
  6212 ;;      Params:         0       0       0
  6213 ;;      Locals:         0       0       0
  6214 ;;      Temps:          0       0       0
  6215 ;;      Totals:         0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; Hardware stack levels required when called: 3
  6219 ;; This function calls:
  6220 ;;		_TiGetTimer
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text54
  6227  0000BC                     __ptext54:
  6228                           	callstack 0
  6229  0000BC                     _initHora:
  6230                           	callstack 27
  6231                           
  6232                           ;Hora.c: 15:     timerHora = TiGetTimer();
  6233                           
  6234                           ;incstack = 0
  6235  0000BC  EC8C  F00E         	call	_TiGetTimer	;wreg free
  6236  0000C0  6E16               	movwf	_timerHora^0,c
  6237  0000C2  0012               	return		;funcret
  6238  0000C4                     __end_of_initHora:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _initAltaveu *****************
  6242 ;; Defined at:
  6243 ;;		line 10 in file "Altaveu.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1
  6257 ;;      Params:         0       0       0
  6258 ;;      Locals:         0       0       0
  6259 ;;      Temps:          0       0       0
  6260 ;;      Totals:         0       0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; Hardware stack levels required when called: 3
  6264 ;; This function calls:
  6265 ;;		_TiGetTimer
  6266 ;; This function is called by:
  6267 ;;		_main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text55
  6272  0000C4                     __ptext55:
  6273                           	callstack 0
  6274  0000C4                     _initAltaveu:
  6275                           	callstack 27
  6276                           
  6277                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6278                           
  6279                           ;incstack = 0
  6280  0000C4  EC8C  F00E         	call	_TiGetTimer	;wreg free
  6281  0000C8  6E25               	movwf	_timerAltaveu^0,c
  6282  0000CA  0012               	return		;funcret
  6283  0000CC                     __end_of_initAltaveu:
  6284                           	callstack 0
  6285                           
  6286 ;; *************** function _UmotorUsers *****************
  6287 ;; Defined at:
  6288 ;;		line 143 in file "Usuaris.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1
  6302 ;;      Params:         0       0       0
  6303 ;;      Locals:         0       0       0
  6304 ;;      Temps:          4       0       0
  6305 ;;      Totals:         4       0       0
  6306 ;;Total ram usage:        4 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 3
  6309 ;; This function calls:
  6310 ;;		_compareStrings
  6311 ;;		_escriureCharEEPROM
  6312 ;; This function is called by:
  6313 ;;		_main
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text56
  6318  000CC0                     __ptext56:
  6319                           	callstack 0
  6320  000CC0                     _UmotorUsers:
  6321                           	callstack 27
  6322                           
  6323                           ;Usuaris.c: 144:     static char state = 0;;Usuaris.c: 146:  switch(state) {
  6324                           
  6325                           ;incstack = 0
  6326  000CC0  D11F               	goto	l6109
  6327  000CC2                     l796:
  6328                           
  6329                           ;Usuaris.c: 148:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6330  000CC2  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6331  000CC4  BC76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6332  000CC6  D006               	goto	l797
  6333  000CC8  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6334  000CCA  B876               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6335  000CCC  D003               	goto	l797
  6336                           
  6337                           ;Usuaris.c: 149:     i = zero;
  6338  000CCE  6A2A               	clrf	_i^0,c
  6339                           
  6340                           ;Usuaris.c: 150:     j = zero;
  6341  000CD0  6A29               	clrf	_j^0,c
  6342                           
  6343                           ;Usuaris.c: 151:    }
  6344  000CD2  0012               	return	
  6345  000CD4                     l797:
  6346  000CD4  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6347  000CD6  D003               	goto	l799
  6348                           
  6349                           ;Usuaris.c: 153:     usuariLoguejat = neg;
  6350  000CD8  684F               	setf	_usuariLoguejat^0,c
  6351  000CDA                     l5947:
  6352                           
  6353                           ;Usuaris.c: 154:     state++;
  6354  000CDA  2A27               	incf	UmotorUsers@state^0,f,c
  6355                           
  6356                           ;Usuaris.c: 155:    }
  6357  000CDC  0012               	return	
  6358  000CDE                     l799:
  6359  000CDE  AC76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6360  000CE0  D003               	goto	l801
  6361                           
  6362                           ;Usuaris.c: 158:     state = 2;
  6363  000CE2  0E02               	movlw	2
  6364  000CE4  6E27               	movwf	UmotorUsers@state^0,c
  6365                           
  6366                           ;Usuaris.c: 159:    }
  6367  000CE6  0C02               	retlw	2
  6368  000CE8                     l801:
  6369  000CE8  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6370  000CEA  D016               	goto	l803
  6371                           
  6372                           ;Usuaris.c: 161:     arrayShowUsers[0] = usuariLoguejat;
  6373  000CEC  C04F  F0A2         	movff	_usuariLoguejat,_arrayShowUsers
  6374                           
  6375                           ;Usuaris.c: 162:     arrayShowUsers[1] = neg;
  6376  000CF0  0100               	movlb	0	; () banked
  6377  000CF2  69A3               	setf	(_arrayShowUsers+1)& (0+255),b
  6378                           
  6379                           ;Usuaris.c: 163:     arrayShowUsers[2] = neg;
  6380  000CF4  69A4               	setf	(_arrayShowUsers+2)& (0+255),b
  6381                           
  6382                           ;Usuaris.c: 164:     arrayShowUsers[3] = neg;
  6383  000CF6  69A5               	setf	(_arrayShowUsers+3)& (0+255),b
  6384                           
  6385                           ;Usuaris.c: 165:     arrayShowUsers[4] = neg;
  6386  000CF8  69A6               	setf	(_arrayShowUsers+4)& (0+255),b
  6387                           
  6388                           ;Usuaris.c: 166:     arrayShowUsers[5] = neg;
  6389  000CFA  69A7               	setf	(_arrayShowUsers+5)& (0+255),b
  6390                           
  6391                           ;Usuaris.c: 167:     arrayShowUsers[6] = neg;
  6392  000CFC  69A8               	setf	(_arrayShowUsers+6)& (0+255),b
  6393                           
  6394                           ;Usuaris.c: 168:     arrayShowUsers[7] = neg;
  6395  000CFE  69A9               	setf	(_arrayShowUsers+7)& (0+255),b
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;Usuaris.c: 169:     i = 1;
  6399  000D00  0E01               	movlw	1
  6400  000D02  6E2A               	movwf	_i^0,c
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;Usuaris.c: 170:     if(numUsuaris < 7) {
  6404  000D04  0E07               	movlw	7
  6405  000D06  602D               	cpfslt	_numUsuaris^0,c
  6406  000D08  D002               	goto	l804
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;Usuaris.c: 171:       j = 0;
  6410  000D0A  6A29               	clrf	_j^0,c
  6411                           
  6412                           ;Usuaris.c: 172:     }
  6413  000D0C  D002               	goto	l5959
  6414  000D0E                     l804:
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;Usuaris.c: 174:       j = indexNextUserStruct;
  6418  000D0E  C02B  F029         	movff	_indexNextUserStruct,_j
  6419  000D12                     l5959:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;Usuaris.c: 176:     state = 5;
  6423  000D12  0E05               	movlw	5
  6424  000D14  6E27               	movwf	UmotorUsers@state^0,c
  6425                           
  6426                           ;Usuaris.c: 177:    }
  6427  000D16  0C05               	retlw	5
  6428  000D18                     l803:
  6429  000D18  A876               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6430  000D1A  0012               	return	
  6431                           
  6432                           ;Usuaris.c: 179:     do_updateScore = zero;
  6433  000D1C  9876               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6434                           
  6435                           ;Usuaris.c: 180:     state = 6;
  6436  000D1E  0E06               	movlw	6
  6437  000D20  6E27               	movwf	UmotorUsers@state^0,c
  6438  000D22  0C06               	retlw	6
  6439  000D24                     l5965:
  6440                           
  6441                           ;Usuaris.c: 184:    if (i < numUsuaris) {
  6442  000D24  502D               	movf	_numUsuaris^0,w,c
  6443  000D26  5C2A               	subwf	_i^0,w,c
  6444  000D28  E212               	bc	l810
  6445                           
  6446                           ;Usuaris.c: 185:     if(compareStrings(tmpUsername, usuaris[i].username) == zero){
  6447  000D2A  0EB3               	movlw	low _tmpUsername
  6448  000D2C  6E64               	movwf	compareStrings@a^0,c
  6449  000D2E  502A               	movf	_i^0,w,c
  6450  000D30  0D12               	mullw	18
  6451  000D32  0E00               	movlw	low _usuaris
  6452  000D34  24F3               	addwf	243,w,c
  6453  000D36  6E65               	movwf	compareStrings@b^0,c
  6454  000D38  0E01               	movlw	high _usuaris
  6455  000D3A  20F4               	addwfc	prodh,w,c
  6456  000D3C  6E66               	movwf	(compareStrings@b+1)^0,c
  6457  000D3E  ECFE  F00D         	call	_compareStrings	;wreg free
  6458  000D42  0900               	iorlw	0
  6459  000D44  E102               	bnz	l5971
  6460                           
  6461                           ;Usuaris.c: 186:      usuariLoguejat = i;
  6462  000D46  C02A  F04F         	movff	_i,_usuariLoguejat
  6463  000D4A                     l5971:
  6464                           
  6465                           ;Usuaris.c: 189:     i++;
  6466  000D4A  2A2A               	incf	_i^0,f,c
  6467                           
  6468                           ;Usuaris.c: 190:    }
  6469  000D4C  0012               	return	
  6470  000D4E                     l810:
  6471                           
  6472                           ;Usuaris.c: 192:     do_check_exists = zero;
  6473  000D4E  9E76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6474  000D50                     l5973:
  6475                           
  6476                           ;Usuaris.c: 193:     state--;
  6477  000D50  0627               	decf	UmotorUsers@state^0,f,c
  6478  000D52  0012               	return	
  6479  000D54                     l5975:
  6480                           
  6481                           ;Usuaris.c: 197:    if (i < 9) {
  6482  000D54  0E09               	movlw	9
  6483  000D56  602A               	cpfslt	_i^0,c
  6484  000D58  D00C               	goto	l814
  6485                           
  6486                           ;Usuaris.c: 198:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6487  000D5A  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6488  000D5E  502A               	movf	_i^0,w,c
  6489  000D60  0FB3               	addlw	low _tmpUsername
  6490  000D62  D904               	call	PL46	;call to abstracted procedure
  6491  000D64  ECCA  F00E         	call	_escriureCharEEPROM
  6492                           
  6493                           ;Usuaris.c: 199:     indexNextUser++;
  6494  000D68  2A2C               	incf	_indexNextUser^0,f,c
  6495                           
  6496                           ;Usuaris.c: 200:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6497  000D6A  502A               	movf	_i^0,w,c
  6498  000D6C  0FB3               	addlw	low _tmpUsername
  6499  000D6E  D8F5               	call	PL22	;call to abstracted procedure
  6500  000D70  D014               	goto	L2
  6501  000D72                     l814:
  6502                           
  6503                           ;Usuaris.c: 204:     i = 0;
  6504  000D72  6A2A               	clrf	_i^0,c
  6505  000D74  D7B2               	goto	l5947
  6506  000D76                     l5987:
  6507                           
  6508                           ;Usuaris.c: 209:    if (i < 9) {
  6509  000D76  0E09               	movlw	9
  6510  000D78  602A               	cpfslt	_i^0,c
  6511  000D7A  D01C               	goto	l817
  6512                           
  6513                           ;Usuaris.c: 210:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6514  000D7C  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6515  000D80  502A               	movf	_i^0,w,c
  6516  000D82  0FAA               	addlw	low _tmpPassword
  6517  000D84  D8F3               	call	PL46	;call to abstracted procedure
  6518  000D86  ECCA  F00E         	call	_escriureCharEEPROM
  6519                           
  6520                           ;Usuaris.c: 211:     indexNextUser++;
  6521  000D8A  2A2C               	incf	_indexNextUser^0,f,c
  6522                           
  6523                           ;Usuaris.c: 212:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6524  000D8C  502A               	movf	_i^0,w,c
  6525  000D8E  0FAA               	addlw	low _tmpPassword
  6526  000D90  D8E4               	call	PL22	;call to abstracted procedure
  6527  000D92  0E09               	movlw	9
  6528  000D94  2669               	addwf	??_UmotorUsers^0,f,c
  6529  000D96  0E00               	movlw	0
  6530  000D98  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6531  000D9A                     L2:
  6532  000D9A  50F3               	movf	243,w,c
  6533  000D9C  2669               	addwf	??_UmotorUsers^0,f,c
  6534  000D9E  50F4               	movf	244,w,c
  6535  000DA0  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6536  000DA2  502A               	movf	_i^0,w,c
  6537  000DA4  2469               	addwf	??_UmotorUsers^0,w,c
  6538  000DA6  6EE1               	movwf	fsr1l,c
  6539  000DA8  0E00               	movlw	0
  6540  000DAA  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  6541  000DAC  6EE2               	movwf	fsr1h,c
  6542  000DAE  CFDF FFE7          	movff	indf2,indf1
  6543  000DB2  D7CB               	goto	l5971
  6544  000DB4                     l817:
  6545                           
  6546                           ;Usuaris.c: 216:     do_register = zero;
  6547  000DB4  9C76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6548                           
  6549                           ;Usuaris.c: 217:     if(indexNextUser > 140) indexNextUser = 2;
  6550  000DB6  0E8C               	movlw	140
  6551  000DB8  642C               	cpfsgt	_indexNextUser^0,c
  6552  000DBA  D002               	goto	l6001
  6553  000DBC  0E02               	movlw	2
  6554  000DBE  6E2C               	movwf	_indexNextUser^0,c
  6555  000DC0                     l6001:
  6556                           
  6557                           ;Usuaris.c: 218:     indexNextUserStruct++;
  6558  000DC0  2A2B               	incf	_indexNextUserStruct^0,f,c
  6559                           
  6560                           ;Usuaris.c: 219:     if(indexNextUserStruct == 8) indexNextUserStruct = zero;
  6561  000DC2  0E08               	movlw	8
  6562  000DC4  182B               	xorwf	_indexNextUserStruct^0,w,c
  6563  000DC6  E101               	bnz	l6007
  6564  000DC8  6A2B               	clrf	_indexNextUserStruct^0,c
  6565  000DCA                     l6007:
  6566                           
  6567                           ;Usuaris.c: 220:     escriureCharEEPROM(indexNextUser,1);
  6568  000DCA  0E01               	movlw	1
  6569  000DCC  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6570  000DCE  502C               	movf	_indexNextUser^0,w,c
  6571  000DD0  ECCA  F00E         	call	_escriureCharEEPROM
  6572                           
  6573                           ;Usuaris.c: 221:     state = 9;
  6574  000DD4  0E09               	movlw	9
  6575  000DD6  6E27               	movwf	UmotorUsers@state^0,c
  6576                           
  6577                           ;Usuaris.c: 222:                 i = 0;
  6578  000DD8  6A2A               	clrf	_i^0,c
  6579  000DDA  0012               	return	
  6580  000DDC                     l6013:
  6581                           
  6582                           ;Usuaris.c: 227:    if (i < numUsuaris) {
  6583  000DDC  502D               	movf	_numUsuaris^0,w,c
  6584  000DDE  5C2A               	subwf	_i^0,w,c
  6585  000DE0  E216               	bc	l6029
  6586                           
  6587                           ;Usuaris.c: 228:     if(j != usuariLoguejat){
  6588  000DE2  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6589  000DE6  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6590  000DE8  BE69               	btfsc	??_UmotorUsers^0,7,c
  6591  000DEA  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6592  000DEC  5029               	movf	_j^0,w,c
  6593  000DEE  1869               	xorwf	??_UmotorUsers^0,w,c
  6594  000DF0  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6595  000DF2  E007               	bz	l6021
  6596                           
  6597                           ;Usuaris.c: 229:       arrayShowUsers[i] = j;
  6598  000DF4  502A               	movf	_i^0,w,c
  6599  000DF6  0FA2               	addlw	low _arrayShowUsers
  6600  000DF8  6ED9               	movwf	fsr2l,c
  6601  000DFA  6ADA               	clrf	fsr2h,c
  6602  000DFC  C029  FFDF         	movff	_j,indf2
  6603                           
  6604                           ;Usuaris.c: 230:      i++;
  6605  000E00  2A2A               	incf	_i^0,f,c
  6606  000E02                     l6021:
  6607                           
  6608                           ;Usuaris.c: 231:                     j++;
  6609  000E02  2A29               	incf	_j^0,f,c
  6610                           
  6611                           ;Usuaris.c: 236:     if(j > 7) j=zero;
  6612                           
  6613                           ;Usuaris.c: 232:     }else{
  6614  000E04  0E07               	movlw	7
  6615  000E06  6429               	cpfsgt	_j^0,c
  6616  000E08  0C07               	retlw	7
  6617  000E0A  6A29               	clrf	_j^0,c
  6618  000E0C  0012               	return	
  6619  000E0E                     l6029:
  6620  000E0E  502D               	movf	_numUsuaris^0,w,c
  6621  000E10  182A               	xorwf	_i^0,w,c
  6622  000E12  A4D8               	btfss	status,2,c
  6623  000E14  0012               	return	
  6624                           
  6625                           ;Usuaris.c: 239:     do_showUsers = zero;
  6626  000E16  9A76               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6627                           
  6628                           ;Usuaris.c: 240:     state = zero;
  6629  000E18  6A27               	clrf	UmotorUsers@state^0,c
  6630  000E1A  0012               	return	
  6631  000E1C                     l6033:
  6632                           
  6633                           ;Usuaris.c: 244:    if (i < 5 && puntuacions[i].indexStruct != neg) {
  6634  000E1C  0E05               	movlw	5
  6635  000E1E  602A               	cpfslt	_i^0,c
  6636  000E20  D003               	goto	l6039
  6637  000E22  D88D               	call	PL8	;call to abstracted procedure
  6638  000E24  28DE               	incf	postinc2,w,c
  6639  000E26  E191               	bnz	l5971
  6640  000E28                     l6039:
  6641  000E28  0E05               	movlw	5
  6642  000E2A  602A               	cpfslt	_i^0,c
  6643  000E2C  D004               	goto	l6045
  6644  000E2E  D887               	call	PL8	;call to abstracted procedure
  6645  000E30  28DE               	incf	postinc2,w,c
  6646  000E32  E101 D752          	bz	l5947
  6647  000E36                     l6045:
  6648  000E36  0E04               	movlw	4
  6649  000E38  642A               	cpfsgt	_i^0,c
  6650  000E3A  0C04               	retlw	4
  6651                           
  6652                           ;Usuaris.c: 251:     i = zero;
  6653  000E3C  6A2A               	clrf	_i^0,c
  6654                           
  6655                           ;Usuaris.c: 252:     state = 8;
  6656  000E3E  0E08               	movlw	8
  6657  000E40  6E27               	movwf	UmotorUsers@state^0,c
  6658  000E42  0C08               	retlw	8
  6659  000E44                     l6051:
  6660                           
  6661                           ;Usuaris.c: 256:    puntuacions[i].score = scoreUsr;
  6662  000E44  D883               	call	PL16	;call to abstracted procedure
  6663  000E46  C028  FFDF         	movff	_scoreUsr,indf2
  6664                           
  6665                           ;Usuaris.c: 257:    puntuacions[i].indexStruct = usuariLoguejat;
  6666  000E4A  D879               	call	PL8	;call to abstracted procedure
  6667  000E4C  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6668                           
  6669                           ;Usuaris.c: 258:    i = i+i;
  6670  000E50  0E02               	movlw	2
  6671  000E52  022A               	mulwf	_i^0,c
  6672  000E54  50F3               	movf	prodl,w,c
  6673  000E56  6E2A               	movwf	_i^0,c
  6674                           
  6675                           ;Usuaris.c: 259:    escriureCharEEPROM(usuariLoguejat,200+i);
  6676  000E58  502A               	movf	_i^0,w,c
  6677  000E5A  0FC8               	addlw	200
  6678  000E5C  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6679  000E5E  504F               	movf	_usuariLoguejat^0,w,c
  6680  000E60  ECCA  F00E         	call	_escriureCharEEPROM
  6681                           
  6682                           ;Usuaris.c: 260:    i++;
  6683  000E64  2A2A               	incf	_i^0,f,c
  6684                           
  6685                           ;Usuaris.c: 261:    escriureCharEEPROM(scoreUsr,200+i);
  6686  000E66  502A               	movf	_i^0,w,c
  6687  000E68  0FC8               	addlw	200
  6688  000E6A  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6689  000E6C  5028               	movf	_scoreUsr^0,w,c
  6690  000E6E  ECCA  F00E         	call	_escriureCharEEPROM
  6691  000E72                     l6061:
  6692                           
  6693                           ;Usuaris.c: 262:    state = zero;
  6694  000E72  6A27               	clrf	UmotorUsers@state^0,c
  6695                           
  6696                           ;Usuaris.c: 263:   break;
  6697  000E74  0012               	return	
  6698  000E76                     l6063:
  6699                           
  6700                           ;Usuaris.c: 265:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6701  000E76  D86A               	call	PL16	;call to abstracted procedure
  6702  000E78  5028               	movf	_scoreUsr^0,w,c
  6703  000E7A  5CDE               	subwf	postinc2,w,c
  6704  000E7C  E304               	bnc	l6069
  6705  000E7E  0E05               	movlw	5
  6706  000E80  602A               	cpfslt	_i^0,c
  6707  000E82  D001               	goto	l6069
  6708  000E84  D762               	goto	l5971
  6709  000E86                     l6069:
  6710  000E86  0E04               	movlw	4
  6711  000E88  642A               	cpfsgt	_i^0,c
  6712  000E8A  D001               	goto	l6073
  6713  000E8C  D7F2               	goto	l6061
  6714  000E8E                     l6073:
  6715  000E8E  D85E               	call	PL16	;call to abstracted procedure
  6716  000E90  5028               	movf	_scoreUsr^0,w,c
  6717  000E92  5CDE               	subwf	postinc2,w,c
  6718  000E94  B0D8               	btfsc	status,0,c
  6719  000E96  0012               	return	
  6720  000E98  0E05               	movlw	5
  6721  000E9A  602A               	cpfslt	_i^0,c
  6722  000E9C  0C05               	retlw	5
  6723  000E9E  D758               	goto	l5973
  6724  000EA0                     l6079:
  6725                           
  6726                           ;Usuaris.c: 276:             numUsuaris++;
  6727  000EA0  2A2D               	incf	_numUsuaris^0,f,c
  6728                           
  6729                           ;Usuaris.c: 277:             if (numUsuaris != 9|| i > 4) {
  6730  000EA2  0E09               	movlw	9
  6731  000EA4  182D               	xorwf	_numUsuaris^0,w,c
  6732  000EA6  E103               	bnz	u6320
  6733  000EA8  0E04               	movlw	4
  6734  000EAA  642A               	cpfsgt	_i^0,c
  6735  000EAC  D002               	goto	l6085
  6736  000EAE                     u6320:
  6737                           
  6738                           ;Usuaris.c: 278:     state = 0;
  6739  000EAE  6A27               	clrf	UmotorUsers@state^0,c
  6740                           
  6741                           ;Usuaris.c: 279:    }
  6742  000EB0  D01E               	goto	l6101
  6743  000EB2                     l6085:
  6744  000EB2  0E09               	movlw	9
  6745  000EB4  182D               	xorwf	_numUsuaris^0,w,c
  6746  000EB6  E11B               	bnz	l6101
  6747  000EB8  0E05               	movlw	5
  6748  000EBA  602A               	cpfslt	_i^0,c
  6749  000EBC  D018               	goto	l6101
  6750                           
  6751                           ;Usuaris.c: 281:     if(indexNextUserStruct == 0){
  6752  000EBE  502B               	movf	_indexNextUserStruct^0,w,c
  6753  000EC0  E102               	bnz	l6093
  6754                           
  6755                           ;Usuaris.c: 282:       tmp = 7;
  6756  000EC2  0E07               	movlw	7
  6757  000EC4  D001               	goto	L3
  6758  000EC6                     l6093:
  6759                           
  6760                           ;Usuaris.c: 284:      tmp = indexNextUserStruct-1;
  6761  000EC6  042B               	decf	_indexNextUserStruct^0,w,c
  6762  000EC8                     L3:
  6763  000EC8  6E33               	movwf	_tmp^0,c
  6764                           
  6765                           ;Usuaris.c: 288:     if(puntuacions[i].indexStruct == tmp){
  6766  000ECA  5033               	movf	_tmp^0,w,c
  6767  000ECC  6E69               	movwf	??_UmotorUsers^0,c
  6768  000ECE  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6769  000ED0  D836               	call	PL8	;call to abstracted procedure
  6770  000ED2  50DF               	movf	indf2,w,c
  6771  000ED4  6E6B               	movwf	(??_UmotorUsers+2)^0,c
  6772  000ED6  6A6C               	clrf	(??_UmotorUsers+3)^0,c
  6773  000ED8  BE6B               	btfsc	(??_UmotorUsers+2)^0,7,c
  6774  000EDA  066C               	decf	(??_UmotorUsers+3)^0,f,c
  6775  000EDC  5069               	movf	??_UmotorUsers^0,w,c
  6776  000EDE  186B               	xorwf	(??_UmotorUsers+2)^0,w,c
  6777  000EE0  E105               	bnz	l6099
  6778  000EE2  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6779  000EE4  186C               	xorwf	(??_UmotorUsers+3)^0,w,c
  6780  000EE6  E102               	bnz	l6099
  6781                           
  6782                           ;Usuaris.c: 289:       puntuacions[i].indexStruct = -1;
  6783  000EE8  D82A               	call	PL8	;call to abstracted procedure
  6784  000EEA  68DF               	setf	indf2,c
  6785  000EEC                     l6099:
  6786                           
  6787                           ;Usuaris.c: 291:     i++;
  6788  000EEC  2A2A               	incf	_i^0,f,c
  6789  000EEE                     l6101:
  6790                           
  6791                           ;Usuaris.c: 294:             if(numUsuaris == 9) numUsuaris = 8;
  6792  000EEE  0E09               	movlw	9
  6793  000EF0  182D               	xorwf	_numUsuaris^0,w,c
  6794  000EF2  E102               	bnz	l6105
  6795  000EF4  0E08               	movlw	8
  6796  000EF6  6E2D               	movwf	_numUsuaris^0,c
  6797  000EF8                     l6105:
  6798                           
  6799                           ;Usuaris.c: 295:    escriureCharEEPROM(numUsuaris,zero);
  6800  000EF8  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6801  000EFA  502D               	movf	_numUsuaris^0,w,c
  6802  000EFC  EFCA  F00E         	goto	_escriureCharEEPROM
  6803  000F00                     l6109:
  6804  000F00  5027               	movf	UmotorUsers@state^0,w,c
  6805  000F02  6E69               	movwf	??_UmotorUsers^0,c
  6806  000F04  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6807                           
  6808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6809                           ; Switch size 1, requested type "space"
  6810                           ; Number of cases is 1, Range of values is 0 to 0
  6811                           ; switch strategies available:
  6812                           ; Name         Instructions Cycles
  6813                           ; simple_byte            4     3 (average)
  6814                           ;	Chosen strategy is simple_byte
  6815  000F06  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6816  000F08  A4D8               	btfss	status,2,c
  6817  000F0A  0012               	return	
  6818                           
  6819                           ; Switch size 1, requested type "space"
  6820                           ; Number of cases is 9, Range of values is 0 to 9
  6821                           ; switch strategies available:
  6822                           ; Name         Instructions Cycles
  6823                           ; simple_byte           28    15 (average)
  6824                           ;	Chosen strategy is simple_byte
  6825  000F0C  5069               	movf	??_UmotorUsers^0,w,c
  6826  000F0E  E101 D6D8          	bz	l796
  6827  000F12  0A01               	xorlw	1	; case 1
  6828  000F14  E101 D706          	bz	l5965
  6829  000F18  0A03               	xorlw	3	; case 2
  6830  000F1A  E101 D71B          	bz	l5975
  6831  000F1E  0A01               	xorlw	1	; case 3
  6832  000F20  E101 D729          	bz	l5987
  6833  000F24  0A06               	xorlw	6	; case 5
  6834  000F26  E101 D759          	bz	l6013
  6835  000F2A  0A03               	xorlw	3	; case 6
  6836  000F2C  E101 D776          	bz	l6033
  6837  000F30  0A01               	xorlw	1	; case 7
  6838  000F32  E088               	bz	l6051
  6839  000F34  0A0F               	xorlw	15	; case 8
  6840  000F36  E09F               	bz	l6063
  6841  000F38  0A01               	xorlw	1	; case 9
  6842  000F3A  E0B2               	bz	l6079
  6843  000F3C  0012               	return		;funcret
  6844  000F3E                     __end_of_UmotorUsers:
  6845                           	callstack 0
  6846  000F3E                     PL8:
  6847                           	callstack 27
  6848  000F3E  502A               	movf	_i^0,w,c
  6849  000F40  0D02               	mullw	2
  6850  000F42  50F3               	movf	243,w,c
  6851  000F44  0F98               	addlw	low _puntuacions
  6852  000F46  6ED9               	movwf	fsr2l,c
  6853  000F48  6ADA               	clrf	fsr2h,c
  6854  000F4A  0012               	return	
  6855  000F4C                     __end_ofPL8:
  6856                           	callstack 0
  6857  000F4C                     PL16:
  6858                           	callstack 27
  6859  000F4C  502A               	movf	_i^0,w,c
  6860  000F4E  0D02               	mullw	2
  6861  000F50  50F3               	movf	243,w,c
  6862  000F52  0F99               	addlw	low (_puntuacions+1)
  6863  000F54  6ED9               	movwf	fsr2l,c
  6864  000F56  6ADA               	clrf	fsr2h,c
  6865  000F58  0012               	return	
  6866  000F5A                     __end_ofPL16:
  6867                           	callstack 0
  6868  000F5A                     PL22:
  6869                           	callstack 27
  6870  000F5A  6ED9               	movwf	fsr2l,c
  6871  000F5C  6ADA               	clrf	fsr2h,c
  6872  000F5E  502B               	movf	_indexNextUserStruct^0,w,c
  6873  000F60  0D12               	mullw	18
  6874  000F62  0E00               	movlw	low _usuaris
  6875  000F64  6E69               	movwf	??_UmotorUsers^0,c
  6876  000F66  0E01               	movlw	high _usuaris
  6877  000F68  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  6878  000F6A  0012               	return	
  6879  000F6C                     __end_ofPL22:
  6880                           	callstack 0
  6881  000F6C                     PL46:
  6882                           	callstack 27
  6883  000F6C  6ED9               	movwf	fsr2l,c
  6884  000F6E  6ADA               	clrf	fsr2h,c
  6885  000F70  50DF               	movf	indf2,w,c
  6886  000F72  0012               	return	
  6887  000F74                     __end_ofPL46:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _escriureCharEEPROM *****************
  6891 ;; Defined at:
  6892 ;;		line 66 in file "Usuaris.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  c               1    wreg     unsigned char 
  6895 ;;  pos             1    5[COMRAM] unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  c               1    6[COMRAM] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1
  6907 ;;      Params:         1       0       0
  6908 ;;      Locals:         1       0       0
  6909 ;;      Temps:          0       0       0
  6910 ;;      Totals:         2       0       0
  6911 ;;Total ram usage:        2 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 2
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_UmotorUsers
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text57
  6922  001D94                     __ptext57:
  6923                           	callstack 0
  6924  001D94                     _escriureCharEEPROM:
  6925                           	callstack 27
  6926                           
  6927                           ;incstack = 0
  6928                           ;escriureCharEEPROM@c stored from wreg
  6929  001D94  6E65               	movwf	escriureCharEEPROM@c^0,c
  6930                           
  6931                           ;Usuaris.c: 67:     EEADR = pos;
  6932  001D96  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6933                           
  6934                           ;Usuaris.c: 68:     EEDATA = c;
  6935  001D9A  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6936                           
  6937                           ;Usuaris.c: 69:     EECON1bits.EEPGD = zero;
  6938  001D9E  9EA6               	bcf	166,7,c	;volsfr
  6939                           
  6940                           ;Usuaris.c: 70:     EECON1bits.CFGS = zero;
  6941  001DA0  9CA6               	bcf	166,6,c	;volsfr
  6942                           
  6943                           ;Usuaris.c: 71:     EECON1bits.WREN = 1;
  6944  001DA2  84A6               	bsf	166,2,c	;volsfr
  6945                           
  6946                           ;Usuaris.c: 72:     INTCONbits.GIE = zero;
  6947  001DA4  9EF2               	bcf	242,7,c	;volatile
  6948                           
  6949                           ;Usuaris.c: 73:     EECON2 = 85;
  6950  001DA6  0E55               	movlw	85
  6951  001DA8  6EA7               	movwf	167,c	;volsfr
  6952                           
  6953                           ;Usuaris.c: 74:     EECON2 = 170;
  6954  001DAA  0EAA               	movlw	170
  6955  001DAC  6EA7               	movwf	167,c	;volsfr
  6956                           
  6957                           ;Usuaris.c: 75:     EECON1bits.WR = 1;
  6958  001DAE  82A6               	bsf	166,1,c	;volsfr
  6959  001DB0                     l753:
  6960  001DB0  B2A6               	btfsc	166,1,c	;volsfr
  6961  001DB2  D7FE               	goto	l753
  6962                           
  6963                           ;Usuaris.c: 77:     INTCONbits.GIE = 1;
  6964  001DB4  8EF2               	bsf	242,7,c	;volatile
  6965                           
  6966                           ;Usuaris.c: 78:     EECON1bits.WREN = zero;
  6967  001DB6  94A6               	bcf	166,2,c	;volsfr
  6968  001DB8  0012               	return		;funcret
  6969  001DBA                     __end_of_escriureCharEEPROM:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _compareStrings *****************
  6973 ;; Defined at:
  6974 ;;		line 127 in file "Usuaris.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6977 ;;		 -> tmpPassword(9), tmpUsername(9), 
  6978 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6979 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1
  6991 ;;      Params:         3       0       0
  6992 ;;      Locals:         0       0       0
  6993 ;;      Temps:          2       0       0
  6994 ;;      Totals:         5       0       0
  6995 ;;Total ram usage:        5 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 2
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_UmotorUsers
  7002 ;;		_miraPassword
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text58
  7007  001BFC                     __ptext58:
  7008                           	callstack 0
  7009  001BFC                     _compareStrings:
  7010                           	callstack 26
  7011                           
  7012                           ;Usuaris.c: 128:     while (*a){
  7013                           
  7014                           ;incstack = 0
  7015  001BFC  D00A               	goto	l4455
  7016  001BFE                     l4449:
  7017                           
  7018                           ;Usuaris.c: 129:         if (*a != *b)break;
  7019  001BFE  D813               	call	PL54	;call to abstracted procedure
  7020  001C00  5064               	movf	compareStrings@a^0,w,c
  7021  001C02  6EE1               	movwf	fsr1l,c
  7022  001C04  6AE2               	clrf	fsr1h,c
  7023  001C06  50DE               	movf	postinc2,w,c
  7024  001C08  18E6               	xorwf	postinc1,w,c
  7025  001C0A  E105               	bnz	u3840
  7026                           
  7027                           ;Usuaris.c: 130:         a++;
  7028  001C0C  2A64               	incf	compareStrings@a^0,f,c
  7029                           
  7030                           ;Usuaris.c: 131:         b++;
  7031  001C0E  4A65               	infsnz	compareStrings@b^0,f,c
  7032  001C10  2A66               	incf	(compareStrings@b+1)^0,f,c
  7033  001C12                     l4455:
  7034                           
  7035                           ;Usuaris.c: 128:     while (*a){
  7036  001C12  D80E               	call	PL68	;call to abstracted procedure
  7037  001C14  E1F4               	bnz	l4449
  7038  001C16                     u3840:
  7039                           
  7040                           ;Usuaris.c: 133:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7041  001C16  D807               	call	PL54	;call to abstracted procedure
  7042  001C18  50DF               	movf	indf2,w,c
  7043  001C1A  6E67               	movwf	??_compareStrings^0,c
  7044  001C1C  D809               	call	PL68	;call to abstracted procedure
  7045  001C1E  6E68               	movwf	(??_compareStrings+1)^0,c
  7046  001C20  5067               	movf	??_compareStrings^0,w,c
  7047  001C22  5C68               	subwf	(??_compareStrings+1)^0,w,c
  7048  001C24  0012               	return		;funcret
  7049  001C26                     __end_of_compareStrings:
  7050                           	callstack 0
  7051  001C26                     PL54:
  7052                           	callstack 26
  7053  001C26  C065  FFD9         	movff	compareStrings@b,fsr2l
  7054  001C2A  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  7055  001C2E  0012               	return	
  7056  001C30                     __end_ofPL54:
  7057                           	callstack 0
  7058  001C30                     PL68:
  7059                           	callstack 26
  7060  001C30  5064               	movf	compareStrings@a^0,w,c
  7061  001C32  6ED9               	movwf	fsr2l,c
  7062  001C34  6ADA               	clrf	fsr2h,c
  7063  001C36  50DF               	movf	indf2,w,c
  7064  001C38  0012               	return	
  7065  001C3A                     __end_ofPL68:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _Uinit *****************
  7069 ;; Defined at:
  7070 ;;		line 87 in file "Usuaris.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;		None
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  k               1   12[COMRAM] unsigned char 
  7075 ;;  k               1   11[COMRAM] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1
  7085 ;;      Params:         0       0       0
  7086 ;;      Locals:         2       0       0
  7087 ;;      Temps:          2       0       0
  7088 ;;      Totals:         4       0       0
  7089 ;;Total ram usage:        4 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 3
  7092 ;; This function calls:
  7093 ;;		___lbdiv
  7094 ;;		_llegirCharEEPROM
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text59
  7101  0014D0                     __ptext59:
  7102                           	callstack 0
  7103  0014D0                     _Uinit:
  7104                           	callstack 27
  7105                           
  7106                           ;Usuaris.c: 91:     i = 0;
  7107                           
  7108                           ;incstack = 0
  7109  0014D0  6A2A               	clrf	_i^0,c
  7110                           
  7111                           ;Usuaris.c: 96:     numUsuaris = llegirCharEEPROM(zero);
  7112  0014D2  0E00               	movlw	0
  7113  0014D4  ECD6  F00F         	call	_llegirCharEEPROM
  7114  0014D8  6E2D               	movwf	_numUsuaris^0,c
  7115                           
  7116                           ;Usuaris.c: 98:     if(numUsuaris > 8) numUsuaris = zero;
  7117  0014DA  0E08               	movlw	8
  7118  0014DC  642D               	cpfsgt	_numUsuaris^0,c
  7119  0014DE  D001               	goto	l4827
  7120  0014E0  6A2D               	clrf	_numUsuaris^0,c
  7121  0014E2                     l4827:
  7122                           
  7123                           ;Usuaris.c: 102:     i++;
  7124  0014E2  2A2A               	incf	_i^0,f,c
  7125                           
  7126                           ;Usuaris.c: 103:     indexNextUser = llegirCharEEPROM(1);
  7127  0014E4  0E01               	movlw	1
  7128  0014E6  ECD6  F00F         	call	_llegirCharEEPROM
  7129  0014EA  6E2C               	movwf	_indexNextUser^0,c
  7130                           
  7131                           ;Usuaris.c: 104:     if(indexNextUser == 255) indexNextUser = 2;
  7132  0014EC  282C               	incf	_indexNextUser^0,w,c
  7133  0014EE  E102               	bnz	l4835
  7134  0014F0  0E02               	movlw	2
  7135  0014F2  6E2C               	movwf	_indexNextUser^0,c
  7136  0014F4                     l4835:
  7137                           
  7138                           ;Usuaris.c: 105:     indexNextUserStruct = indexNextUser/18;
  7139  0014F4  0E12               	movlw	18
  7140  0014F6  6E64               	movwf	___lbdiv@divisor^0,c
  7141  0014F8  502C               	movf	_indexNextUser^0,w,c
  7142  0014FA  EC58  F00E         	call	___lbdiv
  7143  0014FE  6E2B               	movwf	_indexNextUserStruct^0,c
  7144                           
  7145                           ;Usuaris.c: 106:     i++;
  7146  001500  2A2A               	incf	_i^0,f,c
  7147                           
  7148                           ;Usuaris.c: 107:     for(j = zero;j<numUsuaris;j++){
  7149  001502  6A29               	clrf	_j^0,c
  7150  001504  D01F               	goto	l4867
  7151  001506                     l765:
  7152                           
  7153                           ;Usuaris.c: 108:         for(unsigned char k = zero; k<9; k++){
  7154  001506  6A6A               	clrf	Uinit@k^0,c
  7155  001508                     l4845:
  7156                           
  7157                           ;Usuaris.c: 109:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7158  001508  D83B               	call	PL36	;call to abstracted procedure
  7159  00150A  D848               	call	PL58	;call to abstracted procedure
  7160  00150C  506A               	movf	Uinit@k^0,w,c
  7161  00150E  D83F               	call	PL40	;call to abstracted procedure
  7162  001510  ECD6  F00F         	call	_llegirCharEEPROM
  7163  001514  6EDF               	movwf	indf2,c
  7164                           
  7165                           ;Usuaris.c: 110:             i++;
  7166  001516  2A2A               	incf	_i^0,f,c
  7167                           
  7168                           ;Usuaris.c: 111:         }
  7169  001518  2A6A               	incf	Uinit@k^0,f,c
  7170  00151A  0E08               	movlw	8
  7171  00151C  646A               	cpfsgt	Uinit@k^0,c
  7172  00151E  D7F4               	goto	l4845
  7173                           
  7174                           ;Usuaris.c: 112:         for(unsigned char k = zero; k<9;k++){
  7175  001520  6A6B               	clrf	Uinit@k_1194^0,c
  7176  001522                     l4857:
  7177                           
  7178                           ;Usuaris.c: 113:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7179  001522  D82E               	call	PL36	;call to abstracted procedure
  7180  001524  0E09               	movlw	9
  7181  001526  2668               	addwf	??_Uinit^0,f,c
  7182  001528  0E00               	movlw	0
  7183  00152A  2269               	addwfc	(??_Uinit+1)^0,f,c
  7184  00152C  D837               	call	PL58	;call to abstracted procedure
  7185  00152E  506B               	movf	Uinit@k_1194^0,w,c
  7186  001530  D82E               	call	PL40	;call to abstracted procedure
  7187  001532  ECD6  F00F         	call	_llegirCharEEPROM
  7188  001536  6EDF               	movwf	indf2,c
  7189                           
  7190                           ;Usuaris.c: 114:             i++;
  7191  001538  2A2A               	incf	_i^0,f,c
  7192                           
  7193                           ;Usuaris.c: 115:         }
  7194  00153A  2A6B               	incf	Uinit@k_1194^0,f,c
  7195  00153C  0E08               	movlw	8
  7196  00153E  646B               	cpfsgt	Uinit@k_1194^0,c
  7197  001540  D7F0               	goto	l4857
  7198                           
  7199                           ;Usuaris.c: 116:     }
  7200  001542  2A29               	incf	_j^0,f,c
  7201  001544                     l4867:
  7202  001544  502D               	movf	_numUsuaris^0,w,c
  7203  001546  5C29               	subwf	_j^0,w,c
  7204  001548  E3DE               	bnc	l765
  7205                           
  7206                           ;Usuaris.c: 119:     puntuacions[zero].indexStruct = neg;
  7207  00154A  0100               	movlb	0	; () banked
  7208  00154C  6998               	setf	_puntuacions& (0+255),b
  7209                           
  7210                           ;Usuaris.c: 120:     for(i = 0; i<5; i++){
  7211  00154E  6A2A               	clrf	_i^0,c
  7212  001550                     l4869:
  7213  001550  0E04               	movlw	4
  7214  001552  642A               	cpfsgt	_i^0,c
  7215  001554  D001               	goto	l4873
  7216  001556  0C04               	retlw	4
  7217  001558                     l4873:
  7218                           
  7219                           ;Usuaris.c: 121:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7220  001558  EC9F  F007         	call	PL8	;call to abstracted procedure
  7221  00155C  502A               	movf	_i^0,w,c
  7222  00155E  0D02               	mullw	2
  7223  001560  50F3               	movf	243,w,c
  7224  001562  0FC8               	addlw	200
  7225  001564  ECD6  F00F         	call	_llegirCharEEPROM
  7226  001568  6EDF               	movwf	indf2,c
  7227                           
  7228                           ;Usuaris.c: 122:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7229  00156A  ECA6  F007         	call	PL16	;call to abstracted procedure
  7230  00156E  502A               	movf	_i^0,w,c
  7231  001570  0D02               	mullw	2
  7232  001572  50F3               	movf	243,w,c
  7233  001574  0FC9               	addlw	201
  7234  001576  ECD6  F00F         	call	_llegirCharEEPROM
  7235  00157A  6EDF               	movwf	indf2,c
  7236                           
  7237                           ;Usuaris.c: 123:     }
  7238  00157C  2A2A               	incf	_i^0,f,c
  7239  00157E  D7E8               	goto	l4869
  7240  001580                     __end_of_Uinit:
  7241                           	callstack 0
  7242  001580                     PL36:
  7243                           	callstack 27
  7244  001580  5029               	movf	_j^0,w,c
  7245  001582  0D12               	mullw	18
  7246  001584  0E00               	movlw	low _usuaris
  7247  001586  6E68               	movwf	??_Uinit^0,c
  7248  001588  0E01               	movlw	high _usuaris
  7249  00158A  6E69               	movwf	(??_Uinit+1)^0,c
  7250  00158C  0012               	return	
  7251  00158E                     __end_ofPL36:
  7252                           	callstack 0
  7253  00158E                     PL40:
  7254                           	callstack 27
  7255  00158E  2468               	addwf	??_Uinit^0,w,c
  7256  001590  6ED9               	movwf	fsr2l,c
  7257  001592  0E00               	movlw	0
  7258  001594  2069               	addwfc	(??_Uinit+1)^0,w,c
  7259  001596  6EDA               	movwf	fsr2h,c
  7260  001598  502A               	movf	_i^0,w,c
  7261  00159A  0012               	return	
  7262  00159C                     __end_ofPL40:
  7263                           	callstack 0
  7264  00159C                     PL58:
  7265                           	callstack 27
  7266  00159C  50F3               	movf	243,w,c
  7267  00159E  2668               	addwf	??_Uinit^0,f,c
  7268  0015A0  50F4               	movf	244,w,c
  7269  0015A2  2269               	addwfc	(??_Uinit+1)^0,f,c
  7270  0015A4  0012               	return	
  7271  0015A6                     __end_ofPL58:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _llegirCharEEPROM *****************
  7275 ;; Defined at:
  7276 ;;		line 80 in file "Usuaris.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  pos             1    wreg     unsigned char 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  pos             1    5[COMRAM] unsigned char 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      unsigned char 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1
  7290 ;;      Params:         0       0       0
  7291 ;;      Locals:         1       0       0
  7292 ;;      Temps:          0       0       0
  7293 ;;      Totals:         1       0       0
  7294 ;;Total ram usage:        1 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; Hardware stack levels required when called: 2
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_Uinit
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text60
  7305  001FAC                     __ptext60:
  7306                           	callstack 0
  7307  001FAC                     _llegirCharEEPROM:
  7308                           	callstack 27
  7309                           
  7310                           ;incstack = 0
  7311                           ;llegirCharEEPROM@pos stored from wreg
  7312  001FAC  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7313                           
  7314                           ;Usuaris.c: 81:     EEADR = pos;
  7315  001FAE  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7316                           
  7317                           ;Usuaris.c: 82:     EECON1bits.EEPGD = zero;
  7318  001FB2  9EA6               	bcf	166,7,c	;volsfr
  7319                           
  7320                           ;Usuaris.c: 83:     EECON1bits.CFGS = zero;
  7321  001FB4  9CA6               	bcf	166,6,c	;volsfr
  7322                           
  7323                           ;Usuaris.c: 84:     EECON1bits.RD = 1;
  7324  001FB6  80A6               	bsf	166,0,c	;volsfr
  7325                           
  7326                           ;Usuaris.c: 85:     return EEDATA;
  7327  001FB8  50A8               	movf	168,w,c	;volatile
  7328  001FBA  0012               	return		;funcret
  7329  001FBC                     __end_of_llegirCharEEPROM:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function ___lbdiv *****************
  7333 ;; Defined at:
  7334 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  dividend        1    wreg     unsigned char 
  7337 ;;  divisor         1    5[COMRAM] unsigned char 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  dividend        1    6[COMRAM] unsigned char 
  7340 ;;  quotient        1    8[COMRAM] unsigned char 
  7341 ;;  counter         1    7[COMRAM] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      unsigned char 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1
  7351 ;;      Params:         1       0       0
  7352 ;;      Locals:         3       0       0
  7353 ;;      Temps:          0       0       0
  7354 ;;      Totals:         4       0       0
  7355 ;;Total ram usage:        4 bytes
  7356 ;; Hardware stack levels used: 1
  7357 ;; Hardware stack levels required when called: 2
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_Uinit
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text61
  7366  001CB0                     __ptext61:
  7367                           	callstack 0
  7368  001CB0                     ___lbdiv:
  7369                           	callstack 27
  7370                           
  7371                           ;incstack = 0
  7372                           ;___lbdiv@dividend stored from wreg
  7373  001CB0  6E65               	movwf	___lbdiv@dividend^0,c
  7374  001CB2  6A67               	clrf	___lbdiv@quotient^0,c
  7375  001CB4  5064               	movf	___lbdiv@divisor^0,w,c
  7376  001CB6  E014               	bz	l4703
  7377  001CB8  0E01               	movlw	1
  7378  001CBA  6E66               	movwf	___lbdiv@counter^0,c
  7379  001CBC  D003               	goto	l4691
  7380  001CBE                     l4687:
  7381  001CBE  90D8               	bcf	status,0,c
  7382  001CC0  3664               	rlcf	___lbdiv@divisor^0,f,c
  7383  001CC2  2A66               	incf	___lbdiv@counter^0,f,c
  7384  001CC4                     l4691:
  7385  001CC4  AE64               	btfss	___lbdiv@divisor^0,7,c
  7386  001CC6  D7FB               	goto	l4687
  7387  001CC8                     u3990:
  7388  001CC8  90D8               	bcf	status,0,c
  7389  001CCA  3667               	rlcf	___lbdiv@quotient^0,f,c
  7390  001CCC  5064               	movf	___lbdiv@divisor^0,w,c
  7391  001CCE  5C65               	subwf	___lbdiv@dividend^0,w,c
  7392  001CD0  E303               	bnc	l4699
  7393  001CD2  5064               	movf	___lbdiv@divisor^0,w,c
  7394  001CD4  5E65               	subwf	___lbdiv@dividend^0,f,c
  7395  001CD6  8067               	bsf	___lbdiv@quotient^0,0,c
  7396  001CD8                     l4699:
  7397  001CD8  90D8               	bcf	status,0,c
  7398  001CDA  3264               	rrcf	___lbdiv@divisor^0,f,c
  7399  001CDC  2E66               	decfsz	___lbdiv@counter^0,f,c
  7400  001CDE  D7F4               	goto	u3990
  7401  001CE0                     l4703:
  7402  001CE0  5067               	movf	___lbdiv@quotient^0,w,c
  7403  001CE2  0012               	return		;funcret
  7404  001CE4                     __end_of___lbdiv:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function _TiInitTimer *****************
  7408 ;; Defined at:
  7409 ;;		line 18 in file "TiTTimer.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1
  7423 ;;      Params:         0       0       0
  7424 ;;      Locals:         0       0       0
  7425 ;;      Temps:          0       0       0
  7426 ;;      Totals:         0       0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; Hardware stack levels required when called: 2
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_main
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text62
  7438  001D44                     __ptext62:
  7439                           	callstack 0
  7440  001D44                     _TiInitTimer:
  7441                           	callstack 28
  7442                           
  7443                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7444                           
  7445                           ;incstack = 0
  7446  001D44  9ED0               	bcf	208,7,c	;volatile
  7447                           
  7448                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7449  001D46  8EF2               	bsf	242,7,c	;volatile
  7450                           
  7451                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7452  001D48  8CF2               	bsf	242,6,c	;volatile
  7453                           
  7454                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7455  001D4A  8AF2               	bsf	242,5,c	;volatile
  7456                           
  7457                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7458  001D4C  94F2               	bcf	242,2,c	;volatile
  7459                           
  7460                           ;TiTTimer.c: 25:     T0CON = 136;
  7461  001D4E  0E88               	movlw	136
  7462  001D50  6ED5               	movwf	213,c	;volatile
  7463                           
  7464                           ;TiTTimer.c: 27:     TMR0H = 223;
  7465                           
  7466                           ;TiTTimer.c: 28:     TMR0L = 148;
  7467  001D52  ECF9  F00D         	call	PL80	;call to abstracted procedure
  7468                           
  7469                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7470  001D56  8ED5               	bsf	213,7,c	;volatile
  7471                           
  7472                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7473  001D58  6A34               	clrf	_counter^0,c
  7474  001D5A                     l4797:
  7475  001D5A  0E07               	movlw	7
  7476  001D5C  6434               	cpfsgt	_counter^0,c
  7477  001D5E  D001               	goto	l4801
  7478  001D60  0C07               	retlw	7
  7479  001D62                     l4801:
  7480                           
  7481                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7482  001D62  EC9B  F00E         	call	PL14	;call to abstracted procedure
  7483  001D66  6ADF               	clrf	indf2,c
  7484                           
  7485                           ;TiTTimer.c: 33:     }
  7486  001D68  2A34               	incf	_counter^0,f,c
  7487  001D6A  D7F7               	goto	l4797
  7488  001D6C                     __end_of_TiInitTimer:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _TeTeclat *****************
  7492 ;; Defined at:
  7493 ;;		line 21 in file "TeTeclat.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1
  7507 ;;      Params:         0       0       0
  7508 ;;      Locals:         0       0       0
  7509 ;;      Temps:          3       0       0
  7510 ;;      Totals:         3       0       0
  7511 ;;Total ram usage:        3 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 3
  7514 ;; This function calls:
  7515 ;;		_MsetNovaTecla
  7516 ;;		_SsetNovaTecla
  7517 ;;		_TiGetTics
  7518 ;;		_TiResetTics
  7519 ;; This function is called by:
  7520 ;;		_main
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text63
  7525  0013AE                     __ptext63:
  7526                           	callstack 0
  7527  0013AE                     _TeTeclat:
  7528                           	callstack 27
  7529                           
  7530                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7531                           
  7532                           ;incstack = 0
  7533  0013AE  A083               	btfss	131,0,c	;volatile
  7534  0013B0  D003               	goto	u6380
  7535  0013B2  6A6B               	clrf	??_TeTeclat^0,c
  7536  0013B4  2A6B               	incf	??_TeTeclat^0,f,c
  7537  0013B6  D001               	goto	u6388
  7538  0013B8                     u6380:
  7539  0013B8  6A6B               	clrf	??_TeTeclat^0,c
  7540  0013BA                     u6388:
  7541  0013BA  0E01               	movlw	1
  7542  0013BC  A283               	btfss	131,1,c	;volatile
  7543  0013BE  0E00               	movlw	0
  7544  0013C0  0D02               	mullw	2
  7545  0013C2  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7546  0013C6  0E01               	movlw	1
  7547  0013C8  A483               	btfss	131,2,c	;volatile
  7548  0013CA  0E00               	movlw	0
  7549  0013CC  0D03               	mullw	3
  7550  0013CE  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7551  0013D2  0E01               	movlw	1
  7552  0013D4  A683               	btfss	131,3,c	;volatile
  7553  0013D6  0E00               	movlw	0
  7554  0013D8  0D04               	mullw	4
  7555  0013DA  50F3               	movf	243,w,c
  7556  0013DC  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7557  0013DE  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7558  0013E0  246B               	addwf	??_TeTeclat^0,w,c
  7559  0013E2  6E35               	movwf	TeTeclat@files^0,c
  7560                           
  7561                           ;TeTeclat.c: 26:  switch(state) {
  7562  0013E4  D055               	goto	l6187
  7563  0013E6                     l6117:
  7564                           
  7565                           ;TeTeclat.c: 28:    if (files==zero) {
  7566  0013E6  5035               	movf	TeTeclat@files^0,w,c
  7567  0013E8  E106               	bnz	l6123
  7568                           
  7569                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7570  0013EA  888C               	bsf	140,4,c	;volatile
  7571                           
  7572                           ;TeTeclat.c: 30:     LATDbits.LD5=zero;
  7573  0013EC  9A8C               	bcf	140,5,c	;volatile
  7574                           
  7575                           ;TeTeclat.c: 31:     LATDbits.LD6=zero;
  7576  0013EE  9C8C               	bcf	140,6,c	;volatile
  7577                           
  7578                           ;TeTeclat.c: 32:     cols=zero;
  7579  0013F0  6A36               	clrf	TeTeclat@cols^0,c
  7580  0013F2                     l6121:
  7581                           
  7582                           ;TeTeclat.c: 33:     state++;
  7583  0013F2  2A37               	incf	TeTeclat@state^0,f,c
  7584                           
  7585                           ;TeTeclat.c: 34:    }
  7586  0013F4  0012               	return	
  7587  0013F6                     l6123:
  7588  0013F6  5035               	movf	TeTeclat@files^0,w,c
  7589  0013F8  B4D8               	btfsc	status,2,c
  7590  0013FA  0012               	return	
  7591                           
  7592                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7593  0013FC  5038               	movf	_tiTeclat^0,w,c
  7594  0013FE  EC76  F00F         	call	_TiResetTics
  7595  001402                     l6127:
  7596                           
  7597                           ;TeTeclat.c: 37:     state = 3;
  7598  001402  0E03               	movlw	3
  7599  001404  6E37               	movwf	TeTeclat@state^0,c
  7600  001406  0C03               	retlw	3
  7601  001408                     l6129:
  7602                           
  7603                           ;TeTeclat.c: 41:    if (files==zero) {
  7604  001408  5035               	movf	TeTeclat@files^0,w,c
  7605  00140A  E106               	bnz	l6137
  7606                           
  7607                           ;TeTeclat.c: 42:     LATDbits.LD4=zero;
  7608  00140C  988C               	bcf	140,4,c	;volatile
  7609                           
  7610                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7611  00140E  8A8C               	bsf	140,5,c	;volatile
  7612                           
  7613                           ;TeTeclat.c: 44:     LATDbits.LD6=zero;
  7614  001410  9C8C               	bcf	140,6,c	;volatile
  7615                           
  7616                           ;TeTeclat.c: 45:     cols=1;
  7617  001412  0E01               	movlw	1
  7618  001414  6E36               	movwf	TeTeclat@cols^0,c
  7619  001416  D7ED               	goto	l6121
  7620  001418                     l6137:
  7621  001418  5035               	movf	TeTeclat@files^0,w,c
  7622  00141A  B4D8               	btfsc	status,2,c
  7623  00141C  0012               	return	
  7624                           
  7625                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7626  00141E  5038               	movf	_tiTeclat^0,w,c
  7627  001420  EC76  F00F         	call	_TiResetTics
  7628  001424  D7EE               	goto	l6127
  7629  001426                     l6143:
  7630                           
  7631                           ;TeTeclat.c: 54:    if (files==zero) {
  7632  001426  5035               	movf	TeTeclat@files^0,w,c
  7633  001428  E107               	bnz	l6151
  7634                           
  7635                           ;TeTeclat.c: 55:     LATDbits.LD4=zero;
  7636  00142A  988C               	bcf	140,4,c	;volatile
  7637                           
  7638                           ;TeTeclat.c: 56:     LATDbits.LD5=zero;
  7639  00142C  9A8C               	bcf	140,5,c	;volatile
  7640                           
  7641                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7642  00142E  8C8C               	bsf	140,6,c	;volatile
  7643                           
  7644                           ;TeTeclat.c: 58:     cols=2;
  7645  001430  0E02               	movlw	2
  7646  001432  6E36               	movwf	TeTeclat@cols^0,c
  7647  001434                     l6149:
  7648                           
  7649                           ;TeTeclat.c: 59:     state = zero;
  7650  001434  6A37               	clrf	TeTeclat@state^0,c
  7651                           
  7652                           ;TeTeclat.c: 60:    }
  7653  001436  0012               	return	
  7654  001438                     l6151:
  7655  001438  5035               	movf	TeTeclat@files^0,w,c
  7656  00143A  B4D8               	btfsc	status,2,c
  7657  00143C  0012               	return	
  7658                           
  7659                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7660  00143E  5038               	movf	_tiTeclat^0,w,c
  7661  001440  EC76  F00F         	call	_TiResetTics
  7662  001444  D7D6               	goto	l6121
  7663  001446                     l6157:
  7664                           
  7665                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7666  001446  5038               	movf	_tiTeclat^0,w,c
  7667  001448  ECDD  F00E         	call	_TiGetTics
  7668  00144C  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7669  00144E  0012               	return	
  7670  001450  D7D0               	goto	l6121
  7671  001452                     l6161:
  7672                           
  7673                           ;TeTeclat.c: 72:    if (files==zero) {
  7674  001452  5035               	movf	TeTeclat@files^0,w,c
  7675  001454  E103               	bnz	l6165
  7676                           
  7677                           ;TeTeclat.c: 73:     state = 1;
  7678  001456  0E01               	movlw	1
  7679  001458  6E37               	movwf	TeTeclat@state^0,c
  7680                           
  7681                           ;TeTeclat.c: 74:    }
  7682  00145A  0C01               	retlw	1
  7683  00145C                     l6165:
  7684  00145C  5035               	movf	TeTeclat@files^0,w,c
  7685  00145E  B4D8               	btfsc	status,2,c
  7686  001460  0012               	return	
  7687                           
  7688                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7689  001462  D82D               	call	PL20	;call to abstracted procedure
  7690  001464  EC6A  F000         	call	_MsetNovaTecla
  7691                           
  7692                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7693  001468  D82A               	call	PL20	;call to abstracted procedure
  7694  00146A  EC66  F000         	call	_SsetNovaTecla
  7695  00146E  D7C1               	goto	l6121
  7696  001470                     l6171:
  7697                           
  7698                           ;TeTeclat.c: 82:    if (files==zero) {
  7699  001470  5035               	movf	TeTeclat@files^0,w,c
  7700  001472  A4D8               	btfss	status,2,c
  7701  001474  0012               	return	
  7702                           
  7703                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7704  001476  5038               	movf	_tiTeclat^0,w,c
  7705  001478  EC76  F00F         	call	_TiResetTics
  7706  00147C  D7BA               	goto	l6121
  7707  00147E                     l6177:
  7708                           
  7709                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7710  00147E  5038               	movf	_tiTeclat^0,w,c
  7711  001480  ECDD  F00E         	call	_TiGetTics
  7712  001484  D7E3               	goto	L4
  7713  001486                     l6181:
  7714                           
  7715                           ;TeTeclat.c: 93:    if (files!=zero) {
  7716  001486  5035               	movf	TeTeclat@files^0,w,c
  7717  001488  E0D5               	bz	l6149
  7718                           
  7719                           ;TeTeclat.c: 94:     state = 5;
  7720  00148A  0E05               	movlw	5
  7721  00148C  6E37               	movwf	TeTeclat@state^0,c
  7722                           
  7723                           ;TeTeclat.c: 95:    }
  7724  00148E  0C05               	retlw	5
  7725  001490                     l6187:
  7726  001490  5037               	movf	TeTeclat@state^0,w,c
  7727  001492  6E6B               	movwf	??_TeTeclat^0,c
  7728  001494  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7729                           
  7730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7731                           ; Switch size 1, requested type "space"
  7732                           ; Number of cases is 1, Range of values is 0 to 0
  7733                           ; switch strategies available:
  7734                           ; Name         Instructions Cycles
  7735                           ; simple_byte            4     3 (average)
  7736                           ;	Chosen strategy is simple_byte
  7737  001496  506C               	movf	(??_TeTeclat+1)^0,w,c
  7738  001498  A4D8               	btfss	status,2,c
  7739  00149A  0012               	return	
  7740                           
  7741                           ; Switch size 1, requested type "space"
  7742                           ; Number of cases is 8, Range of values is 0 to 7
  7743                           ; switch strategies available:
  7744                           ; Name         Instructions Cycles
  7745                           ; simple_byte           25    13 (average)
  7746                           ;	Chosen strategy is simple_byte
  7747  00149C  506B               	movf	??_TeTeclat^0,w,c
  7748  00149E  E0A3               	bz	l6117
  7749  0014A0  0A01               	xorlw	1	; case 1
  7750  0014A2  E0B2               	bz	l6129
  7751  0014A4  0A03               	xorlw	3	; case 2
  7752  0014A6  E0BF               	bz	l6143
  7753  0014A8  0A01               	xorlw	1	; case 3
  7754  0014AA  E0CD               	bz	l6157
  7755  0014AC  0A07               	xorlw	7	; case 4
  7756  0014AE  E0D1               	bz	l6161
  7757  0014B0  0A01               	xorlw	1	; case 5
  7758  0014B2  E0DE               	bz	l6171
  7759  0014B4  0A03               	xorlw	3	; case 6
  7760  0014B6  E0E3               	bz	l6177
  7761  0014B8  0A01               	xorlw	1	; case 7
  7762  0014BA  E0E5               	bz	l6181
  7763  0014BC  0012               	return		;funcret
  7764  0014BE                     __end_of_TeTeclat:
  7765                           	callstack 0
  7766  0014BE                     PL20:
  7767                           	callstack 27
  7768  0014BE  5035               	movf	TeTeclat@files^0,w,c
  7769  0014C0  0D03               	mullw	3
  7770  0014C2  50F3               	movf	243,w,c
  7771  0014C4  0FC1               	addlw	low (_teclaPremuda+253)
  7772  0014C6  2436               	addwf	TeTeclat@cols^0,w,c
  7773  0014C8  6ED9               	movwf	fsr2l,c
  7774  0014CA  6ADA               	clrf	fsr2h,c
  7775  0014CC  50DF               	movf	indf2,w,c
  7776  0014CE  0012               	return	
  7777  0014D0                     __end_ofPL20:
  7778                           	callstack 0
  7779                           
  7780 ;; *************** function _SsetNovaTecla *****************
  7781 ;; Defined at:
  7782 ;;		line 124 in file "Ssms.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  tecla           1    wreg     unsigned char 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  tecla           1    5[COMRAM] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1
  7796 ;;      Params:         0       0       0
  7797 ;;      Locals:         1       0       0
  7798 ;;      Temps:          0       0       0
  7799 ;;      Totals:         1       0       0
  7800 ;;Total ram usage:        1 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 2
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_TeTeclat
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text64
  7811  0000CC                     __ptext64:
  7812                           	callstack 0
  7813  0000CC                     _SsetNovaTecla:
  7814                           	callstack 27
  7815                           
  7816                           ;incstack = 0
  7817                           ;SsetNovaTecla@tecla stored from wreg
  7818  0000CC  6E64               	movwf	SsetNovaTecla@tecla^0,c
  7819                           
  7820                           ;Ssms.c: 125:     novaTecla = tecla;
  7821  0000CE  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  7822  0000D2  0012               	return		;funcret
  7823  0000D4                     __end_of_SsetNovaTecla:
  7824                           	callstack 0
  7825                           
  7826 ;; *************** function _MsetNovaTecla *****************
  7827 ;; Defined at:
  7828 ;;		line 31 in file "Menu.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  tecla           1    wreg     unsigned char 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  tecla           1    5[COMRAM] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1
  7842 ;;      Params:         0       0       0
  7843 ;;      Locals:         1       0       0
  7844 ;;      Temps:          0       0       0
  7845 ;;      Totals:         1       0       0
  7846 ;;Total ram usage:        1 bytes
  7847 ;; Hardware stack levels used: 1
  7848 ;; Hardware stack levels required when called: 2
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_TeTeclat
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text65
  7857  0000D4                     __ptext65:
  7858                           	callstack 0
  7859  0000D4                     _MsetNovaTecla:
  7860                           	callstack 27
  7861                           
  7862                           ;incstack = 0
  7863                           ;MsetNovaTecla@tecla stored from wreg
  7864  0000D4  6E64               	movwf	MsetNovaTecla@tecla^0,c
  7865                           
  7866                           ;Menu.c: 32:     NovaTecla = tecla;
  7867  0000D6  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  7868  0000DA  0012               	return		;funcret
  7869  0000DC                     __end_of_MsetNovaTecla:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _TeInit *****************
  7873 ;; Defined at:
  7874 ;;		line 17 in file "TeTeclat.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;		None
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1
  7888 ;;      Params:         0       0       0
  7889 ;;      Locals:         0       0       0
  7890 ;;      Temps:          0       0       0
  7891 ;;      Totals:         0       0       0
  7892 ;;Total ram usage:        0 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 3
  7895 ;; This function calls:
  7896 ;;		_TiGetTimer
  7897 ;; This function is called by:
  7898 ;;		_main
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text66
  7903  0000DC                     __ptext66:
  7904                           	callstack 0
  7905  0000DC                     _TeInit:
  7906                           	callstack 27
  7907                           
  7908                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7909                           
  7910                           ;incstack = 0
  7911  0000DC  EC8C  F00E         	call	_TiGetTimer	;wreg free
  7912  0000E0  6E38               	movwf	_tiTeclat^0,c
  7913  0000E2  0012               	return		;funcret
  7914  0000E4                     __end_of_TeInit:
  7915                           	callstack 0
  7916                           
  7917 ;; *************** function _Sinit *****************
  7918 ;; Defined at:
  7919 ;;		line 18 in file "Ssms.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1
  7933 ;;      Params:         0       0       0
  7934 ;;      Locals:         0       0       0
  7935 ;;      Temps:          0       0       0
  7936 ;;      Totals:         0       0       0
  7937 ;;Total ram usage:        0 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; Hardware stack levels required when called: 3
  7940 ;; This function calls:
  7941 ;;		_TiGetTimer
  7942 ;; This function is called by:
  7943 ;;		_main
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text67
  7948  0000E4                     __ptext67:
  7949                           	callstack 0
  7950  0000E4                     _Sinit:
  7951                           	callstack 27
  7952                           
  7953                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7954                           
  7955                           ;incstack = 0
  7956  0000E4  EC8C  F00E         	call	_TiGetTimer	;wreg free
  7957  0000E8  6E3B               	movwf	_timerSMS^0,c
  7958  0000EA  0012               	return		;funcret
  7959  0000EC                     __end_of_Sinit:
  7960                           	callstack 0
  7961                           
  7962 ;; *************** function _SMotor *****************
  7963 ;; Defined at:
  7964 ;;		line 22 in file "Ssms.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1
  7978 ;;      Params:         0       0       0
  7979 ;;      Locals:         0       0       0
  7980 ;;      Temps:          2       0       0
  7981 ;;      Totals:         2       0       0
  7982 ;;Total ram usage:        2 bytes
  7983 ;; Hardware stack levels used: 1
  7984 ;; Hardware stack levels required when called: 3
  7985 ;; This function calls:
  7986 ;;		_MNovaLletra
  7987 ;;		_TiGetTics
  7988 ;;		_TiResetTics
  7989 ;; This function is called by:
  7990 ;;		_main
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text68
  7995  001200                     __ptext68:
  7996                           	callstack 0
  7997  001200                     _SMotor:
  7998                           	callstack 27
  7999                           
  8000                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8001                           
  8002                           ;incstack = 0
  8003  001200  D0BA               	goto	l6351
  8004  001202                     l6195:
  8005                           
  8006                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8007  001202  2854               	incf	_novaTecla^0,w,c
  8008  001204  E008               	bz	l6203
  8009  001206  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8010  001208  D006               	goto	l6203
  8011                           
  8012                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8013  00120A  503B               	movf	_timerSMS^0,w,c
  8014  00120C  EC76  F00F         	call	_TiResetTics
  8015                           
  8016                           ;Ssms.c: 29:     state = 3;
  8017  001210  0E03               	movlw	3
  8018  001212  6E39               	movwf	SMotor@state^0,c
  8019                           
  8020                           ;Ssms.c: 30:    }
  8021  001214  0C03               	retlw	3
  8022  001216                     l6203:
  8023  001216  2854               	incf	_novaTecla^0,w,c
  8024  001218  A4D8               	btfss	status,2,c
  8025  00121A  0012               	return	
  8026  00121C  503B               	movf	_timerSMS^0,w,c
  8027  00121E  ECDD  F00E         	call	_TiGetTics
  8028  001222  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8029  001224  0012               	return	
  8030  001226  D8BE               	call	PL72	;call to abstracted procedure
  8031  001228  A0D8               	btfss	status,0,c
  8032  00122A  0012               	return	
  8033  00122C  2855               	incf	_lletraASCII^0,w,c
  8034  00122E  A4D8               	btfss	status,2,c
  8035  001230  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8036  001232  0012               	return	
  8037                           
  8038                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8039  001234  5055               	movf	_lletraASCII^0,w,c
  8040  001236  EC76  F000         	call	_MNovaLletra
  8041                           
  8042                           ;Ssms.c: 33:     lletraASCII = -1;
  8043  00123A  6855               	setf	_lletraASCII^0,c
  8044                           
  8045                           ;Ssms.c: 34:     ultimaTecla = -1;
  8046  00123C  6853               	setf	_ultimaTecla^0,c
  8047                           
  8048                           ;Ssms.c: 35:     zeroTecla = 0;
  8049  00123E  6A3A               	clrf	_zeroTecla^0,c
  8050  001240  0012               	return	
  8051  001242                     l6219:
  8052                           
  8053                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8054  001242  5053               	movf	_ultimaTecla^0,w,c
  8055  001244  1854               	xorwf	_novaTecla^0,w,c
  8056  001246  E10C               	bnz	l6227
  8057  001248  503B               	movf	_timerSMS^0,w,c
  8058  00124A  ECDD  F00E         	call	_TiGetTics
  8059  00124E  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8060  001250  D002               	goto	u6610
  8061  001252  D8A8               	call	PL72	;call to abstracted procedure
  8062  001254  E205               	bc	l6227
  8063  001256                     u6610:
  8064                           
  8065                           ;Ssms.c: 40:     novaTecla = -1;
  8066  001256  6854               	setf	_novaTecla^0,c
  8067                           
  8068                           ;Ssms.c: 41:     sumaPulsacions++;
  8069  001258  2A3C               	incf	_sumaPulsacions^0,f,c
  8070                           
  8071                           ;Ssms.c: 42:     lletraASCII++;
  8072  00125A  2A55               	incf	_lletraASCII^0,f,c
  8073                           
  8074                           ;Ssms.c: 43:     state++;
  8075  00125C  2A39               	incf	SMotor@state^0,f,c
  8076                           
  8077                           ;Ssms.c: 44:    }
  8078  00125E  0012               	return	
  8079  001260                     l6227:
  8080  001260  2854               	incf	_novaTecla^0,w,c
  8081  001262  B4D8               	btfsc	status,2,c
  8082  001264  0012               	return	
  8083  001266  5053               	movf	_ultimaTecla^0,w,c
  8084  001268  1854               	xorwf	_novaTecla^0,w,c
  8085  00126A  B4D8               	btfsc	status,2,c
  8086  00126C  0012               	return	
  8087                           
  8088                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8089  00126E  5055               	movf	_lletraASCII^0,w,c
  8090  001270  EC76  F000         	call	_MNovaLletra
  8091                           
  8092                           ;Ssms.c: 47:     if(novaTecla != 0){
  8093  001274  5054               	movf	_novaTecla^0,w,c
  8094  001276  E005               	bz	l6237
  8095                           
  8096                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8097  001278  5054               	movf	_novaTecla^0,w,c
  8098  00127A  0FBA               	addlw	low (_lletraInici+254)
  8099  00127C  ECB6  F007         	call	PL46	;call to abstracted procedure
  8100  001280  D001               	goto	L5
  8101  001282                     l6237:
  8102                           
  8103                           ;Ssms.c: 50:       lletraASCII = '0';
  8104  001282  0E30               	movlw	48
  8105  001284                     L5:
  8106  001284  6E55               	movwf	_lletraASCII^0,c
  8107                           
  8108                           ;Ssms.c: 52:     zeroTecla=0;
  8109  001286  6A3A               	clrf	_zeroTecla^0,c
  8110                           
  8111                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8112  001288  C054  F053         	movff	_novaTecla,_ultimaTecla
  8113                           
  8114                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8115  00128C  6A3C               	clrf	_sumaPulsacions^0,c
  8116                           
  8117                           ;Ssms.c: 55:     novaTecla = -1;
  8118  00128E  6854               	setf	_novaTecla^0,c
  8119                           
  8120                           ;Ssms.c: 56:     state--;
  8121  001290  0639               	decf	SMotor@state^0,f,c
  8122  001292  0012               	return	
  8123  001294                     l6249:
  8124                           
  8125                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8126  001294  0E07               	movlw	7
  8127  001296  1853               	xorwf	_ultimaTecla^0,w,c
  8128  001298  E008               	bz	l6257
  8129  00129A  0E09               	movlw	9
  8130  00129C  1853               	xorwf	_ultimaTecla^0,w,c
  8131  00129E  E005               	bz	l6257
  8132  0012A0  5053               	movf	_ultimaTecla^0,w,c
  8133  0012A2  E003               	bz	l6257
  8134                           
  8135                           ;Ssms.c: 61:     state = 5;
  8136  0012A4  0E05               	movlw	5
  8137  0012A6  6E39               	movwf	SMotor@state^0,c
  8138                           
  8139                           ;Ssms.c: 62:    }
  8140  0012A8  0C05               	retlw	5
  8141  0012AA                     l6257:
  8142  0012AA  0E07               	movlw	7
  8143  0012AC  1853               	xorwf	_ultimaTecla^0,w,c
  8144  0012AE  E003               	bz	u6690
  8145  0012B0  0E09               	movlw	9
  8146  0012B2  1853               	xorwf	_ultimaTecla^0,w,c
  8147  0012B4  E103               	bnz	l6263
  8148  0012B6                     u6690:
  8149                           
  8150                           ;Ssms.c: 64:     state = 6;
  8151  0012B6  0E06               	movlw	6
  8152  0012B8  6E39               	movwf	SMotor@state^0,c
  8153                           
  8154                           ;Ssms.c: 65:    }
  8155  0012BA  0C06               	retlw	6
  8156  0012BC                     l6263:
  8157  0012BC  5053               	movf	_ultimaTecla^0,w,c
  8158  0012BE  A4D8               	btfss	status,2,c
  8159  0012C0  0012               	return	
  8160                           
  8161                           ;Ssms.c: 67:     zeroTecla++;
  8162  0012C2  2A3A               	incf	_zeroTecla^0,f,c
  8163                           
  8164                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8165  0012C4  0E02               	movlw	2
  8166  0012C6  183A               	xorwf	_zeroTecla^0,w,c
  8167  0012C8  E101               	bnz	l6271
  8168  0012CA  6A3A               	clrf	_zeroTecla^0,c
  8169  0012CC                     l6271:
  8170                           
  8171                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8172  0012CC  503A               	movf	_zeroTecla^0,w,c
  8173  0012CE  0F45               	addlw	low _arrayZero
  8174  0012D0  ECB6  F007         	call	PL46	;call to abstracted procedure
  8175  0012D4  6E55               	movwf	_lletraASCII^0,c
  8176  0012D6                     l6273:
  8177                           
  8178                           ;Ssms.c: 70:     state = 0;
  8179  0012D6  6A39               	clrf	SMotor@state^0,c
  8180  0012D8  0012               	return	
  8181  0012DA                     l6275:
  8182                           
  8183                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8184  0012DA  5054               	movf	_novaTecla^0,w,c
  8185  0012DC  0A80               	xorlw	128
  8186  0012DE  0F7E               	addlw	-130
  8187  0012E0  E202               	bc	u6730
  8188  0012E2  5054               	movf	_novaTecla^0,w,c
  8189  0012E4  E107               	bnz	l6283
  8190  0012E6                     u6730:
  8191  0012E6  5054               	movf	_novaTecla^0,w,c
  8192  0012E8  0A80               	xorlw	128
  8193  0012EA  0F76               	addlw	-138
  8194  0012EC  E203               	bc	l6283
  8195                           
  8196                           ;Ssms.c: 75:     state = 1;
  8197  0012EE  0E01               	movlw	1
  8198  0012F0  6E39               	movwf	SMotor@state^0,c
  8199                           
  8200                           ;Ssms.c: 76:    }
  8201  0012F2  0C01               	retlw	1
  8202  0012F4                     l6283:
  8203  0012F4  5054               	movf	_novaTecla^0,w,c
  8204  0012F6  E00C               	bz	l6295
  8205  0012F8  5054               	movf	_novaTecla^0,w,c
  8206  0012FA  0A80               	xorlw	128
  8207  0012FC  0F7E               	addlw	-130
  8208  0012FE  E208               	bc	l6295
  8209  001300  2855               	incf	_lletraASCII^0,w,c
  8210  001302  E106               	bnz	l6295
  8211                           
  8212                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8213  001304  5054               	movf	_novaTecla^0,w,c
  8214  001306  0F30               	addlw	48
  8215  001308  EC76  F000         	call	_MNovaLletra
  8216  00130C                     l6291:
  8217                           
  8218                           ;Ssms.c: 79:     novaTecla = -1;
  8219  00130C  6854               	setf	_novaTecla^0,c
  8220  00130E  D7E3               	goto	l6273
  8221  001310                     l6295:
  8222  001310  5054               	movf	_novaTecla^0,w,c
  8223  001312  B4D8               	btfsc	status,2,c
  8224  001314  0012               	return	
  8225  001316  5054               	movf	_novaTecla^0,w,c
  8226  001318  0A80               	xorlw	128
  8227  00131A  0F7E               	addlw	-130
  8228  00131C  B0D8               	btfsc	status,0,c
  8229  00131E  0012               	return	
  8230  001320  2855               	incf	_lletraASCII^0,w,c
  8231  001322  B4D8               	btfsc	status,2,c
  8232  001324  0012               	return	
  8233                           
  8234                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8235  001326  5055               	movf	_lletraASCII^0,w,c
  8236  001328  EC76  F000         	call	_MNovaLletra
  8237                           
  8238                           ;Ssms.c: 84:     lletraASCII = -1;
  8239  00132C  6855               	setf	_lletraASCII^0,c
  8240                           
  8241                           ;Ssms.c: 85:     state++;
  8242  00132E  2A39               	incf	SMotor@state^0,f,c
  8243  001330  0012               	return	
  8244  001332                     l6307:
  8245                           
  8246                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8247  001332  5054               	movf	_novaTecla^0,w,c
  8248  001334  0F30               	addlw	48
  8249  001336  EC76  F000         	call	_MNovaLletra
  8250  00133A  D7E8               	goto	l6291
  8251  00133C                     l6313:
  8252                           
  8253                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8254  00133C  0E04               	movlw	4
  8255  00133E  183C               	xorwf	_sumaPulsacions^0,w,c
  8256  001340  E108               	bnz	l6321
  8257  001342                     u6810:
  8258                           
  8259                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8260  001342  5053               	movf	_ultimaTecla^0,w,c
  8261  001344  0FBA               	addlw	low (_lletraInici+254)
  8262  001346  6ED9               	movwf	fsr2l,c
  8263  001348  6ADA               	clrf	fsr2h,c
  8264  00134A  50DF               	movf	indf2,w,c
  8265  00134C  6E55               	movwf	_lletraASCII^0,c
  8266                           
  8267                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8268  00134E  6A3C               	clrf	_sumaPulsacions^0,c
  8269  001350  D7C2               	goto	l6273
  8270  001352                     l6321:
  8271  001352  0E03               	movlw	3
  8272  001354  183C               	xorwf	_sumaPulsacions^0,w,c
  8273  001356  E103               	bnz	l6327
  8274  001358                     u6820:
  8275                           
  8276                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8277  001358  5053               	movf	_ultimaTecla^0,w,c
  8278  00135A  0F30               	addlw	48
  8279  00135C  D7BB               	goto	L6
  8280  00135E                     l6327:
  8281  00135E  0E03               	movlw	3
  8282  001360  603C               	cpfslt	_sumaPulsacions^0,c
  8283  001362  0012               	return	
  8284  001364  D7B8               	goto	l6273
  8285  001366                     l6331:
  8286                           
  8287                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8288  001366  0E04               	movlw	4
  8289  001368  183C               	xorwf	_sumaPulsacions^0,w,c
  8290  00136A  E0F6               	bz	u6820
  8291  00136C  0E05               	movlw	5
  8292  00136E  183C               	xorwf	_sumaPulsacions^0,w,c
  8293  001370  E0E8               	bz	u6810
  8294  001372  0E04               	movlw	4
  8295  001374  D7F5               	goto	L7
  8296  001376                     l6351:
  8297  001376  5039               	movf	SMotor@state^0,w,c
  8298  001378  6E6B               	movwf	??_SMotor^0,c
  8299  00137A  6A6C               	clrf	(??_SMotor+1)^0,c
  8300                           
  8301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8302                           ; Switch size 1, requested type "space"
  8303                           ; Number of cases is 1, Range of values is 0 to 0
  8304                           ; switch strategies available:
  8305                           ; Name         Instructions Cycles
  8306                           ; simple_byte            4     3 (average)
  8307                           ;	Chosen strategy is simple_byte
  8308  00137C  506C               	movf	(??_SMotor+1)^0,w,c
  8309  00137E  A4D8               	btfss	status,2,c
  8310  001380  0012               	return	
  8311                           
  8312                           ; Switch size 1, requested type "space"
  8313                           ; Number of cases is 7, Range of values is 0 to 6
  8314                           ; switch strategies available:
  8315                           ; Name         Instructions Cycles
  8316                           ; simple_byte           22    12 (average)
  8317                           ;	Chosen strategy is simple_byte
  8318  001382  506B               	movf	??_SMotor^0,w,c
  8319  001384  E101 D73D          	bz	l6195
  8320  001388  0A01               	xorlw	1	; case 1
  8321  00138A  E101 D75A          	bz	l6219
  8322  00138E  0A03               	xorlw	3	; case 2
  8323  001390  E081               	bz	l6249
  8324  001392  0A01               	xorlw	1	; case 3
  8325  001394  E0A2               	bz	l6275
  8326  001396  0A07               	xorlw	7	; case 4
  8327  001398  E0CC               	bz	l6307
  8328  00139A  0A01               	xorlw	1	; case 5
  8329  00139C  E0CF               	bz	l6313
  8330  00139E  0A03               	xorlw	3	; case 6
  8331  0013A0  E0E2               	bz	l6331
  8332  0013A2  0012               	return		;funcret
  8333  0013A4                     __end_of_SMotor:
  8334                           	callstack 0
  8335  0013A4                     PL72:
  8336                           	callstack 27
  8337  0013A4  0E5A               	movlw	90
  8338  0013A6  5C64               	subwf	?_TiGetTics^0,w,c
  8339  0013A8  0E02               	movlw	2
  8340  0013AA  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8341  0013AC  0012               	return	
  8342  0013AE                     __end_ofPL72:
  8343                           	callstack 0
  8344                           
  8345 ;; *************** function _MNovaLletra *****************
  8346 ;; Defined at:
  8347 ;;		line 35 in file "Menu.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  lletra          1    wreg     unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  lletra          1    5[COMRAM] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1
  8361 ;;      Params:         0       0       0
  8362 ;;      Locals:         1       0       0
  8363 ;;      Temps:          0       0       0
  8364 ;;      Totals:         1       0       0
  8365 ;;Total ram usage:        1 bytes
  8366 ;; Hardware stack levels used: 1
  8367 ;; Hardware stack levels required when called: 2
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_SMotor
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text69
  8376  0000EC                     __ptext69:
  8377                           	callstack 0
  8378  0000EC                     _MNovaLletra:
  8379                           	callstack 27
  8380                           
  8381                           ;incstack = 0
  8382                           ;MNovaLletra@lletra stored from wreg
  8383  0000EC  6E64               	movwf	MNovaLletra@lletra^0,c
  8384                           
  8385                           ;Menu.c: 36:     novaLletra = lletra;
  8386  0000EE  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8387  0000F2  0012               	return		;funcret
  8388  0000F4                     __end_of_MNovaLletra:
  8389                           	callstack 0
  8390                           
  8391 ;; *************** function _Minit *****************
  8392 ;; Defined at:
  8393 ;;		line 28 in file "Menu.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1
  8407 ;;      Params:         0       0       0
  8408 ;;      Locals:         0       0       0
  8409 ;;      Temps:          0       0       0
  8410 ;;      Totals:         0       0       0
  8411 ;;Total ram usage:        0 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; Hardware stack levels required when called: 3
  8414 ;; This function calls:
  8415 ;;		_TiGetTimer
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text70
  8422  0000F4                     __ptext70:
  8423                           	callstack 0
  8424  0000F4                     _Minit:
  8425                           	callstack 27
  8426                           
  8427                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8428                           
  8429                           ;incstack = 0
  8430  0000F4  EC8C  F00E         	call	_TiGetTimer	;wreg free
  8431  0000F8  6E32               	movwf	_timerMenu^0,c
  8432  0000FA  0012               	return		;funcret
  8433  0000FC                     __end_of_Minit:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _LcLCD *****************
  8437 ;; Defined at:
  8438 ;;		line 230 in file "LcTLCD.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1
  8452 ;;      Params:         0       0       0
  8453 ;;      Locals:         0       0       0
  8454 ;;      Temps:          0       0       0
  8455 ;;      Totals:         0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; Hardware stack levels required when called: 6
  8459 ;; This function calls:
  8460 ;;		_LcPutChar
  8461 ;; This function is called by:
  8462 ;;		_main
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text71
  8467  001B1C                     __ptext71:
  8468                           	callstack 0
  8469  001B1C                     _LcLCD:
  8470                           	callstack 24
  8471                           
  8472                           ;LcTLCD.c: 231:     if(nou_s == 1){
  8473                           
  8474                           ;incstack = 0
  8475  001B1C  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8476  001B1E  0012               	return	
  8477                           
  8478                           ;LcTLCD.c: 232:         LcPutChar(*s_ptr);
  8479  001B20  D818               	call	PL34	;call to abstracted procedure
  8480  001B22  64F7               	cpfsgt	tblptrh,c
  8481  001B24  D003               	bra	u4037
  8482  001B26  0008               	tblrd		*
  8483  001B28  50F5               	movf	tablat,w,c
  8484  001B2A  D001               	bra	u4030
  8485  001B2C                     u4037:
  8486  001B2C  D819               	call	PL44	;call to abstracted procedure
  8487  001B2E                     u4030:
  8488  001B2E  ECB6  F00D         	call	_LcPutChar
  8489                           
  8490                           ;LcTLCD.c: 233:         s_ptr++;
  8491  001B32  4A0B               	infsnz	_s_ptr^0,f,c
  8492  001B34  2A0C               	incf	(_s_ptr+1)^0,f,c
  8493                           
  8494                           ;LcTLCD.c: 234:         if(*s_ptr == '\0'){
  8495  001B36  D80D               	call	PL34	;call to abstracted procedure
  8496  001B38  64F7               	cpfsgt	tblptrh,c
  8497  001B3A  D003               	bra	u4047
  8498  001B3C  0008               	tblrd		*
  8499  001B3E  50F5               	movf	tablat,w,c
  8500  001B40  D001               	bra	u4040
  8501  001B42                     u4047:
  8502  001B42  D80E               	call	PL44	;call to abstracted procedure
  8503  001B44                     u4040:
  8504  001B44  0900               	iorlw	0
  8505  001B46  A4D8               	btfss	status,2,c
  8506  001B48  0012               	return	
  8507                           
  8508                           ;LcTLCD.c: 235:             nou_s = 0;
  8509  001B4A  9477               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8510                           
  8511                           ;LcTLCD.c: 236:             s_ptr=0;
  8512  001B4C  6A0B               	clrf	_s_ptr^0,c
  8513  001B4E  6A0C               	clrf	(_s_ptr+1)^0,c
  8514  001B50  0012               	return		;funcret
  8515  001B52                     __end_of_LcLCD:
  8516                           	callstack 0
  8517  001B52                     PL34:
  8518                           	callstack 24
  8519  001B52  C00B  FFF6         	movff	_s_ptr,tblptrl
  8520  001B56  C00C  FFF7         	movff	_s_ptr+1,tblptrh
  8521  001B5A  6AF8               	clrf	tblptru,c
  8522  001B5C  0E01               	movlw	(high __ramtop+-1)
  8523  001B5E  0012               	return	
  8524  001B60                     __end_ofPL34:
  8525                           	callstack 0
  8526  001B60                     PL44:
  8527                           	callstack 24
  8528  001B60  CFF6 FFE1          	movff	tblptrl,fsr1l
  8529  001B64  CFF7 FFE2          	movff	tblptrh,fsr1h
  8530  001B68  50E7               	movf	indf1,w,c
  8531  001B6A  0012               	return	
  8532  001B6C                     __end_ofPL44:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function _LcInit *****************
  8536 ;; Defined at:
  8537 ;;		line 39 in file "LcTLCD.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  rows            1    wreg     unsigned char 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  rows            1   16[COMRAM] unsigned char 
  8542 ;;  i               2   17[COMRAM] int 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1
  8552 ;;      Params:         0       0       0
  8553 ;;      Locals:         3       0       0
  8554 ;;      Temps:          0       0       0
  8555 ;;      Totals:         3       0       0
  8556 ;;Total ram usage:        3 bytes
  8557 ;; Hardware stack levels used: 1
  8558 ;; Hardware stack levels required when called: 4
  8559 ;; This function calls:
  8560 ;;		_CantaIR
  8561 ;;		_EscriuPrimeraOrdre
  8562 ;;		_Espera
  8563 ;;		_TiGetTimer
  8564 ;;		_WaitForBusy
  8565 ;; This function is called by:
  8566 ;;		_main
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text72
  8571  00167C                     __ptext72:
  8572                           	callstack 0
  8573  00167C                     _LcInit:
  8574                           	callstack 26
  8575                           
  8576                           ;incstack = 0
  8577                           ;LcInit@rows stored from wreg
  8578  00167C  6E6F               	movwf	LcInit@rows^0,c
  8579                           
  8580                           ;LcTLCD.c: 45:  int i;;LcTLCD.c: 46:  Timer = TiGetTimer();
  8581  00167E  EC8C  F00E         	call	_TiGetTimer	;wreg free
  8582  001682  6E3D               	movwf	_Timer^0,c
  8583                           
  8584                           ;LcTLCD.c: 47:  Rows = rows;
  8585  001684  C06F  F040         	movff	LcInit@rows,_Rows
  8586                           
  8587                           ;LcTLCD.c: 48:  RowAct = ColumnAct = 0;
  8588  001688  6A3E               	clrf	_ColumnAct^0,c
  8589  00168A  6A3F               	clrf	_RowAct^0,c
  8590                           
  8591                           ;LcTLCD.c: 49:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8592  00168C  9894               	bcf	148,4,c	;volatile
  8593  00168E  9E95               	bcf	149,7,c	;volatile
  8594  001690  9A94               	bcf	148,5,c	;volatile
  8595                           
  8596                           ;LcTLCD.c: 50:  for (i = 0; i < 2; i++) {
  8597  001692  6A70               	clrf	LcInit@i^0,c
  8598  001694  6A71               	clrf	(LcInit@i+1)^0,c
  8599  001696                     l4721:
  8600                           
  8601                           ;LcTLCD.c: 51:   Espera(Timer, 100);
  8602  001696  6A6C               	clrf	(Espera@ms+1)^0,c
  8603  001698  0E64               	movlw	100
  8604  00169A  6E6B               	movwf	Espera@ms^0,c
  8605  00169C  503D               	movf	_Timer^0,w,c
  8606  00169E  EC49  F00F         	call	_Espera
  8607                           
  8608                           ;LcTLCD.c: 54:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8609  0016A2  0E03               	movlw	3
  8610  0016A4  EC7A  F00C         	call	_EscriuPrimeraOrdre
  8611                           
  8612                           ;LcTLCD.c: 55:   Espera(Timer, 5);
  8613  0016A8  6A6C               	clrf	(Espera@ms+1)^0,c
  8614  0016AA  0E05               	movlw	5
  8615  0016AC  6E6B               	movwf	Espera@ms^0,c
  8616  0016AE  503D               	movf	_Timer^0,w,c
  8617  0016B0  EC49  F00F         	call	_Espera
  8618                           
  8619                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8620  0016B4  0E03               	movlw	3
  8621  0016B6  EC7A  F00C         	call	_EscriuPrimeraOrdre
  8622                           
  8623                           ;LcTLCD.c: 57:   Espera(Timer, 1);
  8624  0016BA  D83A               	call	PL62	;call to abstracted procedure
  8625  0016BC  EC49  F00F         	call	_Espera
  8626                           
  8627                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8628  0016C0  0E03               	movlw	3
  8629  0016C2  EC7A  F00C         	call	_EscriuPrimeraOrdre
  8630                           
  8631                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8632  0016C6  D834               	call	PL62	;call to abstracted procedure
  8633  0016C8  EC49  F00F         	call	_Espera
  8634                           
  8635                           ;LcTLCD.c: 62:   EscriuPrimeraOrdre(CURSOR_ON);
  8636  0016CC  0E02               	movlw	2
  8637  0016CE  EC7A  F00C         	call	_EscriuPrimeraOrdre
  8638                           
  8639                           ;LcTLCD.c: 63:   Espera(Timer, 4);
  8640  0016D2  6A6C               	clrf	(Espera@ms+1)^0,c
  8641  0016D4  0E04               	movlw	4
  8642  0016D6  6E6B               	movwf	Espera@ms^0,c
  8643  0016D8  503D               	movf	_Timer^0,w,c
  8644  0016DA  EC49  F00F         	call	_Espera
  8645                           
  8646                           ;LcTLCD.c: 64:   CantaIR(FUNCTION_SET | DISPLAY_CONTROL);
  8647  0016DE  0E28               	movlw	40
  8648  0016E0  EC68  F00F         	call	_CantaIR
  8649                           
  8650                           ;LcTLCD.c: 67:   WaitForBusy(); CantaIR(DISPLAY_CONTROL);
  8651  0016E4  EC1D  F00E         	call	_WaitForBusy	;wreg free
  8652  0016E8  0E08               	movlw	8
  8653  0016EA  EC68  F00F         	call	_CantaIR
  8654                           
  8655                           ;LcTLCD.c: 68:   WaitForBusy(); CantaIR(DISPLAY_CLEAR);
  8656  0016EE  EC1D  F00E         	call	_WaitForBusy	;wreg free
  8657  0016F2  0E01               	movlw	1
  8658  0016F4  EC68  F00F         	call	_CantaIR
  8659                           
  8660                           ;LcTLCD.c: 69:   Espera(Timer,3);
  8661  0016F8  EC44  F00F         	call	PL60	;call to abstracted procedure
  8662  0016FC  EC49  F00F         	call	_Espera
  8663                           
  8664                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(DISPLAY_ON | CURSOR_ON);
  8665  001700  EC1D  F00E         	call	_WaitForBusy	;wreg free
  8666  001704  0E06               	movlw	6
  8667  001706  EC68  F00F         	call	_CantaIR
  8668                           
  8669                           ;LcTLCD.c: 71:   WaitForBusy(); CantaIR(DISPLAY_CONTROL | DISPLAY_ON | CURSOR_ON | DISPL
      +                          AY_CLEAR);
  8670  00170A  EC1D  F00E         	call	_WaitForBusy	;wreg free
  8671  00170E  0E0F               	movlw	15
  8672  001710  EC68  F00F         	call	_CantaIR
  8673                           
  8674                           ;LcTLCD.c: 72:  }
  8675  001714  4A70               	infsnz	LcInit@i^0,f,c
  8676  001716  2A71               	incf	(LcInit@i+1)^0,f,c
  8677  001718  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8678  00171A  D7BD               	goto	l4721
  8679  00171C  5071               	movf	(LcInit@i+1)^0,w,c
  8680  00171E  E103               	bnz	u4010
  8681  001720  0E02               	movlw	2
  8682  001722  5C70               	subwf	LcInit@i^0,w,c
  8683  001724  E3B8               	bnc	l4721
  8684  001726                     u4010:
  8685                           
  8686                           ;LcTLCD.c: 78:     WaitForBusy();
  8687  001726  EC1D  F00E         	call	_WaitForBusy	;wreg free
  8688                           
  8689                           ;LcTLCD.c: 79:  CantaIR(DISPLAY_CONTROL | DISPLAY_ON);
  8690  00172A  0E0C               	movlw	12
  8691  00172C  EF68  F00F         	goto	_CantaIR
  8692  001730                     __end_of_LcInit:
  8693                           	callstack 0
  8694  001730                     PL62:
  8695                           	callstack 26
  8696  001730  6A6C               	clrf	(Espera@ms+1)^0,c
  8697  001732  0E01               	movlw	1
  8698  001734  6E6B               	movwf	Espera@ms^0,c
  8699  001736  503D               	movf	_Timer^0,w,c
  8700  001738  0012               	return	
  8701  00173A                     __end_ofPL62:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function _EscriuPrimeraOrdre *****************
  8705 ;; Defined at:
  8706 ;;		line 214 in file "LcTLCD.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  ordre           1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  ordre           1    6[COMRAM] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1
  8720 ;;      Params:         0       0       0
  8721 ;;      Locals:         1       0       0
  8722 ;;      Temps:          1       0       0
  8723 ;;      Totals:         2       0       0
  8724 ;;Total ram usage:        2 bytes
  8725 ;; Hardware stack levels used: 1
  8726 ;; Hardware stack levels required when called: 2
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_LcInit
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text73
  8735  0018F4                     __ptext73:
  8736                           	callstack 0
  8737  0018F4                     _EscriuPrimeraOrdre:
  8738                           	callstack 27
  8739                           
  8740                           ;incstack = 0
  8741                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8742  0018F4  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8743                           
  8744                           ;LcTLCD.c: 216:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8745  0018F6  9694               	bcf	148,3,c	;volatile
  8746                           
  8747                           ;LcTLCD.c: 217:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8748  0018F8  D82F               	call	PL38	;call to abstracted procedure
  8749  0018FA  888B               	bsf	139,4,c	;volatile
  8750                           
  8751                           ;LcTLCD.c: 218:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8752  0018FC  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8753  0018FE  D003               	goto	u250
  8754  001900  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8755  001902  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8756  001904  D001               	goto	u268
  8757  001906                     u250:
  8758  001906  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8759  001908                     u268:
  8760  001908  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8761  00190A  D82D               	call	PL82	;call to abstracted procedure
  8762  00190C  0BF7               	andlw	-9
  8763  00190E  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8764  001910  6E8B               	movwf	139,c	;volatile
  8765                           
  8766                           ;LcTLCD.c: 219:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8767  001912  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8768  001914  D003               	goto	u270
  8769  001916  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8770  001918  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8771  00191A  D001               	goto	u288
  8772  00191C                     u270:
  8773  00191C  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8774  00191E                     u288:
  8775  00191E  D823               	call	PL82	;call to abstracted procedure
  8776  001920  0BFB               	andlw	-5
  8777  001922  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8778  001924  6E8B               	movwf	139,c	;volatile
  8779                           
  8780                           ;LcTLCD.c: 220:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8781  001926  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8782  001928  D003               	goto	u290
  8783  00192A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8784  00192C  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8785  00192E  D001               	goto	u308
  8786  001930                     u290:
  8787  001930  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8788  001932                     u308:
  8789  001932  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8790  001934  508B               	movf	139,w,c	;volatile
  8791  001936  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8792  001938  0BFD               	andlw	-3
  8793  00193A  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8794  00193C  6E8B               	movwf	139,c	;volatile
  8795                           
  8796                           ;LcTLCD.c: 221:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8797  00193E  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8798  001940  D003               	goto	u310
  8799  001942  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8800  001944  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8801  001946  D001               	goto	u328
  8802  001948                     u310:
  8803  001948  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8804  00194A                     u328:
  8805  00194A  508B               	movf	139,w,c	;volatile
  8806  00194C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8807  00194E  0BFE               	andlw	-2
  8808  001950  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8809  001952  6E8B               	movwf	139,c	;volatile
  8810                           
  8811                           ;LcTLCD.c: 222:  (LATCbits.LATC4 = 0);
  8812  001954  988B               	bcf	139,4,c	;volatile
  8813  001956  0012               	return		;funcret
  8814  001958                     __end_of_EscriuPrimeraOrdre:
  8815                           	callstack 0
  8816  001958                     PL38:
  8817                           	callstack 24
  8818  001958  9494               	bcf	148,2,c	;volatile
  8819  00195A  9294               	bcf	148,1,c	;volatile
  8820  00195C  9094               	bcf	148,0,c	;volatile
  8821  00195E  9A8B               	bcf	139,5,c	;volatile
  8822  001960  9E8C               	bcf	140,7,c	;volatile
  8823  001962  888B               	bsf	139,4,c	;volatile
  8824  001964  0012               	return	
  8825  001966                     __end_ofPL38:
  8826                           	callstack 0
  8827  001966                     PL82:
  8828                           	callstack 27
  8829  001966  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8830  001968  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8831  00196A  508B               	movf	139,w,c	;volatile
  8832  00196C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8833  00196E  0012               	return	
  8834  001970                     __end_ofPL82:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _JoystickMotor *****************
  8838 ;; Defined at:
  8839 ;;		line 18 in file "Joystick.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1
  8853 ;;      Params:         0       0       0
  8854 ;;      Locals:         0       0       0
  8855 ;;      Temps:          2       0       0
  8856 ;;      Totals:         2       0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 3
  8860 ;; This function calls:
  8861 ;;		_MNouJoystick
  8862 ;; This function is called by:
  8863 ;;		_main
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text74
  8868  0015A6                     __ptext74:
  8869                           	callstack 0
  8870  0015A6                     _JoystickMotor:
  8871                           	callstack 27
  8872                           
  8873                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8874                           
  8875                           ;incstack = 0
  8876  0015A6  D056               	goto	l3247
  8877  0015A8                     l1052:
  8878                           
  8879                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8880  0015A8  B2C2               	btfsc	194,1,c	;volatile
  8881  0015AA  D00B               	goto	l1053
  8882  0015AC  0EC8               	movlw	200
  8883  0015AE  60C4               	cpfslt	196,c	;volatile
  8884  0015B0  D008               	goto	l1053
  8885  0015B2  0E32               	movlw	50
  8886  0015B4  64C4               	cpfsgt	196,c	;volatile
  8887  0015B6  D005               	goto	l1053
  8888                           
  8889                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8890  0015B8  0E07               	movlw	7
  8891  0015BA  6EC2               	movwf	194,c	;volatile
  8892                           
  8893                           ;Joystick.c: 24:                 cap1 = 1;
  8894  0015BC  8076               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8895  0015BE                     l3177:
  8896                           
  8897                           ;Joystick.c: 25:     state++;
  8898  0015BE  2A17               	incf	JoystickMotor@state^0,f,c
  8899                           
  8900                           ;Joystick.c: 26:    }
  8901  0015C0  D052               	goto	l1060
  8902  0015C2                     l1053:
  8903  0015C2  B2C2               	btfsc	194,1,c	;volatile
  8904  0015C4  D00F               	goto	l1055
  8905  0015C6  0EC7               	movlw	199
  8906  0015C8  64C4               	cpfsgt	196,c	;volatile
  8907  0015CA  D00C               	goto	l1055
  8908                           
  8909                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8910  0015CC  0E02               	movlw	2
  8911  0015CE  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8912  0015D0  E003               	bz	l3185
  8913  0015D2  0E02               	movlw	2
  8914  0015D4  EC7E  F000         	call	_MNouJoystick
  8915  0015D8                     l3185:
  8916                           
  8917                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8918  0015D8  0E02               	movlw	2
  8919  0015DA  6E18               	movwf	_ultimaTeclaAD^0,c
  8920                           
  8921                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8922  0015DC  0E07               	movlw	7
  8923  0015DE  6EC2               	movwf	194,c	;volatile
  8924                           
  8925                           ;Joystick.c: 31:                 cap1 = 0;
  8926  0015E0  9076               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8927  0015E2  D7ED               	goto	l3177
  8928  0015E4                     l1055:
  8929  0015E4  B2C2               	btfsc	194,1,c	;volatile
  8930  0015E6  D03F               	goto	l1060
  8931  0015E8  0E33               	movlw	51
  8932  0015EA  60C4               	cpfslt	196,c	;volatile
  8933  0015EC  D03C               	goto	l1060
  8934                           
  8935                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8936  0015EE  0E08               	movlw	8
  8937  0015F0  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8938  0015F2  E003               	bz	l3199
  8939  0015F4  0E08               	movlw	8
  8940  0015F6  EC7E  F000         	call	_MNouJoystick
  8941  0015FA                     l3199:
  8942                           
  8943                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8944  0015FA  0E08               	movlw	8
  8945  0015FC  D7EE               	goto	L8
  8946  0015FE                     l1061:
  8947                           
  8948                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8949  0015FE  B2C2               	btfsc	194,1,c	;volatile
  8950  001600  D00B               	goto	l1062
  8951  001602  0EC8               	movlw	200
  8952  001604  60C4               	cpfslt	196,c	;volatile
  8953  001606  D008               	goto	l1062
  8954  001608  0E32               	movlw	50
  8955  00160A  64C4               	cpfsgt	196,c	;volatile
  8956  00160C  D005               	goto	l1062
  8957                           
  8958                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8959  00160E  0E03               	movlw	3
  8960  001610  6EC2               	movwf	194,c	;volatile
  8961                           
  8962                           ;Joystick.c: 45:                 cap2 = 1;
  8963  001612  8E75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8964  001614                     l3215:
  8965                           
  8966                           ;Joystick.c: 46:     state--;
  8967  001614  0617               	decf	JoystickMotor@state^0,f,c
  8968                           
  8969                           ;Joystick.c: 47:    }
  8970  001616  D027               	goto	l1060
  8971  001618                     l1062:
  8972  001618  B2C2               	btfsc	194,1,c	;volatile
  8973  00161A  D00F               	goto	l1064
  8974  00161C  0EC7               	movlw	199
  8975  00161E  64C4               	cpfsgt	196,c	;volatile
  8976  001620  D00C               	goto	l1064
  8977                           
  8978                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8979  001622  0E06               	movlw	6
  8980  001624  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8981  001626  E003               	bz	l3223
  8982  001628  0E06               	movlw	6
  8983  00162A  EC7E  F000         	call	_MNouJoystick
  8984  00162E                     l3223:
  8985                           
  8986                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8987  00162E  0E06               	movlw	6
  8988  001630  6E18               	movwf	_ultimaTeclaAD^0,c
  8989                           
  8990                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8991  001632  0E03               	movlw	3
  8992  001634  6EC2               	movwf	194,c	;volatile
  8993                           
  8994                           ;Joystick.c: 52:                 cap2 = 0;
  8995  001636  9E75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8996  001638  D7ED               	goto	l3215
  8997  00163A                     l1064:
  8998  00163A  B2C2               	btfsc	194,1,c	;volatile
  8999  00163C  D014               	goto	l1060
  9000  00163E  0E33               	movlw	51
  9001  001640  60C4               	cpfslt	196,c	;volatile
  9002  001642  D011               	goto	l1060
  9003                           
  9004                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9005  001644  0E04               	movlw	4
  9006  001646  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9007  001648  E003               	bz	l3237
  9008  00164A  0E04               	movlw	4
  9009  00164C  EC7E  F000         	call	_MNouJoystick
  9010  001650                     l3237:
  9011                           
  9012                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9013  001650  0E04               	movlw	4
  9014  001652  D7EE               	goto	L9
  9015  001654                     l3247:
  9016  001654  5017               	movf	JoystickMotor@state^0,w,c
  9017  001656  6E65               	movwf	??_JoystickMotor^0,c
  9018  001658  6A66               	clrf	(??_JoystickMotor+1)^0,c
  9019                           
  9020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9021                           ; Switch size 1, requested type "space"
  9022                           ; Number of cases is 1, Range of values is 0 to 0
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte            4     3 (average)
  9026                           ;	Chosen strategy is simple_byte
  9027  00165A  5066               	movf	(??_JoystickMotor+1)^0,w,c
  9028  00165C  E104               	bnz	l1060
  9029                           
  9030                           ; Switch size 1, requested type "space"
  9031                           ; Number of cases is 2, Range of values is 0 to 1
  9032                           ; switch strategies available:
  9033                           ; Name         Instructions Cycles
  9034                           ; simple_byte            7     4 (average)
  9035                           ;	Chosen strategy is simple_byte
  9036  00165E  5065               	movf	??_JoystickMotor^0,w,c
  9037  001660  E0A3               	bz	l1052
  9038  001662  0A01               	xorlw	1	; case 1
  9039  001664  E0CC               	bz	l1061
  9040  001666                     l1060:
  9041                           
  9042                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9043  001666  B076               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  9044  001668  AE75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9045  00166A  0012               	return	
  9046  00166C  5018               	movf	_ultimaTeclaAD^0,w,c
  9047  00166E  B4D8               	btfsc	status,2,c
  9048  001670  0012               	return	
  9049                           
  9050                           ;Joystick.c: 66:         MNouJoystick(-1);
  9051  001672  0EFF               	movlw	255
  9052  001674  EC7E  F000         	call	_MNouJoystick
  9053                           
  9054                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9055  001678  6818               	setf	_ultimaTeclaAD^0,c
  9056  00167A  0012               	return		;funcret
  9057  00167C                     __end_of_JoystickMotor:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _MNouJoystick *****************
  9061 ;; Defined at:
  9062 ;;		line 38 in file "Menu.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  posicio         1    wreg     char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  posicio         1    5[COMRAM] char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1
  9076 ;;      Params:         0       0       0
  9077 ;;      Locals:         1       0       0
  9078 ;;      Temps:          0       0       0
  9079 ;;      Totals:         1       0       0
  9080 ;;Total ram usage:        1 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; Hardware stack levels required when called: 2
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_JoystickMotor
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text75
  9091  0000FC                     __ptext75:
  9092                           	callstack 0
  9093  0000FC                     _MNouJoystick:
  9094                           	callstack 27
  9095                           
  9096                           ;incstack = 0
  9097                           ;MNouJoystick@posicio stored from wreg
  9098  0000FC  6E64               	movwf	MNouJoystick@posicio^0,c
  9099                           
  9100                           ;Menu.c: 39:     novaDireccio = posicio;
  9101  0000FE  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9102  000102  0012               	return		;funcret
  9103  000104                     __end_of_MNouJoystick:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _JoystickInit *****************
  9107 ;; Defined at:
  9108 ;;		line 12 in file "Joystick.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;		None
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1
  9122 ;;      Params:         0       0       0
  9123 ;;      Locals:         0       0       0
  9124 ;;      Temps:          0       0       0
  9125 ;;      Totals:         0       0       0
  9126 ;;Total ram usage:        0 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 2
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_main
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text76
  9137  001F7A                     __ptext76:
  9138                           	callstack 0
  9139  001F7A                     _JoystickInit:
  9140                           	callstack 28
  9141                           
  9142                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9143                           
  9144                           ;incstack = 0
  9145  001F7A  0E01               	movlw	1
  9146  001F7C  6EC2               	movwf	194,c	;volatile
  9147                           
  9148                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9149  001F7E  0E0D               	movlw	13
  9150  001F80  6EC1               	movwf	193,c	;volatile
  9151                           
  9152                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9153  001F82  0E09               	movlw	9
  9154  001F84  6EC0               	movwf	192,c	;volatile
  9155                           
  9156                           ;Joystick.c: 16:     ADRESH = 127;
  9157  001F86  0E7F               	movlw	127
  9158  001F88  6EC4               	movwf	196,c	;volatile
  9159  001F8A  0C7F               	retlw	127	;funcret
  9160  001F8C                     __end_of_JoystickInit:
  9161                           	callstack 0
  9162                           
  9163 ;; *************** function _GLCDMotor *****************
  9164 ;; Defined at:
  9165 ;;		line 36 in file "GestioLCD.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;		None
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;		None
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1
  9179 ;;      Params:         0       0       0
  9180 ;;      Locals:         0       0       0
  9181 ;;      Temps:          2       0       0
  9182 ;;      Totals:         2       0       0
  9183 ;;Total ram usage:        2 bytes
  9184 ;; Hardware stack levels used: 1
  9185 ;; Hardware stack levels required when called: 6
  9186 ;; This function calls:
  9187 ;;		_LcClear
  9188 ;;		_LcGotoXY
  9189 ;;		_LcLliure
  9190 ;;		_LcNewString
  9191 ;;		_LcPutChar
  9192 ;;		_TiGetTics
  9193 ;;		_TiResetTics
  9194 ;; This function is called by:
  9195 ;;		_main
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text77
  9200  000F74                     __ptext77:
  9201                           	callstack 0
  9202  000F74                     _GLCDMotor:
  9203                           	callstack 24
  9204                           
  9205                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9206                           
  9207                           ;incstack = 0
  9208  000F74  D105               	goto	l5059
  9209  000F76                     l4883:
  9210                           
  9211                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == one) {
  9212  000F76  0E11               	movlw	17
  9213  000F78  601A               	cpfslt	GLCDMotor@length1^0,c
  9214  000F7A  D010               	goto	l4893
  9215  000F7C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9216  000F7E  D00E               	goto	l4893
  9217                           
  9218                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9219  000F80  0E00               	movlw	0
  9220  000F82  6E6C               	movwf	LcGotoXY@Row^0,c
  9221  000F84  EC72  F00E         	call	_LcGotoXY
  9222                           
  9223                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9224  000F88  D92C               	call	PL6	;call to abstracted procedure
  9225  000F8A  6E73               	movwf	??_GLCDMotor^0,c
  9226  000F8C  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9227  000F90  D92D               	call	PL12	;call to abstracted procedure
  9228  000F92  EC2D  F000         	call	_LcNewString	;wreg free
  9229                           
  9230                           ;GestioLCD.c: 53:     state = 5;
  9231  000F96  0E05               	movlw	5
  9232  000F98  6E20               	movwf	GLCDMotor@state^0,c
  9233                           
  9234                           ;GestioLCD.c: 54:    }
  9235  000F9A  0C05               	retlw	5
  9236  000F9C                     l4893:
  9237  000F9C  0E10               	movlw	16
  9238  000F9E  641A               	cpfsgt	GLCDMotor@length1^0,c
  9239  000FA0  0C10               	retlw	16
  9240  000FA2  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9241  000FA4  0C10               	retlw	16
  9242  000FA6                     u4190:
  9243                           
  9244                           ;GestioLCD.c: 56:     state++;
  9245  000FA6  2A20               	incf	GLCDMotor@state^0,f,c
  9246  000FA8  0012               	return	
  9247  000FAA                     l4899:
  9248                           
  9249                           ;GestioLCD.c: 60:    if (j>=16) {
  9250  000FAA  0E0F               	movlw	15
  9251  000FAC  641F               	cpfsgt	GLCDMotor@j^0,c
  9252  000FAE  D014               	goto	l4913
  9253                           
  9254                           ;GestioLCD.c: 61:     min1++;
  9255  000FB0  2A1E               	incf	GLCDMotor@min1^0,f,c
  9256                           
  9257                           ;GestioLCD.c: 62:     max1++;
  9258  000FB2  2A4E               	incf	GLCDMotor@max1^0,f,c
  9259                           
  9260                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9261  000FB4  D916               	call	PL6	;call to abstracted procedure
  9262  000FB6  244E               	addwf	GLCDMotor@max1^0,w,c
  9263  000FB8  6E73               	movwf	??_GLCDMotor^0,c
  9264  000FBA  D908               	call	PL2	;call to abstracted procedure
  9265  000FBC  E101               	bnz	l4907
  9266  000FBE  6A4E               	clrf	GLCDMotor@max1^0,c
  9267  000FC0                     l4907:
  9268                           
  9269                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9270  000FC0  D910               	call	PL6	;call to abstracted procedure
  9271  000FC2  241E               	addwf	GLCDMotor@min1^0,w,c
  9272  000FC4  6E73               	movwf	??_GLCDMotor^0,c
  9273  000FC6  D902               	call	PL2	;call to abstracted procedure
  9274  000FC8  E101               	bnz	l986
  9275  000FCA  6A1E               	clrf	GLCDMotor@min1^0,c
  9276  000FCC                     l986:
  9277                           
  9278                           ;GestioLCD.c: 65:     j=0;
  9279  000FCC  6A1F               	clrf	GLCDMotor@j^0,c
  9280                           
  9281                           ;GestioLCD.c: 66:     k1=min1;
  9282  000FCE  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9283                           
  9284                           ;GestioLCD.c: 67:     state = 6;
  9285  000FD2  0E06               	movlw	6
  9286  000FD4  6E20               	movwf	GLCDMotor@state^0,c
  9287                           
  9288                           ;GestioLCD.c: 68:    }
  9289  000FD6  0C06               	retlw	6
  9290  000FD8                     l4913:
  9291                           
  9292                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9293  000FD8  0E00               	movlw	0
  9294  000FDA  6E6C               	movwf	LcGotoXY@Row^0,c
  9295  000FDC  501F               	movf	GLCDMotor@j^0,w,c
  9296  000FDE  EC72  F00E         	call	_LcGotoXY
  9297                           
  9298                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9299  000FE2  D8FF               	call	PL6	;call to abstracted procedure
  9300  000FE4  241C               	addwf	GLCDMotor@k1^0,w,c
  9301  000FE6  6E73               	movwf	??_GLCDMotor^0,c
  9302  000FE8  D8F1               	call	PL2	;call to abstracted procedure
  9303  000FEA  ECB6  F00D         	call	_LcPutChar
  9304                           
  9305                           ;GestioLCD.c: 72:     j++;
  9306  000FEE  2A1F               	incf	GLCDMotor@j^0,f,c
  9307                           
  9308                           ;GestioLCD.c: 73:     k1++;
  9309  000FF0  2A1C               	incf	GLCDMotor@k1^0,f,c
  9310                           
  9311                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9312  000FF2  D8F7               	call	PL6	;call to abstracted procedure
  9313  000FF4  241C               	addwf	GLCDMotor@k1^0,w,c
  9314  000FF6  6E73               	movwf	??_GLCDMotor^0,c
  9315  000FF8  D8E9               	call	PL2	;call to abstracted procedure
  9316  000FFA  B4D8               	btfsc	status,2,c
  9317  000FFC  6A1C               	clrf	GLCDMotor@k1^0,c
  9318  000FFE  0012               	return	
  9319  001000                     l4925:
  9320                           
  9321                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9322  001000  0E04               	movlw	4
  9323  001002  6021               	cpfslt	_menuDaltGLCD^0,c
  9324  001004  D001               	goto	l990
  9325  001006  D7CF               	goto	u4190
  9326  001008                     l990:
  9327                           
  9328                           ;GestioLCD.c: 82:     state = 0;
  9329  001008  6A20               	clrf	GLCDMotor@state^0,c
  9330  00100A  0012               	return	
  9331  00100C                     l4929:
  9332                           
  9333                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9334  00100C  EC33  F000         	call	_LcLliure	;wreg free
  9335  001010  E306               	bnc	l4935
  9336  001012  0E04               	movlw	4
  9337  001014  6021               	cpfslt	_menuDaltGLCD^0,c
  9338  001016  D003               	goto	l4935
  9339                           
  9340                           ;GestioLCD.c: 87:     state = 7;
  9341  001018  0E07               	movlw	7
  9342  00101A  6E20               	movwf	GLCDMotor@state^0,c
  9343                           
  9344                           ;GestioLCD.c: 88:    }
  9345  00101C  0C07               	retlw	7
  9346  00101E                     l4935:
  9347  00101E  EC33  F000         	call	_LcLliure	;wreg free
  9348  001022  A0D8               	btfss	status,0,c
  9349  001024  0012               	return	
  9350  001026  0E03               	movlw	3
  9351  001028  6421               	cpfsgt	_menuDaltGLCD^0,c
  9352  00102A  0C03               	retlw	3
  9353  00102C  D7ED               	goto	l990
  9354  00102E                     l996:
  9355                           
  9356                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == one) {
  9357  00102E  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9358  001030  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9359  001032  0012               	return	
  9360                           
  9361                           ;GestioLCD.c: 95:     length1 = 0;
  9362  001034  6A1A               	clrf	GLCDMotor@length1^0,c
  9363                           
  9364                           ;GestioLCD.c: 96:     length2 = 0;
  9365  001036  6A19               	clrf	GLCDMotor@length2^0,c
  9366                           
  9367                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9368  001038  0E00               	movlw	0
  9369  00103A  6E6C               	movwf	LcGotoXY@Row^0,c
  9370  00103C  EC72  F00E         	call	_LcGotoXY
  9371                           
  9372                           ;GestioLCD.c: 98:     min1 = 0;
  9373  001040  6A1E               	clrf	GLCDMotor@min1^0,c
  9374                           
  9375                           ;GestioLCD.c: 99:     max1 = 15;
  9376  001042  0E0F               	movlw	15
  9377  001044  6E4E               	movwf	GLCDMotor@max1^0,c
  9378                           
  9379                           ;GestioLCD.c: 100:     min2 = 0;
  9380  001046  6A1D               	clrf	GLCDMotor@min2^0,c
  9381                           
  9382                           ;GestioLCD.c: 101:     max2 = 15;
  9383  001048  0E0F               	movlw	15
  9384  00104A  6E4D               	movwf	GLCDMotor@max2^0,c
  9385                           
  9386                           ;GestioLCD.c: 102:     j = 0;
  9387  00104C  6A1F               	clrf	GLCDMotor@j^0,c
  9388                           
  9389                           ;GestioLCD.c: 103:     k1 = 0;
  9390  00104E  6A1C               	clrf	GLCDMotor@k1^0,c
  9391                           
  9392                           ;GestioLCD.c: 104:     k2 = 0;
  9393  001050  6A1B               	clrf	GLCDMotor@k2^0,c
  9394                           
  9395                           ;GestioLCD.c: 105:     newString = 0;
  9396  001052  9276               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9397  001054  D7A8               	goto	u4190
  9398  001056                     l4965:
  9399                           
  9400                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9401  001056  D8C5               	call	PL6	;call to abstracted procedure
  9402  001058  241A               	addwf	GLCDMotor@length1^0,w,c
  9403  00105A  6E73               	movwf	??_GLCDMotor^0,c
  9404  00105C  D8B7               	call	PL2	;call to abstracted procedure
  9405  00105E  E104               	bnz	l4971
  9406  001060  0E03               	movlw	3
  9407  001062  6421               	cpfsgt	_menuDaltGLCD^0,c
  9408  001064  D001               	goto	l4971
  9409  001066  D79F               	goto	u4190
  9410  001068                     l4971:
  9411  001068  D8BC               	call	PL6	;call to abstracted procedure
  9412  00106A  241A               	addwf	GLCDMotor@length1^0,w,c
  9413  00106C  6E73               	movwf	??_GLCDMotor^0,c
  9414  00106E  D8AE               	call	PL2	;call to abstracted procedure
  9415  001070  E002               	bz	l4975
  9416                           
  9417                           ;GestioLCD.c: 114:     length1++;
  9418  001072  2A1A               	incf	GLCDMotor@length1^0,f,c
  9419                           
  9420                           ;GestioLCD.c: 115:    }
  9421  001074  0012               	return	
  9422  001076                     l4975:
  9423  001076  0E04               	movlw	4
  9424  001078  6021               	cpfslt	_menuDaltGLCD^0,c
  9425  00107A  0C04               	retlw	4
  9426  00107C  D8B2               	call	PL6	;call to abstracted procedure
  9427  00107E  241A               	addwf	GLCDMotor@length1^0,w,c
  9428  001080  6E73               	movwf	??_GLCDMotor^0,c
  9429  001082  D8A4               	call	PL2	;call to abstracted procedure
  9430  001084  A4D8               	btfss	status,2,c
  9431  001086  0012               	return	
  9432                           
  9433                           ;GestioLCD.c: 117:     state = 13;
  9434  001088  0E0D               	movlw	13
  9435  00108A  6E20               	movwf	GLCDMotor@state^0,c
  9436  00108C  0C0D               	retlw	13
  9437  00108E                     l4981:
  9438                           
  9439                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == one) {
  9440  00108E  0E11               	movlw	17
  9441  001090  6019               	cpfslt	GLCDMotor@length2^0,c
  9442  001092  D015               	goto	l4991
  9443  001094  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9444  001096  D013               	goto	l4991
  9445                           
  9446                           ;GestioLCD.c: 122:     LcGotoXY(0,one);
  9447  001098  ECDF  F004         	call	PL32	;call to abstracted procedure
  9448  00109C  EC72  F00E         	call	_LcGotoXY
  9449                           
  9450                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+one]);
  9451  0010A0  5021               	movf	_menuDaltGLCD^0,w,c
  9452  0010A2  0D1D               	mullw	29
  9453  0010A4  CFF3 F073          	movff	prodl,??_GLCDMotor
  9454  0010A8  0E1D               	movlw	29
  9455  0010AA  2673               	addwf	??_GLCDMotor^0,f,c
  9456  0010AC  5073               	movf	??_GLCDMotor^0,w,c
  9457  0010AE  0F01               	addlw	low _menuList
  9458  0010B0  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9459  0010B2  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9460  0010B6  D89A               	call	PL12	;call to abstracted procedure
  9461  0010B8  EC2D  F000         	call	_LcNewString	;wreg free
  9462  0010BC  D774               	goto	u4190
  9463  0010BE                     l4991:
  9464  0010BE  0E10               	movlw	16
  9465  0010C0  6419               	cpfsgt	GLCDMotor@length2^0,c
  9466  0010C2  0C10               	retlw	16
  9467  0010C4  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9468  0010C6  0C10               	retlw	16
  9469                           
  9470                           ;GestioLCD.c: 127:     state = 9;
  9471  0010C8  0E09               	movlw	9
  9472  0010CA  6E20               	movwf	GLCDMotor@state^0,c
  9473  0010CC  0C09               	retlw	9
  9474  0010CE                     l4997:
  9475                           
  9476                           ;GestioLCD.c: 131:    if (j<16) {
  9477  0010CE  0E10               	movlw	16
  9478  0010D0  601F               	cpfslt	GLCDMotor@j^0,c
  9479  0010D2  D014               	goto	l5011
  9480                           
  9481                           ;GestioLCD.c: 132:     LcGotoXY(j,one);
  9482  0010D4  0E01               	movlw	1
  9483  0010D6  6E6C               	movwf	LcGotoXY@Row^0,c
  9484  0010D8  501F               	movf	GLCDMotor@j^0,w,c
  9485  0010DA  EC72  F00E         	call	_LcGotoXY
  9486                           
  9487                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+one][k2]);
  9488  0010DE  D881               	call	PL6	;call to abstracted procedure
  9489  0010E0  241B               	addwf	GLCDMotor@k2^0,w,c
  9490  0010E2  D87B               	call	PL4	;call to abstracted procedure
  9491  0010E4  D873               	call	PL2	;call to abstracted procedure
  9492  0010E6  ECB6  F00D         	call	_LcPutChar
  9493                           
  9494                           ;GestioLCD.c: 134:     j++;
  9495  0010EA  2A1F               	incf	GLCDMotor@j^0,f,c
  9496                           
  9497                           ;GestioLCD.c: 135:     k2++;
  9498  0010EC  2A1B               	incf	GLCDMotor@k2^0,f,c
  9499                           
  9500                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+one][k2] == '\0') k2 = 0;
  9501  0010EE  D879               	call	PL6	;call to abstracted procedure
  9502  0010F0  241B               	addwf	GLCDMotor@k2^0,w,c
  9503  0010F2  D873               	call	PL4	;call to abstracted procedure
  9504  0010F4  D86B               	call	PL2	;call to abstracted procedure
  9505  0010F6  B4D8               	btfsc	status,2,c
  9506  0010F8  6A1B               	clrf	GLCDMotor@k2^0,c
  9507  0010FA  0012               	return	
  9508  0010FC                     l5011:
  9509                           
  9510                           ;GestioLCD.c: 139:     min2++;
  9511  0010FC  2A1D               	incf	GLCDMotor@min2^0,f,c
  9512                           
  9513                           ;GestioLCD.c: 140:     max2++;
  9514  0010FE  2A4D               	incf	GLCDMotor@max2^0,f,c
  9515                           
  9516                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+one][max2] == '\0') max2=0;
  9517  001100  D870               	call	PL6	;call to abstracted procedure
  9518  001102  244D               	addwf	GLCDMotor@max2^0,w,c
  9519  001104  D86A               	call	PL4	;call to abstracted procedure
  9520  001106  D862               	call	PL2	;call to abstracted procedure
  9521  001108  E101               	bnz	l5017
  9522  00110A  6A4D               	clrf	GLCDMotor@max2^0,c
  9523  00110C                     l5017:
  9524                           
  9525                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+one][min2] == '\0') min2=0;
  9526  00110C  D86A               	call	PL6	;call to abstracted procedure
  9527  00110E  241D               	addwf	GLCDMotor@min2^0,w,c
  9528  001110  D864               	call	PL4	;call to abstracted procedure
  9529  001112  D85C               	call	PL2	;call to abstracted procedure
  9530  001114  E101               	bnz	l1013
  9531  001116  6A1D               	clrf	GLCDMotor@min2^0,c
  9532  001118                     l1013:
  9533                           
  9534                           ;GestioLCD.c: 143:     j=0;
  9535  001118  6A1F               	clrf	GLCDMotor@j^0,c
  9536                           
  9537                           ;GestioLCD.c: 144:     k2=min2;
  9538  00111A  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9539  00111E  D743               	goto	u4190
  9540  001120                     l5023:
  9541                           
  9542                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == on
      +                          e) {
  9543  001120  5022               	movf	_timerGLCD^0,w,c
  9544  001122  ECDD  F00E         	call	_TiGetTics
  9545  001126  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9546  001128  D00A               	goto	l1015
  9547  00112A  D865               	call	PL66	;call to abstracted procedure
  9548  00112C  E308               	bnc	l1015
  9549  00112E  A276               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9550  001130  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9551  001132  D005               	goto	l1015
  9552                           
  9553                           ;GestioLCD.c: 150:     LcClear();
  9554  001134  EC38  F00F         	call	_LcClear	;wreg free
  9555  001138                     l5031:
  9556                           
  9557                           ;GestioLCD.c: 151:     state = 2;
  9558  001138  0E02               	movlw	2
  9559  00113A  6E20               	movwf	GLCDMotor@state^0,c
  9560                           
  9561                           ;GestioLCD.c: 152:    }
  9562  00113C  0C02               	retlw	2
  9563  00113E                     l1015:
  9564  00113E  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9565  001140  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9566  001142  0012               	return	
  9567                           
  9568                           ;GestioLCD.c: 154:     LcClear();
  9569  001144  EC38  F00F         	call	_LcClear	;wreg free
  9570  001148  D75F               	goto	l990
  9571  00114A                     l5039:
  9572                           
  9573                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9574  00114A  5022               	movf	_timerGLCD^0,w,c
  9575  00114C  EC76  F00F         	call	_TiResetTics
  9576  001150  D72A               	goto	u4190
  9577  001152                     l5043:
  9578                           
  9579                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9580  001152  EC33  F000         	call	_LcLliure	;wreg free
  9581  001156  A0D8               	btfss	status,0,c
  9582  001158  0012               	return	
  9583                           
  9584                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9585  00115A  5022               	movf	_timerGLCD^0,w,c
  9586  00115C  EC76  F00F         	call	_TiResetTics
  9587                           
  9588                           ;GestioLCD.c: 165:     state = 11;
  9589  001160  0E0B               	movlw	11
  9590  001162  6E20               	movwf	GLCDMotor@state^0,c
  9591  001164  0C0B               	retlw	11
  9592  001166                     l5049:
  9593                           
  9594                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+one][length2] != '\0') {
  9595  001166  D83D               	call	PL6	;call to abstracted procedure
  9596  001168  2419               	addwf	GLCDMotor@length2^0,w,c
  9597  00116A  D837               	call	PL4	;call to abstracted procedure
  9598  00116C  D82F               	call	PL2	;call to abstracted procedure
  9599  00116E  E002               	bz	l5053
  9600                           
  9601                           ;GestioLCD.c: 170:     length2++;
  9602  001170  2A19               	incf	GLCDMotor@length2^0,f,c
  9603                           
  9604                           ;GestioLCD.c: 171:    }
  9605  001172  0012               	return	
  9606  001174                     l5053:
  9607  001174  D836               	call	PL6	;call to abstracted procedure
  9608  001176  2419               	addwf	GLCDMotor@length2^0,w,c
  9609  001178  D830               	call	PL4	;call to abstracted procedure
  9610  00117A  D828               	call	PL2	;call to abstracted procedure
  9611  00117C  E0DD               	bz	l5031
  9612  00117E  0012               	return	
  9613  001180                     l5059:
  9614  001180  5020               	movf	GLCDMotor@state^0,w,c
  9615  001182  6E73               	movwf	??_GLCDMotor^0,c
  9616  001184  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9617                           
  9618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9619                           ; Switch size 1, requested type "space"
  9620                           ; Number of cases is 1, Range of values is 0 to 0
  9621                           ; switch strategies available:
  9622                           ; Name         Instructions Cycles
  9623                           ; simple_byte            4     3 (average)
  9624                           ;	Chosen strategy is simple_byte
  9625  001186  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9626  001188  A4D8               	btfss	status,2,c
  9627  00118A  0012               	return	
  9628                           
  9629                           ; Switch size 1, requested type "space"
  9630                           ; Number of cases is 12, Range of values is 0 to 13
  9631                           ; switch strategies available:
  9632                           ; Name         Instructions Cycles
  9633                           ; simple_byte           37    19 (average)
  9634                           ;	Chosen strategy is simple_byte
  9635  00118C  5073               	movf	??_GLCDMotor^0,w,c
  9636  00118E  E101 D74E          	bz	l996
  9637  001192  0A01               	xorlw	1	; case 1
  9638  001194  E101 D75F          	bz	l4965
  9639  001198  0A03               	xorlw	3	; case 2
  9640  00119A  E101 D6EC          	bz	l4883
  9641  00119E  0A01               	xorlw	1	; case 3
  9642  0011A0  E101 D703          	bz	l4899
  9643  0011A4  0A06               	xorlw	6	; case 5
  9644  0011A6  E101 D731          	bz	l4929
  9645  0011AA  0A03               	xorlw	3	; case 6
  9646  0011AC  E101 D728          	bz	l4925
  9647  0011B0  0A01               	xorlw	1	; case 7
  9648  0011B2  E101 D76C          	bz	l4981
  9649  0011B6  0A0F               	xorlw	15	; case 8
  9650  0011B8  E0CC               	bz	l5043
  9651  0011BA  0A01               	xorlw	1	; case 9
  9652  0011BC  E088               	bz	l4997
  9653  0011BE  0A03               	xorlw	3	; case 10
  9654  0011C0  E0C4               	bz	l5039
  9655  0011C2  0A01               	xorlw	1	; case 11
  9656  0011C4  E0AD               	bz	l5023
  9657  0011C6  0A06               	xorlw	6	; case 13
  9658  0011C8  E0CE               	bz	l5049
  9659  0011CA  0012               	return		;funcret
  9660  0011CC                     __end_of_GLCDMotor:
  9661                           	callstack 0
  9662  0011CC                     PL2:
  9663                           	callstack 24
  9664  0011CC  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9665  0011D0                     	if	1	;There is more than 1 active tblptr byte
  9666  0011D0  0E02               	movlw	high __smallconst
  9667  0011D2  6EF7               	movwf	tblptrh,c
  9668  0011D4                     	endif
  9669  0011D4                     	if	0	;tblptru may be non-zero
  9670  0011D4                     	endif
  9671  0011D4                     	if	0	;tblptru may be non-zero
  9672  0011D4                     	endif
  9673  0011D4  0008               	tblrd		*
  9674  0011D6  50F5               	movf	tablat,w,c
  9675  0011D8  0012               	return	
  9676  0011DA                     __end_ofPL2:
  9677                           	callstack 0
  9678  0011DA                     PL4:
  9679                           	callstack 24
  9680  0011DA  6E73               	movwf	??_GLCDMotor^0,c
  9681  0011DC  0E1D               	movlw	29
  9682  0011DE  2673               	addwf	??_GLCDMotor^0,f,c
  9683  0011E0  0C1D               	retlw	29
  9684  0011E2                     __end_ofPL4:
  9685                           	callstack 0
  9686  0011E2                     PL6:
  9687                           	callstack 24
  9688  0011E2  5021               	movf	_menuDaltGLCD^0,w,c
  9689  0011E4  0D1D               	mullw	29
  9690  0011E6  50F3               	movf	243,w,c
  9691  0011E8  0F01               	addlw	low _menuList
  9692  0011EA  0012               	return	
  9693  0011EC                     __end_ofPL6:
  9694                           	callstack 0
  9695  0011EC                     PL12:
  9696                           	callstack 24
  9697  0011EC  5067               	movf	LcNewString@new_s^0,w,c
  9698  0011EE  A4D8               	btfss	status,2,c
  9699  0011F0  0E02               	movlw	high __smallconst
  9700  0011F2  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9701  0011F4  0012               	return	
  9702  0011F6                     __end_ofPL12:
  9703                           	callstack 0
  9704  0011F6                     PL66:
  9705                           	callstack 27
  9706  0011F6  0EB5               	movlw	181
  9707  0011F8  5C64               	subwf	?_TiGetTics^0,w,c
  9708  0011FA  0E04               	movlw	4
  9709  0011FC  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9710  0011FE  0012               	return	
  9711  001200                     __end_ofPL66:
  9712                           	callstack 0
  9713                           
  9714 ;; *************** function _LcPutChar *****************
  9715 ;; Defined at:
  9716 ;;		line 118 in file "LcTLCD.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  c               1    wreg     unsigned char 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  c               1   19[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1
  9730 ;;      Params:         0       0       0
  9731 ;;      Locals:         1       0       0
  9732 ;;      Temps:          0       0       0
  9733 ;;      Totals:         1       0       0
  9734 ;;Total ram usage:        1 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 5
  9737 ;; This function calls:
  9738 ;;		_CantaData
  9739 ;;		_LcGotoXY
  9740 ;;		_WaitForBusy
  9741 ;; This function is called by:
  9742 ;;		_LcLCD
  9743 ;;		_menu
  9744 ;;		_GLCDMotor
  9745 ;;		_motorSIO
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text78
  9750  001B6C                     __ptext78:
  9751                           	callstack 0
  9752  001B6C                     _LcPutChar:
  9753                           	callstack 24
  9754                           
  9755                           ;incstack = 0
  9756                           ;LcPutChar@c stored from wreg
  9757  001B6C  6E72               	movwf	LcPutChar@c^0,c
  9758                           
  9759                           ;LcTLCD.c: 120:  WaitForBusy(); CantaData(c);
  9760  001B6E  EC1D  F00E         	call	_WaitForBusy	;wreg free
  9761  001B72  5072               	movf	LcPutChar@c^0,w,c
  9762  001B74  EC3C  F00E         	call	_CantaData
  9763                           
  9764                           ;LcTLCD.c: 122:  ++ColumnAct;
  9765  001B78  2A3E               	incf	_ColumnAct^0,f,c
  9766                           
  9767                           ;LcTLCD.c: 124:  if (Rows == 2) {
  9768  001B7A  0E02               	movlw	2
  9769  001B7C  1840               	xorwf	_Rows^0,w,c
  9770  001B7E  E10C               	bnz	l4509
  9771                           
  9772                           ;LcTLCD.c: 125:   if (ColumnAct >= 40) {
  9773  001B80  0E27               	movlw	39
  9774  001B82  643E               	cpfsgt	_ColumnAct^0,c
  9775  001B84  D009               	goto	l4509
  9776                           
  9777                           ;LcTLCD.c: 126:    ColumnAct = 0;
  9778  001B86  6A3E               	clrf	_ColumnAct^0,c
  9779                           
  9780                           ;LcTLCD.c: 127:    if (++RowAct >= 2) RowAct = 0;
  9781  001B88  2A3F               	incf	_RowAct^0,f,c
  9782  001B8A  0E01               	movlw	1
  9783  001B8C  643F               	cpfsgt	_RowAct^0,c
  9784  001B8E  D001               	goto	l4507
  9785  001B90  6A3F               	clrf	_RowAct^0,c
  9786  001B92                     l4507:
  9787                           
  9788                           ;LcTLCD.c: 128:    LcGotoXY(ColumnAct, RowAct);
  9789  001B92  D80C               	call	PL86	;call to abstracted procedure
  9790  001B94  EC72  F00E         	call	_LcGotoXY
  9791  001B98                     l4509:
  9792                           
  9793                           ;LcTLCD.c: 139:  if (RowAct == 1) {
  9794  001B98  043F               	decf	_RowAct^0,w,c
  9795  001B9A  A4D8               	btfss	status,2,c
  9796  001B9C  0012               	return	
  9797                           
  9798                           ;LcTLCD.c: 140:   if (ColumnAct >= 40) ColumnAct = 0;
  9799  001B9E  0E27               	movlw	39
  9800  001BA0  643E               	cpfsgt	_ColumnAct^0,c
  9801  001BA2  D001               	goto	l4515
  9802  001BA4  6A3E               	clrf	_ColumnAct^0,c
  9803  001BA6                     l4515:
  9804                           
  9805                           ;LcTLCD.c: 141:   LcGotoXY(ColumnAct, RowAct);
  9806  001BA6  D802               	call	PL86	;call to abstracted procedure
  9807  001BA8  EF72  F00E         	goto	_LcGotoXY
  9808  001BAC                     __end_of_LcPutChar:
  9809                           	callstack 0
  9810  001BAC                     PL86:
  9811                           	callstack 24
  9812  001BAC  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
  9813  001BB0  503E               	movf	_ColumnAct^0,w,c
  9814  001BB2  0012               	return	
  9815  001BB4                     __end_ofPL86:
  9816                           	callstack 0
  9817                           
  9818 ;; *************** function _CantaData *****************
  9819 ;; Defined at:
  9820 ;;		line 180 in file "LcTLCD.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  Data            1    wreg     unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  Data            1    7[COMRAM] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1
  9834 ;;      Params:         0       0       0
  9835 ;;      Locals:         1       0       0
  9836 ;;      Temps:          0       0       0
  9837 ;;      Totals:         1       0       0
  9838 ;;Total ram usage:        1 bytes
  9839 ;; Hardware stack levels used: 1
  9840 ;; Hardware stack levels required when called: 3
  9841 ;; This function calls:
  9842 ;;		_CantaPartAlta
  9843 ;;		_CantaPartBaixa
  9844 ;; This function is called by:
  9845 ;;		_LcPutChar
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text79
  9850  001C78                     __ptext79:
  9851                           	callstack 0
  9852  001C78                     _CantaData:
  9853                           	callstack 25
  9854                           
  9855                           ;incstack = 0
  9856                           ;CantaData@Data stored from wreg
  9857  001C78  6E66               	movwf	CantaData@Data^0,c
  9858                           
  9859                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9860  001C7A  9694               	bcf	148,3,c	;volatile
  9861  001C7C  9494               	bcf	148,2,c	;volatile
  9862  001C7E  9294               	bcf	148,1,c	;volatile
  9863  001C80  9094               	bcf	148,0,c	;volatile
  9864                           
  9865                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 1);
  9866  001C82  8A8B               	bsf	139,5,c	;volatile
  9867                           
  9868                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9869  001C84  9E8C               	bcf	140,7,c	;volatile
  9870                           
  9871                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9872  001C86  888B               	bsf	139,4,c	;volatile
  9873                           
  9874                           ;LcTLCD.c: 185:  CantaPartAlta(Data);
  9875  001C88  5066               	movf	CantaData@Data^0,w,c
  9876  001C8A  EC5B  F00D         	call	_CantaPartAlta
  9877                           
  9878                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9879                           
  9880                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9881                           
  9882                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9883                           
  9884                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9885  001C8E  D80B               	call	PL70	;call to abstracted procedure
  9886                           
  9887                           ;LcTLCD.c: 190:  CantaPartBaixa(Data);
  9888  001C90  5066               	movf	CantaData@Data^0,w,c
  9889  001C92  EC28  F00D         	call	_CantaPartBaixa
  9890                           
  9891                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9892                           
  9893                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9894                           
  9895                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9896  001C96  D000               	goto	PL30	;call to abstracted procedure
  9897  001C98                     __end_of_CantaData:
  9898                           	callstack 0
  9899  001C98                     PL30:
  9900                           	callstack 24
  9901  001C98  888B               	bsf	139,4,c	;volatile
  9902  001C9A  988B               	bcf	139,4,c	;volatile
  9903  001C9C  8694               	bsf	148,3,c	;volatile
  9904  001C9E  8494               	bsf	148,2,c	;volatile
  9905  001CA0  8294               	bsf	148,1,c	;volatile
  9906  001CA2  8094               	bsf	148,0,c	;volatile
  9907  001CA4  0012               	return		;funcret
  9908  001CA6                     __end_ofPL30:
  9909                           	callstack 0
  9910  001CA6                     PL70:
  9911                           	callstack 24
  9912  001CA6  888B               	bsf	139,4,c	;volatile
  9913  001CA8  988B               	bcf	139,4,c	;volatile
  9914  001CAA  988B               	bcf	139,4,c	;volatile
  9915  001CAC  888B               	bsf	139,4,c	;volatile
  9916  001CAE  0012               	return	
  9917  001CB0                     __end_ofPL70:
  9918                           	callstack 0
  9919                           
  9920 ;; *************** function _LcNewString *****************
  9921 ;; Defined at:
  9922 ;;		line 225 in file "LcTLCD.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9925 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9926 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9927 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9928 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, status,2, status,0
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1
  9940 ;;      Params:         2       0       0
  9941 ;;      Locals:         0       0       0
  9942 ;;      Temps:          0       0       0
  9943 ;;      Totals:         2       0       0
  9944 ;;Total ram usage:        2 bytes
  9945 ;; Hardware stack levels used: 1
  9946 ;; Hardware stack levels required when called: 2
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_menu
  9951 ;;		_GLCDMotor
  9952 ;;		_motorJoc
  9953 ;;		_motorSIO
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text80
  9958  00005A                     __ptext80:
  9959                           	callstack 0
  9960  00005A                     _LcNewString:
  9961                           	callstack 27
  9962                           
  9963                           ;LcTLCD.c: 226:     s_ptr = new_s;
  9964                           
  9965                           ;incstack = 0
  9966  00005A  C067  F00B         	movff	LcNewString@new_s,_s_ptr
  9967  00005E  C068  F00C         	movff	LcNewString@new_s+1,_s_ptr+1
  9968                           
  9969                           ;LcTLCD.c: 227:     nou_s = 1;
  9970  000062  8477               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9971  000064  0012               	return		;funcret
  9972  000066                     __end_of_LcNewString:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _LcLliure *****************
  9976 ;; Defined at:
  9977 ;;		line 241 in file "LcTLCD.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;		None               void
  9984 ;; Registers used:
  9985 ;;		status,0
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1
  9991 ;;      Params:         0       0       0
  9992 ;;      Locals:         0       0       0
  9993 ;;      Temps:          0       0       0
  9994 ;;      Totals:         0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; Hardware stack levels required when called: 2
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_menu
 10002 ;;		_GLCDMotor
 10003 ;;		_motorJoc
 10004 ;;		_motorSIO
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text81
 10009  000066                     __ptext81:
 10010                           	callstack 0
 10011  000066                     _LcLliure:
 10012                           	callstack 27
 10013                           
 10014                           ;LcTLCD.c: 242:     return !nou_s;
 10015                           
 10016                           ;incstack = 0
 10017  000066  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10018  000068  D002               	goto	l4525
 10019  00006A  90D8               	bcf	status,0,c
 10020  00006C  0012               	return	
 10021  00006E                     l4525:
 10022  00006E  80D8               	bsf	status,0,c
 10023  000070  0012               	return		;funcret
 10024  000072                     __end_of_LcLliure:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function _LcClear *****************
 10028 ;; Defined at:
 10029 ;;		line 82 in file "LcTLCD.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1
 10043 ;;      Params:         0       0       0
 10044 ;;      Locals:         0       0       0
 10045 ;;      Temps:          0       0       0
 10046 ;;      Totals:         0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 5
 10050 ;; This function calls:
 10051 ;;		_CantaIR
 10052 ;;		_Espera
 10053 ;;		_LcGotoXY
 10054 ;;		_WaitForBusy
 10055 ;; This function is called by:
 10056 ;;		_menu
 10057 ;;		_GLCDMotor
 10058 ;;		_motorSIO
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text82
 10063  001E70                     __ptext82:
 10064                           	callstack 0
 10065  001E70                     _LcClear:
 10066                           	callstack 24
 10067                           
 10068                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(DISPLAY_CLEAR);
 10069                           
 10070                           ;incstack = 0
 10071  001E70  EC1D  F00E         	call	_WaitForBusy	;wreg free
 10072  001E74  0E01               	movlw	1
 10073  001E76  EC68  F00F         	call	_CantaIR
 10074                           
 10075                           ;LcTLCD.c: 86:  Espera(Timer, 3);
 10076  001E7A  D806               	call	PL60	;call to abstracted procedure
 10077  001E7C  EC49  F00F         	call	_Espera
 10078                           
 10079                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
 10080  001E80  0E00               	movlw	0
 10081  001E82  6E6C               	movwf	LcGotoXY@Row^0,c
 10082  001E84  EF72  F00E         	goto	_LcGotoXY
 10083  001E88                     __end_of_LcClear:
 10084                           	callstack 0
 10085  001E88                     PL60:
 10086                           	callstack 26
 10087  001E88  6A6C               	clrf	(Espera@ms+1)^0,c
 10088  001E8A  0E03               	movlw	3
 10089  001E8C  6E6B               	movwf	Espera@ms^0,c
 10090  001E8E  503D               	movf	_Timer^0,w,c
 10091  001E90  0012               	return	
 10092  001E92                     __end_ofPL60:
 10093                           	callstack 0
 10094                           
 10095 ;; *************** function _LcGotoXY *****************
 10096 ;; Defined at:
 10097 ;;		line 104 in file "LcTLCD.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  Column          1    wreg     unsigned char 
 10100 ;;  Row             1   13[COMRAM] unsigned char 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  Column          1   18[COMRAM] unsigned char 
 10103 ;;  Fisics          2   14[COMRAM] int 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1
 10113 ;;      Params:         1       0       0
 10114 ;;      Locals:         5       0       0
 10115 ;;      Temps:          0       0       0
 10116 ;;      Totals:         6       0       0
 10117 ;;Total ram usage:        6 bytes
 10118 ;; Hardware stack levels used: 1
 10119 ;; Hardware stack levels required when called: 4
 10120 ;; This function calls:
 10121 ;;		_CantaIR
 10122 ;;		_WaitForBusy
 10123 ;; This function is called by:
 10124 ;;		_LcClear
 10125 ;;		_LcPutChar
 10126 ;;		_menu
 10127 ;;		_GLCDMotor
 10128 ;;		_motorJoc
 10129 ;;		_motorSIO
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text83
 10134  001CE4                     __ptext83:
 10135                           	callstack 0
 10136  001CE4                     _LcGotoXY:
 10137                           	callstack 24
 10138                           
 10139                           ;incstack = 0
 10140                           ;LcGotoXY@Column stored from wreg
 10141  001CE4  6E71               	movwf	LcGotoXY@Column^0,c
 10142                           
 10143                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 109:  Fisics = Column + (!Row ? 0 : 0x40);
 10144  001CE6  506C               	movf	LcGotoXY@Row^0,w,c
 10145  001CE8  E004               	bz	l73
 10146  001CEA  6A70               	clrf	(_LcGotoXY$343+1)^0,c
 10147  001CEC  0E40               	movlw	64
 10148  001CEE  6E6F               	movwf	_LcGotoXY$343^0,c
 10149  001CF0  D002               	goto	l4419
 10150  001CF2                     l73:
 10151  001CF2  6A6F               	clrf	_LcGotoXY$343^0,c
 10152  001CF4  6A70               	clrf	(_LcGotoXY$343+1)^0,c
 10153  001CF6                     l4419:
 10154  001CF6  5071               	movf	LcGotoXY@Column^0,w,c
 10155  001CF8  246F               	addwf	_LcGotoXY$343^0,w,c
 10156  001CFA  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10157  001CFC  0E00               	movlw	0
 10158  001CFE  2070               	addwfc	(_LcGotoXY$343+1)^0,w,c
 10159  001D00  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10160                           
 10161                           ;LcTLCD.c: 111:  WaitForBusy();
 10162  001D02  EC1D  F00E         	call	_WaitForBusy	;wreg free
 10163                           
 10164                           ;LcTLCD.c: 112:  CantaIR(SET_DDRAM | Fisics);
 10165  001D06  506D               	movf	LcGotoXY@Fisics^0,w,c
 10166  001D08  0980               	iorlw	128
 10167  001D0A  EC68  F00F         	call	_CantaIR
 10168                           
 10169                           ;LcTLCD.c: 114:  RowAct = Row;
 10170  001D0E  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10171                           
 10172                           ;LcTLCD.c: 115:  ColumnAct = Column;
 10173  001D12  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10174  001D16  0012               	return		;funcret
 10175  001D18                     __end_of_LcGotoXY:
 10176                           	callstack 0
 10177                           
 10178 ;; *************** function _WaitForBusy *****************
 10179 ;; Defined at:
 10180 ;;		line 196 in file "LcTLCD.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;		None
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  Busy            1   12[COMRAM] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1
 10194 ;;      Params:         0       0       0
 10195 ;;      Locals:         1       0       0
 10196 ;;      Temps:          0       0       0
 10197 ;;      Totals:         1       0       0
 10198 ;;Total ram usage:        1 bytes
 10199 ;; Hardware stack levels used: 1
 10200 ;; Hardware stack levels required when called: 3
 10201 ;; This function calls:
 10202 ;;		_TiGetTics
 10203 ;;		_TiResetTics
 10204 ;; This function is called by:
 10205 ;;		_LcInit
 10206 ;;		_LcClear
 10207 ;;		_LcGotoXY
 10208 ;;		_LcPutChar
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text84
 10213  001C3A                     __ptext84:
 10214                           	callstack 0
 10215  001C3A                     _WaitForBusy:
 10216                           	callstack 25
 10217                           
 10218                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10219                           
 10220                           ;incstack = 0
 10221  001C3A  8694               	bsf	148,3,c	;volatile
 10222  001C3C  8494               	bsf	148,2,c	;volatile
 10223  001C3E  8294               	bsf	148,1,c	;volatile
 10224  001C40  8094               	bsf	148,0,c	;volatile
 10225                           
 10226                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 0);
 10227  001C42  9A8B               	bcf	139,5,c	;volatile
 10228                           
 10229                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 1);
 10230  001C44  8E8C               	bsf	140,7,c	;volatile
 10231                           
 10232                           ;LcTLCD.c: 200:  TiResetTics(Timer);
 10233  001C46  503D               	movf	_Timer^0,w,c
 10234  001C48  EC76  F00F         	call	_TiResetTics
 10235  001C4C                     l4387:
 10236                           
 10237                           ;LcTLCD.c: 202:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10238  001C4C  888B               	bsf	139,4,c	;volatile
 10239  001C4E  888B               	bsf	139,4,c	;volatile
 10240                           
 10241                           ;LcTLCD.c: 203:   Busy = (PORTCbits.RC3);
 10242  001C50  0E00               	movlw	0
 10243  001C52  B682               	btfsc	130,3,c	;volatile
 10244  001C54  0E01               	movlw	1
 10245  001C56  6E6B               	movwf	WaitForBusy@Busy^0,c
 10246                           
 10247                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 0);
 10248  001C58  988B               	bcf	139,4,c	;volatile
 10249                           
 10250                           ;LcTLCD.c: 205:   (LATCbits.LATC4 = 0);
 10251  001C5A  988B               	bcf	139,4,c	;volatile
 10252                           
 10253                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10254  001C5C  888B               	bsf	139,4,c	;volatile
 10255  001C5E  888B               	bsf	139,4,c	;volatile
 10256                           
 10257                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 0);
 10258  001C60  988B               	bcf	139,4,c	;volatile
 10259                           
 10260                           ;LcTLCD.c: 209:   (LATCbits.LATC4 = 0);
 10261  001C62  988B               	bcf	139,4,c	;volatile
 10262                           
 10263                           ;LcTLCD.c: 210:   if (TiGetTics(Timer)) break;
 10264  001C64  503D               	movf	_Timer^0,w,c
 10265  001C66  ECDD  F00E         	call	_TiGetTics
 10266  001C6A  5064               	movf	?_TiGetTics^0,w,c
 10267  001C6C  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10268  001C6E  E001               	bz	l4409
 10269  001C70  0012               	return	
 10270  001C72                     l4409:
 10271                           
 10272                           ;LcTLCD.c: 211:  } while(Busy);
 10273  001C72  506B               	movf	WaitForBusy@Busy^0,w,c
 10274  001C74  E1EB               	bnz	l4387
 10275  001C76  0012               	return		;funcret
 10276  001C78                     __end_of_WaitForBusy:
 10277                           	callstack 0
 10278                           
 10279 ;; *************** function _CantaIR *****************
 10280 ;; Defined at:
 10281 ;;		line 164 in file "LcTLCD.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;  IR              1    wreg     unsigned char 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;  IR              1    7[COMRAM] unsigned char 
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1
 10295 ;;      Params:         0       0       0
 10296 ;;      Locals:         1       0       0
 10297 ;;      Temps:          0       0       0
 10298 ;;      Totals:         1       0       0
 10299 ;;Total ram usage:        1 bytes
 10300 ;; Hardware stack levels used: 1
 10301 ;; Hardware stack levels required when called: 3
 10302 ;; This function calls:
 10303 ;;		_CantaPartAlta
 10304 ;;		_CantaPartBaixa
 10305 ;; This function is called by:
 10306 ;;		_LcScroll
 10307 ;;		_LcInit
 10308 ;;		_LcClear
 10309 ;;		_LcGotoXY
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text85
 10314  001ED0                     __ptext85:
 10315                           	callstack 0
 10316  001ED0                     _CantaIR:
 10317                           	callstack 24
 10318                           
 10319                           ;incstack = 0
 10320                           ;CantaIR@IR stored from wreg
 10321  001ED0  6E66               	movwf	CantaIR@IR^0,c
 10322                           
 10323                           ;LcTLCD.c: 165:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10324  001ED2  9694               	bcf	148,3,c	;volatile
 10325                           
 10326                           ;LcTLCD.c: 166:  (LATCbits.LATC5 = 0);
 10327                           
 10328                           ;LcTLCD.c: 167:  (LATDbits.LATD7 = 0);
 10329                           
 10330                           ;LcTLCD.c: 168:  (LATCbits.LATC4 = 1);
 10331  001ED4  ECAC  F00C         	call	PL38	;call to abstracted procedure
 10332                           
 10333                           ;LcTLCD.c: 169:  CantaPartAlta(IR);
 10334  001ED8  5066               	movf	CantaIR@IR^0,w,c
 10335  001EDA  EC5B  F00D         	call	_CantaPartAlta
 10336                           
 10337                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10338                           
 10339                           ;LcTLCD.c: 171:  (LATCbits.LATC4 = 0);
 10340                           
 10341                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 0);
 10342                           
 10343                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 1);
 10344  001EDE  EC53  F00E         	call	PL70	;call to abstracted procedure
 10345                           
 10346                           ;LcTLCD.c: 174:  CantaPartBaixa(IR);
 10347  001EE2  5066               	movf	CantaIR@IR^0,w,c
 10348  001EE4  EC28  F00D         	call	_CantaPartBaixa
 10349                           
 10350                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10351                           
 10352                           ;LcTLCD.c: 176:  (LATCbits.LATC4 = 0);
 10353                           
 10354                           ;LcTLCD.c: 177:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10355  001EE8  EF4C  F00E         	goto	PL30	;call to abstracted procedure
 10356  001EEC                     __end_of_CantaIR:
 10357                           	callstack 0
 10358                           
 10359 ;; *************** function _CantaPartBaixa *****************
 10360 ;; Defined at:
 10361 ;;		line 157 in file "LcTLCD.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  c               1    wreg     unsigned char 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;  c               1    6[COMRAM] unsigned char 
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, status,2, status,0
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1
 10375 ;;      Params:         0       0       0
 10376 ;;      Locals:         1       0       0
 10377 ;;      Temps:          1       0       0
 10378 ;;      Totals:         2       0       0
 10379 ;;Total ram usage:        2 bytes
 10380 ;; Hardware stack levels used: 1
 10381 ;; Hardware stack levels required when called: 2
 10382 ;; This function calls:
 10383 ;;		Nothing
 10384 ;; This function is called by:
 10385 ;;		_CantaIR
 10386 ;;		_CantaData
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text86
 10391  001A50                     __ptext86:
 10392                           	callstack 0
 10393  001A50                     _CantaPartBaixa:
 10394                           	callstack 24
 10395                           
 10396                           ;incstack = 0
 10397                           ;CantaPartBaixa@c stored from wreg
 10398  001A50  6E65               	movwf	CantaPartBaixa@c^0,c
 10399                           
 10400                           ;LcTLCD.c: 158:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10401  001A52  A665               	btfss	CantaPartBaixa@c^0,3,c
 10402  001A54  D003               	goto	u3710
 10403  001A56  6A64               	clrf	??_CantaPartBaixa^0,c
 10404  001A58  2A64               	incf	??_CantaPartBaixa^0,f,c
 10405  001A5A  D001               	goto	u3728
 10406  001A5C                     u3710:
 10407  001A5C  6A64               	clrf	??_CantaPartBaixa^0,c
 10408  001A5E                     u3728:
 10409  001A5E  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10410  001A60  D825               	call	PL74	;call to abstracted procedure
 10411  001A62  0BF7               	andlw	-9
 10412  001A64  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10413  001A66  6E8B               	movwf	139,c	;volatile
 10414                           
 10415                           ;LcTLCD.c: 159:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10416  001A68  A465               	btfss	CantaPartBaixa@c^0,2,c
 10417  001A6A  D003               	goto	u3730
 10418  001A6C  6A64               	clrf	??_CantaPartBaixa^0,c
 10419  001A6E  2A64               	incf	??_CantaPartBaixa^0,f,c
 10420  001A70  D001               	goto	u3748
 10421  001A72                     u3730:
 10422  001A72  6A64               	clrf	??_CantaPartBaixa^0,c
 10423  001A74                     u3748:
 10424  001A74  D81B               	call	PL74	;call to abstracted procedure
 10425  001A76  0BFB               	andlw	-5
 10426  001A78  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10427  001A7A  6E8B               	movwf	139,c	;volatile
 10428                           
 10429                           ;LcTLCD.c: 160:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10430  001A7C  A265               	btfss	CantaPartBaixa@c^0,1,c
 10431  001A7E  D003               	goto	u3750
 10432  001A80  6A64               	clrf	??_CantaPartBaixa^0,c
 10433  001A82  2A64               	incf	??_CantaPartBaixa^0,f,c
 10434  001A84  D001               	goto	u3768
 10435  001A86                     u3750:
 10436  001A86  6A64               	clrf	??_CantaPartBaixa^0,c
 10437  001A88                     u3768:
 10438  001A88  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10439  001A8A  508B               	movf	139,w,c	;volatile
 10440  001A8C  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10441  001A8E  0BFD               	andlw	-3
 10442  001A90  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10443  001A92  6E8B               	movwf	139,c	;volatile
 10444                           
 10445                           ;LcTLCD.c: 161:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10446  001A94  A065               	btfss	CantaPartBaixa@c^0,0,c
 10447  001A96  D003               	goto	u3770
 10448  001A98  6A64               	clrf	??_CantaPartBaixa^0,c
 10449  001A9A  2A64               	incf	??_CantaPartBaixa^0,f,c
 10450  001A9C  D001               	goto	u3788
 10451  001A9E                     u3770:
 10452  001A9E  6A64               	clrf	??_CantaPartBaixa^0,c
 10453  001AA0                     u3788:
 10454  001AA0  508B               	movf	139,w,c	;volatile
 10455  001AA2  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10456  001AA4  0BFE               	andlw	-2
 10457  001AA6  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10458  001AA8  6E8B               	movwf	139,c	;volatile
 10459  001AAA  0012               	return		;funcret
 10460  001AAC                     __end_of_CantaPartBaixa:
 10461                           	callstack 0
 10462  001AAC                     PL74:
 10463                           	callstack 24
 10464  001AAC  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10465  001AAE  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10466  001AB0  508B               	movf	139,w,c	;volatile
 10467  001AB2  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10468  001AB4  0012               	return	
 10469  001AB6                     __end_ofPL74:
 10470                           	callstack 0
 10471                           
 10472 ;; *************** function _CantaPartAlta *****************
 10473 ;; Defined at:
 10474 ;;		line 150 in file "LcTLCD.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  c               1    wreg     unsigned char 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  c               1    6[COMRAM] unsigned char 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1
 10488 ;;      Params:         0       0       0
 10489 ;;      Locals:         1       0       0
 10490 ;;      Temps:          1       0       0
 10491 ;;      Totals:         2       0       0
 10492 ;;Total ram usage:        2 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 2
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_CantaIR
 10499 ;;		_CantaData
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text87
 10504  001AB6                     __ptext87:
 10505                           	callstack 0
 10506  001AB6                     _CantaPartAlta:
 10507                           	callstack 24
 10508                           
 10509                           ;incstack = 0
 10510                           ;CantaPartAlta@c stored from wreg
 10511  001AB6  6E65               	movwf	CantaPartAlta@c^0,c
 10512                           
 10513                           ;LcTLCD.c: 151:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10514  001AB8  AE65               	btfss	CantaPartAlta@c^0,7,c
 10515  001ABA  D003               	goto	u3630
 10516  001ABC  6A64               	clrf	??_CantaPartAlta^0,c
 10517  001ABE  2A64               	incf	??_CantaPartAlta^0,f,c
 10518  001AC0  D001               	goto	u3648
 10519  001AC2                     u3630:
 10520  001AC2  6A64               	clrf	??_CantaPartAlta^0,c
 10521  001AC4                     u3648:
 10522  001AC4  4664               	rlncf	??_CantaPartAlta^0,f,c
 10523  001AC6  D825               	call	PL64	;call to abstracted procedure
 10524  001AC8  0BF7               	andlw	-9
 10525  001ACA  1864               	xorwf	??_CantaPartAlta^0,w,c
 10526  001ACC  6E8B               	movwf	139,c	;volatile
 10527                           
 10528                           ;LcTLCD.c: 152:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10529  001ACE  AC65               	btfss	CantaPartAlta@c^0,6,c
 10530  001AD0  D003               	goto	u3650
 10531  001AD2  6A64               	clrf	??_CantaPartAlta^0,c
 10532  001AD4  2A64               	incf	??_CantaPartAlta^0,f,c
 10533  001AD6  D001               	goto	u3668
 10534  001AD8                     u3650:
 10535  001AD8  6A64               	clrf	??_CantaPartAlta^0,c
 10536  001ADA                     u3668:
 10537  001ADA  D81B               	call	PL64	;call to abstracted procedure
 10538  001ADC  0BFB               	andlw	-5
 10539  001ADE  1864               	xorwf	??_CantaPartAlta^0,w,c
 10540  001AE0  6E8B               	movwf	139,c	;volatile
 10541                           
 10542                           ;LcTLCD.c: 153:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10543  001AE2  AA65               	btfss	CantaPartAlta@c^0,5,c
 10544  001AE4  D003               	goto	u3670
 10545  001AE6  6A64               	clrf	??_CantaPartAlta^0,c
 10546  001AE8  2A64               	incf	??_CantaPartAlta^0,f,c
 10547  001AEA  D001               	goto	u3688
 10548  001AEC                     u3670:
 10549  001AEC  6A64               	clrf	??_CantaPartAlta^0,c
 10550  001AEE                     u3688:
 10551  001AEE  4664               	rlncf	??_CantaPartAlta^0,f,c
 10552  001AF0  508B               	movf	139,w,c	;volatile
 10553  001AF2  1864               	xorwf	??_CantaPartAlta^0,w,c
 10554  001AF4  0BFD               	andlw	-3
 10555  001AF6  1864               	xorwf	??_CantaPartAlta^0,w,c
 10556  001AF8  6E8B               	movwf	139,c	;volatile
 10557                           
 10558                           ;LcTLCD.c: 154:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10559  001AFA  A865               	btfss	CantaPartAlta@c^0,4,c
 10560  001AFC  D003               	goto	u3690
 10561  001AFE  6A64               	clrf	??_CantaPartAlta^0,c
 10562  001B00  2A64               	incf	??_CantaPartAlta^0,f,c
 10563  001B02  D001               	goto	u3708
 10564  001B04                     u3690:
 10565  001B04  6A64               	clrf	??_CantaPartAlta^0,c
 10566  001B06                     u3708:
 10567  001B06  508B               	movf	139,w,c	;volatile
 10568  001B08  1864               	xorwf	??_CantaPartAlta^0,w,c
 10569  001B0A  0BFE               	andlw	-2
 10570  001B0C  1864               	xorwf	??_CantaPartAlta^0,w,c
 10571  001B0E  6E8B               	movwf	139,c	;volatile
 10572  001B10  0012               	return		;funcret
 10573  001B12                     __end_of_CantaPartAlta:
 10574                           	callstack 0
 10575  001B12                     PL64:
 10576                           	callstack 24
 10577  001B12  4664               	rlncf	??_CantaPartAlta^0,f,c
 10578  001B14  4664               	rlncf	??_CantaPartAlta^0,f,c
 10579  001B16  508B               	movf	139,w,c	;volatile
 10580  001B18  1864               	xorwf	??_CantaPartAlta^0,w,c
 10581  001B1A  0012               	return	
 10582  001B1C                     __end_ofPL64:
 10583                           	callstack 0
 10584                           
 10585 ;; *************** function _Espera *****************
 10586 ;; Defined at:
 10587 ;;		line 145 in file "LcTLCD.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  Timer           1    wreg     unsigned char 
 10590 ;;  ms              2   12[COMRAM] int 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  Timer           1   15[COMRAM] unsigned char 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1
 10602 ;;      Params:         2       0       0
 10603 ;;      Locals:         1       0       0
 10604 ;;      Temps:          1       0       0
 10605 ;;      Totals:         4       0       0
 10606 ;;Total ram usage:        4 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 3
 10609 ;; This function calls:
 10610 ;;		_TiGetTics
 10611 ;;		_TiResetTics
 10612 ;; This function is called by:
 10613 ;;		_LcInit
 10614 ;;		_LcClear
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text88
 10619  001E92                     __ptext88:
 10620                           	callstack 0
 10621  001E92                     _Espera:
 10622                           	callstack 25
 10623                           
 10624                           ;incstack = 0
 10625                           ;Espera@Timer stored from wreg
 10626  001E92  6E6E               	movwf	Espera@Timer^0,c
 10627                           
 10628                           ;LcTLCD.c: 146:  TiResetTics(Timer);
 10629  001E94  506E               	movf	Espera@Timer^0,w,c
 10630  001E96  EC76  F00F         	call	_TiResetTics
 10631  001E9A                     l4413:
 10632  001E9A  506E               	movf	Espera@Timer^0,w,c
 10633  001E9C  ECDD  F00E         	call	_TiGetTics
 10634  001EA0  506B               	movf	Espera@ms^0,w,c
 10635  001EA2  5C64               	subwf	?_TiGetTics^0,w,c
 10636  001EA4  5065               	movf	(?_TiGetTics+1)^0,w,c
 10637  001EA6  0A80               	xorlw	128
 10638  001EA8  6E6D               	movwf	??_Espera^0,c
 10639  001EAA  506C               	movf	(Espera@ms+1)^0,w,c
 10640  001EAC  0A80               	xorlw	128
 10641  001EAE  586D               	subwfb	??_Espera^0,w,c
 10642  001EB0  E3F4               	bnc	l4413
 10643  001EB2  0012               	return		;funcret
 10644  001EB4                     __end_of_Espera:
 10645                           	callstack 0
 10646                           
 10647 ;; *************** function _TiResetTics *****************
 10648 ;; Defined at:
 10649 ;;		line 55 in file "TiTTimer.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  Handle          1    wreg     unsigned char 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  Handle          1    5[COMRAM] unsigned char 
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1
 10663 ;;      Params:         0       0       0
 10664 ;;      Locals:         1       0       0
 10665 ;;      Temps:          0       0       0
 10666 ;;      Totals:         1       0       0
 10667 ;;Total ram usage:        1 bytes
 10668 ;; Hardware stack levels used: 1
 10669 ;; Hardware stack levels required when called: 2
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_Espera
 10674 ;;		_WaitForBusy
 10675 ;;		_SMotor
 10676 ;;		_TeTeclat
 10677 ;;		_menu
 10678 ;;		_motorAltaveu
 10679 ;;		_GLCDMotor
 10680 ;;		_motorHora
 10681 ;;		_motorSIO
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text89
 10686  001EEC                     __ptext89:
 10687                           	callstack 0
 10688  001EEC                     _TiResetTics:
 10689                           	callstack 27
 10690                           
 10691                           ;incstack = 0
 10692                           ;TiResetTics@Handle stored from wreg
 10693  001EEC  6E64               	movwf	TiResetTics@Handle^0,c
 10694                           
 10695                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10696  001EEE  5064               	movf	TiResetTics@Handle^0,w,c
 10697  001EF0  D805               	call	PL26	;call to abstracted procedure
 10698  001EF2  C009  FFDE         	movff	_h_Tics,postinc2
 10699  001EF6  C00A  FFDD         	movff	_h_Tics+1,postdec2
 10700  001EFA  0012               	return		;funcret
 10701  001EFC                     __end_of_TiResetTics:
 10702                           	callstack 0
 10703  001EFC                     PL26:
 10704                           	callstack 24
 10705  001EFC  0D03               	mullw	3
 10706  001EFE  50F3               	movf	243,w,c
 10707  001F00  0F80               	addlw	low _s_Timers
 10708  001F02  6ED9               	movwf	fsr2l,c
 10709  001F04  6ADA               	clrf	fsr2h,c
 10710  001F06  0012               	return	
 10711  001F08                     __end_ofPL26:
 10712                           	callstack 0
 10713                           
 10714 ;; *************** function _TiGetTics *****************
 10715 ;; Defined at:
 10716 ;;		line 61 in file "TiTTimer.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  Handle          1    wreg     unsigned char 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  Handle          1    9[COMRAM] unsigned char 
 10721 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  2    5[COMRAM] int 
 10724 ;; Registers used:
 10725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1
 10731 ;;      Params:         2       0       0
 10732 ;;      Locals:         3       0       0
 10733 ;;      Temps:          2       0       0
 10734 ;;      Totals:         7       0       0
 10735 ;;Total ram usage:        7 bytes
 10736 ;; Hardware stack levels used: 1
 10737 ;; Hardware stack levels required when called: 2
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_Espera
 10742 ;;		_WaitForBusy
 10743 ;;		_SMotor
 10744 ;;		_TeTeclat
 10745 ;;		_menu
 10746 ;;		_motorAltaveu
 10747 ;;		_GLCDMotor
 10748 ;;		_motorHora
 10749 ;;		_motorSIO
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text90
 10754  001DBA                     __ptext90:
 10755                           	callstack 0
 10756  001DBA                     _TiGetTics:
 10757                           	callstack 27
 10758                           
 10759                           ;incstack = 0
 10760                           ;TiGetTics@Handle stored from wreg
 10761  001DBA  6E68               	movwf	TiGetTics@Handle^0,c
 10762                           
 10763                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10764  001DBC  C009  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10765  001DC0  C00A  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10766                           
 10767                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10768  001DC4  5068               	movf	TiGetTics@Handle^0,w,c
 10769  001DC6  EC7E  F00F         	call	PL26	;call to abstracted procedure
 10770  001DCA  CFDE F066          	movff	postinc2,??_TiGetTics
 10771  001DCE  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10772  001DD2  5066               	movf	??_TiGetTics^0,w,c
 10773  001DD4  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10774  001DD6  6E64               	movwf	?_TiGetTics^0,c
 10775  001DD8  5067               	movf	(??_TiGetTics+1)^0,w,c
 10776  001DDA  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10777  001DDC  6E65               	movwf	(?_TiGetTics+1)^0,c
 10778  001DDE  0012               	return		;funcret
 10779  001DE0                     __end_of_TiGetTics:
 10780                           	callstack 0
 10781                           
 10782 ;; *************** function _GLCDInit *****************
 10783 ;; Defined at:
 10784 ;;		line 26 in file "GestioLCD.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;		None
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1
 10798 ;;      Params:         0       0       0
 10799 ;;      Locals:         0       0       0
 10800 ;;      Temps:          0       0       0
 10801 ;;      Totals:         0       0       0
 10802 ;;Total ram usage:        0 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 3
 10805 ;; This function calls:
 10806 ;;		_TiGetTimer
 10807 ;; This function is called by:
 10808 ;;		_main
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text91
 10813  000104                     __ptext91:
 10814                           	callstack 0
 10815  000104                     _GLCDInit:
 10816                           	callstack 27
 10817                           
 10818                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10819                           
 10820                           ;incstack = 0
 10821  000104  EC8C  F00E         	call	_TiGetTimer	;wreg free
 10822  000108  6E22               	movwf	_timerGLCD^0,c
 10823  00010A  0012               	return		;funcret
 10824  00010C                     __end_of_GLCDInit:
 10825                           	callstack 0
 10826                           
 10827 ;; *************** function _TiGetTimer *****************
 10828 ;; Defined at:
 10829 ;;		line 70 in file "TiTTimer.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;		None
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      unsigned char 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1
 10843 ;;      Params:         0       0       0
 10844 ;;      Locals:         0       0       0
 10845 ;;      Temps:          1       0       0
 10846 ;;      Totals:         1       0       0
 10847 ;;Total ram usage:        1 bytes
 10848 ;; Hardware stack levels used: 1
 10849 ;; Hardware stack levels required when called: 2
 10850 ;; This function calls:
 10851 ;;		Nothing
 10852 ;; This function is called by:
 10853 ;;		_LcInit
 10854 ;;		_Sinit
 10855 ;;		_TeInit
 10856 ;;		_Minit
 10857 ;;		_initAltaveu
 10858 ;;		_GLCDInit
 10859 ;;		_initHora
 10860 ;;		_initSIO
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text92
 10865  001D18                     __ptext92:
 10866                           	callstack 0
 10867  001D18                     _TiGetTimer:
 10868                           	callstack 27
 10869                           
 10870                           ;TiTTimer.c: 74:     counter=0;
 10871                           
 10872                           ;incstack = 0
 10873  001D18  6A34               	clrf	_counter^0,c
 10874                           
 10875                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10876  001D1A  D005               	goto	l4475
 10877  001D1C                     l4467:
 10878                           
 10879                           ;TiTTimer.c: 76:         counter++;
 10880  001D1C  2A34               	incf	_counter^0,f,c
 10881                           
 10882                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10883  001D1E  0E08               	movlw	8
 10884  001D20  1834               	xorwf	_counter^0,w,c
 10885  001D22  E101               	bnz	l4475
 10886  001D24  0CFF               	retlw	255
 10887  001D26                     l4475:
 10888                           
 10889                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10890  001D26  D807               	call	PL14	;call to abstracted procedure
 10891  001D28  04DE               	decf	postinc2,w,c
 10892  001D2A  E0F8               	bz	l4467
 10893                           
 10894                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10895  001D2C  D804               	call	PL14	;call to abstracted procedure
 10896  001D2E  0E01               	movlw	1
 10897  001D30  6EDF               	movwf	indf2,c
 10898                           
 10899                           ;TiTTimer.c: 80:     return (counter);
 10900  001D32  5034               	movf	_counter^0,w,c
 10901  001D34  0012               	return		;funcret
 10902  001D36                     __end_of_TiGetTimer:
 10903                           	callstack 0
 10904  001D36                     PL14:
 10905                           	callstack 28
 10906  001D36  5034               	movf	_counter^0,w,c
 10907  001D38  0D03               	mullw	3
 10908  001D3A  50F3               	movf	243,w,c
 10909  001D3C  0F82               	addlw	low (_s_Timers+2)
 10910  001D3E  6ED9               	movwf	fsr2l,c
 10911  001D40  6ADA               	clrf	fsr2h,c
 10912  001D42  0012               	return	
 10913  001D44                     __end_ofPL14:
 10914                           	callstack 0
 10915                           
 10916 ;; *************** function _CtoA *****************
 10917 ;; Defined at:
 10918 ;;		line 22 in file "CtoA.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      void 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1
 10932 ;;      Params:         0       0       0
 10933 ;;      Locals:         0       0       0
 10934 ;;      Temps:          0       0       0
 10935 ;;      Totals:         0       0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used: 1
 10938 ;; Hardware stack levels required when called: 2
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_main
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text93
 10947  001E4C                     __ptext93:
 10948                           	callstack 0
 10949  001E4C                     _CtoA:
 10950                           	callstack 28
 10951                           
 10952                           ;CtoA.c: 23:     if (convertir != 250) {
 10953                           
 10954                           ;incstack = 0
 10955  001E4C  0EFA               	movlw	250
 10956  001E4E  1847               	xorwf	_convertir^0,w,c
 10957  001E50  B4D8               	btfsc	status,2,c
 10958  001E52  0012               	return	
 10959                           
 10960                           ;CtoA.c: 24:         if (convertir != 0){
 10961  001E54  5047               	movf	_convertir^0,w,c
 10962  001E56  E009               	bz	l3801
 10963                           
 10964                           ;CtoA.c: 25:             stringScore[1]++;
 10965  001E58  2A5D               	incf	(_stringScore+1)^0,f,c
 10966                           
 10967                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10968  001E5A  0E3A               	movlw	58
 10969  001E5C  185D               	xorwf	(_stringScore+1)^0,w,c
 10970  001E5E  E103               	bnz	l3799
 10971                           
 10972                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10973  001E60  0E30               	movlw	48
 10974  001E62  6E5D               	movwf	(_stringScore+1)^0,c
 10975                           
 10976                           ;CtoA.c: 28:                 stringScore[0]++;
 10977  001E64  2A5C               	incf	_stringScore^0,f,c
 10978  001E66                     l3799:
 10979                           
 10980                           ;CtoA.c: 30:             convertir--;
 10981  001E66  0647               	decf	_convertir^0,f,c
 10982                           
 10983                           ;CtoA.c: 31:         } else {
 10984  001E68  0012               	return	
 10985  001E6A                     l3801:
 10986                           
 10987                           ;CtoA.c: 32:             convertir = 250;
 10988  001E6A  0EFA               	movlw	250
 10989  001E6C  6E47               	movwf	_convertir^0,c
 10990  001E6E  0CFA               	retlw	250	;funcret
 10991  001E70                     __end_of_CtoA:
 10992                           	callstack 0
 10993                           
 10994 ;; *************** function _high_rsi *****************
 10995 ;; Defined at:
 10996 ;;		line 20 in file "main.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;		None
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;		None
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1
 11010 ;;      Params:         0       0       0
 11011 ;;      Locals:         0       0       0
 11012 ;;      Temps:          4       0       0
 11013 ;;      Totals:         4       0       0
 11014 ;;Total ram usage:        4 bytes
 11015 ;; Hardware stack levels used: 1
 11016 ;; Hardware stack levels required when called: 1
 11017 ;; This function calls:
 11018 ;;		__TiRSITimer
 11019 ;; This function is called by:
 11020 ;;		Interrupt level 2
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	intcode
 11025  000008                     __pintcode:
 11026                           	callstack 0
 11027  000008                     _high_rsi:
 11028                           	callstack 24
 11029                           
 11030                           ;incstack = 0
 11031  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11032  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 11033  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 11034  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 11035  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 11036  00001A  ECDA  F00D         	call	__TiRSITimer	;wreg free
 11037  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 11038  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 11039  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 11040  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 11041  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11042  000030  0011               	retfie		f
 11043  000032                     __end_of_high_rsi:
 11044                           	callstack 0
 11045                           
 11046 ;; *************** function __TiRSITimer *****************
 11047 ;; Defined at:
 11048 ;;		line 37 in file "TiTTimer.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;		None
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1
 11062 ;;      Params:         0       0       0
 11063 ;;      Locals:         0       0       0
 11064 ;;      Temps:          1       0       0
 11065 ;;      Totals:         1       0       0
 11066 ;;Total ram usage:        1 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_high_rsi
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text95
 11076  001BB4                     __ptext95:
 11077                           	callstack 0
 11078  001BB4                     __TiRSITimer:
 11079                           	callstack 0
 11080                           
 11081                           ;TiTTimer.c: 39:     TMR0H = 223;
 11082                           
 11083                           ;incstack = 0
 11084                           
 11085                           ;TiTTimer.c: 40:     TMR0L = 148;
 11086  001BB4  D81E               	call	PL80	;call to abstracted procedure
 11087                           
 11088                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11089  001BB6  94F2               	bcf	242,2,c	;volatile
 11090                           
 11091                           ;TiTTimer.c: 42:     h_Tics++;
 11092  001BB8  4A09               	infsnz	_h_Tics^0,f,c
 11093  001BBA  2A0A               	incf	(_h_Tics+1)^0,f,c
 11094                           
 11095                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11096  001BBC  0E48               	movlw	72
 11097  001BBE  5C09               	subwf	_h_Tics^0,w,c
 11098  001BC0  0EEE               	movlw	238
 11099  001BC2  580A               	subwfb	(_h_Tics+1)^0,w,c
 11100  001BC4  A0D8               	btfss	status,0,c
 11101  001BC6  0012               	return	
 11102                           
 11103                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11104  001BC8  6A34               	clrf	_counter^0,c
 11105  001BCA                     i2l4777:
 11106  001BCA  0E07               	movlw	7
 11107  001BCC  6434               	cpfsgt	_counter^0,c
 11108  001BCE  D001               	goto	i2l4781
 11109  001BD0  D00D               	goto	i2l395
 11110  001BD2                     i2l4781:
 11111                           
 11112                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11113  001BD2  EC9B  F00E         	call	PL14	;call to abstracted procedure
 11114  001BD6  04DE               	decf	postinc2,w,c
 11115  001BD8  E107               	bnz	i2l4785
 11116                           
 11117                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11118  001BDA  5034               	movf	_counter^0,w,c
 11119  001BDC  EC7E  F00F         	call	PL26	;call to abstracted procedure
 11120  001BE0  5009               	movf	_h_Tics^0,w,c
 11121  001BE2  5EDE               	subwf	postinc2,f,c
 11122  001BE4  500A               	movf	(_h_Tics+1)^0,w,c
 11123  001BE6  5ADD               	subwfb	postdec2,f,c
 11124  001BE8                     i2l4785:
 11125                           
 11126                           ;TiTTimer.c: 50:         }
 11127  001BE8  2A34               	incf	_counter^0,f,c
 11128  001BEA  D7EF               	goto	i2l4777
 11129  001BEC                     i2l395:
 11130                           
 11131                           ;TiTTimer.c: 51:         h_Tics=0;
 11132  001BEC  6A09               	clrf	_h_Tics^0,c
 11133  001BEE  6A0A               	clrf	(_h_Tics+1)^0,c
 11134  001BF0  0012               	return		;funcret
 11135  001BF2                     __end_of__TiRSITimer:
 11136                           	callstack 0
 11137  001BF2                     PL80:
 11138                           	callstack 28
 11139  001BF2  0EDF               	movlw	223
 11140  001BF4  6ED7               	movwf	215,c	;volatile
 11141  001BF6  0E94               	movlw	148
 11142  001BF8  6ED6               	movwf	214,c	;volatile
 11143  001BFA  0C94               	retlw	148
 11144  001BFC                     __end_ofPL80:
 11145                           	callstack 0
 11146                           
 11147                           	psect	rparam
 11148  0000                     
 11149                           	psect	temp
 11150  000078                     btemp:
 11151                           	callstack 0
 11152  000078                     	ds	1
 11153  0000                     int$flags	set	btemp
 11154  0000                     wtemp8	set	btemp+1
 11155  0000                     ttemp5	set	btemp+1
 11156  0000                     ttemp6	set	btemp+4
 11157  0000                     ttemp7	set	btemp+8
 11158                           
 11159                           	psect	idloc
 11160                           
 11161                           ;Config register IDLOC0 @ 0x200000
 11162                           ;	unspecified, using default values
 11163  200000                     	org	2097152
 11164  200000  FF                 	db	255
 11165                           
 11166                           ;Config register IDLOC1 @ 0x200001
 11167                           ;	unspecified, using default values
 11168  200001                     	org	2097153
 11169  200001  FF                 	db	255
 11170                           
 11171                           ;Config register IDLOC2 @ 0x200002
 11172                           ;	unspecified, using default values
 11173  200002                     	org	2097154
 11174  200002  FF                 	db	255
 11175                           
 11176                           ;Config register IDLOC3 @ 0x200003
 11177                           ;	unspecified, using default values
 11178  200003                     	org	2097155
 11179  200003  FF                 	db	255
 11180                           
 11181                           ;Config register IDLOC4 @ 0x200004
 11182                           ;	unspecified, using default values
 11183  200004                     	org	2097156
 11184  200004  FF                 	db	255
 11185                           
 11186                           ;Config register IDLOC5 @ 0x200005
 11187                           ;	unspecified, using default values
 11188  200005                     	org	2097157
 11189  200005  FF                 	db	255
 11190                           
 11191                           ;Config register IDLOC6 @ 0x200006
 11192                           ;	unspecified, using default values
 11193  200006                     	org	2097158
 11194  200006  FF                 	db	255
 11195                           
 11196                           ;Config register IDLOC7 @ 0x200007
 11197                           ;	unspecified, using default values
 11198  200007                     	org	2097159
 11199  200007  FF                 	db	255
 11200                           
 11201                           	psect	config
 11202                           
 11203                           ; Padding undefined space
 11204  300000                     	org	3145728
 11205  300000  FF                 	db	255
 11206                           
 11207                           ;Config register CONFIG1H @ 0x300001
 11208                           ;	Oscillator
 11209                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11210                           ;	Fail-Safe Clock Monitor Enable bit
 11211                           ;	FCMEN = 0x0, unprogrammed default
 11212                           ;	Internal/External Oscillator Switchover bit
 11213                           ;	IESO = 0x0, unprogrammed default
 11214  300001                     	org	3145729
 11215  300001  06                 	db	6
 11216                           
 11217                           ;Config register CONFIG2L @ 0x300002
 11218                           ;	unspecified, using default values
 11219                           ;	Power-up Timer Enable bit
 11220                           ;	PWRT = 0x1, unprogrammed default
 11221                           ;	Brown-out Reset Enable bits
 11222                           ;	BOR = 0x3, unprogrammed default
 11223                           ;	Brown-out Reset Voltage bits
 11224                           ;	BORV = 0x3, unprogrammed default
 11225  300002                     	org	3145730
 11226  300002  1F                 	db	31
 11227                           
 11228                           ;Config register CONFIG2H @ 0x300003
 11229                           ;	Watchdog Timer Enable bit
 11230                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11231                           ;	Watchdog Timer Postscale Select bits
 11232                           ;	WDTPS = 0xF, unprogrammed default
 11233  300003                     	org	3145731
 11234  300003  1E                 	db	30
 11235                           
 11236                           ; Padding undefined space
 11237  300004                     	org	3145732
 11238  300004  FF                 	db	255
 11239                           
 11240                           ;Config register CONFIG3H @ 0x300005
 11241                           ;	CCP2 MUX bit
 11242                           ;	CCP2MX = 0x1, unprogrammed default
 11243                           ;	PORTB A/D Enable bit
 11244                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11245                           ;	Low-Power Timer1 Oscillator Enable bit
 11246                           ;	LPT1OSC = 0x0, unprogrammed default
 11247                           ;	MCLR Pin Enable bit
 11248                           ;	MCLRE = 0x1, unprogrammed default
 11249  300005                     	org	3145733
 11250  300005  81                 	db	129
 11251                           
 11252                           ;Config register CONFIG4L @ 0x300006
 11253                           ;	Stack Full/Underflow Reset Enable bit
 11254                           ;	STVREN = 0x1, unprogrammed default
 11255                           ;	Single-Supply ICSP Enable bit
 11256                           ;	LVP = OFF, Single-Supply ICSP disabled
 11257                           ;	Boot Block Size Select bits
 11258                           ;	BBSIZ = 0x0, unprogrammed default
 11259                           ;	Extended Instruction Set Enable bit
 11260                           ;	XINST = 0x0, unprogrammed default
 11261                           ;	Background Debugger Enable bit
 11262                           ;	DEBUG = 0x1, unprogrammed default
 11263  300006                     	org	3145734
 11264  300006  81                 	db	129
 11265                           
 11266                           ; Padding undefined space
 11267  300007                     	org	3145735
 11268  300007  FF                 	db	255
 11269                           
 11270                           ;Config register CONFIG5L @ 0x300008
 11271                           ;	unspecified, using default values
 11272                           ;	Code Protection bit
 11273                           ;	CP0 = 0x1, unprogrammed default
 11274                           ;	Code Protection bit
 11275                           ;	CP1 = 0x1, unprogrammed default
 11276  300008                     	org	3145736
 11277  300008  03                 	db	3
 11278                           
 11279                           ;Config register CONFIG5H @ 0x300009
 11280                           ;	unspecified, using default values
 11281                           ;	Boot Block Code Protection bitProtect Boot
 11282                           ;	CPB = 0x1, unprogrammed default
 11283                           ;	Data EEPROM Code Protection bit
 11284                           ;	CPD = 0x1, unprogrammed default
 11285  300009                     	org	3145737
 11286  300009  C0                 	db	192
 11287                           
 11288                           ;Config register CONFIG6L @ 0x30000A
 11289                           ;	unspecified, using default values
 11290                           ;	Write Protection bit
 11291                           ;	WRT0 = 0x1, unprogrammed default
 11292                           ;	Write Protection bit
 11293                           ;	WRT1 = 0x1, unprogrammed default
 11294  30000A                     	org	3145738
 11295  30000A  03                 	db	3
 11296                           
 11297                           ;Config register CONFIG6H @ 0x30000B
 11298                           ;	unspecified, using default values
 11299                           ;	Configuration Register Write Protection bit
 11300                           ;	WRTC = 0x1, unprogrammed default
 11301                           ;	Boot Block Write Protection bit
 11302                           ;	WRTB = 0x1, unprogrammed default
 11303                           ;	Data EEPROM Write Protection bit
 11304                           ;	WRTD = 0x1, unprogrammed default
 11305  30000B                     	org	3145739
 11306  30000B  E0                 	db	224
 11307                           
 11308                           ;Config register CONFIG7L @ 0x30000C
 11309                           ;	unspecified, using default values
 11310                           ;	Table Read Protection bit
 11311                           ;	EBTR0 = 0x1, unprogrammed default
 11312                           ;	Table Read Protection bit
 11313                           ;	EBTR1 = 0x1, unprogrammed default
 11314  30000C                     	org	3145740
 11315  30000C  03                 	db	3
 11316                           
 11317                           ;Config register CONFIG7H @ 0x30000D
 11318                           ;	unspecified, using default values
 11319                           ;	Boot Block Table Read Protection bit
 11320                           ;	EBTRB = 0x1, unprogrammed default
 11321  30000D                     	org	3145741
 11322  30000D  40                 	db	64
 11323                           tosu	equ	0xFFF
 11324                           tosh	equ	0xFFE
 11325                           tosl	equ	0xFFD
 11326                           stkptr	equ	0xFFC
 11327                           pclatu	equ	0xFFB
 11328                           pclath	equ	0xFFA
 11329                           pcl	equ	0xFF9
 11330                           tblptru	equ	0xFF8
 11331                           tblptrh	equ	0xFF7
 11332                           tblptrl	equ	0xFF6
 11333                           tablat	equ	0xFF5
 11334                           prodh	equ	0xFF4
 11335                           prodl	equ	0xFF3
 11336                           indf0	equ	0xFEF
 11337                           postinc0	equ	0xFEE
 11338                           postdec0	equ	0xFED
 11339                           preinc0	equ	0xFEC
 11340                           plusw0	equ	0xFEB
 11341                           fsr0h	equ	0xFEA
 11342                           fsr0l	equ	0xFE9
 11343                           wreg	equ	0xFE8
 11344                           indf1	equ	0xFE7
 11345                           postinc1	equ	0xFE6
 11346                           postdec1	equ	0xFE5
 11347                           preinc1	equ	0xFE4
 11348                           plusw1	equ	0xFE3
 11349                           fsr1h	equ	0xFE2
 11350                           fsr1l	equ	0xFE1
 11351                           bsr	equ	0xFE0
 11352                           indf2	equ	0xFDF
 11353                           postinc2	equ	0xFDE
 11354                           postdec2	equ	0xFDD
 11355                           preinc2	equ	0xFDC
 11356                           plusw2	equ	0xFDB
 11357                           fsr2h	equ	0xFDA
 11358                           fsr2l	equ	0xFD9
 11359                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    145
    Data        65
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5     104
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40279
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          4     4      0     916
                                             10 COMRAM     4     4      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      5      68       5       81.2%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITBIGSFRhhhhhl     1A      0       0       9        0.0%
BITBIGSFRhhhhhh      D      0       0       8        0.0%
BITBIGSFRhhhhlh      B      0       0      11        0.0%
BITBIGSFRhll         8      0       0      17        0.0%
BITBIGSFRhlh         7      0       0      16        0.0%
BITBIGSFRhhhlh       7      0       0      14        0.0%
BITBIGSFRhhhhll      7      0       0      13        0.0%
BITBIGSFRllh         6      0       0      19        0.0%
BITBIGSFRlhl         5      0       0      18        0.0%
BITBIGSFRhhhhhl      4      0       0      10        0.0%
BITBIGSFRlll         2      0       0      20        0.0%
BITBIGSFRhhhhlh      1      0       0      12        0.0%
BITBIGSFRhhlh        1      0       0      15        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16F      21        0.0%
DATA                 0      0     16F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 10 19:04:17 2022

              TiResetTics@Handle 0064                 _loginNOTRegister 03B8  
                              _i 002A                                _j 0029  
                             PL2 11CC                               PL4 11DA  
                             PL6 11E2                               PL8 0F3E  
                             l73 1CF2                 UgetUserName@quin 0066  
      ??_UcheckExistsNotFinished 0064                              PL10 09A8  
                            PL20 14BE                              PL12 11EC  
                            PL30 1C98                              PL22 0F5A  
                            PL14 1D36                              PL40 158E  
                            PL32 09BE                              PL24 0C88  
                            PL16 0F4C                              PL50 0C94  
                            PL42 09C4                              PL34 1B52  
                            PL26 1EFC                              PL18 1858  
                            PL60 1E88                              PL52 0CA0  
                            PL44 1B60                              PL36 1580  
                            PL28 09B4                              PL70 1CA6  
                            PL62 1730                              PL54 1C26  
                            PL46 0F6C                              PL38 1958  
                            PL80 1BF2                              PL72 13A4  
                            PL64 1B12                              PL56 0CAC  
                            PL48 09CE                              PL90 09E8  
                            PL82 1966                              PL74 1AAC  
                            PL66 11F6                              PL58 159C  
                            PL84 09DA                              PL76 1F72  
                            PL68 1C30                              PL86 1BAC  
                            PL78 0CB6                              PL88 09E2  
         __end_of_compareStrings 1C26                              l630 06C2  
                            l542 032C                              l801 0CE8  
                            l810 0D4E                              l570 0452  
                            l803 0D18                              l804 0D0E  
                            l572 0460                              l814 0D72  
                            l584 0498                              l753 1DB0  
                            l817 0DB4                              l569 0442  
                            l765 1506                              l796 0CC2  
                            l797 0CD4                              l990 1008  
                            l799 0CDE                              l897 17E0  
                            l986 0FCC                              l996 102E  
                            u310 1948                              u250 1906  
                            u308 1932                              u270 191C  
                            u328 194A                              u290 1930  
                            u268 1908                              u288 191E  
                            _pos 002F                              _tmp 0033  
               ??_CantaPartBaixa 0064                              prod 000FF3  
                            wreg 000FE8                      _ultimaTecla 0053  
                           l1013 1118                             l1015 113E  
                           l1211 1750                             l1060 1666  
                           l1052 15A8                             l1061 15FE  
                           l1053 15C2                             l1062 1618  
                           l1055 15E4                             l1064 163A  
                           l1337 0A5C                             l1354 0B56  
                           l1346 0ACC                             l1339 0A7E  
                           l2413 1FDE                             l3223 162E  
                           l3215 1614                             l1368 0C2C  
                           l2433 1DEA                             l5011 10FC  
                           l2451 1E02                             l3237 1650  
                           l2445 1DFA                             l5031 1138  
                           l5023 1120                             l3247 1654  
                           l2439 1DF2                             l5017 110C  
                           l3185 15D8                             l3177 15BE  
                           l6001 0DC0                             l5105 17B6  
                           l5113 17C4                             l5121 09F0  
                           l5043 1152                             l5131 0A0A  
                           l4413 1E9A                             l5053 1174  
                           l6101 0EEE                             l6021 0E02  
                           l6013 0DDC                             l2469 1FD2  
                           l5039 114A                             l3199 15FA  
                           l6007 0DCA                             l5215 0B10  
                           l5207 0AE8                      _puntuacions 0098  
                           l3801 1E6A                             l4409 1C72  
                           l5049 1166                             l6121 13F2  
                           l6105 0EF8                             l6033 0E1C  
                           l4601 1FEA                             l7001 0732  
                           l5321 189E                             l5305 1872  
                           l5081 1762                             l5233 0B66  
                           l5225 0B42                             l5153 0A34  
                           l5129 0A06                             l4419 1CF6  
                           l4515 1BA6                             l4507 1B92  
                           l5059 1180                             l6203 1216  
                           l6123 13F6                             l6051 0E44  
                           l7011 0754                             l5067 173C  
                           l5243 0B86                             l5235 0B6A  
                           l5147 0A28                             l5139 0A16  
                           l4525 006E                             l4509 1B98  
                           l6117 13E6                             l6061 0E72  
                           l6045 0E36                             l6029 0E0E  
                           l6109 0F00                             l7021 0770  
                           l7005 0748                             l5333 18B6  
                           l5253 0BA8                             l6151 1438  
                           l6143 1426                             l6127 1402  
                           l4703 1CE0                             l4455 1C12  
                           l6063 0E76                             l6039 0E28  
                           l7015 075E                             l5343 18D0  
                           l5327 18AA                             l5351 18DE  
                           l5087 1774                             l5079 175E  
                           l5175 0A7A                             l5159 0A44  
                           l4721 1696                             l6321 1352  
                           l6313 133C                             l6161 1452  
                           l6137 1418                             l6129 1408  
                           l4801 1D62                             l4449 1BFE  
                           l6073 0E8E                             l7017 0764  
                           l4467 1D1C                             l4475 1D26  
                           l4387 1C4C                             l6331 1366  
                           l6307 1332                             l6227 1260  
                           l6219 1242                             l6171 1470  
                           l4627 1FF6                             l4563 1E24  
                           l7035 078A                             l7027 0778  
                           l5355 18E2                             l5099 17A0  
                           l5291 0C2E                             l5283 0C00  
                           l5259 0BB6                             l6237 1282  
                           l6181 1486                             l6165 145C  
                           l6157 1446                             l6149 1434  
                           l6093 0EC6                             l6085 0EB2  
                           l6069 0E86                             l4549 003E  
                           l7109 08AE                             l7061 07FC  
                           l7045 07BA                             l7117 08BA  
                           l5269 0BDA                             l7141 1A1E  
                           l6327 135E                             l6271 12CC  
                           l6263 12BC                             l6351 1376  
                           l6079 0EA0                             l7071 083C  
                           l7039 0792                             l4913 0FD8  
                           l6273 12D6                             l6257 12AA  
                           l6249 1294                             l6177 147E  
                           l5297 0C38                             l4907 0FC0  
                           l6291 130C                             l6283 12F4  
                           l6275 12DA                             l6195 1202  
                           l6187 1490                             l4691 1CC4  
                           l4835 14F4                             l4827 14E2  
                           l6099 0EEC                             l7059 07F6  
                           l6611 0312                             l4925 1000  
                           l4845 1508                             l7093 0880  
                           l7085 0872                             l6701 03F6  
                           l6621 0320                             l6613 0314  
                           l6605 02FA                             l5901 17FE  
                           l3799 1E66                             l4935 101E  
                           l6295 1310                             l4687 1CBE  
                           l6615 0318                             l5903 1802  
                           l4929 100C                             l4873 1558  
                           l4857 1522                             l6705 03FE  
                           l6641 0356                             l6633 033E  
                           l4971 1068                             l4883 0F76  
                           l4699 1CD8                             l4867 1544  
                           l7099 08A0                             l6715 040A  
                           l6651 0370                             l4981 108E  
                           l4965 1056                             l4893 0F9C  
                           l4797 1D5A                             l4869 1550  
                           l6733 0432                             l6661 0390  
                           l5917 1826                             l5909 180E  
                           l4991 10BE                             l4975 1076  
                           l6823 0512                             l6807 04EA  
                           l6743 044E                             l6647 036C  
                           l6921 060E                             l6665 0398  
                           l5929 183E                             l4899 0FAA  
                           l5971 0D4A                             l5947 0CDA  
                           l6691 03D6                             l6675 03AE  
                           l4997 10CE                             l5973 0D50  
                           l5965 0D24                             l6933 062C  
                           l6909 05F6                             l6853 055C  
                           l6781 04AA                             l6757 0478  
                           l5975 0D54                             l5959 0D12  
                           l6927 061E                             l6863 057E  
                           l6855 0562                             l6839 0534  
                           l6775 049C                             l6599 02E6  
                           l6953 0662                             l6945 0648  
                           l6929 0624                             l6793 04C8  
                           l6769 048A                             l5897 17F6  
                           l5987 0D76                             l6883 05BE  
                           l6867 0596                             l6973 069E  
                           l6965 067E                             l6983 06C6  
                           l6959 0670                             l6993 06EC  
                           l6969 069A                             l6897 05DE  
                           l6989 06D8                             STR_1 02DB  
                           STR_2 02D4                             STR_3 02BB  
                           STR_4 02A2                             STR_5 0292  
                           STR_6 02CC                             STR_7 02AF  
                           STR_8 02C4                             _LATD 000F8C  
                           u4010 1726                             u4030 1B2E  
                           u4040 1B44                             u4037 1B2C  
                           u4047 1B42                             u3630 1AC2  
                           u3710 1A5C                             u4190 0FA6  
                           u3650 1AD8                             u3730 1A72  
                           u3708 1B06                             u3670 1AEC  
                           u3750 1A86                             u4710 0A64  
                           u3648 1AC4                             u3728 1A5E  
                           u3840 1C16                             u6320 0EAE  
                           u4720 0A68                             u3690 1B04  
                           u3770 1A9E                             u7130 0468  
                           u7050 0418                             u3668 1ADA  
                           u3748 1A74                             u7150 0470  
                           u3688 1AEE                             u3768 1A88  
                           u4760 0B26                             u6610 1256  
                           u3788 1AA0                             u6380 13B8  
                           u4860 0BD0                             u3990 1CC8  
                           u4880 0BF0                             u6810 1342  
                           u6730 12E6                             u7610 0750  
                           u4890 0C14                             u6820 1358  
                           u6388 13BA                             u7700 07F4  
                           u7460 0638                             u7470 063E  
                           u7720 080E                             u6690 12B6  
                           u6960 03A4                             u6980 03BC  
                           _CtoA 1E4C                  ??_SsetNovaTecla 0064  
         __end_of_SIOcheckKrebut 1FD6                             _cap1 03B0  
                           _Rows 0040                             _cap2 03AF  
                           _main 19E8                             _mask 000E  
                           _hora 0056                             _menu 02E4  
                           _nota 0026            getArrayShowUsers@quin 0066  
                __end_of_HJugant 2000                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0078  
                __end_of_JJuguem 00AC                             prodh 000FF4  
                           prodl 000FF3                  __end_of_LcClear 1E88  
                           start 0032                  __end_of_CantaIR 1EEC  
                   ?_initAltaveu 005F                     ___param_bank 000000  
                    _stringScore 005C                 __end_of_GLCDInit 010C  
                 _HClearNouSegon 012E                            ?_CtoA 005F  
                    Espera@Timer 006E                            ?_main 005F  
                          ?_menu 005F                  __end_of___lbdiv 1CE4  
                          _EEADR 000FA9                    ??_TiInitTimer 0064  
                          _T0CON 000FD5                  ?_compareStrings 0064  
                          i2l395 1BEC                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _LcLCD 1B1C                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                     ?_init_eusart 005F  
                          _TXREG 000FAD                            _SMSon 010C  
                          _TXSTA 000FAC                      _MNovaLletra 00EC  
                          _Minit 00F4                 __end_of_HGetTime 012E  
                          _Sinit 00E4                            _Timer 003D  
                          _Uinit 14D0                  __end_of_initSIO 00BC  
                          _s_ptr 000B                            _score 0010  
                          _nou_s 03BA            __end_of_JoystickMotor 167C  
                _HActualitzaHora 1E28                   __pbitbssCOMRAM 03A8  
                          tablat 000FF5                      _LcNewString 005A  
                  ??_TiResetTics 0064                  ?_SIOcheckKrebut 005F  
             _UshowUsersCalculat 1FEE                            ttemp5 0079  
                          ttemp6 007C                            ttemp7 0080  
                          status 000FD8                 ?_checkHoraAcabat 005F  
                          wtemp8 0079                  ___lbdiv@divisor 0064  
               __end_of_LcGotoXY 1D18             CToAConverteix@numero 0064  
                ___lbdiv@counter 0066                 __end_of_LcLliure 0072  
                  ??__TiRSITimer 005F                 __end_of_LcScroll 011E  
                     _TiGetTimer 1D18          EscriuPrimeraOrdre@ordre 0065  
                   __end_of_CtoA 1E70                 __end_of_JendGame 015A  
                    ?_SIOendGame 005F                  __initialization 1970  
            ?_UshowUsersCalculat 005F                     __end_of_main 1A50  
         __end_of_HClearNouSegon 0132                     __end_of_menu 09A8  
        ?_SIOHaAcabatPuntuacions 005F                     ?_playAltaveu 005F  
              __end_of_GLCDMotor 11CC                 __end_of_TeTeclat 14BE  
                  _indexNextUser 002C                  _hi_ha_hora_sio2 03A8  
                         ??_CtoA 0064                           ??_main 0075  
                         ??_menu 00E3                    __activetblptr 000002  
                  _ultimaTeclaAD 0018                 GLCDMotor@length1 001A  
               GLCDMotor@length2 0019                       _JnovaTecla 0094  
               __end_of_UgetTop5 1F72                           ?_LcLCD 005F  
                         ?_SMSon 005F                     ?_CToAobtenir 0064  
                         ?_Minit 005F             ??_UshowUsersCalculat 0064  
                         ?_Sinit 005F                           ?_Uinit 005F  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0              __end_of_TiInitTimer 1D6C  
                         _ADRESH 000FC4                           _EEDATA 000FA8  
                      ??_HJugant 0064                           _EECON2 000FA7  
                      ??_JJuguem 0064                        ??_LcClear 0072  
                      ??_CantaIR 0066                           i2l4781 1BD2  
                         i2l4785 1BE8                           i2l4777 1BCA  
                 LcGotoXY@Fisics 006D                   LcGotoXY@Column 0071  
                  ??_WaitForBusy 006B                           _SPBRGH 000FB0  
                 _sumaPulsacions 003C                __end_of_CToAReset 00B4  
                         _SMSoff 0112               SIONovaDireccio@num 0064  
                         _LcInit 167C                     _MNouJoystick 00FC  
                 _UgetNumUsuaris 013A                           _SMotor 1200  
            escriureCharEEPROM@c 0065                           _TeInit 00DC  
                         _Espera 1E92                     _LcGotoXY$343 006F  
                         _Krebut 03A9   __end_of_SIOHaAcabatPuntuacions 0152  
                         _RowAct 003F                    ?_miraPassword 005F  
            __end_of_TiResetTics 1EFC                           Uinit@k 006A  
               __end_of_high_rsi 0032                           _h_Tics 0009  
                ?_HClearNouSegon 005F                        ??___lbdiv 0065  
                  ?_CToAHaAcabat 005F                 __end_of_initHora 00C4  
            __end_of__TiRSITimer 1BF2                           _horaTX 0001  
               __end_of_menuList 0292                           clear_0 19B6  
                         clear_1 19C2                           clear_2 19D4  
                         _jugant 03AE                           _segons 0015  
                     _UenviaChar 1F9C                           isa$std 000001  
               _llegirCharEEPROM 1FAC                       UenviaPas@c 0065  
              __end_of_HNouSegon 1FE2                        ??_initSIO 0065  
                   __pdataCOMRAM 0045                 __end_of_motorSIO 0C88  
        __end_of_HActualitzaHora 1E4C                ??_SIONovaDireccio 0064  
               __end_of_motorJoc 17DE                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ??_CToAConverteix 0064  
              __end_of_CantaData 1C98                     TeTeclat@cols 0036  
               ___lbdiv@dividend 0065                        ?_GLCDInit 005F  
                  ?_UcheckExists 005F                       __accesstop 0080  
        __end_of__initialization 19DA           __end_of_UgetNumUsuaris 013E  
              __end_of_LcPutChar 1BAC                    _JnovaDireccio 009C  
               JnovaDireccio@dir 0064                    ___rparam_used 000001  
                 ??_miraPassword 0069                    __end_of_LcLCD 1B52  
                    ?_TiGetTimer 005F                    __end_of_SMSon 0112  
              SIONovaTecla@tecla 0064                   __pcstackCOMRAM 005F  
                  __end_of_Minit 00FC              __end_of_WaitForBusy 1C78  
                  __end_of_Sinit 00EC                    __end_of_Uinit 1580  
              __end_of_NoFerMenu 0156                        ?_HGetTime 0064  
                   __pidataBANK0 1D6C                   ??_CToAHaAcabat 0064  
              __end_of_URegister 014A                __end_of_HnoJugant 012A  
              __end_of_SiFerMenu 014E                       __end_ofPL2 11DA  
                     __end_ofPL4 11E2                       __end_ofPL6 11EC  
                     __end_ofPL8 0F4C                 ___lbdiv@quotient 0067  
              __end_of_TiGetTics 1DE0                      _TiInitTimer 1D44  
                    ?_JnovaTecla 005F                          ??_LcLCD 0073  
                        ??_SMSon 0064                        ?_LcGotoXY 006C  
                      ?_LcLliure 005F                          ??_Minit 0065  
                      ?_LcScroll 005F                          ??_Sinit 0065  
                JnovaTecla@tecla 0064                          ??_Uinit 0068  
                      ?_JendGame 005F                   ??_UcheckExists 0064  
            MNouJoystick@posicio 0064                       ??_GLCDInit 0065  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                      ?_TeTeclat 005F                      _TiResetTics 1EEC  
                ?_UgetNumUsuaris 005F                   ?_JnovaDireccio 005F  
                  ??_UmotorUsers 0069                __end_of_UgetScore 1FCA  
                  ?_JoystickInit 005F                          ?_SMSoff 005F  
                        ?_LcInit 005F                    _CantaPartAlta 1AB6  
                        ?_SMotor 005F                          ?_TeInit 005F  
                        ?_Espera 006B                __end_of_UenviaPas 1F9C  
                    __TiRSITimer 1BB4              _indexNextUserStruct 002B  
                      ?_UgetTop5 005F                __end_of_UnewScore 007C  
                     ??_HGetTime 0066                    ?_UgetUserName 0064  
               ??_compareStrings 0067                          _BAUDCON 000FB8  
                    ?_UenviaChar 0064       __end_of_calculateShowUsers 013A  
                        LcInit@i 0070                 ?_HActualitzaHora 0064  
                     ??_LcGotoXY 006D                     ?_MNovaLletra 005F  
                     ??_LcLliure 0064                       ??_LcScroll 0067  
               ??_SIOcheckKrebut 0064                       ??_JendGame 0064  
                        _HJugant 1FFA                        ?_high_rsi 005F  
                        _JJuguem 00A4                          _LcClear 1E70  
                        _CantaIR 1ED0                     ?_LcNewString 0067  
                 ??_JoystickInit 0064                        ?_initHora 005F  
                     ??_TeTeclat 006B                      _WaitForBusy 1C3A  
                 ?_CantaPartAlta 005F            __end_of_SsetNovaTecla 00D4  
                        __Hparam 0000                          __Lparam 0000  
                     ??_UgetTop5 0064                     ??_SIOendGame 0064  
                      ?_motorSIO 005F                        ?_motorJoc 005F  
                 ??_UgetUserName 0066                _getArrayShowUsers 1EB4  
            __end_of_UmotorUsers 0F3E         ?_UcheckExistsNotFinished 005F  
                        ___lbdiv 1CB0                    ?_motorAltaveu 005F  
                   __psmallconst 0200               ?_getArrayShowUsers 0064  
                        __pcinit 1970     __end_of_UcheckExistsGetError 0142  
                        _ferMenu 03B2                       _init_ports 1F22  
                        __ramtop 0200                          __ptext0 19E8  
                        __ptext1 09EE                          __ptext2 0072  
                        __ptext3 173A                          __ptext4 1DE0  
                        __ptext5 011E                          __ptext6 1FCA  
                        __ptext7 007C                          __ptext8 0084  
                        __ptext9 008C                        _T0CONbits 000FD5  
                      _GLCDMotor 0F74                        CantaIR@IR 0066  
                        _initSIO 00B4                          _counter 0034  
                        _horaTmp 0041           conversorJoystick@direc 0064  
            ??_getArrayShowUsers 0066                      UenviaChar@c 0065  
                  ?_SIOEnviaHora 005F             __end_of_miraPassword 1E28  
     __end_of_escriureCharEEPROM 1DBA                 LcNewString@new_s 0067  
                WaitForBusy@Busy 006B                      Uinit@k_1194 006B  
                   _do_showUsers 03B5                          _userPtr 0007  
              GLCDMostraMenu@num 0064               __end_of_SIOendGame 0122  
                     ??_high_rsi 0060             __end_of_CToAHaAcabat 0162  
           end_of_initialization 19DA                          _usuaris 0100  
                  UgetScore@quin 0064                  ??_JnovaDireccio 0064  
                     ??_initHora 0065         __end_of_llegirCharEEPROM 1FBC  
                  __Lmediumconst 0000                  TiGetTics@Handle 0068  
                  _MsetNovaTecla 00D4                _conversorJoystick 1DE0  
              __end_of_motorHora 18F4                 ??_HClearNouSegon 0064  
                     _novaLletra 0051        __end_of_getArrayShowUsers 1ED0  
             ?_conversorJoystick 005F                  _usuariActualSIO 004A  
                     ??_motorSIO 0073                        _CToAReset 00AC  
                     ??_motorJoc 0072                  TiGetTics@actual 0069  
                  ?_SIONovaTecla 005F                       GLCDMotor@j 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                _SIONovaDireccio 008C                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                 ??_motorAltaveu 006B                       _numUsuaris 002D  
           __end_of_UcheckExists 0146                    TeTeclat@files 0035  
            ??_conversorJoystick 0064               SIOStartGame@usuari 0064  
                  TeTeclat@state 0037                        _PORTCbits 000F82  
                      _PORTDbits 000F83                       ?_GLCDMotor 005F  
                  ?_SIOStartGame 005F                   ??_SIOEnviaHora 0064  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _HNouSegon 1FD6                UnewScore@scoretmp 0064  
                 _GLCDMostraMenu 0042        __end_of_conversorJoystick 1E04  
                ??_CantaPartAlta 0064                   ?_MsetNovaTecla 005F  
                      _CantaData 1C78                      _UmotorUsers 0CC0  
                      _TXSTAbits 000FAC  __end_of_UcheckExistsNotFinished 0042  
                 __end_of_SMSoff 0118                     ??_TiGetTimer 0064  
                 __end_of_LcInit 1730                   ??_SIONovaTecla 0064  
                     ?_CToAReset 005F                   __end_of_SMotor 13A4  
                      _LcPutChar 1B6C                   __end_of_TeInit 00E4  
              motorAltaveu@state 0023                   __end_of_Espera 1EB4  
                 GLCDMotor@state 0020       __end_of_EscriuPrimeraOrdre 1958  
                  __pidataCOMRAM 1F08                      ?_init_ports 005F  
                      _NoFerMenu 0152                        _ColumnAct 003E  
           __end_of_JoystickInit 1F8C                   ??_SIOStartGame 0064  
                      _URegister 0146                        _HnoJugant 0126  
                   ?_TiInitTimer 005F                     ??_JnovaTecla 0064  
                      _SiFerMenu 014A                      __end_ofPL10 09B4  
                    __end_ofPL20 14D0                      __end_ofPL12 11F6  
                    __end_ofPL30 1CA6                      __end_ofPL22 0F6C  
                    __end_ofPL14 1D44                      __end_ofPL40 159C  
                    __end_ofPL32 09C4                      __end_ofPL24 0C94  
                    __end_ofPL16 0F5A                      __end_ofPL50 0CA0  
                    __end_ofPL42 09CE                      __end_ofPL34 1B60  
                    __end_ofPL26 1F08                      __end_ofPL18 1870  
                    __end_ofPL60 1E92                      __end_ofPL52 0CAC  
                    __end_ofPL44 1B6C                      __end_ofPL36 158E  
                    __end_ofPL28 09BE                      __end_ofPL70 1CB0  
                    __end_ofPL62 173A                      __end_ofPL54 1C30  
                    __end_ofPL46 0F74                      __end_ofPL38 1966  
                    __end_ofPL80 1BFC                      __end_ofPL72 13AE  
                    __end_ofPL64 1B1C                      __end_ofPL56 0CB6  
                    __end_ofPL48 09DA                      __end_ofPL90 09EE  
                    __end_ofPL82 1970                      __end_ofPL74 1AB6  
                    __end_ofPL66 1200                      __end_ofPL58 15A6  
                    __end_ofPL84 09E2                      __end_ofPL76 1F7A  
                    __end_ofPL68 1C3A                      __end_ofPL86 1BB4  
                    __end_ofPL78 0CC0                      __end_ofPL88 09E8  
            start_initialization 1970                        _TiGetTics 1DBA  
         __end_of_GLCDMostraMenu 004E                       ?_HNouSegon 005F  
               ??_UgetNumUsuaris 0064                 UmotorUsers@state 0027  
           __end_of_UgetUserName 1F66               __end_of_TiGetTimer 1D36  
                  JJuguem@usuari 0064                    _JoystickMotor 15A6  
                   ?_TiResetTics 005F                       ?_CantaData 005F  
           _UcheckExistsGetError 013E          __end_of_SIONovaDireccio 0094  
                       ??_SMSoff 0064                         ??_LcInit 006F  
                      _NovaTecla 0052                         ??_SMotor 006B  
                       ??_TeInit 0065                     ?__TiRSITimer 005F  
                  ??_initAltaveu 0065                         ??_Espera 006D  
                      _UgetScore 1FBC               __end_of_JnovaTecla 009C  
                     ?_LcPutChar 005F                        _UenviaPas 1F8C  
                    __pdataBANK0 00BC                   motorHora@state 0014  
                   _menuDaltGLCD 0021                     ??_UenviaChar 0065  
                      _UnewScore 0072                       ?_NoFerMenu 005F  
                    ??_GLCDMotor 0073                       ?_URegister 005F  
                     ?_HnoJugant 005F                ??_checkHoraAcabat 0064  
                  ??_init_eusart 0064                       ?_SiFerMenu 005F  
                    __pbssCOMRAM 0001                    __pcstackBANK0 00E3  
                     ?_TiGetTics 0064                  ?_GLCDMostraMenu 005F  
                       ?_HJugant 005F                   ?_JoystickMotor 005F  
                ??_MsetNovaTecla 0064             __end_of_motorAltaveu 1858  
                       ?_JJuguem 005F                         ?_LcClear 005F  
                       ?_CantaIR 005F               _calculateShowUsers 0136  
                 _CantaPartBaixa 1A50         ??_SIOHaAcabatPuntuacions 0064  
          ?_UcheckExistsGetError 005F                     ?_WaitForBusy 005F  
             MsetNovaTecla@tecla 0064               SsetNovaTecla@tecla 0064  
             __end_of_UenviaChar 1FAC              ?_calculateShowUsers 005F  
                     ?_UgetScore 005F                      ??_CToAReset 0064  
           __end_of_SIOEnviaHora 0126                     _miraPassword 1E04  
                      __pintcode 0008                         ?___lbdiv 0064  
                  ??_playAltaveu 0064                       ?_UenviaPas 0064  
                CantaPartBaixa@c 0065                     _CToAHaAcabat 015E  
            __end_of_initAltaveu 00CC                       ?_UnewScore 005F  
                      _arrayZero 0045                         ?_initSIO 005F  
                    __smallconst 0200                        _convertir 0047  
                  ??_CToAobtenir 0066             ??_calculateShowUsers 0064  
           __end_of_SIONovaTecla 008C                      ??_HNouSegon 0064  
                    _direccioSIO 0049                      _direccioJoc 0013  
         __end_of_CantaPartBaixa 1AAC               JoystickMotor@state 0017  
                       _GLCDInit 0104                      _do_register 03B6  
            __end_of_init_eusart 1F52                        _newString 03B1  
                   _UcheckExists 0142                        _loginText 00DB  
                      _jugantSIO 03AA                        _jugantJoc 03AB  
                   UgetTop5@quin 0064                      ??_CantaData 0066  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _LATDbits 000F8C                ?_llegirCharEEPROM 005F  
                  ?_MNouJoystick 005F                 ?_SIONovaDireccio 005F  
           __end_of_SIOStartGame 0084                    UenviaChar@pos 0064  
             _escriureCharEEPROM 1D94                        _novaTecla 0054  
             ??_llegirCharEEPROM 0064                    motorSIO@state 000D  
                       _PIR1bits 000F9E                      ??_LcPutChar 0072  
                      _timerGLCD 0022                        _motorHora 1870  
                       _RCONbits 000FD0                        _reproduir 03B3  
                       _HGetTime 012A                        _timerHora 0016  
                      _timerMenu 0032              ?_escriureCharEEPROM 0064  
                    ??_NoFerMenu 0064                       _ADCON0bits 000FC2  
                    ??_URegister 0064                      ??_HnoJugant 0064  
                    ??_SiFerMenu 0064              __end_of_playAltaveu 0136  
                       Espera@ms 006B                        _zeroTecla 003A  
                       _LcGotoXY 1CE4                   _usuariLoguejat 004F  
                       _LcLliure 0066                      ??_TiGetTics 0066  
            llegirCharEEPROM@pos 0064                         _LcScroll 0118  
                ??_JoystickMotor 0065                    GLCDMotor@max1 004E  
                  GLCDMotor@max2 004D                    GLCDMotor@min1 001E  
                  GLCDMotor@min2 001D                     _teclaPremuda 00C4  
                       _JendGame 0156                        _usuariJoc 004C  
                    LcGotoXY@Row 006C                        copy_data0 1984  
                      copy_data1 19A4             ??_escriureCharEEPROM 0065  
                ?_CantaPartBaixa 005F              __end_of_CToAobtenir 015E  
         ??_UcheckExistsGetError 0064            escriureCharEEPROM@pos 0064  
                       _TeTeclat 13AE            __end_of_JnovaDireccio 00A4  
                 ??_MNouJoystick 0064                   _do_updateScore 03B4  
                   ?_UmotorUsers 005F                     _JoystickInit 1F7A  
                     _EECON1bits 000FA6                     _registerText 00D0  
                    _indexUsuari 0030                    motorJoc@state 0012  
                       __Hrparam 0000                      _initAltaveu 00C4  
                    ??_UgetScore 0064                         _UgetTop5 1F66  
                      menu@state 002E                         __Lrparam 0000  
                     ?_motorHora 005F                     _UgetUserName 1F52  
                    ??_UenviaPas 0065                     _novaDireccio 0050  
                    ??_UnewScore 0064                     ??_init_ports 0064  
            HActualitzaHora@nova 0064       __end_of_UshowUsersCalculat 1FFA  
                       _charActu 000F                      _init_eusart 1F3C  
                   _novaTeclaJOC 004B                     _novaTeclaSIO 0048  
                _do_check_exists 03B7                         __ptext10 0122  
                       __ptext11 0126               _EscriuPrimeraOrdre 18F4  
                       __ptext20 1E04                         __ptext12 1FD6  
                       __ptext21 1EB4                         __ptext13 1FFA  
                       __ptext30 1F9C                         __ptext22 1FE2  
                       __ptext14 012A                         __ptext31 0036  
                       __ptext23 0136                         __ptext15 012E  
                       __ptext40 0118                         __ptext32 013E  
                       __ptext24 1FEE                         __ptext16 1870  
                       __ptext41 0094                         __ptext33 0142  
                       __ptext25 1F52                         __ptext17 0132  
                       __ptext50 00AC                         __ptext42 009C  
                       __ptext34 0146                         __ptext26 1F66  
                       __ptext18 17DE                         __ptext51 1F22  
                       __ptext43 0156                         __ptext35 014A  
                       __ptext27 1FBC                         __ptext19 02E4  
                       __ptext60 1FAC                         __ptext52 1F3C  
                       __ptext44 00A4                         __ptext36 010C  
                       __ptext28 013A                         __ptext61 1CB0  
                       __ptext53 00B4                         __ptext45 1E28  
                       __ptext37 0112                         __ptext29 1F8C  
                       __ptext70 00F4                         __ptext62 1D44  
                       __ptext54 00BC                         __ptext46 0042  
                       __ptext38 014E                         __ptext71 1B1C  
                       __ptext63 13AE                         __ptext55 00C4  
                       __ptext47 015A                         __ptext39 0152  
                       __ptext80 005A                         __ptext72 167C  
                       __ptext64 00CC                         __ptext56 0CC0  
                       __ptext48 015E                         __ptext81 0066  
                       __ptext73 18F4                         __ptext65 00D4  
                       __ptext57 1D94                         __ptext49 004E  
                       __ptext90 1DBA                         __ptext82 1E70  
                       __ptext74 15A6                         __ptext66 00DC  
                       __ptext58 1BFC                         __ptext91 0104  
                       __ptext83 1CE4                         __ptext75 00FC  
                       __ptext67 00E4                         __ptext59 14D0  
                       __ptext92 1D18                         __ptext84 1C3A  
                       __ptext76 1F7A                         __ptext68 1200  
                       __ptext93 1E4C                         __ptext85 1ED0  
                       __ptext77 0F74                         __ptext69 00EC  
                       __ptext86 1A50                         __ptext78 1B6C  
                       __ptext95 1BB4                         __ptext87 1AB6  
                       __ptext79 1C78                         __ptext88 1E92  
                       __ptext89 1EEC                   CantaPartAlta@c 0065  
                    _lletraASCII 0055                         _high_rsi 0008  
                       _copsNota 0024                         _s_Timers 0080  
                       _initHora 00BC                      _lletraInici 00BC  
                       _menuDalt 0031                         _menuList 0201  
            ?_EscriuPrimeraOrdre 005F            __end_of_CantaPartAlta 1B12  
                 _CToAConverteix 004E                    CantaData@Data 0066  
                       _tiTeclat 0038               __end_of_init_ports 1F3C  
                       _setSMSon 03B9                    _SsetNovaTecla 00CC  
                       _nouSegon 03AD                         _scoreUsr 0028  
                       _motorSIO 09EE                ??_HActualitzaHora 0065  
                       _motorJoc 173A                  _checkHoraAcabat 1FE2  
                       _timerSIO 0011                         _timerSMS 003B  
                       isa$xinst 000000                         int$flags 0078  
                   UenviaPas@pos 0064                      _playAltaveu 0132  
                   _motorAltaveu 17DE           _SIOHaAcabatPuntuacions 014E  
           ??_EscriuPrimeraOrdre 0064                       LcInit@rows 006F  
               ??_GLCDMostraMenu 0064          _UcheckExistsNotFinished 0036  
                     _INTCONbits 000FF2                    ??_MNovaLletra 0064  
                    _CToAobtenir 015A                     _SIOEnviaHora 0122  
                  ??_LcNewString 0069                         intlevel2 0000  
                   _timerAltaveu 0025                   _arrayShowUsers 00A2  
         __end_of_CToAConverteix 005A                       LcPutChar@c 0072  
                 ?_SsetNovaTecla 005F                MNovaLletra@lletra 0064  
                compareStrings@a 0064                  compareStrings@b 0065  
                    ??_motorHora 006B                     _SIONovaTecla 0084  
                    _tempsAcabat 03AC                      GLCDMotor@k1 001C  
                    GLCDMotor@k2 001B             __end_of_MNouJoystick 0104  
                   _SIOStartGame 007C                   _compareStrings 1BFC  
                    _tmpPassword 00AA              __end_of_MNovaLletra 00F4  
                ?_CToAConverteix 005F            __end_of_MsetNovaTecla 00DC  
        __end_of_checkHoraAcabat 1FEE                      _tmpUsername 00B3  
                 _SIOcheckKrebut 1FCA                      SMotor@state 0039  
            __end_of_LcNewString 0066                       _SIOendGame 011E  
