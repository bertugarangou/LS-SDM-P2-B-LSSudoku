

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 16:42:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   114                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   115                           	psect	pa_nodes0,global,class=CODE,delta=1
   116  0000                     
   117                           ; Version 2.32
   118                           ; Generated 02/02/2021 GMT
   119                           ; 
   120                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   121                           ; All rights reserved.
   122                           ; 
   123                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   124                           ; 
   125                           ; Redistribution and use in source and binary forms, with or without modification, are
   126                           ; permitted provided that the following conditions are met:
   127                           ; 
   128                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   129                           ;        conditions and the following disclaimer.
   130                           ; 
   131                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   132                           ;        of conditions and the following disclaimer in the documentation and/or other
   133                           ;        materials provided with the distribution. Publication is not required when
   134                           ;        this file is used in an embedded application.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC18F4321 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     
   153                           	psect	idataCOMRAM
   154  001BD4                     __pidataCOMRAM:
   155                           	callstack 0
   156                           
   157                           ;initializer for _convertir
   158  001BD4  FA                 	db	250
   159                           
   160                           ;initializer for _novaTeclaSIO
   161  001BD5  FF                 	db	255
   162                           
   163                           ;initializer for _direccioSIO
   164  001BD6  FF                 	db	255
   165                           
   166                           ;initializer for _usuariActualSIO
   167  001BD7  FF                 	db	255
   168                           
   169                           ;initializer for _novaTeclaJOC
   170  001BD8  FF                 	db	255
   171                           
   172                           ;initializer for _usuariJoc
   173  001BD9  FF                 	db	255
   174                           
   175                           ;initializer for GLCDMotor@max2
   176  001BDA  0F                 	db	15
   177                           
   178                           ;initializer for GLCDMotor@max1
   179  001BDB  0F                 	db	15
   180                           
   181                           ;initializer for _usuariLoguejat
   182  001BDC  FF                 	db	255
   183                           
   184                           ;initializer for _novaDireccio
   185  001BDD  FF                 	db	255
   186                           
   187                           ;initializer for _novaLletra
   188  001BDE  FF                 	db	255
   189                           
   190                           ;initializer for _NovaTecla
   191  001BDF  FF                 	db	255
   192                           
   193                           ;initializer for _ultimaTecla
   194  001BE0  FF                 	db	255
   195                           
   196                           ;initializer for _novaTecla
   197  001BE1  FF                 	db	255
   198                           
   199                           ;initializer for _lletraASCII
   200  001BE2  FF                 	db	255
   201                           
   202                           ;initializer for _hora
   203  001BE3  33                 	db	51
   204  001BE4  30                 	db	48
   205  001BE5  3A                 	db	58
   206  001BE6  30                 	db	48
   207  001BE7  30                 	db	48
   208  001BE8  00                 	db	0
   209                           
   210                           ;initializer for _stringScore
   211  001BE9  30                 	db	48
   212  001BEA  30                 	db	48
   213  001BEB  00                 	db	0
   214                           
   215                           	psect	idataBANK0
   216  001CF0                     __pidataBANK0:
   217                           	callstack 0
   218                           
   219                           ;initializer for _lletraInici
   220  001CF0  41                 	db	65
   221  001CF1  44                 	db	68
   222  001CF2  47                 	db	71
   223  001CF3  4A                 	db	74
   224  001CF4  4D                 	db	77
   225  001CF5  50                 	db	80
   226  001CF6  54                 	db	84
   227  001CF7  57                 	db	87
   228                           
   229                           	psect	mediumconst
   230  001EFC                     __pmediumconst:
   231                           	callstack 0
   232  001EFC  00                 	db	0
   233  001EFD                     _arrayZero:
   234                           	callstack 0
   235  001EFD  30                 	db	48
   236  001EFE  20                 	db	32
   237  001EFF                     __end_of_arrayZero:
   238                           	callstack 0
   239  001EFF                     _menuList:
   240                           	callstack 0
   241  001EFF  31                 	db	49
   242  001F00  2E                 	db	46
   243  001F01  50                 	db	80
   244  001F02  6C                 	db	108
   245  001F03  61                 	db	97
   246  001F04  79                 	db	121
   247  001F05  20                 	db	32
   248  001F06  61                 	db	97
   249  001F07  20                 	db	32
   250  001F08  47                 	db	71
   251  001F09  61                 	db	97
   252  001F0A  6D                 	db	109
   253  001F0B  65                 	db	101
   254  001F0C  00                 	db	0
   255  001F0D  00                 	db	0
   256  001F0E  00                 	db	0
   257  001F0F  00                 	db	0
   258  001F10  00                 	db	0
   259  001F11  00                 	db	0
   260  001F12  00                 	db	0
   261  001F13  00                 	db	0
   262  001F14  00                 	db	0
   263  001F15  00                 	db	0
   264  001F16  00                 	db	0
   265  001F17  00                 	db	0
   266  001F18  00                 	db	0
   267  001F19  00                 	db	0
   268  001F1A  00                 	db	0
   269  001F1B  00                 	db	0
   270  001F1C  32                 	db	50
   271  001F1D  2E                 	db	46
   272  001F1E  4D                 	db	77
   273  001F1F  6F                 	db	111
   274  001F20  64                 	db	100
   275  001F21  69                 	db	105
   276  001F22  66                 	db	102
   277  001F23  79                 	db	121
   278  001F24  20                 	db	32
   279  001F25  54                 	db	84
   280  001F26  69                 	db	105
   281  001F27  6D                 	db	109
   282  001F28  65                 	db	101
   283  001F29  00                 	db	0
   284  001F2A  00                 	db	0
   285  001F2B  00                 	db	0
   286  001F2C  00                 	db	0
   287  001F2D  00                 	db	0
   288  001F2E  00                 	db	0
   289  001F2F  00                 	db	0
   290  001F30  00                 	db	0
   291  001F31  00                 	db	0
   292  001F32  00                 	db	0
   293  001F33  00                 	db	0
   294  001F34  00                 	db	0
   295  001F35  00                 	db	0
   296  001F36  00                 	db	0
   297  001F37  00                 	db	0
   298  001F38  00                 	db	0
   299  001F39  33                 	db	51
   300  001F3A  2E                 	db	46
   301  001F3B  53                 	db	83
   302  001F3C  68                 	db	104
   303  001F3D  6F                 	db	111
   304  001F3E  77                 	db	119
   305  001F3F  20                 	db	32
   306  001F40  47                 	db	71
   307  001F41  65                 	db	101
   308  001F42  6E                 	db	110
   309  001F43  65                 	db	101
   310  001F44  72                 	db	114
   311  001F45  61                 	db	97
   312  001F46  6C                 	db	108
   313  001F47  20                 	db	32
   314  001F48  54                 	db	84
   315  001F49  6F                 	db	111
   316  001F4A  70                 	db	112
   317  001F4B  20                 	db	32
   318  001F4C  35                 	db	53
   319  001F4D  20                 	db	32
   320  001F4E  53                 	db	83
   321  001F4F  63                 	db	99
   322  001F50  6F                 	db	111
   323  001F51  72                 	db	114
   324  001F52  65                 	db	101
   325  001F53  73                 	db	115
   326  001F54  20                 	db	32
   327  001F55  00                 	db	0
   328  001F56  34                 	db	52
   329  001F57  2E                 	db	46
   330  001F58  4C                 	db	76
   331  001F59  6F                 	db	111
   332  001F5A  67                 	db	103
   333  001F5B  6F                 	db	111
   334  001F5C  75                 	db	117
   335  001F5D  74                 	db	116
   336  001F5E  00                 	db	0
   337  001F5F  00                 	db	0
   338  001F60  00                 	db	0
   339  001F61  00                 	db	0
   340  001F62  00                 	db	0
   341  001F63  00                 	db	0
   342  001F64  00                 	db	0
   343  001F65  00                 	db	0
   344  001F66  00                 	db	0
   345  001F67  00                 	db	0
   346  001F68  00                 	db	0
   347  001F69  00                 	db	0
   348  001F6A  00                 	db	0
   349  001F6B  00                 	db	0
   350  001F6C  00                 	db	0
   351  001F6D  00                 	db	0
   352  001F6E  00                 	db	0
   353  001F6F  00                 	db	0
   354  001F70  00                 	db	0
   355  001F71  00                 	db	0
   356  001F72  00                 	db	0
   357  001F73  35                 	db	53
   358  001F74  2E                 	db	46
   359  001F75  53                 	db	83
   360  001F76  68                 	db	104
   361  001F77  6F                 	db	111
   362  001F78  77                 	db	119
   363  001F79  20                 	db	32
   364  001F7A  41                 	db	65
   365  001F7B  6C                 	db	108
   366  001F7C  6C                 	db	108
   367  001F7D  20                 	db	32
   368  001F7E  55                 	db	85
   369  001F7F  73                 	db	115
   370  001F80  65                 	db	101
   371  001F81  72                 	db	114
   372  001F82  73                 	db	115
   373  001F83  00                 	db	0
   374  001F84  00                 	db	0
   375  001F85  00                 	db	0
   376  001F86  00                 	db	0
   377  001F87  00                 	db	0
   378  001F88  00                 	db	0
   379  001F89  00                 	db	0
   380  001F8A  00                 	db	0
   381  001F8B  00                 	db	0
   382  001F8C  00                 	db	0
   383  001F8D  00                 	db	0
   384  001F8E  00                 	db	0
   385  001F8F  00                 	db	0
   386  001F90                     __end_of_menuList:
   387                           	callstack 0
   388  001F90                     _teclaPremuda:
   389                           	callstack 0
   390  001F90  01                 	db	1
   391  001F91  02                 	db	2
   392  001F92  03                 	db	3
   393  001F93  04                 	db	4
   394  001F94  05                 	db	5
   395  001F95  06                 	db	6
   396  001F96  07                 	db	7
   397  001F97  08                 	db	8
   398  001F98  09                 	db	9
   399  001F99  0A                 	db	10
   400  001F9A  00                 	db	0
   401  001F9B  0B                 	db	11
   402  001F9C                     __end_of_teclaPremuda:
   403                           	callstack 0
   404  001F9C                     _registerText:
   405                           	callstack 0
   406  001F9C  32                 	db	50
   407  001F9D  2E                 	db	46
   408  001F9E  52                 	db	82
   409  001F9F  45                 	db	69
   410  001FA0  47                 	db	71
   411  001FA1  49                 	db	73
   412  001FA2  53                 	db	83
   413  001FA3  54                 	db	84
   414  001FA4  45                 	db	69
   415  001FA5  52                 	db	82
   416  001FA6  00                 	db	0
   417  001FA7                     __end_of_registerText:
   418                           	callstack 0
   419  001FA7                     _loginText:
   420                           	callstack 0
   421  001FA7  31                 	db	49
   422  001FA8  2E                 	db	46
   423  001FA9  4C                 	db	76
   424  001FAA  4F                 	db	79
   425  001FAB  47                 	db	71
   426  001FAC  49                 	db	73
   427  001FAD  4E                 	db	78
   428  001FAE  00                 	db	0
   429  001FAF                     __end_of_loginText:
   430                           	callstack 0
   431  0000                     _PIR1bits	set	3998
   432  0000                     _RCREG	set	4014
   433  0000                     _TXREG	set	4013
   434  0000                     _TXSTAbits	set	4012
   435  0000                     _ADCON0bits	set	4034
   436  0000                     _ADRESH	set	4036
   437  0000                     _ADCON2	set	4032
   438  0000                     _ADCON1	set	4033
   439  0000                     _ADCON0	set	4034
   440  0000                     _EECON2	set	4007
   441  0000                     _EEDATA	set	4008
   442  0000                     _EEADR	set	4009
   443  0000                     _T0CONbits	set	4053
   444  0000                     _TMR0L	set	4054
   445  0000                     _TMR0H	set	4055
   446  0000                     _T0CON	set	4053
   447  0000                     _INTCONbits	set	4082
   448  0000                     _RCONbits	set	4048
   449  0000                     _PORTDbits	set	3971
   450  0000                     _SPBRG	set	4015
   451  0000                     _SPBRGH	set	4016
   452  0000                     _BAUDCON	set	4024
   453  0000                     _RCSTA	set	4011
   454  0000                     _TXSTA	set	4012
   455  0000                     _EECON1bits	set	4006
   456  0000                     _LATD	set	3980
   457  0000                     _TRISD	set	3989
   458  0000                     _TRISC	set	3988
   459  0000                     _LATBbits	set	3978
   460  0000                     _TRISB	set	3987
   461  0000                     _TRISA	set	3986
   462  0000                     _PORTCbits	set	3970
   463  0000                     _LATDbits	set	3980
   464  0000                     _LATCbits	set	3979
   465  0000                     _TRISDbits	set	3989
   466  0000                     _TRISCbits	set	3988
   467  001FAF                     STR_5:
   468  001FAF  54                 	db	84	;'T'
   469  001FB0  49                 	db	73	;'I'
   470  001FB1  4D                 	db	77	;'M'
   471  001FB2  45                 	db	69	;'E'
   472  001FB3  20                 	db	32
   473  001FB4  52                 	db	82	;'R'
   474  001FB5  45                 	db	69	;'E'
   475  001FB6  4D                 	db	77	;'M'
   476  001FB7  41                 	db	65	;'A'
   477  001FB8  49                 	db	73	;'I'
   478  001FB9  4E                 	db	78	;'N'
   479  001FBA  49                 	db	73	;'I'
   480  001FBB  4E                 	db	78	;'N'
   481  001FBC  47                 	db	71	;'G'
   482  001FBD  3A                 	db	58	;':'
   483  001FBE  00                 	db	0
   484  001FBF                     STR_4:
   485  001FBF  4D                 	db	77	;'M'
   486  001FC0  6F                 	db	111	;'o'
   487  001FC1  64                 	db	100	;'d'
   488  001FC2  69                 	db	105	;'i'
   489  001FC3  66                 	db	102	;'f'
   490  001FC4  79                 	db	121	;'y'
   491  001FC5  20                 	db	32
   492  001FC6  54                 	db	84	;'T'
   493  001FC7  69                 	db	105	;'i'
   494  001FC8  6D                 	db	109	;'m'
   495  001FC9  65                 	db	101	;'e'
   496  001FCA  3A                 	db	58	;':'
   497  001FCB  00                 	db	0
   498  001FCC                     STR_7:
   499  001FCC  54                 	db	84	;'T'
   500  001FCD  49                 	db	73	;'I'
   501  001FCE  4D                 	db	77	;'M'
   502  001FCF  45                 	db	69	;'E'
   503  001FD0  20                 	db	32
   504  001FD1  4C                 	db	76	;'L'
   505  001FD2  45                 	db	69	;'E'
   506  001FD3  46                 	db	70	;'F'
   507  001FD4  54                 	db	84	;'T'
   508  001FD5  3A                 	db	58	;':'
   509  001FD6  20                 	db	32
   510  001FD7  00                 	db	0
   511  001FD8                     STR_3:
   512  001FD8  42                 	db	66	;'B'
   513  001FD9  59                 	db	89	;'Y'
   514  001FDA  45                 	db	69	;'E'
   515  001FDB  20                 	db	32
   516  001FDC  42                 	db	66	;'B'
   517  001FDD  59                 	db	89	;'Y'
   518  001FDE  45                 	db	69	;'E'
   519  001FDF  20                 	db	32
   520  001FE0  00                 	db	0
   521  001FE1                     STR_8:
   522  001FE1  53                 	db	83	;'S'
   523  001FE2  43                 	db	67	;'C'
   524  001FE3  4F                 	db	79	;'O'
   525  001FE4  52                 	db	82	;'R'
   526  001FE5  45                 	db	69	;'E'
   527  001FE6  3A                 	db	58	;':'
   528  001FE7  20                 	db	32
   529  001FE8  00                 	db	0
   530  001FE9                     STR_6:
   531  001FE9  45                 	db	69	;'E'
   532  001FEA  52                 	db	82	;'R'
   533  001FEB  52                 	db	82	;'R'
   534  001FEC  4F                 	db	79	;'O'
   535  001FED  52                 	db	82	;'R'
   536  001FEE  53                 	db	83	;'S'
   537  001FEF  3A                 	db	58	;':'
   538  001FF0  00                 	db	0
   539  001FF1                     STR_2:
   540  001FF1  50                 	db	80	;'P'
   541  001FF2  53                 	db	83	;'S'
   542  001FF3  57                 	db	87	;'W'
   543  001FF4  44                 	db	68	;'D'
   544  001FF5  3A                 	db	58	;':'
   545  001FF6  20                 	db	32
   546  001FF7  00                 	db	0
   547  001FF8                     STR_1:
   548  001FF8  55                 	db	85	;'U'
   549  001FF9  53                 	db	83	;'S'
   550  001FFA  45                 	db	69	;'E'
   551  001FFB  52                 	db	82	;'R'
   552  001FFC  3A                 	db	58	;':'
   553  001FFD  20                 	db	32
   554  001FFE  00                 	db	0
   555  001FFF  00                 	db	0	; dummy byte at the end
   556  0000                     
   557                           ; #config settings
   558                           
   559                           	psect	cinit
   560  001656                     __pcinit:
   561                           	callstack 0
   562  001656                     start_initialization:
   563                           	callstack 0
   564  001656                     __initialization:
   565                           	callstack 0
   566                           
   567                           ; Initialize objects allocated to BANK0 (8 bytes)
   568                           ; load TBLPTR registers with __pidataBANK0
   569  001656  0EF0               	movlw	low __pidataBANK0
   570  001658  6EF6               	movwf	tblptrl,c
   571  00165A  0E1C               	movlw	high __pidataBANK0
   572  00165C  6EF7               	movwf	tblptrh,c
   573  00165E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   574  001660  6EF8               	movwf	tblptru,c
   575  001662  EE00  F0B4         	lfsr	0,__pdataBANK0
   576  001666  EE10 F008          	lfsr	1,8
   577  00166A                     copy_data0:
   578  00166A  0009               	tblrd		*+
   579  00166C  CFF5 FFEE          	movff	tablat,postinc0
   580  001670  50E5               	movf	postdec1,w,c
   581  001672  50E1               	movf	fsr1l,w,c
   582  001674  E1FA               	bnz	copy_data0
   583                           
   584                           ; Initialize objects allocated to COMRAM (24 bytes)
   585                           ; load TBLPTR registers with __pidataCOMRAM
   586  001676  0ED4               	movlw	low __pidataCOMRAM
   587  001678  6EF6               	movwf	tblptrl,c
   588  00167A  0E1B               	movlw	high __pidataCOMRAM
   589  00167C  6EF7               	movwf	tblptrh,c
   590  00167E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   591  001680  6EF8               	movwf	tblptru,c
   592  001682  EE00  F05E         	lfsr	0,__pdataCOMRAM
   593  001686  EE10 F018          	lfsr	1,24
   594  00168A                     copy_data1:
   595  00168A  0009               	tblrd		*+
   596  00168C  CFF5 FFEE          	movff	tablat,postinc0
   597  001690  50E5               	movf	postdec1,w,c
   598  001692  50E1               	movf	fsr1l,w,c
   599  001694  E1FA               	bnz	copy_data1
   600                           
   601                           ; Clear objects allocated to BANK1 (144 bytes)
   602  001696  EE01  F000         	lfsr	0,__pbssBANK1
   603  00169A  0E90               	movlw	144
   604  00169C                     clear_0:
   605  00169C  6AEE               	clrf	postinc0,c
   606  00169E  06E8               	decf	wreg,f,c
   607  0016A0  E1FD               	bnz	clear_0
   608                           
   609                           ; Clear objects allocated to BANK0 (52 bytes)
   610  0016A2  EE00  F080         	lfsr	0,__pbssBANK0
   611  0016A6  0E34               	movlw	52
   612  0016A8                     clear_1:
   613  0016A8  6AEE               	clrf	postinc0,c
   614  0016AA  06E8               	decf	wreg,f,c
   615  0016AC  E1FD               	bnz	clear_1
   616                           
   617                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   618  0016AE  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   619  0016B0  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   620  0016B2  6A76               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   621                           
   622                           ; Clear objects allocated to COMRAM (68 bytes)
   623  0016B4  EE00  F001         	lfsr	0,__pbssCOMRAM
   624  0016B8  0E44               	movlw	68
   625  0016BA                     clear_2:
   626  0016BA  6AEE               	clrf	postinc0,c
   627  0016BC  06E8               	decf	wreg,f,c
   628  0016BE  E1FD               	bnz	clear_2
   629  0016C0                     end_of_initialization:
   630                           	callstack 0
   631  0016C0                     __end_of__initialization:
   632                           	callstack 0
   633  0016C0  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   634  0016C2  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   635  0016C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   636  0016C6  6EF8               	movwf	tblptru,c
   637  0016C8  0100               	movlb	0
   638  0016CA  EF67  F00B         	goto	_main	;jump to C main() function
   639                           
   640                           	psect	bitbssCOMRAM
   641  0003B0                     __pbitbssCOMRAM:
   642                           	callstack 0
   643  0003B0                     _Krebut:
   644                           	callstack 0
   645  0003B0                     	ds	1
   646  0003B1                     _jugantSIO:
   647                           	callstack 0
   648  0003B1                     	ds	1
   649  0003B2                     _jugantJoc:
   650                           	callstack 0
   651  0003B2                     	ds	1
   652  0003B3                     _tempsAcabat:
   653                           	callstack 0
   654  0003B3                     	ds	1
   655  0003B4                     _nouSegon:
   656                           	callstack 0
   657  0003B4                     	ds	1
   658  0003B5                     _jugant:
   659                           	callstack 0
   660  0003B5                     	ds	1
   661  0003B6                     _cap2:
   662                           	callstack 0
   663  0003B6                     	ds	1
   664  0003B7                     _cap1:
   665                           	callstack 0
   666  0003B7                     	ds	1
   667  0003B8                     _newString:
   668                           	callstack 0
   669  0003B8                     	ds	1
   670  0003B9                     _ferMenu:
   671                           	callstack 0
   672  0003B9                     	ds	1
   673  0003BA                     _reproduir:
   674                           	callstack 0
   675  0003BA                     	ds	1
   676  0003BB                     _do_updateScore:
   677                           	callstack 0
   678  0003BB                     	ds	1
   679  0003BC                     _do_showUsers:
   680                           	callstack 0
   681  0003BC                     	ds	1
   682  0003BD                     _do_register:
   683                           	callstack 0
   684  0003BD                     	ds	1
   685  0003BE                     _do_check_exists:
   686                           	callstack 0
   687  0003BE                     	ds	1
   688  0003BF                     _loginNOTRegister:
   689                           	callstack 0
   690  0003BF                     	ds	1
   691  0003C0                     _setSMSon:
   692                           	callstack 0
   693  0003C0                     	ds	1
   694  0003C1                     _nou_s:
   695                           	callstack 0
   696  0003C1                     	ds	1
   697                           
   698                           	psect	bssCOMRAM
   699  000001                     __pbssCOMRAM:
   700                           	callstack 0
   701  000001                     _arrayShowUsers:
   702                           	callstack 0
   703  000001                     	ds	8
   704  000009                     _userPtr:
   705                           	callstack 0
   706  000009                     	ds	2
   707  00000B                     _h_Tics:
   708                           	callstack 0
   709  00000B                     	ds	2
   710  00000D                     _s_ptr:
   711                           	callstack 0
   712  00000D                     	ds	2
   713  00000F                     motorSIO@state:
   714                           	callstack 0
   715  00000F                     	ds	1
   716  000010                     _score:
   717                           	callstack 0
   718  000010                     	ds	1
   719  000011                     _timerSIO:
   720                           	callstack 0
   721  000011                     	ds	1
   722  000012                     motorJoc@state:
   723                           	callstack 0
   724  000012                     	ds	1
   725  000013                     _direccioJoc:
   726                           	callstack 0
   727  000013                     	ds	1
   728  000014                     motorHora@state:
   729                           	callstack 0
   730  000014                     	ds	1
   731  000015                     _segons:
   732                           	callstack 0
   733  000015                     	ds	1
   734  000016                     _timerHora:
   735                           	callstack 0
   736  000016                     	ds	1
   737  000017                     JoystickMotor@state:
   738                           	callstack 0
   739  000017                     	ds	1
   740  000018                     _ultimaTeclaAD:
   741                           	callstack 0
   742  000018                     	ds	1
   743  000019                     GLCDMotor@length2:
   744                           	callstack 0
   745  000019                     	ds	1
   746  00001A                     GLCDMotor@length1:
   747                           	callstack 0
   748  00001A                     	ds	1
   749  00001B                     GLCDMotor@k2:
   750                           	callstack 0
   751  00001B                     	ds	1
   752  00001C                     GLCDMotor@k1:
   753                           	callstack 0
   754  00001C                     	ds	1
   755  00001D                     GLCDMotor@min2:
   756                           	callstack 0
   757  00001D                     	ds	1
   758  00001E                     GLCDMotor@min1:
   759                           	callstack 0
   760  00001E                     	ds	1
   761  00001F                     GLCDMotor@j:
   762                           	callstack 0
   763  00001F                     	ds	1
   764  000020                     GLCDMotor@state:
   765                           	callstack 0
   766  000020                     	ds	1
   767  000021                     _menuDaltGLCD:
   768                           	callstack 0
   769  000021                     	ds	1
   770  000022                     _timerGLCD:
   771                           	callstack 0
   772  000022                     	ds	1
   773  000023                     motorAltaveu@state:
   774                           	callstack 0
   775  000023                     	ds	1
   776  000024                     _copsNota:
   777                           	callstack 0
   778  000024                     	ds	1
   779  000025                     _timerAltaveu:
   780                           	callstack 0
   781  000025                     	ds	1
   782  000026                     _nota:
   783                           	callstack 0
   784  000026                     	ds	1
   785  000027                     UmotorUsers@state:
   786                           	callstack 0
   787  000027                     	ds	1
   788  000028                     _scoreUsr:
   789                           	callstack 0
   790  000028                     	ds	1
   791  000029                     _j:
   792                           	callstack 0
   793  000029                     	ds	1
   794  00002A                     _i:
   795                           	callstack 0
   796  00002A                     	ds	1
   797  00002B                     _indexNextUserStruct:
   798                           	callstack 0
   799  00002B                     	ds	1
   800  00002C                     _indexNextUser:
   801                           	callstack 0
   802  00002C                     	ds	1
   803  00002D                     _numUsuaris:
   804                           	callstack 0
   805  00002D                     	ds	1
   806  00002E                     menu@state:
   807                           	callstack 0
   808  00002E                     	ds	1
   809  00002F                     _pos:
   810                           	callstack 0
   811  00002F                     	ds	1
   812  000030                     _indexUsuari:
   813                           	callstack 0
   814  000030                     	ds	1
   815  000031                     _menuDalt:
   816                           	callstack 0
   817  000031                     	ds	1
   818  000032                     _timerMenu:
   819                           	callstack 0
   820  000032                     	ds	1
   821  000033                     _tmp:
   822                           	callstack 0
   823  000033                     	ds	1
   824  000034                     _counter:
   825                           	callstack 0
   826  000034                     	ds	1
   827  000035                     TeTeclat@files:
   828                           	callstack 0
   829  000035                     	ds	1
   830  000036                     TeTeclat@cols:
   831                           	callstack 0
   832  000036                     	ds	1
   833  000037                     TeTeclat@state:
   834                           	callstack 0
   835  000037                     	ds	1
   836  000038                     _tiTeclat:
   837                           	callstack 0
   838  000038                     	ds	1
   839  000039                     SMotor@state:
   840                           	callstack 0
   841  000039                     	ds	1
   842  00003A                     _zeroTecla:
   843                           	callstack 0
   844  00003A                     	ds	1
   845  00003B                     _timerSMS:
   846                           	callstack 0
   847  00003B                     	ds	1
   848  00003C                     _sumaPulsacions:
   849                           	callstack 0
   850  00003C                     	ds	1
   851  00003D                     _Timer:
   852                           	callstack 0
   853  00003D                     	ds	1
   854  00003E                     _ColumnAct:
   855                           	callstack 0
   856  00003E                     	ds	1
   857  00003F                     _RowAct:
   858                           	callstack 0
   859  00003F                     	ds	1
   860  000040                     _Rows:
   861                           	callstack 0
   862  000040                     	ds	1
   863  000041                     _horaTmp:
   864                           	callstack 0
   865  000041                     	ds	4
   866                           
   867                           	psect	dataCOMRAM
   868  00005E                     __pdataCOMRAM:
   869                           	callstack 0
   870  00005E                     _convertir:
   871                           	callstack 0
   872  00005E                     	ds	1
   873  00005F                     _novaTeclaSIO:
   874                           	callstack 0
   875  00005F                     	ds	1
   876  000060                     _direccioSIO:
   877                           	callstack 0
   878  000060                     	ds	1
   879  000061                     _usuariActualSIO:
   880                           	callstack 0
   881  000061                     	ds	1
   882  000062                     _novaTeclaJOC:
   883                           	callstack 0
   884  000062                     	ds	1
   885  000063                     _usuariJoc:
   886                           	callstack 0
   887  000063                     	ds	1
   888  000064                     GLCDMotor@max2:
   889                           	callstack 0
   890  000064                     	ds	1
   891  000065                     GLCDMotor@max1:
   892                           	callstack 0
   893  000065                     	ds	1
   894  000066                     _usuariLoguejat:
   895                           	callstack 0
   896  000066                     	ds	1
   897  000067                     _novaDireccio:
   898                           	callstack 0
   899  000067                     	ds	1
   900  000068                     _novaLletra:
   901                           	callstack 0
   902  000068                     	ds	1
   903  000069                     _NovaTecla:
   904                           	callstack 0
   905  000069                     	ds	1
   906  00006A                     _ultimaTecla:
   907                           	callstack 0
   908  00006A                     	ds	1
   909  00006B                     _novaTecla:
   910                           	callstack 0
   911  00006B                     	ds	1
   912  00006C                     _lletraASCII:
   913                           	callstack 0
   914  00006C                     	ds	1
   915  00006D                     _hora:
   916                           	callstack 0
   917  00006D                     	ds	6
   918  000073                     _stringScore:
   919                           	callstack 0
   920  000073                     	ds	3
   921                           
   922                           	psect	bssBANK0
   923  000080                     __pbssBANK0:
   924                           	callstack 0
   925  000080                     _s_Timers:
   926                           	callstack 0
   927  000080                     	ds	24
   928  000098                     _puntuacions:
   929                           	callstack 0
   930  000098                     	ds	10
   931  0000A2                     _tmpPassword:
   932                           	callstack 0
   933  0000A2                     	ds	9
   934  0000AB                     _tmpUsername:
   935                           	callstack 0
   936  0000AB                     	ds	9
   937                           
   938                           	psect	dataBANK0
   939  0000B4                     __pdataBANK0:
   940                           	callstack 0
   941  0000B4                     _lletraInici:
   942                           	callstack 0
   943  0000B4                     	ds	8
   944                           
   945                           	psect	bssBANK1
   946  000100                     __pbssBANK1:
   947                           	callstack 0
   948  000100                     _usuaris:
   949                           	callstack 0
   950  000100                     	ds	144
   951                           
   952                           	psect	cstackCOMRAM
   953  000045                     __pcstackCOMRAM:
   954                           	callstack 0
   955  000045                     
   956                           ; 1 bytes @ 0x0
   957  000045                     	ds	1
   958  000046                     ??_high_rsi:
   959                           
   960                           ; 1 bytes @ 0x1
   961  000046                     	ds	4
   962  00004A                     ??_EscriuPrimeraOrdre:
   963  00004A                     ??_CantaPartAlta:
   964  00004A                     ??_CantaPartBaixa:
   965  00004A                     ?_TiGetTics:
   966                           	callstack 0
   967  00004A                     ?_UgetUserName:
   968                           	callstack 0
   969  00004A                     ?_getArrayShowUsers:
   970                           	callstack 0
   971  00004A                     SsetNovaTecla@tecla:
   972                           	callstack 0
   973  00004A                     TiResetTics@Handle:
   974                           	callstack 0
   975  00004A                     MsetNovaTecla@tecla:
   976                           	callstack 0
   977  00004A                     MNovaLletra@lletra:
   978                           	callstack 0
   979  00004A                     MNouJoystick@posicio:
   980                           	callstack 0
   981  00004A                     UenviaChar@pos:
   982                           	callstack 0
   983  00004A                     UenviaPas@pos:
   984                           	callstack 0
   985  00004A                     escriureCharEEPROM@pos:
   986                           	callstack 0
   987  00004A                     llegirCharEEPROM@pos:
   988                           	callstack 0
   989  00004A                     compareStrings@a:
   990                           	callstack 0
   991  00004A                     UgetScore@quin:
   992                           	callstack 0
   993  00004A                     UgetTop5@quin:
   994                           	callstack 0
   995  00004A                     UnewScore@scoretmp:
   996                           	callstack 0
   997  00004A                     GLCDMostraMenu@num:
   998                           	callstack 0
   999  00004A                     HActualitzaHora@nova:
  1000                           	callstack 0
  1001  00004A                     JJuguem@usuari:
  1002                           	callstack 0
  1003  00004A                     JnovaTecla@tecla:
  1004                           	callstack 0
  1005  00004A                     JnovaDireccio@dir:
  1006                           	callstack 0
  1007  00004A                     conversorJoystick@direc:
  1008                           	callstack 0
  1009  00004A                     SIONovaDireccio@num:
  1010                           	callstack 0
  1011  00004A                     SIOStartGame@usuari:
  1012                           	callstack 0
  1013  00004A                     SIONovaTecla@tecla:
  1014                           	callstack 0
  1015  00004A                     CToAConverteix@numero:
  1016                           	callstack 0
  1017  00004A                     ___lbdiv@divisor:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x5
  1021  00004A                     	ds	1
  1022  00004B                     ??_JoystickMotor:
  1023  00004B                     CantaPartAlta@c:
  1024                           	callstack 0
  1025  00004B                     CantaPartBaixa@c:
  1026                           	callstack 0
  1027  00004B                     EscriuPrimeraOrdre@ordre:
  1028                           	callstack 0
  1029  00004B                     UenviaChar@c:
  1030                           	callstack 0
  1031  00004B                     UenviaPas@c:
  1032                           	callstack 0
  1033  00004B                     escriureCharEEPROM@c:
  1034                           	callstack 0
  1035  00004B                     ___lbdiv@dividend:
  1036                           	callstack 0
  1037  00004B                     compareStrings@b:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x6
  1041  00004B                     	ds	1
  1042  00004C                     ??_TiGetTics:
  1043  00004C                     CantaIR@IR:
  1044                           	callstack 0
  1045  00004C                     CantaData@Data:
  1046                           	callstack 0
  1047  00004C                     UgetUserName@quin:
  1048                           	callstack 0
  1049  00004C                     getArrayShowUsers@quin:
  1050                           	callstack 0
  1051  00004C                     ___lbdiv@counter:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055  00004C                     	ds	1
  1056  00004D                     ??_compareStrings:
  1057  00004D                     ___lbdiv@quotient:
  1058                           	callstack 0
  1059  00004D                     LcNewString@new_s:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x8
  1063  00004D                     	ds	1
  1064  00004E                     ??_Uinit:
  1065  00004E                     TiGetTics@Handle:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x9
  1069  00004E                     	ds	1
  1070  00004F                     ??_UmotorUsers:
  1071  00004F                     TiGetTics@actual:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xA
  1075  00004F                     	ds	1
  1076  000050                     Uinit@k:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xB
  1080  000050                     	ds	1
  1081  000051                     ??_SMotor:
  1082  000051                     ??_motorHora:
  1083  000051                     ??_motorAltaveu:
  1084  000051                     ??_TeTeclat:
  1085  000051                     WaitForBusy@Busy:
  1086                           	callstack 0
  1087  000051                     Uinit@k_1193:
  1088                           	callstack 0
  1089  000051                     Espera@ms:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0xC
  1093  000051                     	ds	1
  1094  000052                     LcGotoXY@Row:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0xD
  1098  000052                     	ds	1
  1099  000053                     ??_Espera:
  1100  000053                     LcGotoXY@Fisics:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0xE
  1104  000053                     	ds	1
  1105  000054                     Espera@Timer:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0xF
  1109  000054                     	ds	1
  1110  000055                     LcInit@rows:
  1111                           	callstack 0
  1112  000055                     _LcGotoXY$334:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x10
  1116  000055                     	ds	1
  1117  000056                     LcInit@i:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x11
  1121  000056                     	ds	1
  1122  000057                     LcGotoXY@Column:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x12
  1126  000057                     	ds	1
  1127  000058                     ??_motorJoc:
  1128  000058                     LcPutChar@c:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x13
  1132  000058                     	ds	1
  1133  000059                     ??_GLCDMotor:
  1134  000059                     ??_motorSIO:
  1135  000059                     ??_menu:
  1136  000059                     
  1137                           ; 1 bytes @ 0x14
  1138  000059                     	ds	5
  1139  00005E                     
  1140                           ; 1 bytes @ 0x19
  1141 ;;
  1142 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1143 ;;
  1144 ;; *************** function _main *****************
  1145 ;; Defined at:
  1146 ;;		line 76 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1
  1160 ;;      Params:         0       0       0
  1161 ;;      Locals:         0       0       0
  1162 ;;      Temps:          0       0       0
  1163 ;;      Totals:         0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels required when called: 7
  1166 ;; This function calls:
  1167 ;;		_CtoA
  1168 ;;		_GLCDInit
  1169 ;;		_GLCDMotor
  1170 ;;		_JoystickInit
  1171 ;;		_JoystickMotor
  1172 ;;		_LcInit
  1173 ;;		_LcLCD
  1174 ;;		_Minit
  1175 ;;		_SMotor
  1176 ;;		_Sinit
  1177 ;;		_TeInit
  1178 ;;		_TeTeclat
  1179 ;;		_TiInitTimer
  1180 ;;		_Uinit
  1181 ;;		_UmotorUsers
  1182 ;;		_initAltaveu
  1183 ;;		_initHora
  1184 ;;		_initSIO
  1185 ;;		_init_eusart
  1186 ;;		_init_ports
  1187 ;;		_menu
  1188 ;;		_motorAltaveu
  1189 ;;		_motorHora
  1190 ;;		_motorJoc
  1191 ;;		_motorSIO
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text0
  1198  0016CE                     __ptext0:
  1199                           	callstack 0
  1200  0016CE                     _main:
  1201                           	callstack 24
  1202                           
  1203                           ;main.c: 77:     init_ports();
  1204                           
  1205                           ;incstack = 0
  1206  0016CE  ECB1  F00D         	call	_init_ports	;wreg free
  1207                           
  1208                           ;main.c: 78:     init_eusart();
  1209  0016D2  ECF6  F00D         	call	_init_eusart	;wreg free
  1210                           
  1211                           ;main.c: 79:     TiInitTimer();
  1212  0016D6  EC31  F00D         	call	_TiInitTimer	;wreg free
  1213                           
  1214                           ;main.c: 80:     TeInit();
  1215  0016DA  ECAC  F00E         	call	_TeInit	;wreg free
  1216                           
  1217                           ;main.c: 81:     Sinit();
  1218  0016DE  ECB0  F00E         	call	_Sinit	;wreg free
  1219                           
  1220                           ;main.c: 82:     SMotor();
  1221  0016E2  EC58  F007         	call	_SMotor	;wreg free
  1222                           
  1223                           ;main.c: 84:     initAltaveu();
  1224  0016E6  ECA0  F00E         	call	_initAltaveu	;wreg free
  1225                           
  1226                           ;main.c: 85:     GLCDInit();
  1227  0016EA  ECC0  F00E         	call	_GLCDInit	;wreg free
  1228                           
  1229                           ;main.c: 86:     JoystickInit();
  1230  0016EE  EC15  F00E         	call	_JoystickInit	;wreg free
  1231                           
  1232                           ;main.c: 87:     initHora();
  1233  0016F2  EC9C  F00E         	call	_initHora	;wreg free
  1234                           
  1235                           ;main.c: 88:     initSIO();
  1236  0016F6  EC98  F00E         	call	_initSIO	;wreg free
  1237                           
  1238                           ;main.c: 90:     LcInit(2);
  1239  0016FA  0E02               	movlw	2
  1240  0016FC  ECB2  F009         	call	_LcInit
  1241                           
  1242                           ;main.c: 91:     Uinit();
  1243  001700  ECDC  F008         	call	_Uinit	;wreg free
  1244                           
  1245                           ;main.c: 92:     Minit();
  1246  001704  ECB8  F00E         	call	_Minit	;wreg free
  1247  001708                     l196:
  1248                           
  1249                           ;main.c: 94:         GLCDMotor();
  1250  001708  ECDA  F003         	call	_GLCDMotor	;wreg free
  1251                           
  1252                           ;main.c: 95:         motorJoc();
  1253  00170C  EC11  F00A         	call	_motorJoc	;wreg free
  1254                           
  1255                           ;main.c: 96:         motorSIO();
  1256  001710  EC64  F006         	call	_motorSIO	;wreg free
  1257                           
  1258                           ;main.c: 97:         motorHora();
  1259  001714  ECAB  F00A         	call	_motorHora	;wreg free
  1260                           
  1261                           ;main.c: 98:         JoystickMotor();
  1262  001718  EC47  F009         	call	_JoystickMotor	;wreg free
  1263                           
  1264                           ;main.c: 99:         menu();
  1265  00171C  EC1B  F000         	call	_menu	;wreg free
  1266                           
  1267                           ;main.c: 100:         CtoA();
  1268  001720  EC7D  F00D         	call	_CtoA	;wreg free
  1269                           
  1270                           ;main.c: 101:         motorAltaveu();
  1271  001724  EC62  F00A         	call	_motorAltaveu	;wreg free
  1272                           
  1273                           ;main.c: 102:         UmotorUsers();
  1274  001728  EC23  F005         	call	_UmotorUsers	;wreg free
  1275                           
  1276                           ;main.c: 104:         TeTeclat();
  1277  00172C  EC35  F008         	call	_TeTeclat	;wreg free
  1278                           
  1279                           ;main.c: 105:         SMotor();
  1280  001730  EC58  F007         	call	_SMotor	;wreg free
  1281                           
  1282                           ;main.c: 106:         LcLCD();
  1283  001734  EC03  F00C         	call	_LcLCD	;wreg free
  1284  001738  D7E7               	goto	l196
  1285  00173A                     __end_of_main:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _motorSIO *****************
  1289 ;; Defined at:
  1290 ;;		line 43 in file "SIO.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1
  1304 ;;      Params:         0       0       0
  1305 ;;      Locals:         0       0       0
  1306 ;;      Temps:          2       0       0
  1307 ;;      Totals:         2       0       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 6
  1311 ;; This function calls:
  1312 ;;		_CToAConverteix
  1313 ;;		_CToAHaAcabat
  1314 ;;		_CToAobtenir
  1315 ;;		_HGetTime
  1316 ;;		_LcClear
  1317 ;;		_LcGotoXY
  1318 ;;		_LcLliure
  1319 ;;		_LcNewString
  1320 ;;		_LcPutChar
  1321 ;;		_TiGetTics
  1322 ;;		_TiResetTics
  1323 ;;		_UgetUserName
  1324 ;;		_UnewScore
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text1
  1331  000CC8                     __ptext1:
  1332                           	callstack 0
  1333  000CC8                     _motorSIO:
  1334                           	callstack 24
  1335                           
  1336                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1337                           
  1338                           ;incstack = 0
  1339  000CC8  D0C8               	goto	l5203
  1340  000CCA                     l5085:
  1341                           
  1342                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1343  000CCA  BE61               	btfsc	_usuariActualSIO^0,7,c
  1344  000CCC  0012               	return	
  1345                           
  1346                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1347  000CCE  5061               	movf	_usuariActualSIO^0,w,c
  1348  000CD0  EC01  F00E         	call	_UgetUserName
  1349  000CD4  C04A  F009         	movff	?_UgetUserName,_userPtr
  1350  000CD8  C04B  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1351                           
  1352                           ;SIO.c: 50:     jugantSIO = 1;
  1353  000CDC  8276               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1354                           
  1355                           ;SIO.c: 51:     Krebut = 0;
  1356  000CDE  9076               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1357                           
  1358                           ;SIO.c: 52:     state = 1;
  1359  000CE0  0E01               	movlw	1
  1360  000CE2  6E0F               	movwf	motorSIO@state^0,c
  1361  000CE4  0C01               	retlw	1
  1362  000CE6                     l5095:
  1363                           
  1364                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1365  000CE6  D8D9               	call	PL22	;call to abstracted procedure
  1366  000CE8  E108               	bnz	l5103
  1367  000CEA  A2AC               	btfss	172,1,c	;volatile
  1368  000CEC  D006               	goto	l5103
  1369                           
  1370                           ;SIO.c: 57:     TXREG = '\0';
  1371  000CEE  6AAD               	clrf	173,c	;volatile
  1372                           
  1373                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1374  000CF0  6A5F               	clrf	_novaTeclaSIO^0,c
  1375                           
  1376                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1377  000CF2  868A               	bsf	138,3,c	;volatile
  1378                           
  1379                           ;SIO.c: 60:     state = 2;
  1380  000CF4  0E02               	movlw	2
  1381  000CF6  6E0F               	movwf	motorSIO@state^0,c
  1382                           
  1383                           ;SIO.c: 61:    }
  1384  000CF8  0C02               	retlw	2
  1385  000CFA                     l5103:
  1386  000CFA  D8CF               	call	PL22	;call to abstracted procedure
  1387  000CFC  A4D8               	btfss	status,2,c
  1388  000CFE  A2AC               	btfss	172,1,c	;volatile
  1389  000D00  0012               	return	
  1390                           
  1391                           ;SIO.c: 63:     TXREG = *userPtr;
  1392  000D02  D8CB               	call	PL22	;call to abstracted procedure
  1393  000D04  6EAD               	movwf	173,c	;volatile
  1394                           
  1395                           ;SIO.c: 64:     userPtr++;
  1396  000D06  4A09               	infsnz	_userPtr^0,f,c
  1397  000D08  2A0A               	incf	(_userPtr+1)^0,f,c
  1398  000D0A  0012               	return	
  1399  000D0C                     l5111:
  1400                           
  1401                           ;SIO.c: 68:    if (RCREG == 'K') {
  1402  000D0C  0E4B               	movlw	75
  1403  000D0E  18AE               	xorwf	174,w,c
  1404  000D10  A4D8               	btfss	status,2,c
  1405  000D12  0012               	return	
  1406                           
  1407                           ;SIO.c: 69:     Krebut = 1;
  1408  000D14  8076               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1409  000D16                     l5115:
  1410                           
  1411                           ;SIO.c: 70:     state = 3;
  1412  000D16  0E03               	movlw	3
  1413  000D18  6E0F               	movwf	motorSIO@state^0,c
  1414  000D1A  0C03               	retlw	3
  1415  000D1C                     l5117:
  1416                           
  1417                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1418  000D1C  2860               	incf	_direccioSIO^0,w,c
  1419  000D1E  E006               	bz	l5125
  1420  000D20  A2AC               	btfss	172,1,c	;volatile
  1421  000D22  D004               	goto	l5125
  1422                           
  1423                           ;SIO.c: 75:     TXREG = direccioSIO;
  1424  000D24  C060  FFAD         	movff	_direccioSIO,4013	;volatile
  1425                           
  1426                           ;SIO.c: 76:     direccioSIO = -1;
  1427  000D28  6860               	setf	_direccioSIO^0,c
  1428  000D2A  D7F5               	goto	l5115
  1429  000D2C                     l5125:
  1430  000D2C  0E30               	movlw	48
  1431  000D2E  645F               	cpfsgt	_novaTeclaSIO^0,c
  1432  000D30  D009               	goto	l1259
  1433  000D32  0E3A               	movlw	58
  1434  000D34  605F               	cpfslt	_novaTeclaSIO^0,c
  1435  000D36  D006               	goto	l1259
  1436  000D38  A2AC               	btfss	172,1,c	;volatile
  1437  000D3A  D004               	goto	l1259
  1438                           
  1439                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1440  000D3C  C05F  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1441                           
  1442                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1443  000D40  6A5F               	clrf	_novaTeclaSIO^0,c
  1444  000D42  D7E9               	goto	l5115
  1445  000D44                     l1259:
  1446  000D44  B276               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1447  000D46  D002               	goto	u4950
  1448  000D48  B2AC               	btfsc	172,1,c	;volatile
  1449  000D4A  D002               	goto	u4960
  1450  000D4C                     u4950:
  1451  000D4C  AA9E               	btfss	158,5,c	;volatile
  1452  000D4E  0012               	return	
  1453  000D50                     u4960:
  1454                           
  1455                           ;SIO.c: 85:     LcClear();
  1456  000D50  EC8F  F00D         	call	_LcClear	;wreg free
  1457                           
  1458                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1459  000D54  0EE9               	movlw	low STR_6
  1460  000D56  6E4D               	movwf	LcNewString@new_s^0,c
  1461  000D58  0E1F               	movlw	high STR_6
  1462  000D5A  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1463  000D5C  EC67  F00E         	call	_LcNewString	;wreg free
  1464                           
  1465                           ;SIO.c: 87:     TXREG = 'F';
  1466  000D60  0E46               	movlw	70
  1467  000D62  6EAD               	movwf	173,c	;volatile
  1468                           
  1469                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1470  000D64  6A5F               	clrf	_novaTeclaSIO^0,c
  1471                           
  1472                           ;SIO.c: 89:     state = 4;
  1473  000D66  0E04               	movlw	4
  1474  000D68  6E0F               	movwf	motorSIO@state^0,c
  1475  000D6A  0C04               	retlw	4
  1476  000D6C                     l1266:
  1477                           
  1478                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1479  000D6C  AA9E               	btfss	158,5,c	;volatile
  1480  000D6E  0012               	return	
  1481                           
  1482                           ;SIO.c: 94:                 score = RCREG;
  1483  000D70  CFAE F010          	movff	4014,_score	;volatile
  1484                           
  1485                           ;SIO.c: 95:                 UnewScore(score);
  1486  000D74  5010               	movf	_score^0,w,c
  1487  000D76  EC73  F00E         	call	_UnewScore
  1488                           
  1489                           ;SIO.c: 96:     CToAConverteix(score);
  1490  000D7A  5010               	movf	_score^0,w,c
  1491  000D7C  EC61  F00E         	call	_CToAConverteix
  1492                           
  1493                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1494  000D80  5011               	movf	_timerSIO^0,w,c
  1495  000D82  ECDC  F00D         	call	_TiResetTics
  1496  000D86                     l5153:
  1497                           
  1498                           ;SIO.c: 98:     state = 5;
  1499  000D86  0E05               	movlw	5
  1500  000D88  6E0F               	movwf	motorSIO@state^0,c
  1501  000D8A  0C05               	retlw	5
  1502  000D8C                     l5155:
  1503                           
  1504                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1505  000D8C  5011               	movf	_timerSIO^0,w,c
  1506  000D8E  EC58  F00D         	call	_TiGetTics
  1507  000D92  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1508  000D94  D010               	goto	l5163
  1509  000D96  0EBB               	movlw	187
  1510  000D98  5C4A               	subwf	?_TiGetTics^0,w,c
  1511  000D9A  0E09               	movlw	9
  1512  000D9C  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1513  000D9E  E30B               	bnc	l5163
  1514                           
  1515                           ;SIO.c: 103:     LcClear();
  1516  000DA0  EC8F  F00D         	call	_LcClear	;wreg free
  1517                           
  1518                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1519  000DA4  0ECC               	movlw	low STR_7
  1520  000DA6  6E4D               	movwf	LcNewString@new_s^0,c
  1521  000DA8  0E1F               	movlw	high STR_7
  1522  000DAA  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1523  000DAC  EC67  F00E         	call	_LcNewString	;wreg free
  1524                           
  1525                           ;SIO.c: 105:     state = 7;
  1526  000DB0  0E07               	movlw	7
  1527  000DB2  6E0F               	movwf	motorSIO@state^0,c
  1528                           
  1529                           ;SIO.c: 106:    }
  1530  000DB4  0C07               	retlw	7
  1531  000DB6                     l5163:
  1532  000DB6  5011               	movf	_timerSIO^0,w,c
  1533  000DB8  EC58  F00D         	call	_TiGetTics
  1534  000DBC  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1535  000DBE  D006               	goto	u4990
  1536  000DC0  0EBA               	movlw	186
  1537  000DC2  5C4A               	subwf	?_TiGetTics^0,w,c
  1538  000DC4  0E09               	movlw	9
  1539  000DC6  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1540  000DC8  B0D8               	btfsc	status,0,c
  1541  000DCA  0012               	return	
  1542  000DCC                     u4990:
  1543  000DCC  AA9E               	btfss	158,5,c	;volatile
  1544  000DCE  0012               	return	
  1545  000DD0  EC6D  F00E         	call	_LcLliure	;wreg free
  1546  000DD4  A0D8               	btfss	status,0,c
  1547  000DD6  0012               	return	
  1548                           
  1549                           ;SIO.c: 108:     LcGotoXY(0,1);
  1550  000DD8  ECBF  F003         	call	PL30	;call to abstracted procedure
  1551  000DDC  EC01  F00D         	call	_LcGotoXY
  1552                           
  1553                           ;SIO.c: 109:     LcPutChar(RCREG);
  1554  000DE0  50AE               	movf	174,w,c	;volatile
  1555  000DE2  EC2B  F00C         	call	_LcPutChar
  1556                           
  1557                           ;SIO.c: 110:     state = 6;
  1558  000DE6  0E06               	movlw	6
  1559  000DE8  6E0F               	movwf	motorSIO@state^0,c
  1560  000DEA  0C06               	retlw	6
  1561  000DEC                     l5173:
  1562                           
  1563                           ;SIO.c: 114:    if (LcLliure()) {
  1564  000DEC  EC6D  F00E         	call	_LcLliure	;wreg free
  1565  000DF0  A0D8               	btfss	status,0,c
  1566  000DF2  0012               	return	
  1567                           
  1568                           ;SIO.c: 115:     LcNewString(HGetTime());
  1569  000DF4  ECD4  F00E         	call	_HGetTime	;wreg free
  1570  000DF8  D856               	call	PL48	;call to abstracted procedure
  1571  000DFA  EC67  F00E         	call	_LcNewString	;wreg free
  1572                           
  1573                           ;SIO.c: 116:     state = 8;
  1574  000DFE  0E08               	movlw	8
  1575  000E00  6E0F               	movwf	motorSIO@state^0,c
  1576  000E02  0C08               	retlw	8
  1577  000E04                     l1274:
  1578                           
  1579                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1580  000E04  AA9E               	btfss	158,5,c	;volatile
  1581  000E06  0012               	return	
  1582                           
  1583                           ;SIO.c: 121:     LcPutChar(RCREG);
  1584  000E08  50AE               	movf	174,w,c	;volatile
  1585  000E0A  EC2B  F00C         	call	_LcPutChar
  1586                           
  1587                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1588  000E0E  5011               	movf	_timerSIO^0,w,c
  1589  000E10  ECDC  F00D         	call	_TiResetTics
  1590  000E14  D7B8               	goto	l5153
  1591  000E16                     l5183:
  1592                           
  1593                           ;SIO.c: 127:    if (LcLliure()) {
  1594  000E16  EC6D  F00E         	call	_LcLliure	;wreg free
  1595  000E1A  A0D8               	btfss	status,0,c
  1596  000E1C  0012               	return	
  1597                           
  1598                           ;SIO.c: 128:     LcGotoXY(0,1);
  1599  000E1E  ECBF  F003         	call	PL30	;call to abstracted procedure
  1600  000E22  EC01  F00D         	call	_LcGotoXY
  1601                           
  1602                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1603  000E26  0EE1               	movlw	low STR_8
  1604  000E28  6E4D               	movwf	LcNewString@new_s^0,c
  1605  000E2A  0E1F               	movlw	high STR_8
  1606  000E2C  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1607  000E2E  EC67  F00E         	call	_LcNewString	;wreg free
  1608                           
  1609                           ;SIO.c: 130:     state = 9;
  1610  000E32  0E09               	movlw	9
  1611  000E34  6E0F               	movwf	motorSIO@state^0,c
  1612  000E36  0C09               	retlw	9
  1613  000E38                     l5191:
  1614                           
  1615                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1616  000E38  EC6D  F00E         	call	_LcLliure	;wreg free
  1617  000E3C  A0D8               	btfss	status,0,c
  1618  000E3E  0012               	return	
  1619  000E40  ECEE  F00E         	call	_CToAHaAcabat	;wreg free
  1620  000E44  0AFA               	xorlw	250
  1621  000E46  A4D8               	btfss	status,2,c
  1622  000E48  0012               	return	
  1623                           
  1624                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1625  000E4A  ECEC  F00E         	call	_CToAobtenir	;wreg free
  1626  000E4E  D82B               	call	PL48	;call to abstracted procedure
  1627  000E50  EC67  F00E         	call	_LcNewString	;wreg free
  1628                           
  1629                           ;SIO.c: 136:     usuariActualSIO = -1;
  1630  000E54  6861               	setf	_usuariActualSIO^0,c
  1631                           
  1632                           ;SIO.c: 137:     state = 0;
  1633  000E56  6A0F               	clrf	motorSIO@state^0,c
  1634  000E58  0012               	return	
  1635  000E5A                     l5203:
  1636  000E5A  500F               	movf	motorSIO@state^0,w,c
  1637  000E5C  6E59               	movwf	??_motorSIO^0,c
  1638  000E5E  6A5A               	clrf	(??_motorSIO+1)^0,c
  1639                           
  1640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1641                           ; Switch size 1, requested type "space"
  1642                           ; Number of cases is 1, Range of values is 0 to 0
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            4     3 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  000E60  505A               	movf	(??_motorSIO+1)^0,w,c
  1648  000E62  A4D8               	btfss	status,2,c
  1649  000E64  0012               	return	
  1650                           
  1651                           ; Switch size 1, requested type "space"
  1652                           ; Number of cases is 10, Range of values is 0 to 9
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte           31    16 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657  000E66  5059               	movf	??_motorSIO^0,w,c
  1658  000E68  E101 D72F          	bz	l5085
  1659  000E6C  0A01               	xorlw	1	; case 1
  1660  000E6E  E101 D73A          	bz	l5095
  1661  000E72  0A03               	xorlw	3	; case 2
  1662  000E74  E101 D74A          	bz	l5111
  1663  000E78  0A01               	xorlw	1	; case 3
  1664  000E7A  E101 D74F          	bz	l5117
  1665  000E7E  0A07               	xorlw	7	; case 4
  1666  000E80  E101 D774          	bz	l1266
  1667  000E84  0A01               	xorlw	1	; case 5
  1668  000E86  E082               	bz	l5155
  1669  000E88  0A03               	xorlw	3	; case 6
  1670  000E8A  E0BC               	bz	l1274
  1671  000E8C  0A01               	xorlw	1	; case 7
  1672  000E8E  E0AE               	bz	l5173
  1673  000E90  0A0F               	xorlw	15	; case 8
  1674  000E92  E0C1               	bz	l5183
  1675  000E94  0A01               	xorlw	1	; case 9
  1676  000E96  E0D0               	bz	l5191
  1677  000E98  0012               	return		;funcret
  1678  000E9A                     __end_of_motorSIO:
  1679                           	callstack 0
  1680  000E9A                     PL22:
  1681                           	callstack 24
  1682  000E9A  C009  FFD9         	movff	_userPtr,fsr2l
  1683  000E9E  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1684  000EA2  50DF               	movf	indf2,w,c
  1685  000EA4  0012               	return	
  1686  000EA6                     __end_ofPL22:
  1687                           	callstack 0
  1688  000EA6                     PL48:
  1689                           	callstack 24
  1690  000EA6  6E59               	movwf	??_motorSIO^0,c
  1691  000EA8  C059  F04D         	movff	??_motorSIO,LcNewString@new_s
  1692  000EAC  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1693  000EAE  0012               	return	
  1694  000EB0                     __end_ofPL48:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _UnewScore *****************
  1698 ;; Defined at:
  1699 ;;		line 290 in file "Usuaris.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  scoretmp        1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1
  1713 ;;      Params:         0       0       0
  1714 ;;      Locals:         1       0       0
  1715 ;;      Temps:          0       0       0
  1716 ;;      Totals:         1       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 2
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_motorSIO
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text2
  1728  001CE6                     __ptext2:
  1729                           	callstack 0
  1730  001CE6                     _UnewScore:
  1731                           	callstack 27
  1732                           
  1733                           ;incstack = 0
  1734                           ;UnewScore@scoretmp stored from wreg
  1735  001CE6  6E4A               	movwf	UnewScore@scoretmp^0,c
  1736                           
  1737                           ;Usuaris.c: 291:     scoreUsr = scoretmp;
  1738  001CE8  C04A  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1739                           
  1740                           ;Usuaris.c: 292:     do_updateScore = 1;
  1741  001CEC  8677               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1742  001CEE  0012               	return		;funcret
  1743  001CF0                     __end_of_UnewScore:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _motorJoc *****************
  1747 ;; Defined at:
  1748 ;;		line 44 in file "Joc.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1
  1762 ;;      Params:         0       0       0
  1763 ;;      Locals:         0       0       0
  1764 ;;      Temps:          2       0       0
  1765 ;;      Totals:         2       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 5
  1769 ;; This function calls:
  1770 ;;		_HClearNouSegon
  1771 ;;		_HGetTime
  1772 ;;		_HJugant
  1773 ;;		_HNouSegon
  1774 ;;		_HnoJugant
  1775 ;;		_LcGotoXY
  1776 ;;		_LcLliure
  1777 ;;		_LcNewString
  1778 ;;		_SIONovaDireccio
  1779 ;;		_SIONovaTecla
  1780 ;;		_SIOStartGame
  1781 ;;		_SIOcheckKrebut
  1782 ;;		_SIOendGame
  1783 ;;		_conversorJoystick
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text3
  1790  001422                     __ptext3:
  1791                           	callstack 0
  1792  001422                     _motorJoc:
  1793                           	callstack 25
  1794                           
  1795                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1796                           
  1797                           ;incstack = 0
  1798  001422  D043               	goto	l5077
  1799  001424                     l5031:
  1800                           
  1801                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1802  001424  2863               	incf	_usuariJoc^0,w,c
  1803  001426  B4D8               	btfsc	status,2,c
  1804  001428  0012               	return	
  1805                           
  1806                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1807  00142A  5063               	movf	_usuariJoc^0,w,c
  1808  00142C  EC7C  F00E         	call	_SIOStartGame
  1809                           
  1810                           ;Joc.c: 51:     jugantJoc = 1;
  1811  001430  8476               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1812                           
  1813                           ;Joc.c: 52:     state = 2;
  1814  001432  0E02               	movlw	2
  1815  001434  6E12               	movwf	motorJoc@state^0,c
  1816                           
  1817                           ;Joc.c: 54:   break;
  1818                           
  1819                           ;Joc.c: 53:    }
  1820  001436  0C02               	retlw	2
  1821  001438                     l1152:
  1822                           
  1823                           ;Joc.c: 56:    if (!jugantJoc) {
  1824  001438  B476               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1825  00143A  D008               	goto	l5047
  1826                           
  1827                           ;Joc.c: 57:     usuariJoc = -1;
  1828  00143C  6863               	setf	_usuariJoc^0,c
  1829                           
  1830                           ;Joc.c: 58:     HnoJugant();
  1831  00143E  ECD2  F00E         	call	_HnoJugant	;wreg free
  1832                           
  1833                           ;Joc.c: 59:     SIOendGame();
  1834  001442  ECD0  F00E         	call	_SIOendGame	;wreg free
  1835                           
  1836                           ;Joc.c: 60:     LATBbits.LATB3 = 0;
  1837  001446  968A               	bcf	138,3,c	;volatile
  1838  001448                     l5045:
  1839                           
  1840                           ;Joc.c: 61:     state--;
  1841  001448  0612               	decf	motorJoc@state^0,f,c
  1842                           
  1843                           ;Joc.c: 62:    }
  1844  00144A  0012               	return	
  1845  00144C                     l5047:
  1846  00144C  BE13               	btfsc	_direccioJoc^0,7,c
  1847  00144E  D007               	goto	l5053
  1848                           
  1849                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1850  001450  5013               	movf	_direccioJoc^0,w,c
  1851  001452  EC6B  F00D         	call	_conversorJoystick
  1852  001456  EC84  F00E         	call	_SIONovaDireccio
  1853                           
  1854                           ;Joc.c: 65:     direccioJoc = -1;
  1855  00145A  6813               	setf	_direccioJoc^0,c
  1856                           
  1857                           ;Joc.c: 66:    }
  1858  00145C  0012               	return	
  1859  00145E                     l5053:
  1860  00145E  EC43  F00E         	call	_HNouSegon	;wreg free
  1861  001462  E311               	bnc	l5063
  1862  001464  EC6D  F00E         	call	_LcLliure	;wreg free
  1863  001468  E30E               	bnc	l5063
  1864                           
  1865                           ;Joc.c: 68:     HClearNouSegon();
  1866  00146A  ECD6  F00E         	call	_HClearNouSegon	;wreg free
  1867                           
  1868                           ;Joc.c: 69:     LcGotoXY(0,1);
  1869  00146E  ECBF  F003         	call	PL30	;call to abstracted procedure
  1870  001472  EC01  F00D         	call	_LcGotoXY
  1871                           
  1872                           ;Joc.c: 70:     LcNewString(HGetTime());
  1873  001476  ECD4  F00E         	call	_HGetTime	;wreg free
  1874  00147A  6E58               	movwf	??_motorJoc^0,c
  1875  00147C  C058  F04D         	movff	??_motorJoc,LcNewString@new_s
  1876  001480  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1877  001482  EF67  F00E         	goto	_LcNewString	;wreg free
  1878  001486                     l5063:
  1879  001486  5062               	movf	_novaTeclaJOC^0,w,c
  1880  001488  0A80               	xorlw	128
  1881  00148A  0F7F               	addlw	-129
  1882  00148C  A0D8               	btfss	status,0,c
  1883  00148E  0012               	return	
  1884                           
  1885                           ;Joc.c: 73:     SIONovaTecla(novaTeclaJOC+48);
  1886  001490  5062               	movf	_novaTeclaJOC^0,w,c
  1887  001492  0F30               	addlw	48
  1888  001494  EC80  F00E         	call	_SIONovaTecla
  1889                           
  1890                           ;Joc.c: 74:     novaTeclaJOC = -1;
  1891  001498  6862               	setf	_novaTeclaJOC^0,c
  1892  00149A  0012               	return	
  1893  00149C                     l5069:
  1894                           
  1895                           ;Joc.c: 78:    if (SIOcheckKrebut()) {
  1896  00149C  EC3D  F00E         	call	_SIOcheckKrebut	;wreg free
  1897  0014A0  A0D8               	btfss	status,0,c
  1898  0014A2  0012               	return	
  1899                           
  1900                           ;Joc.c: 79:     HJugant();
  1901  0014A4  ECC4  F00E         	call	_HJugant	;wreg free
  1902  0014A8  D7CF               	goto	l5045
  1903  0014AA                     l5077:
  1904  0014AA  5012               	movf	motorJoc@state^0,w,c
  1905  0014AC  6E58               	movwf	??_motorJoc^0,c
  1906  0014AE  6A59               	clrf	(??_motorJoc+1)^0,c
  1907                           
  1908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1909                           ; Switch size 1, requested type "space"
  1910                           ; Number of cases is 1, Range of values is 0 to 0
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte            4     3 (average)
  1914                           ;	Chosen strategy is simple_byte
  1915  0014B0  5059               	movf	(??_motorJoc+1)^0,w,c
  1916  0014B2  A4D8               	btfss	status,2,c
  1917  0014B4  0012               	return	
  1918                           
  1919                           ; Switch size 1, requested type "space"
  1920                           ; Number of cases is 3, Range of values is 0 to 2
  1921                           ; switch strategies available:
  1922                           ; Name         Instructions Cycles
  1923                           ; simple_byte           10     6 (average)
  1924                           ;	Chosen strategy is simple_byte
  1925  0014B6  5058               	movf	??_motorJoc^0,w,c
  1926  0014B8  E0B5               	bz	l5031
  1927  0014BA  0A01               	xorlw	1	; case 1
  1928  0014BC  E0BD               	bz	l1152
  1929  0014BE  0A03               	xorlw	3	; case 2
  1930  0014C0  E0ED               	bz	l5069
  1931  0014C2  0012               	return		;funcret
  1932  0014C4                     __end_of_motorJoc:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _conversorJoystick *****************
  1936 ;; Defined at:
  1937 ;;		line 27 in file "Joc.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  direc           1    wreg     unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  direc           1    5[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      unsigned char 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1
  1951 ;;      Params:         0       0       0
  1952 ;;      Locals:         1       0       0
  1953 ;;      Temps:          0       0       0
  1954 ;;      Totals:         1       0       0
  1955 ;;Total ram usage:        1 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_motorJoc
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text4
  1966  001AD6                     __ptext4:
  1967                           	callstack 0
  1968  001AD6                     _conversorJoystick:
  1969                           	callstack 27
  1970                           
  1971                           ;incstack = 0
  1972                           ;conversorJoystick@direc stored from wreg
  1973  001AD6  6E4A               	movwf	conversorJoystick@direc^0,c
  1974                           
  1975                           ;Joc.c: 29:     if (direc==2) {
  1976  001AD8  0E02               	movlw	2
  1977  001ADA  184A               	xorwf	conversorJoystick@direc^0,w,c
  1978  001ADC  E101               	bnz	l2335
  1979                           
  1980                           ;Joc.c: 30:         return 'W';
  1981  001ADE  0C57               	retlw	87
  1982  001AE0                     l2335:
  1983                           
  1984                           ;Joc.c: 32:     if (direc==6) {
  1985  001AE0  0E06               	movlw	6
  1986  001AE2  184A               	xorwf	conversorJoystick@direc^0,w,c
  1987  001AE4  E101               	bnz	l2341
  1988                           
  1989                           ;Joc.c: 33:         return 'D';
  1990  001AE6  0C44               	retlw	68
  1991  001AE8                     l2341:
  1992                           
  1993                           ;Joc.c: 35:     if (direc==8) {
  1994  001AE8  0E08               	movlw	8
  1995  001AEA  184A               	xorwf	conversorJoystick@direc^0,w,c
  1996  001AEC  E101               	bnz	l2347
  1997                           
  1998                           ;Joc.c: 36:         return 'S';
  1999  001AEE  0C53               	retlw	83
  2000  001AF0                     l2347:
  2001                           
  2002                           ;Joc.c: 38:     if (direc==4) {
  2003  001AF0  0E04               	movlw	4
  2004  001AF2  184A               	xorwf	conversorJoystick@direc^0,w,c
  2005  001AF4  E101               	bnz	l2353
  2006                           
  2007                           ;Joc.c: 39:         return 'A';
  2008  001AF6  0C41               	retlw	65
  2009  001AF8                     l2353:
  2010                           
  2011                           ;Joc.c: 41:     return 0;
  2012  001AF8  0C00               	retlw	0	;funcret
  2013  001AFA                     __end_of_conversorJoystick:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _SIOendGame *****************
  2017 ;; Defined at:
  2018 ;;		line 23 in file "SIO.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		None
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1
  2032 ;;      Params:         0       0       0
  2033 ;;      Locals:         0       0       0
  2034 ;;      Temps:          0       0       0
  2035 ;;      Totals:         0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 2
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_motorJoc
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text5
  2047  001DA0                     __ptext5:
  2048                           	callstack 0
  2049  001DA0                     _SIOendGame:
  2050                           	callstack 27
  2051                           
  2052                           ;SIO.c: 24:     jugantSIO = 0;
  2053                           
  2054                           ;incstack = 0
  2055  001DA0  9276               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2056  001DA2  0012               	return		;funcret
  2057  001DA4                     __end_of_SIOendGame:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _SIOcheckKrebut *****************
  2061 ;; Defined at:
  2062 ;;		line 26 in file "SIO.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1
  2076 ;;      Params:         0       0       0
  2077 ;;      Locals:         0       0       0
  2078 ;;      Temps:          0       0       0
  2079 ;;      Totals:         0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 2
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_motorJoc
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text6
  2091  001C7A                     __ptext6:
  2092                           	callstack 0
  2093  001C7A                     _SIOcheckKrebut:
  2094                           	callstack 27
  2095                           
  2096                           ;SIO.c: 27:     return Krebut;
  2097                           
  2098                           ;incstack = 0
  2099  001C7A  B076               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2100  001C7C  D002               	goto	l2369
  2101  001C7E  90D8               	bcf	status,0,c
  2102  001C80  0012               	return	
  2103  001C82                     l2369:
  2104  001C82  80D8               	bsf	status,0,c
  2105  001C84  0012               	return		;funcret
  2106  001C86                     __end_of_SIOcheckKrebut:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _SIOStartGame *****************
  2110 ;; Defined at:
  2111 ;;		line 33 in file "SIO.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  usuari          1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  usuari          1    5[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1
  2125 ;;      Params:         0       0       0
  2126 ;;      Locals:         1       0       0
  2127 ;;      Temps:          0       0       0
  2128 ;;      Totals:         1       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 2
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_motorJoc
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text7
  2140  001CF8                     __ptext7:
  2141                           	callstack 0
  2142  001CF8                     _SIOStartGame:
  2143                           	callstack 27
  2144                           
  2145                           ;incstack = 0
  2146                           ;SIOStartGame@usuari stored from wreg
  2147  001CF8  6E4A               	movwf	SIOStartGame@usuari^0,c
  2148                           
  2149                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2150  001CFA  C04A  F061         	movff	SIOStartGame@usuari,_usuariActualSIO
  2151  001CFE  0012               	return		;funcret
  2152  001D00                     __end_of_SIOStartGame:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _SIONovaTecla *****************
  2156 ;; Defined at:
  2157 ;;		line 40 in file "SIO.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  tecla           1    wreg     char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  tecla           1    5[COMRAM] char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1
  2171 ;;      Params:         0       0       0
  2172 ;;      Locals:         1       0       0
  2173 ;;      Temps:          0       0       0
  2174 ;;      Totals:         1       0       0
  2175 ;;Total ram usage:        1 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_motorJoc
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text8
  2186  001D00                     __ptext8:
  2187                           	callstack 0
  2188  001D00                     _SIONovaTecla:
  2189                           	callstack 27
  2190                           
  2191                           ;incstack = 0
  2192                           ;SIONovaTecla@tecla stored from wreg
  2193  001D00  6E4A               	movwf	SIONovaTecla@tecla^0,c
  2194                           
  2195                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2196  001D02  C04A  F05F         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2197  001D06  0012               	return		;funcret
  2198  001D08                     __end_of_SIONovaTecla:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _SIONovaDireccio *****************
  2202 ;; Defined at:
  2203 ;;		line 29 in file "SIO.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  num             1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  num             1    5[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1
  2217 ;;      Params:         0       0       0
  2218 ;;      Locals:         1       0       0
  2219 ;;      Temps:          0       0       0
  2220 ;;      Totals:         1       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 2
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_motorJoc
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text9
  2232  001D08                     __ptext9:
  2233                           	callstack 0
  2234  001D08                     _SIONovaDireccio:
  2235                           	callstack 27
  2236                           
  2237                           ;incstack = 0
  2238                           ;SIONovaDireccio@num stored from wreg
  2239  001D08  6E4A               	movwf	SIONovaDireccio@num^0,c
  2240                           
  2241                           ;SIO.c: 30:     direccioSIO = num;
  2242  001D0A  C04A  F060         	movff	SIONovaDireccio@num,_direccioSIO
  2243  001D0E  0012               	return		;funcret
  2244  001D10                     __end_of_SIONovaDireccio:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _HnoJugant *****************
  2248 ;; Defined at:
  2249 ;;		line 35 in file "Hora.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		None
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1
  2263 ;;      Params:         0       0       0
  2264 ;;      Locals:         0       0       0
  2265 ;;      Temps:          0       0       0
  2266 ;;      Totals:         0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 2
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_motorJoc
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text10
  2278  001DA4                     __ptext10:
  2279                           	callstack 0
  2280  001DA4                     _HnoJugant:
  2281                           	callstack 27
  2282                           
  2283                           ;Hora.c: 36:     jugant = 0;
  2284                           
  2285                           ;incstack = 0
  2286  001DA4  9A76               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2287  001DA6  0012               	return		;funcret
  2288  001DA8                     __end_of_HnoJugant:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _HNouSegon *****************
  2292 ;; Defined at:
  2293 ;;		line 23 in file "Hora.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;		None               void
  2300 ;; Registers used:
  2301 ;;		status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1
  2307 ;;      Params:         0       0       0
  2308 ;;      Locals:         0       0       0
  2309 ;;      Temps:          0       0       0
  2310 ;;      Totals:         0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 2
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_motorJoc
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text11
  2322  001C86                     __ptext11:
  2323                           	callstack 0
  2324  001C86                     _HNouSegon:
  2325                           	callstack 27
  2326                           
  2327                           ;Hora.c: 24:     return nouSegon;
  2328                           
  2329                           ;incstack = 0
  2330  001C86  B876               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2331  001C88  D002               	goto	l2315
  2332  001C8A  90D8               	bcf	status,0,c
  2333  001C8C  0012               	return	
  2334  001C8E                     l2315:
  2335  001C8E  80D8               	bsf	status,0,c
  2336  001C90  0012               	return		;funcret
  2337  001C92                     __end_of_HNouSegon:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _HJugant *****************
  2341 ;; Defined at:
  2342 ;;		line 38 in file "Hora.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1
  2356 ;;      Params:         0       0       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       0       0
  2359 ;;      Totals:         0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 2
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_motorJoc
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text12
  2371  001D88                     __ptext12:
  2372                           	callstack 0
  2373  001D88                     _HJugant:
  2374                           	callstack 27
  2375                           
  2376                           ;Hora.c: 39:     jugant = 1;
  2377                           
  2378                           ;incstack = 0
  2379  001D88  8A76               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2380                           
  2381                           ;Hora.c: 40:     tempsAcabat = 0;
  2382  001D8A  9676               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2383  001D8C  0012               	return		;funcret
  2384  001D8E                     __end_of_HJugant:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _HGetTime *****************
  2388 ;; Defined at:
  2389 ;;		line 31 in file "Hora.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      PTR unsigned char 
  2396 ;; Registers used:
  2397 ;;		wreg
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1
  2403 ;;      Params:         2       0       0
  2404 ;;      Locals:         0       0       0
  2405 ;;      Temps:          0       0       0
  2406 ;;      Totals:         2       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 2
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_motorJoc
  2414 ;;		_motorSIO
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text13
  2419  001DA8                     __ptext13:
  2420                           	callstack 0
  2421  001DA8                     _HGetTime:
  2422                           	callstack 27
  2423                           
  2424                           ;Hora.c: 32:     return hora;
  2425                           
  2426                           ;incstack = 0
  2427  001DA8  0E6D               	movlw	_hora& (0+255)
  2428  001DAA  0012               	return		;funcret
  2429  001DAC                     __end_of_HGetTime:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _HClearNouSegon *****************
  2433 ;; Defined at:
  2434 ;;		line 27 in file "Hora.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		None
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1
  2448 ;;      Params:         0       0       0
  2449 ;;      Locals:         0       0       0
  2450 ;;      Temps:          0       0       0
  2451 ;;      Totals:         0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 2
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_motorJoc
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text14
  2463  001DAC                     __ptext14:
  2464                           	callstack 0
  2465  001DAC                     _HClearNouSegon:
  2466                           	callstack 27
  2467                           
  2468                           ;Hora.c: 28:     nouSegon = 0;
  2469                           
  2470                           ;incstack = 0
  2471  001DAC  9876               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2472  001DAE  0012               	return		;funcret
  2473  001DB0                     __end_of_HClearNouSegon:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _motorHora *****************
  2477 ;; Defined at:
  2478 ;;		line 46 in file "Hora.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1
  2492 ;;      Params:         0       0       0
  2493 ;;      Locals:         0       0       0
  2494 ;;      Temps:          2       0       0
  2495 ;;      Totals:         2       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 3
  2499 ;; This function calls:
  2500 ;;		_TiGetTics
  2501 ;;		_TiResetTics
  2502 ;;		_playAltaveu
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text15
  2509  001556                     __ptext15:
  2510                           	callstack 0
  2511  001556                     _motorHora:
  2512                           	callstack 27
  2513                           
  2514                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2515                           
  2516                           ;incstack = 0
  2517  001556  D038               	goto	l5261
  2518  001558                     l5211:
  2519                           
  2520                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2521  001558  5016               	movf	_timerHora^0,w,c
  2522  00155A  EC58  F00D         	call	_TiGetTics
  2523  00155E  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  2524  001560  0012               	return	
  2525  001562  EC1E  F005         	call	PL56	;call to abstracted procedure
  2526  001566  A0D8               	btfss	status,0,c
  2527  001568  0012               	return	
  2528                           
  2529                           ;Hora.c: 52:     TiResetTics(timerHora);
  2530  00156A  5016               	movf	_timerHora^0,w,c
  2531  00156C  ECDC  F00D         	call	_TiResetTics
  2532                           
  2533                           ;Hora.c: 53:     if(jugant){
  2534  001570  AA76               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2535  001572  D028               	goto	l5257
  2536                           
  2537                           ;Hora.c: 54:       nouSegon = 1;
  2538  001574  8876               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2539                           
  2540                           ;Hora.c: 56:      hora[4]--;
  2541  001576  0671               	decf	(_hora+4)^0,f,c
  2542                           
  2543                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2544  001578  0E2F               	movlw	47
  2545  00157A  1871               	xorwf	(_hora+4)^0,w,c
  2546  00157C  E103               	bnz	l5227
  2547                           
  2548                           ;Hora.c: 58:       hora[4] = '9';
  2549  00157E  0E39               	movlw	57
  2550  001580  6E71               	movwf	(_hora+4)^0,c
  2551                           
  2552                           ;Hora.c: 59:       hora[3]--;
  2553  001582  0670               	decf	(_hora+3)^0,f,c
  2554  001584                     l5227:
  2555                           
  2556                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2557  001584  0E2F               	movlw	47
  2558  001586  1870               	xorwf	(_hora+3)^0,w,c
  2559  001588  E103               	bnz	l5233
  2560                           
  2561                           ;Hora.c: 63:       hora[3] = '5';
  2562  00158A  0E35               	movlw	53
  2563  00158C  6E70               	movwf	(_hora+3)^0,c
  2564                           
  2565                           ;Hora.c: 64:       hora[1]--;
  2566  00158E  066E               	decf	(_hora+1)^0,f,c
  2567  001590                     l5233:
  2568                           
  2569                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2570  001590  0E2F               	movlw	47
  2571  001592  186E               	xorwf	(_hora+1)^0,w,c
  2572  001594  E103               	bnz	l5239
  2573                           
  2574                           ;Hora.c: 68:       hora[1] = '9';
  2575  001596  0E39               	movlw	57
  2576  001598  6E6E               	movwf	(_hora+1)^0,c
  2577                           
  2578                           ;Hora.c: 69:       hora[0]--;
  2579  00159A  066D               	decf	_hora^0,f,c
  2580  00159C                     l5239:
  2581                           
  2582                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2583  00159C  0E30               	movlw	48
  2584  00159E  186D               	xorwf	_hora^0,w,c
  2585  0015A0  E10A               	bnz	l5249
  2586  0015A2  0E30               	movlw	48
  2587  0015A4  186E               	xorwf	(_hora+1)^0,w,c
  2588  0015A6  E107               	bnz	l5249
  2589  0015A8  0E30               	movlw	48
  2590  0015AA  1870               	xorwf	(_hora+3)^0,w,c
  2591  0015AC  E104               	bnz	l5249
  2592  0015AE  0E30               	movlw	48
  2593  0015B0  1871               	xorwf	(_hora+4)^0,w,c
  2594  0015B2  E101               	bnz	l5249
  2595                           
  2596                           ;Hora.c: 73:       tempsAcabat = 1;
  2597  0015B4  8676               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2598  0015B6                     l5249:
  2599                           
  2600                           ;Hora.c: 76:      segons++;
  2601  0015B6  2A15               	incf	_segons^0,f,c
  2602                           
  2603                           ;Hora.c: 77:      if(segons > 59){
  2604  0015B8  0E3B               	movlw	59
  2605  0015BA  6415               	cpfsgt	_segons^0,c
  2606  0015BC  D003               	goto	l5257
  2607                           
  2608                           ;Hora.c: 78:       playAltaveu();
  2609  0015BE  ECD8  F00E         	call	_playAltaveu	;wreg free
  2610                           
  2611                           ;Hora.c: 79:       segons = 0;
  2612  0015C2  6A15               	clrf	_segons^0,c
  2613  0015C4                     l5257:
  2614                           
  2615                           ;Hora.c: 82:     state = 0;
  2616  0015C4  6A14               	clrf	motorHora@state^0,c
  2617  0015C6  0012               	return	
  2618  0015C8                     l5261:
  2619  0015C8  5014               	movf	motorHora@state^0,w,c
  2620  0015CA  6E51               	movwf	??_motorHora^0,c
  2621  0015CC  6A52               	clrf	(??_motorHora+1)^0,c
  2622                           
  2623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2624                           ; Switch size 1, requested type "space"
  2625                           ; Number of cases is 1, Range of values is 0 to 0
  2626                           ; switch strategies available:
  2627                           ; Name         Instructions Cycles
  2628                           ; simple_byte            4     3 (average)
  2629                           ;	Chosen strategy is simple_byte
  2630  0015CE  5052               	movf	(??_motorHora+1)^0,w,c
  2631  0015D0  A4D8               	btfss	status,2,c
  2632  0015D2  0012               	return	
  2633                           
  2634                           ; Switch size 1, requested type "space"
  2635                           ; Number of cases is 1, Range of values is 0 to 0
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            4     3 (average)
  2639                           ;	Chosen strategy is simple_byte
  2640  0015D4  5051               	movf	??_motorHora^0,w,c
  2641  0015D6  E0C0               	bz	l5211
  2642  0015D8  0012               	return		;funcret
  2643  0015DA                     __end_of_motorHora:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _playAltaveu *****************
  2647 ;; Defined at:
  2648 ;;		line 13 in file "Altaveu.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		None
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1
  2662 ;;      Params:         0       0       0
  2663 ;;      Locals:         0       0       0
  2664 ;;      Temps:          0       0       0
  2665 ;;      Totals:         0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_motorHora
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text16
  2677  001DB0                     __ptext16:
  2678                           	callstack 0
  2679  001DB0                     _playAltaveu:
  2680                           	callstack 27
  2681                           
  2682                           ;Altaveu.c: 14:     reproduir = 1;
  2683                           
  2684                           ;incstack = 0
  2685  001DB0  8477               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2686  001DB2  0012               	return		;funcret
  2687  001DB4                     __end_of_playAltaveu:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _motorAltaveu *****************
  2691 ;; Defined at:
  2692 ;;		line 16 in file "Altaveu.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1
  2706 ;;      Params:         0       0       0
  2707 ;;      Locals:         0       0       0
  2708 ;;      Temps:          3       0       0
  2709 ;;      Totals:         3       0       0
  2710 ;;Total ram usage:        3 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 3
  2713 ;; This function calls:
  2714 ;;		_TiGetTics
  2715 ;;		_TiResetTics
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text17
  2722  0014C4                     __ptext17:
  2723                           	callstack 0
  2724  0014C4                     _motorAltaveu:
  2725                           	callstack 27
  2726                           
  2727                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2728                           
  2729                           ;incstack = 0
  2730  0014C4  D02F               	goto	l5859
  2731  0014C6                     l853:
  2732                           
  2733                           ;Altaveu.c: 21:    if (reproduir) {
  2734  0014C6  A477               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2735  0014C8  0012               	return	
  2736                           
  2737                           ;Altaveu.c: 22:     nota = 1;
  2738  0014CA  0E01               	movlw	1
  2739  0014CC  6E26               	movwf	_nota^0,c
  2740                           
  2741                           ;Altaveu.c: 23:     copsNota = 0;
  2742  0014CE  6A24               	clrf	_copsNota^0,c
  2743                           
  2744                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2745  0014D0  5025               	movf	_timerAltaveu^0,w,c
  2746  0014D2  ECDC  F00D         	call	_TiResetTics
  2747                           
  2748                           ;Altaveu.c: 25:     state = 1;
  2749  0014D6  0E01               	movlw	1
  2750  0014D8  6E23               	movwf	motorAltaveu@state^0,c
  2751  0014DA  0C01               	retlw	1
  2752  0014DC                     l5827:
  2753                           
  2754                           ;Altaveu.c: 29:    if (nota > 5) {
  2755  0014DC  0E05               	movlw	5
  2756  0014DE  6426               	cpfsgt	_nota^0,c
  2757  0014E0  D003               	goto	l5833
  2758                           
  2759                           ;Altaveu.c: 30:     reproduir = 0;
  2760  0014E2  9477               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2761                           
  2762                           ;Altaveu.c: 31:     state--;
  2763  0014E4  0623               	decf	motorAltaveu@state^0,f,c
  2764                           
  2765                           ;Altaveu.c: 32:    }
  2766  0014E6  0C05               	retlw	5
  2767  0014E8                     l5833:
  2768  0014E8  0EA8               	movlw	168
  2769  0014EA  1824               	xorwf	_copsNota^0,w,c
  2770  0014EC  E103               	bnz	l5839
  2771                           
  2772                           ;Altaveu.c: 34:     nota++;
  2773  0014EE  2A26               	incf	_nota^0,f,c
  2774                           
  2775                           ;Altaveu.c: 35:     copsNota = 0;
  2776  0014F0  6A24               	clrf	_copsNota^0,c
  2777                           
  2778                           ;Altaveu.c: 36:    }
  2779  0014F2  0012               	return	
  2780  0014F4                     l5839:
  2781  0014F4  5025               	movf	_timerAltaveu^0,w,c
  2782  0014F6  EC58  F00D         	call	_TiGetTics
  2783  0014FA  D821               	call	PL18	;call to abstracted procedure
  2784  0014FC  B0D8               	btfsc	status,0,c
  2785  0014FE  0012               	return	
  2786                           
  2787                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  2788  001500  808A               	bsf	138,0,c	;volatile
  2789                           
  2790                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  2791  001502  5025               	movf	_timerAltaveu^0,w,c
  2792  001504  ECDC  F00D         	call	_TiResetTics
  2793  001508                     l5845:
  2794                           
  2795                           ;Altaveu.c: 40:     state++;
  2796  001508  2A23               	incf	motorAltaveu@state^0,f,c
  2797  00150A  0012               	return	
  2798  00150C                     l5847:
  2799                           
  2800                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  2801  00150C  5025               	movf	_timerAltaveu^0,w,c
  2802  00150E  EC58  F00D         	call	_TiGetTics
  2803  001512  D815               	call	PL18	;call to abstracted procedure
  2804  001514  B0D8               	btfsc	status,0,c
  2805  001516  0012               	return	
  2806                           
  2807                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  2808  001518  908A               	bcf	138,0,c	;volatile
  2809                           
  2810                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  2811  00151A  5025               	movf	_timerAltaveu^0,w,c
  2812  00151C  ECDC  F00D         	call	_TiResetTics
  2813                           
  2814                           ;Altaveu.c: 47:     copsNota++;
  2815  001520  2A24               	incf	_copsNota^0,f,c
  2816  001522  D7F2               	goto	l5845
  2817  001524                     l5859:
  2818  001524  5023               	movf	motorAltaveu@state^0,w,c
  2819  001526  6E51               	movwf	??_motorAltaveu^0,c
  2820  001528  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2821                           
  2822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2823                           ; Switch size 1, requested type "space"
  2824                           ; Number of cases is 1, Range of values is 0 to 0
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte            4     3 (average)
  2828                           ;	Chosen strategy is simple_byte
  2829  00152A  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2830  00152C  A4D8               	btfss	status,2,c
  2831  00152E  0012               	return	
  2832                           
  2833                           ; Switch size 1, requested type "space"
  2834                           ; Number of cases is 3, Range of values is 0 to 2
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte           10     6 (average)
  2838                           ;	Chosen strategy is simple_byte
  2839  001530  5051               	movf	??_motorAltaveu^0,w,c
  2840  001532  E0C9               	bz	l853
  2841  001534  0A01               	xorlw	1	; case 1
  2842  001536  E0D2               	bz	l5827
  2843  001538  0A03               	xorlw	3	; case 2
  2844  00153A  E0E8               	bz	l5847
  2845  00153C  0012               	return		;funcret
  2846  00153E                     __end_of_motorAltaveu:
  2847                           	callstack 0
  2848  00153E                     PL18:
  2849                           	callstack 27
  2850  00153E  5026               	movf	_nota^0,w,c
  2851  001540  6E51               	movwf	??_motorAltaveu^0,c
  2852  001542  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2853  001544  504A               	movf	?_TiGetTics^0,w,c
  2854  001546  5C51               	subwf	??_motorAltaveu^0,w,c
  2855  001548  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2856  00154A  0A80               	xorlw	128
  2857  00154C  6E53               	movwf	(??_motorAltaveu+2)^0,c
  2858  00154E  504B               	movf	(?_TiGetTics+1)^0,w,c
  2859  001550  0A80               	xorlw	128
  2860  001552  5853               	subwfb	(??_motorAltaveu+2)^0,w,c
  2861  001554  0012               	return	
  2862  001556                     __end_ofPL18:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _menu *****************
  2866 ;; Defined at:
  2867 ;;		line 42 in file "Menu.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1
  2881 ;;      Params:         0       0       0
  2882 ;;      Locals:         0       0       0
  2883 ;;      Temps:          5       0       0
  2884 ;;      Totals:         5       0       0
  2885 ;;Total ram usage:        5 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 6
  2888 ;; This function calls:
  2889 ;;		_CToAConverteix
  2890 ;;		_CToAHaAcabat
  2891 ;;		_CToAobtenir
  2892 ;;		_GLCDMostraMenu
  2893 ;;		_HActualitzaHora
  2894 ;;		_JJuguem
  2895 ;;		_JendGame
  2896 ;;		_JnovaDireccio
  2897 ;;		_JnovaTecla
  2898 ;;		_LcClear
  2899 ;;		_LcGotoXY
  2900 ;;		_LcLliure
  2901 ;;		_LcNewString
  2902 ;;		_LcPutChar
  2903 ;;		_LcScroll
  2904 ;;		_NoFerMenu
  2905 ;;		_SIOHaAcabatPuntuacions
  2906 ;;		_SMSoff
  2907 ;;		_SMSon
  2908 ;;		_SiFerMenu
  2909 ;;		_TiGetTics
  2910 ;;		_TiResetTics
  2911 ;;		_URegister
  2912 ;;		_UcheckExists
  2913 ;;		_UcheckExistsGetError
  2914 ;;		_UcheckExistsNotFinished
  2915 ;;		_UenviaChar
  2916 ;;		_UenviaPas
  2917 ;;		_UgetNumUsuaris
  2918 ;;		_UgetScore
  2919 ;;		_UgetTop5
  2920 ;;		_UgetUserName
  2921 ;;		_UshowUsersCalculat
  2922 ;;		_calculateShowUsers
  2923 ;;		_checkHoraAcabat
  2924 ;;		_getArrayShowUsers
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text18
  2931  000036                     __ptext18:
  2932                           	callstack 0
  2933  000036                     _menu:
  2934                           	callstack 24
  2935                           
  2936                           ;Menu.c: 43:  static char state = 0;;Menu.c: 45:  switch(state) {
  2937                           
  2938                           ;incstack = 0
  2939  000036  D328               	goto	l5811
  2940  000038                     l5269:
  2941                           
  2942                           ;Menu.c: 47:    LcClear();
  2943  000038  EC8F  F00D         	call	_LcClear	;wreg free
  2944                           
  2945                           ;Menu.c: 48:    LcNewString(loginText);
  2946  00003C  0EA7               	movlw	low _loginText
  2947  00003E  6E4D               	movwf	LcNewString@new_s^0,c
  2948  000040  0E1F               	movlw	high _loginText
  2949  000042  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2950  000044  EC67  F00E         	call	_LcNewString	;wreg free
  2951                           
  2952                           ;Menu.c: 49:    state = 1;
  2953  000048  0E01               	movlw	1
  2954  00004A  6E2E               	movwf	menu@state^0,c
  2955                           
  2956                           ;Menu.c: 50:   break;
  2957  00004C  0C01               	retlw	1
  2958  00004E                     l5275:
  2959                           
  2960                           ;Menu.c: 52:    if (LcLliure()) {
  2961  00004E  EC6D  F00E         	call	_LcLliure	;wreg free
  2962  000052  A0D8               	btfss	status,0,c
  2963  000054  0012               	return	
  2964                           
  2965                           ;Menu.c: 53:     LcGotoXY(0,1);
  2966  000056  DB93               	call	PL30	;call to abstracted procedure
  2967  000058  EC01  F00D         	call	_LcGotoXY
  2968                           
  2969                           ;Menu.c: 54:     LcNewString(registerText);
  2970  00005C  0E9C               	movlw	low _registerText
  2971  00005E  6E4D               	movwf	LcNewString@new_s^0,c
  2972  000060  0E1F               	movlw	high _registerText
  2973  000062  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2974  000064  EC67  F00E         	call	_LcNewString	;wreg free
  2975                           
  2976                           ;Menu.c: 55:     NovaTecla = -1;
  2977  000068  6869               	setf	_NovaTecla^0,c
  2978                           
  2979                           ;Menu.c: 56:     state = 2;
  2980  00006A  0E02               	movlw	2
  2981  00006C  6E2E               	movwf	menu@state^0,c
  2982                           
  2983                           ;Menu.c: 58:   break;
  2984                           
  2985                           ;Menu.c: 57:    }
  2986  00006E  0C02               	retlw	2
  2987  000070                     l5285:
  2988                           
  2989                           ;Menu.c: 60:    if (NovaTecla == 1) {
  2990  000070  0469               	decf	_NovaTecla^0,w,c
  2991  000072  E104               	bnz	l5291
  2992                           
  2993                           ;Menu.c: 61:     loginNOTRegister = 1;
  2994  000074  8E77               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2995  000076                     l5289:
  2996                           
  2997                           ;Menu.c: 62:     state = 3;
  2998  000076  0E03               	movlw	3
  2999  000078  6E2E               	movwf	menu@state^0,c
  3000                           
  3001                           ;Menu.c: 63:    }
  3002  00007A  0C03               	retlw	3
  3003  00007C                     l5291:
  3004  00007C  0E02               	movlw	2
  3005  00007E  1869               	xorwf	_NovaTecla^0,w,c
  3006  000080  A4D8               	btfss	status,2,c
  3007  000082  0012               	return	
  3008                           
  3009                           ;Menu.c: 65:     loginNOTRegister = 0;
  3010  000084  9E77               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3011  000086  D7F7               	goto	l5289
  3012  000088                     l511:
  3013                           
  3014                           ;Menu.c: 70:    NovaTecla = -1;
  3015  000088  6869               	setf	_NovaTecla^0,c
  3016                           
  3017                           ;Menu.c: 71:    novaLletra = -1;
  3018  00008A  6868               	setf	_novaLletra^0,c
  3019                           
  3020                           ;Menu.c: 72:    LcClear();
  3021  00008C  EC8F  F00D         	call	_LcClear	;wreg free
  3022                           
  3023                           ;Menu.c: 73:    LcNewString("USER: ");
  3024  000090  0EF8               	movlw	low STR_1
  3025  000092  6E4D               	movwf	LcNewString@new_s^0,c
  3026  000094  0E1F               	movlw	high STR_1
  3027  000096  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3028  000098  EC67  F00E         	call	_LcNewString	;wreg free
  3029                           
  3030                           ;Menu.c: 74:    state = 4;
  3031  00009C  0E04               	movlw	4
  3032  00009E  6E2E               	movwf	menu@state^0,c
  3033                           
  3034                           ;Menu.c: 75:   break;
  3035  0000A0  0C04               	retlw	4
  3036  0000A2                     l5303:
  3037                           
  3038                           ;Menu.c: 77:    if (LcLliure()) {
  3039  0000A2  EC6D  F00E         	call	_LcLliure	;wreg free
  3040  0000A6  A0D8               	btfss	status,0,c
  3041  0000A8  0012               	return	
  3042                           
  3043                           ;Menu.c: 78:     LcGotoXY(0,1);
  3044  0000AA  DB69               	call	PL30	;call to abstracted procedure
  3045  0000AC  EC01  F00D         	call	_LcGotoXY
  3046                           
  3047                           ;Menu.c: 79:     LcNewString("PSWD: ");
  3048  0000B0  0EF1               	movlw	low STR_2
  3049  0000B2  6E4D               	movwf	LcNewString@new_s^0,c
  3050  0000B4  0E1F               	movlw	high STR_2
  3051  0000B6  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3052  0000B8  EC67  F00E         	call	_LcNewString	;wreg free
  3053                           
  3054                           ;Menu.c: 80:     state = 5;
  3055  0000BC  0E05               	movlw	5
  3056  0000BE  6E2E               	movwf	menu@state^0,c
  3057  0000C0  0C05               	retlw	5
  3058  0000C2                     l5311:
  3059                           
  3060                           ;Menu.c: 84:    if (LcLliure()) {
  3061  0000C2  EC6D  F00E         	call	_LcLliure	;wreg free
  3062  0000C6  A0D8               	btfss	status,0,c
  3063  0000C8  0012               	return	
  3064                           
  3065                           ;Menu.c: 85:     LcGotoXY(6,0);
  3066  0000CA  0E00               	movlw	0
  3067  0000CC  6E52               	movwf	LcGotoXY@Row^0,c
  3068  0000CE  0E06               	movlw	6
  3069  0000D0  EC01  F00D         	call	_LcGotoXY
  3070                           
  3071                           ;Menu.c: 86:     SMSon();
  3072  0000D4  ECC7  F00E         	call	_SMSon	;wreg free
  3073                           
  3074                           ;Menu.c: 87:     tmp =0;
  3075  0000D8  6A33               	clrf	_tmp^0,c
  3076  0000DA                     l5319:
  3077                           
  3078                           ;Menu.c: 88:     state = 6;
  3079  0000DA  0E06               	movlw	6
  3080  0000DC  6E2E               	movwf	menu@state^0,c
  3081  0000DE  0C06               	retlw	6
  3082  0000E0                     l5321:
  3083                           
  3084                           ;Menu.c: 92:    if (novaLletra > 31 && NovaTecla != 10) {
  3085  0000E0  5068               	movf	_novaLletra^0,w,c
  3086  0000E2  0A80               	xorlw	128
  3087  0000E4  0F60               	addlw	-160
  3088  0000E6  E30E               	bnc	l5331
  3089  0000E8  0E0A               	movlw	10
  3090  0000EA  1869               	xorwf	_NovaTecla^0,w,c
  3091  0000EC  E00B               	bz	l5331
  3092                           
  3093                           ;Menu.c: 93:     LcPutChar(novaLletra);
  3094  0000EE  5068               	movf	_novaLletra^0,w,c
  3095  0000F0  EC2B  F00C         	call	_LcPutChar
  3096                           
  3097                           ;Menu.c: 94:     UenviaChar(novaLletra,tmp);
  3098  0000F4  C033  F04A         	movff	_tmp,UenviaChar@pos
  3099  0000F8  5068               	movf	_novaLletra^0,w,c
  3100  0000FA  EC26  F00E         	call	_UenviaChar
  3101  0000FE                     l5329:
  3102                           
  3103                           ;Menu.c: 95:     state = 7;
  3104  0000FE  0E07               	movlw	7
  3105  000100  6E2E               	movwf	menu@state^0,c
  3106                           
  3107                           ;Menu.c: 96:    }
  3108  000102  0C07               	retlw	7
  3109  000104                     l5331:
  3110  000104  0E0B               	movlw	11
  3111  000106  1869               	xorwf	_NovaTecla^0,w,c
  3112  000108  E0FA               	bz	l5329
  3113  00010A  0012               	return	
  3114  00010C                     l5335:
  3115                           
  3116                           ;Menu.c: 102:    if (tmp != 7 && NovaTecla != 11) {
  3117  00010C  0E07               	movlw	7
  3118  00010E  1833               	xorwf	_tmp^0,w,c
  3119  000110  E005               	bz	l5347
  3120  000112  0E0B               	movlw	11
  3121  000114  1869               	xorwf	_NovaTecla^0,w,c
  3122  000116  E002               	bz	l5347
  3123                           
  3124                           ;Menu.c: 103:     tmp++;
  3125                           
  3126                           ;Menu.c: 104:     NovaTecla = -1;
  3127                           
  3128                           ;Menu.c: 105:     novaLletra = -1;
  3129  000118  DB43               	call	PL84	;call to abstracted procedure
  3130  00011A  D7DF               	goto	l5319
  3131  00011C                     l5347:
  3132  00011C  0E07               	movlw	7
  3133  00011E  1833               	xorwf	_tmp^0,w,c
  3134  000120  E004               	bz	u5280
  3135  000122  0E0B               	movlw	11
  3136  000124  1869               	xorwf	_NovaTecla^0,w,c
  3137  000126  A4D8               	btfss	status,2,c
  3138  000128  0012               	return	
  3139  00012A                     u5280:
  3140                           
  3141                           ;Menu.c: 109:     LcGotoXY(6,1);
  3142  00012A  0E01               	movlw	1
  3143  00012C  6E52               	movwf	LcGotoXY@Row^0,c
  3144  00012E  0E06               	movlw	6
  3145  000130  EC01  F00D         	call	_LcGotoXY
  3146                           
  3147                           ;Menu.c: 110:     UenviaChar('\0',tmp);
  3148  000134  C033  F04A         	movff	_tmp,UenviaChar@pos
  3149  000138  0E00               	movlw	0
  3150  00013A  EC26  F00E         	call	_UenviaChar
  3151                           
  3152                           ;Menu.c: 111:     NovaTecla = -1;
  3153                           
  3154                           ;Menu.c: 112:     novaLletra = -1;
  3155                           
  3156                           ;Menu.c: 113:     tmp = 0;
  3157  00013E  DB2C               	call	PL82	;call to abstracted procedure
  3158  000140                     l5361:
  3159                           
  3160                           ;Menu.c: 114:     state = 8;
  3161  000140  0E08               	movlw	8
  3162  000142  6E2E               	movwf	menu@state^0,c
  3163  000144  0C08               	retlw	8
  3164  000146                     l5363:
  3165                           
  3166                           ;Menu.c: 118:    if (novaLletra > 31 && NovaTecla != 10) {
  3167  000146  5068               	movf	_novaLletra^0,w,c
  3168  000148  0A80               	xorlw	128
  3169  00014A  0F60               	addlw	-160
  3170  00014C  E30E               	bnc	l5373
  3171  00014E  0E0A               	movlw	10
  3172  000150  1869               	xorwf	_NovaTecla^0,w,c
  3173  000152  E00B               	bz	l5373
  3174                           
  3175                           ;Menu.c: 119:     LcPutChar(novaLletra);
  3176  000154  5068               	movf	_novaLletra^0,w,c
  3177  000156  EC2B  F00C         	call	_LcPutChar
  3178                           
  3179                           ;Menu.c: 120:     UenviaPas(novaLletra,tmp);
  3180  00015A  C033  F04A         	movff	_tmp,UenviaPas@pos
  3181  00015E  5068               	movf	_novaLletra^0,w,c
  3182  000160  EC1E  F00E         	call	_UenviaPas
  3183  000164                     l5371:
  3184                           
  3185                           ;Menu.c: 121:     state = 9;
  3186  000164  0E09               	movlw	9
  3187  000166  6E2E               	movwf	menu@state^0,c
  3188                           
  3189                           ;Menu.c: 122:    }
  3190  000168  0C09               	retlw	9
  3191  00016A                     l5373:
  3192  00016A  0E0B               	movlw	11
  3193  00016C  1869               	xorwf	_NovaTecla^0,w,c
  3194  00016E  E0FA               	bz	l5371
  3195  000170  0012               	return	
  3196  000172                     l5377:
  3197                           
  3198                           ;Menu.c: 128:    if (tmp != 7 && NovaTecla != 11) {
  3199  000172  0E07               	movlw	7
  3200  000174  1833               	xorwf	_tmp^0,w,c
  3201  000176  E005               	bz	l5389
  3202  000178  0E0B               	movlw	11
  3203  00017A  1869               	xorwf	_NovaTecla^0,w,c
  3204  00017C  E002               	bz	l5389
  3205                           
  3206                           ;Menu.c: 129:     tmp++;
  3207                           
  3208                           ;Menu.c: 130:     NovaTecla = -1;
  3209                           
  3210                           ;Menu.c: 131:     novaLletra = -1;
  3211  00017E  DB10               	call	PL84	;call to abstracted procedure
  3212  000180  D7DF               	goto	l5361
  3213  000182                     l5389:
  3214  000182  0E07               	movlw	7
  3215  000184  1833               	xorwf	_tmp^0,w,c
  3216  000186  E004               	bz	u5350
  3217  000188  0E0B               	movlw	11
  3218  00018A  1869               	xorwf	_NovaTecla^0,w,c
  3219  00018C  A4D8               	btfss	status,2,c
  3220  00018E  0012               	return	
  3221  000190                     u5350:
  3222                           
  3223                           ;Menu.c: 135:     UenviaPas('\0',tmp);
  3224  000190  C033  F04A         	movff	_tmp,UenviaPas@pos
  3225  000194  0E00               	movlw	0
  3226  000196  EC1E  F00E         	call	_UenviaPas
  3227                           
  3228                           ;Menu.c: 136:     NovaTecla = -1;
  3229                           
  3230                           ;Menu.c: 137:     novaLletra = -1;
  3231                           
  3232                           ;Menu.c: 138:     tmp = 0;
  3233  00019A  DAFE               	call	PL82	;call to abstracted procedure
  3234                           
  3235                           ;Menu.c: 139:     UcheckExists();
  3236  00019C  ECE0  F00E         	call	_UcheckExists	;wreg free
  3237                           
  3238                           ;Menu.c: 140:     SMSoff();
  3239  0001A0  ECCA  F00E         	call	_SMSoff	;wreg free
  3240                           
  3241                           ;Menu.c: 141:     state = 10;
  3242  0001A4  0E0A               	movlw	10
  3243  0001A6  6E2E               	movwf	menu@state^0,c
  3244  0001A8  0C0A               	retlw	10
  3245  0001AA                     l5407:
  3246                           
  3247                           ;Menu.c: 145:    if (!UcheckExistsNotFinished()) {
  3248  0001AA  EC55  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3249  0001AE  B0D8               	btfsc	status,0,c
  3250  0001B0  0012               	return	
  3251                           
  3252                           ;Menu.c: 146:     indexUsuari = UcheckExistsGetError();
  3253  0001B2  ECDE  F00E         	call	_UcheckExistsGetError	;wreg free
  3254  0001B6  6E30               	movwf	_indexUsuari^0,c
  3255                           
  3256                           ;Menu.c: 147:     state = 11;
  3257  0001B8  0E0B               	movlw	11
  3258  0001BA  6E2E               	movwf	menu@state^0,c
  3259  0001BC  0C0B               	retlw	11
  3260  0001BE                     l538:
  3261                           
  3262                           ;Menu.c: 151:    if (!loginNOTRegister && indexUsuari == -1) {
  3263  0001BE  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3264  0001C0  D006               	goto	l539
  3265  0001C2  2830               	incf	_indexUsuari^0,w,c
  3266  0001C4  E104               	bnz	l539
  3267                           
  3268                           ;Menu.c: 152:     URegister();
  3269  0001C6  ECE2  F00E         	call	_URegister	;wreg free
  3270  0001CA                     l5417:
  3271                           
  3272                           ;Menu.c: 153:     state = 0;
  3273  0001CA  6A2E               	clrf	menu@state^0,c
  3274                           
  3275                           ;Menu.c: 154:    }
  3276  0001CC  0012               	return	
  3277  0001CE                     l539:
  3278  0001CE  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3279  0001D0  BE30               	btfsc	_indexUsuari^0,7,c
  3280  0001D2  D003               	goto	l541
  3281  0001D4                     u5400:
  3282                           
  3283                           ;Menu.c: 156:     state = 12;
  3284  0001D4  0E0C               	movlw	12
  3285  0001D6  6E2E               	movwf	menu@state^0,c
  3286                           
  3287                           ;Menu.c: 157:    }
  3288  0001D8  0C0C               	retlw	12
  3289  0001DA                     l541:
  3290  0001DA  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3291  0001DC  D002               	goto	u5420
  3292  0001DE  2830               	incf	_indexUsuari^0,w,c
  3293  0001E0  E003               	bz	u5440
  3294  0001E2                     u5420:
  3295  0001E2  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3296  0001E4  BE30               	btfsc	_indexUsuari^0,7,c
  3297  0001E6  0012               	return	
  3298  0001E8                     u5440:
  3299                           
  3300                           ;Menu.c: 159:     state = 0;
  3301  0001E8  6A2E               	clrf	menu@state^0,c
  3302                           
  3303                           ;Menu.c: 160:                 LATBbits.LATB3 = 1;
  3304  0001EA  868A               	bsf	138,3,c	;volatile
  3305  0001EC  0012               	return	
  3306  0001EE                     l5427:
  3307                           
  3308                           ;Menu.c: 164:    LcClear();
  3309  0001EE  EC8F  F00D         	call	_LcClear	;wreg free
  3310                           
  3311                           ;Menu.c: 165:    SiFerMenu();
  3312  0001F2  ECE4  F00E         	call	_SiFerMenu	;wreg free
  3313                           
  3314                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3315  0001F6  5031               	movf	_menuDalt^0,w,c
  3316  0001F8  EC5B  F00E         	call	_GLCDMostraMenu
  3317                           
  3318                           ;Menu.c: 167:    novaDireccio = -1;
  3319  0001FC  6867               	setf	_novaDireccio^0,c
  3320                           
  3321                           ;Menu.c: 168:    NovaTecla = -1;
  3322  0001FE  6869               	setf	_NovaTecla^0,c
  3323                           
  3324                           ;Menu.c: 169:    state = 13;
  3325  000200  0E0D               	movlw	13
  3326  000202  6E2E               	movwf	menu@state^0,c
  3327                           
  3328                           ;Menu.c: 170:   break;
  3329  000204  0C0D               	retlw	13
  3330  000206                     l5439:
  3331                           
  3332                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3333  000206  0E08               	movlw	8
  3334  000208  1867               	xorwf	_novaDireccio^0,w,c
  3335  00020A  E105               	bnz	l5447
  3336                           
  3337                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3338  00020C  0E04               	movlw	4
  3339  00020E  6031               	cpfslt	_menuDalt^0,c
  3340  000210  D7E1               	goto	u5400
  3341  000212  2A31               	incf	_menuDalt^0,f,c
  3342  000214  D7DF               	goto	u5400
  3343  000216                     l5447:
  3344  000216  0E02               	movlw	2
  3345  000218  1867               	xorwf	_novaDireccio^0,w,c
  3346  00021A  E104               	bnz	l5455
  3347                           
  3348                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3349  00021C  5031               	movf	_menuDalt^0,w,c
  3350  00021E  E0DA               	bz	u5400
  3351  000220  0631               	decf	_menuDalt^0,f,c
  3352  000222  D7D8               	goto	u5400
  3353  000224                     l5455:
  3354  000224  0E0B               	movlw	11
  3355  000226  1869               	xorwf	_NovaTecla^0,w,c
  3356  000228  E110               	bnz	l5467
  3357  00022A  0E03               	movlw	3
  3358  00022C  1831               	xorwf	_menuDalt^0,w,c
  3359  00022E  E10D               	bnz	l5467
  3360                           
  3361                           ;Menu.c: 181:     NoFerMenu();
  3362  000230  ECE8  F00E         	call	_NoFerMenu	;wreg free
  3363                           
  3364                           ;Menu.c: 182:     LcClear();
  3365  000234  EC8F  F00D         	call	_LcClear	;wreg free
  3366                           
  3367                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3368  000238  0ED8               	movlw	low STR_3
  3369  00023A  6E4D               	movwf	LcNewString@new_s^0,c
  3370  00023C  0E1F               	movlw	high STR_3
  3371  00023E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3372  000240  EC67  F00E         	call	_LcNewString	;wreg free
  3373                           
  3374                           ;Menu.c: 184:     state = 14;
  3375  000244  0E0E               	movlw	14
  3376  000246  6E2E               	movwf	menu@state^0,c
  3377                           
  3378                           ;Menu.c: 185:    }
  3379  000248  0C0E               	retlw	14
  3380  00024A                     l5467:
  3381  00024A  0E0B               	movlw	11
  3382  00024C  1869               	xorwf	_NovaTecla^0,w,c
  3383  00024E  E110               	bnz	l5481
  3384  000250  0431               	decf	_menuDalt^0,w,c
  3385  000252  E10E               	bnz	l5481
  3386                           
  3387                           ;Menu.c: 187:     LcClear();
  3388  000254  EC8F  F00D         	call	_LcClear	;wreg free
  3389                           
  3390                           ;Menu.c: 188:     NoFerMenu();
  3391  000258  ECE8  F00E         	call	_NoFerMenu	;wreg free
  3392                           
  3393                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3394  00025C  0EBF               	movlw	low STR_4
  3395  00025E  6E4D               	movwf	LcNewString@new_s^0,c
  3396  000260  0E1F               	movlw	high STR_4
  3397  000262  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3398  000264  EC67  F00E         	call	_LcNewString	;wreg free
  3399                           
  3400                           ;Menu.c: 190:     NovaTecla = -1;
  3401  000268  6869               	setf	_NovaTecla^0,c
  3402                           
  3403                           ;Menu.c: 191:     state = 16;
  3404  00026A  0E10               	movlw	16
  3405  00026C  6E2E               	movwf	menu@state^0,c
  3406                           
  3407                           ;Menu.c: 192:    }
  3408  00026E  0C10               	retlw	16
  3409  000270                     l5481:
  3410  000270  5031               	movf	_menuDalt^0,w,c
  3411  000272  E114               	bnz	l5497
  3412  000274  0E0B               	movlw	11
  3413  000276  1869               	xorwf	_NovaTecla^0,w,c
  3414  000278  E111               	bnz	l5497
  3415                           
  3416                           ;Menu.c: 194:     NoFerMenu();
  3417  00027A  ECE8  F00E         	call	_NoFerMenu	;wreg free
  3418                           
  3419                           ;Menu.c: 195:     NovaTecla = -1;
  3420  00027E  6869               	setf	_NovaTecla^0,c
  3421                           
  3422                           ;Menu.c: 196:     LcClear();
  3423  000280  EC8F  F00D         	call	_LcClear	;wreg free
  3424                           
  3425                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3426  000284  0EAF               	movlw	low STR_5
  3427  000286  6E4D               	movwf	LcNewString@new_s^0,c
  3428  000288  0E1F               	movlw	high STR_5
  3429  00028A  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3430  00028C  EC67  F00E         	call	_LcNewString	;wreg free
  3431                           
  3432                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3433  000290  5030               	movf	_indexUsuari^0,w,c
  3434  000292  EC90  F00E         	call	_JJuguem
  3435  000296                     l5495:
  3436                           
  3437                           ;Menu.c: 199:     state = 21;
  3438  000296  0E15               	movlw	21
  3439  000298  6E2E               	movwf	menu@state^0,c
  3440                           
  3441                           ;Menu.c: 200:    }
  3442  00029A  0C15               	retlw	21
  3443  00029C                     l5497:
  3444  00029C  0E0B               	movlw	11
  3445  00029E  1869               	xorwf	_NovaTecla^0,w,c
  3446  0002A0  E10E               	bnz	l5513
  3447  0002A2  0E04               	movlw	4
  3448  0002A4  1831               	xorwf	_menuDalt^0,w,c
  3449  0002A6  E10B               	bnz	l5513
  3450                           
  3451                           ;Menu.c: 202:     NoFerMenu();
  3452  0002A8  ECE8  F00E         	call	_NoFerMenu	;wreg free
  3453                           
  3454                           ;Menu.c: 203:     LcClear();
  3455  0002AC  EC8F  F00D         	call	_LcClear	;wreg free
  3456                           
  3457                           ;Menu.c: 204:     menuDalt = 0;
  3458  0002B0  6A31               	clrf	_menuDalt^0,c
  3459                           
  3460                           ;Menu.c: 205:     NovaTecla = -1;
  3461  0002B2  6869               	setf	_NovaTecla^0,c
  3462                           
  3463                           ;Menu.c: 206:     calculateShowUsers();
  3464  0002B4  ECDA  F00E         	call	_calculateShowUsers	;wreg free
  3465                           
  3466                           ;Menu.c: 207:     state = 30;
  3467  0002B8  0E1E               	movlw	30
  3468  0002BA  6E2E               	movwf	menu@state^0,c
  3469                           
  3470                           ;Menu.c: 208:    }
  3471  0002BC  0C1E               	retlw	30
  3472  0002BE                     l5513:
  3473  0002BE  0E0B               	movlw	11
  3474  0002C0  1869               	xorwf	_NovaTecla^0,w,c
  3475  0002C2  A4D8               	btfss	status,2,c
  3476  0002C4  0012               	return	
  3477  0002C6  0E02               	movlw	2
  3478  0002C8  1831               	xorwf	_menuDalt^0,w,c
  3479  0002CA  A4D8               	btfss	status,2,c
  3480  0002CC  0012               	return	
  3481  0002CE  0E00               	movlw	0
  3482  0002D0  EC0B  F00E         	call	_UgetTop5
  3483  0002D4  0AFF               	xorlw	255
  3484  0002D6  B4D8               	btfsc	status,2,c
  3485  0002D8  0012               	return	
  3486                           
  3487                           ;Menu.c: 210:     NoFerMenu();
  3488  0002DA  ECE8  F00E         	call	_NoFerMenu	;wreg free
  3489                           
  3490                           ;Menu.c: 211:     LcClear();
  3491  0002DE  EC8F  F00D         	call	_LcClear	;wreg free
  3492                           
  3493                           ;Menu.c: 212:     menuDalt = 0;
  3494  0002E2  6A31               	clrf	_menuDalt^0,c
  3495                           
  3496                           ;Menu.c: 213:     NovaTecla = -1;
  3497  0002E4  6869               	setf	_NovaTecla^0,c
  3498  0002E6                     l5527:
  3499                           
  3500                           ;Menu.c: 214:     state = 31;
  3501  0002E6  0E1F               	movlw	31
  3502  0002E8  6E2E               	movwf	menu@state^0,c
  3503  0002EA  0C1F               	retlw	31
  3504  0002EC                     l5529:
  3505                           
  3506                           ;Menu.c: 218:    if (LcLliure()) {
  3507  0002EC  EC6D  F00E         	call	_LcLliure	;wreg free
  3508  0002F0  A0D8               	btfss	status,0,c
  3509  0002F2  0012               	return	
  3510                           
  3511                           ;Menu.c: 219:     LcNewString(UgetUserName(indexUsuari));
  3512  0002F4  5030               	movf	_indexUsuari^0,w,c
  3513  0002F6  EC01  F00E         	call	_UgetUserName
  3514  0002FA  DA44               	call	PL42	;call to abstracted procedure
  3515  0002FC  EC67  F00E         	call	_LcNewString	;wreg free
  3516                           
  3517                           ;Menu.c: 220:     TiResetTics(timerMenu);
  3518  000300  5032               	movf	_timerMenu^0,w,c
  3519  000302  ECDC  F00D         	call	_TiResetTics
  3520                           
  3521                           ;Menu.c: 221:     state = 15;
  3522  000306  0E0F               	movlw	15
  3523  000308  6E2E               	movwf	menu@state^0,c
  3524  00030A  0C0F               	retlw	15
  3525  00030C                     l5537:
  3526                           
  3527                           ;Menu.c: 225:    if (TiGetTics(timerMenu) > 2410) {
  3528  00030C  5032               	movf	_timerMenu^0,w,c
  3529  00030E  EC58  F00D         	call	_TiGetTics
  3530  000312  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3531  000314  0012               	return	
  3532  000316  0E6B               	movlw	107
  3533  000318  5C4A               	subwf	?_TiGetTics^0,w,c
  3534  00031A  0E09               	movlw	9
  3535  00031C  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3536  00031E  E301 D754          	bc	l5417
  3537  000322  0012               	return	
  3538  000324                     l5541:
  3539                           
  3540                           ;Menu.c: 230:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3541  000324  EC6D  F00E         	call	_LcLliure	;wreg free
  3542  000328  E347               	bnc	l5607
  3543  00032A  BE69               	btfsc	_NovaTecla^0,7,c
  3544  00032C  D045               	goto	l5607
  3545  00032E  5069               	movf	_NovaTecla^0,w,c
  3546  000330  0A80               	xorlw	128
  3547  000332  0F76               	addlw	-138
  3548  000334  E241               	bc	l5607
  3549                           
  3550                           ;Menu.c: 231:     LcGotoXY(0,1);
  3551  000336  DA23               	call	PL30	;call to abstracted procedure
  3552  000338  EC01  F00D         	call	_LcGotoXY
  3553                           
  3554                           ;Menu.c: 232:     horaTmp[0] = NovaTecla+48;
  3555  00033C  5069               	movf	_NovaTecla^0,w,c
  3556  00033E  0F30               	addlw	48
  3557  000340  6E41               	movwf	_horaTmp^0,c
  3558                           
  3559                           ;Menu.c: 233:     LcPutChar(horaTmp[0]);
  3560  000342  5041               	movf	_horaTmp^0,w,c
  3561  000344  EC2B  F00C         	call	_LcPutChar
  3562                           
  3563                           ;Menu.c: 234:     NovaTecla = -1;
  3564  000348  6869               	setf	_NovaTecla^0,c
  3565                           
  3566                           ;Menu.c: 235:     state = 17;
  3567  00034A  0E11               	movlw	17
  3568  00034C                     L1:
  3569  00034C  6E2E               	movwf	menu@state^0,c
  3570                           
  3571                           ;Menu.c: 236:    }
  3572  00034E  0012               	return	
  3573  000350                     L2:
  3574  000350  1869               	xorwf	_NovaTecla^0,w,c
  3575  000352  E101 D73F          	bz	u5400
  3576  000356  0012               	return	
  3577  000358                     l5561:
  3578                           
  3579                           ;Menu.c: 242:    if (NovaTecla > -1 && NovaTecla < 10) {
  3580  000358  BE69               	btfsc	_NovaTecla^0,7,c
  3581  00035A  D02E               	goto	l5607
  3582  00035C  5069               	movf	_NovaTecla^0,w,c
  3583  00035E  0A80               	xorlw	128
  3584  000360  0F76               	addlw	-138
  3585  000362  E22A               	bc	l5607
  3586                           
  3587                           ;Menu.c: 243:     horaTmp[1] = NovaTecla+48;
  3588  000364  5069               	movf	_NovaTecla^0,w,c
  3589  000366  0F30               	addlw	48
  3590  000368  6E42               	movwf	(_horaTmp+1)^0,c
  3591                           
  3592                           ;Menu.c: 244:     LcPutChar(horaTmp[1]);
  3593  00036A  5042               	movf	(_horaTmp+1)^0,w,c
  3594  00036C  EC2B  F00C         	call	_LcPutChar
  3595                           
  3596                           ;Menu.c: 245:     NovaTecla = -1;
  3597  000370  6869               	setf	_NovaTecla^0,c
  3598                           
  3599                           ;Menu.c: 246:     LcPutChar(':');
  3600  000372  0E3A               	movlw	58
  3601  000374  EC2B  F00C         	call	_LcPutChar
  3602                           
  3603                           ;Menu.c: 247:     state = 18;
  3604  000378  0E12               	movlw	18
  3605  00037A  D7E8               	goto	L1
  3606  00037C                     l5579:
  3607                           
  3608                           ;Menu.c: 254:    if (NovaTecla > -1 && NovaTecla < 10) {
  3609  00037C  BE69               	btfsc	_NovaTecla^0,7,c
  3610  00037E  D01C               	goto	l5607
  3611  000380  5069               	movf	_NovaTecla^0,w,c
  3612  000382  0A80               	xorlw	128
  3613  000384  0F76               	addlw	-138
  3614  000386  E218               	bc	l5607
  3615                           
  3616                           ;Menu.c: 255:     horaTmp[2] = NovaTecla+48;
  3617  000388  5069               	movf	_NovaTecla^0,w,c
  3618  00038A  0F30               	addlw	48
  3619  00038C  6E43               	movwf	(_horaTmp+2)^0,c
  3620                           
  3621                           ;Menu.c: 256:     LcPutChar(horaTmp[2]);
  3622  00038E  5043               	movf	(_horaTmp+2)^0,w,c
  3623  000390  EC2B  F00C         	call	_LcPutChar
  3624                           
  3625                           ;Menu.c: 257:     NovaTecla = -1;
  3626  000394  6869               	setf	_NovaTecla^0,c
  3627                           
  3628                           ;Menu.c: 258:     state = 19;
  3629  000396  0E13               	movlw	19
  3630  000398  D7D9               	goto	L1
  3631  00039A                     l5595:
  3632                           
  3633                           ;Menu.c: 265:    if (NovaTecla > -1 && NovaTecla < 10) {
  3634  00039A  BE69               	btfsc	_NovaTecla^0,7,c
  3635  00039C  D00D               	goto	l5607
  3636  00039E  5069               	movf	_NovaTecla^0,w,c
  3637  0003A0  0A80               	xorlw	128
  3638  0003A2  0F76               	addlw	-138
  3639  0003A4  E209               	bc	l5607
  3640                           
  3641                           ;Menu.c: 266:     horaTmp[3] = NovaTecla+48;
  3642  0003A6  5069               	movf	_NovaTecla^0,w,c
  3643  0003A8  0F30               	addlw	48
  3644  0003AA  6E44               	movwf	(_horaTmp+3)^0,c
  3645                           
  3646                           ;Menu.c: 267:     LcPutChar(horaTmp[3]);
  3647  0003AC  5044               	movf	(_horaTmp+3)^0,w,c
  3648  0003AE  EC2B  F00C         	call	_LcPutChar
  3649                           
  3650                           ;Menu.c: 268:     NovaTecla = -1;
  3651  0003B2  6869               	setf	_NovaTecla^0,c
  3652                           
  3653                           ;Menu.c: 269:     state = 20;
  3654  0003B4  0E14               	movlw	20
  3655  0003B6  D7CA               	goto	L1
  3656  0003B8                     l5607:
  3657  0003B8  0E0A               	movlw	10
  3658  0003BA  D7CA               	goto	L2
  3659  0003BC                     l5611:
  3660                           
  3661                           ;Menu.c: 276:    if (NovaTecla == 11) {
  3662  0003BC  0E0B               	movlw	11
  3663  0003BE  1869               	xorwf	_NovaTecla^0,w,c
  3664  0003C0  E1FB               	bnz	l5607
  3665                           
  3666                           ;Menu.c: 277:     HActualitzaHora(horaTmp);
  3667  0003C2  0E41               	movlw	low _horaTmp
  3668  0003C4  6E4A               	movwf	HActualitzaHora@nova^0,c
  3669  0003C6  ECCD  F00C         	call	_HActualitzaHora	;wreg free
  3670                           
  3671                           ;Menu.c: 278:     NovaTecla = -1;
  3672  0003CA  6869               	setf	_NovaTecla^0,c
  3673  0003CC  D703               	goto	u5400
  3674  0003CE                     l5623:
  3675                           
  3676                           ;Menu.c: 286:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3677  0003CE  0E0A               	movlw	10
  3678  0003D0  1869               	xorwf	_NovaTecla^0,w,c
  3679  0003D2  E103               	bnz	u5780
  3680  0003D4  EC6D  F00E         	call	_LcLliure	;wreg free
  3681  0003D8  E203               	bc	u5790
  3682  0003DA                     u5780:
  3683  0003DA  EC49  F00E         	call	_checkHoraAcabat	;wreg free
  3684  0003DE  E307               	bnc	l5635
  3685  0003E0                     u5790:
  3686                           
  3687                           ;Menu.c: 287:     LcClear();
  3688  0003E0  EC8F  F00D         	call	_LcClear	;wreg free
  3689                           
  3690                           ;Menu.c: 288:     JendGame();
  3691  0003E4  ECEA  F00E         	call	_JendGame	;wreg free
  3692                           
  3693                           ;Menu.c: 289:     state = 22;
  3694  0003E8  0E16               	movlw	22
  3695  0003EA  6E2E               	movwf	menu@state^0,c
  3696                           
  3697                           ;Menu.c: 290:    }
  3698  0003EC  0C16               	retlw	22
  3699  0003EE                     l5635:
  3700  0003EE  5069               	movf	_NovaTecla^0,w,c
  3701  0003F0  0A80               	xorlw	128
  3702  0003F2  0F7F               	addlw	-129
  3703  0003F4  E309               	bnc	l5645
  3704  0003F6  5069               	movf	_NovaTecla^0,w,c
  3705  0003F8  0A80               	xorlw	128
  3706  0003FA  0F76               	addlw	-138
  3707  0003FC  E205               	bc	l5645
  3708                           
  3709                           ;Menu.c: 292:     JnovaTecla(NovaTecla);
  3710  0003FE  5069               	movf	_NovaTecla^0,w,c
  3711  000400  EC88  F00E         	call	_JnovaTecla
  3712                           
  3713                           ;Menu.c: 293:     NovaTecla = -1;
  3714  000404  6869               	setf	_NovaTecla^0,c
  3715  000406  D747               	goto	l5495
  3716  000408                     l5645:
  3717  000408  BE67               	btfsc	_novaDireccio^0,7,c
  3718  00040A  0012               	return	
  3719                           
  3720                           ;Menu.c: 297:     JnovaDireccio(novaDireccio);
  3721  00040C  5067               	movf	_novaDireccio^0,w,c
  3722  00040E  EC8C  F00E         	call	_JnovaDireccio
  3723                           
  3724                           ;Menu.c: 298:     novaDireccio = -1;
  3725  000412  6867               	setf	_novaDireccio^0,c
  3726  000414  D740               	goto	l5495
  3727  000416                     l5653:
  3728                           
  3729                           ;Menu.c: 303:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3730  000416  ECE6  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3731  00041A  0900               	iorlw	0
  3732  00041C  B4D8               	btfsc	status,2,c
  3733  00041E  0012               	return	
  3734  000420  0E0B               	movlw	11
  3735  000422  D796               	goto	L2
  3736  000424                     l5659:
  3737                           
  3738                           ;Menu.c: 308:    if (LcLliure()) {
  3739  000424  EC6D  F00E         	call	_LcLliure	;wreg free
  3740  000428  A0D8               	btfss	status,0,c
  3741  00042A  0012               	return	
  3742                           
  3743                           ;Menu.c: 309:     LcGotoXY(0,0);
  3744  00042C  0E00               	movlw	0
  3745  00042E  6E52               	movwf	LcGotoXY@Row^0,c
  3746  000430  EC01  F00D         	call	_LcGotoXY
  3747                           
  3748                           ;Menu.c: 310:     LcNewString(getArrayShowUsers(menuDalt));
  3749  000434  5031               	movf	_menuDalt^0,w,c
  3750  000436  ECC0  F00D         	call	_getArrayShowUsers
  3751  00043A  D99C               	call	PL26	;call to abstracted procedure
  3752  00043C  EC67  F00E         	call	_LcNewString	;wreg free
  3753                           
  3754                           ;Menu.c: 311:     menuDalt++;
  3755  000440  2A31               	incf	_menuDalt^0,f,c
  3756                           
  3757                           ;Menu.c: 312:     state = 24;
  3758  000442  0E18               	movlw	24
  3759  000444  6E2E               	movwf	menu@state^0,c
  3760  000446  0C18               	retlw	24
  3761  000448                     l5667:
  3762                           
  3763                           ;Menu.c: 316:    if (LcLliure()) {
  3764  000448  EC6D  F00E         	call	_LcLliure	;wreg free
  3765  00044C  A0D8               	btfss	status,0,c
  3766  00044E  0012               	return	
  3767                           
  3768                           ;Menu.c: 317:     if (menuDalt < UgetNumUsuaris()){
  3769  000450  ECDC  F00E         	call	_UgetNumUsuaris	;wreg free
  3770  000454  6031               	cpfslt	_menuDalt^0,c
  3771  000456  D00B               	goto	l605
  3772                           
  3773                           ;Menu.c: 318:       LcGotoXY(0,1);
  3774  000458  D992               	call	PL30	;call to abstracted procedure
  3775  00045A  EC01  F00D         	call	_LcGotoXY
  3776                           
  3777                           ;Menu.c: 319:       LcNewString(getArrayShowUsers(menuDalt));
  3778  00045E  5031               	movf	_menuDalt^0,w,c
  3779  000460  ECC0  F00D         	call	_getArrayShowUsers
  3780  000464  D987               	call	PL26	;call to abstracted procedure
  3781  000466  EC67  F00E         	call	_LcNewString	;wreg free
  3782                           
  3783                           ;Menu.c: 320:       menuDalt++;
  3784  00046A  2A31               	incf	_menuDalt^0,f,c
  3785                           
  3786                           ;Menu.c: 321:     } else {
  3787  00046C  D001               	goto	l5675
  3788  00046E                     l605:
  3789                           
  3790                           ;Menu.c: 322:       menuDalt = 0;
  3791  00046E  6A31               	clrf	_menuDalt^0,c
  3792  000470                     l5675:
  3793                           
  3794                           ;Menu.c: 324:     state = 25;
  3795  000470  0E19               	movlw	25
  3796  000472  6E2E               	movwf	menu@state^0,c
  3797  000474  0C19               	retlw	25
  3798  000476                     l5677:
  3799                           
  3800                           ;Menu.c: 328:    if (LcLliure()) {
  3801  000476  EC6D  F00E         	call	_LcLliure	;wreg free
  3802  00047A  A0D8               	btfss	status,0,c
  3803  00047C  0012               	return	
  3804                           
  3805                           ;Menu.c: 329:     if (menuDalt == UgetNumUsuaris()){
  3806  00047E  ECDC  F00E         	call	_UgetNumUsuaris	;wreg free
  3807  000482  1831               	xorwf	_menuDalt^0,w,c
  3808  000484  E101               	bnz	l5683
  3809                           
  3810                           ;Menu.c: 330:       menuDalt = 0;
  3811  000486  6A31               	clrf	_menuDalt^0,c
  3812  000488                     l5683:
  3813                           
  3814                           ;Menu.c: 332:     LcGotoXY(16,0);
  3815  000488  D992               	call	PL88	;call to abstracted procedure
  3816  00048A  EC01  F00D         	call	_LcGotoXY
  3817                           
  3818                           ;Menu.c: 333:     LcNewString(getArrayShowUsers(menuDalt));
  3819  00048E  5031               	movf	_menuDalt^0,w,c
  3820  000490  ECC0  F00D         	call	_getArrayShowUsers
  3821  000494  D96F               	call	PL26	;call to abstracted procedure
  3822  000496  EC67  F00E         	call	_LcNewString	;wreg free
  3823                           
  3824                           ;Menu.c: 334:     state = 26;
  3825  00049A  0E1A               	movlw	26
  3826  00049C  6E2E               	movwf	menu@state^0,c
  3827  00049E  0C1A               	retlw	26
  3828  0004A0                     l5687:
  3829                           
  3830                           ;Menu.c: 338:    if (LcLliure()) {
  3831  0004A0  EC6D  F00E         	call	_LcLliure	;wreg free
  3832  0004A4  A0D8               	btfss	status,0,c
  3833  0004A6  0012               	return	
  3834                           
  3835                           ;Menu.c: 339:     if (menuDalt+1 < UgetNumUsuaris()){
  3836  0004A8  ECDC  F00E         	call	_UgetNumUsuaris	;wreg free
  3837  0004AC  6E59               	movwf	??_menu^0,c
  3838  0004AE  6A5A               	clrf	(??_menu+1)^0,c
  3839  0004B0  5031               	movf	_menuDalt^0,w,c
  3840  0004B2  6E5B               	movwf	(??_menu+2)^0,c
  3841  0004B4  6A5C               	clrf	(??_menu+3)^0,c
  3842  0004B6  2A5B               	incf	(??_menu+2)^0,f,c
  3843  0004B8  0E00               	movlw	0
  3844  0004BA  225C               	addwfc	(??_menu+3)^0,f,c
  3845  0004BC  5059               	movf	??_menu^0,w,c
  3846  0004BE  5C5B               	subwf	(??_menu+2)^0,w,c
  3847  0004C0  505C               	movf	(??_menu+3)^0,w,c
  3848  0004C2  0A80               	xorlw	128
  3849  0004C4  6E5D               	movwf	(??_menu+4)^0,c
  3850  0004C6  505A               	movf	(??_menu+1)^0,w,c
  3851  0004C8  0A80               	xorlw	128
  3852  0004CA  585D               	subwfb	(??_menu+4)^0,w,c
  3853  0004CC  E209               	bc	l5693
  3854                           
  3855                           ;Menu.c: 340:       LcGotoXY(16,1);
  3856  0004CE  D96C               	call	PL86	;call to abstracted procedure
  3857  0004D0  EC01  F00D         	call	_LcGotoXY
  3858                           
  3859                           ;Menu.c: 341:       LcNewString(getArrayShowUsers(menuDalt+1));
  3860  0004D4  2831               	incf	_menuDalt^0,w,c
  3861  0004D6  ECC0  F00D         	call	_getArrayShowUsers
  3862  0004DA  D94C               	call	PL26	;call to abstracted procedure
  3863  0004DC  EC67  F00E         	call	_LcNewString	;wreg free
  3864  0004E0                     l5693:
  3865                           
  3866                           ;Menu.c: 343:     state = 27;
  3867  0004E0  0E1B               	movlw	27
  3868  0004E2  6E2E               	movwf	menu@state^0,c
  3869  0004E4  0C1B               	retlw	27
  3870  0004E6                     l5695:
  3871                           
  3872                           ;Menu.c: 347:    if (TiGetTics(timerMenu) > 1205) {
  3873  0004E6  5032               	movf	_timerMenu^0,w,c
  3874  0004E8  EC58  F00D         	call	_TiGetTics
  3875  0004EC  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3876  0004EE  D008               	goto	l5699
  3877  0004F0  0EB6               	movlw	182
  3878  0004F2  5C4A               	subwf	?_TiGetTics^0,w,c
  3879  0004F4  0E04               	movlw	4
  3880  0004F6  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3881  0004F8  E303               	bnc	l5699
  3882                           
  3883                           ;Menu.c: 348:     state = 29;
  3884  0004FA  0E1D               	movlw	29
  3885  0004FC  6E2E               	movwf	menu@state^0,c
  3886                           
  3887                           ;Menu.c: 349:    }
  3888  0004FE  0C1D               	retlw	29
  3889  000500                     l5699:
  3890  000500  0E0B               	movlw	11
  3891  000502  1869               	xorwf	_NovaTecla^0,w,c
  3892  000504  A4D8               	btfss	status,2,c
  3893  000506  0012               	return	
  3894  000508                     u5930:
  3895                           
  3896                           ;Menu.c: 351:     menuDalt = 0;
  3897  000508  6A31               	clrf	_menuDalt^0,c
  3898  00050A  D664               	goto	u5400
  3899  00050C                     l5705:
  3900                           
  3901                           ;Menu.c: 356:    if (pos > 15) {
  3902  00050C  0E0F               	movlw	15
  3903  00050E  642F               	cpfsgt	_pos^0,c
  3904  000510  D005               	goto	l5711
  3905                           
  3906                           ;Menu.c: 357:     LcClear();
  3907  000512  EC8F  F00D         	call	_LcClear	;wreg free
  3908  000516                     l5709:
  3909                           
  3910                           ;Menu.c: 358:     state = 23;
  3911  000516  0E17               	movlw	23
  3912  000518  6E2E               	movwf	menu@state^0,c
  3913                           
  3914                           ;Menu.c: 359:    }
  3915  00051A  0C17               	retlw	23
  3916  00051C                     l5711:
  3917  00051C  0E10               	movlw	16
  3918  00051E  602F               	cpfslt	_pos^0,c
  3919  000520  0C10               	retlw	16
  3920                           
  3921                           ;Menu.c: 361:     TiResetTics(timerMenu);
  3922  000522  5032               	movf	_timerMenu^0,w,c
  3923  000524  ECDC  F00D         	call	_TiResetTics
  3924                           
  3925                           ;Menu.c: 362:     LcScroll();
  3926  000528  ECCD  F00E         	call	_LcScroll	;wreg free
  3927                           
  3928                           ;Menu.c: 363:     pos++;
  3929  00052C  2A2F               	incf	_pos^0,f,c
  3930  00052E                     l5719:
  3931                           
  3932                           ;Menu.c: 364:     state = 28;
  3933  00052E  0E1C               	movlw	28
  3934  000530  6E2E               	movwf	menu@state^0,c
  3935  000532  0C1C               	retlw	28
  3936  000534                     l5721:
  3937                           
  3938                           ;Menu.c: 368:    if (LcLliure()) {
  3939  000534  EC6D  F00E         	call	_LcLliure	;wreg free
  3940  000538  A0D8               	btfss	status,0,c
  3941  00053A  0012               	return	
  3942                           
  3943                           ;Menu.c: 369:     TiResetTics(timerMenu);
  3944  00053C  5032               	movf	_timerMenu^0,w,c
  3945  00053E  ECDC  F00D         	call	_TiResetTics
  3946                           
  3947                           ;Menu.c: 370:     pos = 0;
  3948  000542  6A2F               	clrf	_pos^0,c
  3949  000544  D7F4               	goto	l5719
  3950  000546                     l5729:
  3951                           
  3952                           ;Menu.c: 375:    if (UshowUsersCalculat()) {
  3953  000546  EC4F  F00E         	call	_UshowUsersCalculat	;wreg free
  3954  00054A  E2E5               	bc	l5709
  3955  00054C  0012               	return	
  3956  00054E                     l5733:
  3957                           
  3958                           ;Menu.c: 380:    if (LcLliure()) {
  3959  00054E  EC6D  F00E         	call	_LcLliure	;wreg free
  3960  000552  A0D8               	btfss	status,0,c
  3961  000554  0012               	return	
  3962                           
  3963                           ;Menu.c: 381:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  3964  000556  5031               	movf	_menuDalt^0,w,c
  3965  000558  EC0B  F00E         	call	_UgetTop5
  3966  00055C  EC01  F00E         	call	_UgetUserName
  3967  000560  D911               	call	PL42	;call to abstracted procedure
  3968  000562  EC67  F00E         	call	_LcNewString	;wreg free
  3969                           
  3970                           ;Menu.c: 382:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  3971  000566  5031               	movf	_menuDalt^0,w,c
  3972  000568  EC0B  F00E         	call	_UgetTop5
  3973  00056C  EC36  F00E         	call	_UgetScore
  3974  000570  EC61  F00E         	call	_CToAConverteix
  3975                           
  3976                           ;Menu.c: 383:     state = 32;
  3977  000574  0E20               	movlw	32
  3978  000576  6E2E               	movwf	menu@state^0,c
  3979  000578  0C20               	retlw	32
  3980  00057A                     l5739:
  3981                           
  3982                           ;Menu.c: 387:    if (CToAHaAcabat() == 250 && LcLliure()) {
  3983  00057A  ECEE  F00E         	call	_CToAHaAcabat	;wreg free
  3984  00057E  0AFA               	xorlw	250
  3985  000580  A4D8               	btfss	status,2,c
  3986  000582  0012               	return	
  3987  000584  EC6D  F00E         	call	_LcLliure	;wreg free
  3988  000588  A0D8               	btfss	status,0,c
  3989  00058A  0012               	return	
  3990                           
  3991                           ;Menu.c: 388:     LcPutChar(':');
  3992  00058C  0E3A               	movlw	58
  3993  00058E  EC2B  F00C         	call	_LcPutChar
  3994                           
  3995                           ;Menu.c: 389:     LcGotoXY(0,1);
  3996  000592  D8F5               	call	PL30	;call to abstracted procedure
  3997  000594  EC01  F00D         	call	_LcGotoXY
  3998                           
  3999                           ;Menu.c: 390:     LcNewString(CToAobtenir());
  4000  000598  ECEC  F00E         	call	_CToAobtenir	;wreg free
  4001  00059C  D8F8               	call	PL50	;call to abstracted procedure
  4002  00059E  EC67  F00E         	call	_LcNewString	;wreg free
  4003                           
  4004                           ;Menu.c: 391:     menuDalt++;
  4005  0005A2  2A31               	incf	_menuDalt^0,f,c
  4006                           
  4007                           ;Menu.c: 392:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4008  0005A4  0E05               	movlw	5
  4009  0005A6  1831               	xorwf	_menuDalt^0,w,c
  4010  0005A8  E005               	bz	u6020
  4011  0005AA  5031               	movf	_menuDalt^0,w,c
  4012  0005AC  EC0B  F00E         	call	_UgetTop5
  4013  0005B0  0AFF               	xorlw	255
  4014  0005B2  E101               	bnz	l5753
  4015  0005B4                     u6020:
  4016  0005B4  6A31               	clrf	_menuDalt^0,c
  4017  0005B6                     l5753:
  4018                           
  4019                           ;Menu.c: 393:     state = 34;
  4020  0005B6  0E22               	movlw	34
  4021  0005B8  6E2E               	movwf	menu@state^0,c
  4022  0005BA  0C22               	retlw	34
  4023  0005BC                     l5755:
  4024                           
  4025                           ;Menu.c: 397:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4026  0005BC  5031               	movf	_menuDalt^0,w,c
  4027  0005BE  EC0B  F00E         	call	_UgetTop5
  4028  0005C2  0AFF               	xorlw	255
  4029  0005C4  E104               	bnz	u6040
  4030  0005C6  0E05               	movlw	5
  4031  0005C8  1831               	xorwf	_menuDalt^0,w,c
  4032  0005CA  B4D8               	btfsc	status,2,c
  4033  0005CC  0012               	return	
  4034  0005CE                     u6040:
  4035  0005CE  EC6D  F00E         	call	_LcLliure	;wreg free
  4036  0005D2  A0D8               	btfss	status,0,c
  4037  0005D4  0012               	return	
  4038                           
  4039                           ;Menu.c: 398:     LcGotoXY(16,0);
  4040  0005D6  D8EB               	call	PL88	;call to abstracted procedure
  4041  0005D8  EC01  F00D         	call	_LcGotoXY
  4042                           
  4043                           ;Menu.c: 399:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4044  0005DC  5031               	movf	_menuDalt^0,w,c
  4045  0005DE  EC0B  F00E         	call	_UgetTop5
  4046  0005E2  EC01  F00E         	call	_UgetUserName
  4047  0005E6  D8CE               	call	PL42	;call to abstracted procedure
  4048  0005E8  EC67  F00E         	call	_LcNewString	;wreg free
  4049                           
  4050                           ;Menu.c: 400:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4051  0005EC  5031               	movf	_menuDalt^0,w,c
  4052  0005EE  EC0B  F00E         	call	_UgetTop5
  4053  0005F2  EC36  F00E         	call	_UgetScore
  4054  0005F6  EC61  F00E         	call	_CToAConverteix
  4055                           
  4056                           ;Menu.c: 401:     state = 35;
  4057  0005FA  0E23               	movlw	35
  4058  0005FC  6E2E               	movwf	menu@state^0,c
  4059  0005FE  0C23               	retlw	35
  4060  000600                     l5765:
  4061                           
  4062                           ;Menu.c: 405:    if (LcLliure() && CToAHaAcabat() == 250) {
  4063  000600  EC6D  F00E         	call	_LcLliure	;wreg free
  4064  000604  A0D8               	btfss	status,0,c
  4065  000606  0012               	return	
  4066  000608  ECEE  F00E         	call	_CToAHaAcabat	;wreg free
  4067  00060C  0AFA               	xorlw	250
  4068  00060E  A4D8               	btfss	status,2,c
  4069  000610  0012               	return	
  4070                           
  4071                           ;Menu.c: 406:     LcPutChar(':');
  4072  000612  0E3A               	movlw	58
  4073  000614  EC2B  F00C         	call	_LcPutChar
  4074                           
  4075                           ;Menu.c: 407:     LcGotoXY(16,1);
  4076  000618  D8C7               	call	PL86	;call to abstracted procedure
  4077  00061A  EC01  F00D         	call	_LcGotoXY
  4078                           
  4079                           ;Menu.c: 408:     LcNewString(CToAobtenir());
  4080  00061E  ECEC  F00E         	call	_CToAobtenir	;wreg free
  4081  000622  D8B5               	call	PL50	;call to abstracted procedure
  4082  000624  EC67  F00E         	call	_LcNewString	;wreg free
  4083                           
  4084                           ;Menu.c: 409:     pos = 0;
  4085  000628  6A2F               	clrf	_pos^0,c
  4086                           
  4087                           ;Menu.c: 410:     TiResetTics(timerMenu);
  4088  00062A  5032               	movf	_timerMenu^0,w,c
  4089  00062C  ECDC  F00D         	call	_TiResetTics
  4090  000630                     l5777:
  4091                           
  4092                           ;Menu.c: 411:     state = 37;
  4093  000630  0E25               	movlw	37
  4094  000632  6E2E               	movwf	menu@state^0,c
  4095  000634  0C25               	retlw	37
  4096  000636                     l5779:
  4097                           
  4098                           ;Menu.c: 415:    if (NovaTecla == 11 && LcLliure()) {
  4099  000636  0E0B               	movlw	11
  4100  000638  1869               	xorwf	_NovaTecla^0,w,c
  4101  00063A  E104               	bnz	l5787
  4102  00063C  EC6D  F00E         	call	_LcLliure	;wreg free
  4103  000640  E301 D762          	bc	u5930
  4104  000644                     l5787:
  4105  000644  5032               	movf	_timerMenu^0,w,c
  4106  000646  EC58  F00D         	call	_TiGetTics
  4107  00064A  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  4108  00064C  0012               	return	
  4109  00064E  0E91               	movlw	145
  4110  000650  5C4A               	subwf	?_TiGetTics^0,w,c
  4111  000652  0E01               	movlw	1
  4112  000654  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  4113  000656  A0D8               	btfss	status,0,c
  4114  000658  0012               	return	
  4115  00065A  EC6D  F00E         	call	_LcLliure	;wreg free
  4116  00065E  A0D8               	btfss	status,0,c
  4117  000660  0012               	return	
  4118                           
  4119                           ;Menu.c: 420:     state = 38;
  4120  000662  0E26               	movlw	38
  4121  000664  6E2E               	movwf	menu@state^0,c
  4122  000666  0C26               	retlw	38
  4123  000668                     l5793:
  4124                           
  4125                           ;Menu.c: 424:    if (pos < 16) {
  4126  000668  0E10               	movlw	16
  4127  00066A  602F               	cpfslt	_pos^0,c
  4128  00066C  D007               	goto	l5803
  4129                           
  4130                           ;Menu.c: 425:     TiResetTics(timerMenu);
  4131  00066E  5032               	movf	_timerMenu^0,w,c
  4132  000670  ECDC  F00D         	call	_TiResetTics
  4133                           
  4134                           ;Menu.c: 426:     LcScroll();
  4135  000674  ECCD  F00E         	call	_LcScroll	;wreg free
  4136                           
  4137                           ;Menu.c: 427:     pos++;
  4138  000678  2A2F               	incf	_pos^0,f,c
  4139  00067A  D7DA               	goto	l5777
  4140  00067C                     l5803:
  4141  00067C  0E0F               	movlw	15
  4142  00067E  642F               	cpfsgt	_pos^0,c
  4143  000680  0C0F               	retlw	15
  4144                           
  4145                           ;Menu.c: 431:     LcClear();
  4146  000682  EC8F  F00D         	call	_LcClear	;wreg free
  4147  000686  D62F               	goto	l5527
  4148  000688                     l5811:
  4149  000688  502E               	movf	menu@state^0,w,c
  4150  00068A  6E59               	movwf	??_menu^0,c
  4151  00068C  6A5A               	clrf	(??_menu+1)^0,c
  4152                           
  4153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4154                           ; Switch size 1, requested type "space"
  4155                           ; Number of cases is 1, Range of values is 0 to 0
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte            4     3 (average)
  4159                           ;	Chosen strategy is simple_byte
  4160  00068E  505A               	movf	(??_menu+1)^0,w,c
  4161  000690  A4D8               	btfss	status,2,c
  4162  000692  0012               	return	
  4163                           
  4164                           ; Switch size 1, requested type "space"
  4165                           ; Number of cases is 37, Range of values is 0 to 38
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte          112    57 (average)
  4169                           ;	Chosen strategy is simple_byte
  4170  000694  5059               	movf	??_menu^0,w,c
  4171  000696  E101 D4CF          	bz	l5269
  4172  00069A  0A01               	xorlw	1	; case 1
  4173  00069C  E101 D4D7          	bz	l5275
  4174  0006A0  0A03               	xorlw	3	; case 2
  4175  0006A2  E101 D4E5          	bz	l5285
  4176  0006A6  0A01               	xorlw	1	; case 3
  4177  0006A8  E101 D4EE          	bz	l511
  4178  0006AC  0A07               	xorlw	7	; case 4
  4179  0006AE  E101 D4F8          	bz	l5303
  4180  0006B2  0A01               	xorlw	1	; case 5
  4181  0006B4  E101 D505          	bz	l5311
  4182  0006B8  0A03               	xorlw	3	; case 6
  4183  0006BA  E101 D511          	bz	l5321
  4184  0006BE  0A01               	xorlw	1	; case 7
  4185  0006C0  E101 D524          	bz	l5335
  4186  0006C4  0A0F               	xorlw	15	; case 8
  4187  0006C6  E101 D53E          	bz	l5363
  4188  0006CA  0A01               	xorlw	1	; case 9
  4189  0006CC  E101 D551          	bz	l5377
  4190  0006D0  0A03               	xorlw	3	; case 10
  4191  0006D2  E101 D56A          	bz	l5407
  4192  0006D6  0A01               	xorlw	1	; case 11
  4193  0006D8  E101 D571          	bz	l538
  4194  0006DC  0A07               	xorlw	7	; case 12
  4195  0006DE  E101 D586          	bz	l5427
  4196  0006E2  0A01               	xorlw	1	; case 13
  4197  0006E4  E101 D58F          	bz	l5439
  4198  0006E8  0A03               	xorlw	3	; case 14
  4199  0006EA  E101 D5FF          	bz	l5529
  4200  0006EE  0A01               	xorlw	1	; case 15
  4201  0006F0  E101 D60C          	bz	l5537
  4202  0006F4  0A1F               	xorlw	31	; case 16
  4203  0006F6  E101 D615          	bz	l5541
  4204  0006FA  0A01               	xorlw	1	; case 17
  4205  0006FC  E101 D62C          	bz	l5561
  4206  000700  0A03               	xorlw	3	; case 18
  4207  000702  E101 D63B          	bz	l5579
  4208  000706  0A01               	xorlw	1	; case 19
  4209  000708  E101 D647          	bz	l5595
  4210  00070C  0A07               	xorlw	7	; case 20
  4211  00070E  E101 D655          	bz	l5611
  4212  000712  0A01               	xorlw	1	; case 21
  4213  000714  E101 D65B          	bz	l5623
  4214  000718  0A03               	xorlw	3	; case 22
  4215  00071A  E101 D67C          	bz	l5653
  4216  00071E  0A01               	xorlw	1	; case 23
  4217  000720  E101 D680          	bz	l5659
  4218  000724  0A0F               	xorlw	15	; case 24
  4219  000726  E101 D68F          	bz	l5667
  4220  00072A  0A01               	xorlw	1	; case 25
  4221  00072C  E101 D6A3          	bz	l5677
  4222  000730  0A03               	xorlw	3	; case 26
  4223  000732  E101 D6B5          	bz	l5687
  4224  000736  0A01               	xorlw	1	; case 27
  4225  000738  E101 D6FC          	bz	l5721
  4226  00073C  0A07               	xorlw	7	; case 28
  4227  00073E  E101 D6D2          	bz	l5695
  4228  000742  0A01               	xorlw	1	; case 29
  4229  000744  E101 D6E2          	bz	l5705
  4230  000748  0A03               	xorlw	3	; case 30
  4231  00074A  E101 D6FC          	bz	l5729
  4232  00074E  0A01               	xorlw	1	; case 31
  4233  000750  E101 D6FD          	bz	l5733
  4234  000754  0A3F               	xorlw	63	; case 32
  4235  000756  E101 D710          	bz	l5739
  4236  00075A  0A02               	xorlw	2	; case 34
  4237  00075C  E101 D72E          	bz	l5755
  4238  000760  0A01               	xorlw	1	; case 35
  4239  000762  E101 D74D          	bz	l5765
  4240  000766  0A06               	xorlw	6	; case 37
  4241  000768  E101 D765          	bz	l5779
  4242  00076C  0A03               	xorlw	3	; case 38
  4243  00076E  E101 D77B          	bz	l5793
  4244  000772  0012               	return		;funcret
  4245  000774                     __end_of_menu:
  4246                           	callstack 0
  4247  000774                     PL26:
  4248                           	callstack 24
  4249  000774  C04A  F04D         	movff	?_getArrayShowUsers,LcNewString@new_s
  4250  000778  C04B  F04E         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4251  00077C  0012               	return	
  4252  00077E                     __end_ofPL26:
  4253                           	callstack 0
  4254  00077E                     PL30:
  4255                           	callstack 24
  4256  00077E  0E01               	movlw	1
  4257  000780  6E52               	movwf	LcGotoXY@Row^0,c
  4258  000782  0C00               	retlw	0
  4259  000784                     __end_ofPL30:
  4260                           	callstack 0
  4261  000784                     PL42:
  4262                           	callstack 24
  4263  000784  C04A  F04D         	movff	?_UgetUserName,LcNewString@new_s
  4264  000788  C04B  F04E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4265  00078C  0012               	return	
  4266  00078E                     __end_ofPL42:
  4267                           	callstack 0
  4268  00078E                     PL50:
  4269                           	callstack 24
  4270  00078E  6E59               	movwf	??_menu^0,c
  4271  000790  C059  F04D         	movff	??_menu,LcNewString@new_s
  4272  000794  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  4273  000796  0012               	return	
  4274  000798                     __end_ofPL50:
  4275                           	callstack 0
  4276  000798                     PL82:
  4277                           	callstack 24
  4278  000798  6869               	setf	_NovaTecla^0,c
  4279  00079A  6868               	setf	_novaLletra^0,c
  4280  00079C  6A33               	clrf	_tmp^0,c
  4281  00079E  0012               	return	
  4282  0007A0                     __end_ofPL82:
  4283                           	callstack 0
  4284  0007A0                     PL84:
  4285                           	callstack 24
  4286  0007A0  2A33               	incf	_tmp^0,f,c
  4287  0007A2  6869               	setf	_NovaTecla^0,c
  4288  0007A4  6868               	setf	_novaLletra^0,c
  4289  0007A6  0012               	return	
  4290  0007A8                     __end_ofPL84:
  4291                           	callstack 0
  4292  0007A8                     PL86:
  4293                           	callstack 24
  4294  0007A8  0E01               	movlw	1
  4295  0007AA  6E52               	movwf	LcGotoXY@Row^0,c
  4296  0007AC  0C10               	retlw	16
  4297  0007AE                     __end_ofPL86:
  4298                           	callstack 0
  4299  0007AE                     PL88:
  4300                           	callstack 24
  4301  0007AE  0E00               	movlw	0
  4302  0007B0  6E52               	movwf	LcGotoXY@Row^0,c
  4303  0007B2  0C10               	retlw	16
  4304  0007B4                     __end_ofPL88:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _getArrayShowUsers *****************
  4308 ;; Defined at:
  4309 ;;		line 61 in file "Usuaris.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  quin            1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  quin            1    7[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2    5[COMRAM] PTR unsigned char 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1
  4323 ;;      Params:         2       0       0
  4324 ;;      Locals:         1       0       0
  4325 ;;      Temps:          0       0       0
  4326 ;;      Totals:         3       0       0
  4327 ;;Total ram usage:        3 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 2
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_menu
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text19
  4338  001B80                     __ptext19:
  4339                           	callstack 0
  4340  001B80                     _getArrayShowUsers:
  4341                           	callstack 27
  4342                           
  4343                           ;incstack = 0
  4344                           ;getArrayShowUsers@quin stored from wreg
  4345  001B80  6E4C               	movwf	getArrayShowUsers@quin^0,c
  4346                           
  4347                           ;Usuaris.c: 62:     return usuaris[arrayShowUsers[quin]].username;
  4348  001B82  504C               	movf	getArrayShowUsers@quin^0,w,c
  4349  001B84  0F01               	addlw	low _arrayShowUsers
  4350  001B86  6ED9               	movwf	fsr2l,c
  4351  001B88  6ADA               	clrf	fsr2h,c
  4352  001B8A  50DF               	movf	indf2,w,c
  4353  001B8C  0D12               	mullw	18
  4354  001B8E  0E00               	movlw	low _usuaris
  4355  001B90  24F3               	addwf	243,w,c
  4356  001B92  6E4A               	movwf	?_getArrayShowUsers^0,c
  4357  001B94  0E01               	movlw	high _usuaris
  4358  001B96  20F4               	addwfc	prodh,w,c
  4359  001B98  6E4B               	movwf	(?_getArrayShowUsers+1)^0,c
  4360  001B9A  0012               	return		;funcret
  4361  001B9C                     __end_of_getArrayShowUsers:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function _checkHoraAcabat *****************
  4365 ;; Defined at:
  4366 ;;		line 42 in file "Hora.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;		None               void
  4373 ;; Registers used:
  4374 ;;		status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1
  4380 ;;      Params:         0       0       0
  4381 ;;      Locals:         0       0       0
  4382 ;;      Temps:          0       0       0
  4383 ;;      Totals:         0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 2
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_menu
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text20
  4395  001C92                     __ptext20:
  4396                           	callstack 0
  4397  001C92                     _checkHoraAcabat:
  4398                           	callstack 27
  4399                           
  4400                           ;Hora.c: 43:     return tempsAcabat;
  4401                           
  4402                           ;incstack = 0
  4403  001C92  B676               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4404  001C94  D002               	goto	l2215
  4405  001C96  90D8               	bcf	status,0,c
  4406  001C98  0012               	return	
  4407  001C9A                     l2215:
  4408  001C9A  80D8               	bsf	status,0,c
  4409  001C9C  0012               	return		;funcret
  4410  001C9E                     __end_of_checkHoraAcabat:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _calculateShowUsers *****************
  4414 ;; Defined at:
  4415 ;;		line 137 in file "Usuaris.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		None
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1
  4429 ;;      Params:         0       0       0
  4430 ;;      Locals:         0       0       0
  4431 ;;      Temps:          0       0       0
  4432 ;;      Totals:         0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 2
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_menu
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text21
  4444  001DB4                     __ptext21:
  4445                           	callstack 0
  4446  001DB4                     _calculateShowUsers:
  4447                           	callstack 27
  4448                           
  4449                           ;Usuaris.c: 138:     do_showUsers = 1;
  4450                           
  4451                           ;incstack = 0
  4452  001DB4  8877               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4453  001DB6  0012               	return		;funcret
  4454  001DB8                     __end_of_calculateShowUsers:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function _UshowUsersCalculat *****************
  4458 ;; Defined at:
  4459 ;;		line 140 in file "Usuaris.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;		None               void
  4466 ;; Registers used:
  4467 ;;		status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1
  4473 ;;      Params:         0       0       0
  4474 ;;      Locals:         0       0       0
  4475 ;;      Temps:          0       0       0
  4476 ;;      Totals:         0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 2
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_menu
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text22
  4488  001C9E                     __ptext22:
  4489                           	callstack 0
  4490  001C9E                     _UshowUsersCalculat:
  4491                           	callstack 27
  4492                           
  4493                           ;Usuaris.c: 141:     return !do_showUsers;
  4494                           
  4495                           ;incstack = 0
  4496  001C9E  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4497  001CA0  D002               	goto	l2241
  4498  001CA2  90D8               	bcf	status,0,c
  4499  001CA4  0012               	return	
  4500  001CA6                     l2241:
  4501  001CA6  80D8               	bsf	status,0,c
  4502  001CA8  0012               	return		;funcret
  4503  001CAA                     __end_of_UshowUsersCalculat:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _UgetUserName *****************
  4507 ;; Defined at:
  4508 ;;		line 57 in file "Usuaris.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  quin            1    wreg     unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  quin            1    7[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  2    5[COMRAM] PTR unsigned char 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, prodl, prodh
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1
  4522 ;;      Params:         2       0       0
  4523 ;;      Locals:         1       0       0
  4524 ;;      Temps:          0       0       0
  4525 ;;      Totals:         3       0       0
  4526 ;;Total ram usage:        3 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_menu
  4533 ;;		_motorSIO
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text23
  4538  001C02                     __ptext23:
  4539                           	callstack 0
  4540  001C02                     _UgetUserName:
  4541                           	callstack 27
  4542                           
  4543                           ;incstack = 0
  4544                           ;UgetUserName@quin stored from wreg
  4545  001C02  6E4C               	movwf	UgetUserName@quin^0,c
  4546                           
  4547                           ;Usuaris.c: 58:     return usuaris[quin].username;
  4548  001C04  504C               	movf	UgetUserName@quin^0,w,c
  4549  001C06  0D12               	mullw	18
  4550  001C08  0E00               	movlw	low _usuaris
  4551  001C0A  24F3               	addwf	243,w,c
  4552  001C0C  6E4A               	movwf	?_UgetUserName^0,c
  4553  001C0E  0E01               	movlw	high _usuaris
  4554  001C10  20F4               	addwfc	prodh,w,c
  4555  001C12  6E4B               	movwf	(?_UgetUserName+1)^0,c
  4556  001C14  0012               	return		;funcret
  4557  001C16                     __end_of_UgetUserName:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _UgetTop5 *****************
  4561 ;; Defined at:
  4562 ;;		line 287 in file "Usuaris.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  quin            1    wreg     unsigned char 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  quin            1    5[COMRAM] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      char 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1
  4576 ;;      Params:         0       0       0
  4577 ;;      Locals:         1       0       0
  4578 ;;      Temps:          0       0       0
  4579 ;;      Totals:         1       0       0
  4580 ;;Total ram usage:        1 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 2
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_menu
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text24
  4591  001C16                     __ptext24:
  4592                           	callstack 0
  4593  001C16                     _UgetTop5:
  4594                           	callstack 27
  4595                           
  4596                           ;incstack = 0
  4597                           ;UgetTop5@quin stored from wreg
  4598  001C16  6E4A               	movwf	UgetTop5@quin^0,c
  4599                           
  4600                           ;Usuaris.c: 288:     return puntuacions[quin].indexStruct;
  4601  001C18  504A               	movf	UgetTop5@quin^0,w,c
  4602  001C1A  0D02               	mullw	2
  4603  001C1C  50F3               	movf	243,w,c
  4604  001C1E  0F98               	addlw	low _puntuacions
  4605  001C20  D000               	goto	PL68	;call to abstracted procedure
  4606  001C22                     __end_of_UgetTop5:
  4607                           	callstack 0
  4608  001C22                     PL68:
  4609                           	callstack 27
  4610  001C22  6ED9               	movwf	fsr2l,c
  4611  001C24  6ADA               	clrf	fsr2h,c
  4612  001C26  50DF               	movf	indf2,w,c
  4613  001C28  0012               	return		;funcret
  4614  001C2A                     __end_ofPL68:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _UgetScore *****************
  4618 ;; Defined at:
  4619 ;;		line 284 in file "Usuaris.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  quin            1    wreg     unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  quin            1    5[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      unsigned char 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1
  4633 ;;      Params:         0       0       0
  4634 ;;      Locals:         1       0       0
  4635 ;;      Temps:          0       0       0
  4636 ;;      Totals:         1       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 2
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_menu
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text25
  4648  001C6C                     __ptext25:
  4649                           	callstack 0
  4650  001C6C                     _UgetScore:
  4651                           	callstack 27
  4652                           
  4653                           ;incstack = 0
  4654                           ;UgetScore@quin stored from wreg
  4655  001C6C  6E4A               	movwf	UgetScore@quin^0,c
  4656                           
  4657                           ;Usuaris.c: 285:     return puntuacions[quin].score;
  4658  001C6E  504A               	movf	UgetScore@quin^0,w,c
  4659  001C70  0D02               	mullw	2
  4660  001C72  50F3               	movf	243,w,c
  4661  001C74  0F99               	addlw	low (_puntuacions+1)
  4662  001C76  EF11  F00E         	goto	PL68	;call to abstracted procedure
  4663  001C7A                     __end_of_UgetScore:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _UgetNumUsuaris *****************
  4667 ;; Defined at:
  4668 ;;		line 33 in file "Usuaris.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1
  4682 ;;      Params:         0       0       0
  4683 ;;      Locals:         0       0       0
  4684 ;;      Temps:          0       0       0
  4685 ;;      Totals:         0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 2
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_menu
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text26
  4697  001DB8                     __ptext26:
  4698                           	callstack 0
  4699  001DB8                     _UgetNumUsuaris:
  4700                           	callstack 27
  4701                           
  4702                           ;Usuaris.c: 34:     return numUsuaris;
  4703                           
  4704                           ;incstack = 0
  4705  001DB8  502D               	movf	_numUsuaris^0,w,c
  4706  001DBA  0012               	return		;funcret
  4707  001DBC                     __end_of_UgetNumUsuaris:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _UenviaPas *****************
  4711 ;; Defined at:
  4712 ;;		line 49 in file "Usuaris.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  c               1    wreg     unsigned char 
  4715 ;;  pos             1    5[COMRAM] unsigned char 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  c               1    6[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1
  4727 ;;      Params:         1       0       0
  4728 ;;      Locals:         1       0       0
  4729 ;;      Temps:          0       0       0
  4730 ;;      Totals:         2       0       0
  4731 ;;Total ram usage:        2 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 2
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_menu
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text27
  4742  001C3C                     __ptext27:
  4743                           	callstack 0
  4744  001C3C                     _UenviaPas:
  4745                           	callstack 27
  4746                           
  4747                           ;incstack = 0
  4748                           ;UenviaPas@c stored from wreg
  4749  001C3C  6E4B               	movwf	UenviaPas@c^0,c
  4750                           
  4751                           ;Usuaris.c: 50:     tmpPassword[pos] = c;
  4752  001C3E  504A               	movf	UenviaPas@pos^0,w,c
  4753  001C40  0FA2               	addlw	low _tmpPassword
  4754  001C42  6ED9               	movwf	fsr2l,c
  4755  001C44  6ADA               	clrf	fsr2h,c
  4756  001C46  C04B  FFDF         	movff	UenviaPas@c,indf2
  4757  001C4A  0012               	return		;funcret
  4758  001C4C                     __end_of_UenviaPas:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _UenviaChar *****************
  4762 ;; Defined at:
  4763 ;;		line 46 in file "Usuaris.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  c               1    wreg     unsigned char 
  4766 ;;  pos             1    5[COMRAM] unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  c               1    6[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1
  4778 ;;      Params:         1       0       0
  4779 ;;      Locals:         1       0       0
  4780 ;;      Temps:          0       0       0
  4781 ;;      Totals:         2       0       0
  4782 ;;Total ram usage:        2 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 2
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_menu
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text28
  4793  001C4C                     __ptext28:
  4794                           	callstack 0
  4795  001C4C                     _UenviaChar:
  4796                           	callstack 27
  4797                           
  4798                           ;incstack = 0
  4799                           ;UenviaChar@c stored from wreg
  4800  001C4C  6E4B               	movwf	UenviaChar@c^0,c
  4801                           
  4802                           ;Usuaris.c: 47:     tmpUsername[pos] = c;
  4803  001C4E  504A               	movf	UenviaChar@pos^0,w,c
  4804  001C50  0FAB               	addlw	low _tmpUsername
  4805  001C52  6ED9               	movwf	fsr2l,c
  4806  001C54  6ADA               	clrf	fsr2h,c
  4807  001C56  C04B  FFDF         	movff	UenviaChar@c,indf2
  4808  001C5A  0012               	return		;funcret
  4809  001C5C                     __end_of_UenviaChar:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _UcheckExistsNotFinished *****************
  4813 ;; Defined at:
  4814 ;;		line 40 in file "Usuaris.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;		None               void
  4821 ;; Registers used:
  4822 ;;		status,0
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1
  4828 ;;      Params:         0       0       0
  4829 ;;      Locals:         0       0       0
  4830 ;;      Temps:          0       0       0
  4831 ;;      Totals:         0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 2
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_menu
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text29
  4843  001CAA                     __ptext29:
  4844                           	callstack 0
  4845  001CAA                     _UcheckExistsNotFinished:
  4846                           	callstack 27
  4847                           
  4848                           ;Usuaris.c: 41:     return do_check_exists;
  4849                           
  4850                           ;incstack = 0
  4851  001CAA  BC77               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4852  001CAC  D002               	goto	l2171
  4853  001CAE  90D8               	bcf	status,0,c
  4854  001CB0  0012               	return	
  4855  001CB2                     l2171:
  4856  001CB2  80D8               	bsf	status,0,c
  4857  001CB4  0012               	return		;funcret
  4858  001CB6                     __end_of_UcheckExistsNotFinished:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _UcheckExistsGetError *****************
  4862 ;; Defined at:
  4863 ;;		line 43 in file "Usuaris.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      char 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1
  4877 ;;      Params:         0       0       0
  4878 ;;      Locals:         0       0       0
  4879 ;;      Temps:          0       0       0
  4880 ;;      Totals:         0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 2
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_menu
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text30
  4892  001DBC                     __ptext30:
  4893                           	callstack 0
  4894  001DBC                     _UcheckExistsGetError:
  4895                           	callstack 27
  4896                           
  4897                           ;Usuaris.c: 44:     return usuariLoguejat;
  4898                           
  4899                           ;incstack = 0
  4900  001DBC  5066               	movf	_usuariLoguejat^0,w,c
  4901  001DBE  0012               	return		;funcret
  4902  001DC0                     __end_of_UcheckExistsGetError:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _UcheckExists *****************
  4906 ;; Defined at:
  4907 ;;		line 37 in file "Usuaris.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		None
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1
  4921 ;;      Params:         0       0       0
  4922 ;;      Locals:         0       0       0
  4923 ;;      Temps:          0       0       0
  4924 ;;      Totals:         0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 2
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_menu
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text31
  4936  001DC0                     __ptext31:
  4937                           	callstack 0
  4938  001DC0                     _UcheckExists:
  4939                           	callstack 27
  4940                           
  4941                           ;Usuaris.c: 38:     do_check_exists = 1;
  4942                           
  4943                           ;incstack = 0
  4944  001DC0  8C77               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4945  001DC2  0012               	return		;funcret
  4946  001DC4                     __end_of_UcheckExists:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _URegister *****************
  4950 ;; Defined at:
  4951 ;;		line 53 in file "Usuaris.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		None
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1
  4965 ;;      Params:         0       0       0
  4966 ;;      Locals:         0       0       0
  4967 ;;      Temps:          0       0       0
  4968 ;;      Totals:         0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 2
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_menu
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text32
  4980  001DC4                     __ptext32:
  4981                           	callstack 0
  4982  001DC4                     _URegister:
  4983                           	callstack 27
  4984                           
  4985                           ;Usuaris.c: 54:     do_register = 1;
  4986                           
  4987                           ;incstack = 0
  4988  001DC4  8A77               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4989  001DC6  0012               	return		;funcret
  4990  001DC8                     __end_of_URegister:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _SiFerMenu *****************
  4994 ;; Defined at:
  4995 ;;		line 19 in file "GestioLCD.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		None
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1
  5009 ;;      Params:         0       0       0
  5010 ;;      Locals:         0       0       0
  5011 ;;      Temps:          0       0       0
  5012 ;;      Totals:         0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 2
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_menu
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text33
  5024  001DC8                     __ptext33:
  5025                           	callstack 0
  5026  001DC8                     _SiFerMenu:
  5027                           	callstack 27
  5028                           
  5029                           ;GestioLCD.c: 20:     ferMenu = 1;
  5030                           
  5031                           ;incstack = 0
  5032  001DC8  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5033  001DCA  0012               	return		;funcret
  5034  001DCC                     __end_of_SiFerMenu:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _SMSon *****************
  5038 ;; Defined at:
  5039 ;;		line 128 in file "Ssms.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;		None
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		None
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1
  5053 ;;      Params:         0       0       0
  5054 ;;      Locals:         0       0       0
  5055 ;;      Temps:          0       0       0
  5056 ;;      Totals:         0       0       0
  5057 ;;Total ram usage:        0 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 2
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_menu
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text34
  5068  001D8E                     __ptext34:
  5069                           	callstack 0
  5070  001D8E                     _SMSon:
  5071                           	callstack 27
  5072                           
  5073                           ;Ssms.c: 129:     setSMSon = 1;
  5074                           
  5075                           ;incstack = 0
  5076  001D8E  8078               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5077                           
  5078                           ;Ssms.c: 130:     novaTecla = -1;
  5079  001D90  686B               	setf	_novaTecla^0,c
  5080  001D92  0012               	return		;funcret
  5081  001D94                     __end_of_SMSon:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _SMSoff *****************
  5085 ;; Defined at:
  5086 ;;		line 133 in file "Ssms.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		None
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1
  5100 ;;      Params:         0       0       0
  5101 ;;      Locals:         0       0       0
  5102 ;;      Temps:          0       0       0
  5103 ;;      Totals:         0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 2
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_menu
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text35
  5115  001D94                     __ptext35:
  5116                           	callstack 0
  5117  001D94                     _SMSoff:
  5118                           	callstack 27
  5119                           
  5120                           ;Ssms.c: 134:     setSMSon = 0;
  5121                           
  5122                           ;incstack = 0
  5123  001D94  9078               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5124                           
  5125                           ;Ssms.c: 135:     novaTecla = -1;
  5126  001D96  686B               	setf	_novaTecla^0,c
  5127  001D98  0012               	return		;funcret
  5128  001D9A                     __end_of_SMSoff:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5132 ;; Defined at:
  5133 ;;		line 37 in file "SIO.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      char 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1
  5147 ;;      Params:         0       0       0
  5148 ;;      Locals:         0       0       0
  5149 ;;      Temps:          0       0       0
  5150 ;;      Totals:         0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 2
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_menu
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text36
  5162  001DCC                     __ptext36:
  5163                           	callstack 0
  5164  001DCC                     _SIOHaAcabatPuntuacions:
  5165                           	callstack 27
  5166                           
  5167                           ;SIO.c: 38:     return usuariActualSIO;
  5168                           
  5169                           ;incstack = 0
  5170  001DCC  5061               	movf	_usuariActualSIO^0,w,c
  5171  001DCE  0012               	return		;funcret
  5172  001DD0                     __end_of_SIOHaAcabatPuntuacions:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function _NoFerMenu *****************
  5176 ;; Defined at:
  5177 ;;		line 22 in file "GestioLCD.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		None
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1
  5191 ;;      Params:         0       0       0
  5192 ;;      Locals:         0       0       0
  5193 ;;      Temps:          0       0       0
  5194 ;;      Totals:         0       0       0
  5195 ;;Total ram usage:        0 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 2
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_menu
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text37
  5206  001DD0                     __ptext37:
  5207                           	callstack 0
  5208  001DD0                     _NoFerMenu:
  5209                           	callstack 27
  5210                           
  5211                           ;GestioLCD.c: 23:     ferMenu = 0;
  5212                           
  5213                           ;incstack = 0
  5214  001DD0  9277               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5215  001DD2  0012               	return		;funcret
  5216  001DD4                     __end_of_NoFerMenu:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _LcScroll *****************
  5220 ;; Defined at:
  5221 ;;		line 37 in file "LcTLCD.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1
  5235 ;;      Params:         0       0       0
  5236 ;;      Locals:         0       0       0
  5237 ;;      Temps:          0       0       0
  5238 ;;      Totals:         0       0       0
  5239 ;;Total ram usage:        0 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 4
  5242 ;; This function calls:
  5243 ;;		_CantaIR
  5244 ;; This function is called by:
  5245 ;;		_menu
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text38
  5250  001D9A                     __ptext38:
  5251                           	callstack 0
  5252  001D9A                     _LcScroll:
  5253                           	callstack 25
  5254                           
  5255                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5256                           
  5257                           ;incstack = 0
  5258  001D9A  0E18               	movlw	24
  5259  001D9C  EFCE  F00D         	goto	_CantaIR
  5260  001DA0                     __end_of_LcScroll:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _JnovaTecla *****************
  5264 ;; Defined at:
  5265 ;;		line 16 in file "Joc.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  tecla           1    wreg     char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  tecla           1    5[COMRAM] char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1
  5279 ;;      Params:         0       0       0
  5280 ;;      Locals:         1       0       0
  5281 ;;      Temps:          0       0       0
  5282 ;;      Totals:         1       0       0
  5283 ;;Total ram usage:        1 bytes
  5284 ;; Hardware stack levels used: 1
  5285 ;; Hardware stack levels required when called: 2
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_menu
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text39
  5294  001D10                     __ptext39:
  5295                           	callstack 0
  5296  001D10                     _JnovaTecla:
  5297                           	callstack 27
  5298                           
  5299                           ;incstack = 0
  5300                           ;JnovaTecla@tecla stored from wreg
  5301  001D10  6E4A               	movwf	JnovaTecla@tecla^0,c
  5302                           
  5303                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5304  001D12  C04A  F062         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5305  001D16  0012               	return		;funcret
  5306  001D18                     __end_of_JnovaTecla:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _JnovaDireccio *****************
  5310 ;; Defined at:
  5311 ;;		line 19 in file "Joc.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  dir             1    wreg     unsigned char 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  dir             1    5[COMRAM] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		wreg
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1
  5325 ;;      Params:         0       0       0
  5326 ;;      Locals:         1       0       0
  5327 ;;      Temps:          0       0       0
  5328 ;;      Totals:         1       0       0
  5329 ;;Total ram usage:        1 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; Hardware stack levels required when called: 2
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_menu
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text40
  5340  001D18                     __ptext40:
  5341                           	callstack 0
  5342  001D18                     _JnovaDireccio:
  5343                           	callstack 27
  5344                           
  5345                           ;incstack = 0
  5346                           ;JnovaDireccio@dir stored from wreg
  5347  001D18  6E4A               	movwf	JnovaDireccio@dir^0,c
  5348                           
  5349                           ;Joc.c: 20:     direccioJoc = dir;
  5350  001D1A  C04A  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5351  001D1E  0012               	return		;funcret
  5352  001D20                     __end_of_JnovaDireccio:
  5353                           	callstack 0
  5354                           
  5355 ;; *************** function _JendGame *****************
  5356 ;; Defined at:
  5357 ;;		line 23 in file "Joc.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		None
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1
  5371 ;;      Params:         0       0       0
  5372 ;;      Locals:         0       0       0
  5373 ;;      Temps:          0       0       0
  5374 ;;      Totals:         0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_menu
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text41
  5386  001DD4                     __ptext41:
  5387                           	callstack 0
  5388  001DD4                     _JendGame:
  5389                           	callstack 27
  5390                           
  5391                           ;Joc.c: 24:     jugantJoc = 0;
  5392                           
  5393                           ;incstack = 0
  5394  001DD4  9476               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5395  001DD6  0012               	return		;funcret
  5396  001DD8                     __end_of_JendGame:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _JJuguem *****************
  5400 ;; Defined at:
  5401 ;;		line 13 in file "Joc.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  usuari          1    wreg     unsigned char 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  usuari          1    5[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1
  5415 ;;      Params:         0       0       0
  5416 ;;      Locals:         1       0       0
  5417 ;;      Temps:          0       0       0
  5418 ;;      Totals:         1       0       0
  5419 ;;Total ram usage:        1 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; Hardware stack levels required when called: 2
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_menu
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text42
  5430  001D20                     __ptext42:
  5431                           	callstack 0
  5432  001D20                     _JJuguem:
  5433                           	callstack 27
  5434                           
  5435                           ;incstack = 0
  5436                           ;JJuguem@usuari stored from wreg
  5437  001D20  6E4A               	movwf	JJuguem@usuari^0,c
  5438                           
  5439                           ;Joc.c: 14:     usuariJoc = usuari;
  5440  001D22  C04A  F063         	movff	JJuguem@usuari,_usuariJoc
  5441  001D26  0012               	return		;funcret
  5442  001D28                     __end_of_JJuguem:
  5443                           	callstack 0
  5444                           
  5445 ;; *************** function _HActualitzaHora *****************
  5446 ;; Defined at:
  5447 ;;		line 16 in file "Hora.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5450 ;;		 -> horaTmp(4), 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1
  5462 ;;      Params:         1       0       0
  5463 ;;      Locals:         0       0       0
  5464 ;;      Temps:          0       0       0
  5465 ;;      Totals:         1       0       0
  5466 ;;Total ram usage:        1 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 2
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_menu
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text43
  5477  00199A                     __ptext43:
  5478                           	callstack 0
  5479  00199A                     _HActualitzaHora:
  5480                           	callstack 27
  5481                           
  5482                           ;Hora.c: 17:     hora[0] = nova[0];
  5483                           
  5484                           ;incstack = 0
  5485  00199A  504A               	movf	HActualitzaHora@nova^0,w,c
  5486  00199C  6ED9               	movwf	fsr2l,c
  5487  00199E  6ADA               	clrf	fsr2h,c
  5488  0019A0  50DF               	movf	indf2,w,c
  5489  0019A2  6E6D               	movwf	_hora^0,c
  5490                           
  5491                           ;Hora.c: 18:     hora[1] = nova[1];
  5492  0019A4  504A               	movf	HActualitzaHora@nova^0,w,c
  5493  0019A6  6ED9               	movwf	fsr2l,c
  5494  0019A8  6ADA               	clrf	fsr2h,c
  5495  0019AA  2AD9               	incf	fsr2l,f,c
  5496  0019AC  50DF               	movf	indf2,w,c
  5497  0019AE  6E6E               	movwf	(_hora+1)^0,c
  5498                           
  5499                           ;Hora.c: 19:     hora[3] = nova[2];
  5500  0019B0  504A               	movf	HActualitzaHora@nova^0,w,c
  5501  0019B2  6ED9               	movwf	fsr2l,c
  5502  0019B4  6ADA               	clrf	fsr2h,c
  5503  0019B6  0E02               	movlw	2
  5504  0019B8  26D9               	addwf	fsr2l,f,c
  5505  0019BA  50DF               	movf	indf2,w,c
  5506  0019BC  6E70               	movwf	(_hora+3)^0,c
  5507                           
  5508                           ;Hora.c: 20:     hora[4] = nova[3];
  5509  0019BE  504A               	movf	HActualitzaHora@nova^0,w,c
  5510  0019C0  6ED9               	movwf	fsr2l,c
  5511  0019C2  6ADA               	clrf	fsr2h,c
  5512  0019C4  0E03               	movlw	3
  5513  0019C6  26D9               	addwf	fsr2l,f,c
  5514  0019C8  50DF               	movf	indf2,w,c
  5515  0019CA  6E71               	movwf	(_hora+4)^0,c
  5516  0019CC  0012               	return		;funcret
  5517  0019CE                     __end_of_HActualitzaHora:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _GLCDMostraMenu *****************
  5521 ;; Defined at:
  5522 ;;		line 30 in file "GestioLCD.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  num             1    wreg     unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  num             1    5[COMRAM] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1
  5536 ;;      Params:         0       0       0
  5537 ;;      Locals:         1       0       0
  5538 ;;      Temps:          0       0       0
  5539 ;;      Totals:         1       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 2
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_menu
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text44
  5551  001CB6                     __ptext44:
  5552                           	callstack 0
  5553  001CB6                     _GLCDMostraMenu:
  5554                           	callstack 27
  5555                           
  5556                           ;incstack = 0
  5557                           ;GLCDMostraMenu@num stored from wreg
  5558  001CB6  6E4A               	movwf	GLCDMostraMenu@num^0,c
  5559                           
  5560                           ;GestioLCD.c: 31:     newString = 1;
  5561  001CB8  8077               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5562                           
  5563                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5564  001CBA  C04A  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5565                           
  5566                           ;GestioLCD.c: 33:     ferMenu = 1;
  5567  001CBE  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5568  001CC0  0012               	return		;funcret
  5569  001CC2                     __end_of_GLCDMostraMenu:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _CToAobtenir *****************
  5573 ;; Defined at:
  5574 ;;		line 7 in file "CtoA.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      PTR unsigned char 
  5581 ;; Registers used:
  5582 ;;		wreg
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1
  5588 ;;      Params:         2       0       0
  5589 ;;      Locals:         0       0       0
  5590 ;;      Temps:          0       0       0
  5591 ;;      Totals:         2       0       0
  5592 ;;Total ram usage:        2 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_menu
  5599 ;;		_motorSIO
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text45
  5604  001DD8                     __ptext45:
  5605                           	callstack 0
  5606  001DD8                     _CToAobtenir:
  5607                           	callstack 27
  5608                           
  5609                           ;CtoA.c: 8:     return stringScore;
  5610                           
  5611                           ;incstack = 0
  5612  001DD8  0E73               	movlw	_stringScore& (0+255)
  5613  001DDA  0012               	return		;funcret
  5614  001DDC                     __end_of_CToAobtenir:
  5615                           	callstack 0
  5616                           
  5617 ;; *************** function _CToAHaAcabat *****************
  5618 ;; Defined at:
  5619 ;;		line 10 in file "CtoA.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      unsigned char 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1
  5633 ;;      Params:         0       0       0
  5634 ;;      Locals:         0       0       0
  5635 ;;      Temps:          0       0       0
  5636 ;;      Totals:         0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 2
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_menu
  5644 ;;		_motorSIO
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text46
  5649  001DDC                     __ptext46:
  5650                           	callstack 0
  5651  001DDC                     _CToAHaAcabat:
  5652                           	callstack 27
  5653                           
  5654                           ;CtoA.c: 11:     return convertir;
  5655                           
  5656                           ;incstack = 0
  5657  001DDC  505E               	movf	_convertir^0,w,c
  5658  001DDE  0012               	return		;funcret
  5659  001DE0                     __end_of_CToAHaAcabat:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _CToAConverteix *****************
  5663 ;; Defined at:
  5664 ;;		line 14 in file "CtoA.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  numero          1    wreg     unsigned char 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  numero          1    5[COMRAM] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1
  5678 ;;      Params:         0       0       0
  5679 ;;      Locals:         1       0       0
  5680 ;;      Temps:          0       0       0
  5681 ;;      Totals:         1       0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 3
  5685 ;; This function calls:
  5686 ;;		_CToAReset
  5687 ;; This function is called by:
  5688 ;;		_menu
  5689 ;;		_motorSIO
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text47
  5694  001CC2                     __ptext47:
  5695                           	callstack 0
  5696  001CC2                     _CToAConverteix:
  5697                           	callstack 26
  5698                           
  5699                           ;incstack = 0
  5700                           ;CToAConverteix@numero stored from wreg
  5701  001CC2  6E4A               	movwf	CToAConverteix@numero^0,c
  5702                           
  5703                           ;CtoA.c: 15:     CToAReset();
  5704  001CC4  EC94  F00E         	call	_CToAReset	;wreg free
  5705                           
  5706                           ;CtoA.c: 16:     convertir = numero;
  5707  001CC8  C04A  F05E         	movff	CToAConverteix@numero,_convertir
  5708  001CCC  0012               	return		;funcret
  5709  001CCE                     __end_of_CToAConverteix:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _CToAReset *****************
  5713 ;; Defined at:
  5714 ;;		line 18 in file "CtoA.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1
  5728 ;;      Params:         0       0       0
  5729 ;;      Locals:         0       0       0
  5730 ;;      Temps:          0       0       0
  5731 ;;      Totals:         0       0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 2
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_CToAConverteix
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text48
  5743  001D28                     __ptext48:
  5744                           	callstack 0
  5745  001D28                     _CToAReset:
  5746                           	callstack 26
  5747                           
  5748                           ;CtoA.c: 19:     stringScore[0] = '0';
  5749                           
  5750                           ;incstack = 0
  5751  001D28  0E30               	movlw	48
  5752  001D2A  6E73               	movwf	_stringScore^0,c
  5753                           
  5754                           ;CtoA.c: 20:     stringScore[1] = '0';
  5755  001D2C  6E74               	movwf	(_stringScore+1)^0,c
  5756  001D2E  0C30               	retlw	48	;funcret
  5757  001D30                     __end_of_CToAReset:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _init_ports *****************
  5761 ;; Defined at:
  5762 ;;		line 25 in file "main.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1
  5776 ;;      Params:         0       0       0
  5777 ;;      Locals:         0       0       0
  5778 ;;      Temps:          0       0       0
  5779 ;;      Totals:         0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 2
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text49
  5791  001B62                     __ptext49:
  5792                           	callstack 0
  5793  001B62                     _init_ports:
  5794                           	callstack 28
  5795                           
  5796                           ;incstack = 0
  5797  001B62  0E03               	movlw	3
  5798  001B64  6E92               	movwf	146,c	;volatile
  5799  001B66  0EE0               	movlw	224
  5800  001B68  6E93               	movwf	147,c	;volatile
  5801  001B6A  968A               	bcf	138,3,c	;volatile
  5802  001B6C  908A               	bcf	138,0,c	;volatile
  5803  001B6E  928A               	bcf	138,1,c	;volatile
  5804                           
  5805                           ;main.c: 49:     TRISC = 0xC0;
  5806  001B70  0EC0               	movlw	192
  5807  001B72  6E94               	movwf	148,c	;volatile
  5808                           
  5809                           ;main.c: 59:     TRISD = 0x8F;
  5810  001B74  0E8F               	movlw	143
  5811  001B76  6E95               	movwf	149,c	;volatile
  5812                           
  5813                           ;main.c: 60:     LATD = 0x00;
  5814  001B78  6A8C               	clrf	140,c	;volatile
  5815                           
  5816                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5817  001B7A  8EA6               	bsf	166,7,c	;volsfr
  5818                           
  5819                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5820  001B7C  9CA6               	bcf	166,6,c	;volsfr
  5821  001B7E  0012               	return		;funcret
  5822  001B80                     __end_of_init_ports:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _init_eusart *****************
  5826 ;; Defined at:
  5827 ;;		line 67 in file "main.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1
  5841 ;;      Params:         0       0       0
  5842 ;;      Locals:         0       0       0
  5843 ;;      Temps:          0       0       0
  5844 ;;      Totals:         0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 2
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_main
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text50
  5856  001BEC                     __ptext50:
  5857                           	callstack 0
  5858  001BEC                     _init_eusart:
  5859                           	callstack 28
  5860                           
  5861                           ;main.c: 68:     TXSTA = 0x24;
  5862                           
  5863                           ;incstack = 0
  5864  001BEC  0E24               	movlw	36
  5865  001BEE  6EAC               	movwf	172,c	;volatile
  5866                           
  5867                           ;main.c: 69:     RCSTA = 0x90;
  5868  001BF0  0E90               	movlw	144
  5869  001BF2  6EAB               	movwf	171,c	;volatile
  5870                           
  5871                           ;main.c: 70:     BAUDCON = 0x08;
  5872  001BF4  0E08               	movlw	8
  5873  001BF6  6EB8               	movwf	184,c	;volatile
  5874                           
  5875                           ;main.c: 71:     SPBRGH = 0x04;
  5876  001BF8  0E04               	movlw	4
  5877  001BFA  6EB0               	movwf	176,c	;volatile
  5878                           
  5879                           ;main.c: 72:     SPBRG = 0x10;
  5880  001BFC  0E10               	movlw	16
  5881  001BFE  6EAF               	movwf	175,c	;volatile
  5882  001C00  0C10               	retlw	16	;funcret
  5883  001C02                     __end_of_init_eusart:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function _initSIO *****************
  5887 ;; Defined at:
  5888 ;;		line 19 in file "SIO.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;		None
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1
  5902 ;;      Params:         0       0       0
  5903 ;;      Locals:         0       0       0
  5904 ;;      Temps:          0       0       0
  5905 ;;      Totals:         0       0       0
  5906 ;;Total ram usage:        0 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 3
  5909 ;; This function calls:
  5910 ;;		_TiGetTimer
  5911 ;; This function is called by:
  5912 ;;		_main
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text51
  5917  001D30                     __ptext51:
  5918                           	callstack 0
  5919  001D30                     _initSIO:
  5920                           	callstack 27
  5921                           
  5922                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  5923                           
  5924                           ;incstack = 0
  5925  001D30  EC1B  F00D         	call	_TiGetTimer	;wreg free
  5926  001D34  6E11               	movwf	_timerSIO^0,c
  5927  001D36  0012               	return		;funcret
  5928  001D38                     __end_of_initSIO:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function _initHora *****************
  5932 ;; Defined at:
  5933 ;;		line 12 in file "Hora.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1
  5947 ;;      Params:         0       0       0
  5948 ;;      Locals:         0       0       0
  5949 ;;      Temps:          0       0       0
  5950 ;;      Totals:         0       0       0
  5951 ;;Total ram usage:        0 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 3
  5954 ;; This function calls:
  5955 ;;		_TiGetTimer
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text52
  5962  001D38                     __ptext52:
  5963                           	callstack 0
  5964  001D38                     _initHora:
  5965                           	callstack 27
  5966                           
  5967                           ;Hora.c: 13:     timerHora = TiGetTimer();
  5968                           
  5969                           ;incstack = 0
  5970  001D38  EC1B  F00D         	call	_TiGetTimer	;wreg free
  5971  001D3C  6E16               	movwf	_timerHora^0,c
  5972  001D3E  0012               	return		;funcret
  5973  001D40                     __end_of_initHora:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _initAltaveu *****************
  5977 ;; Defined at:
  5978 ;;		line 10 in file "Altaveu.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1
  5992 ;;      Params:         0       0       0
  5993 ;;      Locals:         0       0       0
  5994 ;;      Temps:          0       0       0
  5995 ;;      Totals:         0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 3
  5999 ;; This function calls:
  6000 ;;		_TiGetTimer
  6001 ;; This function is called by:
  6002 ;;		_main
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text53
  6007  001D40                     __ptext53:
  6008                           	callstack 0
  6009  001D40                     _initAltaveu:
  6010                           	callstack 27
  6011                           
  6012                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6013                           
  6014                           ;incstack = 0
  6015  001D40  EC1B  F00D         	call	_TiGetTimer	;wreg free
  6016  001D44  6E25               	movwf	_timerAltaveu^0,c
  6017  001D46  0012               	return		;funcret
  6018  001D48                     __end_of_initAltaveu:
  6019                           	callstack 0
  6020                           
  6021 ;; *************** function _UmotorUsers *****************
  6022 ;; Defined at:
  6023 ;;		line 144 in file "Usuaris.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1
  6037 ;;      Params:         0       0       0
  6038 ;;      Locals:         0       0       0
  6039 ;;      Temps:          2       0       0
  6040 ;;      Totals:         2       0       0
  6041 ;;Total ram usage:        2 bytes
  6042 ;; Hardware stack levels used: 1
  6043 ;; Hardware stack levels required when called: 3
  6044 ;; This function calls:
  6045 ;;		_compareStrings
  6046 ;;		_escriureCharEEPROM
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text54
  6053  000A46                     __ptext54:
  6054                           	callstack 0
  6055  000A46                     _UmotorUsers:
  6056                           	callstack 27
  6057                           
  6058                           ;Usuaris.c: 145:     static char state = 0;;Usuaris.c: 147:  switch(state) {
  6059                           
  6060                           ;incstack = 0
  6061  000A46  D0FC               	goto	l6035
  6062  000A48                     l765:
  6063                           
  6064                           ;Usuaris.c: 149:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6065  000A48  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6066  000A4A  BA77               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6067  000A4C  D006               	goto	l766
  6068  000A4E  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6069  000A50  B677               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6070  000A52  D003               	goto	l766
  6071                           
  6072                           ;Usuaris.c: 150:     i = 0;
  6073  000A54  6A2A               	clrf	_i^0,c
  6074                           
  6075                           ;Usuaris.c: 151:     j = 0;
  6076  000A56  6A29               	clrf	_j^0,c
  6077                           
  6078                           ;Usuaris.c: 152:    }
  6079  000A58  0012               	return	
  6080  000A5A                     l766:
  6081  000A5A  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6082  000A5C  D004               	goto	l768
  6083                           
  6084                           ;Usuaris.c: 154:     usuariLoguejat = -1;
  6085  000A5E  6866               	setf	_usuariLoguejat^0,c
  6086  000A60                     l5877:
  6087                           
  6088                           ;Usuaris.c: 155:     state = 1;
  6089  000A60  0E01               	movlw	1
  6090  000A62  6E27               	movwf	UmotorUsers@state^0,c
  6091                           
  6092                           ;Usuaris.c: 156:    }
  6093  000A64  0C01               	retlw	1
  6094  000A66                     l768:
  6095  000A66  AA77               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6096  000A68  D00B               	goto	l770
  6097                           
  6098                           ;Usuaris.c: 158:     if(numUsuaris != 8) numUsuaris++;
  6099  000A6A  0E08               	movlw	8
  6100  000A6C  182D               	xorwf	_numUsuaris^0,w,c
  6101  000A6E  E001               	bz	l5883
  6102  000A70  2A2D               	incf	_numUsuaris^0,f,c
  6103  000A72                     l5883:
  6104                           
  6105                           ;Usuaris.c: 160:     escriureCharEEPROM(numUsuaris,0);
  6106  000A72  6A4A               	clrf	escriureCharEEPROM@pos^0,c
  6107  000A74  502D               	movf	_numUsuaris^0,w,c
  6108  000A76  EC45  F00D         	call	_escriureCharEEPROM
  6109  000A7A                     l5885:
  6110                           
  6111                           ;Usuaris.c: 161:     state = 2;
  6112  000A7A  0E02               	movlw	2
  6113  000A7C  6E27               	movwf	UmotorUsers@state^0,c
  6114                           
  6115                           ;Usuaris.c: 162:    }
  6116  000A7E  0C02               	retlw	2
  6117  000A80                     l770:
  6118  000A80  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6119  000A82  D015               	goto	l773
  6120                           
  6121                           ;Usuaris.c: 164:     arrayShowUsers[0] = usuariLoguejat;
  6122  000A84  C066  F001         	movff	_usuariLoguejat,_arrayShowUsers
  6123                           
  6124                           ;Usuaris.c: 165:     arrayShowUsers[1] = -1;
  6125  000A88  6802               	setf	(_arrayShowUsers+1)^0,c
  6126                           
  6127                           ;Usuaris.c: 166:     arrayShowUsers[2] = -1;
  6128  000A8A  6803               	setf	(_arrayShowUsers+2)^0,c
  6129                           
  6130                           ;Usuaris.c: 167:     arrayShowUsers[3] = -1;
  6131  000A8C  6804               	setf	(_arrayShowUsers+3)^0,c
  6132                           
  6133                           ;Usuaris.c: 168:     arrayShowUsers[4] = -1;
  6134  000A8E  6805               	setf	(_arrayShowUsers+4)^0,c
  6135                           
  6136                           ;Usuaris.c: 169:     arrayShowUsers[5] = -1;
  6137  000A90  6806               	setf	(_arrayShowUsers+5)^0,c
  6138                           
  6139                           ;Usuaris.c: 170:     arrayShowUsers[6] = -1;
  6140  000A92  6807               	setf	(_arrayShowUsers+6)^0,c
  6141                           
  6142                           ;Usuaris.c: 171:     arrayShowUsers[7] = -1;
  6143  000A94  6808               	setf	(_arrayShowUsers+7)^0,c
  6144                           
  6145                           ;Usuaris.c: 172:     i = 1;
  6146  000A96  0E01               	movlw	1
  6147  000A98  6E2A               	movwf	_i^0,c
  6148                           
  6149                           ;Usuaris.c: 173:     if(numUsuaris < 7) {
  6150  000A9A  0E07               	movlw	7
  6151  000A9C  602D               	cpfslt	_numUsuaris^0,c
  6152  000A9E  D002               	goto	l774
  6153  000AA0                     u6270:
  6154                           
  6155                           ;Usuaris.c: 174:       j = 0;
  6156  000AA0  6A29               	clrf	_j^0,c
  6157                           
  6158                           ;Usuaris.c: 175:     }
  6159  000AA2  D002               	goto	l5895
  6160  000AA4                     l774:
  6161                           
  6162                           ;Usuaris.c: 177:       j = indexNextUserStruct;
  6163  000AA4  C02B  F029         	movff	_indexNextUserStruct,_j
  6164  000AA8                     l5895:
  6165                           
  6166                           ;Usuaris.c: 179:     state = 5;
  6167  000AA8  0E05               	movlw	5
  6168  000AAA  6E27               	movwf	UmotorUsers@state^0,c
  6169                           
  6170                           ;Usuaris.c: 180:    }
  6171  000AAC  0C05               	retlw	5
  6172  000AAE                     l773:
  6173  000AAE  A677               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6174  000AB0  0012               	return	
  6175                           
  6176                           ;Usuaris.c: 182:     do_updateScore = 0;
  6177  000AB2  9677               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6178  000AB4                     l5899:
  6179                           
  6180                           ;Usuaris.c: 183:     state = 6;
  6181  000AB4  0E06               	movlw	6
  6182  000AB6  6E27               	movwf	UmotorUsers@state^0,c
  6183  000AB8  0C06               	retlw	6
  6184  000ABA                     l5901:
  6185                           
  6186                           ;Usuaris.c: 187:    if (i < numUsuaris) {
  6187  000ABA  502D               	movf	_numUsuaris^0,w,c
  6188  000ABC  5C2A               	subwf	_i^0,w,c
  6189  000ABE  E212               	bc	l5911
  6190                           
  6191                           ;Usuaris.c: 188:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6192  000AC0  0EAB               	movlw	low _tmpUsername
  6193  000AC2  6E4A               	movwf	compareStrings@a^0,c
  6194  000AC4  502A               	movf	_i^0,w,c
  6195  000AC6  0D12               	mullw	18
  6196  000AC8  0E00               	movlw	low _usuaris
  6197  000ACA  24F3               	addwf	243,w,c
  6198  000ACC  6E4B               	movwf	compareStrings@b^0,c
  6199  000ACE  0E01               	movlw	high _usuaris
  6200  000AD0  20F4               	addwfc	prodh,w,c
  6201  000AD2  6E4C               	movwf	(compareStrings@b+1)^0,c
  6202  000AD4  EC73  F00C         	call	_compareStrings	;wreg free
  6203  000AD8  0900               	iorlw	0
  6204  000ADA  E102               	bnz	l5907
  6205                           
  6206                           ;Usuaris.c: 189:      usuariLoguejat = i;
  6207  000ADC  C02A  F066         	movff	_i,_usuariLoguejat
  6208  000AE0                     l5907:
  6209                           
  6210                           ;Usuaris.c: 192:     i++;
  6211  000AE0  2A2A               	incf	_i^0,f,c
  6212  000AE2  D7BE               	goto	l5877
  6213  000AE4                     l5911:
  6214  000AE4  502D               	movf	_numUsuaris^0,w,c
  6215  000AE6  182A               	xorwf	_i^0,w,c
  6216  000AE8  A4D8               	btfss	status,2,c
  6217  000AEA  0012               	return	
  6218                           
  6219                           ;Usuaris.c: 196:     do_check_exists = 0;
  6220  000AEC  9C77               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6221                           
  6222                           ;Usuaris.c: 197:     state = 0;
  6223  000AEE  6A27               	clrf	UmotorUsers@state^0,c
  6224  000AF0  0012               	return	
  6225  000AF2                     l5915:
  6226                           
  6227                           ;Usuaris.c: 201:    if (i < 9) {
  6228  000AF2  0E09               	movlw	9
  6229  000AF4  602A               	cpfslt	_i^0,c
  6230  000AF6  D00D               	goto	l5927
  6231                           
  6232                           ;Usuaris.c: 202:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6233  000AF8  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6234  000AFC  502A               	movf	_i^0,w,c
  6235  000AFE  0FAB               	addlw	low _tmpUsername
  6236  000B00  D8DF               	call	PL78	;call to abstracted procedure
  6237  000B02  EC45  F00D         	call	_escriureCharEEPROM
  6238                           
  6239                           ;Usuaris.c: 203:     indexNextUser++;
  6240  000B06  2A2C               	incf	_indexNextUser^0,f,c
  6241                           
  6242                           ;Usuaris.c: 204:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6243  000B08  502A               	movf	_i^0,w,c
  6244  000B0A  0FAB               	addlw	low _tmpUsername
  6245  000B0C  D8D0               	call	PL20	;call to abstracted procedure
  6246                           
  6247                           ;Usuaris.c: 205:     i++;
  6248  000B0E  D8BA               	call	PL14	;call to abstracted procedure
  6249  000B10  D7B4               	goto	l5885
  6250  000B12                     l5927:
  6251  000B12  0E08               	movlw	8
  6252  000B14  642A               	cpfsgt	_i^0,c
  6253  000B16  0C08               	retlw	8
  6254                           
  6255                           ;Usuaris.c: 209:     i = 0;
  6256  000B18  6A2A               	clrf	_i^0,c
  6257  000B1A                     l5931:
  6258                           
  6259                           ;Usuaris.c: 210:     state = 3;
  6260  000B1A  0E03               	movlw	3
  6261  000B1C  6E27               	movwf	UmotorUsers@state^0,c
  6262  000B1E  0C03               	retlw	3
  6263  000B20                     l5933:
  6264                           
  6265                           ;Usuaris.c: 214:    if (i < 9) {
  6266  000B20  0E09               	movlw	9
  6267  000B22  602A               	cpfslt	_i^0,c
  6268  000B24  D011               	goto	l5945
  6269                           
  6270                           ;Usuaris.c: 215:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6271  000B26  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6272  000B2A  502A               	movf	_i^0,w,c
  6273  000B2C  0FA2               	addlw	low _tmpPassword
  6274  000B2E  D8C8               	call	PL78	;call to abstracted procedure
  6275  000B30  EC45  F00D         	call	_escriureCharEEPROM
  6276                           
  6277                           ;Usuaris.c: 216:     indexNextUser++;
  6278  000B34  2A2C               	incf	_indexNextUser^0,f,c
  6279                           
  6280                           ;Usuaris.c: 217:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6281  000B36  502A               	movf	_i^0,w,c
  6282  000B38  0FA2               	addlw	low _tmpPassword
  6283  000B3A  D8B9               	call	PL20	;call to abstracted procedure
  6284  000B3C  0E09               	movlw	9
  6285  000B3E  264F               	addwf	??_UmotorUsers^0,f,c
  6286  000B40  0E00               	movlw	0
  6287  000B42  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6288                           
  6289                           ;Usuaris.c: 218:     i++;
  6290  000B44  D89F               	call	PL14	;call to abstracted procedure
  6291  000B46  D7E9               	goto	l5931
  6292  000B48                     l5945:
  6293  000B48  0E08               	movlw	8
  6294  000B4A  642A               	cpfsgt	_i^0,c
  6295  000B4C  0C08               	retlw	8
  6296                           
  6297                           ;Usuaris.c: 222:     do_register = 0;
  6298  000B4E  9A77               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6299                           
  6300                           ;Usuaris.c: 223:     if(indexNextUser == 159) indexNextUser = 16;
  6301  000B50  0E9F               	movlw	159
  6302  000B52  182C               	xorwf	_indexNextUser^0,w,c
  6303  000B54  E102               	bnz	l5953
  6304  000B56  0E10               	movlw	16
  6305  000B58  6E2C               	movwf	_indexNextUser^0,c
  6306  000B5A                     l5953:
  6307                           
  6308                           ;Usuaris.c: 224:     indexNextUserStruct++;
  6309  000B5A  2A2B               	incf	_indexNextUserStruct^0,f,c
  6310                           
  6311                           ;Usuaris.c: 225:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6312  000B5C  0E08               	movlw	8
  6313  000B5E  182B               	xorwf	_indexNextUserStruct^0,w,c
  6314  000B60  E101               	bnz	l5959
  6315  000B62  6A2B               	clrf	_indexNextUserStruct^0,c
  6316  000B64                     l5959:
  6317                           
  6318                           ;Usuaris.c: 226:     escriureCharEEPROM(indexNextUser,1);
  6319  000B64  0E01               	movlw	1
  6320  000B66  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6321  000B68  502C               	movf	_indexNextUser^0,w,c
  6322  000B6A  EC45  F00D         	call	_escriureCharEEPROM
  6323  000B6E                     l5961:
  6324                           
  6325                           ;Usuaris.c: 227:     state = 0;
  6326  000B6E  6A27               	clrf	UmotorUsers@state^0,c
  6327  000B70  0012               	return	
  6328  000B72                     l5963:
  6329                           
  6330                           ;Usuaris.c: 231:    if (i < numUsuaris) {
  6331  000B72  502D               	movf	_numUsuaris^0,w,c
  6332  000B74  5C2A               	subwf	_i^0,w,c
  6333  000B76  E217               	bc	l5979
  6334                           
  6335                           ;Usuaris.c: 232:     if(j != usuariLoguejat){
  6336  000B78  C066  F04F         	movff	_usuariLoguejat,??_UmotorUsers
  6337  000B7C  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6338  000B7E  BE4F               	btfsc	??_UmotorUsers^0,7,c
  6339  000B80  0650               	decf	(??_UmotorUsers+1)^0,f,c
  6340  000B82  5029               	movf	_j^0,w,c
  6341  000B84  184F               	xorwf	??_UmotorUsers^0,w,c
  6342  000B86  1050               	iorwf	(??_UmotorUsers+1)^0,w,c
  6343  000B88  E008               	bz	l5971
  6344                           
  6345                           ;Usuaris.c: 233:       arrayShowUsers[i] = j;
  6346  000B8A  502A               	movf	_i^0,w,c
  6347  000B8C  0F01               	addlw	low _arrayShowUsers
  6348  000B8E  6ED9               	movwf	fsr2l,c
  6349  000B90  6ADA               	clrf	fsr2h,c
  6350  000B92  C029  FFDF         	movff	_j,indf2
  6351                           
  6352                           ;Usuaris.c: 234:      i++;
  6353  000B96  2A2A               	incf	_i^0,f,c
  6354                           
  6355                           ;Usuaris.c: 235:     }else{
  6356  000B98  D001               	goto	l797
  6357  000B9A                     l5971:
  6358                           
  6359                           ;Usuaris.c: 236:       j++;
  6360  000B9A  2A29               	incf	_j^0,f,c
  6361  000B9C                     l797:
  6362                           
  6363                           ;Usuaris.c: 238:     j++;
  6364  000B9C  2A29               	incf	_j^0,f,c
  6365                           
  6366                           ;Usuaris.c: 239:     if(j > 7) j=0;
  6367  000B9E  0E07               	movlw	7
  6368  000BA0  6429               	cpfsgt	_j^0,c
  6369  000BA2  D782               	goto	l5895
  6370  000BA4  D77D               	goto	u6270
  6371  000BA6                     l5979:
  6372  000BA6  502D               	movf	_numUsuaris^0,w,c
  6373  000BA8  182A               	xorwf	_i^0,w,c
  6374  000BAA  A4D8               	btfss	status,2,c
  6375  000BAC  0012               	return	
  6376                           
  6377                           ;Usuaris.c: 243:     do_showUsers = 0;
  6378  000BAE  9877               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6379                           
  6380                           ;Usuaris.c: 244:     state = 0;
  6381  000BB0  6A27               	clrf	UmotorUsers@state^0,c
  6382  000BB2  0012               	return	
  6383  000BB4                     l5983:
  6384                           
  6385                           ;Usuaris.c: 248:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6386  000BB4  0E05               	movlw	5
  6387  000BB6  602A               	cpfslt	_i^0,c
  6388  000BB8  D005               	goto	l5991
  6389  000BBA  D872               	call	PL16	;call to abstracted procedure
  6390  000BBC  28DE               	incf	postinc2,w,c
  6391  000BBE  E002               	bz	l5991
  6392                           
  6393                           ;Usuaris.c: 249:     i++;
  6394  000BC0  2A2A               	incf	_i^0,f,c
  6395  000BC2  D778               	goto	l5899
  6396  000BC4                     l5991:
  6397  000BC4  0E05               	movlw	5
  6398  000BC6  602A               	cpfslt	_i^0,c
  6399  000BC8  D006               	goto	l5997
  6400  000BCA  D86A               	call	PL16	;call to abstracted procedure
  6401  000BCC  28DE               	incf	postinc2,w,c
  6402  000BCE  E103               	bnz	l5997
  6403  000BD0                     u6450:
  6404                           
  6405                           ;Usuaris.c: 253:     state = 7;
  6406  000BD0  0E07               	movlw	7
  6407  000BD2  6E27               	movwf	UmotorUsers@state^0,c
  6408                           
  6409                           ;Usuaris.c: 254:    }
  6410  000BD4  0C07               	retlw	7
  6411  000BD6                     l5997:
  6412  000BD6  0E04               	movlw	4
  6413  000BD8  642A               	cpfsgt	_i^0,c
  6414  000BDA  0C04               	retlw	4
  6415                           
  6416                           ;Usuaris.c: 256:     i = 0;
  6417  000BDC  6A2A               	clrf	_i^0,c
  6418  000BDE                     l6001:
  6419                           
  6420                           ;Usuaris.c: 257:     state = 8;
  6421  000BDE  0E08               	movlw	8
  6422  000BE0  6E27               	movwf	UmotorUsers@state^0,c
  6423  000BE2  0C08               	retlw	8
  6424  000BE4                     l6003:
  6425                           
  6426                           ;Usuaris.c: 261:    puntuacions[i].score = scoreUsr;
  6427  000BE4  D848               	call	PL10	;call to abstracted procedure
  6428  000BE6  C028  FFDF         	movff	_scoreUsr,indf2
  6429                           
  6430                           ;Usuaris.c: 262:    puntuacions[i].indexStruct = usuariLoguejat;
  6431  000BEA  D85A               	call	PL16	;call to abstracted procedure
  6432  000BEC  C066  FFDF         	movff	_usuariLoguejat,indf2
  6433                           
  6434                           ;Usuaris.c: 263:    i = i+i;
  6435  000BF0  0E02               	movlw	2
  6436  000BF2  022A               	mulwf	_i^0,c
  6437  000BF4  50F3               	movf	prodl,w,c
  6438  000BF6  6E2A               	movwf	_i^0,c
  6439                           
  6440                           ;Usuaris.c: 264:    escriureCharEEPROM(usuariLoguejat,200+i);
  6441  000BF8  502A               	movf	_i^0,w,c
  6442  000BFA  0FC8               	addlw	200
  6443  000BFC  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6444  000BFE  5066               	movf	_usuariLoguejat^0,w,c
  6445  000C00  EC45  F00D         	call	_escriureCharEEPROM
  6446                           
  6447                           ;Usuaris.c: 265:    i++;
  6448  000C04  2A2A               	incf	_i^0,f,c
  6449                           
  6450                           ;Usuaris.c: 266:    escriureCharEEPROM(scoreUsr,200+i);
  6451  000C06  502A               	movf	_i^0,w,c
  6452  000C08  0FC8               	addlw	200
  6453  000C0A  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6454  000C0C  5028               	movf	_scoreUsr^0,w,c
  6455  000C0E  EC45  F00D         	call	_escriureCharEEPROM
  6456  000C12  D7AD               	goto	l5961
  6457  000C14                     l6015:
  6458                           
  6459                           ;Usuaris.c: 270:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6460  000C14  D830               	call	PL10	;call to abstracted procedure
  6461  000C16  5028               	movf	_scoreUsr^0,w,c
  6462  000C18  5CDE               	subwf	postinc2,w,c
  6463  000C1A  E305               	bnc	l6023
  6464  000C1C  0E05               	movlw	5
  6465  000C1E  602A               	cpfslt	_i^0,c
  6466  000C20  D002               	goto	l6023
  6467                           
  6468                           ;Usuaris.c: 271:     i++;
  6469  000C22  2A2A               	incf	_i^0,f,c
  6470  000C24  D7DC               	goto	l6001
  6471  000C26                     l6023:
  6472  000C26  0E04               	movlw	4
  6473  000C28  642A               	cpfsgt	_i^0,c
  6474  000C2A  D001               	goto	l6027
  6475  000C2C  D7A0               	goto	l5961
  6476  000C2E                     l6027:
  6477  000C2E  D823               	call	PL10	;call to abstracted procedure
  6478  000C30  5028               	movf	_scoreUsr^0,w,c
  6479  000C32  5CDE               	subwf	postinc2,w,c
  6480  000C34  B0D8               	btfsc	status,0,c
  6481  000C36  0012               	return	
  6482  000C38  0E05               	movlw	5
  6483  000C3A  602A               	cpfslt	_i^0,c
  6484  000C3C  0C05               	retlw	5
  6485  000C3E  D7C8               	goto	u6450
  6486  000C40                     l6035:
  6487  000C40  5027               	movf	UmotorUsers@state^0,w,c
  6488  000C42  6E4F               	movwf	??_UmotorUsers^0,c
  6489  000C44  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6490                           
  6491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6492                           ; Switch size 1, requested type "space"
  6493                           ; Number of cases is 1, Range of values is 0 to 0
  6494                           ; switch strategies available:
  6495                           ; Name         Instructions Cycles
  6496                           ; simple_byte            4     3 (average)
  6497                           ;	Chosen strategy is simple_byte
  6498  000C46  5050               	movf	(??_UmotorUsers+1)^0,w,c
  6499  000C48  A4D8               	btfss	status,2,c
  6500  000C4A  0012               	return	
  6501                           
  6502                           ; Switch size 1, requested type "space"
  6503                           ; Number of cases is 8, Range of values is 0 to 8
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte           25    13 (average)
  6507                           ;	Chosen strategy is simple_byte
  6508  000C4C  504F               	movf	??_UmotorUsers^0,w,c
  6509  000C4E  E101 D6FB          	bz	l765
  6510  000C52  0A01               	xorlw	1	; case 1
  6511  000C54  E101 D731          	bz	l5901
  6512  000C58  0A03               	xorlw	3	; case 2
  6513  000C5A  E101 D74A          	bz	l5915
  6514  000C5E  0A01               	xorlw	1	; case 3
  6515  000C60  E101 D75E          	bz	l5933
  6516  000C64  0A06               	xorlw	6	; case 5
  6517  000C66  E085               	bz	l5963
  6518  000C68  0A03               	xorlw	3	; case 6
  6519  000C6A  E0A4               	bz	l5983
  6520  000C6C  0A01               	xorlw	1	; case 7
  6521  000C6E  E0BA               	bz	l6003
  6522  000C70  0A0F               	xorlw	15	; case 8
  6523  000C72  E0D0               	bz	l6015
  6524  000C74  0012               	return		;funcret
  6525  000C76                     __end_of_UmotorUsers:
  6526                           	callstack 0
  6527  000C76                     PL10:
  6528                           	callstack 27
  6529  000C76  502A               	movf	_i^0,w,c
  6530  000C78  0D02               	mullw	2
  6531  000C7A  50F3               	movf	243,w,c
  6532  000C7C  0F99               	addlw	low (_puntuacions+1)
  6533  000C7E  6ED9               	movwf	fsr2l,c
  6534  000C80  6ADA               	clrf	fsr2h,c
  6535  000C82  0012               	return	
  6536  000C84                     __end_ofPL10:
  6537                           	callstack 0
  6538  000C84                     PL14:
  6539                           	callstack 27
  6540  000C84  50F3               	movf	243,w,c
  6541  000C86  264F               	addwf	??_UmotorUsers^0,f,c
  6542  000C88  50F4               	movf	244,w,c
  6543  000C8A  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6544  000C8C  502A               	movf	_i^0,w,c
  6545  000C8E  244F               	addwf	??_UmotorUsers^0,w,c
  6546  000C90  6EE1               	movwf	fsr1l,c
  6547  000C92  0E00               	movlw	0
  6548  000C94  2050               	addwfc	(??_UmotorUsers+1)^0,w,c
  6549  000C96  6EE2               	movwf	fsr1h,c
  6550  000C98  CFDF FFE7          	movff	indf2,indf1
  6551  000C9C  2A2A               	incf	_i^0,f,c
  6552  000C9E  0012               	return	
  6553  000CA0                     __end_ofPL14:
  6554                           	callstack 0
  6555  000CA0                     PL16:
  6556                           	callstack 27
  6557  000CA0  502A               	movf	_i^0,w,c
  6558  000CA2  0D02               	mullw	2
  6559  000CA4  50F3               	movf	243,w,c
  6560  000CA6  0F98               	addlw	low _puntuacions
  6561  000CA8  6ED9               	movwf	fsr2l,c
  6562  000CAA  6ADA               	clrf	fsr2h,c
  6563  000CAC  0012               	return	
  6564  000CAE                     __end_ofPL16:
  6565                           	callstack 0
  6566  000CAE                     PL20:
  6567                           	callstack 27
  6568  000CAE  6ED9               	movwf	fsr2l,c
  6569  000CB0  6ADA               	clrf	fsr2h,c
  6570  000CB2  502B               	movf	_indexNextUserStruct^0,w,c
  6571  000CB4  0D12               	mullw	18
  6572  000CB6  0E00               	movlw	low _usuaris
  6573  000CB8  6E4F               	movwf	??_UmotorUsers^0,c
  6574  000CBA  0E01               	movlw	high _usuaris
  6575  000CBC  6E50               	movwf	(??_UmotorUsers+1)^0,c
  6576  000CBE  0012               	return	
  6577  000CC0                     __end_ofPL20:
  6578                           	callstack 0
  6579  000CC0                     PL78:
  6580                           	callstack 27
  6581  000CC0  6ED9               	movwf	fsr2l,c
  6582  000CC2  6ADA               	clrf	fsr2h,c
  6583  000CC4  50DF               	movf	indf2,w,c
  6584  000CC6  0012               	return	
  6585  000CC8                     __end_ofPL78:
  6586                           	callstack 0
  6587                           
  6588 ;; *************** function _escriureCharEEPROM *****************
  6589 ;; Defined at:
  6590 ;;		line 64 in file "Usuaris.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  c               1    wreg     unsigned char 
  6593 ;;  pos             1    5[COMRAM] unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  c               1    6[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1
  6605 ;;      Params:         1       0       0
  6606 ;;      Locals:         1       0       0
  6607 ;;      Temps:          0       0       0
  6608 ;;      Totals:         2       0       0
  6609 ;;Total ram usage:        2 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; Hardware stack levels required when called: 2
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_UmotorUsers
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text55
  6620  001A8A                     __ptext55:
  6621                           	callstack 0
  6622  001A8A                     _escriureCharEEPROM:
  6623                           	callstack 27
  6624                           
  6625                           ;incstack = 0
  6626                           ;escriureCharEEPROM@c stored from wreg
  6627  001A8A  6E4B               	movwf	escriureCharEEPROM@c^0,c
  6628                           
  6629                           ;Usuaris.c: 65:     EEADR = pos;
  6630  001A8C  C04A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6631                           
  6632                           ;Usuaris.c: 66:     EEDATA = c;
  6633  001A90  C04B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6634                           
  6635                           ;Usuaris.c: 67:     EECON1bits.EEPGD = 0;
  6636  001A94  9EA6               	bcf	166,7,c	;volsfr
  6637                           
  6638                           ;Usuaris.c: 68:     EECON1bits.CFGS = 0;
  6639  001A96  9CA6               	bcf	166,6,c	;volsfr
  6640                           
  6641                           ;Usuaris.c: 69:     EECON1bits.WREN = 1;
  6642  001A98  84A6               	bsf	166,2,c	;volsfr
  6643                           
  6644                           ;Usuaris.c: 70:     INTCONbits.GIE = 0;
  6645  001A9A  9EF2               	bcf	242,7,c	;volatile
  6646                           
  6647                           ;Usuaris.c: 71:     EECON2 = 85;
  6648  001A9C  0E55               	movlw	85
  6649  001A9E  6EA7               	movwf	167,c	;volsfr
  6650                           
  6651                           ;Usuaris.c: 72:     EECON2 = 170;
  6652  001AA0  0EAA               	movlw	170
  6653  001AA2  6EA7               	movwf	167,c	;volsfr
  6654                           
  6655                           ;Usuaris.c: 73:     EECON1bits.WR = 1;
  6656  001AA4  82A6               	bsf	166,1,c	;volsfr
  6657  001AA6                     l722:
  6658  001AA6  B2A6               	btfsc	166,1,c	;volsfr
  6659  001AA8  D7FE               	goto	l722
  6660                           
  6661                           ;Usuaris.c: 75:     INTCONbits.GIE = 1;
  6662  001AAA  8EF2               	bsf	242,7,c	;volatile
  6663                           
  6664                           ;Usuaris.c: 76:     EECON1bits.WREN = 0;
  6665  001AAC  94A6               	bcf	166,2,c	;volsfr
  6666  001AAE  0012               	return		;funcret
  6667  001AB0                     __end_of_escriureCharEEPROM:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _compareStrings *****************
  6671 ;; Defined at:
  6672 ;;		line 128 in file "Usuaris.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6675 ;;		 -> tmpUsername(9), 
  6676 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6677 ;;		 -> usuaris.username(9), usuaris(144), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      unsigned char 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1
  6689 ;;      Params:         3       0       0
  6690 ;;      Locals:         0       0       0
  6691 ;;      Temps:          2       0       0
  6692 ;;      Totals:         5       0       0
  6693 ;;Total ram usage:        5 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 2
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_UmotorUsers
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text56
  6704  0018E6                     __ptext56:
  6705                           	callstack 0
  6706  0018E6                     _compareStrings:
  6707                           	callstack 27
  6708                           
  6709                           ;Usuaris.c: 129:     while (*a){
  6710                           
  6711                           ;incstack = 0
  6712  0018E6  D00A               	goto	l4463
  6713  0018E8                     l4457:
  6714                           
  6715                           ;Usuaris.c: 130:         if (*a != *b)break;
  6716  0018E8  D813               	call	PL46	;call to abstracted procedure
  6717  0018EA  504A               	movf	compareStrings@a^0,w,c
  6718  0018EC  6EE1               	movwf	fsr1l,c
  6719  0018EE  6AE2               	clrf	fsr1h,c
  6720  0018F0  50DE               	movf	postinc2,w,c
  6721  0018F2  18E6               	xorwf	postinc1,w,c
  6722  0018F4  E105               	bnz	u3850
  6723                           
  6724                           ;Usuaris.c: 131:         a++;
  6725  0018F6  2A4A               	incf	compareStrings@a^0,f,c
  6726                           
  6727                           ;Usuaris.c: 132:         b++;
  6728  0018F8  4A4B               	infsnz	compareStrings@b^0,f,c
  6729  0018FA  2A4C               	incf	(compareStrings@b+1)^0,f,c
  6730  0018FC                     l4463:
  6731                           
  6732                           ;Usuaris.c: 129:     while (*a){
  6733  0018FC  D80E               	call	PL58	;call to abstracted procedure
  6734  0018FE  E1F4               	bnz	l4457
  6735  001900                     u3850:
  6736                           
  6737                           ;Usuaris.c: 134:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6738  001900  D807               	call	PL46	;call to abstracted procedure
  6739  001902  50DF               	movf	indf2,w,c
  6740  001904  6E4D               	movwf	??_compareStrings^0,c
  6741  001906  D809               	call	PL58	;call to abstracted procedure
  6742  001908  6E4E               	movwf	(??_compareStrings+1)^0,c
  6743  00190A  504D               	movf	??_compareStrings^0,w,c
  6744  00190C  5C4E               	subwf	(??_compareStrings+1)^0,w,c
  6745  00190E  0012               	return		;funcret
  6746  001910                     __end_of_compareStrings:
  6747                           	callstack 0
  6748  001910                     PL46:
  6749                           	callstack 27
  6750  001910  C04B  FFD9         	movff	compareStrings@b,fsr2l
  6751  001914  C04C  FFDA         	movff	compareStrings@b+1,fsr2h
  6752  001918  0012               	return	
  6753  00191A                     __end_ofPL46:
  6754                           	callstack 0
  6755  00191A                     PL58:
  6756                           	callstack 27
  6757  00191A  504A               	movf	compareStrings@a^0,w,c
  6758  00191C  6ED9               	movwf	fsr2l,c
  6759  00191E  6ADA               	clrf	fsr2h,c
  6760  001920  50DF               	movf	indf2,w,c
  6761  001922  0012               	return	
  6762  001924                     __end_ofPL58:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _Uinit *****************
  6766 ;; Defined at:
  6767 ;;		line 85 in file "Usuaris.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  k               1   12[COMRAM] unsigned char 
  6772 ;;  k               1   11[COMRAM] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1
  6782 ;;      Params:         0       0       0
  6783 ;;      Locals:         2       0       0
  6784 ;;      Temps:          2       0       0
  6785 ;;      Totals:         4       0       0
  6786 ;;Total ram usage:        4 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 3
  6789 ;; This function calls:
  6790 ;;		___lbdiv
  6791 ;;		_llegirCharEEPROM
  6792 ;; This function is called by:
  6793 ;;		_main
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text57
  6798  0011B8                     __ptext57:
  6799                           	callstack 0
  6800  0011B8                     _Uinit:
  6801                           	callstack 27
  6802                           
  6803                           ;Usuaris.c: 89:     i = 0;
  6804                           
  6805                           ;incstack = 0
  6806  0011B8  6A2A               	clrf	_i^0,c
  6807                           
  6808                           ;Usuaris.c: 94:     numUsuaris = llegirCharEEPROM(0);
  6809  0011BA  0E00               	movlw	0
  6810  0011BC  EC2E  F00E         	call	_llegirCharEEPROM
  6811  0011C0  6E2D               	movwf	_numUsuaris^0,c
  6812                           
  6813                           ;Usuaris.c: 96:     if(numUsuaris > 8) numUsuaris = 0;
  6814  0011C2  0E08               	movlw	8
  6815  0011C4  642D               	cpfsgt	_numUsuaris^0,c
  6816  0011C6  D001               	goto	l4783
  6817  0011C8  6A2D               	clrf	_numUsuaris^0,c
  6818  0011CA                     l4783:
  6819                           
  6820                           ;Usuaris.c: 100:     i++;
  6821  0011CA  2A2A               	incf	_i^0,f,c
  6822                           
  6823                           ;Usuaris.c: 101:     indexNextUser = llegirCharEEPROM(1);
  6824  0011CC  0E01               	movlw	1
  6825  0011CE  EC2E  F00E         	call	_llegirCharEEPROM
  6826  0011D2  6E2C               	movwf	_indexNextUser^0,c
  6827                           
  6828                           ;Usuaris.c: 102:     if(indexNextUser == 255) indexNextUser = 2;
  6829  0011D4  282C               	incf	_indexNextUser^0,w,c
  6830  0011D6  E102               	bnz	l4791
  6831  0011D8  0E02               	movlw	2
  6832  0011DA  6E2C               	movwf	_indexNextUser^0,c
  6833  0011DC                     l4791:
  6834                           
  6835                           ;Usuaris.c: 103:     indexNextUserStruct = indexNextUser/18;
  6836  0011DC  0E12               	movlw	18
  6837  0011DE  6E4A               	movwf	___lbdiv@divisor^0,c
  6838  0011E0  502C               	movf	_indexNextUser^0,w,c
  6839  0011E2  ECE7  F00C         	call	___lbdiv
  6840  0011E6  6E2B               	movwf	_indexNextUserStruct^0,c
  6841                           
  6842                           ;Usuaris.c: 104:     i++;
  6843  0011E8  2A2A               	incf	_i^0,f,c
  6844                           
  6845                           ;Usuaris.c: 105:     for(j = 0;j<numUsuaris;j++){
  6846  0011EA  6A29               	clrf	_j^0,c
  6847  0011EC  D01F               	goto	l4823
  6848  0011EE                     l734:
  6849                           
  6850                           ;Usuaris.c: 106:         for(unsigned char k = 0; k<9; k++){
  6851  0011EE  6A50               	clrf	Uinit@k^0,c
  6852  0011F0                     l4801:
  6853                           
  6854                           ;Usuaris.c: 107:             usuaris[j].username[k] = llegirCharEEPROM(i);
  6855  0011F0  D83B               	call	PL34	;call to abstracted procedure
  6856  0011F2  D848               	call	PL74	;call to abstracted procedure
  6857  0011F4  5050               	movf	Uinit@k^0,w,c
  6858  0011F6  D83F               	call	PL40	;call to abstracted procedure
  6859  0011F8  EC2E  F00E         	call	_llegirCharEEPROM
  6860  0011FC  6EDF               	movwf	indf2,c
  6861                           
  6862                           ;Usuaris.c: 108:             i++;
  6863  0011FE  2A2A               	incf	_i^0,f,c
  6864                           
  6865                           ;Usuaris.c: 109:         }
  6866  001200  2A50               	incf	Uinit@k^0,f,c
  6867  001202  0E08               	movlw	8
  6868  001204  6450               	cpfsgt	Uinit@k^0,c
  6869  001206  D7F4               	goto	l4801
  6870                           
  6871                           ;Usuaris.c: 110:         for(unsigned char k = 0; k<9;k++){
  6872  001208  6A51               	clrf	Uinit@k_1193^0,c
  6873  00120A                     l4813:
  6874                           
  6875                           ;Usuaris.c: 111:             usuaris[j].password[k] = llegirCharEEPROM(i);
  6876  00120A  D82E               	call	PL34	;call to abstracted procedure
  6877  00120C  0E09               	movlw	9
  6878  00120E  264E               	addwf	??_Uinit^0,f,c
  6879  001210  0E00               	movlw	0
  6880  001212  224F               	addwfc	(??_Uinit+1)^0,f,c
  6881  001214  D837               	call	PL74	;call to abstracted procedure
  6882  001216  5051               	movf	Uinit@k_1193^0,w,c
  6883  001218  D82E               	call	PL40	;call to abstracted procedure
  6884  00121A  EC2E  F00E         	call	_llegirCharEEPROM
  6885  00121E  6EDF               	movwf	indf2,c
  6886                           
  6887                           ;Usuaris.c: 112:             i++;
  6888  001220  2A2A               	incf	_i^0,f,c
  6889                           
  6890                           ;Usuaris.c: 113:         }
  6891  001222  2A51               	incf	Uinit@k_1193^0,f,c
  6892  001224  0E08               	movlw	8
  6893  001226  6451               	cpfsgt	Uinit@k_1193^0,c
  6894  001228  D7F0               	goto	l4813
  6895                           
  6896                           ;Usuaris.c: 114:     }
  6897  00122A  2A29               	incf	_j^0,f,c
  6898  00122C                     l4823:
  6899  00122C  502D               	movf	_numUsuaris^0,w,c
  6900  00122E  5C29               	subwf	_j^0,w,c
  6901  001230  E3DE               	bnc	l734
  6902                           
  6903                           ;Usuaris.c: 120:     puntuacions[0].indexStruct = -1;
  6904  001232  0100               	movlb	0	; () banked
  6905  001234  6998               	setf	_puntuacions& (0+255),b
  6906                           
  6907                           ;Usuaris.c: 121:     for(i = 0; i<5; i++){
  6908  001236  6A2A               	clrf	_i^0,c
  6909  001238                     l4825:
  6910  001238  0E04               	movlw	4
  6911  00123A  642A               	cpfsgt	_i^0,c
  6912  00123C  D001               	goto	l4829
  6913  00123E  0C04               	retlw	4
  6914  001240                     l4829:
  6915                           
  6916                           ;Usuaris.c: 122:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  6917  001240  EC50  F006         	call	PL16	;call to abstracted procedure
  6918  001244  502A               	movf	_i^0,w,c
  6919  001246  0D02               	mullw	2
  6920  001248  50F3               	movf	243,w,c
  6921  00124A  0FC8               	addlw	200
  6922  00124C  EC2E  F00E         	call	_llegirCharEEPROM
  6923  001250  6EDF               	movwf	indf2,c
  6924                           
  6925                           ;Usuaris.c: 123:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  6926  001252  EC3B  F006         	call	PL10	;call to abstracted procedure
  6927  001256  502A               	movf	_i^0,w,c
  6928  001258  0D02               	mullw	2
  6929  00125A  50F3               	movf	243,w,c
  6930  00125C  0FC9               	addlw	201
  6931  00125E  EC2E  F00E         	call	_llegirCharEEPROM
  6932  001262  6EDF               	movwf	indf2,c
  6933                           
  6934                           ;Usuaris.c: 124:     }
  6935  001264  2A2A               	incf	_i^0,f,c
  6936  001266  D7E8               	goto	l4825
  6937  001268                     __end_of_Uinit:
  6938                           	callstack 0
  6939  001268                     PL34:
  6940                           	callstack 27
  6941  001268  5029               	movf	_j^0,w,c
  6942  00126A  0D12               	mullw	18
  6943  00126C  0E00               	movlw	low _usuaris
  6944  00126E  6E4E               	movwf	??_Uinit^0,c
  6945  001270  0E01               	movlw	high _usuaris
  6946  001272  6E4F               	movwf	(??_Uinit+1)^0,c
  6947  001274  0012               	return	
  6948  001276                     __end_ofPL34:
  6949                           	callstack 0
  6950  001276                     PL40:
  6951                           	callstack 27
  6952  001276  244E               	addwf	??_Uinit^0,w,c
  6953  001278  6ED9               	movwf	fsr2l,c
  6954  00127A  0E00               	movlw	0
  6955  00127C  204F               	addwfc	(??_Uinit+1)^0,w,c
  6956  00127E  6EDA               	movwf	fsr2h,c
  6957  001280  502A               	movf	_i^0,w,c
  6958  001282  0012               	return	
  6959  001284                     __end_ofPL40:
  6960                           	callstack 0
  6961  001284                     PL74:
  6962                           	callstack 27
  6963  001284  50F3               	movf	243,w,c
  6964  001286  264E               	addwf	??_Uinit^0,f,c
  6965  001288  50F4               	movf	244,w,c
  6966  00128A  224F               	addwfc	(??_Uinit+1)^0,f,c
  6967  00128C  0012               	return	
  6968  00128E                     __end_ofPL74:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _llegirCharEEPROM *****************
  6972 ;; Defined at:
  6973 ;;		line 78 in file "Usuaris.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  pos             1    wreg     unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  pos             1    5[COMRAM] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      unsigned char 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1
  6987 ;;      Params:         0       0       0
  6988 ;;      Locals:         1       0       0
  6989 ;;      Temps:          0       0       0
  6990 ;;      Totals:         1       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 2
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_Uinit
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text58
  7002  001C5C                     __ptext58:
  7003                           	callstack 0
  7004  001C5C                     _llegirCharEEPROM:
  7005                           	callstack 27
  7006                           
  7007                           ;incstack = 0
  7008                           ;llegirCharEEPROM@pos stored from wreg
  7009  001C5C  6E4A               	movwf	llegirCharEEPROM@pos^0,c
  7010                           
  7011                           ;Usuaris.c: 79:     EEADR = pos;
  7012  001C5E  C04A  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7013                           
  7014                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  7015  001C62  9EA6               	bcf	166,7,c	;volsfr
  7016                           
  7017                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  7018  001C64  9CA6               	bcf	166,6,c	;volsfr
  7019                           
  7020                           ;Usuaris.c: 82:     EECON1bits.RD = 1;
  7021  001C66  80A6               	bsf	166,0,c	;volsfr
  7022                           
  7023                           ;Usuaris.c: 83:     return EEDATA;
  7024  001C68  50A8               	movf	168,w,c	;volatile
  7025  001C6A  0012               	return		;funcret
  7026  001C6C                     __end_of_llegirCharEEPROM:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function ___lbdiv *****************
  7030 ;; Defined at:
  7031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  dividend        1    wreg     unsigned char 
  7034 ;;  divisor         1    5[COMRAM] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  dividend        1    6[COMRAM] unsigned char 
  7037 ;;  quotient        1    8[COMRAM] unsigned char 
  7038 ;;  counter         1    7[COMRAM] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      unsigned char 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1
  7048 ;;      Params:         1       0       0
  7049 ;;      Locals:         3       0       0
  7050 ;;      Temps:          0       0       0
  7051 ;;      Totals:         4       0       0
  7052 ;;Total ram usage:        4 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 2
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_Uinit
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text59
  7063  0019CE                     __ptext59:
  7064                           	callstack 0
  7065  0019CE                     ___lbdiv:
  7066                           	callstack 27
  7067                           
  7068                           ;incstack = 0
  7069                           ;___lbdiv@dividend stored from wreg
  7070  0019CE  6E4B               	movwf	___lbdiv@dividend^0,c
  7071  0019D0  6A4D               	clrf	___lbdiv@quotient^0,c
  7072  0019D2  504A               	movf	___lbdiv@divisor^0,w,c
  7073  0019D4  E014               	bz	l4495
  7074  0019D6  0E01               	movlw	1
  7075  0019D8  6E4C               	movwf	___lbdiv@counter^0,c
  7076  0019DA  D003               	goto	l4483
  7077  0019DC                     l4479:
  7078  0019DC  90D8               	bcf	status,0,c
  7079  0019DE  364A               	rlcf	___lbdiv@divisor^0,f,c
  7080  0019E0  2A4C               	incf	___lbdiv@counter^0,f,c
  7081  0019E2                     l4483:
  7082  0019E2  AE4A               	btfss	___lbdiv@divisor^0,7,c
  7083  0019E4  D7FB               	goto	l4479
  7084  0019E6                     u3870:
  7085  0019E6  90D8               	bcf	status,0,c
  7086  0019E8  364D               	rlcf	___lbdiv@quotient^0,f,c
  7087  0019EA  504A               	movf	___lbdiv@divisor^0,w,c
  7088  0019EC  5C4B               	subwf	___lbdiv@dividend^0,w,c
  7089  0019EE  E303               	bnc	l4491
  7090  0019F0  504A               	movf	___lbdiv@divisor^0,w,c
  7091  0019F2  5E4B               	subwf	___lbdiv@dividend^0,f,c
  7092  0019F4  804D               	bsf	___lbdiv@quotient^0,0,c
  7093  0019F6                     l4491:
  7094  0019F6  90D8               	bcf	status,0,c
  7095  0019F8  324A               	rrcf	___lbdiv@divisor^0,f,c
  7096  0019FA  2E4C               	decfsz	___lbdiv@counter^0,f,c
  7097  0019FC  D7F4               	goto	u3870
  7098  0019FE                     l4495:
  7099  0019FE  504D               	movf	___lbdiv@quotient^0,w,c
  7100  001A00  0012               	return		;funcret
  7101  001A02                     __end_of___lbdiv:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _TiInitTimer *****************
  7105 ;; Defined at:
  7106 ;;		line 18 in file "TiTTimer.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1
  7120 ;;      Params:         0       0       0
  7121 ;;      Locals:         0       0       0
  7122 ;;      Temps:          0       0       0
  7123 ;;      Totals:         0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 2
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text60
  7135  001A62                     __ptext60:
  7136                           	callstack 0
  7137  001A62                     _TiInitTimer:
  7138                           	callstack 28
  7139                           
  7140                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7141                           
  7142                           ;incstack = 0
  7143  001A62  9ED0               	bcf	208,7,c	;volatile
  7144                           
  7145                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7146  001A64  8EF2               	bsf	242,7,c	;volatile
  7147                           
  7148                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7149  001A66  8CF2               	bsf	242,6,c	;volatile
  7150                           
  7151                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7152  001A68  8AF2               	bsf	242,5,c	;volatile
  7153                           
  7154                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7155  001A6A  94F2               	bcf	242,2,c	;volatile
  7156                           
  7157                           ;TiTTimer.c: 25:     T0CON = 136;
  7158  001A6C  0E88               	movlw	136
  7159  001A6E  6ED5               	movwf	213,c	;volatile
  7160                           
  7161                           ;TiTTimer.c: 27:     TMR0H = 223;
  7162                           
  7163                           ;TiTTimer.c: 28:     TMR0L = 148;
  7164  001A70  EC6E  F00C         	call	PL70	;call to abstracted procedure
  7165                           
  7166                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7167  001A74  8ED5               	bsf	213,7,c	;volatile
  7168                           
  7169                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7170  001A76  6A34               	clrf	_counter^0,c
  7171  001A78                     l4589:
  7172  001A78  0E07               	movlw	7
  7173  001A7A  6434               	cpfsgt	_counter^0,c
  7174  001A7C  D001               	goto	l4593
  7175  001A7E  0C07               	retlw	7
  7176  001A80                     l4593:
  7177                           
  7178                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7179  001A80  EC2A  F00D         	call	PL12	;call to abstracted procedure
  7180  001A84  6ADF               	clrf	indf2,c
  7181                           
  7182                           ;TiTTimer.c: 33:     }
  7183  001A86  2A34               	incf	_counter^0,f,c
  7184  001A88  D7F7               	goto	l4589
  7185  001A8A                     __end_of_TiInitTimer:
  7186                           	callstack 0
  7187                           
  7188 ;; *************** function _TeTeclat *****************
  7189 ;; Defined at:
  7190 ;;		line 21 in file "TeTeclat.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;		None
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;		None
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1
  7204 ;;      Params:         0       0       0
  7205 ;;      Locals:         0       0       0
  7206 ;;      Temps:          4       0       0
  7207 ;;      Totals:         4       0       0
  7208 ;;Total ram usage:        4 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 3
  7211 ;; This function calls:
  7212 ;;		_MsetNovaTecla
  7213 ;;		_SsetNovaTecla
  7214 ;;		_TiGetTics
  7215 ;;		_TiResetTics
  7216 ;; This function is called by:
  7217 ;;		_main
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text61
  7222  00106A                     __ptext61:
  7223                           	callstack 0
  7224  00106A                     _TeTeclat:
  7225                           	callstack 27
  7226                           
  7227                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7228                           
  7229                           ;incstack = 0
  7230  00106A  A083               	btfss	131,0,c	;volatile
  7231  00106C  D003               	goto	u6520
  7232  00106E  6A51               	clrf	??_TeTeclat^0,c
  7233  001070  2A51               	incf	??_TeTeclat^0,f,c
  7234  001072  D001               	goto	u6528
  7235  001074                     u6520:
  7236  001074  6A51               	clrf	??_TeTeclat^0,c
  7237  001076                     u6528:
  7238  001076  0E01               	movlw	1
  7239  001078  A283               	btfss	131,1,c	;volatile
  7240  00107A  0E00               	movlw	0
  7241  00107C  0D02               	mullw	2
  7242  00107E  CFF3 F052          	movff	prodl,??_TeTeclat+1
  7243  001082  0E01               	movlw	1
  7244  001084  A483               	btfss	131,2,c	;volatile
  7245  001086  0E00               	movlw	0
  7246  001088  0D03               	mullw	3
  7247  00108A  CFF3 F053          	movff	prodl,??_TeTeclat+2
  7248  00108E  0E01               	movlw	1
  7249  001090  A683               	btfss	131,3,c	;volatile
  7250  001092  0E00               	movlw	0
  7251  001094  0D04               	mullw	4
  7252  001096  50F3               	movf	243,w,c
  7253  001098  2453               	addwf	(??_TeTeclat+2)^0,w,c
  7254  00109A  2452               	addwf	(??_TeTeclat+1)^0,w,c
  7255  00109C  2451               	addwf	??_TeTeclat^0,w,c
  7256  00109E  6E35               	movwf	TeTeclat@files^0,c
  7257                           
  7258                           ;TeTeclat.c: 26:  switch(state) {
  7259  0010A0  D058               	goto	l6117
  7260  0010A2                     l6043:
  7261                           
  7262                           ;TeTeclat.c: 28:    if (files==0) {
  7263  0010A2  5035               	movf	TeTeclat@files^0,w,c
  7264  0010A4  E106               	bnz	l6049
  7265                           
  7266                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7267  0010A6  888C               	bsf	140,4,c	;volatile
  7268                           
  7269                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7270  0010A8  9A8C               	bcf	140,5,c	;volatile
  7271                           
  7272                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7273  0010AA  9C8C               	bcf	140,6,c	;volatile
  7274                           
  7275                           ;TeTeclat.c: 32:     cols=0;
  7276  0010AC  6A36               	clrf	TeTeclat@cols^0,c
  7277  0010AE                     l6047:
  7278                           
  7279                           ;TeTeclat.c: 33:     state++;
  7280  0010AE  2A37               	incf	TeTeclat@state^0,f,c
  7281                           
  7282                           ;TeTeclat.c: 34:    }
  7283  0010B0  0012               	return	
  7284  0010B2                     l6049:
  7285  0010B2  5035               	movf	TeTeclat@files^0,w,c
  7286  0010B4  B4D8               	btfsc	status,2,c
  7287  0010B6  0012               	return	
  7288                           
  7289                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7290  0010B8  5038               	movf	_tiTeclat^0,w,c
  7291  0010BA  ECDC  F00D         	call	_TiResetTics
  7292  0010BE                     l6053:
  7293                           
  7294                           ;TeTeclat.c: 37:     state = 3;
  7295  0010BE  0E03               	movlw	3
  7296  0010C0  6E37               	movwf	TeTeclat@state^0,c
  7297  0010C2  0C03               	retlw	3
  7298  0010C4                     l6055:
  7299                           
  7300                           ;TeTeclat.c: 41:    if (files==0) {
  7301  0010C4  5035               	movf	TeTeclat@files^0,w,c
  7302  0010C6  E106               	bnz	l6063
  7303                           
  7304                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7305  0010C8  988C               	bcf	140,4,c	;volatile
  7306                           
  7307                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7308  0010CA  8A8C               	bsf	140,5,c	;volatile
  7309                           
  7310                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7311  0010CC  9C8C               	bcf	140,6,c	;volatile
  7312                           
  7313                           ;TeTeclat.c: 45:     cols=1;
  7314  0010CE  0E01               	movlw	1
  7315  0010D0  6E36               	movwf	TeTeclat@cols^0,c
  7316  0010D2  D7ED               	goto	l6047
  7317  0010D4                     l6063:
  7318  0010D4  5035               	movf	TeTeclat@files^0,w,c
  7319  0010D6  B4D8               	btfsc	status,2,c
  7320  0010D8  0012               	return	
  7321                           
  7322                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7323  0010DA  5038               	movf	_tiTeclat^0,w,c
  7324  0010DC  ECDC  F00D         	call	_TiResetTics
  7325  0010E0  D7EE               	goto	l6053
  7326  0010E2                     l6069:
  7327                           
  7328                           ;TeTeclat.c: 54:    if (files==0) {
  7329  0010E2  5035               	movf	TeTeclat@files^0,w,c
  7330  0010E4  E107               	bnz	l6077
  7331                           
  7332                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7333  0010E6  988C               	bcf	140,4,c	;volatile
  7334                           
  7335                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7336  0010E8  9A8C               	bcf	140,5,c	;volatile
  7337                           
  7338                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7339  0010EA  8C8C               	bsf	140,6,c	;volatile
  7340                           
  7341                           ;TeTeclat.c: 58:     cols=2;
  7342  0010EC  0E02               	movlw	2
  7343  0010EE  6E36               	movwf	TeTeclat@cols^0,c
  7344  0010F0                     l6075:
  7345                           
  7346                           ;TeTeclat.c: 59:     state = 0;
  7347  0010F0  6A37               	clrf	TeTeclat@state^0,c
  7348                           
  7349                           ;TeTeclat.c: 60:    }
  7350  0010F2  0012               	return	
  7351  0010F4                     l6077:
  7352  0010F4  5035               	movf	TeTeclat@files^0,w,c
  7353  0010F6  B4D8               	btfsc	status,2,c
  7354  0010F8  0012               	return	
  7355                           
  7356                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7357  0010FA  5038               	movf	_tiTeclat^0,w,c
  7358  0010FC  ECDC  F00D         	call	_TiResetTics
  7359  001100  D7D6               	goto	l6047
  7360  001102                     l6083:
  7361                           
  7362                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7363  001102  5038               	movf	_tiTeclat^0,w,c
  7364  001104  EC58  F00D         	call	_TiGetTics
  7365  001108  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7366  00110A  0012               	return	
  7367  00110C  D7D0               	goto	l6047
  7368  00110E                     l6087:
  7369                           
  7370                           ;TeTeclat.c: 72:    if (files==0) {
  7371  00110E  5035               	movf	TeTeclat@files^0,w,c
  7372  001110  E103               	bnz	l6091
  7373                           
  7374                           ;TeTeclat.c: 73:     state = 1;
  7375  001112  0E01               	movlw	1
  7376  001114  6E37               	movwf	TeTeclat@state^0,c
  7377                           
  7378                           ;TeTeclat.c: 74:    }
  7379  001116  0C01               	retlw	1
  7380  001118                     l6091:
  7381  001118  5035               	movf	TeTeclat@files^0,w,c
  7382  00111A  B4D8               	btfsc	status,2,c
  7383  00111C  0012               	return	
  7384                           
  7385                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7386  00111E  D830               	call	PL8	;call to abstracted procedure
  7387  001120  ECA8  F00E         	call	_MsetNovaTecla
  7388                           
  7389                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7390  001124  D82D               	call	PL8	;call to abstracted procedure
  7391  001126  ECA4  F00E         	call	_SsetNovaTecla
  7392  00112A  D7C1               	goto	l6047
  7393  00112C                     l6097:
  7394                           
  7395                           ;TeTeclat.c: 82:    if (files==0) {
  7396  00112C  5035               	movf	TeTeclat@files^0,w,c
  7397  00112E  A4D8               	btfss	status,2,c
  7398  001130  0012               	return	
  7399                           
  7400                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7401  001132  5038               	movf	_tiTeclat^0,w,c
  7402  001134  ECDC  F00D         	call	_TiResetTics
  7403  001138  D7BA               	goto	l6047
  7404  00113A                     l6103:
  7405                           
  7406                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7407  00113A  5038               	movf	_tiTeclat^0,w,c
  7408  00113C  EC58  F00D         	call	_TiGetTics
  7409  001140  D7E3               	goto	L3
  7410  001142                     l6107:
  7411                           
  7412                           ;TeTeclat.c: 93:    if (files!=0) {
  7413  001142  5035               	movf	TeTeclat@files^0,w,c
  7414  001144  E003               	bz	l6111
  7415                           
  7416                           ;TeTeclat.c: 94:     state = 5;
  7417  001146  0E05               	movlw	5
  7418  001148  6E37               	movwf	TeTeclat@state^0,c
  7419                           
  7420                           ;TeTeclat.c: 95:    }
  7421  00114A  0C05               	retlw	5
  7422  00114C                     l6111:
  7423  00114C  5035               	movf	TeTeclat@files^0,w,c
  7424  00114E  E0D0               	bz	l6075
  7425  001150  0012               	return	
  7426  001152                     l6117:
  7427  001152  5037               	movf	TeTeclat@state^0,w,c
  7428  001154  6E51               	movwf	??_TeTeclat^0,c
  7429  001156  6A52               	clrf	(??_TeTeclat+1)^0,c
  7430                           
  7431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7432                           ; Switch size 1, requested type "space"
  7433                           ; Number of cases is 1, Range of values is 0 to 0
  7434                           ; switch strategies available:
  7435                           ; Name         Instructions Cycles
  7436                           ; simple_byte            4     3 (average)
  7437                           ;	Chosen strategy is simple_byte
  7438  001158  5052               	movf	(??_TeTeclat+1)^0,w,c
  7439  00115A  A4D8               	btfss	status,2,c
  7440  00115C  0012               	return	
  7441                           
  7442                           ; Switch size 1, requested type "space"
  7443                           ; Number of cases is 8, Range of values is 0 to 7
  7444                           ; switch strategies available:
  7445                           ; Name         Instructions Cycles
  7446                           ; simple_byte           25    13 (average)
  7447                           ;	Chosen strategy is simple_byte
  7448  00115E  5051               	movf	??_TeTeclat^0,w,c
  7449  001160  E0A0               	bz	l6043
  7450  001162  0A01               	xorlw	1	; case 1
  7451  001164  E0AF               	bz	l6055
  7452  001166  0A03               	xorlw	3	; case 2
  7453  001168  E0BC               	bz	l6069
  7454  00116A  0A01               	xorlw	1	; case 3
  7455  00116C  E0CA               	bz	l6083
  7456  00116E  0A07               	xorlw	7	; case 4
  7457  001170  E0CE               	bz	l6087
  7458  001172  0A01               	xorlw	1	; case 5
  7459  001174  E0DB               	bz	l6097
  7460  001176  0A03               	xorlw	3	; case 6
  7461  001178  E0E0               	bz	l6103
  7462  00117A  0A01               	xorlw	1	; case 7
  7463  00117C  E0E2               	bz	l6107
  7464  00117E  0012               	return		;funcret
  7465  001180                     __end_of_TeTeclat:
  7466                           	callstack 0
  7467  001180                     PL8:
  7468                           	callstack 27
  7469  001180  0EFD               	movlw	253
  7470  001182  6E51               	movwf	??_TeTeclat^0,c
  7471  001184  6852               	setf	(??_TeTeclat+1)^0,c
  7472  001186  5035               	movf	TeTeclat@files^0,w,c
  7473  001188  0D03               	mullw	3
  7474  00118A  0E90               	movlw	low _teclaPremuda
  7475  00118C  6E53               	movwf	(??_TeTeclat+2)^0,c
  7476  00118E  0E1F               	movlw	high _teclaPremuda
  7477  001190  6E54               	movwf	(??_TeTeclat+3)^0,c
  7478  001192  50F3               	movf	243,w,c
  7479  001194  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7480  001196  50F4               	movf	244,w,c
  7481  001198  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7482  00119A  5036               	movf	TeTeclat@cols^0,w,c
  7483  00119C  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7484  00119E  0E00               	movlw	0
  7485  0011A0  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7486  0011A2  5051               	movf	??_TeTeclat^0,w,c
  7487  0011A4  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7488  0011A6  5052               	movf	(??_TeTeclat+1)^0,w,c
  7489  0011A8  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7490  0011AA  C053  FFF6         	movff	??_TeTeclat+2,tblptrl
  7491  0011AE  C054  FFF7         	movff	??_TeTeclat+3,tblptrh
  7492  0011B2                     	if	0	;tblptru may be non-zero
  7493  0011B2                     	endif
  7494  0011B2                     	if	0	;tblptru may be non-zero
  7495  0011B2                     	endif
  7496  0011B2  0008               	tblrd		*
  7497  0011B4  50F5               	movf	tablat,w,c
  7498  0011B6  0012               	return	
  7499  0011B8                     __end_ofPL8:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function _SsetNovaTecla *****************
  7503 ;; Defined at:
  7504 ;;		line 124 in file "Ssms.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  tecla           1    wreg     unsigned char 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  tecla           1    5[COMRAM] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		wreg
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1
  7518 ;;      Params:         0       0       0
  7519 ;;      Locals:         1       0       0
  7520 ;;      Temps:          0       0       0
  7521 ;;      Totals:         1       0       0
  7522 ;;Total ram usage:        1 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; Hardware stack levels required when called: 2
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_TeTeclat
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text62
  7533  001D48                     __ptext62:
  7534                           	callstack 0
  7535  001D48                     _SsetNovaTecla:
  7536                           	callstack 27
  7537                           
  7538                           ;incstack = 0
  7539                           ;SsetNovaTecla@tecla stored from wreg
  7540  001D48  6E4A               	movwf	SsetNovaTecla@tecla^0,c
  7541                           
  7542                           ;Ssms.c: 125:     novaTecla = tecla;
  7543  001D4A  C04A  F06B         	movff	SsetNovaTecla@tecla,_novaTecla
  7544  001D4E  0012               	return		;funcret
  7545  001D50                     __end_of_SsetNovaTecla:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _MsetNovaTecla *****************
  7549 ;; Defined at:
  7550 ;;		line 31 in file "Menu.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  tecla           1    wreg     unsigned char 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  tecla           1    5[COMRAM] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1
  7564 ;;      Params:         0       0       0
  7565 ;;      Locals:         1       0       0
  7566 ;;      Temps:          0       0       0
  7567 ;;      Totals:         1       0       0
  7568 ;;Total ram usage:        1 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; Hardware stack levels required when called: 2
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_TeTeclat
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text63
  7579  001D50                     __ptext63:
  7580                           	callstack 0
  7581  001D50                     _MsetNovaTecla:
  7582                           	callstack 27
  7583                           
  7584                           ;incstack = 0
  7585                           ;MsetNovaTecla@tecla stored from wreg
  7586  001D50  6E4A               	movwf	MsetNovaTecla@tecla^0,c
  7587                           
  7588                           ;Menu.c: 32:     NovaTecla = tecla;
  7589  001D52  C04A  F069         	movff	MsetNovaTecla@tecla,_NovaTecla
  7590  001D56  0012               	return		;funcret
  7591  001D58                     __end_of_MsetNovaTecla:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _TeInit *****************
  7595 ;; Defined at:
  7596 ;;		line 17 in file "TeTeclat.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1
  7610 ;;      Params:         0       0       0
  7611 ;;      Locals:         0       0       0
  7612 ;;      Temps:          0       0       0
  7613 ;;      Totals:         0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; Hardware stack levels required when called: 3
  7617 ;; This function calls:
  7618 ;;		_TiGetTimer
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text64
  7625  001D58                     __ptext64:
  7626                           	callstack 0
  7627  001D58                     _TeInit:
  7628                           	callstack 27
  7629                           
  7630                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7631                           
  7632                           ;incstack = 0
  7633  001D58  EC1B  F00D         	call	_TiGetTimer	;wreg free
  7634  001D5C  6E38               	movwf	_tiTeclat^0,c
  7635  001D5E  0012               	return		;funcret
  7636  001D60                     __end_of_TeInit:
  7637                           	callstack 0
  7638                           
  7639 ;; *************** function _Sinit *****************
  7640 ;; Defined at:
  7641 ;;		line 18 in file "Ssms.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1
  7655 ;;      Params:         0       0       0
  7656 ;;      Locals:         0       0       0
  7657 ;;      Temps:          0       0       0
  7658 ;;      Totals:         0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 3
  7662 ;; This function calls:
  7663 ;;		_TiGetTimer
  7664 ;; This function is called by:
  7665 ;;		_main
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text65
  7670  001D60                     __ptext65:
  7671                           	callstack 0
  7672  001D60                     _Sinit:
  7673                           	callstack 27
  7674                           
  7675                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7676                           
  7677                           ;incstack = 0
  7678  001D60  EC1B  F00D         	call	_TiGetTimer	;wreg free
  7679  001D64  6E3B               	movwf	_timerSMS^0,c
  7680  001D66  0012               	return		;funcret
  7681  001D68                     __end_of_Sinit:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _SMotor *****************
  7685 ;; Defined at:
  7686 ;;		line 22 in file "Ssms.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;		None
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  1    wreg      void 
  7693 ;; Registers used:
  7694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1
  7700 ;;      Params:         0       0       0
  7701 ;;      Locals:         0       0       0
  7702 ;;      Temps:          2       0       0
  7703 ;;      Totals:         2       0       0
  7704 ;;Total ram usage:        2 bytes
  7705 ;; Hardware stack levels used: 1
  7706 ;; Hardware stack levels required when called: 3
  7707 ;; This function calls:
  7708 ;;		_MNovaLletra
  7709 ;;		_TiGetTics
  7710 ;;		_TiResetTics
  7711 ;; This function is called by:
  7712 ;;		_main
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text66
  7717  000EB0                     __ptext66:
  7718                           	callstack 0
  7719  000EB0                     _SMotor:
  7720                           	callstack 27
  7721                           
  7722                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7723                           
  7724                           ;incstack = 0
  7725  000EB0  D0BA               	goto	l4761
  7726  000EB2                     l4605:
  7727                           
  7728                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7729  000EB2  286B               	incf	_novaTecla^0,w,c
  7730  000EB4  E008               	bz	l4613
  7731  000EB6  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7732  000EB8  D006               	goto	l4613
  7733                           
  7734                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7735  000EBA  503B               	movf	_timerSMS^0,w,c
  7736  000EBC  ECDC  F00D         	call	_TiResetTics
  7737                           
  7738                           ;Ssms.c: 29:     state = 3;
  7739  000EC0  0E03               	movlw	3
  7740  000EC2  6E39               	movwf	SMotor@state^0,c
  7741                           
  7742                           ;Ssms.c: 30:    }
  7743  000EC4  0C03               	retlw	3
  7744  000EC6                     l4613:
  7745  000EC6  286B               	incf	_novaTecla^0,w,c
  7746  000EC8  A4D8               	btfss	status,2,c
  7747  000ECA  0012               	return	
  7748  000ECC  503B               	movf	_timerSMS^0,w,c
  7749  000ECE  EC58  F00D         	call	_TiGetTics
  7750  000ED2  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7751  000ED4  0012               	return	
  7752  000ED6  D8C4               	call	PL64	;call to abstracted procedure
  7753  000ED8  A0D8               	btfss	status,0,c
  7754  000EDA  0012               	return	
  7755  000EDC  286C               	incf	_lletraASCII^0,w,c
  7756  000EDE  A4D8               	btfss	status,2,c
  7757  000EE0  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7758  000EE2  0012               	return	
  7759                           
  7760                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7761  000EE4  506C               	movf	_lletraASCII^0,w,c
  7762  000EE6  ECB4  F00E         	call	_MNovaLletra
  7763                           
  7764                           ;Ssms.c: 33:     lletraASCII = -1;
  7765  000EEA  686C               	setf	_lletraASCII^0,c
  7766                           
  7767                           ;Ssms.c: 34:     ultimaTecla = -1;
  7768  000EEC  686A               	setf	_ultimaTecla^0,c
  7769                           
  7770                           ;Ssms.c: 35:     zeroTecla = 0;
  7771  000EEE  6A3A               	clrf	_zeroTecla^0,c
  7772  000EF0  0012               	return	
  7773  000EF2                     l4629:
  7774                           
  7775                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7776  000EF2  506A               	movf	_ultimaTecla^0,w,c
  7777  000EF4  186B               	xorwf	_novaTecla^0,w,c
  7778  000EF6  E10C               	bnz	l4637
  7779  000EF8  503B               	movf	_timerSMS^0,w,c
  7780  000EFA  EC58  F00D         	call	_TiGetTics
  7781  000EFE  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7782  000F00  D002               	goto	u4050
  7783  000F02  D8AE               	call	PL64	;call to abstracted procedure
  7784  000F04  E205               	bc	l4637
  7785  000F06                     u4050:
  7786                           
  7787                           ;Ssms.c: 40:     novaTecla = -1;
  7788  000F06  686B               	setf	_novaTecla^0,c
  7789                           
  7790                           ;Ssms.c: 41:     sumaPulsacions++;
  7791  000F08  2A3C               	incf	_sumaPulsacions^0,f,c
  7792                           
  7793                           ;Ssms.c: 42:     lletraASCII++;
  7794  000F0A  2A6C               	incf	_lletraASCII^0,f,c
  7795                           
  7796                           ;Ssms.c: 43:     state++;
  7797  000F0C  2A39               	incf	SMotor@state^0,f,c
  7798                           
  7799                           ;Ssms.c: 44:    }
  7800  000F0E  0012               	return	
  7801  000F10                     l4637:
  7802  000F10  286B               	incf	_novaTecla^0,w,c
  7803  000F12  B4D8               	btfsc	status,2,c
  7804  000F14  0012               	return	
  7805  000F16  506A               	movf	_ultimaTecla^0,w,c
  7806  000F18  186B               	xorwf	_novaTecla^0,w,c
  7807  000F1A  B4D8               	btfsc	status,2,c
  7808  000F1C  0012               	return	
  7809                           
  7810                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  7811  000F1E  506C               	movf	_lletraASCII^0,w,c
  7812  000F20  ECB4  F00E         	call	_MNovaLletra
  7813                           
  7814                           ;Ssms.c: 47:     if(novaTecla != 0){
  7815  000F24  506B               	movf	_novaTecla^0,w,c
  7816  000F26  E003               	bz	l4647
  7817                           
  7818                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  7819  000F28  506B               	movf	_novaTecla^0,w,c
  7820  000F2A  D895               	call	PL62	;call to abstracted procedure
  7821  000F2C  D001               	goto	L4
  7822  000F2E                     l4647:
  7823                           
  7824                           ;Ssms.c: 50:       lletraASCII = '0';
  7825  000F2E  0E30               	movlw	48
  7826  000F30                     L4:
  7827  000F30  6E6C               	movwf	_lletraASCII^0,c
  7828                           
  7829                           ;Ssms.c: 52:     zeroTecla=0;
  7830  000F32  6A3A               	clrf	_zeroTecla^0,c
  7831                           
  7832                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  7833  000F34  C06B  F06A         	movff	_novaTecla,_ultimaTecla
  7834                           
  7835                           ;Ssms.c: 54:     sumaPulsacions = 0;
  7836  000F38  6A3C               	clrf	_sumaPulsacions^0,c
  7837                           
  7838                           ;Ssms.c: 55:     novaTecla = -1;
  7839  000F3A  686B               	setf	_novaTecla^0,c
  7840                           
  7841                           ;Ssms.c: 56:     state--;
  7842  000F3C  0639               	decf	SMotor@state^0,f,c
  7843  000F3E  0012               	return	
  7844  000F40                     l4659:
  7845                           
  7846                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7847  000F40  0E07               	movlw	7
  7848  000F42  186A               	xorwf	_ultimaTecla^0,w,c
  7849  000F44  E008               	bz	l4667
  7850  000F46  0E09               	movlw	9
  7851  000F48  186A               	xorwf	_ultimaTecla^0,w,c
  7852  000F4A  E005               	bz	l4667
  7853  000F4C  506A               	movf	_ultimaTecla^0,w,c
  7854  000F4E  E003               	bz	l4667
  7855                           
  7856                           ;Ssms.c: 61:     state = 5;
  7857  000F50  0E05               	movlw	5
  7858  000F52  6E39               	movwf	SMotor@state^0,c
  7859                           
  7860                           ;Ssms.c: 62:    }
  7861  000F54  0C05               	retlw	5
  7862  000F56                     l4667:
  7863  000F56  0E07               	movlw	7
  7864  000F58  186A               	xorwf	_ultimaTecla^0,w,c
  7865  000F5A  E003               	bz	u4130
  7866  000F5C  0E09               	movlw	9
  7867  000F5E  186A               	xorwf	_ultimaTecla^0,w,c
  7868  000F60  E103               	bnz	l4673
  7869  000F62                     u4130:
  7870                           
  7871                           ;Ssms.c: 64:     state = 6;
  7872  000F62  0E06               	movlw	6
  7873  000F64  6E39               	movwf	SMotor@state^0,c
  7874                           
  7875                           ;Ssms.c: 65:    }
  7876  000F66  0C06               	retlw	6
  7877  000F68                     l4673:
  7878  000F68  506A               	movf	_ultimaTecla^0,w,c
  7879  000F6A  A4D8               	btfss	status,2,c
  7880  000F6C  0012               	return	
  7881                           
  7882                           ;Ssms.c: 67:     zeroTecla++;
  7883  000F6E  2A3A               	incf	_zeroTecla^0,f,c
  7884                           
  7885                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  7886  000F70  0E02               	movlw	2
  7887  000F72  183A               	xorwf	_zeroTecla^0,w,c
  7888  000F74  E101               	bnz	l4681
  7889  000F76  6A3A               	clrf	_zeroTecla^0,c
  7890  000F78                     l4681:
  7891                           
  7892                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  7893  000F78  0EFD               	movlw	low _arrayZero
  7894  000F7A  243A               	addwf	_zeroTecla^0,w,c
  7895  000F7C  6EF6               	movwf	tblptrl,c
  7896  000F7E  6AF7               	clrf	tblptrh,c
  7897  000F80  0E1E               	movlw	high _arrayZero
  7898  000F82  22F7               	addwfc	tblptrh,f,c
  7899  000F84                     	if	0	;There are less than 3 active tblptr bytes
  7900  000F84                     	endif
  7901  000F84  0008               	tblrd		*
  7902  000F86  CFF5 F06C          	movff	tablat,_lletraASCII
  7903  000F8A                     l4683:
  7904                           
  7905                           ;Ssms.c: 70:     state = 0;
  7906  000F8A  6A39               	clrf	SMotor@state^0,c
  7907  000F8C  0012               	return	
  7908  000F8E                     l4685:
  7909                           
  7910                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7911  000F8E  506B               	movf	_novaTecla^0,w,c
  7912  000F90  0A80               	xorlw	128
  7913  000F92  0F7E               	addlw	-130
  7914  000F94  E202               	bc	u4170
  7915  000F96  506B               	movf	_novaTecla^0,w,c
  7916  000F98  E107               	bnz	l4693
  7917  000F9A                     u4170:
  7918  000F9A  506B               	movf	_novaTecla^0,w,c
  7919  000F9C  0A80               	xorlw	128
  7920  000F9E  0F76               	addlw	-138
  7921  000FA0  E203               	bc	l4693
  7922                           
  7923                           ;Ssms.c: 75:     state = 1;
  7924  000FA2  0E01               	movlw	1
  7925  000FA4  6E39               	movwf	SMotor@state^0,c
  7926                           
  7927                           ;Ssms.c: 76:    }
  7928  000FA6  0C01               	retlw	1
  7929  000FA8                     l4693:
  7930  000FA8  506B               	movf	_novaTecla^0,w,c
  7931  000FAA  E00C               	bz	l4705
  7932  000FAC  506B               	movf	_novaTecla^0,w,c
  7933  000FAE  0A80               	xorlw	128
  7934  000FB0  0F7E               	addlw	-130
  7935  000FB2  E208               	bc	l4705
  7936  000FB4  286C               	incf	_lletraASCII^0,w,c
  7937  000FB6  E106               	bnz	l4705
  7938                           
  7939                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  7940  000FB8  506B               	movf	_novaTecla^0,w,c
  7941  000FBA  0F30               	addlw	48
  7942  000FBC  ECB4  F00E         	call	_MNovaLletra
  7943  000FC0                     l4701:
  7944                           
  7945                           ;Ssms.c: 79:     novaTecla = -1;
  7946  000FC0  686B               	setf	_novaTecla^0,c
  7947  000FC2  D7E3               	goto	l4683
  7948  000FC4                     l4705:
  7949  000FC4  506B               	movf	_novaTecla^0,w,c
  7950  000FC6  B4D8               	btfsc	status,2,c
  7951  000FC8  0012               	return	
  7952  000FCA  506B               	movf	_novaTecla^0,w,c
  7953  000FCC  0A80               	xorlw	128
  7954  000FCE  0F7E               	addlw	-130
  7955  000FD0  B0D8               	btfsc	status,0,c
  7956  000FD2  0012               	return	
  7957  000FD4  286C               	incf	_lletraASCII^0,w,c
  7958  000FD6  B4D8               	btfsc	status,2,c
  7959  000FD8  0012               	return	
  7960                           
  7961                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  7962  000FDA  506C               	movf	_lletraASCII^0,w,c
  7963  000FDC  ECB4  F00E         	call	_MNovaLletra
  7964                           
  7965                           ;Ssms.c: 84:     lletraASCII = -1;
  7966  000FE0  686C               	setf	_lletraASCII^0,c
  7967                           
  7968                           ;Ssms.c: 85:     state++;
  7969  000FE2  2A39               	incf	SMotor@state^0,f,c
  7970  000FE4  0012               	return	
  7971  000FE6                     l4717:
  7972                           
  7973                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  7974  000FE6  506B               	movf	_novaTecla^0,w,c
  7975  000FE8  0F30               	addlw	48
  7976  000FEA  ECB4  F00E         	call	_MNovaLletra
  7977  000FEE  D7E8               	goto	l4701
  7978  000FF0                     l4723:
  7979                           
  7980                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  7981  000FF0  0E04               	movlw	4
  7982  000FF2  183C               	xorwf	_sumaPulsacions^0,w,c
  7983  000FF4  E105               	bnz	l4731
  7984  000FF6                     u4250:
  7985                           
  7986                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  7987  000FF6  506A               	movf	_ultimaTecla^0,w,c
  7988  000FF8  D82E               	call	PL62	;call to abstracted procedure
  7989  000FFA  6E6C               	movwf	_lletraASCII^0,c
  7990                           
  7991                           ;Ssms.c: 96:     sumaPulsacions = 0;
  7992  000FFC  6A3C               	clrf	_sumaPulsacions^0,c
  7993  000FFE  D7C5               	goto	l4683
  7994  001000                     l4731:
  7995  001000  0E03               	movlw	3
  7996  001002  183C               	xorwf	_sumaPulsacions^0,w,c
  7997  001004  E104               	bnz	l4737
  7998  001006                     u4260:
  7999                           
  8000                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8001  001006  506A               	movf	_ultimaTecla^0,w,c
  8002  001008  0F30               	addlw	48
  8003  00100A  6E6C               	movwf	_lletraASCII^0,c
  8004  00100C  D7BE               	goto	l4683
  8005  00100E                     l4737:
  8006  00100E  0E03               	movlw	3
  8007  001010  603C               	cpfslt	_sumaPulsacions^0,c
  8008  001012  0012               	return	
  8009  001014  D7BA               	goto	l4683
  8010  001016                     l4741:
  8011                           
  8012                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8013  001016  0E04               	movlw	4
  8014  001018  183C               	xorwf	_sumaPulsacions^0,w,c
  8015  00101A  E0F5               	bz	u4260
  8016  00101C  0E05               	movlw	5
  8017  00101E  183C               	xorwf	_sumaPulsacions^0,w,c
  8018  001020  E0EA               	bz	u4250
  8019  001022  0E04               	movlw	4
  8020  001024  D7F5               	goto	L5
  8021  001026                     l4761:
  8022  001026  5039               	movf	SMotor@state^0,w,c
  8023  001028  6E51               	movwf	??_SMotor^0,c
  8024  00102A  6A52               	clrf	(??_SMotor+1)^0,c
  8025                           
  8026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8027                           ; Switch size 1, requested type "space"
  8028                           ; Number of cases is 1, Range of values is 0 to 0
  8029                           ; switch strategies available:
  8030                           ; Name         Instructions Cycles
  8031                           ; simple_byte            4     3 (average)
  8032                           ;	Chosen strategy is simple_byte
  8033  00102C  5052               	movf	(??_SMotor+1)^0,w,c
  8034  00102E  A4D8               	btfss	status,2,c
  8035  001030  0012               	return	
  8036                           
  8037                           ; Switch size 1, requested type "space"
  8038                           ; Number of cases is 7, Range of values is 0 to 6
  8039                           ; switch strategies available:
  8040                           ; Name         Instructions Cycles
  8041                           ; simple_byte           22    12 (average)
  8042                           ;	Chosen strategy is simple_byte
  8043  001032  5051               	movf	??_SMotor^0,w,c
  8044  001034  E101 D73D          	bz	l4605
  8045  001038  0A01               	xorlw	1	; case 1
  8046  00103A  E101 D75A          	bz	l4629
  8047  00103E  0A03               	xorlw	3	; case 2
  8048  001040  E101 D77E          	bz	l4659
  8049  001044  0A01               	xorlw	1	; case 3
  8050  001046  E0A3               	bz	l4685
  8051  001048  0A07               	xorlw	7	; case 4
  8052  00104A  E0CD               	bz	l4717
  8053  00104C  0A01               	xorlw	1	; case 5
  8054  00104E  E0D0               	bz	l4723
  8055  001050  0A03               	xorlw	3	; case 6
  8056  001052  E0E1               	bz	l4741
  8057  001054  0012               	return		;funcret
  8058  001056                     __end_of_SMotor:
  8059                           	callstack 0
  8060  001056                     PL62:
  8061                           	callstack 27
  8062  001056  0FB2               	addlw	low (_lletraInici+254)
  8063  001058  6ED9               	movwf	fsr2l,c
  8064  00105A  6ADA               	clrf	fsr2h,c
  8065  00105C  50DF               	movf	indf2,w,c
  8066  00105E  0012               	return	
  8067  001060                     __end_ofPL62:
  8068                           	callstack 0
  8069  001060                     PL64:
  8070                           	callstack 27
  8071  001060  0E5A               	movlw	90
  8072  001062  5C4A               	subwf	?_TiGetTics^0,w,c
  8073  001064  0E02               	movlw	2
  8074  001066  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  8075  001068  0012               	return	
  8076  00106A                     __end_ofPL64:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _MNovaLletra *****************
  8080 ;; Defined at:
  8081 ;;		line 35 in file "Menu.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  lletra          1    wreg     unsigned char 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  lletra          1    5[COMRAM] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1
  8095 ;;      Params:         0       0       0
  8096 ;;      Locals:         1       0       0
  8097 ;;      Temps:          0       0       0
  8098 ;;      Totals:         1       0       0
  8099 ;;Total ram usage:        1 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 2
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_SMotor
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text67
  8110  001D68                     __ptext67:
  8111                           	callstack 0
  8112  001D68                     _MNovaLletra:
  8113                           	callstack 27
  8114                           
  8115                           ;incstack = 0
  8116                           ;MNovaLletra@lletra stored from wreg
  8117  001D68  6E4A               	movwf	MNovaLletra@lletra^0,c
  8118                           
  8119                           ;Menu.c: 36:     novaLletra = lletra;
  8120  001D6A  C04A  F068         	movff	MNovaLletra@lletra,_novaLletra
  8121  001D6E  0012               	return		;funcret
  8122  001D70                     __end_of_MNovaLletra:
  8123                           	callstack 0
  8124                           
  8125 ;; *************** function _Minit *****************
  8126 ;; Defined at:
  8127 ;;		line 28 in file "Menu.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1
  8141 ;;      Params:         0       0       0
  8142 ;;      Locals:         0       0       0
  8143 ;;      Temps:          0       0       0
  8144 ;;      Totals:         0       0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 3
  8148 ;; This function calls:
  8149 ;;		_TiGetTimer
  8150 ;; This function is called by:
  8151 ;;		_main
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text68
  8156  001D70                     __ptext68:
  8157                           	callstack 0
  8158  001D70                     _Minit:
  8159                           	callstack 27
  8160                           
  8161                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8162                           
  8163                           ;incstack = 0
  8164  001D70  EC1B  F00D         	call	_TiGetTimer	;wreg free
  8165  001D74  6E32               	movwf	_timerMenu^0,c
  8166  001D76  0012               	return		;funcret
  8167  001D78                     __end_of_Minit:
  8168                           	callstack 0
  8169                           
  8170 ;; *************** function _LcLCD *****************
  8171 ;; Defined at:
  8172 ;;		line 232 in file "LcTLCD.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;		None
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1
  8186 ;;      Params:         0       0       0
  8187 ;;      Locals:         0       0       0
  8188 ;;      Temps:          0       0       0
  8189 ;;      Totals:         0       0       0
  8190 ;;Total ram usage:        0 bytes
  8191 ;; Hardware stack levels used: 1
  8192 ;; Hardware stack levels required when called: 6
  8193 ;; This function calls:
  8194 ;;		_LcPutChar
  8195 ;; This function is called by:
  8196 ;;		_main
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text69
  8201  001806                     __ptext69:
  8202                           	callstack 0
  8203  001806                     _LcLCD:
  8204                           	callstack 24
  8205                           
  8206                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8207                           
  8208                           ;incstack = 0
  8209  001806  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8210  001808  0012               	return	
  8211                           
  8212                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8213  00180A  D818               	call	PL32	;call to abstracted procedure
  8214  00180C  64F7               	cpfsgt	tblptrh,c
  8215  00180E  D003               	bra	u3917
  8216  001810  0008               	tblrd		*
  8217  001812  50F5               	movf	tablat,w,c
  8218  001814  D001               	bra	u3910
  8219  001816                     u3917:
  8220  001816  D819               	call	PL44	;call to abstracted procedure
  8221  001818                     u3910:
  8222  001818  EC2B  F00C         	call	_LcPutChar
  8223                           
  8224                           ;LcTLCD.c: 235:         s_ptr++;
  8225  00181C  4A0D               	infsnz	_s_ptr^0,f,c
  8226  00181E  2A0E               	incf	(_s_ptr+1)^0,f,c
  8227                           
  8228                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8229  001820  D80D               	call	PL32	;call to abstracted procedure
  8230  001822  64F7               	cpfsgt	tblptrh,c
  8231  001824  D003               	bra	u3927
  8232  001826  0008               	tblrd		*
  8233  001828  50F5               	movf	tablat,w,c
  8234  00182A  D001               	bra	u3920
  8235  00182C                     u3927:
  8236  00182C  D80E               	call	PL44	;call to abstracted procedure
  8237  00182E                     u3920:
  8238  00182E  0900               	iorlw	0
  8239  001830  A4D8               	btfss	status,2,c
  8240  001832  0012               	return	
  8241                           
  8242                           ;LcTLCD.c: 237:             nou_s = 0;
  8243  001834  9278               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8244                           
  8245                           ;LcTLCD.c: 238:             s_ptr=0;
  8246  001836  6A0D               	clrf	_s_ptr^0,c
  8247  001838  6A0E               	clrf	(_s_ptr+1)^0,c
  8248  00183A  0012               	return		;funcret
  8249  00183C                     __end_of_LcLCD:
  8250                           	callstack 0
  8251  00183C                     PL32:
  8252                           	callstack 24
  8253  00183C  C00D  FFF6         	movff	_s_ptr,tblptrl
  8254  001840  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  8255  001844  6AF8               	clrf	tblptru,c
  8256  001846  0E01               	movlw	(high __ramtop+-1)
  8257  001848  0012               	return	
  8258  00184A                     __end_ofPL32:
  8259                           	callstack 0
  8260  00184A                     PL44:
  8261                           	callstack 24
  8262  00184A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8263  00184E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8264  001852  50E7               	movf	indf1,w,c
  8265  001854  0012               	return	
  8266  001856                     __end_ofPL44:
  8267                           	callstack 0
  8268                           
  8269 ;; *************** function _LcInit *****************
  8270 ;; Defined at:
  8271 ;;		line 41 in file "LcTLCD.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  rows            1    wreg     unsigned char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  rows            1   16[COMRAM] unsigned char 
  8276 ;;  i               2   17[COMRAM] int 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1
  8286 ;;      Params:         0       0       0
  8287 ;;      Locals:         3       0       0
  8288 ;;      Temps:          0       0       0
  8289 ;;      Totals:         3       0       0
  8290 ;;Total ram usage:        3 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 4
  8293 ;; This function calls:
  8294 ;;		_CantaIR
  8295 ;;		_EscriuPrimeraOrdre
  8296 ;;		_Espera
  8297 ;;		_TiGetTimer
  8298 ;;		_WaitForBusy
  8299 ;; This function is called by:
  8300 ;;		_main
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text70
  8305  001364                     __ptext70:
  8306                           	callstack 0
  8307  001364                     _LcInit:
  8308                           	callstack 26
  8309                           
  8310                           ;incstack = 0
  8311                           ;LcInit@rows stored from wreg
  8312  001364  6E55               	movwf	LcInit@rows^0,c
  8313                           
  8314                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8315  001366  EC1B  F00D         	call	_TiGetTimer	;wreg free
  8316  00136A  6E3D               	movwf	_Timer^0,c
  8317                           
  8318                           ;LcTLCD.c: 49:  Rows = rows;
  8319  00136C  C055  F040         	movff	LcInit@rows,_Rows
  8320                           
  8321                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8322  001370  6A3E               	clrf	_ColumnAct^0,c
  8323  001372  6A3F               	clrf	_RowAct^0,c
  8324                           
  8325                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8326  001374  9894               	bcf	148,4,c	;volatile
  8327  001376  9E95               	bcf	149,7,c	;volatile
  8328  001378  9A94               	bcf	148,5,c	;volatile
  8329                           
  8330                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8331  00137A  6A56               	clrf	LcInit@i^0,c
  8332  00137C  6A57               	clrf	(LcInit@i+1)^0,c
  8333  00137E                     l4513:
  8334                           
  8335                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8336  00137E  6A52               	clrf	(Espera@ms+1)^0,c
  8337  001380  0E64               	movlw	100
  8338  001382  6E51               	movwf	Espera@ms^0,c
  8339  001384  503D               	movf	_Timer^0,w,c
  8340  001386  ECA0  F00D         	call	_Espera
  8341                           
  8342                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8343  00138A  0E03               	movlw	3
  8344  00138C  ECED  F00A         	call	_EscriuPrimeraOrdre
  8345                           
  8346                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8347  001390  6A52               	clrf	(Espera@ms+1)^0,c
  8348  001392  0E05               	movlw	5
  8349  001394  6E51               	movwf	Espera@ms^0,c
  8350  001396  503D               	movf	_Timer^0,w,c
  8351  001398  ECA0  F00D         	call	_Espera
  8352                           
  8353                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8354  00139C  0E03               	movlw	3
  8355  00139E  ECED  F00A         	call	_EscriuPrimeraOrdre
  8356                           
  8357                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8358  0013A2  D83A               	call	PL52	;call to abstracted procedure
  8359  0013A4  ECA0  F00D         	call	_Espera
  8360                           
  8361                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8362  0013A8  0E03               	movlw	3
  8363  0013AA  ECED  F00A         	call	_EscriuPrimeraOrdre
  8364                           
  8365                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8366  0013AE  D834               	call	PL52	;call to abstracted procedure
  8367  0013B0  ECA0  F00D         	call	_Espera
  8368                           
  8369                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8370  0013B4  0E02               	movlw	2
  8371  0013B6  ECED  F00A         	call	_EscriuPrimeraOrdre
  8372                           
  8373                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8374  0013BA  6A52               	clrf	(Espera@ms+1)^0,c
  8375  0013BC  0E04               	movlw	4
  8376  0013BE  6E51               	movwf	Espera@ms^0,c
  8377  0013C0  503D               	movf	_Timer^0,w,c
  8378  0013C2  ECA0  F00D         	call	_Espera
  8379                           
  8380                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8381  0013C6  0E28               	movlw	40
  8382  0013C8  ECCE  F00D         	call	_CantaIR
  8383                           
  8384                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8385  0013CC  EC92  F00C         	call	_WaitForBusy	;wreg free
  8386  0013D0  0E08               	movlw	8
  8387  0013D2  ECCE  F00D         	call	_CantaIR
  8388                           
  8389                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8390  0013D6  EC92  F00C         	call	_WaitForBusy	;wreg free
  8391  0013DA  0E01               	movlw	1
  8392  0013DC  ECCE  F00D         	call	_CantaIR
  8393                           
  8394                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8395  0013E0  EC9B  F00D         	call	PL76	;call to abstracted procedure
  8396  0013E4  ECA0  F00D         	call	_Espera
  8397                           
  8398                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8399  0013E8  EC92  F00C         	call	_WaitForBusy	;wreg free
  8400  0013EC  0E06               	movlw	6
  8401  0013EE  ECCE  F00D         	call	_CantaIR
  8402                           
  8403                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8404  0013F2  EC92  F00C         	call	_WaitForBusy	;wreg free
  8405  0013F6  0E0F               	movlw	15
  8406  0013F8  ECCE  F00D         	call	_CantaIR
  8407                           
  8408                           ;LcTLCD.c: 74:  }
  8409  0013FC  4A56               	infsnz	LcInit@i^0,f,c
  8410  0013FE  2A57               	incf	(LcInit@i+1)^0,f,c
  8411  001400  BE57               	btfsc	(LcInit@i+1)^0,7,c
  8412  001402  D7BD               	goto	l4513
  8413  001404  5057               	movf	(LcInit@i+1)^0,w,c
  8414  001406  E103               	bnz	u3890
  8415  001408  0E02               	movlw	2
  8416  00140A  5C56               	subwf	LcInit@i^0,w,c
  8417  00140C  E3B8               	bnc	l4513
  8418  00140E                     u3890:
  8419                           
  8420                           ;LcTLCD.c: 80:     WaitForBusy();
  8421  00140E  EC92  F00C         	call	_WaitForBusy	;wreg free
  8422                           
  8423                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8424  001412  0E0C               	movlw	12
  8425  001414  EFCE  F00D         	goto	_CantaIR
  8426  001418                     __end_of_LcInit:
  8427                           	callstack 0
  8428  001418                     PL52:
  8429                           	callstack 26
  8430  001418  6A52               	clrf	(Espera@ms+1)^0,c
  8431  00141A  0E01               	movlw	1
  8432  00141C  6E51               	movwf	Espera@ms^0,c
  8433  00141E  503D               	movf	_Timer^0,w,c
  8434  001420  0012               	return	
  8435  001422                     __end_ofPL52:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _EscriuPrimeraOrdre *****************
  8439 ;; Defined at:
  8440 ;;		line 216 in file "LcTLCD.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  ordre           1    wreg     unsigned char 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  ordre           1    6[COMRAM] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1
  8454 ;;      Params:         0       0       0
  8455 ;;      Locals:         1       0       0
  8456 ;;      Temps:          1       0       0
  8457 ;;      Totals:         2       0       0
  8458 ;;Total ram usage:        2 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; Hardware stack levels required when called: 2
  8461 ;; This function calls:
  8462 ;;		Nothing
  8463 ;; This function is called by:
  8464 ;;		_LcInit
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text71
  8469  0015DA                     __ptext71:
  8470                           	callstack 0
  8471  0015DA                     _EscriuPrimeraOrdre:
  8472                           	callstack 27
  8473                           
  8474                           ;incstack = 0
  8475                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8476  0015DA  6E4B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8477                           
  8478                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8479  0015DC  9694               	bcf	148,3,c	;volatile
  8480                           
  8481                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8482  0015DE  D82F               	call	PL38	;call to abstracted procedure
  8483  0015E0  888B               	bsf	139,4,c	;volatile
  8484                           
  8485                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8486  0015E2  A64B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8487  0015E4  D003               	goto	u230
  8488  0015E6  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8489  0015E8  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8490  0015EA  D001               	goto	u248
  8491  0015EC                     u230:
  8492  0015EC  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8493  0015EE                     u248:
  8494  0015EE  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8495  0015F0  D82D               	call	PL72	;call to abstracted procedure
  8496  0015F2  0BF7               	andlw	-9
  8497  0015F4  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8498  0015F6  6E8B               	movwf	139,c	;volatile
  8499                           
  8500                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8501  0015F8  A44B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8502  0015FA  D003               	goto	u250
  8503  0015FC  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8504  0015FE  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8505  001600  D001               	goto	u268
  8506  001602                     u250:
  8507  001602  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8508  001604                     u268:
  8509  001604  D823               	call	PL72	;call to abstracted procedure
  8510  001606  0BFB               	andlw	-5
  8511  001608  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8512  00160A  6E8B               	movwf	139,c	;volatile
  8513                           
  8514                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8515  00160C  A24B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8516  00160E  D003               	goto	u270
  8517  001610  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8518  001612  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8519  001614  D001               	goto	u288
  8520  001616                     u270:
  8521  001616  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8522  001618                     u288:
  8523  001618  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8524  00161A  508B               	movf	139,w,c	;volatile
  8525  00161C  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8526  00161E  0BFD               	andlw	-3
  8527  001620  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8528  001622  6E8B               	movwf	139,c	;volatile
  8529                           
  8530                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8531  001624  A04B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8532  001626  D003               	goto	u290
  8533  001628  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8534  00162A  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8535  00162C  D001               	goto	u308
  8536  00162E                     u290:
  8537  00162E  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8538  001630                     u308:
  8539  001630  508B               	movf	139,w,c	;volatile
  8540  001632  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8541  001634  0BFE               	andlw	-2
  8542  001636  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8543  001638  6E8B               	movwf	139,c	;volatile
  8544                           
  8545                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8546  00163A  988B               	bcf	139,4,c	;volatile
  8547  00163C  0012               	return		;funcret
  8548  00163E                     __end_of_EscriuPrimeraOrdre:
  8549                           	callstack 0
  8550  00163E                     PL38:
  8551                           	callstack 24
  8552  00163E  9494               	bcf	148,2,c	;volatile
  8553  001640  9294               	bcf	148,1,c	;volatile
  8554  001642  9094               	bcf	148,0,c	;volatile
  8555  001644  9A8B               	bcf	139,5,c	;volatile
  8556  001646  9E8C               	bcf	140,7,c	;volatile
  8557  001648  888B               	bsf	139,4,c	;volatile
  8558  00164A  0012               	return	
  8559  00164C                     __end_ofPL38:
  8560                           	callstack 0
  8561  00164C                     PL72:
  8562                           	callstack 27
  8563  00164C  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8564  00164E  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8565  001650  508B               	movf	139,w,c	;volatile
  8566  001652  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8567  001654  0012               	return	
  8568  001656                     __end_ofPL72:
  8569                           	callstack 0
  8570                           
  8571 ;; *************** function _JoystickMotor *****************
  8572 ;; Defined at:
  8573 ;;		line 18 in file "Joystick.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1
  8587 ;;      Params:         0       0       0
  8588 ;;      Locals:         0       0       0
  8589 ;;      Temps:          2       0       0
  8590 ;;      Totals:         2       0       0
  8591 ;;Total ram usage:        2 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 3
  8594 ;; This function calls:
  8595 ;;		_MNouJoystick
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text72
  8602  00128E                     __ptext72:
  8603                           	callstack 0
  8604  00128E                     _JoystickMotor:
  8605                           	callstack 27
  8606                           
  8607                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8608                           
  8609                           ;incstack = 0
  8610  00128E  D056               	goto	l3265
  8611  001290                     l1003:
  8612                           
  8613                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8614  001290  B2C2               	btfsc	194,1,c	;volatile
  8615  001292  D00B               	goto	l1004
  8616  001294  0EC8               	movlw	200
  8617  001296  60C4               	cpfslt	196,c	;volatile
  8618  001298  D008               	goto	l1004
  8619  00129A  0E32               	movlw	50
  8620  00129C  64C4               	cpfsgt	196,c	;volatile
  8621  00129E  D005               	goto	l1004
  8622                           
  8623                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8624  0012A0  0E07               	movlw	7
  8625  0012A2  6EC2               	movwf	194,c	;volatile
  8626                           
  8627                           ;Joystick.c: 24:                 cap1 = 1;
  8628  0012A4  8E76               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8629  0012A6                     l3195:
  8630                           
  8631                           ;Joystick.c: 25:     state++;
  8632  0012A6  2A17               	incf	JoystickMotor@state^0,f,c
  8633                           
  8634                           ;Joystick.c: 26:    }
  8635  0012A8  D052               	goto	l1011
  8636  0012AA                     l1004:
  8637  0012AA  B2C2               	btfsc	194,1,c	;volatile
  8638  0012AC  D00F               	goto	l1006
  8639  0012AE  0EC7               	movlw	199
  8640  0012B0  64C4               	cpfsgt	196,c	;volatile
  8641  0012B2  D00C               	goto	l1006
  8642                           
  8643                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8644  0012B4  0E02               	movlw	2
  8645  0012B6  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8646  0012B8  E003               	bz	l3203
  8647  0012BA  0E02               	movlw	2
  8648  0012BC  ECBC  F00E         	call	_MNouJoystick
  8649  0012C0                     l3203:
  8650                           
  8651                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8652  0012C0  0E02               	movlw	2
  8653  0012C2  6E18               	movwf	_ultimaTeclaAD^0,c
  8654                           
  8655                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8656  0012C4  0E07               	movlw	7
  8657  0012C6  6EC2               	movwf	194,c	;volatile
  8658                           
  8659                           ;Joystick.c: 31:                 cap1 = 0;
  8660  0012C8  9E76               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8661  0012CA  D7ED               	goto	l3195
  8662  0012CC                     l1006:
  8663  0012CC  B2C2               	btfsc	194,1,c	;volatile
  8664  0012CE  D03F               	goto	l1011
  8665  0012D0  0E33               	movlw	51
  8666  0012D2  60C4               	cpfslt	196,c	;volatile
  8667  0012D4  D03C               	goto	l1011
  8668                           
  8669                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8670  0012D6  0E08               	movlw	8
  8671  0012D8  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8672  0012DA  E003               	bz	l3217
  8673  0012DC  0E08               	movlw	8
  8674  0012DE  ECBC  F00E         	call	_MNouJoystick
  8675  0012E2                     l3217:
  8676                           
  8677                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8678  0012E2  0E08               	movlw	8
  8679  0012E4  D7EE               	goto	L6
  8680  0012E6                     l1012:
  8681                           
  8682                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8683  0012E6  B2C2               	btfsc	194,1,c	;volatile
  8684  0012E8  D00B               	goto	l1013
  8685  0012EA  0EC8               	movlw	200
  8686  0012EC  60C4               	cpfslt	196,c	;volatile
  8687  0012EE  D008               	goto	l1013
  8688  0012F0  0E32               	movlw	50
  8689  0012F2  64C4               	cpfsgt	196,c	;volatile
  8690  0012F4  D005               	goto	l1013
  8691                           
  8692                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8693  0012F6  0E03               	movlw	3
  8694  0012F8  6EC2               	movwf	194,c	;volatile
  8695                           
  8696                           ;Joystick.c: 45:                 cap2 = 1;
  8697  0012FA  8C76               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8698  0012FC                     l3233:
  8699                           
  8700                           ;Joystick.c: 46:     state--;
  8701  0012FC  0617               	decf	JoystickMotor@state^0,f,c
  8702                           
  8703                           ;Joystick.c: 47:    }
  8704  0012FE  D027               	goto	l1011
  8705  001300                     l1013:
  8706  001300  B2C2               	btfsc	194,1,c	;volatile
  8707  001302  D00F               	goto	l1015
  8708  001304  0EC7               	movlw	199
  8709  001306  64C4               	cpfsgt	196,c	;volatile
  8710  001308  D00C               	goto	l1015
  8711                           
  8712                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8713  00130A  0E06               	movlw	6
  8714  00130C  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8715  00130E  E003               	bz	l3241
  8716  001310  0E06               	movlw	6
  8717  001312  ECBC  F00E         	call	_MNouJoystick
  8718  001316                     l3241:
  8719                           
  8720                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8721  001316  0E06               	movlw	6
  8722  001318  6E18               	movwf	_ultimaTeclaAD^0,c
  8723                           
  8724                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8725  00131A  0E03               	movlw	3
  8726  00131C  6EC2               	movwf	194,c	;volatile
  8727                           
  8728                           ;Joystick.c: 52:                 cap2 = 0;
  8729  00131E  9C76               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8730  001320  D7ED               	goto	l3233
  8731  001322                     l1015:
  8732  001322  B2C2               	btfsc	194,1,c	;volatile
  8733  001324  D014               	goto	l1011
  8734  001326  0E33               	movlw	51
  8735  001328  60C4               	cpfslt	196,c	;volatile
  8736  00132A  D011               	goto	l1011
  8737                           
  8738                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8739  00132C  0E04               	movlw	4
  8740  00132E  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8741  001330  E003               	bz	l3255
  8742  001332  0E04               	movlw	4
  8743  001334  ECBC  F00E         	call	_MNouJoystick
  8744  001338                     l3255:
  8745                           
  8746                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8747  001338  0E04               	movlw	4
  8748  00133A  D7EE               	goto	L7
  8749  00133C                     l3265:
  8750  00133C  5017               	movf	JoystickMotor@state^0,w,c
  8751  00133E  6E4B               	movwf	??_JoystickMotor^0,c
  8752  001340  6A4C               	clrf	(??_JoystickMotor+1)^0,c
  8753                           
  8754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8755                           ; Switch size 1, requested type "space"
  8756                           ; Number of cases is 1, Range of values is 0 to 0
  8757                           ; switch strategies available:
  8758                           ; Name         Instructions Cycles
  8759                           ; simple_byte            4     3 (average)
  8760                           ;	Chosen strategy is simple_byte
  8761  001342  504C               	movf	(??_JoystickMotor+1)^0,w,c
  8762  001344  E104               	bnz	l1011
  8763                           
  8764                           ; Switch size 1, requested type "space"
  8765                           ; Number of cases is 2, Range of values is 0 to 1
  8766                           ; switch strategies available:
  8767                           ; Name         Instructions Cycles
  8768                           ; simple_byte            7     4 (average)
  8769                           ;	Chosen strategy is simple_byte
  8770  001346  504B               	movf	??_JoystickMotor^0,w,c
  8771  001348  E0A3               	bz	l1003
  8772  00134A  0A01               	xorlw	1	; case 1
  8773  00134C  E0CC               	bz	l1012
  8774  00134E                     l1011:
  8775                           
  8776                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8777  00134E  BE76               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8778  001350  AC76               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8779  001352  0012               	return	
  8780  001354  5018               	movf	_ultimaTeclaAD^0,w,c
  8781  001356  B4D8               	btfsc	status,2,c
  8782  001358  0012               	return	
  8783                           
  8784                           ;Joystick.c: 66:         MNouJoystick(-1);
  8785  00135A  0EFF               	movlw	255
  8786  00135C  ECBC  F00E         	call	_MNouJoystick
  8787                           
  8788                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8789  001360  6818               	setf	_ultimaTeclaAD^0,c
  8790  001362  0012               	return		;funcret
  8791  001364                     __end_of_JoystickMotor:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _MNouJoystick *****************
  8795 ;; Defined at:
  8796 ;;		line 38 in file "Menu.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  posicio         1    wreg     char 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  posicio         1    5[COMRAM] char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1
  8810 ;;      Params:         0       0       0
  8811 ;;      Locals:         1       0       0
  8812 ;;      Temps:          0       0       0
  8813 ;;      Totals:         1       0       0
  8814 ;;Total ram usage:        1 bytes
  8815 ;; Hardware stack levels used: 1
  8816 ;; Hardware stack levels required when called: 2
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_JoystickMotor
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text73
  8825  001D78                     __ptext73:
  8826                           	callstack 0
  8827  001D78                     _MNouJoystick:
  8828                           	callstack 27
  8829                           
  8830                           ;incstack = 0
  8831                           ;MNouJoystick@posicio stored from wreg
  8832  001D78  6E4A               	movwf	MNouJoystick@posicio^0,c
  8833                           
  8834                           ;Menu.c: 39:     novaDireccio = posicio;
  8835  001D7A  C04A  F067         	movff	MNouJoystick@posicio,_novaDireccio
  8836  001D7E  0012               	return		;funcret
  8837  001D80                     __end_of_MNouJoystick:
  8838                           	callstack 0
  8839                           
  8840 ;; *************** function _JoystickInit *****************
  8841 ;; Defined at:
  8842 ;;		line 12 in file "Joystick.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1
  8856 ;;      Params:         0       0       0
  8857 ;;      Locals:         0       0       0
  8858 ;;      Temps:          0       0       0
  8859 ;;      Totals:         0       0       0
  8860 ;;Total ram usage:        0 bytes
  8861 ;; Hardware stack levels used: 1
  8862 ;; Hardware stack levels required when called: 2
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text74
  8871  001C2A                     __ptext74:
  8872                           	callstack 0
  8873  001C2A                     _JoystickInit:
  8874                           	callstack 28
  8875                           
  8876                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8877                           
  8878                           ;incstack = 0
  8879  001C2A  0E01               	movlw	1
  8880  001C2C  6EC2               	movwf	194,c	;volatile
  8881                           
  8882                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8883  001C2E  0E0D               	movlw	13
  8884  001C30  6EC1               	movwf	193,c	;volatile
  8885                           
  8886                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8887  001C32  0E09               	movlw	9
  8888  001C34  6EC0               	movwf	192,c	;volatile
  8889                           
  8890                           ;Joystick.c: 16:     ADRESH = 127;
  8891  001C36  0E7F               	movlw	127
  8892  001C38  6EC4               	movwf	196,c	;volatile
  8893  001C3A  0C7F               	retlw	127	;funcret
  8894  001C3C                     __end_of_JoystickInit:
  8895                           	callstack 0
  8896                           
  8897 ;; *************** function _GLCDMotor *****************
  8898 ;; Defined at:
  8899 ;;		line 36 in file "GestioLCD.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1
  8913 ;;      Params:         0       0       0
  8914 ;;      Locals:         0       0       0
  8915 ;;      Temps:          2       0       0
  8916 ;;      Totals:         2       0       0
  8917 ;;Total ram usage:        2 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 6
  8920 ;; This function calls:
  8921 ;;		_LcClear
  8922 ;;		_LcGotoXY
  8923 ;;		_LcLliure
  8924 ;;		_LcNewString
  8925 ;;		_LcPutChar
  8926 ;;		_TiGetTics
  8927 ;;		_TiResetTics
  8928 ;; This function is called by:
  8929 ;;		_main
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text75
  8934  0007B4                     __ptext75:
  8935                           	callstack 0
  8936  0007B4                     _GLCDMotor:
  8937                           	callstack 24
  8938                           
  8939                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8940                           
  8941                           ;incstack = 0
  8942  0007B4  D0FD               	goto	l5023
  8943  0007B6                     l4839:
  8944                           
  8945                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8946  0007B6  0E11               	movlw	17
  8947  0007B8  601A               	cpfslt	GLCDMotor@length1^0,c
  8948  0007BA  D00E               	goto	l4849
  8949  0007BC  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8950  0007BE  D00C               	goto	l4849
  8951                           
  8952                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8953  0007C0  0E00               	movlw	0
  8954  0007C2  6E52               	movwf	LcGotoXY@Row^0,c
  8955  0007C4  EC01  F00D         	call	_LcGotoXY
  8956                           
  8957                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8958  0007C8  5021               	movf	_menuDaltGLCD^0,w,c
  8959  0007CA  0D1D               	mullw	29
  8960  0007CC  D930               	call	PL36	;call to abstracted procedure
  8961  0007CE  EC67  F00E         	call	_LcNewString	;wreg free
  8962                           
  8963                           ;GestioLCD.c: 53:     state = 5;
  8964  0007D2  0E05               	movlw	5
  8965  0007D4  6E20               	movwf	GLCDMotor@state^0,c
  8966                           
  8967                           ;GestioLCD.c: 54:    }
  8968  0007D6  0C05               	retlw	5
  8969  0007D8                     l4849:
  8970  0007D8  0E10               	movlw	16
  8971  0007DA  641A               	cpfsgt	GLCDMotor@length1^0,c
  8972  0007DC  0C10               	retlw	16
  8973  0007DE  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8974  0007E0  0C10               	retlw	16
  8975  0007E2                     u4400:
  8976                           
  8977                           ;GestioLCD.c: 56:     state++;
  8978  0007E2  2A20               	incf	GLCDMotor@state^0,f,c
  8979  0007E4  0012               	return	
  8980  0007E6                     l4855:
  8981                           
  8982                           ;GestioLCD.c: 60:    if (j>=16) {
  8983  0007E6  0E0F               	movlw	15
  8984  0007E8  641F               	cpfsgt	GLCDMotor@j^0,c
  8985  0007EA  D012               	goto	l4869
  8986                           
  8987                           ;GestioLCD.c: 61:     min1++;
  8988  0007EC  2A1E               	incf	GLCDMotor@min1^0,f,c
  8989                           
  8990                           ;GestioLCD.c: 62:     max1++;
  8991  0007EE  2A65               	incf	GLCDMotor@max1^0,f,c
  8992                           
  8993                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8994  0007F0  D905               	call	PL2	;call to abstracted procedure
  8995  0007F2  5065               	movf	GLCDMotor@max1^0,w,c
  8996  0007F4  D90E               	call	PL4	;call to abstracted procedure
  8997  0007F6  E101               	bnz	l4863
  8998  0007F8  6A65               	clrf	GLCDMotor@max1^0,c
  8999  0007FA                     l4863:
  9000                           
  9001                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9002  0007FA  D900               	call	PL2	;call to abstracted procedure
  9003  0007FC  501E               	movf	GLCDMotor@min1^0,w,c
  9004  0007FE  D909               	call	PL4	;call to abstracted procedure
  9005  000800  E101               	bnz	l934
  9006  000802  6A1E               	clrf	GLCDMotor@min1^0,c
  9007  000804                     l934:
  9008                           
  9009                           ;GestioLCD.c: 65:     j=0;
  9010  000804  6A1F               	clrf	GLCDMotor@j^0,c
  9011                           
  9012                           ;GestioLCD.c: 66:     k1=min1;
  9013  000806  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9014                           
  9015                           ;GestioLCD.c: 67:     state = 6;
  9016  00080A  0E06               	movlw	6
  9017  00080C  6E20               	movwf	GLCDMotor@state^0,c
  9018                           
  9019                           ;GestioLCD.c: 68:    }
  9020  00080E  0C06               	retlw	6
  9021  000810                     l4869:
  9022  000810  0E10               	movlw	16
  9023  000812  601F               	cpfslt	GLCDMotor@j^0,c
  9024  000814  0C10               	retlw	16
  9025                           
  9026                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9027  000816  0E00               	movlw	0
  9028  000818  6E52               	movwf	LcGotoXY@Row^0,c
  9029  00081A  501F               	movf	GLCDMotor@j^0,w,c
  9030  00081C  EC01  F00D         	call	_LcGotoXY
  9031                           
  9032                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9033  000820  D8ED               	call	PL2	;call to abstracted procedure
  9034  000822  501C               	movf	GLCDMotor@k1^0,w,c
  9035  000824  D8F6               	call	PL4	;call to abstracted procedure
  9036  000826  EC2B  F00C         	call	_LcPutChar
  9037                           
  9038                           ;GestioLCD.c: 72:     j++;
  9039  00082A  2A1F               	incf	GLCDMotor@j^0,f,c
  9040                           
  9041                           ;GestioLCD.c: 73:     k1++;
  9042  00082C  2A1C               	incf	GLCDMotor@k1^0,f,c
  9043                           
  9044                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9045  00082E  D8E6               	call	PL2	;call to abstracted procedure
  9046  000830  501C               	movf	GLCDMotor@k1^0,w,c
  9047  000832  D8EF               	call	PL4	;call to abstracted procedure
  9048  000834  B4D8               	btfsc	status,2,c
  9049  000836  6A1C               	clrf	GLCDMotor@k1^0,c
  9050  000838  0012               	return	
  9051  00083A                     l4883:
  9052                           
  9053                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9054  00083A  0E04               	movlw	4
  9055  00083C  6021               	cpfslt	_menuDaltGLCD^0,c
  9056  00083E  D010               	goto	u4500
  9057  000840  D7D0               	goto	u4400
  9058  000842                     u4470:
  9059                           
  9060                           ;GestioLCD.c: 82:     state = 0;
  9061  000842  6A20               	clrf	GLCDMotor@state^0,c
  9062  000844  0012               	return	
  9063  000846                     l4891:
  9064                           
  9065                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9066  000846  EC6D  F00E         	call	_LcLliure	;wreg free
  9067  00084A  E306               	bnc	l4897
  9068  00084C  0E04               	movlw	4
  9069  00084E  6021               	cpfslt	_menuDaltGLCD^0,c
  9070  000850  D003               	goto	l4897
  9071                           
  9072                           ;GestioLCD.c: 87:     state = 7;
  9073  000852  0E07               	movlw	7
  9074  000854  6E20               	movwf	GLCDMotor@state^0,c
  9075                           
  9076                           ;GestioLCD.c: 88:    }
  9077  000856  0C07               	retlw	7
  9078  000858                     l4897:
  9079  000858  EC6D  F00E         	call	_LcLliure	;wreg free
  9080  00085C  A0D8               	btfss	status,0,c
  9081  00085E  0012               	return	
  9082  000860                     u4500:
  9083  000860  0E03               	movlw	3
  9084  000862  6421               	cpfsgt	_menuDaltGLCD^0,c
  9085  000864  0C03               	retlw	3
  9086  000866  D7ED               	goto	u4470
  9087  000868                     l946:
  9088                           
  9089                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9090  000868  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9091  00086A  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9092  00086C  0012               	return	
  9093                           
  9094                           ;GestioLCD.c: 95:     length1 = 0;
  9095  00086E  6A1A               	clrf	GLCDMotor@length1^0,c
  9096                           
  9097                           ;GestioLCD.c: 96:     length2 = 0;
  9098  000870  6A19               	clrf	GLCDMotor@length2^0,c
  9099                           
  9100                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9101  000872  0E00               	movlw	0
  9102  000874  6E52               	movwf	LcGotoXY@Row^0,c
  9103  000876  EC01  F00D         	call	_LcGotoXY
  9104                           
  9105                           ;GestioLCD.c: 98:     min1 = 0;
  9106  00087A  6A1E               	clrf	GLCDMotor@min1^0,c
  9107                           
  9108                           ;GestioLCD.c: 99:     max1 = 15;
  9109  00087C  0E0F               	movlw	15
  9110  00087E  6E65               	movwf	GLCDMotor@max1^0,c
  9111                           
  9112                           ;GestioLCD.c: 100:     min2 = 0;
  9113  000880  6A1D               	clrf	GLCDMotor@min2^0,c
  9114                           
  9115                           ;GestioLCD.c: 101:     max2 = 15;
  9116  000882  0E0F               	movlw	15
  9117  000884  6E64               	movwf	GLCDMotor@max2^0,c
  9118                           
  9119                           ;GestioLCD.c: 102:     j = 0;
  9120  000886  6A1F               	clrf	GLCDMotor@j^0,c
  9121                           
  9122                           ;GestioLCD.c: 103:     k1 = 0;
  9123  000888  6A1C               	clrf	GLCDMotor@k1^0,c
  9124                           
  9125                           ;GestioLCD.c: 104:     k2 = 0;
  9126  00088A  6A1B               	clrf	GLCDMotor@k2^0,c
  9127                           
  9128                           ;GestioLCD.c: 105:     newString = 0;
  9129  00088C  9077               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9130  00088E  D7A9               	goto	u4400
  9131  000890                     l4927:
  9132                           
  9133                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9134  000890  D8B5               	call	PL2	;call to abstracted procedure
  9135  000892  501A               	movf	GLCDMotor@length1^0,w,c
  9136  000894  D8BE               	call	PL4	;call to abstracted procedure
  9137  000896  E104               	bnz	l4933
  9138  000898  0E03               	movlw	3
  9139  00089A  6421               	cpfsgt	_menuDaltGLCD^0,c
  9140  00089C  D001               	goto	l4933
  9141  00089E  D7A1               	goto	u4400
  9142  0008A0                     l4933:
  9143  0008A0  D8AD               	call	PL2	;call to abstracted procedure
  9144  0008A2  501A               	movf	GLCDMotor@length1^0,w,c
  9145  0008A4  D8B6               	call	PL4	;call to abstracted procedure
  9146  0008A6  E002               	bz	l4937
  9147                           
  9148                           ;GestioLCD.c: 114:     length1++;
  9149  0008A8  2A1A               	incf	GLCDMotor@length1^0,f,c
  9150                           
  9151                           ;GestioLCD.c: 115:    }
  9152  0008AA  0012               	return	
  9153  0008AC                     l4937:
  9154  0008AC  0E04               	movlw	4
  9155  0008AE  6021               	cpfslt	_menuDaltGLCD^0,c
  9156  0008B0  0C04               	retlw	4
  9157  0008B2  D8A4               	call	PL2	;call to abstracted procedure
  9158  0008B4  501A               	movf	GLCDMotor@length1^0,w,c
  9159  0008B6  D8AD               	call	PL4	;call to abstracted procedure
  9160  0008B8  A4D8               	btfss	status,2,c
  9161  0008BA  0012               	return	
  9162                           
  9163                           ;GestioLCD.c: 117:     state = 13;
  9164  0008BC  0E0D               	movlw	13
  9165  0008BE  6E20               	movwf	GLCDMotor@state^0,c
  9166  0008C0  0C0D               	retlw	13
  9167  0008C2                     l4943:
  9168                           
  9169                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9170  0008C2  0E11               	movlw	17
  9171  0008C4  6019               	cpfslt	GLCDMotor@length2^0,c
  9172  0008C6  D010               	goto	l4953
  9173  0008C8  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9174  0008CA  D00E               	goto	l4953
  9175                           
  9176                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9177  0008CC  ECBF  F003         	call	PL30	;call to abstracted procedure
  9178  0008D0  EC01  F00D         	call	_LcGotoXY
  9179                           
  9180                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9181  0008D4  5021               	movf	_menuDaltGLCD^0,w,c
  9182  0008D6  0D1D               	mullw	29
  9183  0008D8  0E1D               	movlw	29
  9184  0008DA  26F3               	addwf	243,f,c
  9185  0008DC  0E00               	movlw	0
  9186  0008DE  22F4               	addwfc	244,f,c
  9187  0008E0  D8A6               	call	PL36	;call to abstracted procedure
  9188  0008E2  EC67  F00E         	call	_LcNewString	;wreg free
  9189  0008E6  D77D               	goto	u4400
  9190  0008E8                     l4953:
  9191  0008E8  0E10               	movlw	16
  9192  0008EA  6419               	cpfsgt	GLCDMotor@length2^0,c
  9193  0008EC  0C10               	retlw	16
  9194  0008EE  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9195  0008F0  0C10               	retlw	16
  9196                           
  9197                           ;GestioLCD.c: 127:     state = 9;
  9198  0008F2  0E09               	movlw	9
  9199  0008F4  6E20               	movwf	GLCDMotor@state^0,c
  9200  0008F6  0C09               	retlw	9
  9201  0008F8                     l4959:
  9202                           
  9203                           ;GestioLCD.c: 131:    if (j<16) {
  9204  0008F8  0E10               	movlw	16
  9205  0008FA  601F               	cpfslt	GLCDMotor@j^0,c
  9206  0008FC  D014               	goto	l4973
  9207                           
  9208                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9209  0008FE  0E01               	movlw	1
  9210  000900  6E52               	movwf	LcGotoXY@Row^0,c
  9211  000902  501F               	movf	GLCDMotor@j^0,w,c
  9212  000904  EC01  F00D         	call	_LcGotoXY
  9213                           
  9214                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9215  000908  D879               	call	PL2	;call to abstracted procedure
  9216  00090A  501B               	movf	GLCDMotor@k2^0,w,c
  9217  00090C  D88C               	call	PL6	;call to abstracted procedure
  9218  00090E  D881               	call	PL4	;call to abstracted procedure
  9219  000910  EC2B  F00C         	call	_LcPutChar
  9220                           
  9221                           ;GestioLCD.c: 134:     j++;
  9222  000914  2A1F               	incf	GLCDMotor@j^0,f,c
  9223                           
  9224                           ;GestioLCD.c: 135:     k2++;
  9225  000916  2A1B               	incf	GLCDMotor@k2^0,f,c
  9226                           
  9227                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9228  000918  D871               	call	PL2	;call to abstracted procedure
  9229  00091A  501B               	movf	GLCDMotor@k2^0,w,c
  9230  00091C  D884               	call	PL6	;call to abstracted procedure
  9231  00091E  D879               	call	PL4	;call to abstracted procedure
  9232  000920  B4D8               	btfsc	status,2,c
  9233  000922  6A1B               	clrf	GLCDMotor@k2^0,c
  9234  000924  0012               	return	
  9235  000926                     l4973:
  9236  000926  0E0F               	movlw	15
  9237  000928  641F               	cpfsgt	GLCDMotor@j^0,c
  9238  00092A  0C0F               	retlw	15
  9239                           
  9240                           ;GestioLCD.c: 139:     min2++;
  9241  00092C  2A1D               	incf	GLCDMotor@min2^0,f,c
  9242                           
  9243                           ;GestioLCD.c: 140:     max2++;
  9244  00092E  2A64               	incf	GLCDMotor@max2^0,f,c
  9245                           
  9246                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9247  000930  D865               	call	PL2	;call to abstracted procedure
  9248  000932  5064               	movf	GLCDMotor@max2^0,w,c
  9249  000934  D878               	call	PL6	;call to abstracted procedure
  9250  000936  D86D               	call	PL4	;call to abstracted procedure
  9251  000938  E101               	bnz	l4981
  9252  00093A  6A64               	clrf	GLCDMotor@max2^0,c
  9253  00093C                     l4981:
  9254                           
  9255                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9256  00093C  D85F               	call	PL2	;call to abstracted procedure
  9257  00093E  501D               	movf	GLCDMotor@min2^0,w,c
  9258  000940  D872               	call	PL6	;call to abstracted procedure
  9259  000942  D867               	call	PL4	;call to abstracted procedure
  9260  000944  E101               	bnz	l964
  9261  000946  6A1D               	clrf	GLCDMotor@min2^0,c
  9262  000948                     l964:
  9263                           
  9264                           ;GestioLCD.c: 143:     j=0;
  9265  000948  6A1F               	clrf	GLCDMotor@j^0,c
  9266                           
  9267                           ;GestioLCD.c: 144:     k2=min2;
  9268  00094A  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9269  00094E  D749               	goto	u4400
  9270  000950                     l4987:
  9271                           
  9272                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9273  000950  5022               	movf	_timerGLCD^0,w,c
  9274  000952  EC58  F00D         	call	_TiGetTics
  9275  000956  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  9276  000958  D00A               	goto	l966
  9277  00095A  D870               	call	PL56	;call to abstracted procedure
  9278  00095C  E308               	bnc	l966
  9279  00095E  A077               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9280  000960  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9281  000962  D005               	goto	l966
  9282                           
  9283                           ;GestioLCD.c: 150:     LcClear();
  9284  000964  EC8F  F00D         	call	_LcClear	;wreg free
  9285  000968                     l4995:
  9286                           
  9287                           ;GestioLCD.c: 151:     state = 2;
  9288  000968  0E02               	movlw	2
  9289  00096A  6E20               	movwf	GLCDMotor@state^0,c
  9290                           
  9291                           ;GestioLCD.c: 152:    }
  9292  00096C  0C02               	retlw	2
  9293  00096E                     l966:
  9294  00096E  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9295  000970  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9296  000972  0012               	return	
  9297                           
  9298                           ;GestioLCD.c: 154:     LcClear();
  9299  000974  EC8F  F00D         	call	_LcClear	;wreg free
  9300  000978  D764               	goto	u4470
  9301  00097A                     l5003:
  9302                           
  9303                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9304  00097A  5022               	movf	_timerGLCD^0,w,c
  9305  00097C  ECDC  F00D         	call	_TiResetTics
  9306  000980  D730               	goto	u4400
  9307  000982                     l5007:
  9308                           
  9309                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9310  000982  EC6D  F00E         	call	_LcLliure	;wreg free
  9311  000986  A0D8               	btfss	status,0,c
  9312  000988  0012               	return	
  9313                           
  9314                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9315  00098A  5022               	movf	_timerGLCD^0,w,c
  9316  00098C  ECDC  F00D         	call	_TiResetTics
  9317                           
  9318                           ;GestioLCD.c: 165:     state = 11;
  9319  000990  0E0B               	movlw	11
  9320  000992  6E20               	movwf	GLCDMotor@state^0,c
  9321  000994  0C0B               	retlw	11
  9322  000996                     l5013:
  9323                           
  9324                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9325  000996  D832               	call	PL2	;call to abstracted procedure
  9326  000998  5019               	movf	GLCDMotor@length2^0,w,c
  9327  00099A  D845               	call	PL6	;call to abstracted procedure
  9328  00099C  D83A               	call	PL4	;call to abstracted procedure
  9329  00099E  E002               	bz	l5017
  9330                           
  9331                           ;GestioLCD.c: 170:     length2++;
  9332  0009A0  2A19               	incf	GLCDMotor@length2^0,f,c
  9333                           
  9334                           ;GestioLCD.c: 171:    }
  9335  0009A2  0012               	return	
  9336  0009A4                     l5017:
  9337  0009A4  D82B               	call	PL2	;call to abstracted procedure
  9338  0009A6  5019               	movf	GLCDMotor@length2^0,w,c
  9339  0009A8  D83E               	call	PL6	;call to abstracted procedure
  9340  0009AA  D833               	call	PL4	;call to abstracted procedure
  9341  0009AC  E0DD               	bz	l4995
  9342  0009AE  0012               	return	
  9343  0009B0                     l5023:
  9344  0009B0  5020               	movf	GLCDMotor@state^0,w,c
  9345  0009B2  6E59               	movwf	??_GLCDMotor^0,c
  9346  0009B4  6A5A               	clrf	(??_GLCDMotor+1)^0,c
  9347                           
  9348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9349                           ; Switch size 1, requested type "space"
  9350                           ; Number of cases is 1, Range of values is 0 to 0
  9351                           ; switch strategies available:
  9352                           ; Name         Instructions Cycles
  9353                           ; simple_byte            4     3 (average)
  9354                           ;	Chosen strategy is simple_byte
  9355  0009B6  505A               	movf	(??_GLCDMotor+1)^0,w,c
  9356  0009B8  A4D8               	btfss	status,2,c
  9357  0009BA  0012               	return	
  9358                           
  9359                           ; Switch size 1, requested type "space"
  9360                           ; Number of cases is 12, Range of values is 0 to 13
  9361                           ; switch strategies available:
  9362                           ; Name         Instructions Cycles
  9363                           ; simple_byte           37    19 (average)
  9364                           ;	Chosen strategy is simple_byte
  9365  0009BC  5059               	movf	??_GLCDMotor^0,w,c
  9366  0009BE  E101 D753          	bz	l946
  9367  0009C2  0A01               	xorlw	1	; case 1
  9368  0009C4  E101 D764          	bz	l4927
  9369  0009C8  0A03               	xorlw	3	; case 2
  9370  0009CA  E101 D6F4          	bz	l4839
  9371  0009CE  0A01               	xorlw	1	; case 3
  9372  0009D0  E101 D709          	bz	l4855
  9373  0009D4  0A06               	xorlw	6	; case 5
  9374  0009D6  E101 D736          	bz	l4891
  9375  0009DA  0A03               	xorlw	3	; case 6
  9376  0009DC  E101 D72D          	bz	l4883
  9377  0009E0  0A01               	xorlw	1	; case 7
  9378  0009E2  E101 D76E          	bz	l4943
  9379  0009E6  0A0F               	xorlw	15	; case 8
  9380  0009E8  E0CC               	bz	l5007
  9381  0009EA  0A01               	xorlw	1	; case 9
  9382  0009EC  E085               	bz	l4959
  9383  0009EE  0A03               	xorlw	3	; case 10
  9384  0009F0  E0C4               	bz	l5003
  9385  0009F2  0A01               	xorlw	1	; case 11
  9386  0009F4  E0AD               	bz	l4987
  9387  0009F6  0A06               	xorlw	6	; case 13
  9388  0009F8  E0CE               	bz	l5013
  9389  0009FA  0012               	return		;funcret
  9390  0009FC                     __end_of_GLCDMotor:
  9391                           	callstack 0
  9392  0009FC                     PL2:
  9393                           	callstack 24
  9394  0009FC  5021               	movf	_menuDaltGLCD^0,w,c
  9395  0009FE  0D1D               	mullw	29
  9396  000A00  0EFF               	movlw	low _menuList
  9397  000A02  6E59               	movwf	??_GLCDMotor^0,c
  9398  000A04  0E1E               	movlw	high _menuList
  9399  000A06  6E5A               	movwf	(??_GLCDMotor+1)^0,c
  9400  000A08  50F3               	movf	243,w,c
  9401  000A0A  2659               	addwf	??_GLCDMotor^0,f,c
  9402  000A0C  50F4               	movf	244,w,c
  9403  000A0E  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9404  000A10  0012               	return	
  9405  000A12                     __end_ofPL2:
  9406                           	callstack 0
  9407  000A12                     PL4:
  9408                           	callstack 24
  9409  000A12  2659               	addwf	??_GLCDMotor^0,f,c
  9410  000A14  0E00               	movlw	0
  9411  000A16  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9412  000A18  C059  FFF6         	movff	??_GLCDMotor,tblptrl
  9413  000A1C  C05A  FFF7         	movff	??_GLCDMotor+1,tblptrh
  9414  000A20                     	if	0	;tblptru may be non-zero
  9415  000A20                     	endif
  9416  000A20                     	if	0	;tblptru may be non-zero
  9417  000A20                     	endif
  9418  000A20  0008               	tblrd		*
  9419  000A22  50F5               	movf	tablat,w,c
  9420  000A24  0012               	return	
  9421  000A26                     __end_ofPL4:
  9422                           	callstack 0
  9423  000A26                     PL6:
  9424                           	callstack 24
  9425  000A26  2659               	addwf	??_GLCDMotor^0,f,c
  9426  000A28  0E00               	movlw	0
  9427  000A2A  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9428  000A2C  0C1D               	retlw	29
  9429  000A2E                     __end_ofPL6:
  9430                           	callstack 0
  9431  000A2E                     PL36:
  9432                           	callstack 24
  9433  000A2E  0EFF               	movlw	low _menuList
  9434  000A30  24F3               	addwf	243,w,c
  9435  000A32  6E4D               	movwf	LcNewString@new_s^0,c
  9436  000A34  0E1E               	movlw	high _menuList
  9437  000A36  20F4               	addwfc	prodh,w,c
  9438  000A38  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  9439  000A3A  0012               	return	
  9440  000A3C                     __end_ofPL36:
  9441                           	callstack 0
  9442  000A3C                     PL56:
  9443                           	callstack 27
  9444  000A3C  0EB5               	movlw	181
  9445  000A3E  5C4A               	subwf	?_TiGetTics^0,w,c
  9446  000A40  0E04               	movlw	4
  9447  000A42  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  9448  000A44  0012               	return	
  9449  000A46                     __end_ofPL56:
  9450                           	callstack 0
  9451                           
  9452 ;; *************** function _LcPutChar *****************
  9453 ;; Defined at:
  9454 ;;		line 120 in file "LcTLCD.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  c               1    wreg     unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  c               1   19[COMRAM] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1
  9468 ;;      Params:         0       0       0
  9469 ;;      Locals:         1       0       0
  9470 ;;      Temps:          0       0       0
  9471 ;;      Totals:         1       0       0
  9472 ;;Total ram usage:        1 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 5
  9475 ;; This function calls:
  9476 ;;		_CantaData
  9477 ;;		_LcGotoXY
  9478 ;;		_WaitForBusy
  9479 ;; This function is called by:
  9480 ;;		_LcLCD
  9481 ;;		_menu
  9482 ;;		_GLCDMotor
  9483 ;;		_motorSIO
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text76
  9488  001856                     __ptext76:
  9489                           	callstack 0
  9490  001856                     _LcPutChar:
  9491                           	callstack 24
  9492                           
  9493                           ;incstack = 0
  9494                           ;LcPutChar@c stored from wreg
  9495  001856  6E58               	movwf	LcPutChar@c^0,c
  9496                           
  9497                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9498  001858  EC92  F00C         	call	_WaitForBusy	;wreg free
  9499  00185C  5058               	movf	LcPutChar@c^0,w,c
  9500  00185E  ECB1  F00C         	call	_CantaData
  9501                           
  9502                           ;LcTLCD.c: 124:  ++ColumnAct;
  9503  001862  2A3E               	incf	_ColumnAct^0,f,c
  9504                           
  9505                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9506  001864  0E02               	movlw	2
  9507  001866  1840               	xorwf	_Rows^0,w,c
  9508  001868  E10C               	bnz	l4379
  9509                           
  9510                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9511  00186A  0E27               	movlw	39
  9512  00186C  643E               	cpfsgt	_ColumnAct^0,c
  9513  00186E  D009               	goto	l4379
  9514                           
  9515                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9516  001870  6A3E               	clrf	_ColumnAct^0,c
  9517                           
  9518                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9519  001872  2A3F               	incf	_RowAct^0,f,c
  9520  001874  0E01               	movlw	1
  9521  001876  643F               	cpfsgt	_RowAct^0,c
  9522  001878  D001               	goto	l4377
  9523  00187A  6A3F               	clrf	_RowAct^0,c
  9524  00187C                     l4377:
  9525                           
  9526                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9527  00187C  D80C               	call	PL80	;call to abstracted procedure
  9528  00187E  EC01  F00D         	call	_LcGotoXY
  9529  001882                     l4379:
  9530                           
  9531                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9532  001882  043F               	decf	_RowAct^0,w,c
  9533  001884  A4D8               	btfss	status,2,c
  9534  001886  0012               	return	
  9535                           
  9536                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9537  001888  0E27               	movlw	39
  9538  00188A  643E               	cpfsgt	_ColumnAct^0,c
  9539  00188C  D001               	goto	l4385
  9540  00188E  6A3E               	clrf	_ColumnAct^0,c
  9541  001890                     l4385:
  9542                           
  9543                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9544  001890  D802               	call	PL80	;call to abstracted procedure
  9545  001892  EF01  F00D         	goto	_LcGotoXY
  9546  001896                     __end_of_LcPutChar:
  9547                           	callstack 0
  9548  001896                     PL80:
  9549                           	callstack 24
  9550  001896  C03F  F052         	movff	_RowAct,LcGotoXY@Row
  9551  00189A  503E               	movf	_ColumnAct^0,w,c
  9552  00189C  0012               	return	
  9553  00189E                     __end_ofPL80:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _CantaData *****************
  9557 ;; Defined at:
  9558 ;;		line 182 in file "LcTLCD.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  Data            1    wreg     unsigned char 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;  Data            1    7[COMRAM] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1
  9572 ;;      Params:         0       0       0
  9573 ;;      Locals:         1       0       0
  9574 ;;      Temps:          0       0       0
  9575 ;;      Totals:         1       0       0
  9576 ;;Total ram usage:        1 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 3
  9579 ;; This function calls:
  9580 ;;		_CantaPartAlta
  9581 ;;		_CantaPartBaixa
  9582 ;; This function is called by:
  9583 ;;		_LcPutChar
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text77
  9588  001962                     __ptext77:
  9589                           	callstack 0
  9590  001962                     _CantaData:
  9591                           	callstack 25
  9592                           
  9593                           ;incstack = 0
  9594                           ;CantaData@Data stored from wreg
  9595  001962  6E4C               	movwf	CantaData@Data^0,c
  9596                           
  9597                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9598  001964  9694               	bcf	148,3,c	;volatile
  9599  001966  9494               	bcf	148,2,c	;volatile
  9600  001968  9294               	bcf	148,1,c	;volatile
  9601  00196A  9094               	bcf	148,0,c	;volatile
  9602                           
  9603                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
  9604  00196C  8A8B               	bsf	139,5,c	;volatile
  9605                           
  9606                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
  9607  00196E  9E8C               	bcf	140,7,c	;volatile
  9608                           
  9609                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9610  001970  888B               	bsf	139,4,c	;volatile
  9611                           
  9612                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
  9613  001972  504C               	movf	CantaData@Data^0,w,c
  9614  001974  ECD0  F00B         	call	_CantaPartAlta
  9615                           
  9616                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
  9617                           
  9618                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
  9619                           
  9620                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  9621                           
  9622                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9623  001978  D80B               	call	PL60	;call to abstracted procedure
  9624                           
  9625                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
  9626  00197A  504C               	movf	CantaData@Data^0,w,c
  9627  00197C  EC9D  F00B         	call	_CantaPartBaixa
  9628                           
  9629                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  9630                           
  9631                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  9632                           
  9633                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9634  001980  D000               	goto	PL28	;call to abstracted procedure
  9635  001982                     __end_of_CantaData:
  9636                           	callstack 0
  9637  001982                     PL28:
  9638                           	callstack 24
  9639  001982  888B               	bsf	139,4,c	;volatile
  9640  001984  988B               	bcf	139,4,c	;volatile
  9641  001986  8694               	bsf	148,3,c	;volatile
  9642  001988  8494               	bsf	148,2,c	;volatile
  9643  00198A  8294               	bsf	148,1,c	;volatile
  9644  00198C  8094               	bsf	148,0,c	;volatile
  9645  00198E  0012               	return		;funcret
  9646  001990                     __end_ofPL28:
  9647                           	callstack 0
  9648  001990                     PL60:
  9649                           	callstack 24
  9650  001990  888B               	bsf	139,4,c	;volatile
  9651  001992  988B               	bcf	139,4,c	;volatile
  9652  001994  988B               	bcf	139,4,c	;volatile
  9653  001996  888B               	bsf	139,4,c	;volatile
  9654  001998  0012               	return	
  9655  00199A                     __end_ofPL60:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _LcNewString *****************
  9659 ;; Defined at:
  9660 ;;		line 227 in file "LcTLCD.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9663 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9664 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9665 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9666 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		wreg, status,2, status,0
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMRAM   BANK0   BANK1
  9678 ;;      Params:         2       0       0
  9679 ;;      Locals:         0       0       0
  9680 ;;      Temps:          0       0       0
  9681 ;;      Totals:         2       0       0
  9682 ;;Total ram usage:        2 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; Hardware stack levels required when called: 2
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_menu
  9689 ;;		_GLCDMotor
  9690 ;;		_motorJoc
  9691 ;;		_motorSIO
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text78
  9696  001CCE                     __ptext78:
  9697                           	callstack 0
  9698  001CCE                     _LcNewString:
  9699                           	callstack 27
  9700                           
  9701                           ;LcTLCD.c: 228:     s_ptr = new_s;
  9702                           
  9703                           ;incstack = 0
  9704  001CCE  C04D  F00D         	movff	LcNewString@new_s,_s_ptr
  9705  001CD2  C04E  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9706                           
  9707                           ;LcTLCD.c: 229:     nou_s = 1;
  9708  001CD6  8278               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9709  001CD8  0012               	return		;funcret
  9710  001CDA                     __end_of_LcNewString:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _LcLliure *****************
  9714 ;; Defined at:
  9715 ;;		line 243 in file "LcTLCD.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;		None               void
  9722 ;; Registers used:
  9723 ;;		status,0
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1
  9729 ;;      Params:         0       0       0
  9730 ;;      Locals:         0       0       0
  9731 ;;      Temps:          0       0       0
  9732 ;;      Totals:         0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 2
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_menu
  9740 ;;		_GLCDMotor
  9741 ;;		_motorJoc
  9742 ;;		_motorSIO
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text79
  9747  001CDA                     __ptext79:
  9748                           	callstack 0
  9749  001CDA                     _LcLliure:
  9750                           	callstack 27
  9751                           
  9752                           ;LcTLCD.c: 244:     return !nou_s;
  9753                           
  9754                           ;incstack = 0
  9755  001CDA  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9756  001CDC  D002               	goto	l2145
  9757  001CDE  90D8               	bcf	status,0,c
  9758  001CE0  0012               	return	
  9759  001CE2                     l2145:
  9760  001CE2  80D8               	bsf	status,0,c
  9761  001CE4  0012               	return		;funcret
  9762  001CE6                     __end_of_LcLliure:
  9763                           	callstack 0
  9764                           
  9765 ;; *************** function _LcClear *****************
  9766 ;; Defined at:
  9767 ;;		line 84 in file "LcTLCD.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;		None
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;		None
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1
  9781 ;;      Params:         0       0       0
  9782 ;;      Locals:         0       0       0
  9783 ;;      Temps:          0       0       0
  9784 ;;      Totals:         0       0       0
  9785 ;;Total ram usage:        0 bytes
  9786 ;; Hardware stack levels used: 1
  9787 ;; Hardware stack levels required when called: 5
  9788 ;; This function calls:
  9789 ;;		_CantaIR
  9790 ;;		_Espera
  9791 ;;		_LcGotoXY
  9792 ;;		_WaitForBusy
  9793 ;; This function is called by:
  9794 ;;		_menu
  9795 ;;		_GLCDMotor
  9796 ;;		_motorSIO
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text80
  9801  001B1E                     __ptext80:
  9802                           	callstack 0
  9803  001B1E                     _LcClear:
  9804                           	callstack 24
  9805                           
  9806                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9807                           
  9808                           ;incstack = 0
  9809  001B1E  EC92  F00C         	call	_WaitForBusy	;wreg free
  9810  001B22  0E01               	movlw	1
  9811  001B24  ECCE  F00D         	call	_CantaIR
  9812                           
  9813                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9814  001B28  D806               	call	PL76	;call to abstracted procedure
  9815  001B2A  ECA0  F00D         	call	_Espera
  9816                           
  9817                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9818  001B2E  0E00               	movlw	0
  9819  001B30  6E52               	movwf	LcGotoXY@Row^0,c
  9820  001B32  EF01  F00D         	goto	_LcGotoXY
  9821  001B36                     __end_of_LcClear:
  9822                           	callstack 0
  9823  001B36                     PL76:
  9824                           	callstack 26
  9825  001B36  6A52               	clrf	(Espera@ms+1)^0,c
  9826  001B38  0E03               	movlw	3
  9827  001B3A  6E51               	movwf	Espera@ms^0,c
  9828  001B3C  503D               	movf	_Timer^0,w,c
  9829  001B3E  0012               	return	
  9830  001B40                     __end_ofPL76:
  9831                           	callstack 0
  9832                           
  9833 ;; *************** function _LcGotoXY *****************
  9834 ;; Defined at:
  9835 ;;		line 106 in file "LcTLCD.c"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  Column          1    wreg     unsigned char 
  9838 ;;  Row             1   13[COMRAM] unsigned char 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  Column          1   18[COMRAM] unsigned char 
  9841 ;;  Fisics          2   14[COMRAM] int 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1
  9851 ;;      Params:         1       0       0
  9852 ;;      Locals:         5       0       0
  9853 ;;      Temps:          0       0       0
  9854 ;;      Totals:         6       0       0
  9855 ;;Total ram usage:        6 bytes
  9856 ;; Hardware stack levels used: 1
  9857 ;; Hardware stack levels required when called: 4
  9858 ;; This function calls:
  9859 ;;		_CantaIR
  9860 ;;		_WaitForBusy
  9861 ;; This function is called by:
  9862 ;;		_LcClear
  9863 ;;		_LcPutChar
  9864 ;;		_menu
  9865 ;;		_GLCDMotor
  9866 ;;		_motorJoc
  9867 ;;		_motorSIO
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text81
  9872  001A02                     __ptext81:
  9873                           	callstack 0
  9874  001A02                     _LcGotoXY:
  9875                           	callstack 24
  9876                           
  9877                           ;incstack = 0
  9878                           ;LcGotoXY@Column stored from wreg
  9879  001A02  6E57               	movwf	LcGotoXY@Column^0,c
  9880                           
  9881                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
  9882  001A04  5052               	movf	LcGotoXY@Row^0,w,c
  9883  001A06  E004               	bz	l55
  9884  001A08  6A56               	clrf	(_LcGotoXY$334+1)^0,c
  9885  001A0A  0E40               	movlw	64
  9886  001A0C  6E55               	movwf	_LcGotoXY$334^0,c
  9887  001A0E  D002               	goto	l4305
  9888  001A10                     l55:
  9889  001A10  6A55               	clrf	_LcGotoXY$334^0,c
  9890  001A12  6A56               	clrf	(_LcGotoXY$334+1)^0,c
  9891  001A14                     l4305:
  9892  001A14  5057               	movf	LcGotoXY@Column^0,w,c
  9893  001A16  2455               	addwf	_LcGotoXY$334^0,w,c
  9894  001A18  6E53               	movwf	LcGotoXY@Fisics^0,c
  9895  001A1A  0E00               	movlw	0
  9896  001A1C  2056               	addwfc	(_LcGotoXY$334+1)^0,w,c
  9897  001A1E  6E54               	movwf	(LcGotoXY@Fisics+1)^0,c
  9898                           
  9899                           ;LcTLCD.c: 113:  WaitForBusy();
  9900  001A20  EC92  F00C         	call	_WaitForBusy	;wreg free
  9901                           
  9902                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
  9903  001A24  5053               	movf	LcGotoXY@Fisics^0,w,c
  9904  001A26  0980               	iorlw	128
  9905  001A28  ECCE  F00D         	call	_CantaIR
  9906                           
  9907                           ;LcTLCD.c: 116:  RowAct = Row;
  9908  001A2C  C052  F03F         	movff	LcGotoXY@Row,_RowAct
  9909                           
  9910                           ;LcTLCD.c: 117:  ColumnAct = Column;
  9911  001A30  C057  F03E         	movff	LcGotoXY@Column,_ColumnAct
  9912  001A34  0012               	return		;funcret
  9913  001A36                     __end_of_LcGotoXY:
  9914                           	callstack 0
  9915                           
  9916 ;; *************** function _WaitForBusy *****************
  9917 ;; Defined at:
  9918 ;;		line 198 in file "LcTLCD.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;		None
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  Busy            1   12[COMRAM] unsigned char 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  1    wreg      void 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMRAM   BANK0   BANK1
  9932 ;;      Params:         0       0       0
  9933 ;;      Locals:         1       0       0
  9934 ;;      Temps:          0       0       0
  9935 ;;      Totals:         1       0       0
  9936 ;;Total ram usage:        1 bytes
  9937 ;; Hardware stack levels used: 1
  9938 ;; Hardware stack levels required when called: 3
  9939 ;; This function calls:
  9940 ;;		_TiGetTics
  9941 ;;		_TiResetTics
  9942 ;; This function is called by:
  9943 ;;		_LcInit
  9944 ;;		_LcClear
  9945 ;;		_LcGotoXY
  9946 ;;		_LcPutChar
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text82
  9951  001924                     __ptext82:
  9952                           	callstack 0
  9953  001924                     _WaitForBusy:
  9954                           	callstack 25
  9955                           
  9956                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9957                           
  9958                           ;incstack = 0
  9959  001924  8694               	bsf	148,3,c	;volatile
  9960  001926  8494               	bsf	148,2,c	;volatile
  9961  001928  8294               	bsf	148,1,c	;volatile
  9962  00192A  8094               	bsf	148,0,c	;volatile
  9963                           
  9964                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
  9965  00192C  9A8B               	bcf	139,5,c	;volatile
  9966                           
  9967                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
  9968  00192E  8E8C               	bsf	140,7,c	;volatile
  9969                           
  9970                           ;LcTLCD.c: 202:  TiResetTics(Timer);
  9971  001930  503D               	movf	_Timer^0,w,c
  9972  001932  ECDC  F00D         	call	_TiResetTics
  9973  001936                     l4273:
  9974                           
  9975                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9976  001936  888B               	bsf	139,4,c	;volatile
  9977  001938  888B               	bsf	139,4,c	;volatile
  9978                           
  9979                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
  9980  00193A  0E00               	movlw	0
  9981  00193C  B682               	btfsc	130,3,c	;volatile
  9982  00193E  0E01               	movlw	1
  9983  001940  6E51               	movwf	WaitForBusy@Busy^0,c
  9984                           
  9985                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
  9986  001942  988B               	bcf	139,4,c	;volatile
  9987                           
  9988                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
  9989  001944  988B               	bcf	139,4,c	;volatile
  9990                           
  9991                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9992  001946  888B               	bsf	139,4,c	;volatile
  9993  001948  888B               	bsf	139,4,c	;volatile
  9994                           
  9995                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
  9996  00194A  988B               	bcf	139,4,c	;volatile
  9997                           
  9998                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
  9999  00194C  988B               	bcf	139,4,c	;volatile
 10000                           
 10001                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10002  00194E  503D               	movf	_Timer^0,w,c
 10003  001950  EC58  F00D         	call	_TiGetTics
 10004  001954  504A               	movf	?_TiGetTics^0,w,c
 10005  001956  104B               	iorwf	(?_TiGetTics+1)^0,w,c
 10006  001958  E001               	bz	l4295
 10007  00195A  0012               	return	
 10008  00195C                     l4295:
 10009                           
 10010                           ;LcTLCD.c: 213:  } while(Busy);
 10011  00195C  5051               	movf	WaitForBusy@Busy^0,w,c
 10012  00195E  E1EB               	bnz	l4273
 10013  001960  0012               	return		;funcret
 10014  001962                     __end_of_WaitForBusy:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function _CantaIR *****************
 10018 ;; Defined at:
 10019 ;;		line 166 in file "LcTLCD.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  IR              1    wreg     unsigned char 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;  IR              1    7[COMRAM] unsigned char 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, status,2, status,0, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1
 10033 ;;      Params:         0       0       0
 10034 ;;      Locals:         1       0       0
 10035 ;;      Temps:          0       0       0
 10036 ;;      Totals:         1       0       0
 10037 ;;Total ram usage:        1 bytes
 10038 ;; Hardware stack levels used: 1
 10039 ;; Hardware stack levels required when called: 3
 10040 ;; This function calls:
 10041 ;;		_CantaPartAlta
 10042 ;;		_CantaPartBaixa
 10043 ;; This function is called by:
 10044 ;;		_LcScroll
 10045 ;;		_LcInit
 10046 ;;		_LcClear
 10047 ;;		_LcGotoXY
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text83
 10052  001B9C                     __ptext83:
 10053                           	callstack 0
 10054  001B9C                     _CantaIR:
 10055                           	callstack 24
 10056                           
 10057                           ;incstack = 0
 10058                           ;CantaIR@IR stored from wreg
 10059  001B9C  6E4C               	movwf	CantaIR@IR^0,c
 10060                           
 10061                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10062  001B9E  9694               	bcf	148,3,c	;volatile
 10063                           
 10064                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10065                           
 10066                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10067                           
 10068                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10069  001BA0  EC1F  F00B         	call	PL38	;call to abstracted procedure
 10070                           
 10071                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10072  001BA4  504C               	movf	CantaIR@IR^0,w,c
 10073  001BA6  ECD0  F00B         	call	_CantaPartAlta
 10074                           
 10075                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10076                           
 10077                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10078                           
 10079                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10080                           
 10081                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10082  001BAA  ECC8  F00C         	call	PL60	;call to abstracted procedure
 10083                           
 10084                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10085  001BAE  504C               	movf	CantaIR@IR^0,w,c
 10086  001BB0  EC9D  F00B         	call	_CantaPartBaixa
 10087                           
 10088                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10089                           
 10090                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10091                           
 10092                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10093  001BB4  EFC1  F00C         	goto	PL28	;call to abstracted procedure
 10094  001BB8                     __end_of_CantaIR:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _CantaPartBaixa *****************
 10098 ;; Defined at:
 10099 ;;		line 159 in file "LcTLCD.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  c               1    wreg     unsigned char 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  c               1    6[COMRAM] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1
 10113 ;;      Params:         0       0       0
 10114 ;;      Locals:         1       0       0
 10115 ;;      Temps:          1       0       0
 10116 ;;      Totals:         2       0       0
 10117 ;;Total ram usage:        2 bytes
 10118 ;; Hardware stack levels used: 1
 10119 ;; Hardware stack levels required when called: 2
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_CantaIR
 10124 ;;		_CantaData
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text84
 10129  00173A                     __ptext84:
 10130                           	callstack 0
 10131  00173A                     _CantaPartBaixa:
 10132                           	callstack 24
 10133                           
 10134                           ;incstack = 0
 10135                           ;CantaPartBaixa@c stored from wreg
 10136  00173A  6E4B               	movwf	CantaPartBaixa@c^0,c
 10137                           
 10138                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10139  00173C  A64B               	btfss	CantaPartBaixa@c^0,3,c
 10140  00173E  D003               	goto	u3640
 10141  001740  6A4A               	clrf	??_CantaPartBaixa^0,c
 10142  001742  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10143  001744  D001               	goto	u3658
 10144  001746                     u3640:
 10145  001746  6A4A               	clrf	??_CantaPartBaixa^0,c
 10146  001748                     u3658:
 10147  001748  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10148  00174A  D825               	call	PL66	;call to abstracted procedure
 10149  00174C  0BF7               	andlw	-9
 10150  00174E  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10151  001750  6E8B               	movwf	139,c	;volatile
 10152                           
 10153                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10154  001752  A44B               	btfss	CantaPartBaixa@c^0,2,c
 10155  001754  D003               	goto	u3660
 10156  001756  6A4A               	clrf	??_CantaPartBaixa^0,c
 10157  001758  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10158  00175A  D001               	goto	u3678
 10159  00175C                     u3660:
 10160  00175C  6A4A               	clrf	??_CantaPartBaixa^0,c
 10161  00175E                     u3678:
 10162  00175E  D81B               	call	PL66	;call to abstracted procedure
 10163  001760  0BFB               	andlw	-5
 10164  001762  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10165  001764  6E8B               	movwf	139,c	;volatile
 10166                           
 10167                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10168  001766  A24B               	btfss	CantaPartBaixa@c^0,1,c
 10169  001768  D003               	goto	u3680
 10170  00176A  6A4A               	clrf	??_CantaPartBaixa^0,c
 10171  00176C  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10172  00176E  D001               	goto	u3698
 10173  001770                     u3680:
 10174  001770  6A4A               	clrf	??_CantaPartBaixa^0,c
 10175  001772                     u3698:
 10176  001772  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10177  001774  508B               	movf	139,w,c	;volatile
 10178  001776  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10179  001778  0BFD               	andlw	-3
 10180  00177A  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10181  00177C  6E8B               	movwf	139,c	;volatile
 10182                           
 10183                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10184  00177E  A04B               	btfss	CantaPartBaixa@c^0,0,c
 10185  001780  D003               	goto	u3700
 10186  001782  6A4A               	clrf	??_CantaPartBaixa^0,c
 10187  001784  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10188  001786  D001               	goto	u3718
 10189  001788                     u3700:
 10190  001788  6A4A               	clrf	??_CantaPartBaixa^0,c
 10191  00178A                     u3718:
 10192  00178A  508B               	movf	139,w,c	;volatile
 10193  00178C  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10194  00178E  0BFE               	andlw	-2
 10195  001790  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10196  001792  6E8B               	movwf	139,c	;volatile
 10197  001794  0012               	return		;funcret
 10198  001796                     __end_of_CantaPartBaixa:
 10199                           	callstack 0
 10200  001796                     PL66:
 10201                           	callstack 24
 10202  001796  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10203  001798  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10204  00179A  508B               	movf	139,w,c	;volatile
 10205  00179C  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10206  00179E  0012               	return	
 10207  0017A0                     __end_ofPL66:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _CantaPartAlta *****************
 10211 ;; Defined at:
 10212 ;;		line 152 in file "LcTLCD.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  c               1    wreg     unsigned char 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  c               1    6[COMRAM] unsigned char 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, status,2, status,0
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1
 10226 ;;      Params:         0       0       0
 10227 ;;      Locals:         1       0       0
 10228 ;;      Temps:          1       0       0
 10229 ;;      Totals:         2       0       0
 10230 ;;Total ram usage:        2 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 2
 10233 ;; This function calls:
 10234 ;;		Nothing
 10235 ;; This function is called by:
 10236 ;;		_CantaIR
 10237 ;;		_CantaData
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text85
 10242  0017A0                     __ptext85:
 10243                           	callstack 0
 10244  0017A0                     _CantaPartAlta:
 10245                           	callstack 24
 10246                           
 10247                           ;incstack = 0
 10248                           ;CantaPartAlta@c stored from wreg
 10249  0017A0  6E4B               	movwf	CantaPartAlta@c^0,c
 10250                           
 10251                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10252  0017A2  AE4B               	btfss	CantaPartAlta@c^0,7,c
 10253  0017A4  D003               	goto	u3560
 10254  0017A6  6A4A               	clrf	??_CantaPartAlta^0,c
 10255  0017A8  2A4A               	incf	??_CantaPartAlta^0,f,c
 10256  0017AA  D001               	goto	u3578
 10257  0017AC                     u3560:
 10258  0017AC  6A4A               	clrf	??_CantaPartAlta^0,c
 10259  0017AE                     u3578:
 10260  0017AE  464A               	rlncf	??_CantaPartAlta^0,f,c
 10261  0017B0  D825               	call	PL54	;call to abstracted procedure
 10262  0017B2  0BF7               	andlw	-9
 10263  0017B4  184A               	xorwf	??_CantaPartAlta^0,w,c
 10264  0017B6  6E8B               	movwf	139,c	;volatile
 10265                           
 10266                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10267  0017B8  AC4B               	btfss	CantaPartAlta@c^0,6,c
 10268  0017BA  D003               	goto	u3580
 10269  0017BC  6A4A               	clrf	??_CantaPartAlta^0,c
 10270  0017BE  2A4A               	incf	??_CantaPartAlta^0,f,c
 10271  0017C0  D001               	goto	u3598
 10272  0017C2                     u3580:
 10273  0017C2  6A4A               	clrf	??_CantaPartAlta^0,c
 10274  0017C4                     u3598:
 10275  0017C4  D81B               	call	PL54	;call to abstracted procedure
 10276  0017C6  0BFB               	andlw	-5
 10277  0017C8  184A               	xorwf	??_CantaPartAlta^0,w,c
 10278  0017CA  6E8B               	movwf	139,c	;volatile
 10279                           
 10280                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10281  0017CC  AA4B               	btfss	CantaPartAlta@c^0,5,c
 10282  0017CE  D003               	goto	u3600
 10283  0017D0  6A4A               	clrf	??_CantaPartAlta^0,c
 10284  0017D2  2A4A               	incf	??_CantaPartAlta^0,f,c
 10285  0017D4  D001               	goto	u3618
 10286  0017D6                     u3600:
 10287  0017D6  6A4A               	clrf	??_CantaPartAlta^0,c
 10288  0017D8                     u3618:
 10289  0017D8  464A               	rlncf	??_CantaPartAlta^0,f,c
 10290  0017DA  508B               	movf	139,w,c	;volatile
 10291  0017DC  184A               	xorwf	??_CantaPartAlta^0,w,c
 10292  0017DE  0BFD               	andlw	-3
 10293  0017E0  184A               	xorwf	??_CantaPartAlta^0,w,c
 10294  0017E2  6E8B               	movwf	139,c	;volatile
 10295                           
 10296                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10297  0017E4  A84B               	btfss	CantaPartAlta@c^0,4,c
 10298  0017E6  D003               	goto	u3620
 10299  0017E8  6A4A               	clrf	??_CantaPartAlta^0,c
 10300  0017EA  2A4A               	incf	??_CantaPartAlta^0,f,c
 10301  0017EC  D001               	goto	u3638
 10302  0017EE                     u3620:
 10303  0017EE  6A4A               	clrf	??_CantaPartAlta^0,c
 10304  0017F0                     u3638:
 10305  0017F0  508B               	movf	139,w,c	;volatile
 10306  0017F2  184A               	xorwf	??_CantaPartAlta^0,w,c
 10307  0017F4  0BFE               	andlw	-2
 10308  0017F6  184A               	xorwf	??_CantaPartAlta^0,w,c
 10309  0017F8  6E8B               	movwf	139,c	;volatile
 10310  0017FA  0012               	return		;funcret
 10311  0017FC                     __end_of_CantaPartAlta:
 10312                           	callstack 0
 10313  0017FC                     PL54:
 10314                           	callstack 24
 10315  0017FC  464A               	rlncf	??_CantaPartAlta^0,f,c
 10316  0017FE  464A               	rlncf	??_CantaPartAlta^0,f,c
 10317  001800  508B               	movf	139,w,c	;volatile
 10318  001802  184A               	xorwf	??_CantaPartAlta^0,w,c
 10319  001804  0012               	return	
 10320  001806                     __end_ofPL54:
 10321                           	callstack 0
 10322                           
 10323 ;; *************** function _Espera *****************
 10324 ;; Defined at:
 10325 ;;		line 147 in file "LcTLCD.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  Timer           1    wreg     unsigned char 
 10328 ;;  ms              2   12[COMRAM] int 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  Timer           1   15[COMRAM] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1
 10340 ;;      Params:         2       0       0
 10341 ;;      Locals:         1       0       0
 10342 ;;      Temps:          1       0       0
 10343 ;;      Totals:         4       0       0
 10344 ;;Total ram usage:        4 bytes
 10345 ;; Hardware stack levels used: 1
 10346 ;; Hardware stack levels required when called: 3
 10347 ;; This function calls:
 10348 ;;		_TiGetTics
 10349 ;;		_TiResetTics
 10350 ;; This function is called by:
 10351 ;;		_LcInit
 10352 ;;		_LcClear
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text86
 10357  001B40                     __ptext86:
 10358                           	callstack 0
 10359  001B40                     _Espera:
 10360                           	callstack 25
 10361                           
 10362                           ;incstack = 0
 10363                           ;Espera@Timer stored from wreg
 10364  001B40  6E54               	movwf	Espera@Timer^0,c
 10365                           
 10366                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10367  001B42  5054               	movf	Espera@Timer^0,w,c
 10368  001B44  ECDC  F00D         	call	_TiResetTics
 10369  001B48                     l4299:
 10370  001B48  5054               	movf	Espera@Timer^0,w,c
 10371  001B4A  EC58  F00D         	call	_TiGetTics
 10372  001B4E  5051               	movf	Espera@ms^0,w,c
 10373  001B50  5C4A               	subwf	?_TiGetTics^0,w,c
 10374  001B52  504B               	movf	(?_TiGetTics+1)^0,w,c
 10375  001B54  0A80               	xorlw	128
 10376  001B56  6E53               	movwf	??_Espera^0,c
 10377  001B58  5052               	movf	(Espera@ms+1)^0,w,c
 10378  001B5A  0A80               	xorlw	128
 10379  001B5C  5853               	subwfb	??_Espera^0,w,c
 10380  001B5E  E3F4               	bnc	l4299
 10381  001B60  0012               	return		;funcret
 10382  001B62                     __end_of_Espera:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function _TiResetTics *****************
 10386 ;; Defined at:
 10387 ;;		line 55 in file "TiTTimer.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  Handle          1    wreg     unsigned char 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  Handle          1    5[COMRAM] unsigned char 
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      void 
 10394 ;; Registers used:
 10395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1
 10401 ;;      Params:         0       0       0
 10402 ;;      Locals:         1       0       0
 10403 ;;      Temps:          0       0       0
 10404 ;;      Totals:         1       0       0
 10405 ;;Total ram usage:        1 bytes
 10406 ;; Hardware stack levels used: 1
 10407 ;; Hardware stack levels required when called: 2
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		_Espera
 10412 ;;		_WaitForBusy
 10413 ;;		_SMotor
 10414 ;;		_TeTeclat
 10415 ;;		_menu
 10416 ;;		_motorAltaveu
 10417 ;;		_GLCDMotor
 10418 ;;		_motorHora
 10419 ;;		_motorSIO
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text87
 10424  001BB8                     __ptext87:
 10425                           	callstack 0
 10426  001BB8                     _TiResetTics:
 10427                           	callstack 27
 10428                           
 10429                           ;incstack = 0
 10430                           ;TiResetTics@Handle stored from wreg
 10431  001BB8  6E4A               	movwf	TiResetTics@Handle^0,c
 10432                           
 10433                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10434  001BBA  504A               	movf	TiResetTics@Handle^0,w,c
 10435  001BBC  D805               	call	PL24	;call to abstracted procedure
 10436  001BBE  C00B  FFDE         	movff	_h_Tics,postinc2
 10437  001BC2  C00C  FFDD         	movff	_h_Tics+1,postdec2
 10438  001BC6  0012               	return		;funcret
 10439  001BC8                     __end_of_TiResetTics:
 10440                           	callstack 0
 10441  001BC8                     PL24:
 10442                           	callstack 24
 10443  001BC8  0D03               	mullw	3
 10444  001BCA  50F3               	movf	243,w,c
 10445  001BCC  0F80               	addlw	low _s_Timers
 10446  001BCE  6ED9               	movwf	fsr2l,c
 10447  001BD0  6ADA               	clrf	fsr2h,c
 10448  001BD2  0012               	return	
 10449  001BD4                     __end_ofPL24:
 10450                           	callstack 0
 10451                           
 10452 ;; *************** function _TiGetTics *****************
 10453 ;; Defined at:
 10454 ;;		line 61 in file "TiTTimer.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  Handle          1    wreg     unsigned char 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  Handle          1    9[COMRAM] unsigned char 
 10459 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  2    5[COMRAM] int 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1
 10469 ;;      Params:         2       0       0
 10470 ;;      Locals:         3       0       0
 10471 ;;      Temps:          2       0       0
 10472 ;;      Totals:         7       0       0
 10473 ;;Total ram usage:        7 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; Hardware stack levels required when called: 2
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_Espera
 10480 ;;		_WaitForBusy
 10481 ;;		_SMotor
 10482 ;;		_TeTeclat
 10483 ;;		_menu
 10484 ;;		_motorAltaveu
 10485 ;;		_GLCDMotor
 10486 ;;		_motorHora
 10487 ;;		_motorSIO
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text88
 10492  001AB0                     __ptext88:
 10493                           	callstack 0
 10494  001AB0                     _TiGetTics:
 10495                           	callstack 27
 10496                           
 10497                           ;incstack = 0
 10498                           ;TiGetTics@Handle stored from wreg
 10499  001AB0  6E4E               	movwf	TiGetTics@Handle^0,c
 10500                           
 10501                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10502  001AB2  C00B  F04F         	movff	_h_Tics,TiGetTics@actual	;volatile
 10503  001AB6  C00C  F050         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10504                           
 10505                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10506  001ABA  504E               	movf	TiGetTics@Handle^0,w,c
 10507  001ABC  ECE4  F00D         	call	PL24	;call to abstracted procedure
 10508  001AC0  CFDE F04C          	movff	postinc2,??_TiGetTics
 10509  001AC4  CFDD F04D          	movff	postdec2,??_TiGetTics+1
 10510  001AC8  504C               	movf	??_TiGetTics^0,w,c
 10511  001ACA  5C4F               	subwf	TiGetTics@actual^0,w,c	;volatile
 10512  001ACC  6E4A               	movwf	?_TiGetTics^0,c
 10513  001ACE  504D               	movf	(??_TiGetTics+1)^0,w,c
 10514  001AD0  5850               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10515  001AD2  6E4B               	movwf	(?_TiGetTics+1)^0,c
 10516  001AD4  0012               	return		;funcret
 10517  001AD6                     __end_of_TiGetTics:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function _GLCDInit *****************
 10521 ;; Defined at:
 10522 ;;		line 26 in file "GestioLCD.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1
 10536 ;;      Params:         0       0       0
 10537 ;;      Locals:         0       0       0
 10538 ;;      Temps:          0       0       0
 10539 ;;      Totals:         0       0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used: 1
 10542 ;; Hardware stack levels required when called: 3
 10543 ;; This function calls:
 10544 ;;		_TiGetTimer
 10545 ;; This function is called by:
 10546 ;;		_main
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text89
 10551  001D80                     __ptext89:
 10552                           	callstack 0
 10553  001D80                     _GLCDInit:
 10554                           	callstack 27
 10555                           
 10556                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10557                           
 10558                           ;incstack = 0
 10559  001D80  EC1B  F00D         	call	_TiGetTimer	;wreg free
 10560  001D84  6E22               	movwf	_timerGLCD^0,c
 10561  001D86  0012               	return		;funcret
 10562  001D88                     __end_of_GLCDInit:
 10563                           	callstack 0
 10564                           
 10565 ;; *************** function _TiGetTimer *****************
 10566 ;; Defined at:
 10567 ;;		line 70 in file "TiTTimer.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;		None
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      unsigned char 
 10574 ;; Registers used:
 10575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1
 10581 ;;      Params:         0       0       0
 10582 ;;      Locals:         0       0       0
 10583 ;;      Temps:          1       0       0
 10584 ;;      Totals:         1       0       0
 10585 ;;Total ram usage:        1 bytes
 10586 ;; Hardware stack levels used: 1
 10587 ;; Hardware stack levels required when called: 2
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_LcInit
 10592 ;;		_Sinit
 10593 ;;		_TeInit
 10594 ;;		_Minit
 10595 ;;		_initAltaveu
 10596 ;;		_GLCDInit
 10597 ;;		_initHora
 10598 ;;		_initSIO
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text90
 10603  001A36                     __ptext90:
 10604                           	callstack 0
 10605  001A36                     _TiGetTimer:
 10606                           	callstack 27
 10607                           
 10608                           ;TiTTimer.c: 74:     counter=0;
 10609                           
 10610                           ;incstack = 0
 10611  001A36  6A34               	clrf	_counter^0,c
 10612                           
 10613                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10614  001A38  D005               	goto	l4345
 10615  001A3A                     l4337:
 10616                           
 10617                           ;TiTTimer.c: 76:         counter++;
 10618  001A3A  2A34               	incf	_counter^0,f,c
 10619                           
 10620                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10621  001A3C  0E08               	movlw	8
 10622  001A3E  1834               	xorwf	_counter^0,w,c
 10623  001A40  E101               	bnz	l4345
 10624  001A42  0CFF               	retlw	255
 10625  001A44                     l4345:
 10626                           
 10627                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10628  001A44  D807               	call	PL12	;call to abstracted procedure
 10629  001A46  04DE               	decf	postinc2,w,c
 10630  001A48  E0F8               	bz	l4337
 10631                           
 10632                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10633  001A4A  D804               	call	PL12	;call to abstracted procedure
 10634  001A4C  0E01               	movlw	1
 10635  001A4E  6EDF               	movwf	indf2,c
 10636                           
 10637                           ;TiTTimer.c: 80:     return (counter);
 10638  001A50  5034               	movf	_counter^0,w,c
 10639  001A52  0012               	return		;funcret
 10640  001A54                     __end_of_TiGetTimer:
 10641                           	callstack 0
 10642  001A54                     PL12:
 10643                           	callstack 28
 10644  001A54  5034               	movf	_counter^0,w,c
 10645  001A56  0D03               	mullw	3
 10646  001A58  50F3               	movf	243,w,c
 10647  001A5A  0F82               	addlw	low (_s_Timers+2)
 10648  001A5C  6ED9               	movwf	fsr2l,c
 10649  001A5E  6ADA               	clrf	fsr2h,c
 10650  001A60  0012               	return	
 10651  001A62                     __end_ofPL12:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _CtoA *****************
 10655 ;; Defined at:
 10656 ;;		line 22 in file "CtoA.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;		None
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2, status,0
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1
 10670 ;;      Params:         0       0       0
 10671 ;;      Locals:         0       0       0
 10672 ;;      Temps:          0       0       0
 10673 ;;      Totals:         0       0       0
 10674 ;;Total ram usage:        0 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 2
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_main
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text91
 10685  001AFA                     __ptext91:
 10686                           	callstack 0
 10687  001AFA                     _CtoA:
 10688                           	callstack 28
 10689                           
 10690                           ;CtoA.c: 23:     if (convertir != 250) {
 10691                           
 10692                           ;incstack = 0
 10693  001AFA  0EFA               	movlw	250
 10694  001AFC  185E               	xorwf	_convertir^0,w,c
 10695  001AFE  B4D8               	btfsc	status,2,c
 10696  001B00  0012               	return	
 10697                           
 10698                           ;CtoA.c: 24:         if (convertir != 0){
 10699  001B02  505E               	movf	_convertir^0,w,c
 10700  001B04  E009               	bz	l3843
 10701                           
 10702                           ;CtoA.c: 25:             stringScore[1]++;
 10703  001B06  2A74               	incf	(_stringScore+1)^0,f,c
 10704                           
 10705                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10706  001B08  0E3A               	movlw	58
 10707  001B0A  1874               	xorwf	(_stringScore+1)^0,w,c
 10708  001B0C  E103               	bnz	l3841
 10709                           
 10710                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10711  001B0E  0E30               	movlw	48
 10712  001B10  6E74               	movwf	(_stringScore+1)^0,c
 10713                           
 10714                           ;CtoA.c: 28:                 stringScore[0]++;
 10715  001B12  2A73               	incf	_stringScore^0,f,c
 10716  001B14                     l3841:
 10717                           
 10718                           ;CtoA.c: 30:             convertir--;
 10719  001B14  065E               	decf	_convertir^0,f,c
 10720                           
 10721                           ;CtoA.c: 31:         } else {
 10722  001B16  0012               	return	
 10723  001B18                     l3843:
 10724                           
 10725                           ;CtoA.c: 32:             convertir = 250;
 10726  001B18  0EFA               	movlw	250
 10727  001B1A  6E5E               	movwf	_convertir^0,c
 10728  001B1C  0CFA               	retlw	250	;funcret
 10729  001B1E                     __end_of_CtoA:
 10730                           	callstack 0
 10731                           
 10732 ;; *************** function _high_rsi *****************
 10733 ;; Defined at:
 10734 ;;		line 21 in file "main.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      void 
 10741 ;; Registers used:
 10742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1
 10748 ;;      Params:         0       0       0
 10749 ;;      Locals:         0       0       0
 10750 ;;      Temps:          4       0       0
 10751 ;;      Totals:         4       0       0
 10752 ;;Total ram usage:        4 bytes
 10753 ;; Hardware stack levels used: 1
 10754 ;; Hardware stack levels required when called: 1
 10755 ;; This function calls:
 10756 ;;		__TiRSITimer
 10757 ;; This function is called by:
 10758 ;;		Interrupt level 2
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	intcode
 10763  000008                     __pintcode:
 10764                           	callstack 0
 10765  000008                     _high_rsi:
 10766                           	callstack 24
 10767                           
 10768                           ;incstack = 0
 10769  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10770  00000A  CFD9 F046          	movff	fsr2l,??_high_rsi
 10771  00000E  CFDA F047          	movff	fsr2h,??_high_rsi+1
 10772  000012  CFF3 F048          	movff	prodl,??_high_rsi+2
 10773  000016  CFF4 F049          	movff	prodh,??_high_rsi+3
 10774  00001A  EC4F  F00C         	call	__TiRSITimer	;wreg free
 10775  00001E  C049  FFF4         	movff	??_high_rsi+3,prodh
 10776  000022  C048  FFF3         	movff	??_high_rsi+2,prodl
 10777  000026  C047  FFDA         	movff	??_high_rsi+1,fsr2h
 10778  00002A  C046  FFD9         	movff	??_high_rsi,fsr2l
 10779  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10780  000030  0011               	retfie		f
 10781  000032                     __end_of_high_rsi:
 10782                           	callstack 0
 10783                           
 10784 ;; *************** function __TiRSITimer *****************
 10785 ;; Defined at:
 10786 ;;		line 37 in file "TiTTimer.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1
 10800 ;;      Params:         0       0       0
 10801 ;;      Locals:         0       0       0
 10802 ;;      Temps:          1       0       0
 10803 ;;      Totals:         1       0       0
 10804 ;;Total ram usage:        1 bytes
 10805 ;; Hardware stack levels used: 1
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_high_rsi
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text93
 10814  00189E                     __ptext93:
 10815                           	callstack 0
 10816  00189E                     __TiRSITimer:
 10817                           	callstack 0
 10818                           
 10819                           ;TiTTimer.c: 39:     TMR0H = 223;
 10820                           
 10821                           ;incstack = 0
 10822                           
 10823                           ;TiTTimer.c: 40:     TMR0L = 148;
 10824  00189E  D81E               	call	PL70	;call to abstracted procedure
 10825                           
 10826                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10827  0018A0  94F2               	bcf	242,2,c	;volatile
 10828                           
 10829                           ;TiTTimer.c: 42:     h_Tics++;
 10830  0018A2  4A0B               	infsnz	_h_Tics^0,f,c
 10831  0018A4  2A0C               	incf	(_h_Tics+1)^0,f,c
 10832                           
 10833                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10834  0018A6  0E48               	movlw	72
 10835  0018A8  5C0B               	subwf	_h_Tics^0,w,c
 10836  0018AA  0EEE               	movlw	238
 10837  0018AC  580C               	subwfb	(_h_Tics+1)^0,w,c
 10838  0018AE  A0D8               	btfss	status,0,c
 10839  0018B0  0012               	return	
 10840                           
 10841                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10842  0018B2  6A34               	clrf	_counter^0,c
 10843  0018B4                     i2l4569:
 10844  0018B4  0E07               	movlw	7
 10845  0018B6  6434               	cpfsgt	_counter^0,c
 10846  0018B8  D001               	goto	i2l4573
 10847  0018BA  D00D               	goto	i2l370
 10848  0018BC                     i2l4573:
 10849                           
 10850                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10851  0018BC  EC2A  F00D         	call	PL12	;call to abstracted procedure
 10852  0018C0  04DE               	decf	postinc2,w,c
 10853  0018C2  E107               	bnz	i2l4577
 10854                           
 10855                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10856  0018C4  5034               	movf	_counter^0,w,c
 10857  0018C6  ECE4  F00D         	call	PL24	;call to abstracted procedure
 10858  0018CA  500B               	movf	_h_Tics^0,w,c
 10859  0018CC  5EDE               	subwf	postinc2,f,c
 10860  0018CE  500C               	movf	(_h_Tics+1)^0,w,c
 10861  0018D0  5ADD               	subwfb	postdec2,f,c
 10862  0018D2                     i2l4577:
 10863                           
 10864                           ;TiTTimer.c: 50:         }
 10865  0018D2  2A34               	incf	_counter^0,f,c
 10866  0018D4  D7EF               	goto	i2l4569
 10867  0018D6                     i2l370:
 10868                           
 10869                           ;TiTTimer.c: 51:         h_Tics=0;
 10870  0018D6  6A0B               	clrf	_h_Tics^0,c
 10871  0018D8  6A0C               	clrf	(_h_Tics+1)^0,c
 10872  0018DA  0012               	return		;funcret
 10873  0018DC                     __end_of__TiRSITimer:
 10874                           	callstack 0
 10875  0018DC                     PL70:
 10876                           	callstack 28
 10877  0018DC  0EDF               	movlw	223
 10878  0018DE  6ED7               	movwf	215,c	;volatile
 10879  0018E0  0E94               	movlw	148
 10880  0018E2  6ED6               	movwf	214,c	;volatile
 10881  0018E4  0C94               	retlw	148
 10882  0018E6                     __end_ofPL70:
 10883                           	callstack 0
 10884                           
 10885                           	psect	rparam
 10886  0000                     
 10887                           	psect	temp
 10888  000079                     btemp:
 10889                           	callstack 0
 10890  000079                     	ds	1
 10891  0000                     int$flags	set	btemp
 10892  0000                     wtemp8	set	btemp+1
 10893  0000                     ttemp5	set	btemp+1
 10894  0000                     ttemp6	set	btemp+4
 10895  0000                     ttemp7	set	btemp+8
 10896                           
 10897                           	psect	idloc
 10898                           
 10899                           ;Config register IDLOC0 @ 0x200000
 10900                           ;	unspecified, using default values
 10901  200000                     	org	2097152
 10902  200000  FF                 	db	255
 10903                           
 10904                           ;Config register IDLOC1 @ 0x200001
 10905                           ;	unspecified, using default values
 10906  200001                     	org	2097153
 10907  200001  FF                 	db	255
 10908                           
 10909                           ;Config register IDLOC2 @ 0x200002
 10910                           ;	unspecified, using default values
 10911  200002                     	org	2097154
 10912  200002  FF                 	db	255
 10913                           
 10914                           ;Config register IDLOC3 @ 0x200003
 10915                           ;	unspecified, using default values
 10916  200003                     	org	2097155
 10917  200003  FF                 	db	255
 10918                           
 10919                           ;Config register IDLOC4 @ 0x200004
 10920                           ;	unspecified, using default values
 10921  200004                     	org	2097156
 10922  200004  FF                 	db	255
 10923                           
 10924                           ;Config register IDLOC5 @ 0x200005
 10925                           ;	unspecified, using default values
 10926  200005                     	org	2097157
 10927  200005  FF                 	db	255
 10928                           
 10929                           ;Config register IDLOC6 @ 0x200006
 10930                           ;	unspecified, using default values
 10931  200006                     	org	2097158
 10932  200006  FF                 	db	255
 10933                           
 10934                           ;Config register IDLOC7 @ 0x200007
 10935                           ;	unspecified, using default values
 10936  200007                     	org	2097159
 10937  200007  FF                 	db	255
 10938                           
 10939                           	psect	config
 10940                           
 10941                           ; Padding undefined space
 10942  300000                     	org	3145728
 10943  300000  FF                 	db	255
 10944                           
 10945                           ;Config register CONFIG1H @ 0x300001
 10946                           ;	Oscillator
 10947                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10948                           ;	Fail-Safe Clock Monitor Enable bit
 10949                           ;	FCMEN = 0x0, unprogrammed default
 10950                           ;	Internal/External Oscillator Switchover bit
 10951                           ;	IESO = 0x0, unprogrammed default
 10952  300001                     	org	3145729
 10953  300001  06                 	db	6
 10954                           
 10955                           ;Config register CONFIG2L @ 0x300002
 10956                           ;	unspecified, using default values
 10957                           ;	Power-up Timer Enable bit
 10958                           ;	PWRT = 0x1, unprogrammed default
 10959                           ;	Brown-out Reset Enable bits
 10960                           ;	BOR = 0x3, unprogrammed default
 10961                           ;	Brown-out Reset Voltage bits
 10962                           ;	BORV = 0x3, unprogrammed default
 10963  300002                     	org	3145730
 10964  300002  1F                 	db	31
 10965                           
 10966                           ;Config register CONFIG2H @ 0x300003
 10967                           ;	Watchdog Timer Enable bit
 10968                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10969                           ;	Watchdog Timer Postscale Select bits
 10970                           ;	WDTPS = 0xF, unprogrammed default
 10971  300003                     	org	3145731
 10972  300003  1E                 	db	30
 10973                           
 10974                           ; Padding undefined space
 10975  300004                     	org	3145732
 10976  300004  FF                 	db	255
 10977                           
 10978                           ;Config register CONFIG3H @ 0x300005
 10979                           ;	CCP2 MUX bit
 10980                           ;	CCP2MX = 0x1, unprogrammed default
 10981                           ;	PORTB A/D Enable bit
 10982                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10983                           ;	Low-Power Timer1 Oscillator Enable bit
 10984                           ;	LPT1OSC = 0x0, unprogrammed default
 10985                           ;	MCLR Pin Enable bit
 10986                           ;	MCLRE = 0x1, unprogrammed default
 10987  300005                     	org	3145733
 10988  300005  81                 	db	129
 10989                           
 10990                           ;Config register CONFIG4L @ 0x300006
 10991                           ;	Stack Full/Underflow Reset Enable bit
 10992                           ;	STVREN = 0x1, unprogrammed default
 10993                           ;	Single-Supply ICSP Enable bit
 10994                           ;	LVP = OFF, Single-Supply ICSP disabled
 10995                           ;	Boot Block Size Select bits
 10996                           ;	BBSIZ = 0x0, unprogrammed default
 10997                           ;	Extended Instruction Set Enable bit
 10998                           ;	XINST = 0x0, unprogrammed default
 10999                           ;	Background Debugger Enable bit
 11000                           ;	DEBUG = 0x1, unprogrammed default
 11001  300006                     	org	3145734
 11002  300006  81                 	db	129
 11003                           
 11004                           ; Padding undefined space
 11005  300007                     	org	3145735
 11006  300007  FF                 	db	255
 11007                           
 11008                           ;Config register CONFIG5L @ 0x300008
 11009                           ;	unspecified, using default values
 11010                           ;	Code Protection bit
 11011                           ;	CP0 = 0x1, unprogrammed default
 11012                           ;	Code Protection bit
 11013                           ;	CP1 = 0x1, unprogrammed default
 11014  300008                     	org	3145736
 11015  300008  03                 	db	3
 11016                           
 11017                           ;Config register CONFIG5H @ 0x300009
 11018                           ;	unspecified, using default values
 11019                           ;	Boot Block Code Protection bitProtect Boot
 11020                           ;	CPB = 0x1, unprogrammed default
 11021                           ;	Data EEPROM Code Protection bit
 11022                           ;	CPD = 0x1, unprogrammed default
 11023  300009                     	org	3145737
 11024  300009  C0                 	db	192
 11025                           
 11026                           ;Config register CONFIG6L @ 0x30000A
 11027                           ;	unspecified, using default values
 11028                           ;	Write Protection bit
 11029                           ;	WRT0 = 0x1, unprogrammed default
 11030                           ;	Write Protection bit
 11031                           ;	WRT1 = 0x1, unprogrammed default
 11032  30000A                     	org	3145738
 11033  30000A  03                 	db	3
 11034                           
 11035                           ;Config register CONFIG6H @ 0x30000B
 11036                           ;	unspecified, using default values
 11037                           ;	Configuration Register Write Protection bit
 11038                           ;	WRTC = 0x1, unprogrammed default
 11039                           ;	Boot Block Write Protection bit
 11040                           ;	WRTB = 0x1, unprogrammed default
 11041                           ;	Data EEPROM Write Protection bit
 11042                           ;	WRTD = 0x1, unprogrammed default
 11043  30000B                     	org	3145739
 11044  30000B  E0                 	db	224
 11045                           
 11046                           ;Config register CONFIG7L @ 0x30000C
 11047                           ;	unspecified, using default values
 11048                           ;	Table Read Protection bit
 11049                           ;	EBTR0 = 0x1, unprogrammed default
 11050                           ;	Table Read Protection bit
 11051                           ;	EBTR1 = 0x1, unprogrammed default
 11052  30000C                     	org	3145740
 11053  30000C  03                 	db	3
 11054                           
 11055                           ;Config register CONFIG7H @ 0x30000D
 11056                           ;	unspecified, using default values
 11057                           ;	Boot Block Table Read Protection bit
 11058                           ;	EBTRB = 0x1, unprogrammed default
 11059  30000D                     	org	3145741
 11060  30000D  40                 	db	64
 11061                           tosu	equ	0xFFF
 11062                           tosh	equ	0xFFE
 11063                           tosl	equ	0xFFD
 11064                           stkptr	equ	0xFFC
 11065                           pclatu	equ	0xFFB
 11066                           pclath	equ	0xFFA
 11067                           pcl	equ	0xFF9
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           indf0	equ	0xFEF
 11075                           postinc0	equ	0xFEE
 11076                           postdec0	equ	0xFED
 11077                           preinc0	equ	0xFEC
 11078                           plusw0	equ	0xFEB
 11079                           fsr0h	equ	0xFEA
 11080                           fsr0l	equ	0xFE9
 11081                           wreg	equ	0xFE8
 11082                           indf1	equ	0xFE7
 11083                           postinc1	equ	0xFE6
 11084                           postdec1	equ	0xFE5
 11085                           preinc1	equ	0xFE4
 11086                           plusw1	equ	0xFE3
 11087                           fsr1h	equ	0xFE2
 11088                           fsr1l	equ	0xFE1
 11089                           bsr	equ	0xFE0
 11090                           indf2	equ	0xFDF
 11091                           postinc2	equ	0xFDE
 11092                           postdec2	equ	0xFDD
 11093                           preinc2	equ	0xFDC
 11094                           plusw2	equ	0xFDB
 11095                           fsr2h	equ	0xFDA
 11096                           fsr2l	equ	0xFD9
 11097                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    178
    Data        32
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     120
    BANK0           128      0      60
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39655
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9851
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10738
                                             20 COMRAM     5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     764
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             4     4      0      97
                                             12 COMRAM     4     4      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      3C       4       46.9%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     19      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144       7        0.0%
DATA                 0      0     144       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 16:42:35 2022

               TiResetTics@Handle 004A                  _loginNOTRegister 03BF  
                               _i 002A                                 _j 0029  
                              PL2 09FC                                PL4 0A12  
                              PL6 0A26                                PL8 1180  
                              l55 1A10                  UgetUserName@quin 004C  
       ??_UcheckExistsNotFinished 004A         __size_of_llegirCharEEPROM 0010  
                             PL10 0C76                               PL20 0CAE  
                             PL12 1A54                               PL30 077E  
                             PL22 0E9A                               PL14 0C84  
                             PL40 1276                               PL32 183C  
                             PL24 1BC8                               PL16 0CA0  
                             PL50 078E                               PL42 0784  
                             PL34 1268                               PL26 0774  
                             PL18 153E                               PL60 1990  
                             PL52 1418                               PL44 184A  
                             PL36 0A2E                               PL28 1982  
                             PL70 18DC                               PL62 1056  
                             PL54 17FC                               PL46 1910  
                             PL38 163E                               PL80 1896  
                             PL72 164C                               PL64 1060  
                             PL56 0A3C                               PL48 0EA6  
                             PL82 0798                               PL74 1284  
                             PL66 1796                               PL58 191A  
                             PL84 07A0                               PL76 1B36  
                             PL68 1C22                               PL86 07A8  
                             PL78 0CC0                               PL88 07AE  
          __end_of_compareStrings 1910                               l511 0088  
                             l196 1708                               l605 046E  
                             l541 01DA                               l722 1AA6  
                             l538 01BE                               l539 01CE  
                             l734 11EE                               l770 0A80  
                             l773 0AAE                               l765 0A48  
                             l853 14C6                               l934 0804  
                             l774 0AA4                               l766 0A5A  
                             l768 0A66                               l946 0868  
                             l964 0948                               l797 0B9C  
                             l966 096E                               u230 15EC  
                             u250 1602                               u308 1630  
                             u270 1616                               u248 15EE  
                             u290 162E                               u268 1604  
                             u288 1618                               _pos 002F  
                             _tmp 0033                  ??_CantaPartBaixa 004A  
                             prod 000FF3                               wreg 000FE8  
     __size_of_calculateShowUsers 0004                       _ultimaTecla 006A  
              __size_of_GLCDMotor 0248                              l1011 134E  
                            l1003 1290                              l1012 12E6  
                            l1004 12AA                              l1013 1300  
                            l1006 12CC                              l1015 1322  
                            l1152 1438                              l2215 1C9A  
                            l2145 1CE2                              l2241 1CA6  
                            l1274 0E04                              l1266 0D6C  
                            l3203 12C0                              l2171 1CB2  
                            l2315 1C8E                              l1259 0D44  
                            l2341 1AE8                              l2335 1AE0  
                            l3241 1316                              l3233 12FC  
                            l3217 12E2                              l2353 1AF8  
                            l5003 097A                              l2347 1AF0  
                            l5013 0996                              l5007 0982  
                            l5023 09B0                              l3255 1338  
                            l5031 1424                              l5111 0D0C  
                            l5103 0CFA                              l4305 1A14  
                            l5017 09A4                              l3265 133C  
                            l6001 0BDE                              l2369 1C82  
                            l3195 12A6                              l6003 0BE4  
                            l5211 1558                              l5115 0D16  
                            l5203 0E5A                              l5053 145E  
                            l5045 1448                              l5125 0D2C  
                            l5117 0D1C                              l6111 114C  
                            l6103 113A                              l6023 0C26  
                            l6015 0C14                              l5311 00C2  
                            l5303 00A2                              l5063 1486  
                            l5047 144C                       _puntuacions 0098  
                            l4337 1A3A                              l4345 1A44  
                            l4273 1936                              l4513 137E  
                            l5321 00E0                              l5233 1590  
                            l5153 0D86                              l6107 1142  
                            l6043 10A2                              l6027 0C2E  
                            l6035 0C40                              l5331 0104  
                            l5227 1584                              l5163 0DB6  
                            l5155 0D8C                              l4701 0FC0  
                            l4613 0EC6                              l4605 0EB2  
                            l6053 10BE                              l6117 1152  
                            l5261 15C8                              l5069 149C  
                            l5077 14AA                              l5173 0DEC  
                            l5085 0CCA                              l4295 195C  
                            l6063 10D4                              l6055 10C4  
                            l6047 10AE                              l4463 18FC  
                            l5407 01AA                              l5335 010C  
                            l5319 00DA                              l5239 159C  
                            l5191 0E38                              l5183 0E16  
                            l5095 0CE6                              l3841 1B14  
                            l4385 1890                              l4377 187C  
                            l4705 0FC4                              l6049 10B2  
                            l4801 11F0                              l4457 18E8  
                            l5513 02BE                              l5417 01CA  
                            l5361 0140                              l5329 00FE  
                            l5249 15B6                              l5257 15C4  
                            l3843 1B18                              l4299 1B48  
                            l4379 1882                              l4731 1000  
                            l4723 0FF0                              l6091 1118  
                            l6083 1102                              l6075 10F0  
                            l4491 19F6                              l4483 19E2  
                            l5611 03BC                              l5427 01EE  
                            l5371 0164                              l5363 0146  
                            l5347 011C                              l5291 007C  
                            l5275 004E                              l4741 1016  
                            l4717 0FE6                              l4637 0F10  
                            l4629 0EF2                              l6077 10F4  
                            l6069 10E2                              l4813 120A  
                            l5541 0324                              l5373 016A  
                            l5285 0070                              l5269 0038  
                            l4647 0F2E                              l6087 110E  
                            l4479 19DC                              l4495 19FE  
                            l4823 122C                              l5711 051C  
                            l5623 03CE                              l5607 03B8  
                            l5527 02E6                              l5455 0224  
                            l5447 0216                              l5439 0206  
                            l4737 100E                              l4681 0F78  
                            l4673 0F68                              l4761 1026  
                            l6097 112C                              l4593 1A80  
                            l4825 1238                              l5721 0534  
                            l5705 050C                              l5561 0358  
                            l5537 030C                              l5529 02EC  
                            l5481 0270                              l5377 0172  
                            l5289 0076                              l4683 0F8A  
                            l4667 0F56                              l4659 0F40  
                            l5803 067C                              l5635 03EE  
                            l5467 024A                              l5811 0688  
                            l4933 08A0                              l4693 0FA8  
                            l4685 0F8E                              l4589 1A78  
                            l4829 1240                              l5901 0ABA  
                            l5733 054E                              l5709 0516  
                            l5653 0416                              l5645 0408  
                            l5389 0182                              l4943 08C2  
                            l4927 0890                              l4863 07FA  
                            l4855 07E6                              l4839 07B6  
                            l4791 11DC                              l4783 11CA  
                            l5911 0AE4                              l5719 052E  
                            l5495 0296                              l4953 08E8  
                            l4937 08AC                              l4849 07D8  
                            l5753 05B6                              l5729 0546  
                            l5497 029C                              l5833 14E8  
                            l4891 0846                              l4883 083A  
                            l5931 0B1A                              l5915 0AF2  
                            l5907 0AE0                              l5755 05BC  
                            l5739 057A                              l5683 0488  
                            l5675 0470                              l5667 0448  
                            l5659 0424                              l5595 039A  
                            l5579 037C                              l5827 14DC  
                            l4981 093C                              l4973 0926  
                            l4869 0810                              l5933 0B20  
                            l5765 0600                              l5693 04E0  
                            l5677 0476                              l5845 1508  
                            l4959 08F8                              l5927 0B12  
                            l5695 04E6                              l5687 04A0  
                            l5847 150C                              l5839 14F4  
                            l4897 0858                              l5961 0B6E  
                            l5953 0B5A                              l5945 0B48  
                            l5793 0668                              l5777 0630  
                            l4995 0968                              l4987 0950  
                            l5971 0B9A                              l5963 0B72  
                            l5883 0A72                              l5787 0644  
                            l5779 0636                              l5699 0500  
                            l5859 1524                              l5885 0A7A  
                            l5877 0A60                              l5991 0BC4  
                            l5983 0BB4                              l5959 0B64  
                            l5895 0AA8                              l5979 0BA6  
                            l5899 0AB4                              l5997 0BD6  
                            STR_1 1FF8                              STR_2 1FF1  
                            STR_3 1FD8                              STR_4 1FBF  
                            STR_5 1FAF                              STR_6 1FE9  
                            STR_7 1FCC                              STR_8 1FE1  
                            _LATD 000F8C                              u4130 0F62  
                            u4050 0F06                              u3600 17D6  
                            u4400 07E2                              u4250 0FF6  
                            u4170 0F9A                              u3620 17EE  
                            u3700 1788                              u4500 0860  
                            u4260 1006                              u6020 05B4  
                            u3560 17AC                              u3640 1746  
                            u6040 05CE                              u5400 01D4  
                            u3618 17D8                              u3580 17C2  
                            u3660 175C                              u5420 01E2  
                            u3638 17F0                              u3718 178A  
                            u4470 0842                              u3910 1818  
                            u5350 0190                              u3680 1770  
                            u3920 182E                              u5440 01E8  
                            u5280 012A                              u3578 17AE  
                            u3658 1748                              u3850 1900  
                            u3917 1816                              u3598 17C4  
                            u3678 175E                              u3870 19E6  
                            u6270 0AA0                              u3927 182C  
                            u6520 1074                              u3698 1772  
                            u3890 140E                              u6450 0BD0  
                            u4950 0D4C                              u6528 1076  
                            u4960 0D50                              u5930 0508  
                            u5780 03DA                              u5790 03E0  
                            u4990 0DCC                              _CtoA 1AFA  
                 ??_SsetNovaTecla 004A            __end_of_SIOcheckKrebut 1C86  
                            _cap1 03B7                              _Rows 0040  
                            _cap2 03B6                              _main 16CE  
                            _hora 006D                              _menu 0036  
                            _nota 0026             getArrayShowUsers@quin 004C  
                 __end_of_HJugant 1D8E                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0079  
                 __end_of_JJuguem 1D28                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1B36  
                            start 0032                   __end_of_CantaIR 1BB8  
                    ?_initAltaveu 0045                      ___param_bank 000000  
                     _stringScore 0073                  __end_of_GLCDInit 1D88  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1DAC  
                           ?_CtoA 0045                __size_of_CToAReset 0008  
                     Espera@Timer 0054                             ?_main 0045  
                           ?_menu 0045                   __end_of___lbdiv 1A02  
                           _EEADR 000FA9                     ??_TiInitTimer 004A  
                           _T0CON 000FD5                   ?_compareStrings 004A  
                           i2l370 18D6                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1806                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 0045  
                           _TXREG 000FAD                             _SMSon 1D8E  
                           _TXSTA 000FAC                       _MNovaLletra 1D68  
                           _Minit 1D70                  __end_of_HGetTime 1DAC  
                           _Sinit 1D60                             _Timer 003D  
                           _Uinit 11B8                   __end_of_initSIO 1D38  
                           _s_ptr 000D                             _score 0010  
                           _nou_s 03C1             __end_of_JoystickMotor 1364  
                 _HActualitzaHora 199A       __size_of_escriureCharEEPROM 0026  
                  __pbitbssCOMRAM 03B0                             tablat 000FF5  
                     _LcNewString 1CCE                     ??_TiResetTics 004A  
                 ?_SIOcheckKrebut 0045                _UshowUsersCalculat 1C9E  
                           ttemp5 007A                             ttemp6 007D  
                           ttemp7 0081                             status 000FD8  
                ?_checkHoraAcabat 0045                             wtemp8 007A  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                 ___lbdiv@divisor 004A                  __end_of_LcGotoXY 1A36  
            CToAConverteix@numero 004A                   ___lbdiv@counter 004C  
                __end_of_LcLliure 1CE6                     ??__TiRSITimer 0045  
                __end_of_LcScroll 1DA0                        _TiGetTimer 1A36  
         EscriuPrimeraOrdre@ordre 004B                      __end_of_CtoA 1B1E  
                __end_of_JendGame 1DD8                       ?_SIOendGame 0045  
                 __initialization 1656               ?_UshowUsersCalculat 0045  
              __size_of_CantaData 0020                      __end_of_main 173A  
          __end_of_HClearNouSegon 1DB0                      __end_of_menu 0774  
         ?_SIOHaAcabatPuntuacions 0045             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0045                 __end_of_GLCDMotor 09FC  
                __end_of_TeTeclat 1180                     _indexNextUser 002C  
                          ??_CtoA 004A                            ??_main 005E  
                          ??_menu 0059                __size_of_LcPutChar 0040  
                   __activetblptr 000002                     _ultimaTeclaAD 0018  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 001A  
                GLCDMotor@length2 0019                        _JnovaTecla 1D10  
                __end_of_UgetTop5 1C22                            ?_LcLCD 0045  
                          ?_SMSon 0045                      ?_CToAobtenir 004A  
                          ?_Minit 0045              ??_UshowUsersCalculat 004A  
                          ?_Sinit 0045                            ?_Uinit 0045  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 1A8A                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 004A  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 004A  
              __size_of_SiFerMenu 0004                         ??_LcClear 0058  
                       ??_CantaIR 004C                            i2l4573 18BC  
                          i2l4577 18D2                            i2l4569 18B4  
                  LcGotoXY@Fisics 0053                    LcGotoXY@Column 0057  
                   ??_WaitForBusy 0051                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 003C  
               __end_of_CToAReset 1D30                            _SMSoff 1D94  
              SIONovaDireccio@num 004A                            _LcInit 1364  
                    _MNouJoystick 1D78                    _UgetNumUsuaris 1DB8  
                          _SMotor 0EB0               escriureCharEEPROM@c 004B  
                          _TeInit 1D58                            _Espera 1B40  
                    _LcGotoXY$334 0055                            _Krebut 03B0  
  __end_of_SIOHaAcabatPuntuacions 1DD0                            _RowAct 003F  
             __end_of_TiResetTics 1BC8                            Uinit@k 0050  
                __end_of_high_rsi 0032                            _h_Tics 000B  
                 ?_HClearNouSegon 0045                         ??___lbdiv 004B  
                   ?_CToAHaAcabat 0045                  __end_of_initHora 1D40  
             __end_of__TiRSITimer 18DC                  __end_of_menuList 1F90  
                          clear_0 169C                            clear_1 16A8  
                          clear_2 16BA                            _jugant 03B5  
                          _segons 0015                        _UenviaChar 1C4C  
                          isa$std 000001                  _llegirCharEEPROM 1C5C  
              __size_of_UgetScore 000E                        UenviaPas@c 004B  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1C92  
                       ??_initSIO 004B                      __pdataCOMRAM 005E  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0E9A  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 19CE  
               ??_SIONovaDireccio 004A                  __end_of_motorJoc 14C4  
                    __mediumconst 1EFC                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 004A                __size_of_UnewScore 000A  
             __size_of_SIOendGame 0004                 __end_of_CantaData 1982  
                    TeTeclat@cols 0036                  ___lbdiv@dividend 004B  
                       ?_GLCDInit 0045                     ?_UcheckExists 0045  
                      __accesstop 0080           __end_of__initialization 16C0  
          __end_of_UgetNumUsuaris 1DBC                 __end_of_LcPutChar 1896  
                   _JnovaDireccio 1D18                  JnovaDireccio@dir 004A  
                   ___rparam_used 000001                     __end_of_LcLCD 183C  
                     ?_TiGetTimer 0045                     __end_of_SMSon 1D94  
               SIONovaTecla@tecla 004A                    __pcstackCOMRAM 0045  
                   __end_of_Minit 1D78               __end_of_WaitForBusy 1962  
                   __end_of_Sinit 1D68                     __end_of_Uinit 1268  
               __end_of_NoFerMenu 1DD4                         ?_HGetTime 004A  
                    __pidataBANK0 1CF0                    ??_CToAHaAcabat 004A  
            __size_of_initAltaveu 0008                 __end_of_URegister 1DC8  
               __end_of_HnoJugant 1DA8                 __end_of_SiFerMenu 1DCC  
                      __end_ofPL2 0A12                        __end_ofPL4 0A26  
                      __end_ofPL6 0A2E                        __end_ofPL8 11B8  
                ___lbdiv@quotient 004D                 __end_of_TiGetTics 1AD6  
                     _TiInitTimer 1A62                       ?_JnovaTecla 0045  
                         ??_LcLCD 0059                           ??_SMSon 004A  
                       ?_LcGotoXY 0052                         ?_LcLliure 0045  
                         ??_Minit 004B                         ?_LcScroll 0045  
                         ??_Sinit 004B                   JnovaTecla@tecla 004A  
                         ??_Uinit 004E              __size_of_init_eusart 0016  
                       ?_JendGame 0045                    ??_UcheckExists 004A  
             MNouJoystick@posicio 004A                        ??_GLCDInit 004B  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 0045  
                     _TiResetTics 1BB8                   ?_UgetNumUsuaris 0045  
                  ?_JnovaDireccio 0045                     ??_UmotorUsers 004F  
               __end_of_UgetScore 1C7A                     ?_JoystickInit 0045  
                         ?_SMSoff 0045                           ?_LcInit 0045  
                   _CantaPartAlta 17A0                           ?_SMotor 0045  
                         ?_TeInit 0045                           ?_Espera 0051  
               __end_of_UenviaPas 1C4C                       __TiRSITimer 189E  
             _indexNextUserStruct 002B                         ?_UgetTop5 0045  
               __end_of_UnewScore 1CF0                        ??_HGetTime 004C  
                   ?_UgetUserName 004A                  ??_compareStrings 004D  
                         _BAUDCON 000FB8                       ?_UenviaChar 004A  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 1DB8  
                         LcInit@i 0056                  ?_HActualitzaHora 004A  
                      ??_LcGotoXY 0053                      ?_MNovaLletra 0045  
                      ??_LcLliure 004A                        ??_LcScroll 004D  
                ??_SIOcheckKrebut 004A               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 004A  
                         _HJugant 1D88                         ?_high_rsi 0045  
                         _JJuguem 1D20                           _LcClear 1B1E  
                         _CantaIR 1B9C                      ?_LcNewString 004D  
                  ??_JoystickInit 004A                         ?_initHora 0045  
                      ??_TeTeclat 0051                       _WaitForBusy 1924  
                  ?_CantaPartAlta 0045             __end_of_SsetNovaTecla 1D50  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A6  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 004A                      ??_SIOendGame 004A  
                       ?_motorSIO 0045                         ?_motorJoc 0045  
                  ??_UgetUserName 004C                 _getArrayShowUsers 1B80  
             __end_of_UmotorUsers 0C76          ?_UcheckExistsNotFinished 0045  
               __end_of_arrayZero 1EFF                           ___lbdiv 19CE  
                   ?_motorAltaveu 0045                ?_getArrayShowUsers 004A  
                         __pcinit 1656      __end_of_UcheckExistsGetError 1DC0  
                         _ferMenu 03B9                        _init_ports 1B62  
                         __ramtop 0200                           __ptext0 16CE  
                         __ptext1 0CC8                           __ptext2 1CE6  
                         __ptext3 1422                           __ptext4 1AD6  
                         __ptext5 1DA0                           __ptext6 1C7A  
                         __ptext7 1CF8                           __ptext8 1D00  
                         __ptext9 1D08                         _T0CONbits 000FD5  
                       _GLCDMotor 07B4                         CantaIR@IR 004C  
                         _initSIO 1D30                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 004A  
             ??_getArrayShowUsers 004C                       UenviaChar@c 004B  
      __end_of_escriureCharEEPROM 1AB0                 __end_of_loginText 1FAF  
                LcNewString@new_s 004D                   WaitForBusy@Busy 0051  
                     Uinit@k_1193 0051                      _do_showUsers 03BC  
                         _userPtr 0009                 GLCDMostraMenu@num 004A  
              __end_of_SIOendGame 1DA4                        ??_high_rsi 0046  
            __end_of_CToAHaAcabat 1DE0              end_of_initialization 16C0  
                         _usuaris 0100                     UgetScore@quin 004A  
                 ??_JnovaDireccio 004A                        ??_initHora 004B  
        __end_of_llegirCharEEPROM 1C6C           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 1EFC                   TiGetTics@Handle 004E  
                   _MsetNovaTecla 1D50               __size_of_UenviaChar 0010  
               _conversorJoystick 1AD6                 __end_of_motorHora 15DA  
                ??_HClearNouSegon 004A                        _novaLletra 0068  
       __end_of_getArrayShowUsers 1B9C                ?_conversorJoystick 0045  
                 _usuariActualSIO 0061                        ??_motorSIO 0059  
                       _CToAReset 1D28                        ??_motorJoc 0058  
                 TiGetTics@actual 004F                     ?_SIONovaTecla 0045  
                      GLCDMotor@j 001F                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1D08  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0051  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 002D  
            __end_of_UcheckExists 1DC4                     TeTeclat@files 0035  
             ??_conversorJoystick 004A                SIOStartGame@usuari 004A  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0037  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0045                     ?_SIOStartGame 0045  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1C86  
               UnewScore@scoretmp 004A                    _GLCDMostraMenu 1CB6  
       __end_of_conversorJoystick 1AFA                   ??_CantaPartAlta 004A  
                  ?_MsetNovaTecla 0045                         _CantaData 1962  
               __size_of_GLCDInit 0008                       _UmotorUsers 0A46  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1CB6  
                  __end_of_SMSoff 1D9A                      ??_TiGetTimer 004A  
                  __end_of_LcInit 1418                    ??_SIONovaTecla 004A  
                      ?_CToAReset 0045                    __end_of_SMotor 1056  
            __end_of_teclaPremuda 1F9C                         _LcPutChar 1856  
                  __end_of_TeInit 1D60                 motorAltaveu@state 0023  
                  __end_of_Espera 1B62                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 163E                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1BD4                       ?_init_ports 0045  
                       _NoFerMenu 1DD0                         _ColumnAct 003E  
            __end_of_JoystickInit 1C3C                    ??_SIOStartGame 004A  
                       _URegister 1DC4                         _HnoJugant 1DA4  
                    ?_TiInitTimer 0045              __end_of_registerText 1FA7  
                    ??_JnovaTecla 004A                         _SiFerMenu 1DC8  
                     __end_ofPL10 0C84                       __end_ofPL20 0CC0  
                     __end_ofPL12 1A62                       __end_ofPL30 0784  
                     __end_ofPL22 0EA6                       __end_ofPL14 0CA0  
                     __end_ofPL40 1284                       __end_ofPL32 184A  
                     __end_ofPL24 1BD4                       __end_ofPL16 0CAE  
                     __end_ofPL50 0798                       __end_ofPL42 078E  
                     __end_ofPL34 1276                       __end_ofPL26 077E  
                     __end_ofPL18 1556                       __end_ofPL60 199A  
                     __end_ofPL52 1422                       __end_ofPL44 1856  
                     __end_ofPL36 0A3C                       __end_ofPL28 1990  
                     __end_ofPL70 18E6                       __end_ofPL62 1060  
                     __end_ofPL54 1806                       __end_ofPL46 191A  
                     __end_ofPL38 164C                       __end_ofPL80 189E  
                     __end_ofPL72 1656                       __end_ofPL64 106A  
                     __end_ofPL56 0A46                       __end_ofPL48 0EB0  
                     __end_ofPL82 07A0                       __end_ofPL74 128E  
                     __end_ofPL66 17A0                       __end_ofPL58 1924  
                     __end_ofPL84 07A8                       __end_ofPL76 1B40  
                     __end_ofPL68 1C2A                       __end_ofPL86 07AE  
                     __end_ofPL78 0CC8                       __end_ofPL88 07B4  
             start_initialization 1656                         _TiGetTics 1AB0  
          __end_of_GLCDMostraMenu 1CC2                        ?_HNouSegon 0045  
                ??_UgetNumUsuaris 004A                  UmotorUsers@state 0027  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1C16  
              __end_of_TiGetTimer 1A54                     JJuguem@usuari 004A  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 128E  
               __size_of_JendGame 0004                      ?_TiResetTics 0045  
                      ?_CantaData 0045              _UcheckExistsGetError 1DBC  
         __end_of_SIONovaDireccio 1D10              __size_of_LcNewString 000C  
                        ??_SMSoff 004A                          ??_LcInit 0055  
                       _NovaTecla 0069                 __size_of_TeTeclat 0116  
                        ??_SMotor 0051        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 004B                      ?__TiRSITimer 0045  
                   ??_initAltaveu 004B                          ??_Espera 0053  
                       _UgetScore 1C6C                __end_of_JnovaTecla 1D18  
                      ?_LcPutChar 0045                         _UenviaPas 1C3C  
               __size_of_UgetTop5 000C                       __pdataBANK0 00B4  
                  motorHora@state 0014                      _menuDaltGLCD 0021  
                    ??_UenviaChar 004B                         _UnewScore 1CE6  
                      ?_NoFerMenu 0045                       ??_GLCDMotor 0059  
                      ?_URegister 0045                        ?_HnoJugant 0045  
               ??_checkHoraAcabat 004A                     ??_init_eusart 004A  
                      ?_SiFerMenu 0045                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                        ?_TiGetTics 004A  
                 ?_GLCDMostraMenu 0045                          ?_HJugant 0045  
                  ?_JoystickMotor 0045                   ??_MsetNovaTecla 004A  
            __end_of_motorAltaveu 153E                          ?_JJuguem 0045  
                        ?_LcClear 0045                          ?_CantaIR 0045  
      __size_of_conversorJoystick 0024                _calculateShowUsers 1DB4  
                  _CantaPartBaixa 173A          ??_SIOHaAcabatPuntuacions 004A  
           ?_UcheckExistsGetError 0045                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0045               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 004A                SsetNovaTecla@tecla 004A  
              __end_of_UenviaChar 1C5C           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008             __size_of_UcheckExists 0004  
             ?_calculateShowUsers 0045                        ?_UgetScore 0045  
                     ??_CToAReset 004A                         __pintcode 0008  
                   __pmediumconst 1EFC                          ?___lbdiv 004A  
                   ??_playAltaveu 004A                        ?_UenviaPas 004A  
               __size_of_motorSIO 01D2                 __size_of_motorJoc 00A2  
                 CantaPartBaixa@c 004B                      _CToAHaAcabat 1DDC  
             __end_of_initAltaveu 1D48                        ?_UnewScore 0045  
                       _arrayZero 1EFD                          ?_initSIO 0045  
                       _convertir 005E                     ??_CToAobtenir 004C  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0006  
            ??_calculateShowUsers 004A  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 1D08  
                  __size_of_Sinit 0008                       ??_HNouSegon 004A  
                  __size_of_Uinit 00B0                       _direccioSIO 0060  
                     _direccioJoc 0013            __end_of_CantaPartBaixa 1796  
              JoystickMotor@state 0017                          _GLCDInit 1D80  
                     _do_register 03BD               __end_of_init_eusart 1C02  
                       _newString 03B8                      _UcheckExists 1DC0  
                       _loginText 1FA7                         _jugantSIO 03B1  
        __size_of_HActualitzaHora 0034                         _jugantJoc 03B2  
                    UgetTop5@quin 004A                       ??_CantaData 004C  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                 ?_llegirCharEEPROM 0045  
                   ?_MNouJoystick 0045                  ?_SIONovaDireccio 0045  
            __end_of_SIOStartGame 1D00                     UenviaChar@pos 004A  
              _escriureCharEEPROM 1A8A                         _novaTecla 006B  
              ??_llegirCharEEPROM 004A                     motorSIO@state 000F  
                        _PIR1bits 000F9E                       ??_LcPutChar 0058  
                       _timerGLCD 0022                         _motorHora 1556  
                        _RCONbits 000FD0                         _reproduir 03BA  
                        _HGetTime 1DA8             __size_of_JoystickInit 0012  
                       _timerHora 0016                         _timerMenu 0032  
             ?_escriureCharEEPROM 004A                       ??_NoFerMenu 004A  
                      _ADCON0bits 000FC2                       ??_URegister 004A  
                     ??_HnoJugant 004A                       ??_SiFerMenu 004A  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1DB4  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0051  
                       _zeroTecla 003A                          _LcGotoXY 1A02  
                  _usuariLoguejat 0066                          _LcLliure 1CDA  
                     ??_TiGetTics 004C           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 004A              __size_of_TiInitTimer 0028  
                        _LcScroll 1D9A                   ??_JoystickMotor 004B  
                   GLCDMotor@max1 0065                     GLCDMotor@max2 0064  
                   GLCDMotor@min1 001E                     GLCDMotor@min2 001D  
                    _teclaPremuda 1F90                          _JendGame 1DD4  
                       _usuariJoc 0063                       LcGotoXY@Row 0052  
                       copy_data0 166A                         copy_data1 168A  
            ??_escriureCharEEPROM 004B                   ?_CantaPartBaixa 0045  
             __end_of_CToAobtenir 1DDC                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 004A             escriureCharEEPROM@pos 004A  
                __size_of_JJuguem 0008                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 106A  
           __end_of_JnovaDireccio 1D20                    ??_MNouJoystick 004A  
                  _do_updateScore 03BB   __size_of_SIOHaAcabatPuntuacions 0004  
                    ?_UmotorUsers 0045                      _JoystickInit 1C2A  
                      _EECON1bits 000FA6                      _registerText 1F9C  
                     _indexUsuari 0030           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0010                     motorJoc@state 0012  
                        __Hrparam 0000                       _initAltaveu 1D40  
                     ??_UgetScore 004A                          _UgetTop5 1C16  
                       menu@state 002E                          __Lrparam 0000  
                      ?_motorHora 0045              __size_of__TiRSITimer 003E  
                    _UgetUserName 1C02                       ??_UenviaPas 004B  
                __size_of___lbdiv 0034                      _novaDireccio 0067  
                     ??_UnewScore 004A                      ??_init_ports 004A  
             HActualitzaHora@nova 004A        __end_of_UshowUsersCalculat 1CAA  
                     _init_eusart 1BEC                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007A                      _novaTeclaJOC 0062  
                    _novaTeclaSIO 005F                   _do_check_exists 03BE  
                        __ptext10 1DA4                          __ptext11 1C86  
              _EscriuPrimeraOrdre 15DA                          __ptext20 1C92  
                        __ptext12 1D88                          __ptext21 1DB4  
                        __ptext13 1DA8                          __ptext30 1DBC  
                        __ptext22 1C9E                          __ptext14 1DAC  
                        __ptext31 1DC0                          __ptext23 1C02  
                        __ptext15 1556                          __ptext40 1D18  
                        __ptext32 1DC4                          __ptext24 1C16  
                        __ptext16 1DB0                          __ptext41 1DD4  
                        __ptext33 1DC8                          __ptext25 1C6C  
                        __ptext17 14C4                          __ptext50 1BEC  
                        __ptext42 1D20                          __ptext34 1D8E  
                        __ptext26 1DB8                          __ptext18 0036  
                        __ptext51 1D30                          __ptext43 199A  
                        __ptext35 1D94                          __ptext27 1C3C  
                        __ptext19 1B80                          __ptext60 1A62  
                        __ptext52 1D38                          __ptext44 1CB6  
                        __ptext36 1DCC                          __ptext28 1C4C  
                        __ptext61 106A                          __ptext53 1D40  
                        __ptext45 1DD8                          __ptext37 1DD0  
                        __ptext29 1CAA                          __ptext70 1364  
                        __ptext62 1D48                          __ptext54 0A46  
                        __ptext46 1DDC                          __ptext38 1D9A  
                        __ptext71 15DA                          __ptext63 1D50  
                        __ptext55 1A8A                          __ptext47 1CC2  
                        __ptext39 1D10                          __ptext80 1B1E  
                        __ptext72 128E                          __ptext64 1D58  
                        __ptext56 18E6                          __ptext48 1D28  
                        __ptext81 1A02                          __ptext73 1D78  
                        __ptext65 1D60                          __ptext57 11B8  
                        __ptext49 1B62                          __ptext90 1A36  
                        __ptext82 1924                          __ptext74 1C2A  
                        __ptext66 0EB0                          __ptext58 1C5C  
                        __ptext91 1AFA                          __ptext83 1B9C  
                        __ptext75 07B4                          __ptext67 1D68  
                        __ptext59 19CE                          __ptext84 173A  
                        __ptext76 1856                          __ptext68 1D70  
                        __ptext93 189E                          __ptext85 17A0  
                        __ptext77 1962                          __ptext69 1806  
                        __ptext86 1B40                          __ptext78 1CCE  
                        __ptext87 1BB8                          __ptext79 1CDA  
                        __ptext88 1AB0                          __ptext89 1D80  
                  CantaPartAlta@c 004B                       _lletraASCII 006C  
                        _high_rsi 0008                          _copsNota 0024  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 1D38                       _lletraInici 00B4  
                        _menuDalt 0031                          _menuList 1EFF  
             ?_EscriuPrimeraOrdre 0045                     __size_of_main 006C  
                   __size_of_menu 073E             __end_of_CantaPartAlta 17FC  
                  _CToAConverteix 1CC2                     CantaData@Data 004C  
                        _tiTeclat 0038                __end_of_init_ports 1B80  
                        _setSMSon 03C0                     _SsetNovaTecla 1D48  
            __size_of_WaitForBusy 003E                          _nouSegon 03B4  
                        _scoreUsr 0028                          _motorSIO 0CC8  
               ??_HActualitzaHora 004B                          _motorJoc 1422  
                 _checkHoraAcabat 1C92                          _timerSIO 0011  
                        _timerSMS 003B                          isa$xinst 000000  
                        int$flags 0079                      UenviaPas@pos 004A  
                     _playAltaveu 1DB0                      _motorAltaveu 14C4  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 1DCC  
            ??_EscriuPrimeraOrdre 004A                        LcInit@rows 0055  
                ??_GLCDMostraMenu 004A             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1CAA                        _INTCONbits 000FF2  
                   ??_MNovaLletra 004A                       _CToAobtenir 1DD8  
           __size_of_SIOStartGame 0008                     ??_LcNewString 004F  
                        intlevel2 0000                      _timerAltaveu 0025  
                  _arrayShowUsers 0001            __end_of_CToAConverteix 1CCE  
                      LcPutChar@c 0058                    ?_SsetNovaTecla 0045  
               MNovaLletra@lletra 004A                   compareStrings@a 004A  
                 compareStrings@b 004B                       ??_motorHora 0051  
                    _SIONovaTecla 1D00                       _tempsAcabat 03B3  
                     GLCDMotor@k1 001C                       GLCDMotor@k2 001B  
            __end_of_MNouJoystick 1D80                      _SIOStartGame 1CF8  
                  _compareStrings 18E6                       _tmpPassword 00A2  
             __end_of_MNovaLletra 1D70                   ?_CToAConverteix 0045  
           __end_of_MsetNovaTecla 1D58           __end_of_checkHoraAcabat 1C9E  
                     _tmpUsername 00AB                    _SIOcheckKrebut 1C7A  
                     SMotor@state 0039           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1CDA              __size_of_UmotorUsers 0230  
                      _SIOendGame 1DA0  
