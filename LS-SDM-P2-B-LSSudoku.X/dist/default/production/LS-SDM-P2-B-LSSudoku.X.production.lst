

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 06 19:03:50 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   115                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   116                           	psect	pa_nodes0,global,class=CODE,delta=1
   117  0000                     
   118                           ; Version 2.32
   119                           ; Generated 02/02/2021 GMT
   120                           ; 
   121                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution. Publication is not required when
   135                           ;        this file is used in an embedded application.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F4321 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154                           	psect	idataCOMRAM
   155  001DAC                     __pidataCOMRAM:
   156                           	callstack 0
   157                           
   158                           ;initializer for _arrayZero
   159  001DAC  30                 	db	48
   160  001DAD  20                 	db	32
   161  001DAE  00                 	db	0
   162                           
   163                           ;initializer for _convertir
   164  001DAF  FA                 	db	250
   165                           
   166                           ;initializer for _novaTeclaSIO
   167  001DB0  FF                 	db	255
   168                           
   169                           ;initializer for _direccioSIO
   170  001DB1  FF                 	db	255
   171                           
   172                           ;initializer for _usuariActualSIO
   173  001DB2  FF                 	db	255
   174                           
   175                           ;initializer for _novaTeclaJOC
   176  001DB3  FF                 	db	255
   177                           
   178                           ;initializer for _usuariJoc
   179  001DB4  FF                 	db	255
   180                           
   181                           ;initializer for GLCDMotor@max2
   182  001DB5  0F                 	db	15
   183                           
   184                           ;initializer for GLCDMotor@max1
   185  001DB6  0F                 	db	15
   186                           
   187                           ;initializer for _usuariLoguejat
   188  001DB7  FF                 	db	255
   189                           
   190                           ;initializer for _novaDireccio
   191  001DB8  FF                 	db	255
   192                           
   193                           ;initializer for _novaLletra
   194  001DB9  FF                 	db	255
   195                           
   196                           ;initializer for _NovaTecla
   197  001DBA  FF                 	db	255
   198                           
   199                           ;initializer for _ultimaTecla
   200  001DBB  FF                 	db	255
   201                           
   202                           ;initializer for _timerSMS
   203  001DBC  FF                 	db	255
   204                           
   205                           ;initializer for _novaTecla
   206  001DBD  FF                 	db	255
   207                           
   208                           ;initializer for _lletraASCII
   209  001DBE  FF                 	db	255
   210                           
   211                           ;initializer for _hora
   212  001DBF  33                 	db	51
   213  001DC0  30                 	db	48
   214  001DC1  3A                 	db	58
   215  001DC2  30                 	db	48
   216  001DC3  30                 	db	48
   217  001DC4  00                 	db	0
   218                           
   219                           ;initializer for _stringScore
   220  001DC5  30                 	db	48
   221  001DC6  30                 	db	48
   222  001DC7  00                 	db	0
   223                           
   224                           	psect	idataBANK0
   225  001E32                     __pidataBANK0:
   226                           	callstack 0
   227                           
   228                           ;initializer for _lletraInici
   229  001E32  41                 	db	65
   230  001E33  44                 	db	68
   231  001E34  47                 	db	71
   232  001E35  4A                 	db	74
   233  001E36  4D                 	db	77
   234  001E37  50                 	db	80
   235  001E38  54                 	db	84
   236  001E39  57                 	db	87
   237  001E3A  00                 	db	0
   238                           
   239                           ;initializer for _teclaPremuda
   240  001E3B  01                 	db	1
   241  001E3C  02                 	db	2
   242  001E3D  03                 	db	3
   243  001E3E  04                 	db	4
   244  001E3F  05                 	db	5
   245  001E40  06                 	db	6
   246  001E41  07                 	db	7
   247  001E42  08                 	db	8
   248  001E43  09                 	db	9
   249  001E44  0A                 	db	10
   250  001E45  00                 	db	0
   251  001E46  0B                 	db	11
   252                           
   253                           	psect	smallconst
   254  000200                     __psmallconst:
   255                           	callstack 0
   256  000200  00                 	db	0
   257  000201                     _menuList:
   258                           	callstack 0
   259  000201  31                 	db	49
   260  000202  2E                 	db	46
   261  000203  50                 	db	80
   262  000204  6C                 	db	108
   263  000205  61                 	db	97
   264  000206  79                 	db	121
   265  000207  20                 	db	32
   266  000208  61                 	db	97
   267  000209  20                 	db	32
   268  00020A  47                 	db	71
   269  00020B  61                 	db	97
   270  00020C  6D                 	db	109
   271  00020D  65                 	db	101
   272  00020E  00                 	db	0
   273  00020F  00                 	db	0
   274  000210  00                 	db	0
   275  000211  00                 	db	0
   276  000212  00                 	db	0
   277  000213  00                 	db	0
   278  000214  00                 	db	0
   279  000215  00                 	db	0
   280  000216  00                 	db	0
   281  000217  00                 	db	0
   282  000218  00                 	db	0
   283  000219  00                 	db	0
   284  00021A  00                 	db	0
   285  00021B  00                 	db	0
   286  00021C  00                 	db	0
   287  00021D  00                 	db	0
   288  00021E  32                 	db	50
   289  00021F  2E                 	db	46
   290  000220  4D                 	db	77
   291  000221  6F                 	db	111
   292  000222  64                 	db	100
   293  000223  69                 	db	105
   294  000224  66                 	db	102
   295  000225  79                 	db	121
   296  000226  20                 	db	32
   297  000227  54                 	db	84
   298  000228  69                 	db	105
   299  000229  6D                 	db	109
   300  00022A  65                 	db	101
   301  00022B  00                 	db	0
   302  00022C  00                 	db	0
   303  00022D  00                 	db	0
   304  00022E  00                 	db	0
   305  00022F  00                 	db	0
   306  000230  00                 	db	0
   307  000231  00                 	db	0
   308  000232  00                 	db	0
   309  000233  00                 	db	0
   310  000234  00                 	db	0
   311  000235  00                 	db	0
   312  000236  00                 	db	0
   313  000237  00                 	db	0
   314  000238  00                 	db	0
   315  000239  00                 	db	0
   316  00023A  00                 	db	0
   317  00023B  33                 	db	51
   318  00023C  2E                 	db	46
   319  00023D  53                 	db	83
   320  00023E  68                 	db	104
   321  00023F  6F                 	db	111
   322  000240  77                 	db	119
   323  000241  20                 	db	32
   324  000242  47                 	db	71
   325  000243  65                 	db	101
   326  000244  6E                 	db	110
   327  000245  65                 	db	101
   328  000246  72                 	db	114
   329  000247  61                 	db	97
   330  000248  6C                 	db	108
   331  000249  20                 	db	32
   332  00024A  54                 	db	84
   333  00024B  6F                 	db	111
   334  00024C  70                 	db	112
   335  00024D  20                 	db	32
   336  00024E  35                 	db	53
   337  00024F  20                 	db	32
   338  000250  53                 	db	83
   339  000251  63                 	db	99
   340  000252  6F                 	db	111
   341  000253  72                 	db	114
   342  000254  65                 	db	101
   343  000255  73                 	db	115
   344  000256  20                 	db	32
   345  000257  00                 	db	0
   346  000258  34                 	db	52
   347  000259  2E                 	db	46
   348  00025A  4C                 	db	76
   349  00025B  6F                 	db	111
   350  00025C  67                 	db	103
   351  00025D  6F                 	db	111
   352  00025E  75                 	db	117
   353  00025F  74                 	db	116
   354  000260  00                 	db	0
   355  000261  00                 	db	0
   356  000262  00                 	db	0
   357  000263  00                 	db	0
   358  000264  00                 	db	0
   359  000265  00                 	db	0
   360  000266  00                 	db	0
   361  000267  00                 	db	0
   362  000268  00                 	db	0
   363  000269  00                 	db	0
   364  00026A  00                 	db	0
   365  00026B  00                 	db	0
   366  00026C  00                 	db	0
   367  00026D  00                 	db	0
   368  00026E  00                 	db	0
   369  00026F  00                 	db	0
   370  000270  00                 	db	0
   371  000271  00                 	db	0
   372  000272  00                 	db	0
   373  000273  00                 	db	0
   374  000274  00                 	db	0
   375  000275  35                 	db	53
   376  000276  2E                 	db	46
   377  000277  53                 	db	83
   378  000278  68                 	db	104
   379  000279  6F                 	db	111
   380  00027A  77                 	db	119
   381  00027B  20                 	db	32
   382  00027C  41                 	db	65
   383  00027D  6C                 	db	108
   384  00027E  6C                 	db	108
   385  00027F  20                 	db	32
   386  000280  55                 	db	85
   387  000281  73                 	db	115
   388  000282  65                 	db	101
   389  000283  72                 	db	114
   390  000284  73                 	db	115
   391  000285  00                 	db	0
   392  000286  00                 	db	0
   393  000287  00                 	db	0
   394  000288  00                 	db	0
   395  000289  00                 	db	0
   396  00028A  00                 	db	0
   397  00028B  00                 	db	0
   398  00028C  00                 	db	0
   399  00028D  00                 	db	0
   400  00028E  00                 	db	0
   401  00028F  00                 	db	0
   402  000290  00                 	db	0
   403  000291  00                 	db	0
   404  000292                     __end_of_menuList:
   405                           	callstack 0
   406  0000                     _PIR1bits	set	3998
   407  0000                     _RCREG	set	4014
   408  0000                     _TXREG	set	4013
   409  0000                     _TXSTAbits	set	4012
   410  0000                     _ADCON0bits	set	4034
   411  0000                     _ADRESH	set	4036
   412  0000                     _ADCON2	set	4032
   413  0000                     _ADCON1	set	4033
   414  0000                     _ADCON0	set	4034
   415  0000                     _EECON2	set	4007
   416  0000                     _EEDATA	set	4008
   417  0000                     _EEADR	set	4009
   418  0000                     _T0CONbits	set	4053
   419  0000                     _TMR0L	set	4054
   420  0000                     _TMR0H	set	4055
   421  0000                     _T0CON	set	4053
   422  0000                     _INTCONbits	set	4082
   423  0000                     _RCONbits	set	4048
   424  0000                     _PORTDbits	set	3971
   425  0000                     _SPBRG	set	4015
   426  0000                     _SPBRGH	set	4016
   427  0000                     _BAUDCON	set	4024
   428  0000                     _RCSTA	set	4011
   429  0000                     _TXSTA	set	4012
   430  0000                     _EECON1bits	set	4006
   431  0000                     _LATD	set	3980
   432  0000                     _TRISD	set	3989
   433  0000                     _TRISC	set	3988
   434  0000                     _LATBbits	set	3978
   435  0000                     _TRISB	set	3987
   436  0000                     _TRISA	set	3986
   437  0000                     _PORTCbits	set	3970
   438  0000                     _LATDbits	set	3980
   439  0000                     _LATCbits	set	3979
   440  0000                     _TRISDbits	set	3989
   441  0000                     _TRISCbits	set	3988
   442  000292                     STR_7:
   443  000292  54                 	db	84	;'T'
   444  000293  49                 	db	73	;'I'
   445  000294  4D                 	db	77	;'M'
   446  000295  45                 	db	69	;'E'
   447  000296  20                 	db	32
   448  000297  52                 	db	82	;'R'
   449  000298  45                 	db	69	;'E'
   450  000299  4D                 	db	77	;'M'
   451  00029A  41                 	db	65	;'A'
   452  00029B  49                 	db	73	;'I'
   453  00029C  4E                 	db	78	;'N'
   454  00029D  49                 	db	73	;'I'
   455  00029E  4E                 	db	78	;'N'
   456  00029F  47                 	db	71	;'G'
   457  0002A0  3A                 	db	58	;':'
   458  0002A1  00                 	db	0
   459  0002A2                     STR_6:
   460  0002A2  4D                 	db	77	;'M'
   461  0002A3  6F                 	db	111	;'o'
   462  0002A4  64                 	db	100	;'d'
   463  0002A5  69                 	db	105	;'i'
   464  0002A6  66                 	db	102	;'f'
   465  0002A7  79                 	db	121	;'y'
   466  0002A8  20                 	db	32
   467  0002A9  54                 	db	84	;'T'
   468  0002AA  69                 	db	105	;'i'
   469  0002AB  6D                 	db	109	;'m'
   470  0002AC  65                 	db	101	;'e'
   471  0002AD  3A                 	db	58	;':'
   472  0002AE  00                 	db	0
   473  0002AF                     STR_9:
   474  0002AF  54                 	db	84	;'T'
   475  0002B0  49                 	db	73	;'I'
   476  0002B1  4D                 	db	77	;'M'
   477  0002B2  45                 	db	69	;'E'
   478  0002B3  20                 	db	32
   479  0002B4  4C                 	db	76	;'L'
   480  0002B5  45                 	db	69	;'E'
   481  0002B6  46                 	db	70	;'F'
   482  0002B7  54                 	db	84	;'T'
   483  0002B8  3A                 	db	58	;':'
   484  0002B9  20                 	db	32
   485  0002BA  00                 	db	0
   486  0002BB                     STR_2:
   487  0002BB  32                 	db	50	;'2'
   488  0002BC  2E                 	db	46
   489  0002BD  52                 	db	82	;'R'
   490  0002BE  45                 	db	69	;'E'
   491  0002BF  47                 	db	71	;'G'
   492  0002C0  49                 	db	73	;'I'
   493  0002C1  53                 	db	83	;'S'
   494  0002C2  54                 	db	84	;'T'
   495  0002C3  45                 	db	69	;'E'
   496  0002C4  52                 	db	82	;'R'
   497  0002C5  00                 	db	0
   498  0002C6                     STR_5:
   499  0002C6  42                 	db	66	;'B'
   500  0002C7  59                 	db	89	;'Y'
   501  0002C8  45                 	db	69	;'E'
   502  0002C9  20                 	db	32
   503  0002CA  42                 	db	66	;'B'
   504  0002CB  59                 	db	89	;'Y'
   505  0002CC  45                 	db	69	;'E'
   506  0002CD  20                 	db	32
   507  0002CE  00                 	db	0
   508  0002CF                     STR_10:
   509  0002CF  53                 	db	83	;'S'
   510  0002D0  43                 	db	67	;'C'
   511  0002D1  4F                 	db	79	;'O'
   512  0002D2  52                 	db	82	;'R'
   513  0002D3  45                 	db	69	;'E'
   514  0002D4  3A                 	db	58	;':'
   515  0002D5  20                 	db	32
   516  0002D6  00                 	db	0
   517  0002D7                     STR_8:
   518  0002D7  45                 	db	69	;'E'
   519  0002D8  52                 	db	82	;'R'
   520  0002D9  52                 	db	82	;'R'
   521  0002DA  4F                 	db	79	;'O'
   522  0002DB  52                 	db	82	;'R'
   523  0002DC  53                 	db	83	;'S'
   524  0002DD  3A                 	db	58	;':'
   525  0002DE  00                 	db	0
   526  0002DF                     STR_1:
   527  0002DF  31                 	db	49	;'1'
   528  0002E0  2E                 	db	46
   529  0002E1  4C                 	db	76	;'L'
   530  0002E2  4F                 	db	79	;'O'
   531  0002E3  47                 	db	71	;'G'
   532  0002E4  49                 	db	73	;'I'
   533  0002E5  4E                 	db	78	;'N'
   534  0002E6  00                 	db	0
   535  0002E7                     STR_4:
   536  0002E7  50                 	db	80	;'P'
   537  0002E8  53                 	db	83	;'S'
   538  0002E9  57                 	db	87	;'W'
   539  0002EA  44                 	db	68	;'D'
   540  0002EB  3A                 	db	58	;':'
   541  0002EC  20                 	db	32
   542  0002ED  00                 	db	0
   543  0002EE                     STR_3:
   544  0002EE  55                 	db	85	;'U'
   545  0002EF  53                 	db	83	;'S'
   546  0002F0  45                 	db	69	;'E'
   547  0002F1  52                 	db	82	;'R'
   548  0002F2  3A                 	db	58	;':'
   549  0002F3  20                 	db	32
   550  0002F4  00                 	db	0
   551  0002F5  00                 	db	0	; dummy byte at the end
   552  0000                     
   553                           ; #config settings
   554                           
   555                           	psect	cinit
   556  0017F6                     __pcinit:
   557                           	callstack 0
   558  0017F6                     start_initialization:
   559                           	callstack 0
   560  0017F6                     __initialization:
   561                           	callstack 0
   562                           
   563                           ; Initialize objects allocated to BANK0 (21 bytes)
   564                           ; load TBLPTR registers with __pidataBANK0
   565  0017F6  0E32               	movlw	low __pidataBANK0
   566  0017F8  6EF6               	movwf	tblptrl,c
   567  0017FA  0E1E               	movlw	high __pidataBANK0
   568  0017FC  6EF7               	movwf	tblptrh,c
   569  0017FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   570  001800  6EF8               	movwf	tblptru,c
   571  001802  EE00  F0B2         	lfsr	0,__pdataBANK0
   572  001806  EE10 F015          	lfsr	1,21
   573  00180A                     copy_data0:
   574  00180A  0009               	tblrd		*+
   575  00180C  CFF5 FFEE          	movff	tablat,postinc0
   576  001810  50E5               	movf	postdec1,w,c
   577  001812  50E1               	movf	fsr1l,w,c
   578  001814  E1FA               	bnz	copy_data0
   579                           
   580                           ; Initialize objects allocated to COMRAM (28 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582  001816  0EAC               	movlw	low __pidataCOMRAM
   583  001818  6EF6               	movwf	tblptrl,c
   584  00181A  0E1D               	movlw	high __pidataCOMRAM
   585  00181C  6EF7               	movwf	tblptrh,c
   586  00181E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   587  001820  6EF8               	movwf	tblptru,c
   588  001822  EE00  F045         	lfsr	0,__pdataCOMRAM
   589  001826  EE10 F01C          	lfsr	1,28
   590  00182A                     copy_data1:
   591  00182A  0009               	tblrd		*+
   592  00182C  CFF5 FFEE          	movff	tablat,postinc0
   593  001830  50E5               	movf	postdec1,w,c
   594  001832  50E1               	movf	fsr1l,w,c
   595  001834  E1FA               	bnz	copy_data1
   596                           
   597                           ; Clear objects allocated to BANK1 (184 bytes)
   598  001836  EE01  F000         	lfsr	0,__pbssBANK1
   599  00183A  0EB8               	movlw	184
   600  00183C                     clear_0:
   601  00183C  6AEE               	clrf	postinc0,c
   602  00183E  06E8               	decf	wreg,f,c
   603  001840  E1FD               	bnz	clear_0
   604                           
   605                           ; Clear objects allocated to BANK0 (50 bytes)
   606  001842  EE00  F080         	lfsr	0,__pbssBANK0
   607  001846  0E32               	movlw	50
   608  001848                     clear_1:
   609  001848  6AEE               	clrf	postinc0,c
   610  00184A  06E8               	decf	wreg,f,c
   611  00184C  E1FD               	bnz	clear_1
   612                           
   613                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   614  00184E  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   615  001850  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   616  001852  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   617                           
   618                           ; Clear objects allocated to COMRAM (68 bytes)
   619  001854  EE00  F001         	lfsr	0,__pbssCOMRAM
   620  001858  0E44               	movlw	68
   621  00185A                     clear_2:
   622  00185A  6AEE               	clrf	postinc0,c
   623  00185C  06E8               	decf	wreg,f,c
   624  00185E  E1FD               	bnz	clear_2
   625  001860                     end_of_initialization:
   626                           	callstack 0
   627  001860                     __end_of__initialization:
   628                           	callstack 0
   629  001860  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   630  001862  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   631  001864  0E00               	movlw	low (__Lmediumconst shr (0+16))
   632  001866  6EF8               	movwf	tblptru,c
   633  001868  0100               	movlb	0
   634  00186A  EF37  F00C         	goto	_main	;jump to C main() function
   635                           
   636                           	psect	bitbssCOMRAM
   637  0003B8                     __pbitbssCOMRAM:
   638                           	callstack 0
   639  0003B8                     _Krebut:
   640                           	callstack 0
   641  0003B8                     	ds	1
   642  0003B9                     _jugantSIO:
   643                           	callstack 0
   644  0003B9                     	ds	1
   645  0003BA                     _jugantJoc:
   646                           	callstack 0
   647  0003BA                     	ds	1
   648  0003BB                     _tempsAcabat:
   649                           	callstack 0
   650  0003BB                     	ds	1
   651  0003BC                     _nouSegon:
   652                           	callstack 0
   653  0003BC                     	ds	1
   654  0003BD                     _jugant:
   655                           	callstack 0
   656  0003BD                     	ds	1
   657  0003BE                     _cap2:
   658                           	callstack 0
   659  0003BE                     	ds	1
   660  0003BF                     _cap1:
   661                           	callstack 0
   662  0003BF                     	ds	1
   663  0003C0                     _newString:
   664                           	callstack 0
   665  0003C0                     	ds	1
   666  0003C1                     _ferMenu:
   667                           	callstack 0
   668  0003C1                     	ds	1
   669  0003C2                     _reproduir:
   670                           	callstack 0
   671  0003C2                     	ds	1
   672  0003C3                     _do_updateScores:
   673                           	callstack 0
   674  0003C3                     	ds	1
   675  0003C4                     _do_showUsers:
   676                           	callstack 0
   677  0003C4                     	ds	1
   678  0003C5                     _do_register:
   679                           	callstack 0
   680  0003C5                     	ds	1
   681  0003C6                     _do_check_exists:
   682                           	callstack 0
   683  0003C6                     	ds	1
   684  0003C7                     _loginNOTRegister:
   685                           	callstack 0
   686  0003C7                     	ds	1
   687  0003C8                     _setSMSon:
   688                           	callstack 0
   689  0003C8                     	ds	1
   690  0003C9                     _nou_s:
   691                           	callstack 0
   692  0003C9                     	ds	1
   693                           
   694                           	psect	bssCOMRAM
   695  000001                     __pbssCOMRAM:
   696                           	callstack 0
   697  000001                     _puntuacions:
   698                           	callstack 0
   699  000001                     	ds	10
   700  00000B                     _userPtr:
   701                           	callstack 0
   702  00000B                     	ds	2
   703  00000D                     _h_Tics:
   704                           	callstack 0
   705  00000D                     	ds	2
   706  00000F                     _s_ptr:
   707                           	callstack 0
   708  00000F                     	ds	2
   709  000011                     motorSIO@state:
   710                           	callstack 0
   711  000011                     	ds	1
   712  000012                     _score:
   713                           	callstack 0
   714  000012                     	ds	1
   715  000013                     _timerSIO:
   716                           	callstack 0
   717  000013                     	ds	1
   718  000014                     motorJoc@state:
   719                           	callstack 0
   720  000014                     	ds	1
   721  000015                     _direccioJoc:
   722                           	callstack 0
   723  000015                     	ds	1
   724  000016                     motorHora@state:
   725                           	callstack 0
   726  000016                     	ds	1
   727  000017                     _segons:
   728                           	callstack 0
   729  000017                     	ds	1
   730  000018                     _timerHora:
   731                           	callstack 0
   732  000018                     	ds	1
   733  000019                     JoystickMotor@state:
   734                           	callstack 0
   735  000019                     	ds	1
   736  00001A                     _ultimaTeclaAD:
   737                           	callstack 0
   738  00001A                     	ds	1
   739  00001B                     GLCDMotor@length2:
   740                           	callstack 0
   741  00001B                     	ds	1
   742  00001C                     GLCDMotor@length1:
   743                           	callstack 0
   744  00001C                     	ds	1
   745  00001D                     GLCDMotor@k2:
   746                           	callstack 0
   747  00001D                     	ds	1
   748  00001E                     GLCDMotor@k1:
   749                           	callstack 0
   750  00001E                     	ds	1
   751  00001F                     GLCDMotor@min2:
   752                           	callstack 0
   753  00001F                     	ds	1
   754  000020                     GLCDMotor@min1:
   755                           	callstack 0
   756  000020                     	ds	1
   757  000021                     GLCDMotor@j:
   758                           	callstack 0
   759  000021                     	ds	1
   760  000022                     GLCDMotor@state:
   761                           	callstack 0
   762  000022                     	ds	1
   763  000023                     _menuDaltGLCD:
   764                           	callstack 0
   765  000023                     	ds	1
   766  000024                     _timerGLCD:
   767                           	callstack 0
   768  000024                     	ds	1
   769  000025                     motorAltaveu@state:
   770                           	callstack 0
   771  000025                     	ds	1
   772  000026                     _copsNota:
   773                           	callstack 0
   774  000026                     	ds	1
   775  000027                     _timerAltaveu:
   776                           	callstack 0
   777  000027                     	ds	1
   778  000028                     _nota:
   779                           	callstack 0
   780  000028                     	ds	1
   781  000029                     UmotorUsers@state:
   782                           	callstack 0
   783  000029                     	ds	1
   784  00002A                     _j:
   785                           	callstack 0
   786  00002A                     	ds	1
   787  00002B                     _i:
   788                           	callstack 0
   789  00002B                     	ds	1
   790  00002C                     _indexNextUserStruct:
   791                           	callstack 0
   792  00002C                     	ds	1
   793  00002D                     _indexNextUser:
   794                           	callstack 0
   795  00002D                     	ds	1
   796  00002E                     _numUsuaris:
   797                           	callstack 0
   798  00002E                     	ds	1
   799  00002F                     menu@state:
   800                           	callstack 0
   801  00002F                     	ds	1
   802  000030                     _pos:
   803                           	callstack 0
   804  000030                     	ds	1
   805  000031                     _indexUsuari:
   806                           	callstack 0
   807  000031                     	ds	1
   808  000032                     _menuDalt:
   809                           	callstack 0
   810  000032                     	ds	1
   811  000033                     _timerMenu:
   812                           	callstack 0
   813  000033                     	ds	1
   814  000034                     _tmp:
   815                           	callstack 0
   816  000034                     	ds	1
   817  000035                     _counter:
   818                           	callstack 0
   819  000035                     	ds	1
   820  000036                     TeTeclat@files:
   821                           	callstack 0
   822  000036                     	ds	1
   823  000037                     TeTeclat@cols:
   824                           	callstack 0
   825  000037                     	ds	1
   826  000038                     TeTeclat@state:
   827                           	callstack 0
   828  000038                     	ds	1
   829  000039                     _tiTeclat:
   830                           	callstack 0
   831  000039                     	ds	1
   832  00003A                     SMotor@state:
   833                           	callstack 0
   834  00003A                     	ds	1
   835  00003B                     _zeroTecla:
   836                           	callstack 0
   837  00003B                     	ds	1
   838  00003C                     _sumaPulsacions:
   839                           	callstack 0
   840  00003C                     	ds	1
   841  00003D                     _Timer:
   842                           	callstack 0
   843  00003D                     	ds	1
   844  00003E                     _ColumnAct:
   845                           	callstack 0
   846  00003E                     	ds	1
   847  00003F                     _RowAct:
   848                           	callstack 0
   849  00003F                     	ds	1
   850  000040                     _Rows:
   851                           	callstack 0
   852  000040                     	ds	1
   853  000041                     _horaTmp:
   854                           	callstack 0
   855  000041                     	ds	4
   856                           
   857                           	psect	dataCOMRAM
   858  000045                     __pdataCOMRAM:
   859                           	callstack 0
   860  000045                     _arrayZero:
   861                           	callstack 0
   862  000045                     	ds	3
   863  000048                     _convertir:
   864                           	callstack 0
   865  000048                     	ds	1
   866  000049                     _novaTeclaSIO:
   867                           	callstack 0
   868  000049                     	ds	1
   869  00004A                     _direccioSIO:
   870                           	callstack 0
   871  00004A                     	ds	1
   872  00004B                     _usuariActualSIO:
   873                           	callstack 0
   874  00004B                     	ds	1
   875  00004C                     _novaTeclaJOC:
   876                           	callstack 0
   877  00004C                     	ds	1
   878  00004D                     _usuariJoc:
   879                           	callstack 0
   880  00004D                     	ds	1
   881  00004E                     GLCDMotor@max2:
   882                           	callstack 0
   883  00004E                     	ds	1
   884  00004F                     GLCDMotor@max1:
   885                           	callstack 0
   886  00004F                     	ds	1
   887  000050                     _usuariLoguejat:
   888                           	callstack 0
   889  000050                     	ds	1
   890  000051                     _novaDireccio:
   891                           	callstack 0
   892  000051                     	ds	1
   893  000052                     _novaLletra:
   894                           	callstack 0
   895  000052                     	ds	1
   896  000053                     _NovaTecla:
   897                           	callstack 0
   898  000053                     	ds	1
   899  000054                     _ultimaTecla:
   900                           	callstack 0
   901  000054                     	ds	1
   902  000055                     _timerSMS:
   903                           	callstack 0
   904  000055                     	ds	1
   905  000056                     _novaTecla:
   906                           	callstack 0
   907  000056                     	ds	1
   908  000057                     _lletraASCII:
   909                           	callstack 0
   910  000057                     	ds	1
   911  000058                     _hora:
   912                           	callstack 0
   913  000058                     	ds	6
   914  00005E                     _stringScore:
   915                           	callstack 0
   916  00005E                     	ds	3
   917                           
   918                           	psect	bssBANK0
   919  000080                     __pbssBANK0:
   920                           	callstack 0
   921  000080                     _s_Timers:
   922                           	callstack 0
   923  000080                     	ds	24
   924  000098                     _tmpPassword:
   925                           	callstack 0
   926  000098                     	ds	9
   927  0000A1                     _arrayShowUsers:
   928                           	callstack 0
   929  0000A1                     	ds	8
   930  0000A9                     _tmpUsername:
   931                           	callstack 0
   932  0000A9                     	ds	9
   933                           
   934                           	psect	dataBANK0
   935  0000B2                     __pdataBANK0:
   936                           	callstack 0
   937  0000B2                     _lletraInici:
   938                           	callstack 0
   939  0000B2                     	ds	9
   940  0000BB                     _teclaPremuda:
   941                           	callstack 0
   942  0000BB                     	ds	12
   943                           
   944                           	psect	bssBANK1
   945  000100                     __pbssBANK1:
   946                           	callstack 0
   947  000100                     _usuaris:
   948                           	callstack 0
   949  000100                     	ds	184
   950                           
   951                           	psect	cstackBANK0
   952  0000C7                     __pcstackBANK0:
   953                           	callstack 0
   954  0000C7                     ??_menu:
   955                           
   956                           ; 1 bytes @ 0x0
   957  0000C7                     	ds	5
   958                           
   959                           	psect	cstackCOMRAM
   960  000061                     __pcstackCOMRAM:
   961                           	callstack 0
   962  000061                     
   963                           ; 1 bytes @ 0x0
   964  000061                     	ds	1
   965  000062                     ??_high_rsi:
   966                           
   967                           ; 1 bytes @ 0x1
   968  000062                     	ds	4
   969  000066                     ??_EscriuPrimeraOrdre:
   970  000066                     ??_Uinit:
   971  000066                     ??_CantaPartAlta:
   972  000066                     ??_CantaPartBaixa:
   973  000066                     ?_TiGetTics:
   974                           	callstack 0
   975  000066                     ?_UgetUserName:
   976                           	callstack 0
   977  000066                     ?_getArrayShowUsers:
   978                           	callstack 0
   979  000066                     SsetNovaTecla@tecla:
   980                           	callstack 0
   981  000066                     TiResetTics@Handle:
   982                           	callstack 0
   983  000066                     MsetNovaTecla@tecla:
   984                           	callstack 0
   985  000066                     MNovaLletra@lletra:
   986                           	callstack 0
   987  000066                     MNouJoystick@posicio:
   988                           	callstack 0
   989  000066                     UenviaChar@pos:
   990                           	callstack 0
   991  000066                     UenviaPas@pos:
   992                           	callstack 0
   993  000066                     escriureCharEEPROM@pos:
   994                           	callstack 0
   995  000066                     compareStrings@a:
   996                           	callstack 0
   997  000066                     UgetScore@quin:
   998                           	callstack 0
   999  000066                     UgetTop5@quin:
  1000                           	callstack 0
  1001  000066                     UnewScore@score:
  1002                           	callstack 0
  1003  000066                     escriureEEPROM@caca:
  1004                           	callstack 0
  1005  000066                     GLCDMostraMenu@num:
  1006                           	callstack 0
  1007  000066                     HActualitzaHora@nova:
  1008                           	callstack 0
  1009  000066                     JJuguem@usuari:
  1010                           	callstack 0
  1011  000066                     JnovaTecla@tecla:
  1012                           	callstack 0
  1013  000066                     JnovaDireccio@dir:
  1014                           	callstack 0
  1015  000066                     conversorJoystick@direc:
  1016                           	callstack 0
  1017  000066                     SIONovaDireccio@num:
  1018                           	callstack 0
  1019  000066                     SIOStartGame@usuari:
  1020                           	callstack 0
  1021  000066                     SIONovaTecla@tecla:
  1022                           	callstack 0
  1023  000066                     CToAConverteix@numero:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  000066                     	ds	1
  1028  000067                     ??_JoystickMotor:
  1029  000067                     CantaPartAlta@c:
  1030                           	callstack 0
  1031  000067                     CantaPartBaixa@c:
  1032                           	callstack 0
  1033  000067                     EscriuPrimeraOrdre@ordre:
  1034                           	callstack 0
  1035  000067                     UenviaChar@c:
  1036                           	callstack 0
  1037  000067                     UenviaPas@c:
  1038                           	callstack 0
  1039  000067                     escriureCharEEPROM@c:
  1040                           	callstack 0
  1041  000067                     compareStrings@b:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x6
  1045  000067                     	ds	1
  1046  000068                     ??_TiGetTics:
  1047  000068                     CantaIR@IR:
  1048                           	callstack 0
  1049  000068                     CantaData@Data:
  1050                           	callstack 0
  1051  000068                     UgetUserName@quin:
  1052                           	callstack 0
  1053  000068                     getArrayShowUsers@quin:
  1054                           	callstack 0
  1055  000068                     Uinit@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x7
  1059  000068                     	ds	1
  1060  000069                     ??_compareStrings:
  1061  000069                     Uinit@j:
  1062                           	callstack 0
  1063  000069                     LcNewString@new_s:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x8
  1067  000069                     	ds	1
  1068  00006A                     TiGetTics@Handle:
  1069                           	callstack 0
  1070  00006A                     Uinit@j_1187:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x9
  1074  00006A                     	ds	1
  1075  00006B                     ??_UmotorUsers:
  1076  00006B                     TiGetTics@actual:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0xA
  1080  00006B                     	ds	2
  1081  00006D                     ??_SMotor:
  1082  00006D                     ??_motorHora:
  1083  00006D                     ??_motorAltaveu:
  1084  00006D                     ??_TeTeclat:
  1085  00006D                     WaitForBusy@Busy:
  1086                           	callstack 0
  1087  00006D                     Espera@ms:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0xC
  1091  00006D                     	ds	1
  1092  00006E                     LcGotoXY@Row:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0xD
  1096  00006E                     	ds	1
  1097  00006F                     ??_Espera:
  1098  00006F                     LcGotoXY@Fisics:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xE
  1102  00006F                     	ds	1
  1103  000070                     Espera@Timer:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0xF
  1107  000070                     	ds	1
  1108  000071                     LcInit@columns:
  1109                           	callstack 0
  1110  000071                     _LcGotoXY$336:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x10
  1114  000071                     	ds	1
  1115  000072                     LcInit@rows:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x11
  1119  000072                     	ds	1
  1120  000073                     LcGotoXY@Column:
  1121                           	callstack 0
  1122  000073                     LcInit@i:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x12
  1126  000073                     	ds	1
  1127  000074                     ??_motorJoc:
  1128  000074                     LcPutChar@c:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x13
  1132  000074                     	ds	1
  1133  000075                     ??_motorSIO:
  1134  000075                     ??_GLCDMotor:
  1135  000075                     
  1136                           ; 1 bytes @ 0x14
  1137  000075                     	ds	2
  1138  000077                     
  1139                           ; 1 bytes @ 0x16
  1140 ;;
  1141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1142 ;;
  1143 ;; *************** function _main *****************
  1144 ;; Defined at:
  1145 ;;		line 77 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1
  1159 ;;      Params:         0       0       0
  1160 ;;      Locals:         0       0       0
  1161 ;;      Temps:          0       0       0
  1162 ;;      Totals:         0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels required when called: 7
  1165 ;; This function calls:
  1166 ;;		_CtoA
  1167 ;;		_GLCDInit
  1168 ;;		_GLCDMotor
  1169 ;;		_JoystickInit
  1170 ;;		_JoystickMotor
  1171 ;;		_LcInit
  1172 ;;		_LcLCD
  1173 ;;		_Minit
  1174 ;;		_SMotor
  1175 ;;		_Sinit
  1176 ;;		_TeInit
  1177 ;;		_TeTeclat
  1178 ;;		_TiInitTimer
  1179 ;;		_Uinit
  1180 ;;		_UmotorUsers
  1181 ;;		_escriure2usuarisStruct
  1182 ;;		_escriureEEPROM
  1183 ;;		_initAltaveu
  1184 ;;		_initHora
  1185 ;;		_initSIO
  1186 ;;		_init_eusart
  1187 ;;		_init_ports
  1188 ;;		_menu
  1189 ;;		_motorAltaveu
  1190 ;;		_motorHora
  1191 ;;		_motorJoc
  1192 ;;		_motorSIO
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text0
  1199  00186E                     __ptext0:
  1200                           	callstack 0
  1201  00186E                     _main:
  1202                           	callstack 24
  1203                           
  1204                           ;main.c: 78:     init_ports();
  1205                           
  1206                           ;incstack = 0
  1207  00186E  ECC7  F00E         	call	_init_ports	;wreg free
  1208                           
  1209                           ;main.c: 79:     escriureEEPROM();
  1210  001872  EC34  F00E         	call	_escriureEEPROM	;wreg free
  1211                           
  1212                           ;main.c: 80:     init_eusart();
  1213  001876  EC0E  F00F         	call	_init_eusart	;wreg free
  1214                           
  1215                           ;main.c: 81:     TiInitTimer();
  1216  00187A  EC48  F00E         	call	_TiInitTimer	;wreg free
  1217                           
  1218                           ;main.c: 82:     TeInit();
  1219  00187E  ECBE  F00F         	call	_TeInit	;wreg free
  1220                           
  1221                           ;main.c: 83:     Sinit();
  1222  001882  ECC2  F00F         	call	_Sinit	;wreg free
  1223                           
  1224                           ;main.c: 84:     SMotor();
  1225  001886  EC5C  F008         	call	_SMotor	;wreg free
  1226                           
  1227                           ;main.c: 85:     Uinit();
  1228  00188A  ECE5  F00A         	call	_Uinit	;wreg free
  1229                           
  1230                           ;main.c: 86:     initAltaveu();
  1231  00188E  ECB2  F00F         	call	_initAltaveu	;wreg free
  1232                           
  1233                           ;main.c: 87:     GLCDInit();
  1234  001892  ECD2  F00F         	call	_GLCDInit	;wreg free
  1235                           
  1236                           ;main.c: 88:     JoystickInit();
  1237  001896  EC38  F00F         	call	_JoystickInit	;wreg free
  1238                           
  1239                           ;main.c: 89:     initHora();
  1240  00189A  ECAE  F00F         	call	_initHora	;wreg free
  1241                           
  1242                           ;main.c: 90:     initSIO();
  1243  00189E  ECAA  F00F         	call	_initSIO	;wreg free
  1244                           
  1245                           ;main.c: 92:     LcInit(2,16);
  1246  0018A2  0E10               	movlw	16
  1247  0018A4  6E71               	movwf	LcInit@columns^0,c
  1248  0018A6  0E02               	movlw	2
  1249  0018A8  EC32  F00A         	call	_LcInit
  1250                           
  1251                           ;main.c: 93:     Minit();
  1252  0018AC  ECCA  F00F         	call	_Minit	;wreg free
  1253                           
  1254                           ;main.c: 95:     escriure2usuarisStruct();
  1255  0018B0  ECD9  F00C         	call	_escriure2usuarisStruct	;wreg free
  1256  0018B4                     l6962:
  1257                           
  1258                           ;main.c: 98:         motorJoc();
  1259  0018B4  EC91  F00A         	call	_motorJoc	;wreg free
  1260                           
  1261                           ;main.c: 99:         motorSIO();
  1262  0018B8  EC90  F006         	call	_motorSIO	;wreg free
  1263                           
  1264                           ;main.c: 100:         motorHora();
  1265  0018BC  EC7B  F00B         	call	_motorHora	;wreg free
  1266                           
  1267                           ;main.c: 101:         JoystickMotor();
  1268  0018C0  ECC7  F009         	call	_JoystickMotor	;wreg free
  1269                           
  1270                           ;main.c: 102:         menu();
  1271  0018C4  EC7B  F001         	call	_menu	;wreg free
  1272                           
  1273                           ;main.c: 104:         CtoA();
  1274  0018C8  EC93  F00E         	call	_CtoA	;wreg free
  1275                           
  1276                           ;main.c: 105:         motorAltaveu();
  1277  0018CC  EC31  F00B         	call	_motorAltaveu	;wreg free
  1278                           
  1279                           ;main.c: 106:         UmotorUsers();
  1280  0018D0  EC81  F007         	call	_UmotorUsers	;wreg free
  1281                           
  1282                           ;main.c: 107:         GLCDMotor();
  1283  0018D4  EC44  F005         	call	_GLCDMotor	;wreg free
  1284                           
  1285                           ;main.c: 108:         TeTeclat();
  1286  0018D8  EC33  F009         	call	_TeTeclat	;wreg free
  1287                           
  1288                           ;main.c: 109:         SMotor();
  1289  0018DC  EC5C  F008         	call	_SMotor	;wreg free
  1290                           
  1291                           ;main.c: 110:         LcLCD();
  1292  0018E0  EC01  F00D         	call	_LcLCD	;wreg free
  1293  0018E4  D7E7               	goto	l6962
  1294  0018E6                     __end_of_main:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _motorSIO *****************
  1298 ;; Defined at:
  1299 ;;		line 42 in file "SIO.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/1
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1
  1313 ;;      Params:         0       0       0
  1314 ;;      Locals:         0       0       0
  1315 ;;      Temps:          2       0       0
  1316 ;;      Totals:         2       0       0
  1317 ;;Total ram usage:        2 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 6
  1320 ;; This function calls:
  1321 ;;		_CToAConverteix
  1322 ;;		_CToAHaAcabat
  1323 ;;		_CToAobtenir
  1324 ;;		_HGetTime
  1325 ;;		_LcClear
  1326 ;;		_LcGotoXY
  1327 ;;		_LcLliure
  1328 ;;		_LcNewString
  1329 ;;		_LcPutChar
  1330 ;;		_TiGetTics
  1331 ;;		_TiResetTics
  1332 ;;		_UgetUserName
  1333 ;;		_UnewScore
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text1
  1340  000D20                     __ptext1:
  1341                           	callstack 0
  1342  000D20                     _motorSIO:
  1343                           	callstack 24
  1344                           
  1345                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1346                           
  1347                           ;incstack = 0
  1348  000D20  D0C5               	goto	l5060
  1349  000D22                     l4940:
  1350                           
  1351                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1352  000D22  BE4B               	btfsc	_usuariActualSIO^0,7,c
  1353  000D24  0012               	return	
  1354                           
  1355                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1356  000D26  504B               	movf	_usuariActualSIO^0,w,c
  1357  000D28  EC24  F00F         	call	_UgetUserName
  1358  000D2C  C066  F00B         	movff	?_UgetUserName,_userPtr
  1359  000D30  C067  F00C         	movff	?_UgetUserName+1,_userPtr+1
  1360                           
  1361                           ;SIO.c: 49:     jugantSIO = 1;
  1362  000D34  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1363                           
  1364                           ;SIO.c: 50:     Krebut = 0;
  1365  000D36  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1366                           
  1367                           ;SIO.c: 51:     state = 1;
  1368  000D38  0E01               	movlw	1
  1369  000D3A  6E11               	movwf	motorSIO@state^0,c
  1370  000D3C  0C01               	retlw	1
  1371  000D3E                     l4950:
  1372                           
  1373                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1374  000D3E  D8D6               	call	PL24	;call to abstracted procedure
  1375  000D40  E108               	bnz	l4958
  1376  000D42  A2AC               	btfss	172,1,c	;volatile
  1377  000D44  D006               	goto	l4958
  1378                           
  1379                           ;SIO.c: 56:     TXREG = '\0';
  1380  000D46  6AAD               	clrf	173,c	;volatile
  1381                           
  1382                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1383  000D48  6A49               	clrf	_novaTeclaSIO^0,c
  1384                           
  1385                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1386  000D4A  868A               	bsf	138,3,c	;volatile
  1387                           
  1388                           ;SIO.c: 59:     state = 2;
  1389  000D4C  0E02               	movlw	2
  1390  000D4E  6E11               	movwf	motorSIO@state^0,c
  1391                           
  1392                           ;SIO.c: 60:    }
  1393  000D50  0C02               	retlw	2
  1394  000D52                     l4958:
  1395  000D52  D8CC               	call	PL24	;call to abstracted procedure
  1396  000D54  A4D8               	btfss	status,2,c
  1397  000D56  A2AC               	btfss	172,1,c	;volatile
  1398  000D58  0012               	return	
  1399                           
  1400                           ;SIO.c: 62:     TXREG = *userPtr;
  1401  000D5A  D8C8               	call	PL24	;call to abstracted procedure
  1402  000D5C  6EAD               	movwf	173,c	;volatile
  1403                           
  1404                           ;SIO.c: 63:     userPtr++;
  1405  000D5E  4A0B               	infsnz	_userPtr^0,f,c
  1406  000D60  2A0C               	incf	(_userPtr+1)^0,f,c
  1407  000D62  0012               	return	
  1408  000D64                     l4966:
  1409                           
  1410                           ;SIO.c: 67:    if (RCREG == 'K') {
  1411  000D64  0E4B               	movlw	75
  1412  000D66  18AE               	xorwf	174,w,c
  1413  000D68  A4D8               	btfss	status,2,c
  1414  000D6A  0012               	return	
  1415                           
  1416                           ;SIO.c: 68:     Krebut = 1;
  1417  000D6C  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1418  000D6E                     l4970:
  1419                           
  1420                           ;SIO.c: 69:     state = 3;
  1421  000D6E  0E03               	movlw	3
  1422  000D70  6E11               	movwf	motorSIO@state^0,c
  1423  000D72  0C03               	retlw	3
  1424  000D74                     l4972:
  1425                           
  1426                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1427  000D74  284A               	incf	_direccioSIO^0,w,c
  1428  000D76  E006               	bz	l4980
  1429  000D78  A2AC               	btfss	172,1,c	;volatile
  1430  000D7A  D004               	goto	l4980
  1431                           
  1432                           ;SIO.c: 74:     TXREG = direccioSIO;
  1433  000D7C  C04A  FFAD         	movff	_direccioSIO,4013	;volatile
  1434                           
  1435                           ;SIO.c: 75:     direccioSIO = -1;
  1436  000D80  684A               	setf	_direccioSIO^0,c
  1437  000D82  D7F5               	goto	l4970
  1438  000D84                     l4980:
  1439  000D84  0E30               	movlw	48
  1440  000D86  6449               	cpfsgt	_novaTeclaSIO^0,c
  1441  000D88  D009               	goto	l1284
  1442  000D8A  0E3A               	movlw	58
  1443  000D8C  6049               	cpfslt	_novaTeclaSIO^0,c
  1444  000D8E  D006               	goto	l1284
  1445  000D90  A2AC               	btfss	172,1,c	;volatile
  1446  000D92  D004               	goto	l1284
  1447                           
  1448                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1449  000D94  C049  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1450                           
  1451                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1452  000D98  6A49               	clrf	_novaTeclaSIO^0,c
  1453  000D9A  D7E9               	goto	l4970
  1454  000D9C                     l1284:
  1455  000D9C  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1456  000D9E  D002               	goto	u4450
  1457  000DA0  B2AC               	btfsc	172,1,c	;volatile
  1458  000DA2  D002               	goto	u4460
  1459  000DA4                     u4450:
  1460  000DA4  AA9E               	btfss	158,5,c	;volatile
  1461  000DA6  0012               	return	
  1462  000DA8                     u4460:
  1463                           
  1464                           ;SIO.c: 84:     LcClear();
  1465  000DA8  ECA5  F00E         	call	_LcClear	;wreg free
  1466                           
  1467                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1468  000DAC  0ED7               	movlw	low STR_8
  1469  000DAE  EC1D  F005         	call	PL6	;call to abstracted procedure
  1470  000DB2  EC82  F00F         	call	_LcNewString	;wreg free
  1471                           
  1472                           ;SIO.c: 86:     TXREG = 'F';
  1473  000DB6  0E46               	movlw	70
  1474  000DB8  6EAD               	movwf	173,c	;volatile
  1475                           
  1476                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1477  000DBA  6A49               	clrf	_novaTeclaSIO^0,c
  1478                           
  1479                           ;SIO.c: 88:     state = 4;
  1480  000DBC  0E04               	movlw	4
  1481  000DBE  6E11               	movwf	motorSIO@state^0,c
  1482  000DC0  0C04               	retlw	4
  1483  000DC2                     l1291:
  1484                           
  1485                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1486  000DC2  AA9E               	btfss	158,5,c	;volatile
  1487  000DC4  0012               	return	
  1488                           
  1489                           ;SIO.c: 93:                 score = RCREG;
  1490  000DC6  CFAE F012          	movff	4014,_score	;volatile
  1491                           
  1492                           ;SIO.c: 94:                 UnewScore(score);
  1493  000DCA  5012               	movf	_score^0,w,c
  1494  000DCC  EC71  F00D         	call	_UnewScore
  1495                           
  1496                           ;SIO.c: 95:     CToAConverteix(score);
  1497  000DD0  5012               	movf	_score^0,w,c
  1498  000DD2  EC7C  F00F         	call	_CToAConverteix
  1499                           
  1500                           ;SIO.c: 96:     TiResetTics(timerSIO);
  1501  000DD6  5013               	movf	_timerSIO^0,w,c
  1502  000DD8  EC00  F00F         	call	_TiResetTics
  1503  000DDC                     l5010:
  1504                           
  1505                           ;SIO.c: 97:     state = 5;
  1506  000DDC  0E05               	movlw	5
  1507  000DDE  6E11               	movwf	motorSIO@state^0,c
  1508  000DE0  0C05               	retlw	5
  1509  000DE2                     l5012:
  1510                           
  1511                           ;SIO.c: 101:    if (TiGetTics(timerSIO) > 2490) {
  1512  000DE2  5013               	movf	_timerSIO^0,w,c
  1513  000DE4  EC5C  F00E         	call	_TiGetTics
  1514  000DE8  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  1515  000DEA  D00F               	goto	l5020
  1516  000DEC  0EBB               	movlw	187
  1517  000DEE  5C66               	subwf	?_TiGetTics^0,w,c
  1518  000DF0  0E09               	movlw	9
  1519  000DF2  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  1520  000DF4  E30A               	bnc	l5020
  1521                           
  1522                           ;SIO.c: 102:     LcClear();
  1523  000DF6  ECA5  F00E         	call	_LcClear	;wreg free
  1524                           
  1525                           ;SIO.c: 103:     LcNewString("TIME LEFT: ");
  1526  000DFA  0EAF               	movlw	low STR_9
  1527  000DFC  EC1D  F005         	call	PL6	;call to abstracted procedure
  1528  000E00  EC82  F00F         	call	_LcNewString	;wreg free
  1529                           
  1530                           ;SIO.c: 104:     state = 7;
  1531  000E04  0E07               	movlw	7
  1532  000E06  6E11               	movwf	motorSIO@state^0,c
  1533                           
  1534                           ;SIO.c: 105:    }
  1535  000E08  0C07               	retlw	7
  1536  000E0A                     l5020:
  1537  000E0A  5013               	movf	_timerSIO^0,w,c
  1538  000E0C  EC5C  F00E         	call	_TiGetTics
  1539  000E10  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  1540  000E12  D006               	goto	u4490
  1541  000E14  0EBA               	movlw	186
  1542  000E16  5C66               	subwf	?_TiGetTics^0,w,c
  1543  000E18  0E09               	movlw	9
  1544  000E1A  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  1545  000E1C  B0D8               	btfsc	status,0,c
  1546  000E1E  0012               	return	
  1547  000E20                     u4490:
  1548  000E20  AA9E               	btfss	158,5,c	;volatile
  1549  000E22  0012               	return	
  1550  000E24  EC88  F00F         	call	_LcLliure	;wreg free
  1551  000E28  A0D8               	btfss	status,0,c
  1552  000E2A  0012               	return	
  1553                           
  1554                           ;SIO.c: 107:     LcGotoXY(0,1);
  1555  000E2C  EC28  F005         	call	PL32	;call to abstracted procedure
  1556  000E30  EC04  F00E         	call	_LcGotoXY
  1557                           
  1558                           ;SIO.c: 108:     LcPutChar(RCREG);
  1559  000E34  50AE               	movf	174,w,c	;volatile
  1560  000E36  EC29  F00D         	call	_LcPutChar
  1561                           
  1562                           ;SIO.c: 109:     state = 6;
  1563  000E3A  0E06               	movlw	6
  1564  000E3C  6E11               	movwf	motorSIO@state^0,c
  1565  000E3E  0C06               	retlw	6
  1566  000E40                     l5030:
  1567                           
  1568                           ;SIO.c: 113:    if (LcLliure()) {
  1569  000E40  EC88  F00F         	call	_LcLliure	;wreg free
  1570  000E44  A0D8               	btfss	status,0,c
  1571  000E46  0012               	return	
  1572                           
  1573                           ;SIO.c: 114:     LcNewString(HGetTime());
  1574  000E48  ECE6  F00F         	call	_HGetTime	;wreg free
  1575  000E4C  D855               	call	PL50	;call to abstracted procedure
  1576  000E4E  EC82  F00F         	call	_LcNewString	;wreg free
  1577                           
  1578                           ;SIO.c: 115:     state = 8;
  1579  000E52  0E08               	movlw	8
  1580  000E54  6E11               	movwf	motorSIO@state^0,c
  1581  000E56  0C08               	retlw	8
  1582  000E58                     l1299:
  1583                           
  1584                           ;SIO.c: 119:    if (PIR1bits.RCIF) {
  1585  000E58  AA9E               	btfss	158,5,c	;volatile
  1586  000E5A  0012               	return	
  1587                           
  1588                           ;SIO.c: 120:     LcPutChar(RCREG);
  1589  000E5C  50AE               	movf	174,w,c	;volatile
  1590  000E5E  EC29  F00D         	call	_LcPutChar
  1591                           
  1592                           ;SIO.c: 121:                 TiResetTics(timerSIO);
  1593  000E62  5013               	movf	_timerSIO^0,w,c
  1594  000E64  EC00  F00F         	call	_TiResetTics
  1595  000E68  D7B9               	goto	l5010
  1596  000E6A                     l5040:
  1597                           
  1598                           ;SIO.c: 126:    if (LcLliure()) {
  1599  000E6A  EC88  F00F         	call	_LcLliure	;wreg free
  1600  000E6E  A0D8               	btfss	status,0,c
  1601  000E70  0012               	return	
  1602                           
  1603                           ;SIO.c: 127:     LcGotoXY(0,1);
  1604  000E72  EC28  F005         	call	PL32	;call to abstracted procedure
  1605  000E76  EC04  F00E         	call	_LcGotoXY
  1606                           
  1607                           ;SIO.c: 128:     LcNewString("SCORE: ");
  1608  000E7A  0ECF               	movlw	low STR_10
  1609  000E7C  EC1D  F005         	call	PL6	;call to abstracted procedure
  1610  000E80  EC82  F00F         	call	_LcNewString	;wreg free
  1611                           
  1612                           ;SIO.c: 129:     state = 9;
  1613  000E84  0E09               	movlw	9
  1614  000E86  6E11               	movwf	motorSIO@state^0,c
  1615  000E88  0C09               	retlw	9
  1616  000E8A                     l5048:
  1617                           
  1618                           ;SIO.c: 133:    if (LcLliure() && CToAHaAcabat() == 250) {
  1619  000E8A  EC88  F00F         	call	_LcLliure	;wreg free
  1620  000E8E  A0D8               	btfss	status,0,c
  1621  000E90  0012               	return	
  1622  000E92  EC1B  F000         	call	_CToAHaAcabat	;wreg free
  1623  000E96  0AFA               	xorlw	250
  1624  000E98  A4D8               	btfss	status,2,c
  1625  000E9A  0012               	return	
  1626                           
  1627                           ;SIO.c: 134:     LcNewString(CToAobtenir());
  1628  000E9C  ECFE  F00F         	call	_CToAobtenir	;wreg free
  1629  000EA0  D82B               	call	PL50	;call to abstracted procedure
  1630  000EA2  EC82  F00F         	call	_LcNewString	;wreg free
  1631                           
  1632                           ;SIO.c: 135:     usuariActualSIO = -1;
  1633  000EA6  684B               	setf	_usuariActualSIO^0,c
  1634                           
  1635                           ;SIO.c: 136:     state = 0;
  1636  000EA8  6A11               	clrf	motorSIO@state^0,c
  1637  000EAA  0012               	return	
  1638  000EAC                     l5060:
  1639  000EAC  5011               	movf	motorSIO@state^0,w,c
  1640  000EAE  6E75               	movwf	??_motorSIO^0,c
  1641  000EB0  6A76               	clrf	(??_motorSIO+1)^0,c
  1642                           
  1643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1644                           ; Switch size 1, requested type "space"
  1645                           ; Number of cases is 1, Range of values is 0 to 0
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte            4     3 (average)
  1649                           ;	Chosen strategy is simple_byte
  1650  000EB2  5076               	movf	(??_motorSIO+1)^0,w,c
  1651  000EB4  A4D8               	btfss	status,2,c
  1652  000EB6  0012               	return	
  1653                           
  1654                           ; Switch size 1, requested type "space"
  1655                           ; Number of cases is 10, Range of values is 0 to 9
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte           31    16 (average)
  1659                           ;	Chosen strategy is simple_byte
  1660  000EB8  5075               	movf	??_motorSIO^0,w,c
  1661  000EBA  E101 D732          	bz	l4940
  1662  000EBE  0A01               	xorlw	1	; case 1
  1663  000EC0  E101 D73D          	bz	l4950
  1664  000EC4  0A03               	xorlw	3	; case 2
  1665  000EC6  E101 D74D          	bz	l4966
  1666  000ECA  0A01               	xorlw	1	; case 3
  1667  000ECC  E101 D752          	bz	l4972
  1668  000ED0  0A07               	xorlw	7	; case 4
  1669  000ED2  E101 D776          	bz	l1291
  1670  000ED6  0A01               	xorlw	1	; case 5
  1671  000ED8  E084               	bz	l5012
  1672  000EDA  0A03               	xorlw	3	; case 6
  1673  000EDC  E0BD               	bz	l1299
  1674  000EDE  0A01               	xorlw	1	; case 7
  1675  000EE0  E0AF               	bz	l5030
  1676  000EE2  0A0F               	xorlw	15	; case 8
  1677  000EE4  E0C2               	bz	l5040
  1678  000EE6  0A01               	xorlw	1	; case 9
  1679  000EE8  E0D0               	bz	l5048
  1680  000EEA  0012               	return		;funcret
  1681  000EEC                     __end_of_motorSIO:
  1682                           	callstack 0
  1683  000EEC                     PL24:
  1684                           	callstack 24
  1685  000EEC  C00B  FFD9         	movff	_userPtr,fsr2l
  1686  000EF0  C00C  FFDA         	movff	_userPtr+1,fsr2h
  1687  000EF4  50DF               	movf	indf2,w,c
  1688  000EF6  0012               	return	
  1689  000EF8                     __end_ofPL24:
  1690                           	callstack 0
  1691  000EF8                     PL50:
  1692                           	callstack 24
  1693  000EF8  6E75               	movwf	??_motorSIO^0,c
  1694  000EFA  C075  F069         	movff	??_motorSIO,LcNewString@new_s
  1695  000EFE  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  1696  000F00  0012               	return	
  1697  000F02                     __end_ofPL50:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _UnewScore *****************
  1701 ;; Defined at:
  1702 ;;		line 295 in file "Usuaris.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  score           1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  score           1    5[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/1
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1
  1716 ;;      Params:         0       0       0
  1717 ;;      Locals:         1       0       0
  1718 ;;      Temps:          0       0       0
  1719 ;;      Totals:         1       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 2
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_motorSIO
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text2
  1731  001AE2                     __ptext2:
  1732                           	callstack 0
  1733  001AE2                     _UnewScore:
  1734                           	callstack 27
  1735                           
  1736                           ;incstack = 0
  1737                           ;UnewScore@score stored from wreg
  1738  001AE2  6E66               	movwf	UnewScore@score^0,c
  1739                           
  1740                           ;Usuaris.c: 296:     if(puntuacions[0].score < score){
  1741  001AE4  5066               	movf	UnewScore@score^0,w,c
  1742  001AE6  5C02               	subwf	(_puntuacions+1)^0,w,c
  1743  001AE8  E203               	bc	l2322
  1744                           
  1745                           ;Usuaris.c: 297:         puntuacions[0].indexStruct = usuariLoguejat;
  1746  001AEA  C050  F001         	movff	_usuariLoguejat,_puntuacions
  1747                           
  1748                           ;Usuaris.c: 298:     }else{
  1749  001AEE  0012               	return	
  1750  001AF0                     l2322:
  1751                           
  1752                           ;Usuaris.c: 299:         if(puntuacions[1].score < score){
  1753  001AF0  5066               	movf	UnewScore@score^0,w,c
  1754  001AF2  5C04               	subwf	(_puntuacions+3)^0,w,c
  1755  001AF4  E203               	bc	l2326
  1756                           
  1757                           ;Usuaris.c: 300:             puntuacions[1].indexStruct = usuariLoguejat;
  1758  001AF6  C050  F003         	movff	_usuariLoguejat,_puntuacions+2
  1759                           
  1760                           ;Usuaris.c: 301:         }else{
  1761  001AFA  0012               	return	
  1762  001AFC                     l2326:
  1763                           
  1764                           ;Usuaris.c: 302:             if(puntuacions[2].score < score){
  1765  001AFC  5066               	movf	UnewScore@score^0,w,c
  1766  001AFE  5C06               	subwf	(_puntuacions+5)^0,w,c
  1767  001B00  E203               	bc	l2330
  1768                           
  1769                           ;Usuaris.c: 303:                 puntuacions[2].indexStruct = usuariLoguejat;
  1770  001B02  C050  F005         	movff	_usuariLoguejat,_puntuacions+4
  1771                           
  1772                           ;Usuaris.c: 304:             }else{
  1773  001B06  0012               	return	
  1774  001B08                     l2330:
  1775                           
  1776                           ;Usuaris.c: 305:                 if(puntuacions[3].score < score){
  1777  001B08  5066               	movf	UnewScore@score^0,w,c
  1778  001B0A  5C08               	subwf	(_puntuacions+7)^0,w,c
  1779  001B0C  E203               	bc	l2334
  1780                           
  1781                           ;Usuaris.c: 306:                     puntuacions[3].indexStruct = usuariLoguejat;
  1782  001B0E  C050  F007         	movff	_usuariLoguejat,_puntuacions+6
  1783                           
  1784                           ;Usuaris.c: 307:                 }else{
  1785  001B12  0012               	return	
  1786  001B14                     l2334:
  1787                           
  1788                           ;Usuaris.c: 308:                     if(puntuacions[4].score < score){
  1789  001B14  5066               	movf	UnewScore@score^0,w,c
  1790  001B16  5C0A               	subwf	(_puntuacions+9)^0,w,c
  1791  001B18  A0D8               	btfss	status,0,c
  1792                           
  1793                           ;Usuaris.c: 309:                         puntuacions[4].indexStruct = usuariLoguejat;
  1794  001B1A  C050  F009         	movff	_usuariLoguejat,_puntuacions+8
  1795  001B1E  0012               	return	
  1796  001B20                     __end_of_UnewScore:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _motorJoc *****************
  1800 ;; Defined at:
  1801 ;;		line 48 in file "Joc.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/1
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1
  1815 ;;      Params:         0       0       0
  1816 ;;      Locals:         0       0       0
  1817 ;;      Temps:          2       0       0
  1818 ;;      Totals:         2       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 5
  1822 ;; This function calls:
  1823 ;;		_HClearNouSegon
  1824 ;;		_HGetTime
  1825 ;;		_HJugant
  1826 ;;		_HNouSegon
  1827 ;;		_HnoJugant
  1828 ;;		_LcGotoXY
  1829 ;;		_LcLliure
  1830 ;;		_LcNewString
  1831 ;;		_SIONovaDireccio
  1832 ;;		_SIONovaTecla
  1833 ;;		_SIOStartGame
  1834 ;;		_SIOcheckKrebut
  1835 ;;		_SIOendGame
  1836 ;;		_conversorJoystick
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text3
  1843  001522                     __ptext3:
  1844                           	callstack 0
  1845  001522                     _motorJoc:
  1846                           	callstack 25
  1847                           
  1848                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1849                           
  1850                           ;incstack = 0
  1851  001522  D046               	goto	l4932
  1852  001524                     l4880:
  1853                           
  1854                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1855  001524  284D               	incf	_usuariJoc^0,w,c
  1856  001526  B4D8               	btfsc	status,2,c
  1857  001528  0012               	return	
  1858                           
  1859                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1860  00152A  504D               	movf	_usuariJoc^0,w,c
  1861  00152C  EC8E  F00F         	call	_SIOStartGame
  1862                           
  1863                           ;Joc.c: 55:     jugantJoc = 1;
  1864  001530  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1865                           
  1866                           ;Joc.c: 56:     state = 2;
  1867  001532  0E02               	movlw	2
  1868  001534  6E14               	movwf	motorJoc@state^0,c
  1869                           
  1870                           ;Joc.c: 58:   break;
  1871                           
  1872                           ;Joc.c: 57:    }
  1873  001536  0C02               	retlw	2
  1874  001538                     l1177:
  1875                           
  1876                           ;Joc.c: 60:    if (!jugantJoc) {
  1877  001538  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1878  00153A  D008               	goto	l4896
  1879                           
  1880                           ;Joc.c: 61:     usuariJoc = -1;
  1881  00153C  684D               	setf	_usuariJoc^0,c
  1882                           
  1883                           ;Joc.c: 62:     HnoJugant();
  1884  00153E  ECE4  F00F         	call	_HnoJugant	;wreg free
  1885                           
  1886                           ;Joc.c: 63:     SIOendGame();
  1887  001542  ECE2  F00F         	call	_SIOendGame	;wreg free
  1888                           
  1889                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1890  001546  968A               	bcf	138,3,c	;volatile
  1891                           
  1892                           ;Joc.c: 65:     state = 0;
  1893  001548  6A14               	clrf	motorJoc@state^0,c
  1894                           
  1895                           ;Joc.c: 66:    }
  1896  00154A  0012               	return	
  1897  00154C                     l4896:
  1898  00154C  BE15               	btfsc	_direccioJoc^0,7,c
  1899  00154E  D009               	goto	l4904
  1900                           
  1901                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1902  001550  5015               	movf	_direccioJoc^0,w,c
  1903  001552  EC6F  F00E         	call	_conversorJoystick
  1904  001556  EC96  F00F         	call	_SIONovaDireccio
  1905                           
  1906                           ;Joc.c: 69:     direccioJoc = -1;
  1907  00155A  6815               	setf	_direccioJoc^0,c
  1908  00155C                     l4902:
  1909                           
  1910                           ;Joc.c: 70:     state = 1;
  1911  00155C  0E01               	movlw	1
  1912  00155E  6E14               	movwf	motorJoc@state^0,c
  1913                           
  1914                           ;Joc.c: 71:    }
  1915  001560  0C01               	retlw	1
  1916  001562                     l4904:
  1917  001562  EC5E  F00F         	call	_HNouSegon	;wreg free
  1918  001566  E312               	bnc	l4916
  1919  001568  EC88  F00F         	call	_LcLliure	;wreg free
  1920  00156C  E30F               	bnc	l4916
  1921                           
  1922                           ;Joc.c: 73:     HClearNouSegon();
  1923  00156E  ECE8  F00F         	call	_HClearNouSegon	;wreg free
  1924                           
  1925                           ;Joc.c: 74:     LcGotoXY(0,1);
  1926  001572  EC28  F005         	call	PL32	;call to abstracted procedure
  1927  001576  EC04  F00E         	call	_LcGotoXY
  1928                           
  1929                           ;Joc.c: 75:     LcNewString(HGetTime());
  1930  00157A  ECE6  F00F         	call	_HGetTime	;wreg free
  1931  00157E  6E74               	movwf	??_motorJoc^0,c
  1932  001580  C074  F069         	movff	??_motorJoc,LcNewString@new_s
  1933  001584  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  1934  001586  EC82  F00F         	call	_LcNewString	;wreg free
  1935  00158A  D7E8               	goto	l4902
  1936  00158C                     l4916:
  1937  00158C  504C               	movf	_novaTeclaJOC^0,w,c
  1938  00158E  0A80               	xorlw	128
  1939  001590  0F7F               	addlw	-129
  1940  001592  A0D8               	btfss	status,0,c
  1941  001594  0012               	return	
  1942                           
  1943                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1944  001596  504C               	movf	_novaTeclaJOC^0,w,c
  1945  001598  0F30               	addlw	48
  1946  00159A  EC92  F00F         	call	_SIONovaTecla
  1947                           
  1948                           ;Joc.c: 80:     novaTeclaJOC = -1;
  1949  00159E  684C               	setf	_novaTeclaJOC^0,c
  1950  0015A0  D7DD               	goto	l4902
  1951  0015A2                     l4924:
  1952                           
  1953                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  1954  0015A2  EC58  F00F         	call	_SIOcheckKrebut	;wreg free
  1955  0015A6  A0D8               	btfss	status,0,c
  1956  0015A8  0012               	return	
  1957                           
  1958                           ;Joc.c: 86:     HJugant();
  1959  0015AA  ECD6  F00F         	call	_HJugant	;wreg free
  1960  0015AE  D7D6               	goto	l4902
  1961  0015B0                     l4932:
  1962  0015B0  5014               	movf	motorJoc@state^0,w,c
  1963  0015B2  6E74               	movwf	??_motorJoc^0,c
  1964  0015B4  6A75               	clrf	(??_motorJoc+1)^0,c
  1965                           
  1966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1967                           ; Switch size 1, requested type "space"
  1968                           ; Number of cases is 1, Range of values is 0 to 0
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; simple_byte            4     3 (average)
  1972                           ;	Chosen strategy is simple_byte
  1973  0015B6  5075               	movf	(??_motorJoc+1)^0,w,c
  1974  0015B8  A4D8               	btfss	status,2,c
  1975  0015BA  0012               	return	
  1976                           
  1977                           ; Switch size 1, requested type "space"
  1978                           ; Number of cases is 3, Range of values is 0 to 2
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           10     6 (average)
  1982                           ;	Chosen strategy is simple_byte
  1983  0015BC  5074               	movf	??_motorJoc^0,w,c
  1984  0015BE  E0B2               	bz	l4880
  1985  0015C0  0A01               	xorlw	1	; case 1
  1986  0015C2  E0BA               	bz	l1177
  1987  0015C4  0A03               	xorlw	3	; case 2
  1988  0015C6  E0ED               	bz	l4924
  1989  0015C8  0012               	return		;funcret
  1990  0015CA                     __end_of_motorJoc:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _conversorJoystick *****************
  1994 ;; Defined at:
  1995 ;;		line 31 in file "Joc.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  direc           1    wreg     unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  direc           1    5[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      unsigned char 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/1
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1
  2009 ;;      Params:         0       0       0
  2010 ;;      Locals:         1       0       0
  2011 ;;      Temps:          0       0       0
  2012 ;;      Totals:         1       0       0
  2013 ;;Total ram usage:        1 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 2
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_motorJoc
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text4
  2024  001CDE                     __ptext4:
  2025                           	callstack 0
  2026  001CDE                     _conversorJoystick:
  2027                           	callstack 27
  2028                           
  2029                           ;incstack = 0
  2030                           ;conversorJoystick@direc stored from wreg
  2031  001CDE  6E66               	movwf	conversorJoystick@direc^0,c
  2032                           
  2033                           ;Joc.c: 33:     if (direc==2) {
  2034  001CE0  0E02               	movlw	2
  2035  001CE2  1866               	xorwf	conversorJoystick@direc^0,w,c
  2036  001CE4  E101               	bnz	l2364
  2037                           
  2038                           ;Joc.c: 34:         return 'W';
  2039  001CE6  0C57               	retlw	87
  2040  001CE8                     l2364:
  2041                           
  2042                           ;Joc.c: 36:     if (direc==6) {
  2043  001CE8  0E06               	movlw	6
  2044  001CEA  1866               	xorwf	conversorJoystick@direc^0,w,c
  2045  001CEC  E101               	bnz	l2370
  2046                           
  2047                           ;Joc.c: 37:         return 'D';
  2048  001CEE  0C44               	retlw	68
  2049  001CF0                     l2370:
  2050                           
  2051                           ;Joc.c: 39:     if (direc==8) {
  2052  001CF0  0E08               	movlw	8
  2053  001CF2  1866               	xorwf	conversorJoystick@direc^0,w,c
  2054  001CF4  E101               	bnz	l2376
  2055                           
  2056                           ;Joc.c: 40:         return 'S';
  2057  001CF6  0C53               	retlw	83
  2058  001CF8                     l2376:
  2059                           
  2060                           ;Joc.c: 42:     if (direc==4) {
  2061  001CF8  0E04               	movlw	4
  2062  001CFA  1866               	xorwf	conversorJoystick@direc^0,w,c
  2063  001CFC  E101               	bnz	l2382
  2064                           
  2065                           ;Joc.c: 43:         return 'A';
  2066  001CFE  0C41               	retlw	65
  2067  001D00                     l2382:
  2068                           
  2069                           ;Joc.c: 45:     return 0;
  2070  001D00  0C00               	retlw	0	;funcret
  2071  001D02                     __end_of_conversorJoystick:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _SIOendGame *****************
  2075 ;; Defined at:
  2076 ;;		line 22 in file "SIO.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		None
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/1
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1
  2090 ;;      Params:         0       0       0
  2091 ;;      Locals:         0       0       0
  2092 ;;      Temps:          0       0       0
  2093 ;;      Totals:         0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 2
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_motorJoc
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text5
  2105  001FC4                     __ptext5:
  2106                           	callstack 0
  2107  001FC4                     _SIOendGame:
  2108                           	callstack 27
  2109                           
  2110                           ;SIO.c: 23:     jugantSIO = 0;
  2111                           
  2112                           ;incstack = 0
  2113  001FC4  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2114  001FC6  0012               	return		;funcret
  2115  001FC8                     __end_of_SIOendGame:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _SIOcheckKrebut *****************
  2119 ;; Defined at:
  2120 ;;		line 25 in file "SIO.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/1
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1
  2134 ;;      Params:         0       0       0
  2135 ;;      Locals:         0       0       0
  2136 ;;      Temps:          0       0       0
  2137 ;;      Totals:         0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_motorJoc
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text6
  2149  001EB0                     __ptext6:
  2150                           	callstack 0
  2151  001EB0                     _SIOcheckKrebut:
  2152                           	callstack 27
  2153                           
  2154                           ;SIO.c: 26:     return Krebut;
  2155                           
  2156                           ;incstack = 0
  2157  001EB0  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2158  001EB2  D002               	goto	l2398
  2159  001EB4  90D8               	bcf	status,0,c
  2160  001EB6  0012               	return	
  2161  001EB8                     l2398:
  2162  001EB8  80D8               	bsf	status,0,c
  2163  001EBA  0012               	return		;funcret
  2164  001EBC                     __end_of_SIOcheckKrebut:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _SIOStartGame *****************
  2168 ;; Defined at:
  2169 ;;		line 32 in file "SIO.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  usuari          1    wreg     unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  usuari          1    5[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/1
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1
  2183 ;;      Params:         0       0       0
  2184 ;;      Locals:         1       0       0
  2185 ;;      Temps:          0       0       0
  2186 ;;      Totals:         1       0       0
  2187 ;;Total ram usage:        1 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_motorJoc
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text7
  2198  001F1C                     __ptext7:
  2199                           	callstack 0
  2200  001F1C                     _SIOStartGame:
  2201                           	callstack 27
  2202                           
  2203                           ;incstack = 0
  2204                           ;SIOStartGame@usuari stored from wreg
  2205  001F1C  6E66               	movwf	SIOStartGame@usuari^0,c
  2206                           
  2207                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2208  001F1E  C066  F04B         	movff	SIOStartGame@usuari,_usuariActualSIO
  2209  001F22  0012               	return		;funcret
  2210  001F24                     __end_of_SIOStartGame:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _SIONovaTecla *****************
  2214 ;; Defined at:
  2215 ;;		line 39 in file "SIO.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  tecla           1    wreg     char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  tecla           1    5[COMRAM] char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/1
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1
  2229 ;;      Params:         0       0       0
  2230 ;;      Locals:         1       0       0
  2231 ;;      Temps:          0       0       0
  2232 ;;      Totals:         1       0       0
  2233 ;;Total ram usage:        1 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_motorJoc
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text8
  2244  001F24                     __ptext8:
  2245                           	callstack 0
  2246  001F24                     _SIONovaTecla:
  2247                           	callstack 27
  2248                           
  2249                           ;incstack = 0
  2250                           ;SIONovaTecla@tecla stored from wreg
  2251  001F24  6E66               	movwf	SIONovaTecla@tecla^0,c
  2252                           
  2253                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2254  001F26  C066  F049         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2255  001F2A  0012               	return		;funcret
  2256  001F2C                     __end_of_SIONovaTecla:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _SIONovaDireccio *****************
  2260 ;; Defined at:
  2261 ;;		line 28 in file "SIO.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  num             1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  num             1    5[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/1
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1
  2275 ;;      Params:         0       0       0
  2276 ;;      Locals:         1       0       0
  2277 ;;      Temps:          0       0       0
  2278 ;;      Totals:         1       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 2
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_motorJoc
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text9
  2290  001F2C                     __ptext9:
  2291                           	callstack 0
  2292  001F2C                     _SIONovaDireccio:
  2293                           	callstack 27
  2294                           
  2295                           ;incstack = 0
  2296                           ;SIONovaDireccio@num stored from wreg
  2297  001F2C  6E66               	movwf	SIONovaDireccio@num^0,c
  2298                           
  2299                           ;SIO.c: 29:     direccioSIO = num;
  2300  001F2E  C066  F04A         	movff	SIONovaDireccio@num,_direccioSIO
  2301  001F32  0012               	return		;funcret
  2302  001F34                     __end_of_SIONovaDireccio:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _HnoJugant *****************
  2306 ;; Defined at:
  2307 ;;		line 34 in file "Hora.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		None
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/1
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1
  2321 ;;      Params:         0       0       0
  2322 ;;      Locals:         0       0       0
  2323 ;;      Temps:          0       0       0
  2324 ;;      Totals:         0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 2
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_motorJoc
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text10
  2336  001FC8                     __ptext10:
  2337                           	callstack 0
  2338  001FC8                     _HnoJugant:
  2339                           	callstack 27
  2340                           
  2341                           ;Hora.c: 35:     jugant = 0;
  2342                           
  2343                           ;incstack = 0
  2344  001FC8  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2345  001FCA  0012               	return		;funcret
  2346  001FCC                     __end_of_HnoJugant:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _HNouSegon *****************
  2350 ;; Defined at:
  2351 ;;		line 22 in file "Hora.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/1
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1
  2365 ;;      Params:         0       0       0
  2366 ;;      Locals:         0       0       0
  2367 ;;      Temps:          0       0       0
  2368 ;;      Totals:         0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 2
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_motorJoc
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text11
  2380  001EBC                     __ptext11:
  2381                           	callstack 0
  2382  001EBC                     _HNouSegon:
  2383                           	callstack 27
  2384                           
  2385                           ;Hora.c: 23:     return nouSegon;
  2386                           
  2387                           ;incstack = 0
  2388  001EBC  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2389  001EBE  D002               	goto	l2344
  2390  001EC0  90D8               	bcf	status,0,c
  2391  001EC2  0012               	return	
  2392  001EC4                     l2344:
  2393  001EC4  80D8               	bsf	status,0,c
  2394  001EC6  0012               	return		;funcret
  2395  001EC8                     __end_of_HNouSegon:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _HJugant *****************
  2399 ;; Defined at:
  2400 ;;		line 37 in file "Hora.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		None
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/1
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1
  2414 ;;      Params:         0       0       0
  2415 ;;      Locals:         0       0       0
  2416 ;;      Temps:          0       0       0
  2417 ;;      Totals:         0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 2
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_motorJoc
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text12
  2429  001FAC                     __ptext12:
  2430                           	callstack 0
  2431  001FAC                     _HJugant:
  2432                           	callstack 27
  2433                           
  2434                           ;Hora.c: 38:     jugant = 1;
  2435                           
  2436                           ;incstack = 0
  2437  001FAC  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2438                           
  2439                           ;Hora.c: 39:     tempsAcabat = 0;
  2440  001FAE  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2441  001FB0  0012               	return		;funcret
  2442  001FB2                     __end_of_HJugant:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _HGetTime *****************
  2446 ;; Defined at:
  2447 ;;		line 30 in file "Hora.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      PTR unsigned char 
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/1
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1
  2461 ;;      Params:         2       0       0
  2462 ;;      Locals:         0       0       0
  2463 ;;      Temps:          0       0       0
  2464 ;;      Totals:         2       0       0
  2465 ;;Total ram usage:        2 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_motorJoc
  2472 ;;		_motorSIO
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text13
  2477  001FCC                     __ptext13:
  2478                           	callstack 0
  2479  001FCC                     _HGetTime:
  2480                           	callstack 27
  2481                           
  2482                           ;Hora.c: 31:     return hora;
  2483                           
  2484                           ;incstack = 0
  2485  001FCC  0E58               	movlw	_hora& (0+255)
  2486  001FCE  0012               	return		;funcret
  2487  001FD0                     __end_of_HGetTime:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _HClearNouSegon *****************
  2491 ;; Defined at:
  2492 ;;		line 26 in file "Hora.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		None
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/1
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1
  2506 ;;      Params:         0       0       0
  2507 ;;      Locals:         0       0       0
  2508 ;;      Temps:          0       0       0
  2509 ;;      Totals:         0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 2
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_motorJoc
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text14
  2521  001FD0                     __ptext14:
  2522                           	callstack 0
  2523  001FD0                     _HClearNouSegon:
  2524                           	callstack 27
  2525                           
  2526                           ;Hora.c: 27:     nouSegon = 0;
  2527                           
  2528                           ;incstack = 0
  2529  001FD0  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2530  001FD2  0012               	return		;funcret
  2531  001FD4                     __end_of_HClearNouSegon:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _motorHora *****************
  2535 ;; Defined at:
  2536 ;;		line 45 in file "Hora.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/1
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1
  2550 ;;      Params:         0       0       0
  2551 ;;      Locals:         0       0       0
  2552 ;;      Temps:          2       0       0
  2553 ;;      Totals:         2       0       0
  2554 ;;Total ram usage:        2 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 3
  2557 ;; This function calls:
  2558 ;;		_TiGetTics
  2559 ;;		_TiResetTics
  2560 ;;		_playAltaveu
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text15
  2567  0016F6                     __ptext15:
  2568                           	callstack 0
  2569  0016F6                     _motorHora:
  2570                           	callstack 27
  2571                           
  2572                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2573                           
  2574                           ;incstack = 0
  2575  0016F6  D038               	goto	l5118
  2576  0016F8                     l5068:
  2577                           
  2578                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2579  0016F8  5018               	movf	_timerHora^0,w,c
  2580  0016FA  EC5C  F00E         	call	_TiGetTics
  2581  0016FE  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2582  001700  0012               	return	
  2583  001702  EC8B  F006         	call	PL54	;call to abstracted procedure
  2584  001706  A0D8               	btfss	status,0,c
  2585  001708  0012               	return	
  2586                           
  2587                           ;Hora.c: 51:     TiResetTics(timerHora);
  2588  00170A  5018               	movf	_timerHora^0,w,c
  2589  00170C  EC00  F00F         	call	_TiResetTics
  2590                           
  2591                           ;Hora.c: 52:     if(jugant){
  2592  001710  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2593  001712  D028               	goto	l5114
  2594                           
  2595                           ;Hora.c: 53:       nouSegon = 1;
  2596  001714  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2597                           
  2598                           ;Hora.c: 55:      hora[4]--;
  2599  001716  065C               	decf	(_hora+4)^0,f,c
  2600                           
  2601                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2602  001718  0E2F               	movlw	47
  2603  00171A  185C               	xorwf	(_hora+4)^0,w,c
  2604  00171C  E103               	bnz	l5084
  2605                           
  2606                           ;Hora.c: 57:       hora[4] = '9';
  2607  00171E  0E39               	movlw	57
  2608  001720  6E5C               	movwf	(_hora+4)^0,c
  2609                           
  2610                           ;Hora.c: 58:       hora[3]--;
  2611  001722  065B               	decf	(_hora+3)^0,f,c
  2612  001724                     l5084:
  2613                           
  2614                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2615  001724  0E2F               	movlw	47
  2616  001726  185B               	xorwf	(_hora+3)^0,w,c
  2617  001728  E103               	bnz	l5090
  2618                           
  2619                           ;Hora.c: 62:       hora[3] = '5';
  2620  00172A  0E35               	movlw	53
  2621  00172C  6E5B               	movwf	(_hora+3)^0,c
  2622                           
  2623                           ;Hora.c: 63:       hora[1]--;
  2624  00172E  0659               	decf	(_hora+1)^0,f,c
  2625  001730                     l5090:
  2626                           
  2627                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2628  001730  0E2F               	movlw	47
  2629  001732  1859               	xorwf	(_hora+1)^0,w,c
  2630  001734  E103               	bnz	l5096
  2631                           
  2632                           ;Hora.c: 67:       hora[1] = '9';
  2633  001736  0E39               	movlw	57
  2634  001738  6E59               	movwf	(_hora+1)^0,c
  2635                           
  2636                           ;Hora.c: 68:       hora[0]--;
  2637  00173A  0658               	decf	_hora^0,f,c
  2638  00173C                     l5096:
  2639                           
  2640                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2641  00173C  0E30               	movlw	48
  2642  00173E  1858               	xorwf	_hora^0,w,c
  2643  001740  E10A               	bnz	l5106
  2644  001742  0E30               	movlw	48
  2645  001744  1859               	xorwf	(_hora+1)^0,w,c
  2646  001746  E107               	bnz	l5106
  2647  001748  0E30               	movlw	48
  2648  00174A  185B               	xorwf	(_hora+3)^0,w,c
  2649  00174C  E104               	bnz	l5106
  2650  00174E  0E30               	movlw	48
  2651  001750  185C               	xorwf	(_hora+4)^0,w,c
  2652  001752  E101               	bnz	l5106
  2653                           
  2654                           ;Hora.c: 72:       tempsAcabat = 1;
  2655  001754  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2656  001756                     l5106:
  2657                           
  2658                           ;Hora.c: 75:      segons++;
  2659  001756  2A17               	incf	_segons^0,f,c
  2660                           
  2661                           ;Hora.c: 76:      if(segons > 59){
  2662  001758  0E3B               	movlw	59
  2663  00175A  6417               	cpfsgt	_segons^0,c
  2664  00175C  D003               	goto	l5114
  2665                           
  2666                           ;Hora.c: 77:       playAltaveu();
  2667  00175E  ECEA  F00F         	call	_playAltaveu	;wreg free
  2668                           
  2669                           ;Hora.c: 78:       segons = 0;
  2670  001762  6A17               	clrf	_segons^0,c
  2671  001764                     l5114:
  2672                           
  2673                           ;Hora.c: 81:     state = 0;
  2674  001764  6A16               	clrf	motorHora@state^0,c
  2675  001766  0012               	return	
  2676  001768                     l5118:
  2677  001768  5016               	movf	motorHora@state^0,w,c
  2678  00176A  6E6D               	movwf	??_motorHora^0,c
  2679  00176C  6A6E               	clrf	(??_motorHora+1)^0,c
  2680                           
  2681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2682                           ; Switch size 1, requested type "space"
  2683                           ; Number of cases is 1, Range of values is 0 to 0
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte            4     3 (average)
  2687                           ;	Chosen strategy is simple_byte
  2688  00176E  506E               	movf	(??_motorHora+1)^0,w,c
  2689  001770  A4D8               	btfss	status,2,c
  2690  001772  0012               	return	
  2691                           
  2692                           ; Switch size 1, requested type "space"
  2693                           ; Number of cases is 1, Range of values is 0 to 0
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte            4     3 (average)
  2697                           ;	Chosen strategy is simple_byte
  2698  001774  506D               	movf	??_motorHora^0,w,c
  2699  001776  E0C0               	bz	l5068
  2700  001778  0012               	return		;funcret
  2701  00177A                     __end_of_motorHora:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _playAltaveu *****************
  2705 ;; Defined at:
  2706 ;;		line 14 in file "Altaveu.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		None
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/1
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1
  2720 ;;      Params:         0       0       0
  2721 ;;      Locals:         0       0       0
  2722 ;;      Temps:          0       0       0
  2723 ;;      Totals:         0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 2
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_motorHora
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text16
  2735  001FD4                     __ptext16:
  2736                           	callstack 0
  2737  001FD4                     _playAltaveu:
  2738                           	callstack 27
  2739                           
  2740                           ;Altaveu.c: 15:     reproduir = 1;
  2741                           
  2742                           ;incstack = 0
  2743  001FD4  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2744  001FD6  0012               	return		;funcret
  2745  001FD8                     __end_of_playAltaveu:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _motorAltaveu *****************
  2749 ;; Defined at:
  2750 ;;		line 17 in file "Altaveu.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/1
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1
  2764 ;;      Params:         0       0       0
  2765 ;;      Locals:         0       0       0
  2766 ;;      Temps:          3       0       0
  2767 ;;      Totals:         3       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 3
  2771 ;; This function calls:
  2772 ;;		_TiGetTics
  2773 ;;		_TiResetTics
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text17
  2780  001662                     __ptext17:
  2781                           	callstack 0
  2782  001662                     _motorAltaveu:
  2783                           	callstack 27
  2784                           
  2785                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2786                           
  2787                           ;incstack = 0
  2788  001662  D030               	goto	l5718
  2789  001664                     l875:
  2790                           
  2791                           ;Altaveu.c: 22:    if (reproduir) {
  2792  001664  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2793  001666  0012               	return	
  2794                           
  2795                           ;Altaveu.c: 23:     nota = 1;
  2796  001668  0E01               	movlw	1
  2797  00166A  6E28               	movwf	_nota^0,c
  2798                           
  2799                           ;Altaveu.c: 24:     copsNota = 0;
  2800  00166C  6A26               	clrf	_copsNota^0,c
  2801                           
  2802                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2803  00166E  5027               	movf	_timerAltaveu^0,w,c
  2804  001670  EC00  F00F         	call	_TiResetTics
  2805  001674                     l5684:
  2806                           
  2807                           ;Altaveu.c: 26:     state = 1;
  2808  001674  0E01               	movlw	1
  2809  001676  6E25               	movwf	motorAltaveu@state^0,c
  2810  001678  0C01               	retlw	1
  2811  00167A                     l5686:
  2812                           
  2813                           ;Altaveu.c: 30:    if (nota > 5) {
  2814  00167A  0E05               	movlw	5
  2815  00167C  6428               	cpfsgt	_nota^0,c
  2816  00167E  D003               	goto	l5690
  2817                           
  2818                           ;Altaveu.c: 31:     reproduir = 0;
  2819  001680  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2820                           
  2821                           ;Altaveu.c: 32:     state = 0;
  2822  001682  6A25               	clrf	motorAltaveu@state^0,c
  2823                           
  2824                           ;Altaveu.c: 33:    }
  2825  001684  0012               	return	
  2826  001686                     l5690:
  2827  001686  0EA8               	movlw	168
  2828  001688  1826               	xorwf	_copsNota^0,w,c
  2829  00168A  E103               	bnz	l5698
  2830                           
  2831                           ;Altaveu.c: 35:     nota++;
  2832  00168C  2A28               	incf	_nota^0,f,c
  2833                           
  2834                           ;Altaveu.c: 36:     copsNota = 0;
  2835  00168E  6A26               	clrf	_copsNota^0,c
  2836  001690  D7F1               	goto	l5684
  2837  001692                     l5698:
  2838  001692  5027               	movf	_timerAltaveu^0,w,c
  2839  001694  EC5C  F00E         	call	_TiGetTics
  2840  001698  D822               	call	PL16	;call to abstracted procedure
  2841  00169A  B0D8               	btfsc	status,0,c
  2842  00169C  0012               	return	
  2843                           
  2844                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2845  00169E  808A               	bsf	138,0,c	;volatile
  2846                           
  2847                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2848  0016A0  5027               	movf	_timerAltaveu^0,w,c
  2849  0016A2  EC00  F00F         	call	_TiResetTics
  2850                           
  2851                           ;Altaveu.c: 42:     state = 2;
  2852  0016A6  0E02               	movlw	2
  2853  0016A8  6E25               	movwf	motorAltaveu@state^0,c
  2854  0016AA  0C02               	retlw	2
  2855  0016AC                     l5706:
  2856                           
  2857                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2858  0016AC  5027               	movf	_timerAltaveu^0,w,c
  2859  0016AE  EC5C  F00E         	call	_TiGetTics
  2860  0016B2  D815               	call	PL16	;call to abstracted procedure
  2861  0016B4  B0D8               	btfsc	status,0,c
  2862  0016B6  0012               	return	
  2863                           
  2864                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2865  0016B8  908A               	bcf	138,0,c	;volatile
  2866                           
  2867                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2868  0016BA  5027               	movf	_timerAltaveu^0,w,c
  2869  0016BC  EC00  F00F         	call	_TiResetTics
  2870                           
  2871                           ;Altaveu.c: 49:     copsNota++;
  2872  0016C0  2A26               	incf	_copsNota^0,f,c
  2873  0016C2  D7D8               	goto	l5684
  2874  0016C4                     l5718:
  2875  0016C4  5025               	movf	motorAltaveu@state^0,w,c
  2876  0016C6  6E6D               	movwf	??_motorAltaveu^0,c
  2877  0016C8  6A6E               	clrf	(??_motorAltaveu+1)^0,c
  2878                           
  2879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2880                           ; Switch size 1, requested type "space"
  2881                           ; Number of cases is 1, Range of values is 0 to 0
  2882                           ; switch strategies available:
  2883                           ; Name         Instructions Cycles
  2884                           ; simple_byte            4     3 (average)
  2885                           ;	Chosen strategy is simple_byte
  2886  0016CA  506E               	movf	(??_motorAltaveu+1)^0,w,c
  2887  0016CC  A4D8               	btfss	status,2,c
  2888  0016CE  0012               	return	
  2889                           
  2890                           ; Switch size 1, requested type "space"
  2891                           ; Number of cases is 3, Range of values is 0 to 2
  2892                           ; switch strategies available:
  2893                           ; Name         Instructions Cycles
  2894                           ; simple_byte           10     6 (average)
  2895                           ;	Chosen strategy is simple_byte
  2896  0016D0  506D               	movf	??_motorAltaveu^0,w,c
  2897  0016D2  E0C8               	bz	l875
  2898  0016D4  0A01               	xorlw	1	; case 1
  2899  0016D6  E0D1               	bz	l5686
  2900  0016D8  0A03               	xorlw	3	; case 2
  2901  0016DA  E0E8               	bz	l5706
  2902  0016DC  0012               	return		;funcret
  2903  0016DE                     __end_of_motorAltaveu:
  2904                           	callstack 0
  2905  0016DE                     PL16:
  2906                           	callstack 27
  2907  0016DE  5028               	movf	_nota^0,w,c
  2908  0016E0  6E6D               	movwf	??_motorAltaveu^0,c
  2909  0016E2  6A6E               	clrf	(??_motorAltaveu+1)^0,c
  2910  0016E4  5066               	movf	?_TiGetTics^0,w,c
  2911  0016E6  5C6D               	subwf	??_motorAltaveu^0,w,c
  2912  0016E8  506E               	movf	(??_motorAltaveu+1)^0,w,c
  2913  0016EA  0A80               	xorlw	128
  2914  0016EC  6E6F               	movwf	(??_motorAltaveu+2)^0,c
  2915  0016EE  5067               	movf	(?_TiGetTics+1)^0,w,c
  2916  0016F0  0A80               	xorlw	128
  2917  0016F2  586F               	subwfb	(??_motorAltaveu+2)^0,w,c
  2918  0016F4  0012               	return	
  2919  0016F6                     __end_ofPL16:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _menu *****************
  2923 ;; Defined at:
  2924 ;;		line 40 in file "Menu.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/1
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1
  2938 ;;      Params:         0       0       0
  2939 ;;      Locals:         0       0       0
  2940 ;;      Temps:          0       5       0
  2941 ;;      Totals:         0       5       0
  2942 ;;Total ram usage:        5 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 6
  2945 ;; This function calls:
  2946 ;;		_CToAConverteix
  2947 ;;		_CToAHaAcabat
  2948 ;;		_CToAobtenir
  2949 ;;		_GLCDMostraMenu
  2950 ;;		_HActualitzaHora
  2951 ;;		_JJuguem
  2952 ;;		_JendGame
  2953 ;;		_JnovaDireccio
  2954 ;;		_JnovaTecla
  2955 ;;		_LcClear
  2956 ;;		_LcGotoXY
  2957 ;;		_LcLliure
  2958 ;;		_LcNewString
  2959 ;;		_LcPutChar
  2960 ;;		_LcScroll
  2961 ;;		_NoFerMenu
  2962 ;;		_SIOHaAcabatPuntuacions
  2963 ;;		_SMSoff
  2964 ;;		_SMSon
  2965 ;;		_SiFerMenu
  2966 ;;		_TiGetTics
  2967 ;;		_TiResetTics
  2968 ;;		_URegister
  2969 ;;		_UcheckExists
  2970 ;;		_UcheckExistsGetError
  2971 ;;		_UcheckExistsNotFinished
  2972 ;;		_UenviaChar
  2973 ;;		_UenviaPas
  2974 ;;		_UgetNumUsuaris
  2975 ;;		_UgetScore
  2976 ;;		_UgetTop5
  2977 ;;		_UgetUserName
  2978 ;;		_UshowUsersCalculat
  2979 ;;		_calculateShowUsers
  2980 ;;		_checkHoraAcabat
  2981 ;;		_getArrayShowUsers
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text18
  2988  0002F6                     __ptext18:
  2989                           	callstack 0
  2990  0002F6                     _menu:
  2991                           	callstack 24
  2992                           
  2993                           ;Menu.c: 41:  static char state = 0;;Menu.c: 43:  switch(state) {
  2994                           
  2995                           ;incstack = 0
  2996  0002F6  D32A               	goto	l6920
  2997  0002F8                     l6376:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;Menu.c: 45:    LcClear();
  3001  0002F8  ECA5  F00E         	call	_LcClear	;wreg free
  3002                           
  3003                           ;Menu.c: 46:    LcNewString("1.LOGIN");
  3004  0002FC  0EDF               	movlw	low STR_1
  3005  0002FE  DB9D               	call	PL6	;call to abstracted procedure
  3006  000300  EC82  F00F         	call	_LcNewString	;wreg free
  3007                           
  3008                           ;Menu.c: 47:    state = 1;
  3009  000304  0E01               	movlw	1
  3010  000306  6E2F               	movwf	menu@state^0,c
  3011                           
  3012                           ;Menu.c: 48:   break;
  3013  000308  0C01               	retlw	1
  3014  00030A                     l6382:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;Menu.c: 50:    if (LcLliure()) {
  3018  00030A  EC88  F00F         	call	_LcLliure	;wreg free
  3019  00030E  A0D8               	btfss	status,0,c
  3020  000310  0012               	return	
  3021                           
  3022                           ;Menu.c: 51:     LcGotoXY(0,1);
  3023  000312  DB9E               	call	PL32	;call to abstracted procedure
  3024  000314  EC04  F00E         	call	_LcGotoXY
  3025                           
  3026                           ;Menu.c: 52:     LcNewString("2.REGISTER");
  3027  000318  0EBB               	movlw	low STR_2
  3028  00031A  DB8F               	call	PL6	;call to abstracted procedure
  3029  00031C  EC82  F00F         	call	_LcNewString	;wreg free
  3030                           
  3031                           ;Menu.c: 53:     NovaTecla = -1;
  3032  000320  6853               	setf	_NovaTecla^0,c
  3033                           
  3034                           ;Menu.c: 54:     state = 2;
  3035  000322  0E02               	movlw	2
  3036  000324  6E2F               	movwf	menu@state^0,c
  3037                           
  3038                           ;Menu.c: 56:   break;
  3039                           
  3040                           ;Menu.c: 55:    }
  3041  000326  0C02               	retlw	2
  3042  000328                     l6392:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;Menu.c: 58:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3046  000328  0453               	decf	_NovaTecla^0,w,c
  3047  00032A  E108               	bnz	l6400
  3048                           
  3049                           ; BSR set to: 0
  3050  00032C  ECEE  F00F         	call	_UgetNumUsuaris	;wreg free
  3051  000330  0900               	iorlw	0
  3052  000332  E004               	bz	l6400
  3053                           
  3054                           ;Menu.c: 59:     loginNOTRegister = 1;
  3055  000334  8E78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3056  000336                     l6398:
  3057                           
  3058                           ;Menu.c: 60:     state = 3;
  3059  000336  0E03               	movlw	3
  3060  000338  6E2F               	movwf	menu@state^0,c
  3061                           
  3062                           ;Menu.c: 61:    }
  3063  00033A  0C03               	retlw	3
  3064  00033C                     l6400:
  3065  00033C  0E02               	movlw	2
  3066  00033E  1853               	xorwf	_NovaTecla^0,w,c
  3067  000340  A4D8               	btfss	status,2,c
  3068  000342  0012               	return	
  3069                           
  3070                           ;Menu.c: 63:     loginNOTRegister = 0;
  3071  000344  9E78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3072  000346  D7F7               	goto	l6398
  3073  000348                     l513:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;Menu.c: 68:    NovaTecla = -1;
  3077  000348  6853               	setf	_NovaTecla^0,c
  3078                           
  3079                           ;Menu.c: 69:    novaLletra = -1;
  3080  00034A  6852               	setf	_novaLletra^0,c
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;Menu.c: 70:    LcClear();
  3084  00034C  ECA5  F00E         	call	_LcClear	;wreg free
  3085                           
  3086                           ;Menu.c: 71:    LcNewString("USER: ");
  3087  000350  0EEE               	movlw	low STR_3
  3088  000352  DB73               	call	PL6	;call to abstracted procedure
  3089  000354  EC82  F00F         	call	_LcNewString	;wreg free
  3090                           
  3091                           ;Menu.c: 72:    state = 4;
  3092  000358  0E04               	movlw	4
  3093  00035A  6E2F               	movwf	menu@state^0,c
  3094                           
  3095                           ;Menu.c: 73:   break;
  3096  00035C  0C04               	retlw	4
  3097  00035E                     l6412:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;Menu.c: 75:    if (LcLliure()) {
  3101  00035E  EC88  F00F         	call	_LcLliure	;wreg free
  3102  000362  A0D8               	btfss	status,0,c
  3103  000364  0012               	return	
  3104                           
  3105                           ;Menu.c: 76:     LcGotoXY(0,1);
  3106  000366  DB74               	call	PL32	;call to abstracted procedure
  3107  000368  EC04  F00E         	call	_LcGotoXY
  3108                           
  3109                           ;Menu.c: 77:     LcNewString("PSWD: ");
  3110  00036C  0EE7               	movlw	low STR_4
  3111  00036E  DB65               	call	PL6	;call to abstracted procedure
  3112  000370  EC82  F00F         	call	_LcNewString	;wreg free
  3113                           
  3114                           ;Menu.c: 78:     state = 5;
  3115  000374  0E05               	movlw	5
  3116  000376  6E2F               	movwf	menu@state^0,c
  3117  000378  0C05               	retlw	5
  3118  00037A                     l6420:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;Menu.c: 82:    if (LcLliure()) {
  3122  00037A  EC88  F00F         	call	_LcLliure	;wreg free
  3123  00037E  A0D8               	btfss	status,0,c
  3124  000380  0012               	return	
  3125                           
  3126                           ;Menu.c: 83:     LcGotoXY(6,0);
  3127  000382  0E00               	movlw	0
  3128  000384  6E6E               	movwf	LcGotoXY@Row^0,c
  3129  000386  0E06               	movlw	6
  3130  000388  EC04  F00E         	call	_LcGotoXY
  3131                           
  3132                           ;Menu.c: 84:     SMSon();
  3133  00038C  ECD9  F00F         	call	_SMSon	;wreg free
  3134                           
  3135                           ;Menu.c: 85:     tmp =0;
  3136  000390  6A34               	clrf	_tmp^0,c
  3137  000392                     l6428:
  3138                           
  3139                           ;Menu.c: 86:     state = 6;
  3140  000392  0E06               	movlw	6
  3141  000394  6E2F               	movwf	menu@state^0,c
  3142  000396  0C06               	retlw	6
  3143  000398                     l6430:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;Menu.c: 90:    if (novaLletra > 31 && NovaTecla != 10) {
  3147  000398  5052               	movf	_novaLletra^0,w,c
  3148  00039A  0A80               	xorlw	128
  3149  00039C  0F60               	addlw	-160
  3150  00039E  E30E               	bnc	l6440
  3151                           
  3152                           ; BSR set to: 0
  3153  0003A0  0E0A               	movlw	10
  3154  0003A2  1853               	xorwf	_NovaTecla^0,w,c
  3155  0003A4  E00B               	bz	l6440
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;Menu.c: 91:     LcPutChar(novaLletra);
  3159  0003A6  5052               	movf	_novaLletra^0,w,c
  3160  0003A8  EC29  F00D         	call	_LcPutChar
  3161                           
  3162                           ;Menu.c: 92:     UenviaChar(novaLletra,tmp);
  3163  0003AC  C034  F066         	movff	_tmp,UenviaChar@pos
  3164  0003B0  5052               	movf	_novaLletra^0,w,c
  3165  0003B2  EC49  F00F         	call	_UenviaChar
  3166  0003B6                     l6438:
  3167                           
  3168                           ;Menu.c: 93:     state = 7;
  3169  0003B6  0E07               	movlw	7
  3170  0003B8  6E2F               	movwf	menu@state^0,c
  3171                           
  3172                           ;Menu.c: 94:    }
  3173  0003BA  0C07               	retlw	7
  3174  0003BC                     l6440:
  3175                           
  3176                           ; BSR set to: 0
  3177  0003BC  0E0B               	movlw	11
  3178  0003BE  1853               	xorwf	_NovaTecla^0,w,c
  3179  0003C0  E0FA               	bz	l6438
  3180  0003C2  0012               	return	
  3181  0003C4                     l6444:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;Menu.c: 100:    if (tmp != 7 && NovaTecla != 11) {
  3185  0003C4  0E07               	movlw	7
  3186  0003C6  1834               	xorwf	_tmp^0,w,c
  3187  0003C8  E005               	bz	l6456
  3188                           
  3189                           ; BSR set to: 0
  3190  0003CA  0E0B               	movlw	11
  3191  0003CC  1853               	xorwf	_NovaTecla^0,w,c
  3192  0003CE  E002               	bz	l6456
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;Menu.c: 101:     tmp++;
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;Menu.c: 102:     NovaTecla = -1;
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;Menu.c: 103:     novaLletra = -1;
  3202  0003D0  DB57               	call	PL84	;call to abstracted procedure
  3203  0003D2  D7DF               	goto	l6428
  3204  0003D4                     l6456:
  3205                           
  3206                           ; BSR set to: 0
  3207  0003D4  0E07               	movlw	7
  3208  0003D6  1834               	xorwf	_tmp^0,w,c
  3209  0003D8  E004               	bz	u6630
  3210                           
  3211                           ; BSR set to: 0
  3212  0003DA  0E0B               	movlw	11
  3213  0003DC  1853               	xorwf	_NovaTecla^0,w,c
  3214  0003DE  A4D8               	btfss	status,2,c
  3215  0003E0  0012               	return	
  3216  0003E2                     u6630:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;Menu.c: 107:     LcGotoXY(6,1);
  3220  0003E2  0E01               	movlw	1
  3221  0003E4  6E6E               	movwf	LcGotoXY@Row^0,c
  3222  0003E6  0E06               	movlw	6
  3223  0003E8  EC04  F00E         	call	_LcGotoXY
  3224                           
  3225                           ;Menu.c: 108:     UenviaChar('\0',tmp);
  3226  0003EC  C034  F066         	movff	_tmp,UenviaChar@pos
  3227  0003F0  0E00               	movlw	0
  3228  0003F2  EC49  F00F         	call	_UenviaChar
  3229                           
  3230                           ;Menu.c: 109:     NovaTecla = -1;
  3231                           
  3232                           ;Menu.c: 110:     novaLletra = -1;
  3233                           
  3234                           ;Menu.c: 111:     tmp = 0;
  3235  0003F6  DB40               	call	PL82	;call to abstracted procedure
  3236  0003F8                     l6470:
  3237                           
  3238                           ;Menu.c: 112:     state = 8;
  3239  0003F8  0E08               	movlw	8
  3240  0003FA  6E2F               	movwf	menu@state^0,c
  3241  0003FC  0C08               	retlw	8
  3242  0003FE                     l6472:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;Menu.c: 116:    if (novaLletra > 31 && NovaTecla != 10) {
  3246  0003FE  5052               	movf	_novaLletra^0,w,c
  3247  000400  0A80               	xorlw	128
  3248  000402  0F60               	addlw	-160
  3249  000404  E30E               	bnc	l6482
  3250                           
  3251                           ; BSR set to: 0
  3252  000406  0E0A               	movlw	10
  3253  000408  1853               	xorwf	_NovaTecla^0,w,c
  3254  00040A  E00B               	bz	l6482
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;Menu.c: 117:     LcPutChar(novaLletra);
  3258  00040C  5052               	movf	_novaLletra^0,w,c
  3259  00040E  EC29  F00D         	call	_LcPutChar
  3260                           
  3261                           ;Menu.c: 118:     UenviaPas(novaLletra,tmp);
  3262  000412  C034  F066         	movff	_tmp,UenviaPas@pos
  3263  000416  5052               	movf	_novaLletra^0,w,c
  3264  000418  EC41  F00F         	call	_UenviaPas
  3265  00041C                     l6480:
  3266                           
  3267                           ;Menu.c: 119:     state = 9;
  3268  00041C  0E09               	movlw	9
  3269  00041E  6E2F               	movwf	menu@state^0,c
  3270                           
  3271                           ;Menu.c: 120:    }
  3272  000420  0C09               	retlw	9
  3273  000422                     l6482:
  3274                           
  3275                           ; BSR set to: 0
  3276  000422  0E0B               	movlw	11
  3277  000424  1853               	xorwf	_NovaTecla^0,w,c
  3278  000426  E0FA               	bz	l6480
  3279  000428  0012               	return	
  3280  00042A                     l6486:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;Menu.c: 126:    if (tmp != 7 && NovaTecla != 11) {
  3284  00042A  0E07               	movlw	7
  3285  00042C  1834               	xorwf	_tmp^0,w,c
  3286  00042E  E005               	bz	l6498
  3287                           
  3288                           ; BSR set to: 0
  3289  000430  0E0B               	movlw	11
  3290  000432  1853               	xorwf	_NovaTecla^0,w,c
  3291  000434  E002               	bz	l6498
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;Menu.c: 127:     tmp++;
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;Menu.c: 128:     NovaTecla = -1;
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;Menu.c: 129:     novaLletra = -1;
  3301  000436  DB24               	call	PL84	;call to abstracted procedure
  3302  000438  D7DF               	goto	l6470
  3303  00043A                     l6498:
  3304                           
  3305                           ; BSR set to: 0
  3306  00043A  0E07               	movlw	7
  3307  00043C  1834               	xorwf	_tmp^0,w,c
  3308  00043E  E004               	bz	u6700
  3309                           
  3310                           ; BSR set to: 0
  3311  000440  0E0B               	movlw	11
  3312  000442  1853               	xorwf	_NovaTecla^0,w,c
  3313  000444  A4D8               	btfss	status,2,c
  3314  000446  0012               	return	
  3315  000448                     u6700:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;Menu.c: 133:     UenviaPas('\0',tmp);
  3319  000448  C034  F066         	movff	_tmp,UenviaPas@pos
  3320  00044C  0E00               	movlw	0
  3321  00044E  EC41  F00F         	call	_UenviaPas
  3322                           
  3323                           ;Menu.c: 134:     NovaTecla = -1;
  3324                           
  3325                           ;Menu.c: 135:     novaLletra = -1;
  3326                           
  3327                           ;Menu.c: 136:     tmp = 0;
  3328  000452  DB12               	call	PL82	;call to abstracted procedure
  3329                           
  3330                           ;Menu.c: 137:     UcheckExists();
  3331  000454  ECF2  F00F         	call	_UcheckExists	;wreg free
  3332                           
  3333                           ;Menu.c: 138:     SMSoff();
  3334  000458  ECDC  F00F         	call	_SMSoff	;wreg free
  3335                           
  3336                           ;Menu.c: 139:     state = 10;
  3337  00045C  0E0A               	movlw	10
  3338  00045E  6E2F               	movwf	menu@state^0,c
  3339  000460  0C0A               	retlw	10
  3340  000462                     l6516:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;Menu.c: 143:    if (!UcheckExistsNotFinished()) {
  3344  000462  EC70  F00F         	call	_UcheckExistsNotFinished	;wreg free
  3345  000466  B0D8               	btfsc	status,0,c
  3346  000468  0012               	return	
  3347                           
  3348                           ;Menu.c: 144:     indexUsuari = UcheckExistsGetError();
  3349  00046A  ECF0  F00F         	call	_UcheckExistsGetError	;wreg free
  3350  00046E  6E31               	movwf	_indexUsuari^0,c
  3351                           
  3352                           ;Menu.c: 145:     state = 11;
  3353  000470  0E0B               	movlw	11
  3354  000472  6E2F               	movwf	menu@state^0,c
  3355  000474  0C0B               	retlw	11
  3356  000476                     l540:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;Menu.c: 149:    if (!loginNOTRegister && indexUsuari == -1) {
  3360  000476  BE78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3361  000478  D006               	goto	l541
  3362                           
  3363                           ; BSR set to: 0
  3364  00047A  2831               	incf	_indexUsuari^0,w,c
  3365  00047C  E104               	bnz	l541
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;Menu.c: 150:     URegister();
  3369  00047E  ECF4  F00F         	call	_URegister	;wreg free
  3370  000482                     l6526:
  3371                           
  3372                           ;Menu.c: 151:     state = 0;
  3373  000482  6A2F               	clrf	menu@state^0,c
  3374                           
  3375                           ;Menu.c: 152:    }
  3376  000484  0012               	return	
  3377  000486                     l541:
  3378                           
  3379                           ; BSR set to: 0
  3380  000486  BE78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3381                           
  3382                           ; BSR set to: 0
  3383  000488  BE31               	btfsc	_indexUsuari^0,7,c
  3384  00048A  D003               	goto	l543
  3385  00048C                     u6750:
  3386                           
  3387                           ;Menu.c: 154:     state = 12;
  3388  00048C  0E0C               	movlw	12
  3389  00048E  6E2F               	movwf	menu@state^0,c
  3390                           
  3391                           ;Menu.c: 155:    }
  3392  000490  0C0C               	retlw	12
  3393  000492                     l543:
  3394                           
  3395                           ; BSR set to: 0
  3396  000492  AE78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3397  000494  D002               	goto	u6770
  3398                           
  3399                           ; BSR set to: 0
  3400  000496  2831               	incf	_indexUsuari^0,w,c
  3401  000498  E0F4               	bz	l6526
  3402  00049A                     u6770:
  3403                           
  3404                           ; BSR set to: 0
  3405  00049A  AE78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3406                           
  3407                           ; BSR set to: 0
  3408  00049C  BE31               	btfsc	_indexUsuari^0,7,c
  3409  00049E  D7F6               	goto	u6750
  3410  0004A0  D7F0               	goto	l6526
  3411  0004A2                     l6538:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Menu.c: 164:    LcClear();
  3415  0004A2  ECA5  F00E         	call	_LcClear	;wreg free
  3416                           
  3417                           ;Menu.c: 165:    SiFerMenu();
  3418  0004A6  ECF6  F00F         	call	_SiFerMenu	;wreg free
  3419                           
  3420                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3421  0004AA  5032               	movf	_menuDalt^0,w,c
  3422  0004AC  EC76  F00F         	call	_GLCDMostraMenu
  3423                           
  3424                           ;Menu.c: 167:    novaDireccio = -1;
  3425  0004B0  6851               	setf	_novaDireccio^0,c
  3426                           
  3427                           ;Menu.c: 168:    NovaTecla = -1;
  3428  0004B2  6853               	setf	_NovaTecla^0,c
  3429                           
  3430                           ;Menu.c: 169:    state = 13;
  3431  0004B4  0E0D               	movlw	13
  3432  0004B6  6E2F               	movwf	menu@state^0,c
  3433                           
  3434                           ;Menu.c: 170:   break;
  3435  0004B8  0C0D               	retlw	13
  3436  0004BA                     l6550:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3440  0004BA  0E08               	movlw	8
  3441  0004BC  1851               	xorwf	_novaDireccio^0,w,c
  3442  0004BE  E105               	bnz	l6558
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3446  0004C0  0E04               	movlw	4
  3447  0004C2  6032               	cpfslt	_menuDalt^0,c
  3448  0004C4  D7E3               	goto	u6750
  3449                           
  3450                           ; BSR set to: 0
  3451  0004C6  2A32               	incf	_menuDalt^0,f,c
  3452  0004C8  D7E1               	goto	u6750
  3453  0004CA                     l6558:
  3454                           
  3455                           ; BSR set to: 0
  3456  0004CA  0E02               	movlw	2
  3457  0004CC  1851               	xorwf	_novaDireccio^0,w,c
  3458  0004CE  E104               	bnz	l6566
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3462  0004D0  5032               	movf	_menuDalt^0,w,c
  3463  0004D2  E0DC               	bz	u6750
  3464                           
  3465                           ; BSR set to: 0
  3466  0004D4  0632               	decf	_menuDalt^0,f,c
  3467  0004D6  D7DA               	goto	u6750
  3468  0004D8                     l6566:
  3469                           
  3470                           ; BSR set to: 0
  3471  0004D8  0E0B               	movlw	11
  3472  0004DA  1853               	xorwf	_NovaTecla^0,w,c
  3473  0004DC  E10E               	bnz	l6578
  3474                           
  3475                           ; BSR set to: 0
  3476  0004DE  0E03               	movlw	3
  3477  0004E0  1832               	xorwf	_menuDalt^0,w,c
  3478  0004E2  E10B               	bnz	l6578
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;Menu.c: 181:     NoFerMenu();
  3482  0004E4  ECFA  F00F         	call	_NoFerMenu	;wreg free
  3483                           
  3484                           ;Menu.c: 182:     LcClear();
  3485  0004E8  ECA5  F00E         	call	_LcClear	;wreg free
  3486                           
  3487                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3488  0004EC  0EC6               	movlw	low STR_5
  3489  0004EE  DAA5               	call	PL6	;call to abstracted procedure
  3490  0004F0  EC82  F00F         	call	_LcNewString	;wreg free
  3491                           
  3492                           ;Menu.c: 184:     state = 14;
  3493  0004F4  0E0E               	movlw	14
  3494  0004F6  6E2F               	movwf	menu@state^0,c
  3495                           
  3496                           ;Menu.c: 185:    }
  3497  0004F8  0C0E               	retlw	14
  3498  0004FA                     l6578:
  3499                           
  3500                           ; BSR set to: 0
  3501  0004FA  0E0B               	movlw	11
  3502  0004FC  1853               	xorwf	_NovaTecla^0,w,c
  3503  0004FE  E10E               	bnz	l6592
  3504                           
  3505                           ; BSR set to: 0
  3506  000500  0432               	decf	_menuDalt^0,w,c
  3507  000502  E10C               	bnz	l6592
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;Menu.c: 187:     LcClear();
  3511  000504  ECA5  F00E         	call	_LcClear	;wreg free
  3512                           
  3513                           ;Menu.c: 188:     NoFerMenu();
  3514  000508  ECFA  F00F         	call	_NoFerMenu	;wreg free
  3515                           
  3516                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3517  00050C  0EA2               	movlw	low STR_6
  3518  00050E  DA95               	call	PL6	;call to abstracted procedure
  3519  000510  EC82  F00F         	call	_LcNewString	;wreg free
  3520                           
  3521                           ;Menu.c: 190:     NovaTecla = -1;
  3522  000514  6853               	setf	_NovaTecla^0,c
  3523                           
  3524                           ;Menu.c: 191:     state = 16;
  3525  000516  0E10               	movlw	16
  3526  000518  6E2F               	movwf	menu@state^0,c
  3527                           
  3528                           ;Menu.c: 192:    }
  3529  00051A  0C10               	retlw	16
  3530  00051C                     l6592:
  3531                           
  3532                           ; BSR set to: 0
  3533  00051C  5032               	movf	_menuDalt^0,w,c
  3534  00051E  E112               	bnz	l6608
  3535                           
  3536                           ; BSR set to: 0
  3537  000520  0E0B               	movlw	11
  3538  000522  1853               	xorwf	_NovaTecla^0,w,c
  3539  000524  E10F               	bnz	l6608
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;Menu.c: 194:     NoFerMenu();
  3543  000526  ECFA  F00F         	call	_NoFerMenu	;wreg free
  3544                           
  3545                           ;Menu.c: 195:     NovaTecla = -1;
  3546  00052A  6853               	setf	_NovaTecla^0,c
  3547                           
  3548                           ;Menu.c: 196:     LcClear();
  3549  00052C  ECA5  F00E         	call	_LcClear	;wreg free
  3550                           
  3551                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3552  000530  0E92               	movlw	low STR_7
  3553  000532  DA83               	call	PL6	;call to abstracted procedure
  3554  000534  EC82  F00F         	call	_LcNewString	;wreg free
  3555                           
  3556                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3557  000538  5031               	movf	_indexUsuari^0,w,c
  3558  00053A  ECA2  F00F         	call	_JJuguem
  3559  00053E                     l6606:
  3560                           
  3561                           ;Menu.c: 199:     state = 21;
  3562  00053E  0E15               	movlw	21
  3563  000540  6E2F               	movwf	menu@state^0,c
  3564                           
  3565                           ;Menu.c: 200:    }
  3566  000542  0C15               	retlw	21
  3567  000544                     l6608:
  3568                           
  3569                           ; BSR set to: 0
  3570  000544  0E0B               	movlw	11
  3571  000546  1853               	xorwf	_NovaTecla^0,w,c
  3572  000548  E10E               	bnz	l6624
  3573                           
  3574                           ; BSR set to: 0
  3575  00054A  0E04               	movlw	4
  3576  00054C  1832               	xorwf	_menuDalt^0,w,c
  3577  00054E  E10B               	bnz	l6624
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;Menu.c: 202:     NoFerMenu();
  3581  000550  ECFA  F00F         	call	_NoFerMenu	;wreg free
  3582                           
  3583                           ;Menu.c: 203:     LcClear();
  3584  000554  ECA5  F00E         	call	_LcClear	;wreg free
  3585                           
  3586                           ;Menu.c: 204:     menuDalt = 0;
  3587  000558  6A32               	clrf	_menuDalt^0,c
  3588                           
  3589                           ;Menu.c: 205:     NovaTecla = -1;
  3590  00055A  6853               	setf	_NovaTecla^0,c
  3591                           
  3592                           ;Menu.c: 206:     calculateShowUsers();
  3593  00055C  ECEC  F00F         	call	_calculateShowUsers	;wreg free
  3594                           
  3595                           ;Menu.c: 207:     state = 30;
  3596  000560  0E1E               	movlw	30
  3597  000562  6E2F               	movwf	menu@state^0,c
  3598                           
  3599                           ;Menu.c: 208:    }
  3600  000564  0C1E               	retlw	30
  3601  000566                     l6624:
  3602                           
  3603                           ; BSR set to: 0
  3604  000566  0E0B               	movlw	11
  3605  000568  1853               	xorwf	_NovaTecla^0,w,c
  3606  00056A  A4D8               	btfss	status,2,c
  3607  00056C  0012               	return	
  3608                           
  3609                           ; BSR set to: 0
  3610  00056E  0E02               	movlw	2
  3611  000570  1832               	xorwf	_menuDalt^0,w,c
  3612  000572  A4D8               	btfss	status,2,c
  3613  000574  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616  000576  0E00               	movlw	0
  3617  000578  EC2E  F00F         	call	_UgetTop5
  3618  00057C  0AFF               	xorlw	255
  3619  00057E  B4D8               	btfsc	status,2,c
  3620  000580  0012               	return	
  3621                           
  3622                           ;Menu.c: 210:     NoFerMenu();
  3623  000582  ECFA  F00F         	call	_NoFerMenu	;wreg free
  3624                           
  3625                           ;Menu.c: 211:     LcClear();
  3626  000586  ECA5  F00E         	call	_LcClear	;wreg free
  3627                           
  3628                           ;Menu.c: 212:     menuDalt = 0;
  3629  00058A  6A32               	clrf	_menuDalt^0,c
  3630                           
  3631                           ;Menu.c: 213:     NovaTecla = -1;
  3632  00058C  6853               	setf	_NovaTecla^0,c
  3633  00058E                     l6638:
  3634                           
  3635                           ;Menu.c: 214:     state = 31;
  3636  00058E  0E1F               	movlw	31
  3637  000590  6E2F               	movwf	menu@state^0,c
  3638  000592  0C1F               	retlw	31
  3639  000594                     l6640:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;Menu.c: 218:    if (LcLliure()) {
  3643  000594  EC88  F00F         	call	_LcLliure	;wreg free
  3644  000598  A0D8               	btfss	status,0,c
  3645  00059A  0012               	return	
  3646                           
  3647                           ;Menu.c: 219:     LcNewString(UgetUserName(indexUsuari));
  3648  00059C  5031               	movf	_indexUsuari^0,w,c
  3649  00059E  EC24  F00F         	call	_UgetUserName
  3650  0005A2  DA59               	call	PL40	;call to abstracted procedure
  3651  0005A4  EC82  F00F         	call	_LcNewString	;wreg free
  3652                           
  3653                           ;Menu.c: 220:     TiResetTics(timerMenu);
  3654  0005A8  5033               	movf	_timerMenu^0,w,c
  3655  0005AA  EC00  F00F         	call	_TiResetTics
  3656                           
  3657                           ;Menu.c: 221:     state = 15;
  3658  0005AE  0E0F               	movlw	15
  3659  0005B0  6E2F               	movwf	menu@state^0,c
  3660  0005B2  0C0F               	retlw	15
  3661  0005B4                     l6648:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;Menu.c: 225:    if (TiGetTics(timerMenu) > 2410) {
  3665  0005B4  5033               	movf	_timerMenu^0,w,c
  3666  0005B6  EC5C  F00E         	call	_TiGetTics
  3667  0005BA  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  3668  0005BC  0012               	return	
  3669  0005BE  0E6B               	movlw	107
  3670  0005C0  5C66               	subwf	?_TiGetTics^0,w,c
  3671  0005C2  0E09               	movlw	9
  3672  0005C4  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  3673  0005C6  E301 D75C          	bc	l6526
  3674  0005CA  0012               	return	
  3675  0005CC                     l6652:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;Menu.c: 230:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3679  0005CC  EC88  F00F         	call	_LcLliure	;wreg free
  3680  0005D0  E347               	bnc	l6718
  3681  0005D2  BE53               	btfsc	_NovaTecla^0,7,c
  3682  0005D4  D045               	goto	l6718
  3683  0005D6  5053               	movf	_NovaTecla^0,w,c
  3684  0005D8  0A80               	xorlw	128
  3685  0005DA  0F76               	addlw	-138
  3686  0005DC  E241               	bc	l6718
  3687                           
  3688                           ;Menu.c: 231:     LcGotoXY(0,1);
  3689  0005DE  DA38               	call	PL32	;call to abstracted procedure
  3690  0005E0  EC04  F00E         	call	_LcGotoXY
  3691                           
  3692                           ;Menu.c: 232:     horaTmp[0] = NovaTecla+48;
  3693  0005E4  5053               	movf	_NovaTecla^0,w,c
  3694  0005E6  0F30               	addlw	48
  3695  0005E8  6E41               	movwf	_horaTmp^0,c
  3696                           
  3697                           ;Menu.c: 233:     LcPutChar(horaTmp[0]);
  3698  0005EA  5041               	movf	_horaTmp^0,w,c
  3699  0005EC  EC29  F00D         	call	_LcPutChar
  3700                           
  3701                           ;Menu.c: 234:     NovaTecla = -1;
  3702  0005F0  6853               	setf	_NovaTecla^0,c
  3703                           
  3704                           ;Menu.c: 235:     state = 17;
  3705  0005F2  0E11               	movlw	17
  3706  0005F4                     L1:
  3707  0005F4  6E2F               	movwf	menu@state^0,c
  3708                           
  3709                           ;Menu.c: 236:    }
  3710  0005F6  0012               	return	
  3711  0005F8                     L2:
  3712  0005F8  1853               	xorwf	_NovaTecla^0,w,c
  3713  0005FA  E101 D747          	bz	u6750
  3714  0005FE  0012               	return	
  3715  000600                     l6672:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;Menu.c: 242:    if (NovaTecla > -1 && NovaTecla < 10) {
  3719  000600  BE53               	btfsc	_NovaTecla^0,7,c
  3720  000602  D02E               	goto	l6718
  3721                           
  3722                           ; BSR set to: 0
  3723  000604  5053               	movf	_NovaTecla^0,w,c
  3724  000606  0A80               	xorlw	128
  3725  000608  0F76               	addlw	-138
  3726  00060A  E22A               	bc	l6718
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;Menu.c: 243:     horaTmp[1] = NovaTecla+48;
  3730  00060C  5053               	movf	_NovaTecla^0,w,c
  3731  00060E  0F30               	addlw	48
  3732  000610  6E42               	movwf	(_horaTmp+1)^0,c
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;Menu.c: 244:     LcPutChar(horaTmp[1]);
  3736  000612  5042               	movf	(_horaTmp+1)^0,w,c
  3737  000614  EC29  F00D         	call	_LcPutChar
  3738                           
  3739                           ;Menu.c: 245:     NovaTecla = -1;
  3740  000618  6853               	setf	_NovaTecla^0,c
  3741                           
  3742                           ;Menu.c: 246:     LcPutChar(':');
  3743  00061A  0E3A               	movlw	58
  3744  00061C  EC29  F00D         	call	_LcPutChar
  3745                           
  3746                           ;Menu.c: 247:     state = 18;
  3747  000620  0E12               	movlw	18
  3748  000622  D7E8               	goto	L1
  3749  000624                     l6690:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;Menu.c: 254:    if (NovaTecla > -1 && NovaTecla < 10) {
  3753  000624  BE53               	btfsc	_NovaTecla^0,7,c
  3754  000626  D01C               	goto	l6718
  3755                           
  3756                           ; BSR set to: 0
  3757  000628  5053               	movf	_NovaTecla^0,w,c
  3758  00062A  0A80               	xorlw	128
  3759  00062C  0F76               	addlw	-138
  3760  00062E  E218               	bc	l6718
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;Menu.c: 255:     horaTmp[2] = NovaTecla+48;
  3764  000630  5053               	movf	_NovaTecla^0,w,c
  3765  000632  0F30               	addlw	48
  3766  000634  6E43               	movwf	(_horaTmp+2)^0,c
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;Menu.c: 256:     LcPutChar(horaTmp[2]);
  3770  000636  5043               	movf	(_horaTmp+2)^0,w,c
  3771  000638  EC29  F00D         	call	_LcPutChar
  3772                           
  3773                           ;Menu.c: 257:     NovaTecla = -1;
  3774  00063C  6853               	setf	_NovaTecla^0,c
  3775                           
  3776                           ;Menu.c: 258:     state = 19;
  3777  00063E  0E13               	movlw	19
  3778  000640  D7D9               	goto	L1
  3779  000642                     l6706:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;Menu.c: 265:    if (NovaTecla > -1 && NovaTecla < 10) {
  3783  000642  BE53               	btfsc	_NovaTecla^0,7,c
  3784  000644  D00D               	goto	l6718
  3785                           
  3786                           ; BSR set to: 0
  3787  000646  5053               	movf	_NovaTecla^0,w,c
  3788  000648  0A80               	xorlw	128
  3789  00064A  0F76               	addlw	-138
  3790  00064C  E209               	bc	l6718
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;Menu.c: 266:     horaTmp[3] = NovaTecla+48;
  3794  00064E  5053               	movf	_NovaTecla^0,w,c
  3795  000650  0F30               	addlw	48
  3796  000652  6E44               	movwf	(_horaTmp+3)^0,c
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;Menu.c: 267:     LcPutChar(horaTmp[3]);
  3800  000654  5044               	movf	(_horaTmp+3)^0,w,c
  3801  000656  EC29  F00D         	call	_LcPutChar
  3802                           
  3803                           ;Menu.c: 268:     NovaTecla = -1;
  3804  00065A  6853               	setf	_NovaTecla^0,c
  3805                           
  3806                           ;Menu.c: 269:     state = 20;
  3807  00065C  0E14               	movlw	20
  3808  00065E  D7CA               	goto	L1
  3809  000660                     l6718:
  3810                           
  3811                           ; BSR set to: 0
  3812  000660  0E0A               	movlw	10
  3813  000662  D7CA               	goto	L2
  3814  000664                     l6722:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;Menu.c: 276:    if (NovaTecla == 11) {
  3818  000664  0E0B               	movlw	11
  3819  000666  1853               	xorwf	_NovaTecla^0,w,c
  3820  000668  E1FB               	bnz	l6718
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;Menu.c: 277:     HActualitzaHora(horaTmp);
  3824  00066A  0E41               	movlw	low _horaTmp
  3825  00066C  6E66               	movwf	HActualitzaHora@nova^0,c
  3826  00066E  ECEA  F00D         	call	_HActualitzaHora	;wreg free
  3827                           
  3828                           ;Menu.c: 278:     NovaTecla = -1;
  3829  000672  6853               	setf	_NovaTecla^0,c
  3830  000674  D70B               	goto	u6750
  3831  000676                     l6734:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;Menu.c: 286:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3835  000676  0E0A               	movlw	10
  3836  000678  1853               	xorwf	_NovaTecla^0,w,c
  3837  00067A  E103               	bnz	u7130
  3838                           
  3839                           ; BSR set to: 0
  3840  00067C  EC88  F00F         	call	_LcLliure	;wreg free
  3841  000680  E203               	bc	u7140
  3842  000682                     u7130:
  3843  000682  EC64  F00F         	call	_checkHoraAcabat	;wreg free
  3844  000686  E307               	bnc	l6746
  3845  000688                     u7140:
  3846                           
  3847                           ;Menu.c: 287:     LcClear();
  3848  000688  ECA5  F00E         	call	_LcClear	;wreg free
  3849                           
  3850                           ;Menu.c: 288:     JendGame();
  3851  00068C  ECFC  F00F         	call	_JendGame	;wreg free
  3852                           
  3853                           ;Menu.c: 289:     state = 22;
  3854  000690  0E16               	movlw	22
  3855  000692  6E2F               	movwf	menu@state^0,c
  3856                           
  3857                           ;Menu.c: 290:    }
  3858  000694  0C16               	retlw	22
  3859  000696                     l6746:
  3860  000696  5053               	movf	_NovaTecla^0,w,c
  3861  000698  0A80               	xorlw	128
  3862  00069A  0F7F               	addlw	-129
  3863  00069C  E309               	bnc	l6756
  3864  00069E  5053               	movf	_NovaTecla^0,w,c
  3865  0006A0  0A80               	xorlw	128
  3866  0006A2  0F76               	addlw	-138
  3867  0006A4  E205               	bc	l6756
  3868                           
  3869                           ;Menu.c: 292:     JnovaTecla(NovaTecla);
  3870  0006A6  5053               	movf	_NovaTecla^0,w,c
  3871  0006A8  EC9A  F00F         	call	_JnovaTecla
  3872                           
  3873                           ;Menu.c: 293:     NovaTecla = -1;
  3874  0006AC  6853               	setf	_NovaTecla^0,c
  3875  0006AE  D747               	goto	l6606
  3876  0006B0                     l6756:
  3877  0006B0  BE51               	btfsc	_novaDireccio^0,7,c
  3878  0006B2  0012               	return	
  3879                           
  3880                           ;Menu.c: 297:     JnovaDireccio(novaDireccio);
  3881  0006B4  5051               	movf	_novaDireccio^0,w,c
  3882  0006B6  EC9E  F00F         	call	_JnovaDireccio
  3883                           
  3884                           ;Menu.c: 298:     novaDireccio = -1;
  3885  0006BA  6851               	setf	_novaDireccio^0,c
  3886  0006BC  D740               	goto	l6606
  3887  0006BE                     l6764:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;Menu.c: 303:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3891  0006BE  ECF8  F00F         	call	_SIOHaAcabatPuntuacions	;wreg free
  3892  0006C2  0900               	iorlw	0
  3893  0006C4  B4D8               	btfsc	status,2,c
  3894  0006C6  0012               	return	
  3895  0006C8  0E0B               	movlw	11
  3896  0006CA  D796               	goto	L2
  3897  0006CC                     l6770:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;Menu.c: 308:    if (LcLliure()) {
  3901  0006CC  EC88  F00F         	call	_LcLliure	;wreg free
  3902  0006D0  A0D8               	btfss	status,0,c
  3903  0006D2  0012               	return	
  3904                           
  3905                           ;Menu.c: 309:     LcGotoXY(0,0);
  3906  0006D4  0E00               	movlw	0
  3907  0006D6  6E6E               	movwf	LcGotoXY@Row^0,c
  3908  0006D8  EC04  F00E         	call	_LcGotoXY
  3909                           
  3910                           ;Menu.c: 310:     LcNewString(getArrayShowUsers(menuDalt));
  3911  0006DC  5032               	movf	_menuDalt^0,w,c
  3912  0006DE  ECE4  F00E         	call	_getArrayShowUsers
  3913  0006E2  D9B1               	call	PL28	;call to abstracted procedure
  3914  0006E4  EC82  F00F         	call	_LcNewString	;wreg free
  3915                           
  3916                           ;Menu.c: 311:     menuDalt++;
  3917  0006E8  2A32               	incf	_menuDalt^0,f,c
  3918                           
  3919                           ;Menu.c: 312:     state = 24;
  3920  0006EA  0E18               	movlw	24
  3921  0006EC  6E2F               	movwf	menu@state^0,c
  3922  0006EE  0C18               	retlw	24
  3923  0006F0                     l6778:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;Menu.c: 316:    if (LcLliure()) {
  3927  0006F0  EC88  F00F         	call	_LcLliure	;wreg free
  3928  0006F4  A0D8               	btfss	status,0,c
  3929  0006F6  0012               	return	
  3930                           
  3931                           ;Menu.c: 317:     if (menuDalt < UgetNumUsuaris()){
  3932  0006F8  ECEE  F00F         	call	_UgetNumUsuaris	;wreg free
  3933  0006FC  6032               	cpfslt	_menuDalt^0,c
  3934  0006FE  D00B               	goto	l609
  3935                           
  3936                           ;Menu.c: 318:       LcGotoXY(0,1);
  3937  000700  D9A7               	call	PL32	;call to abstracted procedure
  3938  000702  EC04  F00E         	call	_LcGotoXY
  3939                           
  3940                           ;Menu.c: 319:       LcNewString(getArrayShowUsers(menuDalt));
  3941  000706  5032               	movf	_menuDalt^0,w,c
  3942  000708  ECE4  F00E         	call	_getArrayShowUsers
  3943  00070C  D99C               	call	PL28	;call to abstracted procedure
  3944  00070E  EC82  F00F         	call	_LcNewString	;wreg free
  3945                           
  3946                           ;Menu.c: 320:       menuDalt++;
  3947  000712  2A32               	incf	_menuDalt^0,f,c
  3948                           
  3949                           ;Menu.c: 321:     } else {
  3950  000714  D001               	goto	l6786
  3951  000716                     l609:
  3952                           
  3953                           ;Menu.c: 322:       menuDalt = 0;
  3954  000716  6A32               	clrf	_menuDalt^0,c
  3955  000718                     l6786:
  3956                           
  3957                           ;Menu.c: 324:     state = 25;
  3958  000718  0E19               	movlw	25
  3959  00071A  6E2F               	movwf	menu@state^0,c
  3960  00071C  0C19               	retlw	25
  3961  00071E                     l6788:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;Menu.c: 328:    if (LcLliure()) {
  3965  00071E  EC88  F00F         	call	_LcLliure	;wreg free
  3966  000722  A0D8               	btfss	status,0,c
  3967  000724  0012               	return	
  3968                           
  3969                           ;Menu.c: 329:     if (menuDalt == UgetNumUsuaris()){
  3970  000726  ECEE  F00F         	call	_UgetNumUsuaris	;wreg free
  3971  00072A  1832               	xorwf	_menuDalt^0,w,c
  3972  00072C  E101               	bnz	l6794
  3973                           
  3974                           ;Menu.c: 330:       menuDalt = 0;
  3975  00072E  6A32               	clrf	_menuDalt^0,c
  3976  000730                     l6794:
  3977                           
  3978                           ;Menu.c: 332:     LcGotoXY(16,0);
  3979  000730  D9A0               	call	PL80	;call to abstracted procedure
  3980  000732  EC04  F00E         	call	_LcGotoXY
  3981                           
  3982                           ;Menu.c: 333:     LcNewString(getArrayShowUsers(menuDalt));
  3983  000736  5032               	movf	_menuDalt^0,w,c
  3984  000738  ECE4  F00E         	call	_getArrayShowUsers
  3985  00073C  D984               	call	PL28	;call to abstracted procedure
  3986  00073E  EC82  F00F         	call	_LcNewString	;wreg free
  3987                           
  3988                           ;Menu.c: 334:     state = 26;
  3989  000742  0E1A               	movlw	26
  3990  000744  6E2F               	movwf	menu@state^0,c
  3991  000746  0C1A               	retlw	26
  3992  000748                     l6798:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;Menu.c: 338:    if (LcLliure()) {
  3996  000748  EC88  F00F         	call	_LcLliure	;wreg free
  3997  00074C  A0D8               	btfss	status,0,c
  3998  00074E  0012               	return	
  3999                           
  4000                           ;Menu.c: 339:     if (menuDalt+1 < UgetNumUsuaris()){
  4001  000750  ECEE  F00F         	call	_UgetNumUsuaris	;wreg free
  4002  000754  0100               	movlb	0	; () banked
  4003  000756  6FC7               	movwf	??_menu& (0+255),b
  4004  000758  6BC8               	clrf	(??_menu+1)& (0+255),b
  4005  00075A  5032               	movf	_menuDalt^0,w,c
  4006  00075C  6FC9               	movwf	(??_menu+2)& (0+255),b
  4007  00075E  6BCA               	clrf	(??_menu+3)& (0+255),b
  4008  000760  2BC9               	incf	(??_menu+2)& (0+255),f,b
  4009  000762  0E00               	movlw	0
  4010  000764  23CA               	addwfc	(??_menu+3)& (0+255),f,b
  4011  000766  51C7               	movf	??_menu& (0+255),w,b
  4012  000768  5DC9               	subwf	(??_menu+2)& (0+255),w,b
  4013  00076A  51CA               	movf	(??_menu+3)& (0+255),w,b
  4014  00076C  0A80               	xorlw	128
  4015  00076E  6FCB               	movwf	(??_menu+4)& (0+255),b
  4016  000770  51C8               	movf	(??_menu+1)& (0+255),w,b
  4017  000772  0A80               	xorlw	128
  4018  000774  59CB               	subwfb	(??_menu+4)& (0+255),w,b
  4019  000776  E209               	bc	l6804
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;Menu.c: 340:       LcGotoXY(16,1);
  4023  000778  D979               	call	PL78	;call to abstracted procedure
  4024  00077A  EC04  F00E         	call	_LcGotoXY
  4025                           
  4026                           ;Menu.c: 341:       LcNewString(getArrayShowUsers(menuDalt+1));
  4027  00077E  2832               	incf	_menuDalt^0,w,c
  4028  000780  ECE4  F00E         	call	_getArrayShowUsers
  4029  000784  D960               	call	PL28	;call to abstracted procedure
  4030  000786  EC82  F00F         	call	_LcNewString	;wreg free
  4031  00078A                     l6804:
  4032                           
  4033                           ;Menu.c: 343:     state = 27;
  4034  00078A  0E1B               	movlw	27
  4035  00078C  6E2F               	movwf	menu@state^0,c
  4036  00078E  0C1B               	retlw	27
  4037  000790                     l6806:
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;Menu.c: 347:    if (TiGetTics(timerMenu) > 1205) {
  4041  000790  5033               	movf	_timerMenu^0,w,c
  4042  000792  EC5C  F00E         	call	_TiGetTics
  4043  000796  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  4044  000798  D008               	goto	l6810
  4045  00079A  0EB6               	movlw	182
  4046  00079C  5C66               	subwf	?_TiGetTics^0,w,c
  4047  00079E  0E04               	movlw	4
  4048  0007A0  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  4049  0007A2  E303               	bnc	l6810
  4050                           
  4051                           ;Menu.c: 348:     state = 29;
  4052  0007A4  0E1D               	movlw	29
  4053  0007A6  6E2F               	movwf	menu@state^0,c
  4054                           
  4055                           ;Menu.c: 349:    }
  4056  0007A8  0C1D               	retlw	29
  4057  0007AA                     l6810:
  4058  0007AA  0E0B               	movlw	11
  4059  0007AC  1853               	xorwf	_NovaTecla^0,w,c
  4060  0007AE  A4D8               	btfss	status,2,c
  4061  0007B0  0012               	return	
  4062  0007B2                     u7280:
  4063                           
  4064                           ;Menu.c: 351:     menuDalt = 0;
  4065  0007B2  6A32               	clrf	_menuDalt^0,c
  4066  0007B4  D66B               	goto	u6750
  4067  0007B6                     l6816:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;Menu.c: 356:    if (pos > 15) {
  4071  0007B6  0E0F               	movlw	15
  4072  0007B8  6430               	cpfsgt	_pos^0,c
  4073  0007BA  D005               	goto	l6822
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;Menu.c: 357:     LcClear();
  4077  0007BC  ECA5  F00E         	call	_LcClear	;wreg free
  4078  0007C0                     l6820:
  4079                           
  4080                           ;Menu.c: 358:     state = 23;
  4081  0007C0  0E17               	movlw	23
  4082  0007C2  6E2F               	movwf	menu@state^0,c
  4083                           
  4084                           ;Menu.c: 359:    }
  4085  0007C4  0C17               	retlw	23
  4086  0007C6                     l6822:
  4087                           
  4088                           ; BSR set to: 0
  4089  0007C6  0E10               	movlw	16
  4090  0007C8  6030               	cpfslt	_pos^0,c
  4091  0007CA  0C10               	retlw	16
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;Menu.c: 361:     TiResetTics(timerMenu);
  4095  0007CC  5033               	movf	_timerMenu^0,w,c
  4096  0007CE  EC00  F00F         	call	_TiResetTics
  4097                           
  4098                           ;Menu.c: 362:     LcScroll();
  4099  0007D2  ECDF  F00F         	call	_LcScroll	;wreg free
  4100                           
  4101                           ;Menu.c: 363:     pos++;
  4102  0007D6  2A30               	incf	_pos^0,f,c
  4103  0007D8                     l6830:
  4104                           
  4105                           ;Menu.c: 364:     state = 28;
  4106  0007D8  0E1C               	movlw	28
  4107  0007DA  6E2F               	movwf	menu@state^0,c
  4108  0007DC  0C1C               	retlw	28
  4109  0007DE                     l6832:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;Menu.c: 368:    if (LcLliure()) {
  4113  0007DE  EC88  F00F         	call	_LcLliure	;wreg free
  4114  0007E2  A0D8               	btfss	status,0,c
  4115  0007E4  0012               	return	
  4116                           
  4117                           ;Menu.c: 369:     TiResetTics(timerMenu);
  4118  0007E6  5033               	movf	_timerMenu^0,w,c
  4119  0007E8  EC00  F00F         	call	_TiResetTics
  4120                           
  4121                           ;Menu.c: 370:     pos = 0;
  4122  0007EC  6A30               	clrf	_pos^0,c
  4123  0007EE  D7F4               	goto	l6830
  4124  0007F0                     l6840:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;Menu.c: 375:    if (UshowUsersCalculat()) {
  4128  0007F0  EC6A  F00F         	call	_UshowUsersCalculat	;wreg free
  4129  0007F4  E2E5               	bc	l6820
  4130  0007F6  0012               	return	
  4131  0007F8                     l6844:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;Menu.c: 380:    if (LcLliure()) {
  4135  0007F8  EC88  F00F         	call	_LcLliure	;wreg free
  4136  0007FC  A0D8               	btfss	status,0,c
  4137  0007FE  0012               	return	
  4138                           
  4139                           ;Menu.c: 381:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4140  000800  5032               	movf	_menuDalt^0,w,c
  4141  000802  EC2E  F00F         	call	_UgetTop5
  4142  000806  EC24  F00F         	call	_UgetUserName
  4143  00080A  D925               	call	PL40	;call to abstracted procedure
  4144  00080C  EC82  F00F         	call	_LcNewString	;wreg free
  4145                           
  4146                           ;Menu.c: 382:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4147  000810  5032               	movf	_menuDalt^0,w,c
  4148  000812  EC2E  F00F         	call	_UgetTop5
  4149  000816  EC51  F00F         	call	_UgetScore
  4150  00081A  EC7C  F00F         	call	_CToAConverteix
  4151                           
  4152                           ;Menu.c: 383:     state = 32;
  4153  00081E  0E20               	movlw	32
  4154  000820  6E2F               	movwf	menu@state^0,c
  4155  000822  0C20               	retlw	32
  4156  000824                     l6850:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;Menu.c: 387:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4160  000824  EC1B  F000         	call	_CToAHaAcabat	;wreg free
  4161  000828  0AFA               	xorlw	250
  4162  00082A  A4D8               	btfss	status,2,c
  4163  00082C  0012               	return	
  4164  00082E  EC88  F00F         	call	_LcLliure	;wreg free
  4165  000832  A0D8               	btfss	status,0,c
  4166  000834  0012               	return	
  4167                           
  4168                           ;Menu.c: 388:     LcPutChar(':');
  4169  000836  0E3A               	movlw	58
  4170  000838  EC29  F00D         	call	_LcPutChar
  4171                           
  4172                           ;Menu.c: 389:     LcGotoXY(0,1);
  4173  00083C  D909               	call	PL32	;call to abstracted procedure
  4174  00083E  EC04  F00E         	call	_LcGotoXY
  4175                           
  4176                           ;Menu.c: 390:     LcNewString(CToAobtenir());
  4177  000842  ECFE  F00F         	call	_CToAobtenir	;wreg free
  4178  000846  D90C               	call	PL44	;call to abstracted procedure
  4179  000848  EC82  F00F         	call	_LcNewString	;wreg free
  4180                           
  4181                           ;Menu.c: 391:     menuDalt++;
  4182  00084C  2A32               	incf	_menuDalt^0,f,c
  4183                           
  4184                           ;Menu.c: 392:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4185  00084E  0E05               	movlw	5
  4186  000850  1832               	xorwf	_menuDalt^0,w,c
  4187  000852  E005               	bz	u7370
  4188  000854  5032               	movf	_menuDalt^0,w,c
  4189  000856  EC2E  F00F         	call	_UgetTop5
  4190  00085A  0AFF               	xorlw	255
  4191  00085C  E101               	bnz	l6864
  4192  00085E                     u7370:
  4193  00085E  6A32               	clrf	_menuDalt^0,c
  4194  000860                     l6864:
  4195                           
  4196                           ;Menu.c: 393:     state = 34;
  4197  000860  0E22               	movlw	34
  4198  000862  6E2F               	movwf	menu@state^0,c
  4199  000864  0C22               	retlw	34
  4200  000866                     l6866:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;Menu.c: 397:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4204  000866  5032               	movf	_menuDalt^0,w,c
  4205  000868  EC2E  F00F         	call	_UgetTop5
  4206  00086C  0AFF               	xorlw	255
  4207  00086E  E104               	bnz	u7390
  4208  000870  0E05               	movlw	5
  4209  000872  1832               	xorwf	_menuDalt^0,w,c
  4210  000874  B4D8               	btfsc	status,2,c
  4211  000876  0012               	return	
  4212  000878                     u7390:
  4213  000878  EC88  F00F         	call	_LcLliure	;wreg free
  4214  00087C  A0D8               	btfss	status,0,c
  4215  00087E  0012               	return	
  4216                           
  4217                           ;Menu.c: 398:     LcGotoXY(16,0);
  4218  000880  D8F8               	call	PL80	;call to abstracted procedure
  4219  000882  EC04  F00E         	call	_LcGotoXY
  4220                           
  4221                           ;Menu.c: 399:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4222  000886  5032               	movf	_menuDalt^0,w,c
  4223  000888  EC2E  F00F         	call	_UgetTop5
  4224  00088C  EC24  F00F         	call	_UgetUserName
  4225  000890  D8E2               	call	PL40	;call to abstracted procedure
  4226  000892  EC82  F00F         	call	_LcNewString	;wreg free
  4227                           
  4228                           ;Menu.c: 400:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4229  000896  5032               	movf	_menuDalt^0,w,c
  4230  000898  EC2E  F00F         	call	_UgetTop5
  4231  00089C  EC51  F00F         	call	_UgetScore
  4232  0008A0  EC7C  F00F         	call	_CToAConverteix
  4233                           
  4234                           ;Menu.c: 401:     state = 35;
  4235  0008A4  0E23               	movlw	35
  4236  0008A6  6E2F               	movwf	menu@state^0,c
  4237  0008A8  0C23               	retlw	35
  4238  0008AA                     l6876:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;Menu.c: 405:    if (LcLliure() && CToAHaAcabat() == 250) {
  4242  0008AA  EC88  F00F         	call	_LcLliure	;wreg free
  4243  0008AE  A0D8               	btfss	status,0,c
  4244  0008B0  0012               	return	
  4245  0008B2  EC1B  F000         	call	_CToAHaAcabat	;wreg free
  4246  0008B6  0AFA               	xorlw	250
  4247  0008B8  A4D8               	btfss	status,2,c
  4248  0008BA  0012               	return	
  4249                           
  4250                           ;Menu.c: 406:     LcPutChar(':');
  4251  0008BC  0E3A               	movlw	58
  4252  0008BE  EC29  F00D         	call	_LcPutChar
  4253                           
  4254                           ;Menu.c: 407:     LcGotoXY(16,1);
  4255  0008C2  D8D4               	call	PL78	;call to abstracted procedure
  4256  0008C4  EC04  F00E         	call	_LcGotoXY
  4257                           
  4258                           ;Menu.c: 408:     LcNewString(CToAobtenir());
  4259  0008C8  ECFE  F00F         	call	_CToAobtenir	;wreg free
  4260  0008CC  D8C9               	call	PL44	;call to abstracted procedure
  4261  0008CE  EC82  F00F         	call	_LcNewString	;wreg free
  4262                           
  4263                           ;Menu.c: 409:     pos = 0;
  4264  0008D2  6A30               	clrf	_pos^0,c
  4265                           
  4266                           ;Menu.c: 410:     TiResetTics(timerMenu);
  4267  0008D4  5033               	movf	_timerMenu^0,w,c
  4268  0008D6  EC00  F00F         	call	_TiResetTics
  4269  0008DA                     l6888:
  4270                           
  4271                           ;Menu.c: 411:     state = 37;
  4272  0008DA  0E25               	movlw	37
  4273  0008DC  6E2F               	movwf	menu@state^0,c
  4274  0008DE  0C25               	retlw	37
  4275  0008E0                     l6890:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;Menu.c: 415:    if (NovaTecla == 11 && LcLliure()) {
  4279  0008E0  0E0B               	movlw	11
  4280  0008E2  1853               	xorwf	_NovaTecla^0,w,c
  4281  0008E4  E104               	bnz	l6898
  4282                           
  4283                           ; BSR set to: 0
  4284  0008E6  EC88  F00F         	call	_LcLliure	;wreg free
  4285  0008EA  E301 D762          	bc	u7280
  4286  0008EE                     l6898:
  4287  0008EE  5033               	movf	_timerMenu^0,w,c
  4288  0008F0  EC5C  F00E         	call	_TiGetTics
  4289  0008F4  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  4290  0008F6  D007               	goto	u7450
  4291  0008F8  0E91               	movlw	145
  4292  0008FA  5C66               	subwf	?_TiGetTics^0,w,c
  4293  0008FC  0E01               	movlw	1
  4294  0008FE  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  4295  000900  E302               	bnc	u7450
  4296  000902  0E01               	movlw	1
  4297  000904  D001               	goto	u7460
  4298  000906                     u7450:
  4299  000906  0E00               	movlw	0
  4300  000908                     u7460:
  4301  000908  0100               	movlb	0	; () banked
  4302  00090A  6FC7               	movwf	??_menu& (0+255),b
  4303  00090C  6BC8               	clrf	(??_menu+1)& (0+255),b
  4304  00090E  EC88  F00F         	call	_LcLliure	;wreg free
  4305  000912  0E01               	movlw	1
  4306  000914  A0D8               	btfss	status,0,c
  4307  000916  0E00               	movlw	0
  4308  000918  0100               	movlb	0	; () banked
  4309  00091A  17C7               	andwf	??_menu& (0+255),f,b
  4310  00091C  6BC8               	clrf	(??_menu+1)& (0+255),b
  4311  00091E  51C7               	movf	??_menu& (0+255),w,b
  4312  000920  11C8               	iorwf	(??_menu+1)& (0+255),w,b
  4313  000922  B4D8               	btfsc	status,2,c
  4314  000924  0012               	return	
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;Menu.c: 420:     state = 38;
  4318  000926  0E26               	movlw	38
  4319  000928  6E2F               	movwf	menu@state^0,c
  4320  00092A  0C26               	retlw	38
  4321  00092C                     l6902:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;Menu.c: 424:    if (pos < 16) {
  4325  00092C  0E10               	movlw	16
  4326  00092E  6030               	cpfslt	_pos^0,c
  4327  000930  D007               	goto	l6912
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;Menu.c: 425:     TiResetTics(timerMenu);
  4331  000932  5033               	movf	_timerMenu^0,w,c
  4332  000934  EC00  F00F         	call	_TiResetTics
  4333                           
  4334                           ;Menu.c: 426:     LcScroll();
  4335  000938  ECDF  F00F         	call	_LcScroll	;wreg free
  4336                           
  4337                           ;Menu.c: 427:     pos++;
  4338  00093C  2A30               	incf	_pos^0,f,c
  4339  00093E  D7CD               	goto	l6888
  4340  000940                     l6912:
  4341                           
  4342                           ; BSR set to: 0
  4343  000940  0E0F               	movlw	15
  4344  000942  6430               	cpfsgt	_pos^0,c
  4345  000944  0C0F               	retlw	15
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;Menu.c: 431:     LcClear();
  4349  000946  ECA5  F00E         	call	_LcClear	;wreg free
  4350  00094A  D621               	goto	l6638
  4351  00094C                     l6920:
  4352  00094C  502F               	movf	menu@state^0,w,c
  4353  00094E  0100               	movlb	0	; () banked
  4354  000950  6FC7               	movwf	??_menu& (0+255),b
  4355  000952  6BC8               	clrf	(??_menu+1)& (0+255),b
  4356                           
  4357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4358                           ; Switch size 1, requested type "space"
  4359                           ; Number of cases is 1, Range of values is 0 to 0
  4360                           ; switch strategies available:
  4361                           ; Name         Instructions Cycles
  4362                           ; simple_byte            4     3 (average)
  4363                           ;	Chosen strategy is simple_byte
  4364  000954  51C8               	movf	(??_menu+1)& (0+255),w,b
  4365  000956  A4D8               	btfss	status,2,c
  4366  000958  0012               	return	
  4367                           
  4368                           ; BSR set to: 0
  4369                           ; Switch size 1, requested type "space"
  4370                           ; Number of cases is 37, Range of values is 0 to 38
  4371                           ; switch strategies available:
  4372                           ; Name         Instructions Cycles
  4373                           ; simple_byte          112    57 (average)
  4374                           ;	Chosen strategy is simple_byte
  4375  00095A  51C7               	movf	??_menu& (0+255),w,b
  4376  00095C  E101 D4CC          	bz	l6376
  4377  000960  0A01               	xorlw	1	; case 1
  4378  000962  E101 D4D2          	bz	l6382
  4379  000966  0A03               	xorlw	3	; case 2
  4380  000968  E101 D4DE          	bz	l6392
  4381  00096C  0A01               	xorlw	1	; case 3
  4382  00096E  E101 D4EB          	bz	l513
  4383  000972  0A07               	xorlw	7	; case 4
  4384  000974  E101 D4F3          	bz	l6412
  4385  000978  0A01               	xorlw	1	; case 5
  4386  00097A  E101 D4FE          	bz	l6420
  4387  00097E  0A03               	xorlw	3	; case 6
  4388  000980  E101 D50A          	bz	l6430
  4389  000984  0A01               	xorlw	1	; case 7
  4390  000986  E101 D51D          	bz	l6444
  4391  00098A  0A0F               	xorlw	15	; case 8
  4392  00098C  E101 D537          	bz	l6472
  4393  000990  0A01               	xorlw	1	; case 9
  4394  000992  E101 D54A          	bz	l6486
  4395  000996  0A03               	xorlw	3	; case 10
  4396  000998  E101 D563          	bz	l6516
  4397  00099C  0A01               	xorlw	1	; case 11
  4398  00099E  E101 D56A          	bz	l540
  4399  0009A2  0A07               	xorlw	7	; case 12
  4400  0009A4  E101 D57D          	bz	l6538
  4401  0009A8  0A01               	xorlw	1	; case 13
  4402  0009AA  E101 D586          	bz	l6550
  4403  0009AE  0A03               	xorlw	3	; case 14
  4404  0009B0  E101 D5F0          	bz	l6640
  4405  0009B4  0A01               	xorlw	1	; case 15
  4406  0009B6  E101 D5FD          	bz	l6648
  4407  0009BA  0A1F               	xorlw	31	; case 16
  4408  0009BC  E101 D606          	bz	l6652
  4409  0009C0  0A01               	xorlw	1	; case 17
  4410  0009C2  E101 D61D          	bz	l6672
  4411  0009C6  0A03               	xorlw	3	; case 18
  4412  0009C8  E101 D62C          	bz	l6690
  4413  0009CC  0A01               	xorlw	1	; case 19
  4414  0009CE  E101 D638          	bz	l6706
  4415  0009D2  0A07               	xorlw	7	; case 20
  4416  0009D4  E101 D646          	bz	l6722
  4417  0009D8  0A01               	xorlw	1	; case 21
  4418  0009DA  E101 D64C          	bz	l6734
  4419  0009DE  0A03               	xorlw	3	; case 22
  4420  0009E0  E101 D66D          	bz	l6764
  4421  0009E4  0A01               	xorlw	1	; case 23
  4422  0009E6  E101 D671          	bz	l6770
  4423  0009EA  0A0F               	xorlw	15	; case 24
  4424  0009EC  E101 D680          	bz	l6778
  4425  0009F0  0A01               	xorlw	1	; case 25
  4426  0009F2  E101 D694          	bz	l6788
  4427  0009F6  0A03               	xorlw	3	; case 26
  4428  0009F8  E101 D6A6          	bz	l6798
  4429  0009FC  0A01               	xorlw	1	; case 27
  4430  0009FE  E101 D6EE          	bz	l6832
  4431  000A02  0A07               	xorlw	7	; case 28
  4432  000A04  E101 D6C4          	bz	l6806
  4433  000A08  0A01               	xorlw	1	; case 29
  4434  000A0A  E101 D6D4          	bz	l6816
  4435  000A0E  0A03               	xorlw	3	; case 30
  4436  000A10  E101 D6EE          	bz	l6840
  4437  000A14  0A01               	xorlw	1	; case 31
  4438  000A16  E101 D6EF          	bz	l6844
  4439  000A1A  0A3F               	xorlw	63	; case 32
  4440  000A1C  E101 D702          	bz	l6850
  4441  000A20  0A02               	xorlw	2	; case 34
  4442  000A22  E101 D720          	bz	l6866
  4443  000A26  0A01               	xorlw	1	; case 35
  4444  000A28  E101 D73F          	bz	l6876
  4445  000A2C  0A06               	xorlw	6	; case 37
  4446  000A2E  E101 D757          	bz	l6890
  4447  000A32  0A03               	xorlw	3	; case 38
  4448  000A34  E101 D77A          	bz	l6902
  4449  000A38  0012               	return		;funcret
  4450  000A3A                     __end_of_menu:
  4451                           	callstack 0
  4452  000A3A                     PL6:
  4453                           	callstack 24
  4454  000A3A  6E69               	movwf	LcNewString@new_s^0,c
  4455  000A3C  5069               	movf	LcNewString@new_s^0,w,c
  4456  000A3E  A4D8               	btfss	status,2,c
  4457  000A40  0E02               	movlw	high __smallconst
  4458  000A42  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  4459  000A44  0012               	return	
  4460  000A46                     __end_ofPL6:
  4461                           	callstack 0
  4462  000A46                     PL28:
  4463                           	callstack 24
  4464  000A46  C066  F069         	movff	?_getArrayShowUsers,LcNewString@new_s
  4465  000A4A  C067  F06A         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4466  000A4E  0012               	return	
  4467  000A50                     __end_ofPL28:
  4468                           	callstack 0
  4469  000A50                     PL32:
  4470                           	callstack 24
  4471  000A50  0E01               	movlw	1
  4472  000A52  6E6E               	movwf	LcGotoXY@Row^0,c
  4473  000A54  0C00               	retlw	0
  4474  000A56                     __end_ofPL32:
  4475                           	callstack 0
  4476  000A56                     PL40:
  4477                           	callstack 24
  4478  000A56  C066  F069         	movff	?_UgetUserName,LcNewString@new_s
  4479  000A5A  C067  F06A         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4480  000A5E  0012               	return	
  4481  000A60                     __end_ofPL40:
  4482                           	callstack 0
  4483  000A60                     PL44:
  4484                           	callstack 24
  4485  000A60  0100               	movlb	0	; () banked
  4486  000A62  6FC7               	movwf	??_menu& (0+255),b
  4487  000A64  C0C7  F069         	movff	??_menu,LcNewString@new_s
  4488  000A68  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  4489  000A6A  0012               	return	
  4490  000A6C                     __end_ofPL44:
  4491                           	callstack 0
  4492  000A6C                     PL78:
  4493                           	callstack 24
  4494  000A6C  0E01               	movlw	1
  4495  000A6E  6E6E               	movwf	LcGotoXY@Row^0,c
  4496  000A70  0C10               	retlw	16
  4497  000A72                     __end_ofPL78:
  4498                           	callstack 0
  4499  000A72                     PL80:
  4500                           	callstack 24
  4501  000A72  0E00               	movlw	0
  4502  000A74  6E6E               	movwf	LcGotoXY@Row^0,c
  4503  000A76  0C10               	retlw	16
  4504  000A78                     __end_ofPL80:
  4505                           	callstack 0
  4506  000A78                     PL82:
  4507                           	callstack 24
  4508  000A78  6853               	setf	_NovaTecla^0,c
  4509  000A7A  6852               	setf	_novaLletra^0,c
  4510  000A7C  6A34               	clrf	_tmp^0,c
  4511  000A7E  0012               	return	
  4512  000A80                     __end_ofPL82:
  4513                           	callstack 0
  4514  000A80                     PL84:
  4515                           	callstack 24
  4516  000A80  2A34               	incf	_tmp^0,f,c
  4517  000A82  6853               	setf	_NovaTecla^0,c
  4518  000A84  6852               	setf	_novaLletra^0,c
  4519  000A86  0012               	return	
  4520  000A88                     __end_ofPL84:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _getArrayShowUsers *****************
  4524 ;; Defined at:
  4525 ;;		line 73 in file "Usuaris.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  quin            1    wreg     unsigned char 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  quin            1    7[COMRAM] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    5[COMRAM] PTR unsigned char 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1
  4539 ;;      Params:         2       0       0
  4540 ;;      Locals:         1       0       0
  4541 ;;      Temps:          0       0       0
  4542 ;;      Totals:         3       0       0
  4543 ;;Total ram usage:        3 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 2
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_menu
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text19
  4554  001DC8                     __ptext19:
  4555                           	callstack 0
  4556  001DC8                     _getArrayShowUsers:
  4557                           	callstack 27
  4558                           
  4559                           ;incstack = 0
  4560                           ;getArrayShowUsers@quin stored from wreg
  4561  001DC8  6E68               	movwf	getArrayShowUsers@quin^0,c
  4562                           
  4563                           ;Usuaris.c: 75:     return usuaris[arrayShowUsers[quin]].username;
  4564  001DCA  5068               	movf	getArrayShowUsers@quin^0,w,c
  4565  001DCC  0FA1               	addlw	low _arrayShowUsers
  4566  001DCE  6ED9               	movwf	fsr2l,c
  4567  001DD0  6ADA               	clrf	fsr2h,c
  4568  001DD2  50DF               	movf	indf2,w,c
  4569  001DD4  0D17               	mullw	23
  4570  001DD6  0E00               	movlw	low _usuaris
  4571  001DD8  24F3               	addwf	243,w,c
  4572  001DDA  6E66               	movwf	?_getArrayShowUsers^0,c
  4573  001DDC  0E01               	movlw	high _usuaris
  4574  001DDE  20F4               	addwfc	prodh,w,c
  4575  001DE0  6E67               	movwf	(?_getArrayShowUsers+1)^0,c
  4576  001DE2  0012               	return		;funcret
  4577  001DE4                     __end_of_getArrayShowUsers:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _checkHoraAcabat *****************
  4581 ;; Defined at:
  4582 ;;		line 41 in file "Hora.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1
  4596 ;;      Params:         0       0       0
  4597 ;;      Locals:         0       0       0
  4598 ;;      Temps:          0       0       0
  4599 ;;      Totals:         0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 2
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_menu
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text20
  4611  001EC8                     __ptext20:
  4612                           	callstack 0
  4613  001EC8                     _checkHoraAcabat:
  4614                           	callstack 27
  4615                           
  4616                           ;Hora.c: 42:     return tempsAcabat;
  4617                           
  4618                           ;incstack = 0
  4619  001EC8  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4620  001ECA  D002               	goto	l2244
  4621  001ECC  90D8               	bcf	status,0,c
  4622  001ECE  0012               	return	
  4623  001ED0                     l2244:
  4624  001ED0  80D8               	bsf	status,0,c
  4625  001ED2  0012               	return		;funcret
  4626  001ED4                     __end_of_checkHoraAcabat:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _calculateShowUsers *****************
  4630 ;; Defined at:
  4631 ;;		line 176 in file "Usuaris.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		None
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1
  4645 ;;      Params:         0       0       0
  4646 ;;      Locals:         0       0       0
  4647 ;;      Temps:          0       0       0
  4648 ;;      Totals:         0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 2
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_menu
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text21
  4660  001FD8                     __ptext21:
  4661                           	callstack 0
  4662  001FD8                     _calculateShowUsers:
  4663                           	callstack 27
  4664                           
  4665                           ;Usuaris.c: 177:     do_showUsers = 1;
  4666                           
  4667                           ;incstack = 0
  4668  001FD8  8878               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4669  001FDA  0012               	return		;funcret
  4670  001FDC                     __end_of_calculateShowUsers:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _UshowUsersCalculat *****************
  4674 ;; Defined at:
  4675 ;;		line 179 in file "Usuaris.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1
  4689 ;;      Params:         0       0       0
  4690 ;;      Locals:         0       0       0
  4691 ;;      Temps:          0       0       0
  4692 ;;      Totals:         0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 2
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_menu
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text22
  4704  001ED4                     __ptext22:
  4705                           	callstack 0
  4706  001ED4                     _UshowUsersCalculat:
  4707                           	callstack 27
  4708                           
  4709                           ;Usuaris.c: 180:     return !do_showUsers;
  4710                           
  4711                           ;incstack = 0
  4712  001ED4  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4713  001ED6  D002               	goto	l2266
  4714  001ED8  90D8               	bcf	status,0,c
  4715  001EDA  0012               	return	
  4716  001EDC                     l2266:
  4717  001EDC  80D8               	bsf	status,0,c
  4718  001EDE  0012               	return		;funcret
  4719  001EE0                     __end_of_UshowUsersCalculat:
  4720                           	callstack 0
  4721                           
  4722 ;; *************** function _UgetUserName *****************
  4723 ;; Defined at:
  4724 ;;		line 69 in file "Usuaris.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  quin            1    wreg     unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  quin            1    7[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    5[COMRAM] PTR unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, prodl, prodh
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/1
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1
  4738 ;;      Params:         2       0       0
  4739 ;;      Locals:         1       0       0
  4740 ;;      Temps:          0       0       0
  4741 ;;      Totals:         3       0       0
  4742 ;;Total ram usage:        3 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 2
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_menu
  4749 ;;		_motorSIO
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text23
  4754  001E48                     __ptext23:
  4755                           	callstack 0
  4756  001E48                     _UgetUserName:
  4757                           	callstack 27
  4758                           
  4759                           ;incstack = 0
  4760                           ;UgetUserName@quin stored from wreg
  4761  001E48  6E68               	movwf	UgetUserName@quin^0,c
  4762                           
  4763                           ;Usuaris.c: 70:     return usuaris[quin].username;
  4764  001E4A  5068               	movf	UgetUserName@quin^0,w,c
  4765  001E4C  0D17               	mullw	23
  4766  001E4E  0E00               	movlw	low _usuaris
  4767  001E50  24F3               	addwf	243,w,c
  4768  001E52  6E66               	movwf	?_UgetUserName^0,c
  4769  001E54  0E01               	movlw	high _usuaris
  4770  001E56  20F4               	addwfc	prodh,w,c
  4771  001E58  6E67               	movwf	(?_UgetUserName+1)^0,c
  4772  001E5A  0012               	return		;funcret
  4773  001E5C                     __end_of_UgetUserName:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _UgetTop5 *****************
  4777 ;; Defined at:
  4778 ;;		line 292 in file "Usuaris.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  quin            1    wreg     unsigned char 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  quin            1    5[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      char 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1
  4792 ;;      Params:         0       0       0
  4793 ;;      Locals:         1       0       0
  4794 ;;      Temps:          0       0       0
  4795 ;;      Totals:         1       0       0
  4796 ;;Total ram usage:        1 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 2
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_menu
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text24
  4807  001E5C                     __ptext24:
  4808                           	callstack 0
  4809  001E5C                     _UgetTop5:
  4810                           	callstack 27
  4811                           
  4812                           ;incstack = 0
  4813                           ;UgetTop5@quin stored from wreg
  4814  001E5C  6E66               	movwf	UgetTop5@quin^0,c
  4815                           
  4816                           ;Usuaris.c: 293:     return puntuacions[quin].indexStruct;
  4817  001E5E  5066               	movf	UgetTop5@quin^0,w,c
  4818  001E60  0D02               	mullw	2
  4819  001E62  50F3               	movf	243,w,c
  4820  001E64  0F01               	addlw	low _puntuacions
  4821  001E66  D000               	goto	PL64	;call to abstracted procedure
  4822  001E68                     __end_of_UgetTop5:
  4823                           	callstack 0
  4824  001E68                     PL64:
  4825                           	callstack 27
  4826  001E68  6ED9               	movwf	fsr2l,c
  4827  001E6A  6ADA               	clrf	fsr2h,c
  4828  001E6C  50DF               	movf	indf2,w,c
  4829  001E6E  0012               	return		;funcret
  4830  001E70                     __end_ofPL64:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _UgetScore *****************
  4834 ;; Defined at:
  4835 ;;		line 289 in file "Usuaris.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  quin            1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  quin            1    5[COMRAM] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      unsigned char 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1
  4849 ;;      Params:         0       0       0
  4850 ;;      Locals:         1       0       0
  4851 ;;      Temps:          0       0       0
  4852 ;;      Totals:         1       0       0
  4853 ;;Total ram usage:        1 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 2
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_menu
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text25
  4864  001EA2                     __ptext25:
  4865                           	callstack 0
  4866  001EA2                     _UgetScore:
  4867                           	callstack 27
  4868                           
  4869                           ;incstack = 0
  4870                           ;UgetScore@quin stored from wreg
  4871  001EA2  6E66               	movwf	UgetScore@quin^0,c
  4872                           
  4873                           ;Usuaris.c: 290:     return puntuacions[quin].score;
  4874  001EA4  5066               	movf	UgetScore@quin^0,w,c
  4875  001EA6  0D02               	mullw	2
  4876  001EA8  50F3               	movf	243,w,c
  4877  001EAA  0F02               	addlw	low (_puntuacions+1)
  4878  001EAC  EF34  F00F         	goto	PL64	;call to abstracted procedure
  4879  001EB0                     __end_of_UgetScore:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _UgetNumUsuaris *****************
  4883 ;; Defined at:
  4884 ;;		line 45 in file "Usuaris.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      unsigned char 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1
  4898 ;;      Params:         0       0       0
  4899 ;;      Locals:         0       0       0
  4900 ;;      Temps:          0       0       0
  4901 ;;      Totals:         0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 2
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_menu
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text26
  4913  001FDC                     __ptext26:
  4914                           	callstack 0
  4915  001FDC                     _UgetNumUsuaris:
  4916                           	callstack 27
  4917                           
  4918                           ;Usuaris.c: 46:     return numUsuaris;
  4919                           
  4920                           ;incstack = 0
  4921  001FDC  502E               	movf	_numUsuaris^0,w,c
  4922  001FDE  0012               	return		;funcret
  4923  001FE0                     __end_of_UgetNumUsuaris:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _UenviaPas *****************
  4927 ;; Defined at:
  4928 ;;		line 61 in file "Usuaris.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  c               1    wreg     unsigned char 
  4931 ;;  pos             1    5[COMRAM] unsigned char 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  c               1    6[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1
  4943 ;;      Params:         1       0       0
  4944 ;;      Locals:         1       0       0
  4945 ;;      Temps:          0       0       0
  4946 ;;      Totals:         2       0       0
  4947 ;;Total ram usage:        2 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 2
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_menu
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text27
  4958  001E82                     __ptext27:
  4959                           	callstack 0
  4960  001E82                     _UenviaPas:
  4961                           	callstack 27
  4962                           
  4963                           ;incstack = 0
  4964                           ;UenviaPas@c stored from wreg
  4965  001E82  6E67               	movwf	UenviaPas@c^0,c
  4966                           
  4967                           ;Usuaris.c: 62:     tmpPassword[pos] = c;
  4968  001E84  5066               	movf	UenviaPas@pos^0,w,c
  4969  001E86  0F98               	addlw	low _tmpPassword
  4970  001E88  6ED9               	movwf	fsr2l,c
  4971  001E8A  6ADA               	clrf	fsr2h,c
  4972  001E8C  C067  FFDF         	movff	UenviaPas@c,indf2
  4973  001E90  0012               	return		;funcret
  4974  001E92                     __end_of_UenviaPas:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _UenviaChar *****************
  4978 ;; Defined at:
  4979 ;;		line 58 in file "Usuaris.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  c               1    wreg     unsigned char 
  4982 ;;  pos             1    5[COMRAM] unsigned char 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  c               1    6[COMRAM] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1
  4994 ;;      Params:         1       0       0
  4995 ;;      Locals:         1       0       0
  4996 ;;      Temps:          0       0       0
  4997 ;;      Totals:         2       0       0
  4998 ;;Total ram usage:        2 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 2
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_menu
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text28
  5009  001E92                     __ptext28:
  5010                           	callstack 0
  5011  001E92                     _UenviaChar:
  5012                           	callstack 27
  5013                           
  5014                           ;incstack = 0
  5015                           ;UenviaChar@c stored from wreg
  5016  001E92  6E67               	movwf	UenviaChar@c^0,c
  5017                           
  5018                           ;Usuaris.c: 59:     tmpUsername[pos] = c;
  5019  001E94  5066               	movf	UenviaChar@pos^0,w,c
  5020  001E96  0FA9               	addlw	low _tmpUsername
  5021  001E98  6ED9               	movwf	fsr2l,c
  5022  001E9A  6ADA               	clrf	fsr2h,c
  5023  001E9C  C067  FFDF         	movff	UenviaChar@c,indf2
  5024  001EA0  0012               	return		;funcret
  5025  001EA2                     __end_of_UenviaChar:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _UcheckExistsNotFinished *****************
  5029 ;; Defined at:
  5030 ;;		line 52 in file "Usuaris.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;		None               void
  5037 ;; Registers used:
  5038 ;;		status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1
  5044 ;;      Params:         0       0       0
  5045 ;;      Locals:         0       0       0
  5046 ;;      Temps:          0       0       0
  5047 ;;      Totals:         0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_menu
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text29
  5059  001EE0                     __ptext29:
  5060                           	callstack 0
  5061  001EE0                     _UcheckExistsNotFinished:
  5062                           	callstack 27
  5063                           
  5064                           ;Usuaris.c: 53:     return do_check_exists;
  5065                           
  5066                           ;incstack = 0
  5067  001EE0  BC78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5068  001EE2  D002               	goto	l2200
  5069  001EE4  90D8               	bcf	status,0,c
  5070  001EE6  0012               	return	
  5071  001EE8                     l2200:
  5072  001EE8  80D8               	bsf	status,0,c
  5073  001EEA  0012               	return		;funcret
  5074  001EEC                     __end_of_UcheckExistsNotFinished:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _UcheckExistsGetError *****************
  5078 ;; Defined at:
  5079 ;;		line 55 in file "Usuaris.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      char 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1
  5093 ;;      Params:         0       0       0
  5094 ;;      Locals:         0       0       0
  5095 ;;      Temps:          0       0       0
  5096 ;;      Totals:         0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 2
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_menu
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text30
  5108  001FE0                     __ptext30:
  5109                           	callstack 0
  5110  001FE0                     _UcheckExistsGetError:
  5111                           	callstack 27
  5112                           
  5113                           ;Usuaris.c: 56:     return usuariLoguejat;
  5114                           
  5115                           ;incstack = 0
  5116  001FE0  5050               	movf	_usuariLoguejat^0,w,c
  5117  001FE2  0012               	return		;funcret
  5118  001FE4                     __end_of_UcheckExistsGetError:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function _UcheckExists *****************
  5122 ;; Defined at:
  5123 ;;		line 49 in file "Usuaris.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		None
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1
  5137 ;;      Params:         0       0       0
  5138 ;;      Locals:         0       0       0
  5139 ;;      Temps:          0       0       0
  5140 ;;      Totals:         0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 2
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_menu
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text31
  5152  001FE4                     __ptext31:
  5153                           	callstack 0
  5154  001FE4                     _UcheckExists:
  5155                           	callstack 27
  5156                           
  5157                           ;Usuaris.c: 50:     do_check_exists = 1;
  5158                           
  5159                           ;incstack = 0
  5160  001FE4  8C78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5161  001FE6  0012               	return		;funcret
  5162  001FE8                     __end_of_UcheckExists:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _URegister *****************
  5166 ;; Defined at:
  5167 ;;		line 65 in file "Usuaris.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		None
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1
  5181 ;;      Params:         0       0       0
  5182 ;;      Locals:         0       0       0
  5183 ;;      Temps:          0       0       0
  5184 ;;      Totals:         0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 2
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_menu
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text32
  5196  001FE8                     __ptext32:
  5197                           	callstack 0
  5198  001FE8                     _URegister:
  5199                           	callstack 27
  5200                           
  5201                           ;Usuaris.c: 66:     do_register = 1;
  5202                           
  5203                           ;incstack = 0
  5204  001FE8  8A78               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5205  001FEA  0012               	return		;funcret
  5206  001FEC                     __end_of_URegister:
  5207                           	callstack 0
  5208                           
  5209 ;; *************** function _SiFerMenu *****************
  5210 ;; Defined at:
  5211 ;;		line 19 in file "GestioLCD.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      void 
  5218 ;; Registers used:
  5219 ;;		None
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1
  5225 ;;      Params:         0       0       0
  5226 ;;      Locals:         0       0       0
  5227 ;;      Temps:          0       0       0
  5228 ;;      Totals:         0       0       0
  5229 ;;Total ram usage:        0 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 2
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_menu
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text33
  5240  001FEC                     __ptext33:
  5241                           	callstack 0
  5242  001FEC                     _SiFerMenu:
  5243                           	callstack 27
  5244                           
  5245                           ;GestioLCD.c: 20:     ferMenu = 1;
  5246                           
  5247                           ;incstack = 0
  5248  001FEC  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5249  001FEE  0012               	return		;funcret
  5250  001FF0                     __end_of_SiFerMenu:
  5251                           	callstack 0
  5252                           
  5253 ;; *************** function _SMSon *****************
  5254 ;; Defined at:
  5255 ;;		line 129 in file "Ssms.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		None
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1
  5269 ;;      Params:         0       0       0
  5270 ;;      Locals:         0       0       0
  5271 ;;      Temps:          0       0       0
  5272 ;;      Totals:         0       0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; Hardware stack levels required when called: 2
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_menu
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text34
  5284  001FB2                     __ptext34:
  5285                           	callstack 0
  5286  001FB2                     _SMSon:
  5287                           	callstack 27
  5288                           
  5289                           ;Ssms.c: 130:     setSMSon = 1;
  5290                           
  5291                           ;incstack = 0
  5292  001FB2  8079               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5293                           
  5294                           ;Ssms.c: 131:     novaTecla = -1;
  5295  001FB4  6856               	setf	_novaTecla^0,c
  5296  001FB6  0012               	return		;funcret
  5297  001FB8                     __end_of_SMSon:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _SMSoff *****************
  5301 ;; Defined at:
  5302 ;;		line 134 in file "Ssms.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		None
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1
  5316 ;;      Params:         0       0       0
  5317 ;;      Locals:         0       0       0
  5318 ;;      Temps:          0       0       0
  5319 ;;      Totals:         0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_menu
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text35
  5331  001FB8                     __ptext35:
  5332                           	callstack 0
  5333  001FB8                     _SMSoff:
  5334                           	callstack 27
  5335                           
  5336                           ;Ssms.c: 135:     setSMSon = 0;
  5337                           
  5338                           ;incstack = 0
  5339  001FB8  9079               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5340                           
  5341                           ;Ssms.c: 136:     novaTecla = -1;
  5342  001FBA  6856               	setf	_novaTecla^0,c
  5343  001FBC  0012               	return		;funcret
  5344  001FBE                     __end_of_SMSoff:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5348 ;; Defined at:
  5349 ;;		line 36 in file "SIO.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      char 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1
  5363 ;;      Params:         0       0       0
  5364 ;;      Locals:         0       0       0
  5365 ;;      Temps:          0       0       0
  5366 ;;      Totals:         0       0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used: 1
  5369 ;; Hardware stack levels required when called: 2
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_menu
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text36
  5378  001FF0                     __ptext36:
  5379                           	callstack 0
  5380  001FF0                     _SIOHaAcabatPuntuacions:
  5381                           	callstack 27
  5382                           
  5383                           ;SIO.c: 37:     return usuariActualSIO;
  5384                           
  5385                           ;incstack = 0
  5386  001FF0  504B               	movf	_usuariActualSIO^0,w,c
  5387  001FF2  0012               	return		;funcret
  5388  001FF4                     __end_of_SIOHaAcabatPuntuacions:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _NoFerMenu *****************
  5392 ;; Defined at:
  5393 ;;		line 22 in file "GestioLCD.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		None
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1
  5407 ;;      Params:         0       0       0
  5408 ;;      Locals:         0       0       0
  5409 ;;      Temps:          0       0       0
  5410 ;;      Totals:         0       0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_menu
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text37
  5422  001FF4                     __ptext37:
  5423                           	callstack 0
  5424  001FF4                     _NoFerMenu:
  5425                           	callstack 27
  5426                           
  5427                           ;GestioLCD.c: 23:     ferMenu = 0;
  5428                           
  5429                           ;incstack = 0
  5430  001FF4  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5431  001FF6  0012               	return		;funcret
  5432  001FF8                     __end_of_NoFerMenu:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _LcScroll *****************
  5436 ;; Defined at:
  5437 ;;		line 37 in file "LcTLCD.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1
  5451 ;;      Params:         0       0       0
  5452 ;;      Locals:         0       0       0
  5453 ;;      Temps:          0       0       0
  5454 ;;      Totals:         0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 4
  5458 ;; This function calls:
  5459 ;;		_CantaIR
  5460 ;; This function is called by:
  5461 ;;		_menu
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text38
  5466  001FBE                     __ptext38:
  5467                           	callstack 0
  5468  001FBE                     _LcScroll:
  5469                           	callstack 25
  5470                           
  5471                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5472                           
  5473                           ;incstack = 0
  5474  001FBE  0E18               	movlw	24
  5475  001FC0  EFF2  F00E         	goto	_CantaIR
  5476  001FC4                     __end_of_LcScroll:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _JnovaTecla *****************
  5480 ;; Defined at:
  5481 ;;		line 16 in file "Joc.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  tecla           1    wreg     char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  tecla           1    5[COMRAM] char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1
  5495 ;;      Params:         0       0       0
  5496 ;;      Locals:         1       0       0
  5497 ;;      Temps:          0       0       0
  5498 ;;      Totals:         1       0       0
  5499 ;;Total ram usage:        1 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 2
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_menu
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text39
  5510  001F34                     __ptext39:
  5511                           	callstack 0
  5512  001F34                     _JnovaTecla:
  5513                           	callstack 27
  5514                           
  5515                           ;incstack = 0
  5516                           ;JnovaTecla@tecla stored from wreg
  5517  001F34  6E66               	movwf	JnovaTecla@tecla^0,c
  5518                           
  5519                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5520  001F36  C066  F04C         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5521  001F3A  0012               	return		;funcret
  5522  001F3C                     __end_of_JnovaTecla:
  5523                           	callstack 0
  5524                           
  5525 ;; *************** function _JnovaDireccio *****************
  5526 ;; Defined at:
  5527 ;;		line 19 in file "Joc.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  dir             1    wreg     unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  dir             1    5[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1
  5541 ;;      Params:         0       0       0
  5542 ;;      Locals:         1       0       0
  5543 ;;      Temps:          0       0       0
  5544 ;;      Totals:         1       0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 2
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_menu
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text40
  5556  001F3C                     __ptext40:
  5557                           	callstack 0
  5558  001F3C                     _JnovaDireccio:
  5559                           	callstack 27
  5560                           
  5561                           ;incstack = 0
  5562                           ;JnovaDireccio@dir stored from wreg
  5563  001F3C  6E66               	movwf	JnovaDireccio@dir^0,c
  5564                           
  5565                           ;Joc.c: 20:     direccioJoc = dir;
  5566  001F3E  C066  F015         	movff	JnovaDireccio@dir,_direccioJoc
  5567  001F42  0012               	return		;funcret
  5568  001F44                     __end_of_JnovaDireccio:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function _JendGame *****************
  5572 ;; Defined at:
  5573 ;;		line 27 in file "Joc.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		None
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1
  5587 ;;      Params:         0       0       0
  5588 ;;      Locals:         0       0       0
  5589 ;;      Temps:          0       0       0
  5590 ;;      Totals:         0       0       0
  5591 ;;Total ram usage:        0 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 2
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_menu
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text41
  5602  001FF8                     __ptext41:
  5603                           	callstack 0
  5604  001FF8                     _JendGame:
  5605                           	callstack 27
  5606                           
  5607                           ;Joc.c: 28:     jugantJoc = 0;
  5608                           
  5609                           ;incstack = 0
  5610  001FF8  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5611  001FFA  0012               	return		;funcret
  5612  001FFC                     __end_of_JendGame:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _JJuguem *****************
  5616 ;; Defined at:
  5617 ;;		line 13 in file "Joc.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  usuari          1    wreg     unsigned char 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  usuari          1    5[COMRAM] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1
  5631 ;;      Params:         0       0       0
  5632 ;;      Locals:         1       0       0
  5633 ;;      Temps:          0       0       0
  5634 ;;      Totals:         1       0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 2
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_menu
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text42
  5646  001F44                     __ptext42:
  5647                           	callstack 0
  5648  001F44                     _JJuguem:
  5649                           	callstack 27
  5650                           
  5651                           ;incstack = 0
  5652                           ;JJuguem@usuari stored from wreg
  5653  001F44  6E66               	movwf	JJuguem@usuari^0,c
  5654                           
  5655                           ;Joc.c: 14:     usuariJoc = usuari;
  5656  001F46  C066  F04D         	movff	JJuguem@usuari,_usuariJoc
  5657  001F4A  0012               	return		;funcret
  5658  001F4C                     __end_of_JJuguem:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _HActualitzaHora *****************
  5662 ;; Defined at:
  5663 ;;		line 15 in file "Hora.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5666 ;;		 -> horaTmp(4), 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1
  5678 ;;      Params:         1       0       0
  5679 ;;      Locals:         0       0       0
  5680 ;;      Temps:          0       0       0
  5681 ;;      Totals:         1       0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 2
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_menu
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text43
  5693  001BD4                     __ptext43:
  5694                           	callstack 0
  5695  001BD4                     _HActualitzaHora:
  5696                           	callstack 27
  5697                           
  5698                           ;Hora.c: 16:     hora[0] = nova[0];
  5699                           
  5700                           ;incstack = 0
  5701  001BD4  5066               	movf	HActualitzaHora@nova^0,w,c
  5702  001BD6  6ED9               	movwf	fsr2l,c
  5703  001BD8  6ADA               	clrf	fsr2h,c
  5704  001BDA  50DF               	movf	indf2,w,c
  5705  001BDC  6E58               	movwf	_hora^0,c
  5706                           
  5707                           ;Hora.c: 17:     hora[1] = nova[1];
  5708  001BDE  5066               	movf	HActualitzaHora@nova^0,w,c
  5709  001BE0  6ED9               	movwf	fsr2l,c
  5710  001BE2  6ADA               	clrf	fsr2h,c
  5711  001BE4  2AD9               	incf	fsr2l,f,c
  5712  001BE6  50DF               	movf	indf2,w,c
  5713  001BE8  6E59               	movwf	(_hora+1)^0,c
  5714                           
  5715                           ;Hora.c: 18:     hora[3] = nova[2];
  5716  001BEA  5066               	movf	HActualitzaHora@nova^0,w,c
  5717  001BEC  6ED9               	movwf	fsr2l,c
  5718  001BEE  6ADA               	clrf	fsr2h,c
  5719  001BF0  0E02               	movlw	2
  5720  001BF2  26D9               	addwf	fsr2l,f,c
  5721  001BF4  50DF               	movf	indf2,w,c
  5722  001BF6  6E5B               	movwf	(_hora+3)^0,c
  5723                           
  5724                           ;Hora.c: 19:     hora[4] = nova[3];
  5725  001BF8  5066               	movf	HActualitzaHora@nova^0,w,c
  5726  001BFA  6ED9               	movwf	fsr2l,c
  5727  001BFC  6ADA               	clrf	fsr2h,c
  5728  001BFE  0E03               	movlw	3
  5729  001C00  26D9               	addwf	fsr2l,f,c
  5730  001C02  50DF               	movf	indf2,w,c
  5731  001C04  6E5C               	movwf	(_hora+4)^0,c
  5732  001C06  0012               	return		;funcret
  5733  001C08                     __end_of_HActualitzaHora:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _GLCDMostraMenu *****************
  5737 ;; Defined at:
  5738 ;;		line 30 in file "GestioLCD.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  num             1    wreg     unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  num             1    5[COMRAM] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1
  5752 ;;      Params:         0       0       0
  5753 ;;      Locals:         1       0       0
  5754 ;;      Temps:          0       0       0
  5755 ;;      Totals:         1       0       0
  5756 ;;Total ram usage:        1 bytes
  5757 ;; Hardware stack levels used: 1
  5758 ;; Hardware stack levels required when called: 2
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_menu
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text44
  5767  001EEC                     __ptext44:
  5768                           	callstack 0
  5769  001EEC                     _GLCDMostraMenu:
  5770                           	callstack 27
  5771                           
  5772                           ;incstack = 0
  5773                           ;GLCDMostraMenu@num stored from wreg
  5774  001EEC  6E66               	movwf	GLCDMostraMenu@num^0,c
  5775                           
  5776                           ;GestioLCD.c: 31:     newString = 1;
  5777  001EEE  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5778                           
  5779                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5780  001EF0  C066  F023         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5781                           
  5782                           ;GestioLCD.c: 33:     ferMenu = 1;
  5783  001EF4  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5784  001EF6  0012               	return		;funcret
  5785  001EF8                     __end_of_GLCDMostraMenu:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _CToAobtenir *****************
  5789 ;; Defined at:
  5790 ;;		line 7 in file "CtoA.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      PTR unsigned char 
  5797 ;; Registers used:
  5798 ;;		wreg
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/1
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1
  5804 ;;      Params:         2       0       0
  5805 ;;      Locals:         0       0       0
  5806 ;;      Temps:          0       0       0
  5807 ;;      Totals:         2       0       0
  5808 ;;Total ram usage:        2 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 2
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_menu
  5815 ;;		_motorSIO
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text45
  5820  001FFC                     __ptext45:
  5821                           	callstack 0
  5822  001FFC                     _CToAobtenir:
  5823                           	callstack 27
  5824                           
  5825                           ;CtoA.c: 8:     return stringScore;
  5826                           
  5827                           ;incstack = 0
  5828  001FFC  0E5E               	movlw	_stringScore& (0+255)
  5829  001FFE  0012               	return		;funcret
  5830  002000                     __end_of_CToAobtenir:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _CToAHaAcabat *****************
  5834 ;; Defined at:
  5835 ;;		line 10 in file "CtoA.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      unsigned char 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/1
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1
  5849 ;;      Params:         0       0       0
  5850 ;;      Locals:         0       0       0
  5851 ;;      Temps:          0       0       0
  5852 ;;      Totals:         0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; Hardware stack levels required when called: 2
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_menu
  5860 ;;		_motorSIO
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text46
  5865  000036                     __ptext46:
  5866                           	callstack 0
  5867  000036                     _CToAHaAcabat:
  5868                           	callstack 27
  5869                           
  5870                           ;CtoA.c: 11:     return convertir;
  5871                           
  5872                           ;incstack = 0
  5873  000036  5048               	movf	_convertir^0,w,c
  5874  000038  0012               	return		;funcret
  5875  00003A                     __end_of_CToAHaAcabat:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function _CToAConverteix *****************
  5879 ;; Defined at:
  5880 ;;		line 14 in file "CtoA.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  numero          1    wreg     unsigned char 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  numero          1    5[COMRAM] unsigned char 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/1
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1
  5894 ;;      Params:         0       0       0
  5895 ;;      Locals:         1       0       0
  5896 ;;      Temps:          0       0       0
  5897 ;;      Totals:         1       0       0
  5898 ;;Total ram usage:        1 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 3
  5901 ;; This function calls:
  5902 ;;		_CToAReset
  5903 ;; This function is called by:
  5904 ;;		_menu
  5905 ;;		_motorSIO
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text47
  5910  001EF8                     __ptext47:
  5911                           	callstack 0
  5912  001EF8                     _CToAConverteix:
  5913                           	callstack 26
  5914                           
  5915                           ;incstack = 0
  5916                           ;CToAConverteix@numero stored from wreg
  5917  001EF8  6E66               	movwf	CToAConverteix@numero^0,c
  5918                           
  5919                           ;CtoA.c: 15:     CToAReset();
  5920  001EFA  ECA6  F00F         	call	_CToAReset	;wreg free
  5921                           
  5922                           ;CtoA.c: 16:     convertir = numero;
  5923  001EFE  C066  F048         	movff	CToAConverteix@numero,_convertir
  5924  001F02  0012               	return		;funcret
  5925  001F04                     __end_of_CToAConverteix:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _CToAReset *****************
  5929 ;; Defined at:
  5930 ;;		line 18 in file "CtoA.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/1
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1
  5944 ;;      Params:         0       0       0
  5945 ;;      Locals:         0       0       0
  5946 ;;      Temps:          0       0       0
  5947 ;;      Totals:         0       0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 2
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_CToAConverteix
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text48
  5959  001F4C                     __ptext48:
  5960                           	callstack 0
  5961  001F4C                     _CToAReset:
  5962                           	callstack 26
  5963                           
  5964                           ;CtoA.c: 19:     stringScore[0] = '0';
  5965                           
  5966                           ;incstack = 0
  5967  001F4C  0E30               	movlw	48
  5968  001F4E  6E5E               	movwf	_stringScore^0,c
  5969                           
  5970                           ;CtoA.c: 20:     stringScore[1] = '0';
  5971  001F50  6E5F               	movwf	(_stringScore+1)^0,c
  5972  001F52  0C30               	retlw	48	;funcret
  5973  001F54                     __end_of_CToAReset:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _init_ports *****************
  5977 ;; Defined at:
  5978 ;;		line 26 in file "main.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1
  5992 ;;      Params:         0       0       0
  5993 ;;      Locals:         0       0       0
  5994 ;;      Temps:          0       0       0
  5995 ;;      Totals:         0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 2
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_main
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text49
  6007  001D8E                     __ptext49:
  6008                           	callstack 0
  6009  001D8E                     _init_ports:
  6010                           	callstack 28
  6011                           
  6012                           ;incstack = 0
  6013  001D8E  0E03               	movlw	3
  6014  001D90  6E92               	movwf	146,c	;volatile
  6015  001D92  0EE0               	movlw	224
  6016  001D94  6E93               	movwf	147,c	;volatile
  6017  001D96  968A               	bcf	138,3,c	;volatile
  6018  001D98  908A               	bcf	138,0,c	;volatile
  6019  001D9A  928A               	bcf	138,1,c	;volatile
  6020                           
  6021                           ;main.c: 50:     TRISC = 0xC0;
  6022  001D9C  0EC0               	movlw	192
  6023  001D9E  6E94               	movwf	148,c	;volatile
  6024                           
  6025                           ;main.c: 60:     TRISD = 0x8F;
  6026  001DA0  0E8F               	movlw	143
  6027  001DA2  6E95               	movwf	149,c	;volatile
  6028                           
  6029                           ;main.c: 61:     LATD = 0x00;
  6030  001DA4  6A8C               	clrf	140,c	;volatile
  6031                           
  6032                           ;main.c: 64:     EECON1bits.EEPGD = 1;
  6033  001DA6  8EA6               	bsf	166,7,c	;volsfr
  6034                           
  6035                           ;main.c: 65:     EECON1bits.CFGS = 0;
  6036  001DA8  9CA6               	bcf	166,6,c	;volsfr
  6037  001DAA  0012               	return		;funcret
  6038  001DAC                     __end_of_init_ports:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function _init_eusart *****************
  6042 ;; Defined at:
  6043 ;;		line 68 in file "main.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1
  6057 ;;      Params:         0       0       0
  6058 ;;      Locals:         0       0       0
  6059 ;;      Temps:          0       0       0
  6060 ;;      Totals:         0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 2
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_main
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text50
  6072  001E1C                     __ptext50:
  6073                           	callstack 0
  6074  001E1C                     _init_eusart:
  6075                           	callstack 28
  6076                           
  6077                           ;main.c: 69:     TXSTA = 0x24;
  6078                           
  6079                           ;incstack = 0
  6080  001E1C  0E24               	movlw	36
  6081  001E1E  6EAC               	movwf	172,c	;volatile
  6082                           
  6083                           ;main.c: 70:     RCSTA = 0x90;
  6084  001E20  0E90               	movlw	144
  6085  001E22  6EAB               	movwf	171,c	;volatile
  6086                           
  6087                           ;main.c: 71:     BAUDCON = 0x08;
  6088  001E24  0E08               	movlw	8
  6089  001E26  6EB8               	movwf	184,c	;volatile
  6090                           
  6091                           ;main.c: 72:     SPBRGH = 0x04;
  6092  001E28  0E04               	movlw	4
  6093  001E2A  6EB0               	movwf	176,c	;volatile
  6094                           
  6095                           ;main.c: 73:     SPBRG = 0x10;
  6096  001E2C  0E10               	movlw	16
  6097  001E2E  6EAF               	movwf	175,c	;volatile
  6098  001E30  0C10               	retlw	16	;funcret
  6099  001E32                     __end_of_init_eusart:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _initSIO *****************
  6103 ;; Defined at:
  6104 ;;		line 18 in file "SIO.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1
  6118 ;;      Params:         0       0       0
  6119 ;;      Locals:         0       0       0
  6120 ;;      Temps:          0       0       0
  6121 ;;      Totals:         0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 3
  6125 ;; This function calls:
  6126 ;;		_TiGetTimer
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text51
  6133  001F54                     __ptext51:
  6134                           	callstack 0
  6135  001F54                     _initSIO:
  6136                           	callstack 27
  6137                           
  6138                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  6139                           
  6140                           ;incstack = 0
  6141  001F54  EC1E  F00E         	call	_TiGetTimer	;wreg free
  6142  001F58  6E13               	movwf	_timerSIO^0,c
  6143  001F5A  0012               	return		;funcret
  6144  001F5C                     __end_of_initSIO:
  6145                           	callstack 0
  6146                           
  6147 ;; *************** function _initHora *****************
  6148 ;; Defined at:
  6149 ;;		line 11 in file "Hora.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1
  6163 ;;      Params:         0       0       0
  6164 ;;      Locals:         0       0       0
  6165 ;;      Temps:          0       0       0
  6166 ;;      Totals:         0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; Hardware stack levels required when called: 3
  6170 ;; This function calls:
  6171 ;;		_TiGetTimer
  6172 ;; This function is called by:
  6173 ;;		_main
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text52
  6178  001F5C                     __ptext52:
  6179                           	callstack 0
  6180  001F5C                     _initHora:
  6181                           	callstack 27
  6182                           
  6183                           ;Hora.c: 12:     timerHora = TiGetTimer();
  6184                           
  6185                           ;incstack = 0
  6186  001F5C  EC1E  F00E         	call	_TiGetTimer	;wreg free
  6187  001F60  6E18               	movwf	_timerHora^0,c
  6188  001F62  0012               	return		;funcret
  6189  001F64                     __end_of_initHora:
  6190                           	callstack 0
  6191                           
  6192 ;; *************** function _initAltaveu *****************
  6193 ;; Defined at:
  6194 ;;		line 10 in file "Altaveu.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;		None
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;		None
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1
  6208 ;;      Params:         0       0       0
  6209 ;;      Locals:         0       0       0
  6210 ;;      Temps:          0       0       0
  6211 ;;      Totals:         0       0       0
  6212 ;;Total ram usage:        0 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 3
  6215 ;; This function calls:
  6216 ;;		_TiGetTimer
  6217 ;; This function is called by:
  6218 ;;		_main
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text53
  6223  001F64                     __ptext53:
  6224                           	callstack 0
  6225  001F64                     _initAltaveu:
  6226                           	callstack 27
  6227                           
  6228                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6229                           
  6230                           ;incstack = 0
  6231  001F64  EC1E  F00E         	call	_TiGetTimer	;wreg free
  6232  001F68  6E27               	movwf	_timerAltaveu^0,c
  6233  001F6A  0012               	return		;funcret
  6234  001F6C                     __end_of_initAltaveu:
  6235                           	callstack 0
  6236                           
  6237 ;; *************** function _escriureEEPROM *****************
  6238 ;; Defined at:
  6239 ;;		line 319 in file "Usuaris.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  caca            1    5[COMRAM] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1
  6253 ;;      Params:         0       0       0
  6254 ;;      Locals:         1       0       0
  6255 ;;      Temps:          0       0       0
  6256 ;;      Totals:         1       0       0
  6257 ;;Total ram usage:        1 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 2
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text54
  6268  001C68                     __ptext54:
  6269                           	callstack 0
  6270  001C68                     _escriureEEPROM:
  6271                           	callstack 28
  6272                           
  6273                           ;Usuaris.c: 320:     for(unsigned char caca = 0; caca < 160; caca++){
  6274                           
  6275                           ;incstack = 0
  6276  001C68  6A66               	clrf	escriureEEPROM@caca^0,c
  6277  001C6A                     l842:
  6278                           
  6279                           ;Usuaris.c: 321:         EEADR = 0;
  6280  001C6A  6AA9               	clrf	169,c	;volatile
  6281                           
  6282                           ;Usuaris.c: 322:         EEDATA = 0;
  6283  001C6C  6AA8               	clrf	168,c	;volatile
  6284                           
  6285                           ;Usuaris.c: 323:         EECON1bits.EEPGD = 0;
  6286  001C6E  9EA6               	bcf	166,7,c	;volsfr
  6287                           
  6288                           ;Usuaris.c: 324:         EECON1bits.CFGS = 0;
  6289  001C70  9CA6               	bcf	166,6,c	;volsfr
  6290                           
  6291                           ;Usuaris.c: 325:         EECON1bits.WREN = 1;
  6292  001C72  84A6               	bsf	166,2,c	;volsfr
  6293                           
  6294                           ;Usuaris.c: 326:         INTCONbits.GIE = 0;
  6295  001C74  9EF2               	bcf	242,7,c	;volatile
  6296                           
  6297                           ;Usuaris.c: 327:         EECON2 = 85;
  6298  001C76  0E55               	movlw	85
  6299  001C78  6EA7               	movwf	167,c	;volsfr
  6300                           
  6301                           ;Usuaris.c: 328:         EECON2 = 170;
  6302  001C7A  0EAA               	movlw	170
  6303  001C7C  6EA7               	movwf	167,c	;volsfr
  6304                           
  6305                           ;Usuaris.c: 329:          EECON1bits.WR = 1;
  6306  001C7E  82A6               	bsf	166,1,c	;volsfr
  6307  001C80                     l844:
  6308                           
  6309                           ;Usuaris.c: 330:         while(EECON1bits.WR){
  6310  001C80  B2A6               	btfsc	166,1,c	;volsfr
  6311  001C82  D7FE               	goto	l844
  6312                           
  6313                           ;Usuaris.c: 335:     }
  6314  001C84  2A66               	incf	escriureEEPROM@caca^0,f,c
  6315  001C86  0E9F               	movlw	159
  6316  001C88  6466               	cpfsgt	escriureEEPROM@caca^0,c
  6317  001C8A  D7EF               	goto	l842
  6318                           
  6319                           ;Usuaris.c: 336:    INTCONbits.GIE = 1;
  6320  001C8C  8EF2               	bsf	242,7,c	;volatile
  6321  001C8E  0C9F               	retlw	159	;funcret
  6322  001C90                     __end_of_escriureEEPROM:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _escriure2usuarisStruct *****************
  6326 ;; Defined at:
  6327 ;;		line 135 in file "Usuaris.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 3F/1
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1
  6341 ;;      Params:         0       0       0
  6342 ;;      Locals:         0       0       0
  6343 ;;      Temps:          0       0       0
  6344 ;;      Totals:         0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 2
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text55
  6356  0019B2                     __ptext55:
  6357                           	callstack 0
  6358  0019B2                     _escriure2usuarisStruct:
  6359                           	callstack 28
  6360                           
  6361                           ;Usuaris.c: 137:     usuaris[0].username[0] = '1';
  6362                           
  6363                           ;incstack = 0
  6364  0019B2  0E31               	movlw	49
  6365  0019B4  0101               	movlb	1	; () banked
  6366  0019B6  6F00               	movwf	_usuaris& (0+255),b
  6367                           
  6368                           ; BSR set to: 1
  6369                           ;Usuaris.c: 138:     usuaris[0].username[1] = '\0';
  6370  0019B8  6B01               	clrf	(_usuaris+1)& (0+255),b
  6371                           
  6372                           ;Usuaris.c: 140:     usuaris[1].username[0] = 'A';
  6373  0019BA  0E41               	movlw	65
  6374  0019BC  6F17               	movwf	(_usuaris+23)& (0+255),b
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;Usuaris.c: 141:     usuaris[1].username[1] = '\0';
  6378  0019BE  6B18               	clrf	(_usuaris+24)& (0+255),b
  6379                           
  6380                           ;Usuaris.c: 143:     usuaris[2].username[0] = 'D';
  6381  0019C0  0E44               	movlw	68
  6382  0019C2  6F2E               	movwf	(_usuaris+46)& (0+255),b
  6383                           
  6384                           ; BSR set to: 1
  6385                           ;Usuaris.c: 144:     usuaris[2].username[1] = '\0';
  6386  0019C4  6B2F               	clrf	(_usuaris+47)& (0+255),b
  6387                           
  6388                           ;Usuaris.c: 146:     usuaris[3].username[0] = 'G';
  6389  0019C6  0E47               	movlw	71
  6390  0019C8  6F45               	movwf	(_usuaris+69)& (0+255),b
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;Usuaris.c: 147:     usuaris[3].username[1] = '\0';
  6394  0019CA  6B46               	clrf	(_usuaris+70)& (0+255),b
  6395                           
  6396                           ;Usuaris.c: 148:     usuaris[4].username[0] = 'c';
  6397  0019CC  0E63               	movlw	99
  6398  0019CE  6F5C               	movwf	(_usuaris+92)& (0+255),b
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;Usuaris.c: 149:     usuaris[4].username[1] = '\0';
  6402  0019D0  6B5D               	clrf	(_usuaris+93)& (0+255),b
  6403                           
  6404                           ;Usuaris.c: 151:     puntuacions[0].indexStruct = 4;
  6405  0019D2  0E04               	movlw	4
  6406  0019D4  6E01               	movwf	_puntuacions^0,c
  6407                           
  6408                           ;Usuaris.c: 152:     puntuacions[1].indexStruct = 3;
  6409  0019D6  0E03               	movlw	3
  6410  0019D8  6E03               	movwf	(_puntuacions+2)^0,c
  6411                           
  6412                           ;Usuaris.c: 153:     puntuacions[2].indexStruct = 2;
  6413  0019DA  0E02               	movlw	2
  6414  0019DC  6E05               	movwf	(_puntuacions+4)^0,c
  6415                           
  6416                           ;Usuaris.c: 154:     puntuacions[3].indexStruct = 1;
  6417  0019DE  0E01               	movlw	1
  6418  0019E0  6E07               	movwf	(_puntuacions+6)^0,c
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;Usuaris.c: 155:     puntuacions[4].indexStruct = 0;
  6422  0019E2  6A09               	clrf	(_puntuacions+8)^0,c
  6423                           
  6424                           ; BSR set to: 1
  6425                           ;Usuaris.c: 156:     puntuacions[5].indexStruct = -1;
  6426  0019E4  680B               	setf	(_puntuacions+10)^0,c
  6427                           
  6428                           ;Usuaris.c: 157:     puntuacions[0].score = 10;
  6429  0019E6  0E0A               	movlw	10
  6430  0019E8  6E02               	movwf	(_puntuacions+1)^0,c
  6431                           
  6432                           ;Usuaris.c: 158:     puntuacions[1].score = 11;
  6433  0019EA  0E0B               	movlw	11
  6434  0019EC  6E04               	movwf	(_puntuacions+3)^0,c
  6435                           
  6436                           ;Usuaris.c: 159:     puntuacions[2].score = 12;
  6437  0019EE  0E0C               	movlw	12
  6438  0019F0  6E06               	movwf	(_puntuacions+5)^0,c
  6439                           
  6440                           ;Usuaris.c: 160:     puntuacions[3].score = 13;
  6441  0019F2  0E0D               	movlw	13
  6442  0019F4  6E08               	movwf	(_puntuacions+7)^0,c
  6443                           
  6444                           ;Usuaris.c: 161:     puntuacions[4].score = 1;
  6445  0019F6  0E01               	movlw	1
  6446  0019F8  6E0A               	movwf	(_puntuacions+9)^0,c
  6447                           
  6448                           ;Usuaris.c: 163:     numUsuaris = 4;
  6449  0019FA  0E04               	movlw	4
  6450  0019FC  6E2E               	movwf	_numUsuaris^0,c
  6451                           
  6452                           ;Usuaris.c: 164:     indexNextUserStruct = 4;
  6453  0019FE  6E2C               	movwf	_indexNextUserStruct^0,c
  6454                           
  6455                           ; BSR set to: 1
  6456  001A00  0C04               	retlw	4	;funcret
  6457  001A02                     __end_of_escriure2usuarisStruct:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function _UmotorUsers *****************
  6461 ;; Defined at:
  6462 ;;		line 183 in file "Usuaris.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/1
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1
  6476 ;;      Params:         0       0       0
  6477 ;;      Locals:         0       0       0
  6478 ;;      Temps:          2       0       0
  6479 ;;      Totals:         2       0       0
  6480 ;;Total ram usage:        2 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 3
  6483 ;; This function calls:
  6484 ;;		_compareStrings
  6485 ;;		_escriureCharEEPROM
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text56
  6492  000F02                     __ptext56:
  6493                           	callstack 0
  6494  000F02                     _UmotorUsers:
  6495                           	callstack 27
  6496                           
  6497                           ;Usuaris.c: 184:     static char state = 0;;Usuaris.c: 186:  switch(state) {
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;incstack = 0
  6501  000F02  D0A9               	goto	l5842
  6502  000F04                     l784:
  6503                           
  6504                           ;Usuaris.c: 188:    if (!do_check_exists && !do_register && !do_updateScores && !do_show
      +                          Users) {
  6505  000F04  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6506  000F06  BA78               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6507  000F08  D006               	goto	l785
  6508  000F0A  A678               	btfss	(_do_updateScores/(0+8))^0,_do_updateScores& (0+7),c
  6509  000F0C  B878               	btfsc	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6510  000F0E  D003               	goto	l785
  6511                           
  6512                           ;Usuaris.c: 189:     i = 0;
  6513  000F10  6A2B               	clrf	_i^0,c
  6514                           
  6515                           ;Usuaris.c: 190:     j = 0;
  6516  000F12  6A2A               	clrf	_j^0,c
  6517                           
  6518                           ;Usuaris.c: 191:    }
  6519  000F14  0012               	return	
  6520  000F16                     l785:
  6521  000F16  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6522  000F18  D004               	goto	l787
  6523                           
  6524                           ;Usuaris.c: 193:     usuariLoguejat = -1;
  6525  000F1A  6850               	setf	_usuariLoguejat^0,c
  6526  000F1C                     l5736:
  6527                           
  6528                           ;Usuaris.c: 194:     state = 1;
  6529  000F1C  0E01               	movlw	1
  6530  000F1E  6E29               	movwf	UmotorUsers@state^0,c
  6531                           
  6532                           ;Usuaris.c: 195:    }
  6533  000F20  0C01               	retlw	1
  6534  000F22                     l787:
  6535  000F22  AA78               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6536  000F24  D003               	goto	l791
  6537  000F26                     u5780:
  6538                           
  6539                           ;Usuaris.c: 197:     state = 2;
  6540  000F26  0E02               	movlw	2
  6541  000F28  6E29               	movwf	UmotorUsers@state^0,c
  6542                           
  6543                           ;Usuaris.c: 198:    }
  6544  000F2A  0C02               	retlw	2
  6545  000F2C                     l791:
  6546  000F2C  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6547  000F2E  0012               	return	
  6548                           
  6549                           ;Usuaris.c: 203:     arrayShowUsers[0] = usuariLoguejat;
  6550  000F30  C050  F0A1         	movff	_usuariLoguejat,_arrayShowUsers
  6551                           
  6552                           ;Usuaris.c: 204:     arrayShowUsers[1] = -1;
  6553  000F34  0100               	movlb	0	; () banked
  6554  000F36  69A2               	setf	(_arrayShowUsers+1)& (0+255),b
  6555                           
  6556                           ;Usuaris.c: 205:     arrayShowUsers[2] = -1;
  6557  000F38  69A3               	setf	(_arrayShowUsers+2)& (0+255),b
  6558                           
  6559                           ;Usuaris.c: 206:     arrayShowUsers[3] = -1;
  6560  000F3A  69A4               	setf	(_arrayShowUsers+3)& (0+255),b
  6561                           
  6562                           ;Usuaris.c: 207:     arrayShowUsers[4] = -1;
  6563  000F3C  69A5               	setf	(_arrayShowUsers+4)& (0+255),b
  6564                           
  6565                           ;Usuaris.c: 208:     arrayShowUsers[5] = -1;
  6566  000F3E  69A6               	setf	(_arrayShowUsers+5)& (0+255),b
  6567                           
  6568                           ;Usuaris.c: 209:     arrayShowUsers[6] = -1;
  6569  000F40  69A7               	setf	(_arrayShowUsers+6)& (0+255),b
  6570                           
  6571                           ;Usuaris.c: 210:     arrayShowUsers[7] = -1;
  6572  000F42  69A8               	setf	(_arrayShowUsers+7)& (0+255),b
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;Usuaris.c: 211:     i = 1;
  6576  000F44  0E01               	movlw	1
  6577  000F46  6E2B               	movwf	_i^0,c
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;Usuaris.c: 212:     if(numUsuaris < 7) {
  6581  000F48  0E07               	movlw	7
  6582  000F4A  602E               	cpfslt	_numUsuaris^0,c
  6583  000F4C  D002               	goto	l794
  6584  000F4E                     u5800:
  6585                           
  6586                           ;Usuaris.c: 213:       j = 0;
  6587  000F4E  6A2A               	clrf	_j^0,c
  6588                           
  6589                           ;Usuaris.c: 214:     }
  6590  000F50  D002               	goto	l5750
  6591  000F52                     l794:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;Usuaris.c: 216:       j = indexNextUserStruct;
  6595  000F52  C02C  F02A         	movff	_indexNextUserStruct,_j
  6596  000F56                     l5750:
  6597                           
  6598                           ;Usuaris.c: 218:     state = 5;
  6599  000F56  0E05               	movlw	5
  6600  000F58  6E29               	movwf	UmotorUsers@state^0,c
  6601  000F5A  0C05               	retlw	5
  6602  000F5C                     l5752:
  6603                           
  6604                           ;Usuaris.c: 222:    if (i < numUsuaris) {
  6605  000F5C  502E               	movf	_numUsuaris^0,w,c
  6606  000F5E  5C2B               	subwf	_i^0,w,c
  6607  000F60  E212               	bc	l5762
  6608                           
  6609                           ;Usuaris.c: 223:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6610  000F62  0EA9               	movlw	low _tmpUsername
  6611  000F64  6E66               	movwf	compareStrings@a^0,c
  6612  000F66  502B               	movf	_i^0,w,c
  6613  000F68  0D17               	mullw	23
  6614  000F6A  0E00               	movlw	low _usuaris
  6615  000F6C  24F3               	addwf	243,w,c
  6616  000F6E  6E67               	movwf	compareStrings@b^0,c
  6617  000F70  0E01               	movlw	high _usuaris
  6618  000F72  20F4               	addwfc	prodh,w,c
  6619  000F74  6E68               	movwf	(compareStrings@b+1)^0,c
  6620  000F76  EC90  F00D         	call	_compareStrings	;wreg free
  6621  000F7A  0900               	iorlw	0
  6622  000F7C  E102               	bnz	l5758
  6623                           
  6624                           ;Usuaris.c: 224:      usuariLoguejat = i;
  6625  000F7E  C02B  F050         	movff	_i,_usuariLoguejat
  6626  000F82                     l5758:
  6627                           
  6628                           ;Usuaris.c: 227:     i++;
  6629  000F82  2A2B               	incf	_i^0,f,c
  6630  000F84  D7CB               	goto	l5736
  6631  000F86                     l5762:
  6632  000F86  502E               	movf	_numUsuaris^0,w,c
  6633  000F88  182B               	xorwf	_i^0,w,c
  6634  000F8A  A4D8               	btfss	status,2,c
  6635  000F8C  0012               	return	
  6636                           
  6637                           ;Usuaris.c: 231:     do_check_exists = 0;
  6638  000F8E  9C78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6639                           
  6640                           ;Usuaris.c: 232:     state = 0;
  6641  000F90  6A29               	clrf	UmotorUsers@state^0,c
  6642  000F92  0012               	return	
  6643  000F94                     l5766:
  6644                           
  6645                           ;Usuaris.c: 236:    if (i != 8) {
  6646  000F94  0E08               	movlw	8
  6647  000F96  182B               	xorwf	_i^0,w,c
  6648  000F98  E00D               	bz	l5778
  6649                           
  6650                           ;Usuaris.c: 237:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  6651  000F9A  C02D  F066         	movff	_indexNextUser,escriureCharEEPROM@pos
  6652  000F9E  502B               	movf	_i^0,w,c
  6653  000FA0  0FA9               	addlw	low _tmpUsername
  6654  000FA2  D886               	call	PL46	;call to abstracted procedure
  6655  000FA4  EC81  F00E         	call	_escriureCharEEPROM
  6656  000FA8  2A2D               	incf	_indexNextUser^0,f,c
  6657                           
  6658                           ;Usuaris.c: 238:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6659  000FAA  502B               	movf	_i^0,w,c
  6660  000FAC  0FA9               	addlw	low _tmpUsername
  6661  000FAE  D877               	call	PL20	;call to abstracted procedure
  6662                           
  6663                           ;Usuaris.c: 239:     i++;
  6664  000FB0  D868               	call	PL14	;call to abstracted procedure
  6665  000FB2  D7B9               	goto	u5780
  6666  000FB4                     l5778:
  6667  000FB4  0E08               	movlw	8
  6668  000FB6  182B               	xorwf	_i^0,w,c
  6669  000FB8  A4D8               	btfss	status,2,c
  6670  000FBA  0012               	return	
  6671                           
  6672                           ;Usuaris.c: 243:     i = 0;
  6673  000FBC  6A2B               	clrf	_i^0,c
  6674  000FBE                     l5782:
  6675                           
  6676                           ;Usuaris.c: 244:     state = 3;
  6677  000FBE  0E03               	movlw	3
  6678  000FC0  6E29               	movwf	UmotorUsers@state^0,c
  6679  000FC2  0C03               	retlw	3
  6680  000FC4                     l5784:
  6681                           
  6682                           ;Usuaris.c: 248:    if (i != 8) {
  6683  000FC4  0E08               	movlw	8
  6684  000FC6  182B               	xorwf	_i^0,w,c
  6685  000FC8  E011               	bz	l5796
  6686                           
  6687                           ;Usuaris.c: 249:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  6688  000FCA  C02D  F066         	movff	_indexNextUser,escriureCharEEPROM@pos
  6689  000FCE  502B               	movf	_i^0,w,c
  6690  000FD0  0F98               	addlw	low _tmpPassword
  6691  000FD2  D86E               	call	PL46	;call to abstracted procedure
  6692  000FD4  EC81  F00E         	call	_escriureCharEEPROM
  6693  000FD8  2A2D               	incf	_indexNextUser^0,f,c
  6694                           
  6695                           ;Usuaris.c: 250:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6696  000FDA  502B               	movf	_i^0,w,c
  6697  000FDC  0F98               	addlw	low _tmpPassword
  6698  000FDE  D85F               	call	PL20	;call to abstracted procedure
  6699  000FE0  0E09               	movlw	9
  6700  000FE2  266B               	addwf	??_UmotorUsers^0,f,c
  6701  000FE4  0E00               	movlw	0
  6702  000FE6  226C               	addwfc	(??_UmotorUsers+1)^0,f,c
  6703                           
  6704                           ;Usuaris.c: 251:     i++;
  6705  000FE8  D84C               	call	PL14	;call to abstracted procedure
  6706  000FEA  D7E9               	goto	l5782
  6707  000FEC                     l5796:
  6708  000FEC  0E08               	movlw	8
  6709  000FEE  182B               	xorwf	_i^0,w,c
  6710  000FF0  A4D8               	btfss	status,2,c
  6711  000FF2  0012               	return	
  6712                           
  6713                           ;Usuaris.c: 255:     do_register = 0;
  6714  000FF4  9A78               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6715                           
  6716                           ;Usuaris.c: 256:     indexNextUser++;
  6717  000FF6  2A2D               	incf	_indexNextUser^0,f,c
  6718                           
  6719                           ;Usuaris.c: 257:     if(indexNextUser == 159) indexNextUser = 16;
  6720  000FF8  0E9F               	movlw	159
  6721  000FFA  182D               	xorwf	_indexNextUser^0,w,c
  6722  000FFC  E102               	bnz	l5806
  6723  000FFE  0E10               	movlw	16
  6724  001000  6E2D               	movwf	_indexNextUser^0,c
  6725  001002                     l5806:
  6726                           
  6727                           ;Usuaris.c: 258:     indexNextUserStruct++;
  6728  001002  2A2C               	incf	_indexNextUserStruct^0,f,c
  6729                           
  6730                           ;Usuaris.c: 259:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6731  001004  0E08               	movlw	8
  6732  001006  182C               	xorwf	_indexNextUserStruct^0,w,c
  6733  001008  E101               	bnz	l5812
  6734  00100A  6A2C               	clrf	_indexNextUserStruct^0,c
  6735  00100C                     l5812:
  6736                           
  6737                           ;Usuaris.c: 260:     if(numUsuaris != 8) numUsuaris++;
  6738  00100C  0E08               	movlw	8
  6739  00100E  182E               	xorwf	_numUsuaris^0,w,c
  6740  001010  E001               	bz	l5816
  6741  001012  2A2E               	incf	_numUsuaris^0,f,c
  6742  001014                     l5816:
  6743                           
  6744                           ;Usuaris.c: 261:     state = 0;
  6745  001014  6A29               	clrf	UmotorUsers@state^0,c
  6746  001016  0012               	return	
  6747  001018                     l5818:
  6748                           
  6749                           ;Usuaris.c: 268:    if (i < numUsuaris) {
  6750  001018  502E               	movf	_numUsuaris^0,w,c
  6751  00101A  5C2B               	subwf	_i^0,w,c
  6752  00101C  E215               	bc	l5836
  6753                           
  6754                           ;Usuaris.c: 269:     if(j != usuariLoguejat){
  6755  00101E  C050  F06B         	movff	_usuariLoguejat,??_UmotorUsers
  6756  001022  6A6C               	clrf	(??_UmotorUsers+1)^0,c
  6757  001024  BE6B               	btfsc	??_UmotorUsers^0,7,c
  6758  001026  066C               	decf	(??_UmotorUsers+1)^0,f,c
  6759  001028  502A               	movf	_j^0,w,c
  6760  00102A  186B               	xorwf	??_UmotorUsers^0,w,c
  6761  00102C  106C               	iorwf	(??_UmotorUsers+1)^0,w,c
  6762  00102E  E007               	bz	l5826
  6763                           
  6764                           ;Usuaris.c: 270:       arrayShowUsers[i] = j;
  6765  001030  502B               	movf	_i^0,w,c
  6766  001032  0FA1               	addlw	low _arrayShowUsers
  6767  001034  6ED9               	movwf	fsr2l,c
  6768  001036  6ADA               	clrf	fsr2h,c
  6769  001038  C02A  FFDF         	movff	_j,indf2
  6770                           
  6771                           ;Usuaris.c: 271:      i++;
  6772  00103C  2A2B               	incf	_i^0,f,c
  6773  00103E                     l5826:
  6774                           
  6775                           ;Usuaris.c: 272:                     j++;
  6776  00103E  2A2A               	incf	_j^0,f,c
  6777                           
  6778                           ;Usuaris.c: 277:     if(j > 7) j=0;
  6779                           
  6780                           ;Usuaris.c: 273:     }else{
  6781  001040  0E07               	movlw	7
  6782  001042  642A               	cpfsgt	_j^0,c
  6783  001044  D788               	goto	l5750
  6784  001046  D783               	goto	u5800
  6785  001048                     l5836:
  6786  001048  502E               	movf	_numUsuaris^0,w,c
  6787  00104A  182B               	xorwf	_i^0,w,c
  6788  00104C  A4D8               	btfss	status,2,c
  6789  00104E  0012               	return	
  6790                           
  6791                           ;Usuaris.c: 281:     do_showUsers = 0;
  6792  001050  9878               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6793                           
  6794                           ;Usuaris.c: 282:     state = 0;
  6795  001052  6A29               	clrf	UmotorUsers@state^0,c
  6796  001054  0012               	return	
  6797  001056                     l5842:
  6798  001056  5029               	movf	UmotorUsers@state^0,w,c
  6799  001058  6E6B               	movwf	??_UmotorUsers^0,c
  6800  00105A  6A6C               	clrf	(??_UmotorUsers+1)^0,c
  6801                           
  6802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6803                           ; Switch size 1, requested type "space"
  6804                           ; Number of cases is 1, Range of values is 0 to 0
  6805                           ; switch strategies available:
  6806                           ; Name         Instructions Cycles
  6807                           ; simple_byte            4     3 (average)
  6808                           ;	Chosen strategy is simple_byte
  6809  00105C  506C               	movf	(??_UmotorUsers+1)^0,w,c
  6810  00105E  A4D8               	btfss	status,2,c
  6811  001060  0012               	return	
  6812                           
  6813                           ; Switch size 1, requested type "space"
  6814                           ; Number of cases is 6, Range of values is 0 to 5
  6815                           ; switch strategies available:
  6816                           ; Name         Instructions Cycles
  6817                           ; simple_byte           19    10 (average)
  6818                           ;	Chosen strategy is simple_byte
  6819  001062  506B               	movf	??_UmotorUsers^0,w,c
  6820  001064  E101 D74E          	bz	l784
  6821  001068  0A01               	xorlw	1	; case 1
  6822  00106A  E101 D777          	bz	l5752
  6823  00106E  0A03               	xorlw	3	; case 2
  6824  001070  E091               	bz	l5766
  6825  001072  0A01               	xorlw	1	; case 3
  6826  001074  E0A7               	bz	l5784
  6827  001076  0A07               	xorlw	7	; case 4
  6828  001078  B4D8               	btfsc	status,2,c
  6829  00107A  0012               	return	
  6830  00107C  0A01               	xorlw	1	; case 5
  6831  00107E  E0CC               	bz	l5818
  6832  001080  0012               	return		;funcret
  6833  001082                     __end_of_UmotorUsers:
  6834                           	callstack 0
  6835  001082                     PL14:
  6836                           	callstack 27
  6837  001082  50F3               	movf	243,w,c
  6838  001084  266B               	addwf	??_UmotorUsers^0,f,c
  6839  001086  50F4               	movf	244,w,c
  6840  001088  226C               	addwfc	(??_UmotorUsers+1)^0,f,c
  6841  00108A  502B               	movf	_i^0,w,c
  6842  00108C  246B               	addwf	??_UmotorUsers^0,w,c
  6843  00108E  6EE1               	movwf	fsr1l,c
  6844  001090  0E00               	movlw	0
  6845  001092  206C               	addwfc	(??_UmotorUsers+1)^0,w,c
  6846  001094  6EE2               	movwf	fsr1h,c
  6847  001096  CFDF FFE7          	movff	indf2,indf1
  6848  00109A  2A2B               	incf	_i^0,f,c
  6849  00109C  0012               	return	
  6850  00109E                     __end_ofPL14:
  6851                           	callstack 0
  6852  00109E                     PL20:
  6853                           	callstack 27
  6854  00109E  6ED9               	movwf	fsr2l,c
  6855  0010A0  6ADA               	clrf	fsr2h,c
  6856  0010A2  502C               	movf	_indexNextUserStruct^0,w,c
  6857  0010A4  0D17               	mullw	23
  6858  0010A6  0E00               	movlw	low _usuaris
  6859  0010A8  6E6B               	movwf	??_UmotorUsers^0,c
  6860  0010AA  0E01               	movlw	high _usuaris
  6861  0010AC  6E6C               	movwf	(??_UmotorUsers+1)^0,c
  6862  0010AE  0012               	return	
  6863  0010B0                     __end_ofPL20:
  6864                           	callstack 0
  6865  0010B0                     PL46:
  6866                           	callstack 27
  6867  0010B0  6ED9               	movwf	fsr2l,c
  6868  0010B2  6ADA               	clrf	fsr2h,c
  6869  0010B4  50DF               	movf	indf2,w,c
  6870  0010B6  0012               	return	
  6871  0010B8                     __end_ofPL46:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function _escriureCharEEPROM *****************
  6875 ;; Defined at:
  6876 ;;		line 77 in file "Usuaris.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  c               1    wreg     unsigned char 
  6879 ;;  pos             1    5[COMRAM] unsigned char 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  c               1    6[COMRAM] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/1
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1
  6891 ;;      Params:         1       0       0
  6892 ;;      Locals:         1       0       0
  6893 ;;      Temps:          0       0       0
  6894 ;;      Totals:         2       0       0
  6895 ;;Total ram usage:        2 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 2
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_UmotorUsers
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text57
  6906  001D02                     __ptext57:
  6907                           	callstack 0
  6908  001D02                     _escriureCharEEPROM:
  6909                           	callstack 27
  6910                           
  6911                           ;incstack = 0
  6912                           ;escriureCharEEPROM@c stored from wreg
  6913  001D02  6E67               	movwf	escriureCharEEPROM@c^0,c
  6914                           
  6915                           ;Usuaris.c: 78:     EEADR = pos;
  6916  001D04  C066  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6917                           
  6918                           ;Usuaris.c: 79:     EEDATA = c;
  6919  001D08  C067  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6920                           
  6921                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  6922  001D0C  9EA6               	bcf	166,7,c	;volsfr
  6923                           
  6924                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  6925  001D0E  9CA6               	bcf	166,6,c	;volsfr
  6926                           
  6927                           ;Usuaris.c: 82:     EECON1bits.WREN = 1;
  6928  001D10  84A6               	bsf	166,2,c	;volsfr
  6929                           
  6930                           ;Usuaris.c: 83:     INTCONbits.GIE = 0;
  6931  001D12  9EF2               	bcf	242,7,c	;volatile
  6932                           
  6933                           ;Usuaris.c: 84:     EECON2 = 85;
  6934  001D14  0E55               	movlw	85
  6935  001D16  6EA7               	movwf	167,c	;volsfr
  6936                           
  6937                           ;Usuaris.c: 85:     EECON2 = 170;
  6938  001D18  0EAA               	movlw	170
  6939  001D1A  6EA7               	movwf	167,c	;volsfr
  6940                           
  6941                           ;Usuaris.c: 86:     EECON1bits.WR = 1;
  6942  001D1C  82A6               	bsf	166,1,c	;volsfr
  6943  001D1E                     l733:
  6944  001D1E  B2A6               	btfsc	166,1,c	;volsfr
  6945  001D20  D7FE               	goto	l733
  6946                           
  6947                           ;Usuaris.c: 88:     INTCONbits.GIE = 1;
  6948  001D22  8EF2               	bsf	242,7,c	;volatile
  6949  001D24  0012               	return		;funcret
  6950  001D26                     __end_of_escriureCharEEPROM:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _compareStrings *****************
  6954 ;; Defined at:
  6955 ;;		line 167 in file "Usuaris.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6958 ;;		 -> tmpUsername(9), 
  6959 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6960 ;;		 -> usuaris.username(9), usuaris(184), 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      unsigned char 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/1
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1
  6972 ;;      Params:         3       0       0
  6973 ;;      Locals:         0       0       0
  6974 ;;      Temps:          2       0       0
  6975 ;;      Totals:         5       0       0
  6976 ;;Total ram usage:        5 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 2
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_UmotorUsers
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text58
  6987  001B20                     __ptext58:
  6988                           	callstack 0
  6989  001B20                     _compareStrings:
  6990                           	callstack 27
  6991                           
  6992                           ;Usuaris.c: 168:     while (*a){
  6993                           
  6994                           ;incstack = 0
  6995  001B20  D00A               	goto	l4586
  6996  001B22                     l4580:
  6997                           
  6998                           ;Usuaris.c: 169:         if (*a != *b)break;
  6999  001B22  D813               	call	PL48	;call to abstracted procedure
  7000  001B24  5066               	movf	compareStrings@a^0,w,c
  7001  001B26  6EE1               	movwf	fsr1l,c
  7002  001B28  6AE2               	clrf	fsr1h,c
  7003  001B2A  50DE               	movf	postinc2,w,c
  7004  001B2C  18E6               	xorwf	postinc1,w,c
  7005  001B2E  E105               	bnz	u3830
  7006                           
  7007                           ;Usuaris.c: 170:         a++;
  7008  001B30  2A66               	incf	compareStrings@a^0,f,c
  7009                           
  7010                           ;Usuaris.c: 171:         b++;
  7011  001B32  4A67               	infsnz	compareStrings@b^0,f,c
  7012  001B34  2A68               	incf	(compareStrings@b+1)^0,f,c
  7013  001B36                     l4586:
  7014                           
  7015                           ;Usuaris.c: 168:     while (*a){
  7016  001B36  D80E               	call	PL56	;call to abstracted procedure
  7017  001B38  E1F4               	bnz	l4580
  7018  001B3A                     u3830:
  7019                           
  7020                           ;Usuaris.c: 173:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7021  001B3A  D807               	call	PL48	;call to abstracted procedure
  7022  001B3C  50DF               	movf	indf2,w,c
  7023  001B3E  6E69               	movwf	??_compareStrings^0,c
  7024  001B40  D809               	call	PL56	;call to abstracted procedure
  7025  001B42  6E6A               	movwf	(??_compareStrings+1)^0,c
  7026  001B44  5069               	movf	??_compareStrings^0,w,c
  7027  001B46  5C6A               	subwf	(??_compareStrings+1)^0,w,c
  7028  001B48  0012               	return		;funcret
  7029  001B4A                     __end_of_compareStrings:
  7030                           	callstack 0
  7031  001B4A                     PL48:
  7032                           	callstack 27
  7033  001B4A  C067  FFD9         	movff	compareStrings@b,fsr2l
  7034  001B4E  C068  FFDA         	movff	compareStrings@b+1,fsr2h
  7035  001B52  0012               	return	
  7036  001B54                     __end_ofPL48:
  7037                           	callstack 0
  7038  001B54                     PL56:
  7039                           	callstack 27
  7040  001B54  5066               	movf	compareStrings@a^0,w,c
  7041  001B56  6ED9               	movwf	fsr2l,c
  7042  001B58  6ADA               	clrf	fsr2h,c
  7043  001B5A  50DF               	movf	indf2,w,c
  7044  001B5C  0012               	return	
  7045  001B5E                     __end_ofPL56:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _Uinit *****************
  7049 ;; Defined at:
  7050 ;;		line 90 in file "Usuaris.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  j               1    9[COMRAM] unsigned char 
  7055 ;;  j               1    8[COMRAM] unsigned char 
  7056 ;;  i               1    7[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1
  7066 ;;      Params:         0       0       0
  7067 ;;      Locals:         3       0       0
  7068 ;;      Temps:          2       0       0
  7069 ;;      Totals:         5       0       0
  7070 ;;Total ram usage:        5 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 2
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_main
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text59
  7081  0015CA                     __ptext59:
  7082                           	callstack 0
  7083  0015CA                     _Uinit:
  7084                           	callstack 28
  7085                           
  7086                           ;Usuaris.c: 95:     EEADR = 0;
  7087                           
  7088                           ;incstack = 0
  7089  0015CA  6AA9               	clrf	169,c	;volatile
  7090                           
  7091                           ;Usuaris.c: 96:     EECON1bits.EEPGD = 0;
  7092  0015CC  9EA6               	bcf	166,7,c	;volsfr
  7093                           
  7094                           ;Usuaris.c: 97:     EECON1bits.CFGS = 0;
  7095  0015CE  9CA6               	bcf	166,6,c	;volsfr
  7096                           
  7097                           ;Usuaris.c: 98:     EECON1bits.RD = 1;
  7098  0015D0  80A6               	bsf	166,0,c	;volsfr
  7099  0015D2                     l739:
  7100  0015D2  B0A6               	btfsc	166,0,c	;volsfr
  7101  0015D4  D7FE               	goto	l739
  7102                           
  7103                           ;Usuaris.c: 100:     numUsuaris = EEDATA;
  7104  0015D6  CFA8 F02E          	movff	4008,_numUsuaris	;volatile
  7105                           
  7106                           ;Usuaris.c: 103:     EEADR++;
  7107  0015DA  2AA9               	incf	169,f,c	;volatile
  7108                           
  7109                           ;Usuaris.c: 104:     EECON1bits.EEPGD = 0;
  7110  0015DC  9EA6               	bcf	166,7,c	;volsfr
  7111                           
  7112                           ;Usuaris.c: 105:     EECON1bits.CFGS = 0;
  7113  0015DE  9CA6               	bcf	166,6,c	;volsfr
  7114  0015E0                     l742:
  7115  0015E0  B0A6               	btfsc	166,0,c	;volsfr
  7116  0015E2  D7FE               	goto	l742
  7117                           
  7118                           ;Usuaris.c: 108:     indexNextUser = EEDATA;
  7119  0015E4  CFA8 F02D          	movff	4008,_indexNextUser	;volatile
  7120                           
  7121                           ;Usuaris.c: 110:     EEADR++;
  7122  0015E8  2AA9               	incf	169,f,c	;volatile
  7123                           
  7124                           ;Usuaris.c: 112:     for(char i = 0; i< numUsuaris; i++){
  7125  0015EA  6A68               	clrf	Uinit@i^0,c
  7126  0015EC  D021               	goto	l2742
  7127  0015EE                     l746:
  7128                           
  7129                           ;Usuaris.c: 113:         for(char j = 0; j<9; j++){
  7130  0015EE  6A69               	clrf	Uinit@j^0,c
  7131  0015F0                     l747:
  7132                           
  7133                           ;Usuaris.c: 114:             EECON1bits.EEPGD = 0;
  7134  0015F0  9EA6               	bcf	166,7,c	;volsfr
  7135                           
  7136                           ;Usuaris.c: 115:             EECON1bits.CFGS = 0;
  7137  0015F2  9CA6               	bcf	166,6,c	;volsfr
  7138                           
  7139                           ;Usuaris.c: 116:             EECON1bits.RD = 1;
  7140  0015F4  80A6               	bsf	166,0,c	;volsfr
  7141  0015F6                     l749:
  7142  0015F6  B0A6               	btfsc	166,0,c	;volsfr
  7143  0015F8  D7FE               	goto	l749
  7144                           
  7145                           ;Usuaris.c: 118:             usuaris[i].username[j] = EEDATA;
  7146  0015FA  D827               	call	PL38	;call to abstracted procedure
  7147  0015FC  D82D               	call	PL70	;call to abstracted procedure
  7148  0015FE  5069               	movf	Uinit@j^0,w,c
  7149                           
  7150                           ;Usuaris.c: 119:             EEADR++;
  7151  001600  D81B               	call	PL22	;call to abstracted procedure
  7152                           
  7153                           ;Usuaris.c: 120:         }
  7154  001602  2A69               	incf	Uinit@j^0,f,c
  7155  001604  0E08               	movlw	8
  7156  001606  6469               	cpfsgt	Uinit@j^0,c
  7157  001608  D7F3               	goto	l747
  7158                           
  7159                           ;Usuaris.c: 121:         for(char j = 0; j<9; j++){
  7160  00160A  6A6A               	clrf	Uinit@j_1187^0,c
  7161  00160C                     l752:
  7162                           
  7163                           ;Usuaris.c: 122:             EECON1bits.EEPGD = 0;
  7164  00160C  9EA6               	bcf	166,7,c	;volsfr
  7165                           
  7166                           ;Usuaris.c: 123:             EECON1bits.CFGS = 0;
  7167  00160E  9CA6               	bcf	166,6,c	;volsfr
  7168                           
  7169                           ;Usuaris.c: 124:             EECON1bits.RD = 1;
  7170  001610  80A6               	bsf	166,0,c	;volsfr
  7171  001612                     l754:
  7172  001612  B0A6               	btfsc	166,0,c	;volsfr
  7173  001614  D7FE               	goto	l754
  7174                           
  7175                           ;Usuaris.c: 126:             usuaris[i].password[j] = EEDATA;
  7176  001616  D819               	call	PL38	;call to abstracted procedure
  7177  001618  0E09               	movlw	9
  7178  00161A  2666               	addwf	??_Uinit^0,f,c
  7179  00161C  0E00               	movlw	0
  7180  00161E  2267               	addwfc	(??_Uinit+1)^0,f,c
  7181  001620  D81B               	call	PL70	;call to abstracted procedure
  7182  001622  506A               	movf	Uinit@j_1187^0,w,c
  7183                           
  7184                           ;Usuaris.c: 127:             EEADR++;
  7185  001624  D809               	call	PL22	;call to abstracted procedure
  7186                           
  7187                           ;Usuaris.c: 128:         }
  7188  001626  2A6A               	incf	Uinit@j_1187^0,f,c
  7189  001628  0E08               	movlw	8
  7190  00162A  646A               	cpfsgt	Uinit@j_1187^0,c
  7191  00162C  D7EF               	goto	l752
  7192                           
  7193                           ;Usuaris.c: 129:     }
  7194  00162E  2A68               	incf	Uinit@i^0,f,c
  7195  001630                     l2742:
  7196  001630  502E               	movf	_numUsuaris^0,w,c
  7197  001632  5C68               	subwf	Uinit@i^0,w,c
  7198  001634  E3DC               	bnc	l746
  7199  001636  0012               	return		;funcret
  7200  001638                     __end_of_Uinit:
  7201                           	callstack 0
  7202  001638                     PL22:
  7203                           	callstack 28
  7204  001638  2466               	addwf	??_Uinit^0,w,c
  7205  00163A  6ED9               	movwf	fsr2l,c
  7206  00163C  0E00               	movlw	0
  7207  00163E  2067               	addwfc	(??_Uinit+1)^0,w,c
  7208  001640  6EDA               	movwf	fsr2h,c
  7209  001642  CFA8 FFDF          	movff	4008,indf2	;volatile
  7210  001646  2AA9               	incf	169,f,c	;volatile
  7211  001648  0012               	return	
  7212  00164A                     __end_ofPL22:
  7213                           	callstack 0
  7214  00164A                     PL38:
  7215                           	callstack 28
  7216  00164A  5068               	movf	Uinit@i^0,w,c
  7217  00164C  0D17               	mullw	23
  7218  00164E  0E00               	movlw	low _usuaris
  7219  001650  6E66               	movwf	??_Uinit^0,c
  7220  001652  0E01               	movlw	high _usuaris
  7221  001654  6E67               	movwf	(??_Uinit+1)^0,c
  7222  001656  0012               	return	
  7223  001658                     __end_ofPL38:
  7224                           	callstack 0
  7225  001658                     PL70:
  7226                           	callstack 28
  7227  001658  50F3               	movf	243,w,c
  7228  00165A  2666               	addwf	??_Uinit^0,f,c
  7229  00165C  50F4               	movf	244,w,c
  7230  00165E  2267               	addwfc	(??_Uinit+1)^0,f,c
  7231  001660  0012               	return	
  7232  001662                     __end_ofPL70:
  7233                           	callstack 0
  7234                           
  7235 ;; *************** function _TiInitTimer *****************
  7236 ;; Defined at:
  7237 ;;		line 18 in file "TiTTimer.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1
  7251 ;;      Params:         0       0       0
  7252 ;;      Locals:         0       0       0
  7253 ;;      Temps:          0       0       0
  7254 ;;      Totals:         0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used: 1
  7257 ;; Hardware stack levels required when called: 2
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_main
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text60
  7266  001C90                     __ptext60:
  7267                           	callstack 0
  7268  001C90                     _TiInitTimer:
  7269                           	callstack 28
  7270                           
  7271                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7272                           
  7273                           ;incstack = 0
  7274  001C90  9ED0               	bcf	208,7,c	;volatile
  7275                           
  7276                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7277  001C92  8EF2               	bsf	242,7,c	;volatile
  7278                           
  7279                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7280  001C94  8CF2               	bsf	242,6,c	;volatile
  7281                           
  7282                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7283  001C96  8AF2               	bsf	242,5,c	;volatile
  7284                           
  7285                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7286  001C98  94F2               	bcf	242,2,c	;volatile
  7287                           
  7288                           ;TiTTimer.c: 25:     T0CON = 136;
  7289  001C9A  0E88               	movlw	136
  7290  001C9C  6ED5               	movwf	213,c	;volatile
  7291                           
  7292                           ;TiTTimer.c: 27:     TMR0H = 223;
  7293                           
  7294                           ;TiTTimer.c: 28:     TMR0L = 148;
  7295  001C9E  EC6C  F00D         	call	PL66	;call to abstracted procedure
  7296                           
  7297                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7298  001CA2  8ED5               	bsf	213,7,c	;volatile
  7299                           
  7300                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7301  001CA4  6A35               	clrf	_counter^0,c
  7302  001CA6                     l4686:
  7303  001CA6  0E07               	movlw	7
  7304  001CA8  6435               	cpfsgt	_counter^0,c
  7305  001CAA  D001               	goto	l4690
  7306  001CAC  0C07               	retlw	7
  7307  001CAE                     l4690:
  7308                           
  7309                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7310  001CAE  EC2D  F00E         	call	PL12	;call to abstracted procedure
  7311  001CB2  6ADF               	clrf	indf2,c
  7312                           
  7313                           ;TiTTimer.c: 33:     }
  7314  001CB4  2A35               	incf	_counter^0,f,c
  7315  001CB6  D7F7               	goto	l4686
  7316  001CB8                     __end_of_TiInitTimer:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function _TeTeclat *****************
  7320 ;; Defined at:
  7321 ;;		line 22 in file "TeTeclat.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/1
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1
  7335 ;;      Params:         0       0       0
  7336 ;;      Locals:         0       0       0
  7337 ;;      Temps:          3       0       0
  7338 ;;      Totals:         3       0       0
  7339 ;;Total ram usage:        3 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; Hardware stack levels required when called: 3
  7342 ;; This function calls:
  7343 ;;		_MsetNovaTecla
  7344 ;;		_SsetNovaTecla
  7345 ;;		_TiGetTics
  7346 ;;		_TiResetTics
  7347 ;; This function is called by:
  7348 ;;		_main
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text61
  7353  001266                     __ptext61:
  7354                           	callstack 0
  7355  001266                     _TeTeclat:
  7356                           	callstack 27
  7357                           
  7358                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7359                           
  7360                           ;incstack = 0
  7361  001266  A083               	btfss	131,0,c	;volatile
  7362  001268  D003               	goto	u6340
  7363  00126A  6A6D               	clrf	??_TeTeclat^0,c
  7364  00126C  2A6D               	incf	??_TeTeclat^0,f,c
  7365  00126E  D001               	goto	u6348
  7366  001270                     u6340:
  7367  001270  6A6D               	clrf	??_TeTeclat^0,c
  7368  001272                     u6348:
  7369  001272  0E01               	movlw	1
  7370  001274  A283               	btfss	131,1,c	;volatile
  7371  001276  0E00               	movlw	0
  7372  001278  0D02               	mullw	2
  7373  00127A  CFF3 F06E          	movff	prodl,??_TeTeclat+1
  7374  00127E  0E01               	movlw	1
  7375  001280  A483               	btfss	131,2,c	;volatile
  7376  001282  0E00               	movlw	0
  7377  001284  0D03               	mullw	3
  7378  001286  CFF3 F06F          	movff	prodl,??_TeTeclat+2
  7379  00128A  0E01               	movlw	1
  7380  00128C  A683               	btfss	131,3,c	;volatile
  7381  00128E  0E00               	movlw	0
  7382  001290  0D04               	mullw	4
  7383  001292  50F3               	movf	243,w,c
  7384  001294  246F               	addwf	(??_TeTeclat+2)^0,w,c
  7385  001296  246E               	addwf	(??_TeTeclat+1)^0,w,c
  7386  001298  246D               	addwf	??_TeTeclat^0,w,c
  7387  00129A  6E36               	movwf	TeTeclat@files^0,c
  7388                           
  7389                           ;TeTeclat.c: 27:  switch(state) {
  7390  00129C  D058               	goto	l6116
  7391  00129E                     l6042:
  7392                           
  7393                           ;TeTeclat.c: 29:    if (files==0) {
  7394  00129E  5036               	movf	TeTeclat@files^0,w,c
  7395  0012A0  E106               	bnz	l6048
  7396                           
  7397                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  7398  0012A2  888C               	bsf	140,4,c	;volatile
  7399                           
  7400                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  7401  0012A4  9A8C               	bcf	140,5,c	;volatile
  7402                           
  7403                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  7404  0012A6  9C8C               	bcf	140,6,c	;volatile
  7405                           
  7406                           ;TeTeclat.c: 33:     cols=0;
  7407  0012A8  6A37               	clrf	TeTeclat@cols^0,c
  7408  0012AA                     l6046:
  7409                           
  7410                           ;TeTeclat.c: 34:     state++;
  7411  0012AA  2A38               	incf	TeTeclat@state^0,f,c
  7412                           
  7413                           ;TeTeclat.c: 35:    }
  7414  0012AC  0012               	return	
  7415  0012AE                     l6048:
  7416  0012AE  5036               	movf	TeTeclat@files^0,w,c
  7417  0012B0  B4D8               	btfsc	status,2,c
  7418  0012B2  0012               	return	
  7419                           
  7420                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  7421  0012B4  5039               	movf	_tiTeclat^0,w,c
  7422  0012B6  EC00  F00F         	call	_TiResetTics
  7423  0012BA                     l6052:
  7424                           
  7425                           ;TeTeclat.c: 38:     state = 3;
  7426  0012BA  0E03               	movlw	3
  7427  0012BC  6E38               	movwf	TeTeclat@state^0,c
  7428  0012BE  0C03               	retlw	3
  7429  0012C0                     l6054:
  7430                           
  7431                           ;TeTeclat.c: 42:    if (files==0) {
  7432  0012C0  5036               	movf	TeTeclat@files^0,w,c
  7433  0012C2  E106               	bnz	l6062
  7434                           
  7435                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  7436  0012C4  988C               	bcf	140,4,c	;volatile
  7437                           
  7438                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  7439  0012C6  8A8C               	bsf	140,5,c	;volatile
  7440                           
  7441                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  7442  0012C8  9C8C               	bcf	140,6,c	;volatile
  7443                           
  7444                           ;TeTeclat.c: 46:     cols=1;
  7445  0012CA  0E01               	movlw	1
  7446  0012CC  6E37               	movwf	TeTeclat@cols^0,c
  7447  0012CE  D7ED               	goto	l6046
  7448  0012D0                     l6062:
  7449  0012D0  5036               	movf	TeTeclat@files^0,w,c
  7450  0012D2  B4D8               	btfsc	status,2,c
  7451  0012D4  0012               	return	
  7452                           
  7453                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  7454  0012D6  5039               	movf	_tiTeclat^0,w,c
  7455  0012D8  EC00  F00F         	call	_TiResetTics
  7456  0012DC  D7EE               	goto	l6052
  7457  0012DE                     l6068:
  7458                           
  7459                           ;TeTeclat.c: 55:    if (files==0) {
  7460  0012DE  5036               	movf	TeTeclat@files^0,w,c
  7461  0012E0  E107               	bnz	l6076
  7462                           
  7463                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  7464  0012E2  988C               	bcf	140,4,c	;volatile
  7465                           
  7466                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  7467  0012E4  9A8C               	bcf	140,5,c	;volatile
  7468                           
  7469                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  7470  0012E6  8C8C               	bsf	140,6,c	;volatile
  7471                           
  7472                           ;TeTeclat.c: 59:     cols=2;
  7473  0012E8  0E02               	movlw	2
  7474  0012EA  6E37               	movwf	TeTeclat@cols^0,c
  7475  0012EC                     l6074:
  7476                           
  7477                           ;TeTeclat.c: 60:     state = 0;
  7478  0012EC  6A38               	clrf	TeTeclat@state^0,c
  7479                           
  7480                           ;TeTeclat.c: 61:    }
  7481  0012EE  0012               	return	
  7482  0012F0                     l6076:
  7483  0012F0  5036               	movf	TeTeclat@files^0,w,c
  7484  0012F2  B4D8               	btfsc	status,2,c
  7485  0012F4  0012               	return	
  7486                           
  7487                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  7488  0012F6  5039               	movf	_tiTeclat^0,w,c
  7489  0012F8  EC00  F00F         	call	_TiResetTics
  7490  0012FC  D7D6               	goto	l6046
  7491  0012FE                     l6082:
  7492                           
  7493                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  7494  0012FE  5039               	movf	_tiTeclat^0,w,c
  7495  001300  EC5C  F00E         	call	_TiGetTics
  7496  001304  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  7497  001306  0012               	return	
  7498  001308  D7D0               	goto	l6046
  7499  00130A                     l6086:
  7500                           
  7501                           ;TeTeclat.c: 73:    if (files==0) {
  7502  00130A  5036               	movf	TeTeclat@files^0,w,c
  7503  00130C  E103               	bnz	l6090
  7504                           
  7505                           ;TeTeclat.c: 74:     state = 1;
  7506  00130E  0E01               	movlw	1
  7507  001310  6E38               	movwf	TeTeclat@state^0,c
  7508                           
  7509                           ;TeTeclat.c: 75:    }
  7510  001312  0C01               	retlw	1
  7511  001314                     l6090:
  7512  001314  5036               	movf	TeTeclat@files^0,w,c
  7513  001316  B4D8               	btfsc	status,2,c
  7514  001318  0012               	return	
  7515                           
  7516                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7517  00131A  D830               	call	PL18	;call to abstracted procedure
  7518  00131C  ECBA  F00F         	call	_MsetNovaTecla
  7519                           
  7520                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7521  001320  D82D               	call	PL18	;call to abstracted procedure
  7522  001322  ECB6  F00F         	call	_SsetNovaTecla
  7523  001326  D7C1               	goto	l6046
  7524  001328                     l6096:
  7525                           
  7526                           ;TeTeclat.c: 84:    if (files==0) {
  7527  001328  5036               	movf	TeTeclat@files^0,w,c
  7528  00132A  A4D8               	btfss	status,2,c
  7529  00132C  0012               	return	
  7530                           
  7531                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  7532  00132E  5039               	movf	_tiTeclat^0,w,c
  7533  001330  EC00  F00F         	call	_TiResetTics
  7534  001334  D7BA               	goto	l6046
  7535  001336                     l6102:
  7536                           
  7537                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  7538  001336  5039               	movf	_tiTeclat^0,w,c
  7539  001338  EC5C  F00E         	call	_TiGetTics
  7540  00133C  D7E3               	goto	L3
  7541  00133E                     l6106:
  7542                           
  7543                           ;TeTeclat.c: 95:    if (files!=0) {
  7544  00133E  5036               	movf	TeTeclat@files^0,w,c
  7545  001340  E003               	bz	l6110
  7546                           
  7547                           ;TeTeclat.c: 96:     state = 5;
  7548  001342  0E05               	movlw	5
  7549  001344  6E38               	movwf	TeTeclat@state^0,c
  7550                           
  7551                           ;TeTeclat.c: 97:    }
  7552  001346  0C05               	retlw	5
  7553  001348                     l6110:
  7554  001348  5036               	movf	TeTeclat@files^0,w,c
  7555  00134A  E0D0               	bz	l6074
  7556  00134C  0012               	return	
  7557  00134E                     l6116:
  7558  00134E  5038               	movf	TeTeclat@state^0,w,c
  7559  001350  6E6D               	movwf	??_TeTeclat^0,c
  7560  001352  6A6E               	clrf	(??_TeTeclat+1)^0,c
  7561                           
  7562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7563                           ; Switch size 1, requested type "space"
  7564                           ; Number of cases is 1, Range of values is 0 to 0
  7565                           ; switch strategies available:
  7566                           ; Name         Instructions Cycles
  7567                           ; simple_byte            4     3 (average)
  7568                           ;	Chosen strategy is simple_byte
  7569  001354  506E               	movf	(??_TeTeclat+1)^0,w,c
  7570  001356  A4D8               	btfss	status,2,c
  7571  001358  0012               	return	
  7572                           
  7573                           ; Switch size 1, requested type "space"
  7574                           ; Number of cases is 8, Range of values is 0 to 7
  7575                           ; switch strategies available:
  7576                           ; Name         Instructions Cycles
  7577                           ; simple_byte           25    13 (average)
  7578                           ;	Chosen strategy is simple_byte
  7579  00135A  506D               	movf	??_TeTeclat^0,w,c
  7580  00135C  E0A0               	bz	l6042
  7581  00135E  0A01               	xorlw	1	; case 1
  7582  001360  E0AF               	bz	l6054
  7583  001362  0A03               	xorlw	3	; case 2
  7584  001364  E0BC               	bz	l6068
  7585  001366  0A01               	xorlw	1	; case 3
  7586  001368  E0CA               	bz	l6082
  7587  00136A  0A07               	xorlw	7	; case 4
  7588  00136C  E0CE               	bz	l6086
  7589  00136E  0A01               	xorlw	1	; case 5
  7590  001370  E0DB               	bz	l6096
  7591  001372  0A03               	xorlw	3	; case 6
  7592  001374  E0E0               	bz	l6102
  7593  001376  0A01               	xorlw	1	; case 7
  7594  001378  E0E2               	bz	l6106
  7595  00137A  0012               	return		;funcret
  7596  00137C                     __end_of_TeTeclat:
  7597                           	callstack 0
  7598  00137C                     PL18:
  7599                           	callstack 27
  7600  00137C  5036               	movf	TeTeclat@files^0,w,c
  7601  00137E  0D03               	mullw	3
  7602  001380  50F3               	movf	243,w,c
  7603  001382  0FB8               	addlw	low (_teclaPremuda+253)
  7604  001384  2437               	addwf	TeTeclat@cols^0,w,c
  7605  001386  6ED9               	movwf	fsr2l,c
  7606  001388  6ADA               	clrf	fsr2h,c
  7607  00138A  50DF               	movf	indf2,w,c
  7608  00138C  0012               	return	
  7609  00138E                     __end_ofPL18:
  7610                           	callstack 0
  7611                           
  7612 ;; *************** function _SsetNovaTecla *****************
  7613 ;; Defined at:
  7614 ;;		line 125 in file "Ssms.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  tecla           1    wreg     unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  tecla           1    5[COMRAM] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/1
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1
  7628 ;;      Params:         0       0       0
  7629 ;;      Locals:         1       0       0
  7630 ;;      Temps:          0       0       0
  7631 ;;      Totals:         1       0       0
  7632 ;;Total ram usage:        1 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; Hardware stack levels required when called: 2
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_TeTeclat
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text62
  7643  001F6C                     __ptext62:
  7644                           	callstack 0
  7645  001F6C                     _SsetNovaTecla:
  7646                           	callstack 27
  7647                           
  7648                           ;incstack = 0
  7649                           ;SsetNovaTecla@tecla stored from wreg
  7650  001F6C  6E66               	movwf	SsetNovaTecla@tecla^0,c
  7651                           
  7652                           ;Ssms.c: 126:     novaTecla = tecla;
  7653  001F6E  C066  F056         	movff	SsetNovaTecla@tecla,_novaTecla
  7654  001F72  0012               	return		;funcret
  7655  001F74                     __end_of_SsetNovaTecla:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _MsetNovaTecla *****************
  7659 ;; Defined at:
  7660 ;;		line 29 in file "Menu.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  tecla           1    wreg     unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  tecla           1    5[COMRAM] unsigned char 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      void 
  7667 ;; Registers used:
  7668 ;;		wreg
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/1
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1
  7674 ;;      Params:         0       0       0
  7675 ;;      Locals:         1       0       0
  7676 ;;      Temps:          0       0       0
  7677 ;;      Totals:         1       0       0
  7678 ;;Total ram usage:        1 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 2
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_TeTeclat
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text63
  7689  001F74                     __ptext63:
  7690                           	callstack 0
  7691  001F74                     _MsetNovaTecla:
  7692                           	callstack 27
  7693                           
  7694                           ;incstack = 0
  7695                           ;MsetNovaTecla@tecla stored from wreg
  7696  001F74  6E66               	movwf	MsetNovaTecla@tecla^0,c
  7697                           
  7698                           ;Menu.c: 30:     NovaTecla = tecla;
  7699  001F76  C066  F053         	movff	MsetNovaTecla@tecla,_NovaTecla
  7700  001F7A  0012               	return		;funcret
  7701  001F7C                     __end_of_MsetNovaTecla:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _TeInit *****************
  7705 ;; Defined at:
  7706 ;;		line 18 in file "TeTeclat.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1
  7720 ;;      Params:         0       0       0
  7721 ;;      Locals:         0       0       0
  7722 ;;      Temps:          0       0       0
  7723 ;;      Totals:         0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used: 1
  7726 ;; Hardware stack levels required when called: 3
  7727 ;; This function calls:
  7728 ;;		_TiGetTimer
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text64
  7735  001F7C                     __ptext64:
  7736                           	callstack 0
  7737  001F7C                     _TeInit:
  7738                           	callstack 27
  7739                           
  7740                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  7741                           
  7742                           ;incstack = 0
  7743  001F7C  EC1E  F00E         	call	_TiGetTimer	;wreg free
  7744  001F80  6E39               	movwf	_tiTeclat^0,c
  7745  001F82  0012               	return		;funcret
  7746  001F84                     __end_of_TeInit:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function _Sinit *****************
  7750 ;; Defined at:
  7751 ;;		line 18 in file "Ssms.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1
  7765 ;;      Params:         0       0       0
  7766 ;;      Locals:         0       0       0
  7767 ;;      Temps:          0       0       0
  7768 ;;      Totals:         0       0       0
  7769 ;;Total ram usage:        0 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 3
  7772 ;; This function calls:
  7773 ;;		_TiGetTimer
  7774 ;; This function is called by:
  7775 ;;		_main
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text65
  7780  001F84                     __ptext65:
  7781                           	callstack 0
  7782  001F84                     _Sinit:
  7783                           	callstack 27
  7784                           
  7785                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7786                           
  7787                           ;incstack = 0
  7788  001F84  EC1E  F00E         	call	_TiGetTimer	;wreg free
  7789  001F88  6E55               	movwf	_timerSMS^0,c
  7790  001F8A  0012               	return		;funcret
  7791  001F8C                     __end_of_Sinit:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function _SMotor *****************
  7795 ;; Defined at:
  7796 ;;		line 22 in file "Ssms.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;		None
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMRAM   BANK0   BANK1
  7810 ;;      Params:         0       0       0
  7811 ;;      Locals:         0       0       0
  7812 ;;      Temps:          2       0       0
  7813 ;;      Totals:         2       0       0
  7814 ;;Total ram usage:        2 bytes
  7815 ;; Hardware stack levels used: 1
  7816 ;; Hardware stack levels required when called: 3
  7817 ;; This function calls:
  7818 ;;		_MNovaLletra
  7819 ;;		_TiGetTics
  7820 ;;		_TiResetTics
  7821 ;; This function is called by:
  7822 ;;		_main
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text66
  7827  0010B8                     __ptext66:
  7828                           	callstack 0
  7829  0010B8                     _SMotor:
  7830                           	callstack 27
  7831                           
  7832                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7833                           
  7834                           ;incstack = 0
  7835  0010B8  D0BA               	goto	l4862
  7836  0010BA                     l4702:
  7837                           
  7838                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7839  0010BA  2856               	incf	_novaTecla^0,w,c
  7840  0010BC  E008               	bz	l4710
  7841  0010BE  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7842  0010C0  D006               	goto	l4710
  7843                           
  7844                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7845  0010C2  5055               	movf	_timerSMS^0,w,c
  7846  0010C4  EC00  F00F         	call	_TiResetTics
  7847                           
  7848                           ;Ssms.c: 29:     state = 3;
  7849  0010C8  0E03               	movlw	3
  7850  0010CA  6E3A               	movwf	SMotor@state^0,c
  7851                           
  7852                           ;Ssms.c: 30:    }
  7853  0010CC  0C03               	retlw	3
  7854  0010CE                     l4710:
  7855  0010CE  2856               	incf	_novaTecla^0,w,c
  7856  0010D0  A4D8               	btfss	status,2,c
  7857  0010D2  0012               	return	
  7858  0010D4  5055               	movf	_timerSMS^0,w,c
  7859  0010D6  EC5C  F00E         	call	_TiGetTics
  7860  0010DA  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  7861  0010DC  0012               	return	
  7862  0010DE  D8BE               	call	PL60	;call to abstracted procedure
  7863  0010E0  A0D8               	btfss	status,0,c
  7864  0010E2  0012               	return	
  7865  0010E4  2857               	incf	_lletraASCII^0,w,c
  7866  0010E6  A4D8               	btfss	status,2,c
  7867  0010E8  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7868  0010EA  0012               	return	
  7869                           
  7870                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7871  0010EC  5057               	movf	_lletraASCII^0,w,c
  7872  0010EE  ECC6  F00F         	call	_MNovaLletra
  7873                           
  7874                           ;Ssms.c: 33:     lletraASCII = -1;
  7875  0010F2  6857               	setf	_lletraASCII^0,c
  7876                           
  7877                           ;Ssms.c: 34:     ultimaTecla = -1;
  7878  0010F4  6854               	setf	_ultimaTecla^0,c
  7879                           
  7880                           ;Ssms.c: 35:     zeroTecla = 0;
  7881  0010F6  6A3B               	clrf	_zeroTecla^0,c
  7882  0010F8                     l4726:
  7883                           
  7884                           ;Ssms.c: 36:     state = 0;
  7885  0010F8  6A3A               	clrf	SMotor@state^0,c
  7886  0010FA  0012               	return	
  7887  0010FC                     l4728:
  7888                           
  7889                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7890  0010FC  5054               	movf	_ultimaTecla^0,w,c
  7891  0010FE  1856               	xorwf	_novaTecla^0,w,c
  7892  001100  E10D               	bnz	l4738
  7893  001102  5055               	movf	_timerSMS^0,w,c
  7894  001104  EC5C  F00E         	call	_TiGetTics
  7895  001108  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  7896  00110A  D002               	goto	u4000
  7897  00110C  D8A7               	call	PL60	;call to abstracted procedure
  7898  00110E  E206               	bc	l4738
  7899  001110                     u4000:
  7900                           
  7901                           ;Ssms.c: 41:     novaTecla = -1;
  7902  001110  6856               	setf	_novaTecla^0,c
  7903                           
  7904                           ;Ssms.c: 42:     sumaPulsacions++;
  7905  001112  2A3C               	incf	_sumaPulsacions^0,f,c
  7906                           
  7907                           ;Ssms.c: 43:     lletraASCII++;
  7908  001114  2A57               	incf	_lletraASCII^0,f,c
  7909                           
  7910                           ;Ssms.c: 44:     state = 2;
  7911  001116  0E02               	movlw	2
  7912  001118  6E3A               	movwf	SMotor@state^0,c
  7913                           
  7914                           ;Ssms.c: 45:    }
  7915  00111A  0C02               	retlw	2
  7916  00111C                     l4738:
  7917  00111C  2856               	incf	_novaTecla^0,w,c
  7918  00111E  B4D8               	btfsc	status,2,c
  7919  001120  0012               	return	
  7920  001122  5054               	movf	_ultimaTecla^0,w,c
  7921  001124  1856               	xorwf	_novaTecla^0,w,c
  7922  001126  B4D8               	btfsc	status,2,c
  7923  001128  0012               	return	
  7924                           
  7925                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  7926  00112A  5057               	movf	_lletraASCII^0,w,c
  7927  00112C  ECC6  F00F         	call	_MNovaLletra
  7928                           
  7929                           ;Ssms.c: 48:     if(novaTecla != 0){
  7930  001130  5056               	movf	_novaTecla^0,w,c
  7931  001132  E005               	bz	l4748
  7932                           
  7933                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  7934  001134  5056               	movf	_novaTecla^0,w,c
  7935  001136  0FB0               	addlw	low (_lletraInici+254)
  7936  001138  EC58  F008         	call	PL46	;call to abstracted procedure
  7937  00113C  D001               	goto	L4
  7938  00113E                     l4748:
  7939                           
  7940                           ;Ssms.c: 51:       lletraASCII = '0';
  7941  00113E  0E30               	movlw	48
  7942  001140                     L4:
  7943  001140  6E57               	movwf	_lletraASCII^0,c
  7944                           
  7945                           ;Ssms.c: 53:     zeroTecla=0;
  7946  001142  6A3B               	clrf	_zeroTecla^0,c
  7947                           
  7948                           ;Ssms.c: 54:     ultimaTecla = novaTecla;
  7949  001144  C056  F054         	movff	_novaTecla,_ultimaTecla
  7950                           
  7951                           ;Ssms.c: 55:     sumaPulsacions = 0;
  7952  001148  6A3C               	clrf	_sumaPulsacions^0,c
  7953  00114A                     l4756:
  7954                           
  7955                           ;Ssms.c: 56:     novaTecla = -1;
  7956  00114A  6856               	setf	_novaTecla^0,c
  7957  00114C  D7D5               	goto	l4726
  7958  00114E                     l4760:
  7959                           
  7960                           ;Ssms.c: 61:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7961  00114E  0E07               	movlw	7
  7962  001150  1854               	xorwf	_ultimaTecla^0,w,c
  7963  001152  E008               	bz	l4768
  7964  001154  0E09               	movlw	9
  7965  001156  1854               	xorwf	_ultimaTecla^0,w,c
  7966  001158  E005               	bz	l4768
  7967  00115A  5054               	movf	_ultimaTecla^0,w,c
  7968  00115C  E003               	bz	l4768
  7969                           
  7970                           ;Ssms.c: 62:     state = 5;
  7971  00115E  0E05               	movlw	5
  7972  001160  6E3A               	movwf	SMotor@state^0,c
  7973                           
  7974                           ;Ssms.c: 63:    }
  7975  001162  0C05               	retlw	5
  7976  001164                     l4768:
  7977  001164  0E07               	movlw	7
  7978  001166  1854               	xorwf	_ultimaTecla^0,w,c
  7979  001168  E003               	bz	u4080
  7980  00116A  0E09               	movlw	9
  7981  00116C  1854               	xorwf	_ultimaTecla^0,w,c
  7982  00116E  E103               	bnz	l4774
  7983  001170                     u4080:
  7984                           
  7985                           ;Ssms.c: 65:     state = 6;
  7986  001170  0E06               	movlw	6
  7987  001172  6E3A               	movwf	SMotor@state^0,c
  7988                           
  7989                           ;Ssms.c: 66:    }
  7990  001174  0C06               	retlw	6
  7991  001176                     l4774:
  7992  001176  5054               	movf	_ultimaTecla^0,w,c
  7993  001178  A4D8               	btfss	status,2,c
  7994  00117A  0012               	return	
  7995                           
  7996                           ;Ssms.c: 68:     zeroTecla++;
  7997  00117C  2A3B               	incf	_zeroTecla^0,f,c
  7998                           
  7999                           ;Ssms.c: 69:     if(zeroTecla == 2) zeroTecla = 0;
  8000  00117E  0E02               	movlw	2
  8001  001180  183B               	xorwf	_zeroTecla^0,w,c
  8002  001182  E101               	bnz	l4782
  8003  001184  6A3B               	clrf	_zeroTecla^0,c
  8004  001186                     l4782:
  8005                           
  8006                           ;Ssms.c: 70:     lletraASCII = arrayZero[zeroTecla];
  8007  001186  503B               	movf	_zeroTecla^0,w,c
  8008  001188  0F45               	addlw	low _arrayZero
  8009  00118A  EC58  F008         	call	PL46	;call to abstracted procedure
  8010  00118E  D041               	goto	L5
  8011  001190                     l4786:
  8012                           
  8013                           ;Ssms.c: 75:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8014  001190  5056               	movf	_novaTecla^0,w,c
  8015  001192  0A80               	xorlw	128
  8016  001194  0F7E               	addlw	-130
  8017  001196  E202               	bc	u4120
  8018  001198  5056               	movf	_novaTecla^0,w,c
  8019  00119A  E107               	bnz	l4794
  8020  00119C                     u4120:
  8021  00119C  5056               	movf	_novaTecla^0,w,c
  8022  00119E  0A80               	xorlw	128
  8023  0011A0  0F76               	addlw	-138
  8024  0011A2  E203               	bc	l4794
  8025                           
  8026                           ;Ssms.c: 76:     state = 1;
  8027  0011A4  0E01               	movlw	1
  8028  0011A6  6E3A               	movwf	SMotor@state^0,c
  8029                           
  8030                           ;Ssms.c: 77:    }
  8031  0011A8  0C01               	retlw	1
  8032  0011AA                     l4794:
  8033  0011AA  5056               	movf	_novaTecla^0,w,c
  8034  0011AC  E00B               	bz	l4806
  8035  0011AE  5056               	movf	_novaTecla^0,w,c
  8036  0011B0  0A80               	xorlw	128
  8037  0011B2  0F7E               	addlw	-130
  8038  0011B4  E207               	bc	l4806
  8039  0011B6  2857               	incf	_lletraASCII^0,w,c
  8040  0011B8  E105               	bnz	l4806
  8041                           
  8042                           ;Ssms.c: 79:     MNovaLletra(novaTecla+48);
  8043  0011BA  5056               	movf	_novaTecla^0,w,c
  8044  0011BC  0F30               	addlw	48
  8045  0011BE  ECC6  F00F         	call	_MNovaLletra
  8046  0011C2  D7C3               	goto	l4756
  8047  0011C4                     l4806:
  8048  0011C4  5056               	movf	_novaTecla^0,w,c
  8049  0011C6  B4D8               	btfsc	status,2,c
  8050  0011C8  0012               	return	
  8051  0011CA  5056               	movf	_novaTecla^0,w,c
  8052  0011CC  0A80               	xorlw	128
  8053  0011CE  0F7E               	addlw	-130
  8054  0011D0  B0D8               	btfsc	status,0,c
  8055  0011D2  0012               	return	
  8056  0011D4  2857               	incf	_lletraASCII^0,w,c
  8057  0011D6  B4D8               	btfsc	status,2,c
  8058  0011D8  0012               	return	
  8059                           
  8060                           ;Ssms.c: 84:     MNovaLletra(lletraASCII);
  8061  0011DA  5057               	movf	_lletraASCII^0,w,c
  8062  0011DC  ECC6  F00F         	call	_MNovaLletra
  8063                           
  8064                           ;Ssms.c: 85:     lletraASCII = -1;
  8065  0011E0  6857               	setf	_lletraASCII^0,c
  8066                           
  8067                           ;Ssms.c: 86:     state = 4;
  8068  0011E2  0E04               	movlw	4
  8069  0011E4  6E3A               	movwf	SMotor@state^0,c
  8070  0011E6  0C04               	retlw	4
  8071  0011E8                     l4818:
  8072                           
  8073                           ;Ssms.c: 90:    MNovaLletra(novaTecla+48);
  8074  0011E8  5056               	movf	_novaTecla^0,w,c
  8075  0011EA  0F30               	addlw	48
  8076  0011EC  ECC6  F00F         	call	_MNovaLletra
  8077  0011F0  D7AC               	goto	l4756
  8078  0011F2                     l4824:
  8079                           
  8080                           ;Ssms.c: 95:    if (sumaPulsacions == 4) {
  8081  0011F2  0E04               	movlw	4
  8082  0011F4  183C               	xorwf	_sumaPulsacions^0,w,c
  8083  0011F6  E108               	bnz	l4832
  8084  0011F8                     u4200:
  8085                           
  8086                           ;Ssms.c: 96:     lletraASCII = lletraInici[ultimaTecla-2];
  8087  0011F8  5054               	movf	_ultimaTecla^0,w,c
  8088  0011FA  0FB0               	addlw	low (_lletraInici+254)
  8089  0011FC  6ED9               	movwf	fsr2l,c
  8090  0011FE  6ADA               	clrf	fsr2h,c
  8091  001200  50DF               	movf	indf2,w,c
  8092  001202  6E57               	movwf	_lletraASCII^0,c
  8093                           
  8094                           ;Ssms.c: 97:     sumaPulsacions = 0;
  8095  001204  6A3C               	clrf	_sumaPulsacions^0,c
  8096  001206  D778               	goto	l4726
  8097  001208                     l4832:
  8098  001208  0E03               	movlw	3
  8099  00120A  183C               	xorwf	_sumaPulsacions^0,w,c
  8100  00120C  E104               	bnz	l4838
  8101  00120E                     u4210:
  8102                           
  8103                           ;Ssms.c: 101:     lletraASCII = ultimaTecla+48;
  8104  00120E  5054               	movf	_ultimaTecla^0,w,c
  8105  001210  0F30               	addlw	48
  8106  001212                     L5:
  8107  001212  6E57               	movwf	_lletraASCII^0,c
  8108  001214  D771               	goto	l4726
  8109  001216                     l4838:
  8110  001216  0E03               	movlw	3
  8111  001218  603C               	cpfslt	_sumaPulsacions^0,c
  8112  00121A  0012               	return	
  8113  00121C  D76D               	goto	l4726
  8114  00121E                     l4842:
  8115                           
  8116                           ;Ssms.c: 109:    if (sumaPulsacions == 4) {
  8117  00121E  0E04               	movlw	4
  8118  001220  183C               	xorwf	_sumaPulsacions^0,w,c
  8119  001222  E0F5               	bz	u4210
  8120  001224  0E05               	movlw	5
  8121  001226  183C               	xorwf	_sumaPulsacions^0,w,c
  8122  001228  E0E7               	bz	u4200
  8123  00122A  0E04               	movlw	4
  8124  00122C  D7F5               	goto	L6
  8125  00122E                     l4862:
  8126  00122E  503A               	movf	SMotor@state^0,w,c
  8127  001230  6E6D               	movwf	??_SMotor^0,c
  8128  001232  6A6E               	clrf	(??_SMotor+1)^0,c
  8129                           
  8130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8131                           ; Switch size 1, requested type "space"
  8132                           ; Number of cases is 1, Range of values is 0 to 0
  8133                           ; switch strategies available:
  8134                           ; Name         Instructions Cycles
  8135                           ; simple_byte            4     3 (average)
  8136                           ;	Chosen strategy is simple_byte
  8137  001234  506E               	movf	(??_SMotor+1)^0,w,c
  8138  001236  A4D8               	btfss	status,2,c
  8139  001238  0012               	return	
  8140                           
  8141                           ; Switch size 1, requested type "space"
  8142                           ; Number of cases is 7, Range of values is 0 to 6
  8143                           ; switch strategies available:
  8144                           ; Name         Instructions Cycles
  8145                           ; simple_byte           22    12 (average)
  8146                           ;	Chosen strategy is simple_byte
  8147  00123A  506D               	movf	??_SMotor^0,w,c
  8148  00123C  E101 D73D          	bz	l4702
  8149  001240  0A01               	xorlw	1	; case 1
  8150  001242  E101 D75B          	bz	l4728
  8151  001246  0A03               	xorlw	3	; case 2
  8152  001248  E082               	bz	l4760
  8153  00124A  0A01               	xorlw	1	; case 3
  8154  00124C  E0A1               	bz	l4786
  8155  00124E  0A07               	xorlw	7	; case 4
  8156  001250  E0CB               	bz	l4818
  8157  001252  0A01               	xorlw	1	; case 5
  8158  001254  E0CE               	bz	l4824
  8159  001256  0A03               	xorlw	3	; case 6
  8160  001258  E0E2               	bz	l4842
  8161  00125A  0012               	return		;funcret
  8162  00125C                     __end_of_SMotor:
  8163                           	callstack 0
  8164  00125C                     PL60:
  8165                           	callstack 27
  8166  00125C  0E5A               	movlw	90
  8167  00125E  5C66               	subwf	?_TiGetTics^0,w,c
  8168  001260  0E02               	movlw	2
  8169  001262  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  8170  001264  0012               	return	
  8171  001266                     __end_ofPL60:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function _MNovaLletra *****************
  8175 ;; Defined at:
  8176 ;;		line 33 in file "Menu.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  lletra          1    wreg     unsigned char 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  lletra          1    5[COMRAM] unsigned char 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1
  8190 ;;      Params:         0       0       0
  8191 ;;      Locals:         1       0       0
  8192 ;;      Temps:          0       0       0
  8193 ;;      Totals:         1       0       0
  8194 ;;Total ram usage:        1 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; Hardware stack levels required when called: 2
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_SMotor
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text67
  8205  001F8C                     __ptext67:
  8206                           	callstack 0
  8207  001F8C                     _MNovaLletra:
  8208                           	callstack 27
  8209                           
  8210                           ;incstack = 0
  8211                           ;MNovaLletra@lletra stored from wreg
  8212  001F8C  6E66               	movwf	MNovaLletra@lletra^0,c
  8213                           
  8214                           ;Menu.c: 34:     novaLletra = lletra;
  8215  001F8E  C066  F052         	movff	MNovaLletra@lletra,_novaLletra
  8216  001F92  0012               	return		;funcret
  8217  001F94                     __end_of_MNovaLletra:
  8218                           	callstack 0
  8219                           
  8220 ;; *************** function _Minit *****************
  8221 ;; Defined at:
  8222 ;;		line 26 in file "Menu.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1
  8236 ;;      Params:         0       0       0
  8237 ;;      Locals:         0       0       0
  8238 ;;      Temps:          0       0       0
  8239 ;;      Totals:         0       0       0
  8240 ;;Total ram usage:        0 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 3
  8243 ;; This function calls:
  8244 ;;		_TiGetTimer
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text68
  8251  001F94                     __ptext68:
  8252                           	callstack 0
  8253  001F94                     _Minit:
  8254                           	callstack 27
  8255                           
  8256                           ;Menu.c: 27:     timerMenu = TiGetTimer();
  8257                           
  8258                           ;incstack = 0
  8259  001F94  EC1E  F00E         	call	_TiGetTimer	;wreg free
  8260  001F98  6E33               	movwf	_timerMenu^0,c
  8261  001F9A  0012               	return		;funcret
  8262  001F9C                     __end_of_Minit:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _LcLCD *****************
  8266 ;; Defined at:
  8267 ;;		line 246 in file "LcTLCD.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/1
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1
  8281 ;;      Params:         0       0       0
  8282 ;;      Locals:         0       0       0
  8283 ;;      Temps:          0       0       0
  8284 ;;      Totals:         0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 6
  8288 ;; This function calls:
  8289 ;;		_LcPutChar
  8290 ;; This function is called by:
  8291 ;;		_main
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text69
  8296  001A02                     __ptext69:
  8297                           	callstack 0
  8298  001A02                     _LcLCD:
  8299                           	callstack 24
  8300                           
  8301                           ;LcTLCD.c: 247:     if(nou_s == 1){
  8302                           
  8303                           ;incstack = 0
  8304  001A02  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8305  001A04  0012               	return	
  8306                           
  8307                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  8308  001A06  D818               	call	PL34	;call to abstracted procedure
  8309  001A08  64F7               	cpfsgt	tblptrh,c
  8310  001A0A  D003               	bra	u3867
  8311  001A0C  0008               	tblrd		*
  8312  001A0E  50F5               	movf	tablat,w,c
  8313  001A10  D001               	bra	u3860
  8314  001A12                     u3867:
  8315  001A12  D819               	call	PL42	;call to abstracted procedure
  8316  001A14                     u3860:
  8317  001A14  EC29  F00D         	call	_LcPutChar
  8318                           
  8319                           ;LcTLCD.c: 249:         s_ptr++;
  8320  001A18  4A0F               	infsnz	_s_ptr^0,f,c
  8321  001A1A  2A10               	incf	(_s_ptr+1)^0,f,c
  8322                           
  8323                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  8324  001A1C  D80D               	call	PL34	;call to abstracted procedure
  8325  001A1E  64F7               	cpfsgt	tblptrh,c
  8326  001A20  D003               	bra	u3877
  8327  001A22  0008               	tblrd		*
  8328  001A24  50F5               	movf	tablat,w,c
  8329  001A26  D001               	bra	u3870
  8330  001A28                     u3877:
  8331  001A28  D80E               	call	PL42	;call to abstracted procedure
  8332  001A2A                     u3870:
  8333  001A2A  0900               	iorlw	0
  8334  001A2C  A4D8               	btfss	status,2,c
  8335  001A2E  0012               	return	
  8336                           
  8337                           ;LcTLCD.c: 251:             nou_s = 0;
  8338  001A30  9279               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8339                           
  8340                           ;LcTLCD.c: 252:             s_ptr=0;
  8341  001A32  6A0F               	clrf	_s_ptr^0,c
  8342  001A34  6A10               	clrf	(_s_ptr+1)^0,c
  8343  001A36  0012               	return		;funcret
  8344  001A38                     __end_of_LcLCD:
  8345                           	callstack 0
  8346  001A38                     PL34:
  8347                           	callstack 24
  8348  001A38  C00F  FFF6         	movff	_s_ptr,tblptrl
  8349  001A3C  C010  FFF7         	movff	_s_ptr+1,tblptrh
  8350  001A40  6AF8               	clrf	tblptru,c
  8351  001A42  0E01               	movlw	(high __ramtop+-1)
  8352  001A44  0012               	return	
  8353  001A46                     __end_ofPL34:
  8354                           	callstack 0
  8355  001A46                     PL42:
  8356                           	callstack 24
  8357  001A46  CFF6 FFE1          	movff	tblptrl,fsr1l
  8358  001A4A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8359  001A4E  50E7               	movf	indf1,w,c
  8360  001A50  0012               	return	
  8361  001A52                     __end_ofPL42:
  8362                           	callstack 0
  8363                           
  8364 ;; *************** function _LcInit *****************
  8365 ;; Defined at:
  8366 ;;		line 41 in file "LcTLCD.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  rows            1    wreg     unsigned char 
  8369 ;;  columns         1   16[COMRAM] unsigned char 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  rows            1   17[COMRAM] unsigned char 
  8372 ;;  i               2   18[COMRAM] int 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1
  8382 ;;      Params:         1       0       0
  8383 ;;      Locals:         3       0       0
  8384 ;;      Temps:          0       0       0
  8385 ;;      Totals:         4       0       0
  8386 ;;Total ram usage:        4 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; Hardware stack levels required when called: 4
  8389 ;; This function calls:
  8390 ;;		_CantaIR
  8391 ;;		_EscriuPrimeraOrdre
  8392 ;;		_Espera
  8393 ;;		_TiGetTimer
  8394 ;;		_WaitForBusy
  8395 ;; This function is called by:
  8396 ;;		_main
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text70
  8401  001464                     __ptext70:
  8402                           	callstack 0
  8403  001464                     _LcInit:
  8404                           	callstack 26
  8405                           
  8406                           ;incstack = 0
  8407                           ;LcInit@rows stored from wreg
  8408  001464  6E72               	movwf	LcInit@rows^0,c
  8409                           
  8410                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8411  001466  EC1E  F00E         	call	_TiGetTimer	;wreg free
  8412  00146A  6E3D               	movwf	_Timer^0,c
  8413                           
  8414                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  8415  00146C  C072  F040         	movff	LcInit@rows,_Rows
  8416                           
  8417                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8418  001470  6A3E               	clrf	_ColumnAct^0,c
  8419  001472  6A3F               	clrf	_RowAct^0,c
  8420                           
  8421                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8422  001474  9894               	bcf	148,4,c	;volatile
  8423  001476  9E95               	bcf	149,7,c	;volatile
  8424  001478  9A94               	bcf	148,5,c	;volatile
  8425                           
  8426                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8427  00147A  6A73               	clrf	LcInit@i^0,c
  8428  00147C  6A74               	clrf	(LcInit@i+1)^0,c
  8429  00147E                     l4610:
  8430                           
  8431                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8432  00147E  6A6E               	clrf	(Espera@ms+1)^0,c
  8433  001480  0E64               	movlw	100
  8434  001482  6E6D               	movwf	Espera@ms^0,c
  8435  001484  503D               	movf	_Timer^0,w,c
  8436  001486  ECB6  F00E         	call	_Espera
  8437                           
  8438                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8439  00148A  0E03               	movlw	3
  8440  00148C  ECBD  F00B         	call	_EscriuPrimeraOrdre
  8441                           
  8442                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8443  001490  6A6E               	clrf	(Espera@ms+1)^0,c
  8444  001492  0E05               	movlw	5
  8445  001494  6E6D               	movwf	Espera@ms^0,c
  8446  001496  503D               	movf	_Timer^0,w,c
  8447  001498  ECB6  F00E         	call	_Espera
  8448                           
  8449                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8450  00149C  0E03               	movlw	3
  8451  00149E  ECBD  F00B         	call	_EscriuPrimeraOrdre
  8452                           
  8453                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8454  0014A2  D83A               	call	PL74	;call to abstracted procedure
  8455  0014A4  ECB6  F00E         	call	_Espera
  8456                           
  8457                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8458  0014A8  0E03               	movlw	3
  8459  0014AA  ECBD  F00B         	call	_EscriuPrimeraOrdre
  8460                           
  8461                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8462  0014AE  D834               	call	PL74	;call to abstracted procedure
  8463  0014B0  ECB6  F00E         	call	_Espera
  8464                           
  8465                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8466  0014B4  0E02               	movlw	2
  8467  0014B6  ECBD  F00B         	call	_EscriuPrimeraOrdre
  8468                           
  8469                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8470  0014BA  6A6E               	clrf	(Espera@ms+1)^0,c
  8471  0014BC  0E04               	movlw	4
  8472  0014BE  6E6D               	movwf	Espera@ms^0,c
  8473  0014C0  503D               	movf	_Timer^0,w,c
  8474  0014C2  ECB6  F00E         	call	_Espera
  8475                           
  8476                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8477  0014C6  0E28               	movlw	40
  8478  0014C8  ECF2  F00E         	call	_CantaIR
  8479                           
  8480                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8481  0014CC  ECAF  F00D         	call	_WaitForBusy	;wreg free
  8482  0014D0  0E08               	movlw	8
  8483  0014D2  ECF2  F00E         	call	_CantaIR
  8484                           
  8485                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8486  0014D6  ECAF  F00D         	call	_WaitForBusy	;wreg free
  8487  0014DA  0E01               	movlw	1
  8488  0014DC  ECF2  F00E         	call	_CantaIR
  8489                           
  8490                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8491  0014E0  ECB1  F00E         	call	PL72	;call to abstracted procedure
  8492  0014E4  ECB6  F00E         	call	_Espera
  8493                           
  8494                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8495  0014E8  ECAF  F00D         	call	_WaitForBusy	;wreg free
  8496  0014EC  0E06               	movlw	6
  8497  0014EE  ECF2  F00E         	call	_CantaIR
  8498                           
  8499                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8500  0014F2  ECAF  F00D         	call	_WaitForBusy	;wreg free
  8501  0014F6  0E0F               	movlw	15
  8502  0014F8  ECF2  F00E         	call	_CantaIR
  8503                           
  8504                           ;LcTLCD.c: 74:  }
  8505  0014FC  4A73               	infsnz	LcInit@i^0,f,c
  8506  0014FE  2A74               	incf	(LcInit@i+1)^0,f,c
  8507  001500  BE74               	btfsc	(LcInit@i+1)^0,7,c
  8508  001502  D7BD               	goto	l4610
  8509  001504  5074               	movf	(LcInit@i+1)^0,w,c
  8510  001506  E103               	bnz	u3840
  8511  001508  0E02               	movlw	2
  8512  00150A  5C73               	subwf	LcInit@i^0,w,c
  8513  00150C  E3B8               	bnc	l4610
  8514  00150E                     u3840:
  8515                           
  8516                           ;LcTLCD.c: 80:     WaitForBusy();
  8517  00150E  ECAF  F00D         	call	_WaitForBusy	;wreg free
  8518                           
  8519                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8520  001512  0E0C               	movlw	12
  8521  001514  EFF2  F00E         	goto	_CantaIR
  8522  001518                     __end_of_LcInit:
  8523                           	callstack 0
  8524  001518                     PL74:
  8525                           	callstack 26
  8526  001518  6A6E               	clrf	(Espera@ms+1)^0,c
  8527  00151A  0E01               	movlw	1
  8528  00151C  6E6D               	movwf	Espera@ms^0,c
  8529  00151E  503D               	movf	_Timer^0,w,c
  8530  001520  0012               	return	
  8531  001522                     __end_ofPL74:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _EscriuPrimeraOrdre *****************
  8535 ;; Defined at:
  8536 ;;		line 230 in file "LcTLCD.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  ordre           1    wreg     unsigned char 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  ordre           1    6[COMRAM] unsigned char 
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1
  8550 ;;      Params:         0       0       0
  8551 ;;      Locals:         1       0       0
  8552 ;;      Temps:          1       0       0
  8553 ;;      Totals:         2       0       0
  8554 ;;Total ram usage:        2 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 2
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_LcInit
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text71
  8565  00177A                     __ptext71:
  8566                           	callstack 0
  8567  00177A                     _EscriuPrimeraOrdre:
  8568                           	callstack 27
  8569                           
  8570                           ;incstack = 0
  8571                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8572  00177A  6E67               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8573                           
  8574                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8575  00177C  9694               	bcf	148,3,c	;volatile
  8576                           
  8577                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8578  00177E  D82F               	call	PL36	;call to abstracted procedure
  8579  001780  888B               	bsf	139,4,c	;volatile
  8580                           
  8581                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8582  001782  A667               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8583  001784  D003               	goto	u230
  8584  001786  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8585  001788  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  8586  00178A  D001               	goto	u248
  8587  00178C                     u230:
  8588  00178C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8589  00178E                     u248:
  8590  00178E  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8591  001790  D82D               	call	PL68	;call to abstracted procedure
  8592  001792  0BF7               	andlw	-9
  8593  001794  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8594  001796  6E8B               	movwf	139,c	;volatile
  8595                           
  8596                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8597  001798  A467               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8598  00179A  D003               	goto	u250
  8599  00179C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8600  00179E  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  8601  0017A0  D001               	goto	u268
  8602  0017A2                     u250:
  8603  0017A2  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8604  0017A4                     u268:
  8605  0017A4  D823               	call	PL68	;call to abstracted procedure
  8606  0017A6  0BFB               	andlw	-5
  8607  0017A8  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8608  0017AA  6E8B               	movwf	139,c	;volatile
  8609                           
  8610                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8611  0017AC  A267               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8612  0017AE  D003               	goto	u270
  8613  0017B0  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8614  0017B2  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  8615  0017B4  D001               	goto	u288
  8616  0017B6                     u270:
  8617  0017B6  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8618  0017B8                     u288:
  8619  0017B8  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8620  0017BA  508B               	movf	139,w,c	;volatile
  8621  0017BC  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8622  0017BE  0BFD               	andlw	-3
  8623  0017C0  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8624  0017C2  6E8B               	movwf	139,c	;volatile
  8625                           
  8626                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8627  0017C4  A067               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8628  0017C6  D003               	goto	u290
  8629  0017C8  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8630  0017CA  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  8631  0017CC  D001               	goto	u308
  8632  0017CE                     u290:
  8633  0017CE  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  8634  0017D0                     u308:
  8635  0017D0  508B               	movf	139,w,c	;volatile
  8636  0017D2  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8637  0017D4  0BFE               	andlw	-2
  8638  0017D6  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8639  0017D8  6E8B               	movwf	139,c	;volatile
  8640                           
  8641                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  8642  0017DA  988B               	bcf	139,4,c	;volatile
  8643  0017DC  0012               	return		;funcret
  8644  0017DE                     __end_of_EscriuPrimeraOrdre:
  8645                           	callstack 0
  8646  0017DE                     PL36:
  8647                           	callstack 24
  8648  0017DE  9494               	bcf	148,2,c	;volatile
  8649  0017E0  9294               	bcf	148,1,c	;volatile
  8650  0017E2  9094               	bcf	148,0,c	;volatile
  8651  0017E4  9A8B               	bcf	139,5,c	;volatile
  8652  0017E6  9E8C               	bcf	140,7,c	;volatile
  8653  0017E8  888B               	bsf	139,4,c	;volatile
  8654  0017EA  0012               	return	
  8655  0017EC                     __end_ofPL36:
  8656                           	callstack 0
  8657  0017EC                     PL68:
  8658                           	callstack 27
  8659  0017EC  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8660  0017EE  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8661  0017F0  508B               	movf	139,w,c	;volatile
  8662  0017F2  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8663  0017F4  0012               	return	
  8664  0017F6                     __end_ofPL68:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _JoystickMotor *****************
  8668 ;; Defined at:
  8669 ;;		line 18 in file "Joystick.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/1
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1
  8683 ;;      Params:         0       0       0
  8684 ;;      Locals:         0       0       0
  8685 ;;      Temps:          2       0       0
  8686 ;;      Totals:         2       0       0
  8687 ;;Total ram usage:        2 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 3
  8690 ;; This function calls:
  8691 ;;		_MNouJoystick
  8692 ;; This function is called by:
  8693 ;;		_main
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text72
  8698  00138E                     __ptext72:
  8699                           	callstack 0
  8700  00138E                     _JoystickMotor:
  8701                           	callstack 27
  8702                           
  8703                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8704                           
  8705                           ;incstack = 0
  8706  00138E  D056               	goto	l3098
  8707  001390                     l1025:
  8708                           
  8709                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8710  001390  B2C2               	btfsc	194,1,c	;volatile
  8711  001392  D00B               	goto	l1026
  8712  001394  0EC8               	movlw	200
  8713  001396  60C4               	cpfslt	196,c	;volatile
  8714  001398  D008               	goto	l1026
  8715  00139A  0E32               	movlw	50
  8716  00139C  64C4               	cpfsgt	196,c	;volatile
  8717  00139E  D005               	goto	l1026
  8718                           
  8719                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8720  0013A0  0E07               	movlw	7
  8721  0013A2  6EC2               	movwf	194,c	;volatile
  8722                           
  8723                           ;Joystick.c: 24:                 cap1 = 1;
  8724  0013A4  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8725  0013A6                     l3028:
  8726                           
  8727                           ;Joystick.c: 25:     state++;
  8728  0013A6  2A19               	incf	JoystickMotor@state^0,f,c
  8729                           
  8730                           ;Joystick.c: 26:    }
  8731  0013A8  D052               	goto	l1033
  8732  0013AA                     l1026:
  8733  0013AA  B2C2               	btfsc	194,1,c	;volatile
  8734  0013AC  D00F               	goto	l1028
  8735  0013AE  0EC7               	movlw	199
  8736  0013B0  64C4               	cpfsgt	196,c	;volatile
  8737  0013B2  D00C               	goto	l1028
  8738                           
  8739                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8740  0013B4  0E02               	movlw	2
  8741  0013B6  181A               	xorwf	_ultimaTeclaAD^0,w,c
  8742  0013B8  E003               	bz	l3036
  8743  0013BA  0E02               	movlw	2
  8744  0013BC  ECCE  F00F         	call	_MNouJoystick
  8745  0013C0                     l3036:
  8746                           
  8747                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8748  0013C0  0E02               	movlw	2
  8749  0013C2  6E1A               	movwf	_ultimaTeclaAD^0,c
  8750                           
  8751                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8752  0013C4  0E07               	movlw	7
  8753  0013C6  6EC2               	movwf	194,c	;volatile
  8754                           
  8755                           ;Joystick.c: 31:                 cap1 = 0;
  8756  0013C8  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8757  0013CA  D7ED               	goto	l3028
  8758  0013CC                     l1028:
  8759  0013CC  B2C2               	btfsc	194,1,c	;volatile
  8760  0013CE  D03F               	goto	l1033
  8761  0013D0  0E33               	movlw	51
  8762  0013D2  60C4               	cpfslt	196,c	;volatile
  8763  0013D4  D03C               	goto	l1033
  8764                           
  8765                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8766  0013D6  0E08               	movlw	8
  8767  0013D8  181A               	xorwf	_ultimaTeclaAD^0,w,c
  8768  0013DA  E003               	bz	l3050
  8769  0013DC  0E08               	movlw	8
  8770  0013DE  ECCE  F00F         	call	_MNouJoystick
  8771  0013E2                     l3050:
  8772                           
  8773                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8774  0013E2  0E08               	movlw	8
  8775  0013E4  D7EE               	goto	L7
  8776  0013E6                     l1034:
  8777                           
  8778                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8779  0013E6  B2C2               	btfsc	194,1,c	;volatile
  8780  0013E8  D00B               	goto	l1035
  8781  0013EA  0EC8               	movlw	200
  8782  0013EC  60C4               	cpfslt	196,c	;volatile
  8783  0013EE  D008               	goto	l1035
  8784  0013F0  0E32               	movlw	50
  8785  0013F2  64C4               	cpfsgt	196,c	;volatile
  8786  0013F4  D005               	goto	l1035
  8787                           
  8788                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8789  0013F6  0E03               	movlw	3
  8790  0013F8  6EC2               	movwf	194,c	;volatile
  8791                           
  8792                           ;Joystick.c: 45:                 cap2 = 1;
  8793  0013FA  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8794  0013FC                     l3066:
  8795                           
  8796                           ;Joystick.c: 46:     state--;
  8797  0013FC  0619               	decf	JoystickMotor@state^0,f,c
  8798                           
  8799                           ;Joystick.c: 47:    }
  8800  0013FE  D027               	goto	l1033
  8801  001400                     l1035:
  8802  001400  B2C2               	btfsc	194,1,c	;volatile
  8803  001402  D00F               	goto	l1037
  8804  001404  0EC7               	movlw	199
  8805  001406  64C4               	cpfsgt	196,c	;volatile
  8806  001408  D00C               	goto	l1037
  8807                           
  8808                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8809  00140A  0E06               	movlw	6
  8810  00140C  181A               	xorwf	_ultimaTeclaAD^0,w,c
  8811  00140E  E003               	bz	l3074
  8812  001410  0E06               	movlw	6
  8813  001412  ECCE  F00F         	call	_MNouJoystick
  8814  001416                     l3074:
  8815                           
  8816                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8817  001416  0E06               	movlw	6
  8818  001418  6E1A               	movwf	_ultimaTeclaAD^0,c
  8819                           
  8820                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8821  00141A  0E03               	movlw	3
  8822  00141C  6EC2               	movwf	194,c	;volatile
  8823                           
  8824                           ;Joystick.c: 52:                 cap2 = 0;
  8825  00141E  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8826  001420  D7ED               	goto	l3066
  8827  001422                     l1037:
  8828  001422  B2C2               	btfsc	194,1,c	;volatile
  8829  001424  D014               	goto	l1033
  8830  001426  0E33               	movlw	51
  8831  001428  60C4               	cpfslt	196,c	;volatile
  8832  00142A  D011               	goto	l1033
  8833                           
  8834                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8835  00142C  0E04               	movlw	4
  8836  00142E  181A               	xorwf	_ultimaTeclaAD^0,w,c
  8837  001430  E003               	bz	l3088
  8838  001432  0E04               	movlw	4
  8839  001434  ECCE  F00F         	call	_MNouJoystick
  8840  001438                     l3088:
  8841                           
  8842                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8843  001438  0E04               	movlw	4
  8844  00143A  D7EE               	goto	L8
  8845  00143C                     l3098:
  8846  00143C  5019               	movf	JoystickMotor@state^0,w,c
  8847  00143E  6E67               	movwf	??_JoystickMotor^0,c
  8848  001440  6A68               	clrf	(??_JoystickMotor+1)^0,c
  8849                           
  8850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8851                           ; Switch size 1, requested type "space"
  8852                           ; Number of cases is 1, Range of values is 0 to 0
  8853                           ; switch strategies available:
  8854                           ; Name         Instructions Cycles
  8855                           ; simple_byte            4     3 (average)
  8856                           ;	Chosen strategy is simple_byte
  8857  001442  5068               	movf	(??_JoystickMotor+1)^0,w,c
  8858  001444  E104               	bnz	l1033
  8859                           
  8860                           ; Switch size 1, requested type "space"
  8861                           ; Number of cases is 2, Range of values is 0 to 1
  8862                           ; switch strategies available:
  8863                           ; Name         Instructions Cycles
  8864                           ; simple_byte            7     4 (average)
  8865                           ;	Chosen strategy is simple_byte
  8866  001446  5067               	movf	??_JoystickMotor^0,w,c
  8867  001448  E0A3               	bz	l1025
  8868  00144A  0A01               	xorlw	1	; case 1
  8869  00144C  E0CC               	bz	l1034
  8870  00144E                     l1033:
  8871                           
  8872                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8873  00144E  BE77               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8874  001450  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8875  001452  0012               	return	
  8876  001454  501A               	movf	_ultimaTeclaAD^0,w,c
  8877  001456  B4D8               	btfsc	status,2,c
  8878  001458  0012               	return	
  8879                           
  8880                           ;Joystick.c: 66:         MNouJoystick(-1);
  8881  00145A  0EFF               	movlw	255
  8882  00145C  ECCE  F00F         	call	_MNouJoystick
  8883                           
  8884                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8885  001460  681A               	setf	_ultimaTeclaAD^0,c
  8886  001462  0012               	return		;funcret
  8887  001464                     __end_of_JoystickMotor:
  8888                           	callstack 0
  8889                           
  8890 ;; *************** function _MNouJoystick *****************
  8891 ;; Defined at:
  8892 ;;		line 36 in file "Menu.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  posicio         1    wreg     char 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  posicio         1    5[COMRAM] char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/1
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1
  8906 ;;      Params:         0       0       0
  8907 ;;      Locals:         1       0       0
  8908 ;;      Temps:          0       0       0
  8909 ;;      Totals:         1       0       0
  8910 ;;Total ram usage:        1 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 2
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_JoystickMotor
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text73
  8921  001F9C                     __ptext73:
  8922                           	callstack 0
  8923  001F9C                     _MNouJoystick:
  8924                           	callstack 27
  8925                           
  8926                           ;incstack = 0
  8927                           ;MNouJoystick@posicio stored from wreg
  8928  001F9C  6E66               	movwf	MNouJoystick@posicio^0,c
  8929                           
  8930                           ;Menu.c: 37:     novaDireccio = posicio;
  8931  001F9E  C066  F051         	movff	MNouJoystick@posicio,_novaDireccio
  8932  001FA2  0012               	return		;funcret
  8933  001FA4                     __end_of_MNouJoystick:
  8934                           	callstack 0
  8935                           
  8936 ;; *************** function _JoystickInit *****************
  8937 ;; Defined at:
  8938 ;;		line 12 in file "Joystick.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1
  8952 ;;      Params:         0       0       0
  8953 ;;      Locals:         0       0       0
  8954 ;;      Temps:          0       0       0
  8955 ;;      Totals:         0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; Hardware stack levels required when called: 2
  8959 ;; This function calls:
  8960 ;;		Nothing
  8961 ;; This function is called by:
  8962 ;;		_main
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text74
  8967  001E70                     __ptext74:
  8968                           	callstack 0
  8969  001E70                     _JoystickInit:
  8970                           	callstack 28
  8971                           
  8972                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8973                           
  8974                           ;incstack = 0
  8975  001E70  0E01               	movlw	1
  8976  001E72  6EC2               	movwf	194,c	;volatile
  8977                           
  8978                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8979  001E74  0E0D               	movlw	13
  8980  001E76  6EC1               	movwf	193,c	;volatile
  8981                           
  8982                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8983  001E78  0E09               	movlw	9
  8984  001E7A  6EC0               	movwf	192,c	;volatile
  8985                           
  8986                           ;Joystick.c: 16:     ADRESH = 127;
  8987  001E7C  0E7F               	movlw	127
  8988  001E7E  6EC4               	movwf	196,c	;volatile
  8989  001E80  0C7F               	retlw	127	;funcret
  8990  001E82                     __end_of_JoystickInit:
  8991                           	callstack 0
  8992                           
  8993 ;; *************** function _GLCDMotor *****************
  8994 ;; Defined at:
  8995 ;;		line 36 in file "GestioLCD.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/1
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1
  9009 ;;      Params:         0       0       0
  9010 ;;      Locals:         0       0       0
  9011 ;;      Temps:          2       0       0
  9012 ;;      Totals:         2       0       0
  9013 ;;Total ram usage:        2 bytes
  9014 ;; Hardware stack levels used: 1
  9015 ;; Hardware stack levels required when called: 6
  9016 ;; This function calls:
  9017 ;;		_LcClear
  9018 ;;		_LcGotoXY
  9019 ;;		_LcLliure
  9020 ;;		_LcNewString
  9021 ;;		_LcPutChar
  9022 ;;		_TiGetTics
  9023 ;;		_TiResetTics
  9024 ;; This function is called by:
  9025 ;;		_main
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text75
  9030  000A88                     __ptext75:
  9031                           	callstack 0
  9032  000A88                     _GLCDMotor:
  9033                           	callstack 24
  9034                           
  9035                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9036                           
  9037                           ;incstack = 0
  9038  000A88  D10B               	goto	l6034
  9039  000A8A                     l5850:
  9040                           
  9041                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9042  000A8A  0E11               	movlw	17
  9043  000A8C  601C               	cpfslt	GLCDMotor@length1^0,c
  9044  000A8E  D010               	goto	l5860
  9045  000A90  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9046  000A92  D00E               	goto	l5860
  9047                           
  9048                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9049  000A94  0E00               	movlw	0
  9050  000A96  6E6E               	movwf	LcGotoXY@Row^0,c
  9051  000A98  EC04  F00E         	call	_LcGotoXY
  9052                           
  9053                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9054  000A9C  D932               	call	PL8	;call to abstracted procedure
  9055  000A9E  6E75               	movwf	??_GLCDMotor^0,c
  9056  000AA0  C075  F069         	movff	??_GLCDMotor,LcNewString@new_s
  9057  000AA4  D933               	call	PL10	;call to abstracted procedure
  9058  000AA6  EC82  F00F         	call	_LcNewString	;wreg free
  9059                           
  9060                           ;GestioLCD.c: 53:     state = 5;
  9061  000AAA  0E05               	movlw	5
  9062  000AAC  6E22               	movwf	GLCDMotor@state^0,c
  9063                           
  9064                           ;GestioLCD.c: 54:    }
  9065  000AAE  0C05               	retlw	5
  9066  000AB0                     l5860:
  9067  000AB0  0E10               	movlw	16
  9068  000AB2  641C               	cpfsgt	GLCDMotor@length1^0,c
  9069  000AB4  0C10               	retlw	16
  9070  000AB6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9071  000AB8  0C10               	retlw	16
  9072  000ABA                     u5980:
  9073                           
  9074                           ;GestioLCD.c: 56:     state++;
  9075  000ABA  2A22               	incf	GLCDMotor@state^0,f,c
  9076  000ABC  0012               	return	
  9077  000ABE                     l5866:
  9078                           
  9079                           ;GestioLCD.c: 60:    if (j>=16) {
  9080  000ABE  0E0F               	movlw	15
  9081  000AC0  6421               	cpfsgt	GLCDMotor@j^0,c
  9082  000AC2  D014               	goto	l5880
  9083                           
  9084                           ;GestioLCD.c: 61:     min1++;
  9085  000AC4  2A20               	incf	GLCDMotor@min1^0,f,c
  9086                           
  9087                           ;GestioLCD.c: 62:     max1++;
  9088  000AC6  2A4F               	incf	GLCDMotor@max1^0,f,c
  9089                           
  9090                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9091  000AC8  D91C               	call	PL8	;call to abstracted procedure
  9092  000ACA  244F               	addwf	GLCDMotor@max1^0,w,c
  9093  000ACC  6E75               	movwf	??_GLCDMotor^0,c
  9094  000ACE  D90E               	call	PL2	;call to abstracted procedure
  9095  000AD0  E101               	bnz	l5874
  9096  000AD2  6A4F               	clrf	GLCDMotor@max1^0,c
  9097  000AD4                     l5874:
  9098                           
  9099                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9100  000AD4  D916               	call	PL8	;call to abstracted procedure
  9101  000AD6  2420               	addwf	GLCDMotor@min1^0,w,c
  9102  000AD8  6E75               	movwf	??_GLCDMotor^0,c
  9103  000ADA  D908               	call	PL2	;call to abstracted procedure
  9104  000ADC  E101               	bnz	l956
  9105  000ADE  6A20               	clrf	GLCDMotor@min1^0,c
  9106  000AE0                     l956:
  9107                           
  9108                           ;GestioLCD.c: 65:     j=0;
  9109  000AE0  6A21               	clrf	GLCDMotor@j^0,c
  9110                           
  9111                           ;GestioLCD.c: 66:     k1=min1;
  9112  000AE2  C020  F01E         	movff	GLCDMotor@min1,GLCDMotor@k1
  9113                           
  9114                           ;GestioLCD.c: 67:     state = 6;
  9115  000AE6  0E06               	movlw	6
  9116  000AE8  6E22               	movwf	GLCDMotor@state^0,c
  9117                           
  9118                           ;GestioLCD.c: 68:    }
  9119  000AEA  0C06               	retlw	6
  9120  000AEC                     l5880:
  9121  000AEC  0E10               	movlw	16
  9122  000AEE  6021               	cpfslt	GLCDMotor@j^0,c
  9123  000AF0  0C10               	retlw	16
  9124                           
  9125                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9126  000AF2  0E00               	movlw	0
  9127  000AF4  6E6E               	movwf	LcGotoXY@Row^0,c
  9128  000AF6  5021               	movf	GLCDMotor@j^0,w,c
  9129  000AF8  EC04  F00E         	call	_LcGotoXY
  9130                           
  9131                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9132  000AFC  D902               	call	PL8	;call to abstracted procedure
  9133  000AFE  241E               	addwf	GLCDMotor@k1^0,w,c
  9134  000B00  6E75               	movwf	??_GLCDMotor^0,c
  9135  000B02  D8F4               	call	PL2	;call to abstracted procedure
  9136  000B04  EC29  F00D         	call	_LcPutChar
  9137                           
  9138                           ;GestioLCD.c: 72:     j++;
  9139  000B08  2A21               	incf	GLCDMotor@j^0,f,c
  9140                           
  9141                           ;GestioLCD.c: 73:     k1++;
  9142  000B0A  2A1E               	incf	GLCDMotor@k1^0,f,c
  9143                           
  9144                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9145  000B0C  D8FA               	call	PL8	;call to abstracted procedure
  9146  000B0E  241E               	addwf	GLCDMotor@k1^0,w,c
  9147  000B10  6E75               	movwf	??_GLCDMotor^0,c
  9148  000B12  D8EC               	call	PL2	;call to abstracted procedure
  9149  000B14  B4D8               	btfsc	status,2,c
  9150  000B16  6A1E               	clrf	GLCDMotor@k1^0,c
  9151  000B18  0012               	return	
  9152  000B1A                     l5894:
  9153                           
  9154                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9155  000B1A  0E04               	movlw	4
  9156  000B1C  6023               	cpfslt	_menuDaltGLCD^0,c
  9157  000B1E  D010               	goto	u6080
  9158  000B20  D7CC               	goto	u5980
  9159  000B22                     u6050:
  9160                           
  9161                           ;GestioLCD.c: 82:     state = 0;
  9162  000B22  6A22               	clrf	GLCDMotor@state^0,c
  9163  000B24  0012               	return	
  9164  000B26                     l5902:
  9165                           
  9166                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9167  000B26  EC88  F00F         	call	_LcLliure	;wreg free
  9168  000B2A  E306               	bnc	l5908
  9169  000B2C  0E04               	movlw	4
  9170  000B2E  6023               	cpfslt	_menuDaltGLCD^0,c
  9171  000B30  D003               	goto	l5908
  9172                           
  9173                           ;GestioLCD.c: 87:     state = 7;
  9174  000B32  0E07               	movlw	7
  9175  000B34  6E22               	movwf	GLCDMotor@state^0,c
  9176                           
  9177                           ;GestioLCD.c: 88:    }
  9178  000B36  0C07               	retlw	7
  9179  000B38                     l5908:
  9180  000B38  EC88  F00F         	call	_LcLliure	;wreg free
  9181  000B3C  A0D8               	btfss	status,0,c
  9182  000B3E  0012               	return	
  9183  000B40                     u6080:
  9184  000B40  0E03               	movlw	3
  9185  000B42  6423               	cpfsgt	_menuDaltGLCD^0,c
  9186  000B44  0C03               	retlw	3
  9187  000B46  D7ED               	goto	u6050
  9188  000B48                     l968:
  9189                           
  9190                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9191  000B48  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9192  000B4A  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9193  000B4C  0012               	return	
  9194                           
  9195                           ;GestioLCD.c: 95:     length1 = 0;
  9196  000B4E  6A1C               	clrf	GLCDMotor@length1^0,c
  9197                           
  9198                           ;GestioLCD.c: 96:     length2 = 0;
  9199  000B50  6A1B               	clrf	GLCDMotor@length2^0,c
  9200                           
  9201                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9202  000B52  0E00               	movlw	0
  9203  000B54  6E6E               	movwf	LcGotoXY@Row^0,c
  9204  000B56  EC04  F00E         	call	_LcGotoXY
  9205                           
  9206                           ;GestioLCD.c: 98:     min1 = 0;
  9207  000B5A  6A20               	clrf	GLCDMotor@min1^0,c
  9208                           
  9209                           ;GestioLCD.c: 99:     max1 = 15;
  9210  000B5C  0E0F               	movlw	15
  9211  000B5E  6E4F               	movwf	GLCDMotor@max1^0,c
  9212                           
  9213                           ;GestioLCD.c: 100:     min2 = 0;
  9214  000B60  6A1F               	clrf	GLCDMotor@min2^0,c
  9215                           
  9216                           ;GestioLCD.c: 101:     max2 = 15;
  9217  000B62  0E0F               	movlw	15
  9218  000B64  6E4E               	movwf	GLCDMotor@max2^0,c
  9219                           
  9220                           ;GestioLCD.c: 102:     j = 0;
  9221  000B66  6A21               	clrf	GLCDMotor@j^0,c
  9222                           
  9223                           ;GestioLCD.c: 103:     k1 = 0;
  9224  000B68  6A1E               	clrf	GLCDMotor@k1^0,c
  9225                           
  9226                           ;GestioLCD.c: 104:     k2 = 0;
  9227  000B6A  6A1D               	clrf	GLCDMotor@k2^0,c
  9228                           
  9229                           ;GestioLCD.c: 105:     newString = 0;
  9230  000B6C  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9231  000B6E  D7A5               	goto	u5980
  9232  000B70                     l5938:
  9233                           
  9234                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9235  000B70  D8C8               	call	PL8	;call to abstracted procedure
  9236  000B72  241C               	addwf	GLCDMotor@length1^0,w,c
  9237  000B74  6E75               	movwf	??_GLCDMotor^0,c
  9238  000B76  D8BA               	call	PL2	;call to abstracted procedure
  9239  000B78  E104               	bnz	l5944
  9240  000B7A  0E03               	movlw	3
  9241  000B7C  6423               	cpfsgt	_menuDaltGLCD^0,c
  9242  000B7E  D001               	goto	l5944
  9243  000B80  D79C               	goto	u5980
  9244  000B82                     l5944:
  9245  000B82  D8BF               	call	PL8	;call to abstracted procedure
  9246  000B84  241C               	addwf	GLCDMotor@length1^0,w,c
  9247  000B86  6E75               	movwf	??_GLCDMotor^0,c
  9248  000B88  D8B1               	call	PL2	;call to abstracted procedure
  9249  000B8A  E002               	bz	l5948
  9250                           
  9251                           ;GestioLCD.c: 114:     length1++;
  9252  000B8C  2A1C               	incf	GLCDMotor@length1^0,f,c
  9253                           
  9254                           ;GestioLCD.c: 115:    }
  9255  000B8E  0012               	return	
  9256  000B90                     l5948:
  9257  000B90  0E04               	movlw	4
  9258  000B92  6023               	cpfslt	_menuDaltGLCD^0,c
  9259  000B94  0C04               	retlw	4
  9260  000B96  D8B5               	call	PL8	;call to abstracted procedure
  9261  000B98  241C               	addwf	GLCDMotor@length1^0,w,c
  9262  000B9A  6E75               	movwf	??_GLCDMotor^0,c
  9263  000B9C  D8A7               	call	PL2	;call to abstracted procedure
  9264  000B9E  A4D8               	btfss	status,2,c
  9265  000BA0  0012               	return	
  9266                           
  9267                           ;GestioLCD.c: 117:     state = 13;
  9268  000BA2  0E0D               	movlw	13
  9269  000BA4  6E22               	movwf	GLCDMotor@state^0,c
  9270  000BA6  0C0D               	retlw	13
  9271  000BA8                     l5954:
  9272                           
  9273                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9274  000BA8  0E11               	movlw	17
  9275  000BAA  601B               	cpfslt	GLCDMotor@length2^0,c
  9276  000BAC  D015               	goto	l5964
  9277  000BAE  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9278  000BB0  D013               	goto	l5964
  9279                           
  9280                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9281  000BB2  EC28  F005         	call	PL32	;call to abstracted procedure
  9282  000BB6  EC04  F00E         	call	_LcGotoXY
  9283                           
  9284                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9285  000BBA  5023               	movf	_menuDaltGLCD^0,w,c
  9286  000BBC  0D1D               	mullw	29
  9287  000BBE  CFF3 F075          	movff	prodl,??_GLCDMotor
  9288  000BC2  0E1D               	movlw	29
  9289  000BC4  2675               	addwf	??_GLCDMotor^0,f,c
  9290  000BC6  5075               	movf	??_GLCDMotor^0,w,c
  9291  000BC8  0F01               	addlw	low _menuList
  9292  000BCA  6E76               	movwf	(??_GLCDMotor+1)^0,c
  9293  000BCC  C076  F069         	movff	??_GLCDMotor+1,LcNewString@new_s
  9294  000BD0  D89D               	call	PL10	;call to abstracted procedure
  9295  000BD2  EC82  F00F         	call	_LcNewString	;wreg free
  9296  000BD6  D771               	goto	u5980
  9297  000BD8                     l5964:
  9298  000BD8  0E10               	movlw	16
  9299  000BDA  641B               	cpfsgt	GLCDMotor@length2^0,c
  9300  000BDC  0C10               	retlw	16
  9301  000BDE  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9302  000BE0  0C10               	retlw	16
  9303                           
  9304                           ;GestioLCD.c: 127:     state = 9;
  9305  000BE2  0E09               	movlw	9
  9306  000BE4  6E22               	movwf	GLCDMotor@state^0,c
  9307  000BE6  0C09               	retlw	9
  9308  000BE8                     l5970:
  9309                           
  9310                           ;GestioLCD.c: 131:    if (j<16) {
  9311  000BE8  0E10               	movlw	16
  9312  000BEA  6021               	cpfslt	GLCDMotor@j^0,c
  9313  000BEC  D014               	goto	l5984
  9314                           
  9315                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9316  000BEE  0E01               	movlw	1
  9317  000BF0  6E6E               	movwf	LcGotoXY@Row^0,c
  9318  000BF2  5021               	movf	GLCDMotor@j^0,w,c
  9319  000BF4  EC04  F00E         	call	_LcGotoXY
  9320                           
  9321                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9322  000BF8  D884               	call	PL8	;call to abstracted procedure
  9323  000BFA  241D               	addwf	GLCDMotor@k2^0,w,c
  9324  000BFC  D87E               	call	PL4	;call to abstracted procedure
  9325  000BFE  D876               	call	PL2	;call to abstracted procedure
  9326  000C00  EC29  F00D         	call	_LcPutChar
  9327                           
  9328                           ;GestioLCD.c: 134:     j++;
  9329  000C04  2A21               	incf	GLCDMotor@j^0,f,c
  9330                           
  9331                           ;GestioLCD.c: 135:     k2++;
  9332  000C06  2A1D               	incf	GLCDMotor@k2^0,f,c
  9333                           
  9334                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9335  000C08  D87C               	call	PL8	;call to abstracted procedure
  9336  000C0A  241D               	addwf	GLCDMotor@k2^0,w,c
  9337  000C0C  D876               	call	PL4	;call to abstracted procedure
  9338  000C0E  D86E               	call	PL2	;call to abstracted procedure
  9339  000C10  B4D8               	btfsc	status,2,c
  9340  000C12  6A1D               	clrf	GLCDMotor@k2^0,c
  9341  000C14  0012               	return	
  9342  000C16                     l5984:
  9343  000C16  0E0F               	movlw	15
  9344  000C18  6421               	cpfsgt	GLCDMotor@j^0,c
  9345  000C1A  0C0F               	retlw	15
  9346                           
  9347                           ;GestioLCD.c: 139:     min2++;
  9348  000C1C  2A1F               	incf	GLCDMotor@min2^0,f,c
  9349                           
  9350                           ;GestioLCD.c: 140:     max2++;
  9351  000C1E  2A4E               	incf	GLCDMotor@max2^0,f,c
  9352                           
  9353                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9354  000C20  D870               	call	PL8	;call to abstracted procedure
  9355  000C22  244E               	addwf	GLCDMotor@max2^0,w,c
  9356  000C24  D86A               	call	PL4	;call to abstracted procedure
  9357  000C26  D862               	call	PL2	;call to abstracted procedure
  9358  000C28  E101               	bnz	l5992
  9359  000C2A  6A4E               	clrf	GLCDMotor@max2^0,c
  9360  000C2C                     l5992:
  9361                           
  9362                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9363  000C2C  D86A               	call	PL8	;call to abstracted procedure
  9364  000C2E  241F               	addwf	GLCDMotor@min2^0,w,c
  9365  000C30  D864               	call	PL4	;call to abstracted procedure
  9366  000C32  D85C               	call	PL2	;call to abstracted procedure
  9367  000C34  E101               	bnz	l986
  9368  000C36  6A1F               	clrf	GLCDMotor@min2^0,c
  9369  000C38                     l986:
  9370                           
  9371                           ;GestioLCD.c: 143:     j=0;
  9372  000C38  6A21               	clrf	GLCDMotor@j^0,c
  9373                           
  9374                           ;GestioLCD.c: 144:     k2=min2;
  9375  000C3A  C01F  F01D         	movff	GLCDMotor@min2,GLCDMotor@k2
  9376  000C3E  D73D               	goto	u5980
  9377  000C40                     l5998:
  9378                           
  9379                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9380  000C40  5024               	movf	_timerGLCD^0,w,c
  9381  000C42  EC5C  F00E         	call	_TiGetTics
  9382  000C46  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  9383  000C48  D00A               	goto	l988
  9384  000C4A  D865               	call	PL54	;call to abstracted procedure
  9385  000C4C  E308               	bnc	l988
  9386  000C4E  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9387  000C50  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9388  000C52  D005               	goto	l988
  9389                           
  9390                           ;GestioLCD.c: 150:     LcClear();
  9391  000C54  ECA5  F00E         	call	_LcClear	;wreg free
  9392  000C58                     l6006:
  9393                           
  9394                           ;GestioLCD.c: 151:     state = 2;
  9395  000C58  0E02               	movlw	2
  9396  000C5A  6E22               	movwf	GLCDMotor@state^0,c
  9397                           
  9398                           ;GestioLCD.c: 152:    }
  9399  000C5C  0C02               	retlw	2
  9400  000C5E                     l988:
  9401  000C5E  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9402  000C60  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9403  000C62  0012               	return	
  9404                           
  9405                           ;GestioLCD.c: 154:     LcClear();
  9406  000C64  ECA5  F00E         	call	_LcClear	;wreg free
  9407  000C68  D75C               	goto	u6050
  9408  000C6A                     l6014:
  9409                           
  9410                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9411  000C6A  5024               	movf	_timerGLCD^0,w,c
  9412  000C6C  EC00  F00F         	call	_TiResetTics
  9413  000C70  D724               	goto	u5980
  9414  000C72                     l6018:
  9415                           
  9416                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9417  000C72  EC88  F00F         	call	_LcLliure	;wreg free
  9418  000C76  A0D8               	btfss	status,0,c
  9419  000C78  0012               	return	
  9420                           
  9421                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9422  000C7A  5024               	movf	_timerGLCD^0,w,c
  9423  000C7C  EC00  F00F         	call	_TiResetTics
  9424                           
  9425                           ;GestioLCD.c: 165:     state = 11;
  9426  000C80  0E0B               	movlw	11
  9427  000C82  6E22               	movwf	GLCDMotor@state^0,c
  9428  000C84  0C0B               	retlw	11
  9429  000C86                     l6024:
  9430                           
  9431                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9432  000C86  D83D               	call	PL8	;call to abstracted procedure
  9433  000C88  241B               	addwf	GLCDMotor@length2^0,w,c
  9434  000C8A  D837               	call	PL4	;call to abstracted procedure
  9435  000C8C  D82F               	call	PL2	;call to abstracted procedure
  9436  000C8E  E002               	bz	l6028
  9437                           
  9438                           ;GestioLCD.c: 170:     length2++;
  9439  000C90  2A1B               	incf	GLCDMotor@length2^0,f,c
  9440                           
  9441                           ;GestioLCD.c: 171:    }
  9442  000C92  0012               	return	
  9443  000C94                     l6028:
  9444  000C94  D836               	call	PL8	;call to abstracted procedure
  9445  000C96  241B               	addwf	GLCDMotor@length2^0,w,c
  9446  000C98  D830               	call	PL4	;call to abstracted procedure
  9447  000C9A  D828               	call	PL2	;call to abstracted procedure
  9448  000C9C  E0DD               	bz	l6006
  9449  000C9E  0012               	return	
  9450  000CA0                     l6034:
  9451  000CA0  5022               	movf	GLCDMotor@state^0,w,c
  9452  000CA2  6E75               	movwf	??_GLCDMotor^0,c
  9453  000CA4  6A76               	clrf	(??_GLCDMotor+1)^0,c
  9454                           
  9455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9456                           ; Switch size 1, requested type "space"
  9457                           ; Number of cases is 1, Range of values is 0 to 0
  9458                           ; switch strategies available:
  9459                           ; Name         Instructions Cycles
  9460                           ; simple_byte            4     3 (average)
  9461                           ;	Chosen strategy is simple_byte
  9462  000CA6  5076               	movf	(??_GLCDMotor+1)^0,w,c
  9463  000CA8  A4D8               	btfss	status,2,c
  9464  000CAA  0012               	return	
  9465                           
  9466                           ; Switch size 1, requested type "space"
  9467                           ; Number of cases is 12, Range of values is 0 to 13
  9468                           ; switch strategies available:
  9469                           ; Name         Instructions Cycles
  9470                           ; simple_byte           37    19 (average)
  9471                           ;	Chosen strategy is simple_byte
  9472  000CAC  5075               	movf	??_GLCDMotor^0,w,c
  9473  000CAE  E101 D74B          	bz	l968
  9474  000CB2  0A01               	xorlw	1	; case 1
  9475  000CB4  E101 D75C          	bz	l5938
  9476  000CB8  0A03               	xorlw	3	; case 2
  9477  000CBA  E101 D6E6          	bz	l5850
  9478  000CBE  0A01               	xorlw	1	; case 3
  9479  000CC0  E101 D6FD          	bz	l5866
  9480  000CC4  0A06               	xorlw	6	; case 5
  9481  000CC6  E101 D72E          	bz	l5902
  9482  000CCA  0A03               	xorlw	3	; case 6
  9483  000CCC  E101 D725          	bz	l5894
  9484  000CD0  0A01               	xorlw	1	; case 7
  9485  000CD2  E101 D769          	bz	l5954
  9486  000CD6  0A0F               	xorlw	15	; case 8
  9487  000CD8  E0CC               	bz	l6018
  9488  000CDA  0A01               	xorlw	1	; case 9
  9489  000CDC  E085               	bz	l5970
  9490  000CDE  0A03               	xorlw	3	; case 10
  9491  000CE0  E0C4               	bz	l6014
  9492  000CE2  0A01               	xorlw	1	; case 11
  9493  000CE4  E0AD               	bz	l5998
  9494  000CE6  0A06               	xorlw	6	; case 13
  9495  000CE8  E0CE               	bz	l6024
  9496  000CEA  0012               	return		;funcret
  9497  000CEC                     __end_of_GLCDMotor:
  9498                           	callstack 0
  9499  000CEC                     PL2:
  9500                           	callstack 24
  9501  000CEC  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  9502  000CF0                     	if	1	;There is more than 1 active tblptr byte
  9503  000CF0  0E02               	movlw	high __smallconst
  9504  000CF2  6EF7               	movwf	tblptrh,c
  9505  000CF4                     	endif
  9506  000CF4                     	if	0	;tblptru may be non-zero
  9507  000CF4                     	endif
  9508  000CF4                     	if	0	;tblptru may be non-zero
  9509  000CF4                     	endif
  9510  000CF4  0008               	tblrd		*
  9511  000CF6  50F5               	movf	tablat,w,c
  9512  000CF8  0012               	return	
  9513  000CFA                     __end_ofPL2:
  9514                           	callstack 0
  9515  000CFA                     PL4:
  9516                           	callstack 24
  9517  000CFA  6E75               	movwf	??_GLCDMotor^0,c
  9518  000CFC  0E1D               	movlw	29
  9519  000CFE  2675               	addwf	??_GLCDMotor^0,f,c
  9520  000D00  0C1D               	retlw	29
  9521  000D02                     __end_ofPL4:
  9522                           	callstack 0
  9523  000D02                     PL8:
  9524                           	callstack 24
  9525  000D02  5023               	movf	_menuDaltGLCD^0,w,c
  9526  000D04  0D1D               	mullw	29
  9527  000D06  50F3               	movf	243,w,c
  9528  000D08  0F01               	addlw	low _menuList
  9529  000D0A  0012               	return	
  9530  000D0C                     __end_ofPL8:
  9531                           	callstack 0
  9532  000D0C                     PL10:
  9533                           	callstack 24
  9534  000D0C  5069               	movf	LcNewString@new_s^0,w,c
  9535  000D0E  A4D8               	btfss	status,2,c
  9536  000D10  0E02               	movlw	high __smallconst
  9537  000D12  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  9538  000D14  0012               	return	
  9539  000D16                     __end_ofPL10:
  9540                           	callstack 0
  9541  000D16                     PL54:
  9542                           	callstack 27
  9543  000D16  0EB5               	movlw	181
  9544  000D18  5C66               	subwf	?_TiGetTics^0,w,c
  9545  000D1A  0E04               	movlw	4
  9546  000D1C  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  9547  000D1E  0012               	return	
  9548  000D20                     __end_ofPL54:
  9549                           	callstack 0
  9550                           
  9551 ;; *************** function _LcPutChar *****************
  9552 ;; Defined at:
  9553 ;;		line 134 in file "LcTLCD.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  c               1    wreg     unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  c               1   19[COMRAM] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/1
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1
  9567 ;;      Params:         0       0       0
  9568 ;;      Locals:         1       0       0
  9569 ;;      Temps:          0       0       0
  9570 ;;      Totals:         1       0       0
  9571 ;;Total ram usage:        1 bytes
  9572 ;; Hardware stack levels used: 1
  9573 ;; Hardware stack levels required when called: 5
  9574 ;; This function calls:
  9575 ;;		_CantaData
  9576 ;;		_LcGotoXY
  9577 ;;		_WaitForBusy
  9578 ;; This function is called by:
  9579 ;;		_LcLCD
  9580 ;;		_menu
  9581 ;;		_GLCDMotor
  9582 ;;		_motorSIO
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text76
  9587  001A52                     __ptext76:
  9588                           	callstack 0
  9589  001A52                     _LcPutChar:
  9590                           	callstack 24
  9591                           
  9592                           ;incstack = 0
  9593                           ;LcPutChar@c stored from wreg
  9594  001A52  6E74               	movwf	LcPutChar@c^0,c
  9595                           
  9596                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  9597  001A54  ECAF  F00D         	call	_WaitForBusy	;wreg free
  9598  001A58  5074               	movf	LcPutChar@c^0,w,c
  9599  001A5A  ECCE  F00D         	call	_CantaData
  9600                           
  9601                           ;LcTLCD.c: 138:  ++ColumnAct;
  9602  001A5E  2A3E               	incf	_ColumnAct^0,f,c
  9603                           
  9604                           ;LcTLCD.c: 140:  if (Rows == 2) {
  9605  001A60  0E02               	movlw	2
  9606  001A62  1840               	xorwf	_Rows^0,w,c
  9607  001A64  E10C               	bnz	l4518
  9608                           
  9609                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  9610  001A66  0E27               	movlw	39
  9611  001A68  643E               	cpfsgt	_ColumnAct^0,c
  9612  001A6A  D009               	goto	l4518
  9613                           
  9614                           ;LcTLCD.c: 142:    ColumnAct = 0;
  9615  001A6C  6A3E               	clrf	_ColumnAct^0,c
  9616                           
  9617                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  9618  001A6E  2A3F               	incf	_RowAct^0,f,c
  9619  001A70  0E01               	movlw	1
  9620  001A72  643F               	cpfsgt	_RowAct^0,c
  9621  001A74  D001               	goto	l4516
  9622  001A76  6A3F               	clrf	_RowAct^0,c
  9623  001A78                     l4516:
  9624                           
  9625                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  9626  001A78  D80C               	call	PL76	;call to abstracted procedure
  9627  001A7A  EC04  F00E         	call	_LcGotoXY
  9628  001A7E                     l4518:
  9629                           
  9630                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  9631  001A7E  043F               	decf	_RowAct^0,w,c
  9632  001A80  A4D8               	btfss	status,2,c
  9633  001A82  0012               	return	
  9634                           
  9635                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  9636  001A84  0E27               	movlw	39
  9637  001A86  643E               	cpfsgt	_ColumnAct^0,c
  9638  001A88  D001               	goto	l4524
  9639  001A8A  6A3E               	clrf	_ColumnAct^0,c
  9640  001A8C                     l4524:
  9641                           
  9642                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  9643  001A8C  D802               	call	PL76	;call to abstracted procedure
  9644  001A8E  EF04  F00E         	goto	_LcGotoXY
  9645  001A92                     __end_of_LcPutChar:
  9646                           	callstack 0
  9647  001A92                     PL76:
  9648                           	callstack 24
  9649  001A92  C03F  F06E         	movff	_RowAct,LcGotoXY@Row
  9650  001A96  503E               	movf	_ColumnAct^0,w,c
  9651  001A98  0012               	return	
  9652  001A9A                     __end_ofPL76:
  9653                           	callstack 0
  9654                           
  9655 ;; *************** function _CantaData *****************
  9656 ;; Defined at:
  9657 ;;		line 196 in file "LcTLCD.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  Data            1    wreg     unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  Data            1    7[COMRAM] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/1
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1
  9671 ;;      Params:         0       0       0
  9672 ;;      Locals:         1       0       0
  9673 ;;      Temps:          0       0       0
  9674 ;;      Totals:         1       0       0
  9675 ;;Total ram usage:        1 bytes
  9676 ;; Hardware stack levels used: 1
  9677 ;; Hardware stack levels required when called: 3
  9678 ;; This function calls:
  9679 ;;		_CantaPartAlta
  9680 ;;		_CantaPartBaixa
  9681 ;; This function is called by:
  9682 ;;		_LcPutChar
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text77
  9687  001B9C                     __ptext77:
  9688                           	callstack 0
  9689  001B9C                     _CantaData:
  9690                           	callstack 25
  9691                           
  9692                           ;incstack = 0
  9693                           ;CantaData@Data stored from wreg
  9694  001B9C  6E68               	movwf	CantaData@Data^0,c
  9695                           
  9696                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9697  001B9E  9694               	bcf	148,3,c	;volatile
  9698  001BA0  9494               	bcf	148,2,c	;volatile
  9699  001BA2  9294               	bcf	148,1,c	;volatile
  9700  001BA4  9094               	bcf	148,0,c	;volatile
  9701                           
  9702                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  9703  001BA6  8A8B               	bsf	139,5,c	;volatile
  9704                           
  9705                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  9706  001BA8  9E8C               	bcf	140,7,c	;volatile
  9707                           
  9708                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  9709  001BAA  888B               	bsf	139,4,c	;volatile
  9710                           
  9711                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9712  001BAC  5068               	movf	CantaData@Data^0,w,c
  9713  001BAE  ECA6  F00C         	call	_CantaPartAlta
  9714                           
  9715                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9716                           
  9717                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9718                           
  9719                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9720                           
  9721                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9722  001BB2  D80B               	call	PL58	;call to abstracted procedure
  9723                           
  9724                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9725  001BB4  5068               	movf	CantaData@Data^0,w,c
  9726  001BB6  EC73  F00C         	call	_CantaPartBaixa
  9727                           
  9728                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9729                           
  9730                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9731                           
  9732                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9733  001BBA  D000               	goto	PL30	;call to abstracted procedure
  9734  001BBC                     __end_of_CantaData:
  9735                           	callstack 0
  9736  001BBC                     PL30:
  9737                           	callstack 24
  9738  001BBC  888B               	bsf	139,4,c	;volatile
  9739  001BBE  988B               	bcf	139,4,c	;volatile
  9740  001BC0  8694               	bsf	148,3,c	;volatile
  9741  001BC2  8494               	bsf	148,2,c	;volatile
  9742  001BC4  8294               	bsf	148,1,c	;volatile
  9743  001BC6  8094               	bsf	148,0,c	;volatile
  9744  001BC8  0012               	return		;funcret
  9745  001BCA                     __end_ofPL30:
  9746                           	callstack 0
  9747  001BCA                     PL58:
  9748                           	callstack 24
  9749  001BCA  888B               	bsf	139,4,c	;volatile
  9750  001BCC  988B               	bcf	139,4,c	;volatile
  9751  001BCE  988B               	bcf	139,4,c	;volatile
  9752  001BD0  888B               	bsf	139,4,c	;volatile
  9753  001BD2  0012               	return	
  9754  001BD4                     __end_ofPL58:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function _LcNewString *****************
  9758 ;; Defined at:
  9759 ;;		line 241 in file "LcTLCD.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9762 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  9763 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9764 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  9765 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/1
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1
  9777 ;;      Params:         2       0       0
  9778 ;;      Locals:         0       0       0
  9779 ;;      Temps:          0       0       0
  9780 ;;      Totals:         2       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 2
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_menu
  9788 ;;		_GLCDMotor
  9789 ;;		_motorJoc
  9790 ;;		_motorSIO
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text78
  9795  001F04                     __ptext78:
  9796                           	callstack 0
  9797  001F04                     _LcNewString:
  9798                           	callstack 27
  9799                           
  9800                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9801                           
  9802                           ;incstack = 0
  9803  001F04  C069  F00F         	movff	LcNewString@new_s,_s_ptr
  9804  001F08  C06A  F010         	movff	LcNewString@new_s+1,_s_ptr+1
  9805                           
  9806                           ;LcTLCD.c: 243:     nou_s = 1;
  9807  001F0C  8279               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9808  001F0E  0012               	return		;funcret
  9809  001F10                     __end_of_LcNewString:
  9810                           	callstack 0
  9811                           
  9812 ;; *************** function _LcLliure *****************
  9813 ;; Defined at:
  9814 ;;		line 257 in file "LcTLCD.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;		None               void
  9821 ;; Registers used:
  9822 ;;		status,0
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/1
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1
  9828 ;;      Params:         0       0       0
  9829 ;;      Locals:         0       0       0
  9830 ;;      Temps:          0       0       0
  9831 ;;      Totals:         0       0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 2
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		_menu
  9839 ;;		_GLCDMotor
  9840 ;;		_motorJoc
  9841 ;;		_motorSIO
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text79
  9846  001F10                     __ptext79:
  9847                           	callstack 0
  9848  001F10                     _LcLliure:
  9849                           	callstack 27
  9850                           
  9851                           ;LcTLCD.c: 258:     return !nou_s;
  9852                           
  9853                           ;incstack = 0
  9854  001F10  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9855  001F12  D002               	goto	l2170
  9856  001F14  90D8               	bcf	status,0,c
  9857  001F16  0012               	return	
  9858  001F18                     l2170:
  9859  001F18  80D8               	bsf	status,0,c
  9860  001F1A  0012               	return		;funcret
  9861  001F1C                     __end_of_LcLliure:
  9862                           	callstack 0
  9863                           
  9864 ;; *************** function _LcClear *****************
  9865 ;; Defined at:
  9866 ;;		line 84 in file "LcTLCD.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/1
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1
  9880 ;;      Params:         0       0       0
  9881 ;;      Locals:         0       0       0
  9882 ;;      Temps:          0       0       0
  9883 ;;      Totals:         0       0       0
  9884 ;;Total ram usage:        0 bytes
  9885 ;; Hardware stack levels used: 1
  9886 ;; Hardware stack levels required when called: 5
  9887 ;; This function calls:
  9888 ;;		_CantaIR
  9889 ;;		_Espera
  9890 ;;		_LcGotoXY
  9891 ;;		_WaitForBusy
  9892 ;; This function is called by:
  9893 ;;		_menu
  9894 ;;		_GLCDMotor
  9895 ;;		_motorSIO
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text80
  9900  001D4A                     __ptext80:
  9901                           	callstack 0
  9902  001D4A                     _LcClear:
  9903                           	callstack 24
  9904                           
  9905                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9906                           
  9907                           ;incstack = 0
  9908  001D4A  ECAF  F00D         	call	_WaitForBusy	;wreg free
  9909  001D4E  0E01               	movlw	1
  9910  001D50  ECF2  F00E         	call	_CantaIR
  9911                           
  9912                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9913  001D54  D806               	call	PL72	;call to abstracted procedure
  9914  001D56  ECB6  F00E         	call	_Espera
  9915                           
  9916                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9917  001D5A  0E00               	movlw	0
  9918  001D5C  6E6E               	movwf	LcGotoXY@Row^0,c
  9919  001D5E  EF04  F00E         	goto	_LcGotoXY
  9920  001D62                     __end_of_LcClear:
  9921                           	callstack 0
  9922  001D62                     PL72:
  9923                           	callstack 26
  9924  001D62  6A6E               	clrf	(Espera@ms+1)^0,c
  9925  001D64  0E03               	movlw	3
  9926  001D66  6E6D               	movwf	Espera@ms^0,c
  9927  001D68  503D               	movf	_Timer^0,w,c
  9928  001D6A  0012               	return	
  9929  001D6C                     __end_ofPL72:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _LcGotoXY *****************
  9933 ;; Defined at:
  9934 ;;		line 106 in file "LcTLCD.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;  Column          1    wreg     unsigned char 
  9937 ;;  Row             1   13[COMRAM] unsigned char 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;  Column          1   18[COMRAM] unsigned char 
  9940 ;;  Fisics          2   14[COMRAM] int 
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/1
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1
  9950 ;;      Params:         1       0       0
  9951 ;;      Locals:         5       0       0
  9952 ;;      Temps:          0       0       0
  9953 ;;      Totals:         6       0       0
  9954 ;;Total ram usage:        6 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 4
  9957 ;; This function calls:
  9958 ;;		_CantaIR
  9959 ;;		_WaitForBusy
  9960 ;; This function is called by:
  9961 ;;		_LcClear
  9962 ;;		_LcPutChar
  9963 ;;		_menu
  9964 ;;		_GLCDMotor
  9965 ;;		_motorJoc
  9966 ;;		_motorSIO
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text81
  9971  001C08                     __ptext81:
  9972                           	callstack 0
  9973  001C08                     _LcGotoXY:
  9974                           	callstack 24
  9975                           
  9976                           ;incstack = 0
  9977                           ;LcGotoXY@Column stored from wreg
  9978  001C08  6E73               	movwf	LcGotoXY@Column^0,c
  9979                           
  9980                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9981  001C0A  506E               	movf	LcGotoXY@Row^0,w,c
  9982  001C0C  E004               	bz	l57
  9983  001C0E  6A72               	clrf	(_LcGotoXY$336+1)^0,c
  9984  001C10  0E40               	movlw	64
  9985  001C12  6E71               	movwf	_LcGotoXY$336^0,c
  9986  001C14  D002               	goto	l4444
  9987  001C16                     l57:
  9988  001C16  6A71               	clrf	_LcGotoXY$336^0,c
  9989  001C18  6A72               	clrf	(_LcGotoXY$336+1)^0,c
  9990  001C1A                     l4444:
  9991  001C1A  5073               	movf	LcGotoXY@Column^0,w,c
  9992  001C1C  2471               	addwf	_LcGotoXY$336^0,w,c
  9993  001C1E  6E6F               	movwf	LcGotoXY@Fisics^0,c
  9994  001C20  0E00               	movlw	0
  9995  001C22  2072               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9996  001C24  6E70               	movwf	(LcGotoXY@Fisics+1)^0,c
  9997                           
  9998                           ;LcTLCD.c: 127:  WaitForBusy();
  9999  001C26  ECAF  F00D         	call	_WaitForBusy	;wreg free
 10000                           
 10001                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
 10002  001C2A  506F               	movf	LcGotoXY@Fisics^0,w,c
 10003  001C2C  0980               	iorlw	128
 10004  001C2E  ECF2  F00E         	call	_CantaIR
 10005                           
 10006                           ;LcTLCD.c: 130:  RowAct = Row;
 10007  001C32  C06E  F03F         	movff	LcGotoXY@Row,_RowAct
 10008                           
 10009                           ;LcTLCD.c: 131:  ColumnAct = Column;
 10010  001C36  C073  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10011  001C3A  0012               	return		;funcret
 10012  001C3C                     __end_of_LcGotoXY:
 10013                           	callstack 0
 10014                           
 10015 ;; *************** function _WaitForBusy *****************
 10016 ;; Defined at:
 10017 ;;		line 212 in file "LcTLCD.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;		None
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;  Busy            1   12[COMRAM] unsigned char 
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      void 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1
 10031 ;;      Params:         0       0       0
 10032 ;;      Locals:         1       0       0
 10033 ;;      Temps:          0       0       0
 10034 ;;      Totals:         1       0       0
 10035 ;;Total ram usage:        1 bytes
 10036 ;; Hardware stack levels used: 1
 10037 ;; Hardware stack levels required when called: 3
 10038 ;; This function calls:
 10039 ;;		_TiGetTics
 10040 ;;		_TiResetTics
 10041 ;; This function is called by:
 10042 ;;		_LcInit
 10043 ;;		_LcClear
 10044 ;;		_LcGotoXY
 10045 ;;		_LcPutChar
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text82
 10050  001B5E                     __ptext82:
 10051                           	callstack 0
 10052  001B5E                     _WaitForBusy:
 10053                           	callstack 25
 10054                           
 10055                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10056                           
 10057                           ;incstack = 0
 10058  001B5E  8694               	bsf	148,3,c	;volatile
 10059  001B60  8494               	bsf	148,2,c	;volatile
 10060  001B62  8294               	bsf	148,1,c	;volatile
 10061  001B64  8094               	bsf	148,0,c	;volatile
 10062                           
 10063                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
 10064  001B66  9A8B               	bcf	139,5,c	;volatile
 10065                           
 10066                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
 10067  001B68  8E8C               	bsf	140,7,c	;volatile
 10068                           
 10069                           ;LcTLCD.c: 216:  TiResetTics(Timer);
 10070  001B6A  503D               	movf	_Timer^0,w,c
 10071  001B6C  EC00  F00F         	call	_TiResetTics
 10072  001B70                     l4412:
 10073                           
 10074                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10075  001B70  888B               	bsf	139,4,c	;volatile
 10076  001B72  888B               	bsf	139,4,c	;volatile
 10077                           
 10078                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
 10079  001B74  0E00               	movlw	0
 10080  001B76  B682               	btfsc	130,3,c	;volatile
 10081  001B78  0E01               	movlw	1
 10082  001B7A  6E6D               	movwf	WaitForBusy@Busy^0,c
 10083                           
 10084                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
 10085  001B7C  988B               	bcf	139,4,c	;volatile
 10086                           
 10087                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
 10088  001B7E  988B               	bcf	139,4,c	;volatile
 10089                           
 10090                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10091  001B80  888B               	bsf	139,4,c	;volatile
 10092  001B82  888B               	bsf	139,4,c	;volatile
 10093                           
 10094                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
 10095  001B84  988B               	bcf	139,4,c	;volatile
 10096                           
 10097                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
 10098  001B86  988B               	bcf	139,4,c	;volatile
 10099                           
 10100                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
 10101  001B88  503D               	movf	_Timer^0,w,c
 10102  001B8A  EC5C  F00E         	call	_TiGetTics
 10103  001B8E  5066               	movf	?_TiGetTics^0,w,c
 10104  001B90  1067               	iorwf	(?_TiGetTics+1)^0,w,c
 10105  001B92  E001               	bz	l4434
 10106  001B94  0012               	return	
 10107  001B96                     l4434:
 10108                           
 10109                           ;LcTLCD.c: 227:  } while(Busy);
 10110  001B96  506D               	movf	WaitForBusy@Busy^0,w,c
 10111  001B98  E1EB               	bnz	l4412
 10112  001B9A  0012               	return		;funcret
 10113  001B9C                     __end_of_WaitForBusy:
 10114                           	callstack 0
 10115                           
 10116 ;; *************** function _CantaIR *****************
 10117 ;; Defined at:
 10118 ;;		line 180 in file "LcTLCD.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;  IR              1    wreg     unsigned char 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  IR              1    7[COMRAM] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, status,2, status,0, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1
 10132 ;;      Params:         0       0       0
 10133 ;;      Locals:         1       0       0
 10134 ;;      Temps:          0       0       0
 10135 ;;      Totals:         1       0       0
 10136 ;;Total ram usage:        1 bytes
 10137 ;; Hardware stack levels used: 1
 10138 ;; Hardware stack levels required when called: 3
 10139 ;; This function calls:
 10140 ;;		_CantaPartAlta
 10141 ;;		_CantaPartBaixa
 10142 ;; This function is called by:
 10143 ;;		_LcScroll
 10144 ;;		_LcInit
 10145 ;;		_LcClear
 10146 ;;		_LcGotoXY
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text83
 10151  001DE4                     __ptext83:
 10152                           	callstack 0
 10153  001DE4                     _CantaIR:
 10154                           	callstack 24
 10155                           
 10156                           ;incstack = 0
 10157                           ;CantaIR@IR stored from wreg
 10158  001DE4  6E68               	movwf	CantaIR@IR^0,c
 10159                           
 10160                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10161  001DE6  9694               	bcf	148,3,c	;volatile
 10162                           
 10163                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
 10164                           
 10165                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
 10166                           
 10167                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
 10168  001DE8  ECEF  F00B         	call	PL36	;call to abstracted procedure
 10169                           
 10170                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
 10171  001DEC  5068               	movf	CantaIR@IR^0,w,c
 10172  001DEE  ECA6  F00C         	call	_CantaPartAlta
 10173                           
 10174                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
 10175                           
 10176                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
 10177                           
 10178                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
 10179                           
 10180                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
 10181  001DF2  ECE5  F00D         	call	PL58	;call to abstracted procedure
 10182                           
 10183                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
 10184  001DF6  5068               	movf	CantaIR@IR^0,w,c
 10185  001DF8  EC73  F00C         	call	_CantaPartBaixa
 10186                           
 10187                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10188                           
 10189                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
 10190                           
 10191                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10192  001DFC  EFDE  F00D         	goto	PL30	;call to abstracted procedure
 10193  001E00                     __end_of_CantaIR:
 10194                           	callstack 0
 10195                           
 10196 ;; *************** function _CantaPartBaixa *****************
 10197 ;; Defined at:
 10198 ;;		line 173 in file "LcTLCD.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  c               1    wreg     unsigned char 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  c               1    6[COMRAM] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, status,2, status,0
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/1
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMRAM   BANK0   BANK1
 10212 ;;      Params:         0       0       0
 10213 ;;      Locals:         1       0       0
 10214 ;;      Temps:          1       0       0
 10215 ;;      Totals:         2       0       0
 10216 ;;Total ram usage:        2 bytes
 10217 ;; Hardware stack levels used: 1
 10218 ;; Hardware stack levels required when called: 2
 10219 ;; This function calls:
 10220 ;;		Nothing
 10221 ;; This function is called by:
 10222 ;;		_CantaIR
 10223 ;;		_CantaData
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text84
 10228  0018E6                     __ptext84:
 10229                           	callstack 0
 10230  0018E6                     _CantaPartBaixa:
 10231                           	callstack 24
 10232                           
 10233                           ;incstack = 0
 10234                           ;CantaPartBaixa@c stored from wreg
 10235  0018E6  6E67               	movwf	CantaPartBaixa@c^0,c
 10236                           
 10237                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10238  0018E8  A667               	btfss	CantaPartBaixa@c^0,3,c
 10239  0018EA  D003               	goto	u3620
 10240  0018EC  6A66               	clrf	??_CantaPartBaixa^0,c
 10241  0018EE  2A66               	incf	??_CantaPartBaixa^0,f,c
 10242  0018F0  D001               	goto	u3638
 10243  0018F2                     u3620:
 10244  0018F2  6A66               	clrf	??_CantaPartBaixa^0,c
 10245  0018F4                     u3638:
 10246  0018F4  4666               	rlncf	??_CantaPartBaixa^0,f,c
 10247  0018F6  D825               	call	PL62	;call to abstracted procedure
 10248  0018F8  0BF7               	andlw	-9
 10249  0018FA  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10250  0018FC  6E8B               	movwf	139,c	;volatile
 10251                           
 10252                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10253  0018FE  A467               	btfss	CantaPartBaixa@c^0,2,c
 10254  001900  D003               	goto	u3640
 10255  001902  6A66               	clrf	??_CantaPartBaixa^0,c
 10256  001904  2A66               	incf	??_CantaPartBaixa^0,f,c
 10257  001906  D001               	goto	u3658
 10258  001908                     u3640:
 10259  001908  6A66               	clrf	??_CantaPartBaixa^0,c
 10260  00190A                     u3658:
 10261  00190A  D81B               	call	PL62	;call to abstracted procedure
 10262  00190C  0BFB               	andlw	-5
 10263  00190E  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10264  001910  6E8B               	movwf	139,c	;volatile
 10265                           
 10266                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10267  001912  A267               	btfss	CantaPartBaixa@c^0,1,c
 10268  001914  D003               	goto	u3660
 10269  001916  6A66               	clrf	??_CantaPartBaixa^0,c
 10270  001918  2A66               	incf	??_CantaPartBaixa^0,f,c
 10271  00191A  D001               	goto	u3678
 10272  00191C                     u3660:
 10273  00191C  6A66               	clrf	??_CantaPartBaixa^0,c
 10274  00191E                     u3678:
 10275  00191E  4666               	rlncf	??_CantaPartBaixa^0,f,c
 10276  001920  508B               	movf	139,w,c	;volatile
 10277  001922  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10278  001924  0BFD               	andlw	-3
 10279  001926  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10280  001928  6E8B               	movwf	139,c	;volatile
 10281                           
 10282                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10283  00192A  A067               	btfss	CantaPartBaixa@c^0,0,c
 10284  00192C  D003               	goto	u3680
 10285  00192E  6A66               	clrf	??_CantaPartBaixa^0,c
 10286  001930  2A66               	incf	??_CantaPartBaixa^0,f,c
 10287  001932  D001               	goto	u3698
 10288  001934                     u3680:
 10289  001934  6A66               	clrf	??_CantaPartBaixa^0,c
 10290  001936                     u3698:
 10291  001936  508B               	movf	139,w,c	;volatile
 10292  001938  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10293  00193A  0BFE               	andlw	-2
 10294  00193C  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10295  00193E  6E8B               	movwf	139,c	;volatile
 10296  001940  0012               	return		;funcret
 10297  001942                     __end_of_CantaPartBaixa:
 10298                           	callstack 0
 10299  001942                     PL62:
 10300                           	callstack 24
 10301  001942  4666               	rlncf	??_CantaPartBaixa^0,f,c
 10302  001944  4666               	rlncf	??_CantaPartBaixa^0,f,c
 10303  001946  508B               	movf	139,w,c	;volatile
 10304  001948  1866               	xorwf	??_CantaPartBaixa^0,w,c
 10305  00194A  0012               	return	
 10306  00194C                     __end_ofPL62:
 10307                           	callstack 0
 10308                           
 10309 ;; *************** function _CantaPartAlta *****************
 10310 ;; Defined at:
 10311 ;;		line 166 in file "LcTLCD.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  c               1    wreg     unsigned char 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  c               1    6[COMRAM] unsigned char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, status,2, status,0
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/1
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1
 10325 ;;      Params:         0       0       0
 10326 ;;      Locals:         1       0       0
 10327 ;;      Temps:          1       0       0
 10328 ;;      Totals:         2       0       0
 10329 ;;Total ram usage:        2 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 2
 10332 ;; This function calls:
 10333 ;;		Nothing
 10334 ;; This function is called by:
 10335 ;;		_CantaIR
 10336 ;;		_CantaData
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text85
 10341  00194C                     __ptext85:
 10342                           	callstack 0
 10343  00194C                     _CantaPartAlta:
 10344                           	callstack 24
 10345                           
 10346                           ;incstack = 0
 10347                           ;CantaPartAlta@c stored from wreg
 10348  00194C  6E67               	movwf	CantaPartAlta@c^0,c
 10349                           
 10350                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10351  00194E  AE67               	btfss	CantaPartAlta@c^0,7,c
 10352  001950  D003               	goto	u3540
 10353  001952  6A66               	clrf	??_CantaPartAlta^0,c
 10354  001954  2A66               	incf	??_CantaPartAlta^0,f,c
 10355  001956  D001               	goto	u3558
 10356  001958                     u3540:
 10357  001958  6A66               	clrf	??_CantaPartAlta^0,c
 10358  00195A                     u3558:
 10359  00195A  4666               	rlncf	??_CantaPartAlta^0,f,c
 10360  00195C  D825               	call	PL52	;call to abstracted procedure
 10361  00195E  0BF7               	andlw	-9
 10362  001960  1866               	xorwf	??_CantaPartAlta^0,w,c
 10363  001962  6E8B               	movwf	139,c	;volatile
 10364                           
 10365                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10366  001964  AC67               	btfss	CantaPartAlta@c^0,6,c
 10367  001966  D003               	goto	u3560
 10368  001968  6A66               	clrf	??_CantaPartAlta^0,c
 10369  00196A  2A66               	incf	??_CantaPartAlta^0,f,c
 10370  00196C  D001               	goto	u3578
 10371  00196E                     u3560:
 10372  00196E  6A66               	clrf	??_CantaPartAlta^0,c
 10373  001970                     u3578:
 10374  001970  D81B               	call	PL52	;call to abstracted procedure
 10375  001972  0BFB               	andlw	-5
 10376  001974  1866               	xorwf	??_CantaPartAlta^0,w,c
 10377  001976  6E8B               	movwf	139,c	;volatile
 10378                           
 10379                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10380  001978  AA67               	btfss	CantaPartAlta@c^0,5,c
 10381  00197A  D003               	goto	u3580
 10382  00197C  6A66               	clrf	??_CantaPartAlta^0,c
 10383  00197E  2A66               	incf	??_CantaPartAlta^0,f,c
 10384  001980  D001               	goto	u3598
 10385  001982                     u3580:
 10386  001982  6A66               	clrf	??_CantaPartAlta^0,c
 10387  001984                     u3598:
 10388  001984  4666               	rlncf	??_CantaPartAlta^0,f,c
 10389  001986  508B               	movf	139,w,c	;volatile
 10390  001988  1866               	xorwf	??_CantaPartAlta^0,w,c
 10391  00198A  0BFD               	andlw	-3
 10392  00198C  1866               	xorwf	??_CantaPartAlta^0,w,c
 10393  00198E  6E8B               	movwf	139,c	;volatile
 10394                           
 10395                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10396  001990  A867               	btfss	CantaPartAlta@c^0,4,c
 10397  001992  D003               	goto	u3600
 10398  001994  6A66               	clrf	??_CantaPartAlta^0,c
 10399  001996  2A66               	incf	??_CantaPartAlta^0,f,c
 10400  001998  D001               	goto	u3618
 10401  00199A                     u3600:
 10402  00199A  6A66               	clrf	??_CantaPartAlta^0,c
 10403  00199C                     u3618:
 10404  00199C  508B               	movf	139,w,c	;volatile
 10405  00199E  1866               	xorwf	??_CantaPartAlta^0,w,c
 10406  0019A0  0BFE               	andlw	-2
 10407  0019A2  1866               	xorwf	??_CantaPartAlta^0,w,c
 10408  0019A4  6E8B               	movwf	139,c	;volatile
 10409  0019A6  0012               	return		;funcret
 10410  0019A8                     __end_of_CantaPartAlta:
 10411                           	callstack 0
 10412  0019A8                     PL52:
 10413                           	callstack 24
 10414  0019A8  4666               	rlncf	??_CantaPartAlta^0,f,c
 10415  0019AA  4666               	rlncf	??_CantaPartAlta^0,f,c
 10416  0019AC  508B               	movf	139,w,c	;volatile
 10417  0019AE  1866               	xorwf	??_CantaPartAlta^0,w,c
 10418  0019B0  0012               	return	
 10419  0019B2                     __end_ofPL52:
 10420                           	callstack 0
 10421                           
 10422 ;; *************** function _Espera *****************
 10423 ;; Defined at:
 10424 ;;		line 161 in file "LcTLCD.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  Timer           1    wreg     unsigned char 
 10427 ;;  ms              2   12[COMRAM] int 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  Timer           1   15[COMRAM] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMRAM   BANK0   BANK1
 10439 ;;      Params:         2       0       0
 10440 ;;      Locals:         1       0       0
 10441 ;;      Temps:          1       0       0
 10442 ;;      Totals:         4       0       0
 10443 ;;Total ram usage:        4 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; Hardware stack levels required when called: 3
 10446 ;; This function calls:
 10447 ;;		_TiGetTics
 10448 ;;		_TiResetTics
 10449 ;; This function is called by:
 10450 ;;		_LcInit
 10451 ;;		_LcClear
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text86
 10456  001D6C                     __ptext86:
 10457                           	callstack 0
 10458  001D6C                     _Espera:
 10459                           	callstack 25
 10460                           
 10461                           ;incstack = 0
 10462                           ;Espera@Timer stored from wreg
 10463  001D6C  6E70               	movwf	Espera@Timer^0,c
 10464                           
 10465                           ;LcTLCD.c: 162:  TiResetTics(Timer);
 10466  001D6E  5070               	movf	Espera@Timer^0,w,c
 10467  001D70  EC00  F00F         	call	_TiResetTics
 10468  001D74                     l4438:
 10469  001D74  5070               	movf	Espera@Timer^0,w,c
 10470  001D76  EC5C  F00E         	call	_TiGetTics
 10471  001D7A  506D               	movf	Espera@ms^0,w,c
 10472  001D7C  5C66               	subwf	?_TiGetTics^0,w,c
 10473  001D7E  5067               	movf	(?_TiGetTics+1)^0,w,c
 10474  001D80  0A80               	xorlw	128
 10475  001D82  6E6F               	movwf	??_Espera^0,c
 10476  001D84  506E               	movf	(Espera@ms+1)^0,w,c
 10477  001D86  0A80               	xorlw	128
 10478  001D88  586F               	subwfb	??_Espera^0,w,c
 10479  001D8A  E3F4               	bnc	l4438
 10480  001D8C  0012               	return		;funcret
 10481  001D8E                     __end_of_Espera:
 10482                           	callstack 0
 10483                           
 10484 ;; *************** function _TiResetTics *****************
 10485 ;; Defined at:
 10486 ;;		line 55 in file "TiTTimer.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  Handle          1    wreg     unsigned char 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  Handle          1    5[COMRAM] unsigned char 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/1
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1
 10500 ;;      Params:         0       0       0
 10501 ;;      Locals:         1       0       0
 10502 ;;      Temps:          0       0       0
 10503 ;;      Totals:         1       0       0
 10504 ;;Total ram usage:        1 bytes
 10505 ;; Hardware stack levels used: 1
 10506 ;; Hardware stack levels required when called: 2
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_Espera
 10511 ;;		_WaitForBusy
 10512 ;;		_SMotor
 10513 ;;		_TeTeclat
 10514 ;;		_menu
 10515 ;;		_motorAltaveu
 10516 ;;		_GLCDMotor
 10517 ;;		_motorHora
 10518 ;;		_motorSIO
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text87
 10523  001E00                     __ptext87:
 10524                           	callstack 0
 10525  001E00                     _TiResetTics:
 10526                           	callstack 27
 10527                           
 10528                           ;incstack = 0
 10529                           ;TiResetTics@Handle stored from wreg
 10530  001E00  6E66               	movwf	TiResetTics@Handle^0,c
 10531                           
 10532                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10533  001E02  5066               	movf	TiResetTics@Handle^0,w,c
 10534  001E04  D805               	call	PL26	;call to abstracted procedure
 10535  001E06  C00D  FFDE         	movff	_h_Tics,postinc2
 10536  001E0A  C00E  FFDD         	movff	_h_Tics+1,postdec2
 10537  001E0E  0012               	return		;funcret
 10538  001E10                     __end_of_TiResetTics:
 10539                           	callstack 0
 10540  001E10                     PL26:
 10541                           	callstack 24
 10542  001E10  0D03               	mullw	3
 10543  001E12  50F3               	movf	243,w,c
 10544  001E14  0F80               	addlw	low _s_Timers
 10545  001E16  6ED9               	movwf	fsr2l,c
 10546  001E18  6ADA               	clrf	fsr2h,c
 10547  001E1A  0012               	return	
 10548  001E1C                     __end_ofPL26:
 10549                           	callstack 0
 10550                           
 10551 ;; *************** function _TiGetTics *****************
 10552 ;; Defined at:
 10553 ;;		line 61 in file "TiTTimer.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  Handle          1    wreg     unsigned char 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;  Handle          1    9[COMRAM] unsigned char 
 10558 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  2    5[COMRAM] int 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/1
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1
 10568 ;;      Params:         2       0       0
 10569 ;;      Locals:         3       0       0
 10570 ;;      Temps:          2       0       0
 10571 ;;      Totals:         7       0       0
 10572 ;;Total ram usage:        7 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 2
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_Espera
 10579 ;;		_WaitForBusy
 10580 ;;		_SMotor
 10581 ;;		_TeTeclat
 10582 ;;		_menu
 10583 ;;		_motorAltaveu
 10584 ;;		_GLCDMotor
 10585 ;;		_motorHora
 10586 ;;		_motorSIO
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           	psect	text88
 10591  001CB8                     __ptext88:
 10592                           	callstack 0
 10593  001CB8                     _TiGetTics:
 10594                           	callstack 27
 10595                           
 10596                           ;incstack = 0
 10597                           ;TiGetTics@Handle stored from wreg
 10598  001CB8  6E6A               	movwf	TiGetTics@Handle^0,c
 10599                           
 10600                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10601  001CBA  C00D  F06B         	movff	_h_Tics,TiGetTics@actual	;volatile
 10602  001CBE  C00E  F06C         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10603                           
 10604                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10605  001CC2  506A               	movf	TiGetTics@Handle^0,w,c
 10606  001CC4  EC08  F00F         	call	PL26	;call to abstracted procedure
 10607  001CC8  CFDE F068          	movff	postinc2,??_TiGetTics
 10608  001CCC  CFDD F069          	movff	postdec2,??_TiGetTics+1
 10609  001CD0  5068               	movf	??_TiGetTics^0,w,c
 10610  001CD2  5C6B               	subwf	TiGetTics@actual^0,w,c	;volatile
 10611  001CD4  6E66               	movwf	?_TiGetTics^0,c
 10612  001CD6  5069               	movf	(??_TiGetTics+1)^0,w,c
 10613  001CD8  586C               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10614  001CDA  6E67               	movwf	(?_TiGetTics+1)^0,c
 10615  001CDC  0012               	return		;funcret
 10616  001CDE                     __end_of_TiGetTics:
 10617                           	callstack 0
 10618                           
 10619 ;; *************** function _GLCDInit *****************
 10620 ;; Defined at:
 10621 ;;		line 26 in file "GestioLCD.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;		None
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  1    wreg      void 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1
 10635 ;;      Params:         0       0       0
 10636 ;;      Locals:         0       0       0
 10637 ;;      Temps:          0       0       0
 10638 ;;      Totals:         0       0       0
 10639 ;;Total ram usage:        0 bytes
 10640 ;; Hardware stack levels used: 1
 10641 ;; Hardware stack levels required when called: 3
 10642 ;; This function calls:
 10643 ;;		_TiGetTimer
 10644 ;; This function is called by:
 10645 ;;		_main
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text89
 10650  001FA4                     __ptext89:
 10651                           	callstack 0
 10652  001FA4                     _GLCDInit:
 10653                           	callstack 27
 10654                           
 10655                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10656                           
 10657                           ;incstack = 0
 10658  001FA4  EC1E  F00E         	call	_TiGetTimer	;wreg free
 10659  001FA8  6E24               	movwf	_timerGLCD^0,c
 10660  001FAA  0012               	return		;funcret
 10661  001FAC                     __end_of_GLCDInit:
 10662                           	callstack 0
 10663                           
 10664 ;; *************** function _TiGetTimer *****************
 10665 ;; Defined at:
 10666 ;;		line 70 in file "TiTTimer.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      unsigned char 
 10673 ;; Registers used:
 10674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1
 10680 ;;      Params:         0       0       0
 10681 ;;      Locals:         0       0       0
 10682 ;;      Temps:          1       0       0
 10683 ;;      Totals:         1       0       0
 10684 ;;Total ram usage:        1 bytes
 10685 ;; Hardware stack levels used: 1
 10686 ;; Hardware stack levels required when called: 2
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_LcInit
 10691 ;;		_Sinit
 10692 ;;		_TeInit
 10693 ;;		_Minit
 10694 ;;		_initAltaveu
 10695 ;;		_GLCDInit
 10696 ;;		_initHora
 10697 ;;		_initSIO
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text90
 10702  001C3C                     __ptext90:
 10703                           	callstack 0
 10704  001C3C                     _TiGetTimer:
 10705                           	callstack 27
 10706                           
 10707                           ;TiTTimer.c: 74:     counter=0;
 10708                           
 10709                           ;incstack = 0
 10710  001C3C  6A35               	clrf	_counter^0,c
 10711                           
 10712                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10713  001C3E  D005               	goto	l4484
 10714  001C40                     l4476:
 10715                           
 10716                           ;TiTTimer.c: 76:         counter++;
 10717  001C40  2A35               	incf	_counter^0,f,c
 10718                           
 10719                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10720  001C42  0E08               	movlw	8
 10721  001C44  1835               	xorwf	_counter^0,w,c
 10722  001C46  E101               	bnz	l4484
 10723  001C48  0CFF               	retlw	255
 10724  001C4A                     l4484:
 10725                           
 10726                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10727  001C4A  D807               	call	PL12	;call to abstracted procedure
 10728  001C4C  04DE               	decf	postinc2,w,c
 10729  001C4E  E0F8               	bz	l4476
 10730                           
 10731                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10732  001C50  D804               	call	PL12	;call to abstracted procedure
 10733  001C52  0E01               	movlw	1
 10734  001C54  6EDF               	movwf	indf2,c
 10735                           
 10736                           ;TiTTimer.c: 80:     return (counter);
 10737  001C56  5035               	movf	_counter^0,w,c
 10738  001C58  0012               	return		;funcret
 10739  001C5A                     __end_of_TiGetTimer:
 10740                           	callstack 0
 10741  001C5A                     PL12:
 10742                           	callstack 28
 10743  001C5A  5035               	movf	_counter^0,w,c
 10744  001C5C  0D03               	mullw	3
 10745  001C5E  50F3               	movf	243,w,c
 10746  001C60  0F82               	addlw	low (_s_Timers+2)
 10747  001C62  6ED9               	movwf	fsr2l,c
 10748  001C64  6ADA               	clrf	fsr2h,c
 10749  001C66  0012               	return	
 10750  001C68                     __end_ofPL12:
 10751                           	callstack 0
 10752                           
 10753 ;; *************** function _CtoA *****************
 10754 ;; Defined at:
 10755 ;;		line 22 in file "CtoA.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;		None
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;		None
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  1    wreg      void 
 10762 ;; Registers used:
 10763 ;;		wreg, status,2, status,0
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/1
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMRAM   BANK0   BANK1
 10769 ;;      Params:         0       0       0
 10770 ;;      Locals:         0       0       0
 10771 ;;      Temps:          0       0       0
 10772 ;;      Totals:         0       0       0
 10773 ;;Total ram usage:        0 bytes
 10774 ;; Hardware stack levels used: 1
 10775 ;; Hardware stack levels required when called: 2
 10776 ;; This function calls:
 10777 ;;		Nothing
 10778 ;; This function is called by:
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text91
 10784  001D26                     __ptext91:
 10785                           	callstack 0
 10786  001D26                     _CtoA:
 10787                           	callstack 28
 10788                           
 10789                           ;CtoA.c: 23:     if (convertir != 250) {
 10790                           
 10791                           ;incstack = 0
 10792  001D26  0EFA               	movlw	250
 10793  001D28  1848               	xorwf	_convertir^0,w,c
 10794  001D2A  B4D8               	btfsc	status,2,c
 10795  001D2C  0012               	return	
 10796                           
 10797                           ;CtoA.c: 24:         if (convertir != 0){
 10798  001D2E  5048               	movf	_convertir^0,w,c
 10799  001D30  E009               	bz	l3678
 10800                           
 10801                           ;CtoA.c: 25:             stringScore[1]++;
 10802  001D32  2A5F               	incf	(_stringScore+1)^0,f,c
 10803                           
 10804                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10805  001D34  0E3A               	movlw	58
 10806  001D36  185F               	xorwf	(_stringScore+1)^0,w,c
 10807  001D38  E103               	bnz	l3676
 10808                           
 10809                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10810  001D3A  0E30               	movlw	48
 10811  001D3C  6E5F               	movwf	(_stringScore+1)^0,c
 10812                           
 10813                           ;CtoA.c: 28:                 stringScore[0]++;
 10814  001D3E  2A5E               	incf	_stringScore^0,f,c
 10815  001D40                     l3676:
 10816                           
 10817                           ;CtoA.c: 30:             convertir--;
 10818  001D40  0648               	decf	_convertir^0,f,c
 10819                           
 10820                           ;CtoA.c: 31:         } else {
 10821  001D42  0012               	return	
 10822  001D44                     l3678:
 10823                           
 10824                           ;CtoA.c: 32:             convertir = 250;
 10825  001D44  0EFA               	movlw	250
 10826  001D46  6E48               	movwf	_convertir^0,c
 10827  001D48  0CFA               	retlw	250	;funcret
 10828  001D4A                     __end_of_CtoA:
 10829                           	callstack 0
 10830                           
 10831 ;; *************** function _high_rsi *****************
 10832 ;; Defined at:
 10833 ;;		line 22 in file "main.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;		None
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1
 10847 ;;      Params:         0       0       0
 10848 ;;      Locals:         0       0       0
 10849 ;;      Temps:          4       0       0
 10850 ;;      Totals:         4       0       0
 10851 ;;Total ram usage:        4 bytes
 10852 ;; Hardware stack levels used: 1
 10853 ;; Hardware stack levels required when called: 1
 10854 ;; This function calls:
 10855 ;;		__TiRSITimer
 10856 ;; This function is called by:
 10857 ;;		Interrupt level 2
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	intcode
 10862  000008                     __pintcode:
 10863                           	callstack 0
 10864  000008                     _high_rsi:
 10865                           	callstack 24
 10866                           
 10867                           ;incstack = 0
 10868  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10869  00000A  CFD9 F062          	movff	fsr2l,??_high_rsi
 10870  00000E  CFDA F063          	movff	fsr2h,??_high_rsi+1
 10871  000012  CFF3 F064          	movff	prodl,??_high_rsi+2
 10872  000016  CFF4 F065          	movff	prodh,??_high_rsi+3
 10873  00001A  EC4D  F00D         	call	__TiRSITimer	;wreg free
 10874  00001E  C065  FFF4         	movff	??_high_rsi+3,prodh
 10875  000022  C064  FFF3         	movff	??_high_rsi+2,prodl
 10876  000026  C063  FFDA         	movff	??_high_rsi+1,fsr2h
 10877  00002A  C062  FFD9         	movff	??_high_rsi,fsr2l
 10878  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10879  000030  0011               	retfie		f
 10880  000032                     __end_of_high_rsi:
 10881                           	callstack 0
 10882                           
 10883 ;; *************** function __TiRSITimer *****************
 10884 ;; Defined at:
 10885 ;;		line 37 in file "TiTTimer.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;		None
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1    wreg      void 
 10892 ;; Registers used:
 10893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1
 10899 ;;      Params:         0       0       0
 10900 ;;      Locals:         0       0       0
 10901 ;;      Temps:          1       0       0
 10902 ;;      Totals:         1       0       0
 10903 ;;Total ram usage:        1 bytes
 10904 ;; Hardware stack levels used: 1
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_high_rsi
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text93
 10913  001A9A                     __ptext93:
 10914                           	callstack 0
 10915  001A9A                     __TiRSITimer:
 10916                           	callstack 0
 10917                           
 10918                           ;TiTTimer.c: 39:     TMR0H = 223;
 10919                           
 10920                           ;incstack = 0
 10921                           
 10922                           ;TiTTimer.c: 40:     TMR0L = 148;
 10923  001A9A  D81E               	call	PL66	;call to abstracted procedure
 10924                           
 10925                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10926  001A9C  94F2               	bcf	242,2,c	;volatile
 10927                           
 10928                           ;TiTTimer.c: 42:     h_Tics++;
 10929  001A9E  4A0D               	infsnz	_h_Tics^0,f,c
 10930  001AA0  2A0E               	incf	(_h_Tics+1)^0,f,c
 10931                           
 10932                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10933  001AA2  0E48               	movlw	72
 10934  001AA4  5C0D               	subwf	_h_Tics^0,w,c
 10935  001AA6  0EEE               	movlw	238
 10936  001AA8  580E               	subwfb	(_h_Tics+1)^0,w,c
 10937  001AAA  A0D8               	btfss	status,0,c
 10938  001AAC  0012               	return	
 10939                           
 10940                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10941  001AAE  6A35               	clrf	_counter^0,c
 10942  001AB0                     i2l4666:
 10943  001AB0  0E07               	movlw	7
 10944  001AB2  6435               	cpfsgt	_counter^0,c
 10945  001AB4  D001               	goto	i2l4670
 10946  001AB6  D00D               	goto	i2l376
 10947  001AB8                     i2l4670:
 10948                           
 10949                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10950  001AB8  EC2D  F00E         	call	PL12	;call to abstracted procedure
 10951  001ABC  04DE               	decf	postinc2,w,c
 10952  001ABE  E107               	bnz	i2l4674
 10953                           
 10954                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10955  001AC0  5035               	movf	_counter^0,w,c
 10956  001AC2  EC08  F00F         	call	PL26	;call to abstracted procedure
 10957  001AC6  500D               	movf	_h_Tics^0,w,c
 10958  001AC8  5EDE               	subwf	postinc2,f,c
 10959  001ACA  500E               	movf	(_h_Tics+1)^0,w,c
 10960  001ACC  5ADD               	subwfb	postdec2,f,c
 10961  001ACE                     i2l4674:
 10962                           
 10963                           ;TiTTimer.c: 50:         }
 10964  001ACE  2A35               	incf	_counter^0,f,c
 10965  001AD0  D7EF               	goto	i2l4666
 10966  001AD2                     i2l376:
 10967                           
 10968                           ;TiTTimer.c: 51:         h_Tics=0;
 10969  001AD2  6A0D               	clrf	_h_Tics^0,c
 10970  001AD4  6A0E               	clrf	(_h_Tics+1)^0,c
 10971  001AD6  0012               	return		;funcret
 10972  001AD8                     __end_of__TiRSITimer:
 10973                           	callstack 0
 10974  001AD8                     PL66:
 10975                           	callstack 28
 10976  001AD8  0EDF               	movlw	223
 10977  001ADA  6ED7               	movwf	215,c	;volatile
 10978  001ADC  0E94               	movlw	148
 10979  001ADE  6ED6               	movwf	214,c	;volatile
 10980  001AE0  0C94               	retlw	148
 10981  001AE2                     __end_ofPL66:
 10982                           	callstack 0
 10983                           
 10984                           	psect	rparam
 10985  0000                     
 10986                           	psect	temp
 10987  00007A                     btemp:
 10988                           	callstack 0
 10989  00007A                     	ds	1
 10990  0000                     int$flags	set	btemp
 10991  0000                     wtemp8	set	btemp+1
 10992  0000                     ttemp5	set	btemp+1
 10993  0000                     ttemp6	set	btemp+4
 10994  0000                     ttemp7	set	btemp+8
 10995                           
 10996                           	psect	idloc
 10997                           
 10998                           ;Config register IDLOC0 @ 0x200000
 10999                           ;	unspecified, using default values
 11000  200000                     	org	2097152
 11001  200000  FF                 	db	255
 11002                           
 11003                           ;Config register IDLOC1 @ 0x200001
 11004                           ;	unspecified, using default values
 11005  200001                     	org	2097153
 11006  200001  FF                 	db	255
 11007                           
 11008                           ;Config register IDLOC2 @ 0x200002
 11009                           ;	unspecified, using default values
 11010  200002                     	org	2097154
 11011  200002  FF                 	db	255
 11012                           
 11013                           ;Config register IDLOC3 @ 0x200003
 11014                           ;	unspecified, using default values
 11015  200003                     	org	2097155
 11016  200003  FF                 	db	255
 11017                           
 11018                           ;Config register IDLOC4 @ 0x200004
 11019                           ;	unspecified, using default values
 11020  200004                     	org	2097156
 11021  200004  FF                 	db	255
 11022                           
 11023                           ;Config register IDLOC5 @ 0x200005
 11024                           ;	unspecified, using default values
 11025  200005                     	org	2097157
 11026  200005  FF                 	db	255
 11027                           
 11028                           ;Config register IDLOC6 @ 0x200006
 11029                           ;	unspecified, using default values
 11030  200006                     	org	2097158
 11031  200006  FF                 	db	255
 11032                           
 11033                           ;Config register IDLOC7 @ 0x200007
 11034                           ;	unspecified, using default values
 11035  200007                     	org	2097159
 11036  200007  FF                 	db	255
 11037                           
 11038                           	psect	config
 11039                           
 11040                           ; Padding undefined space
 11041  300000                     	org	3145728
 11042  300000  FF                 	db	255
 11043                           
 11044                           ;Config register CONFIG1H @ 0x300001
 11045                           ;	Oscillator
 11046                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11047                           ;	Fail-Safe Clock Monitor Enable bit
 11048                           ;	FCMEN = 0x0, unprogrammed default
 11049                           ;	Internal/External Oscillator Switchover bit
 11050                           ;	IESO = 0x0, unprogrammed default
 11051  300001                     	org	3145729
 11052  300001  06                 	db	6
 11053                           
 11054                           ;Config register CONFIG2L @ 0x300002
 11055                           ;	unspecified, using default values
 11056                           ;	Power-up Timer Enable bit
 11057                           ;	PWRT = 0x1, unprogrammed default
 11058                           ;	Brown-out Reset Enable bits
 11059                           ;	BOR = 0x3, unprogrammed default
 11060                           ;	Brown-out Reset Voltage bits
 11061                           ;	BORV = 0x3, unprogrammed default
 11062  300002                     	org	3145730
 11063  300002  1F                 	db	31
 11064                           
 11065                           ;Config register CONFIG2H @ 0x300003
 11066                           ;	Watchdog Timer Enable bit
 11067                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11068                           ;	Watchdog Timer Postscale Select bits
 11069                           ;	WDTPS = 0xF, unprogrammed default
 11070  300003                     	org	3145731
 11071  300003  1E                 	db	30
 11072                           
 11073                           ; Padding undefined space
 11074  300004                     	org	3145732
 11075  300004  FF                 	db	255
 11076                           
 11077                           ;Config register CONFIG3H @ 0x300005
 11078                           ;	CCP2 MUX bit
 11079                           ;	CCP2MX = 0x1, unprogrammed default
 11080                           ;	PORTB A/D Enable bit
 11081                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11082                           ;	Low-Power Timer1 Oscillator Enable bit
 11083                           ;	LPT1OSC = 0x0, unprogrammed default
 11084                           ;	MCLR Pin Enable bit
 11085                           ;	MCLRE = 0x1, unprogrammed default
 11086  300005                     	org	3145733
 11087  300005  81                 	db	129
 11088                           
 11089                           ;Config register CONFIG4L @ 0x300006
 11090                           ;	Stack Full/Underflow Reset Enable bit
 11091                           ;	STVREN = 0x1, unprogrammed default
 11092                           ;	Single-Supply ICSP Enable bit
 11093                           ;	LVP = OFF, Single-Supply ICSP disabled
 11094                           ;	Boot Block Size Select bits
 11095                           ;	BBSIZ = 0x0, unprogrammed default
 11096                           ;	Extended Instruction Set Enable bit
 11097                           ;	XINST = 0x0, unprogrammed default
 11098                           ;	Background Debugger Enable bit
 11099                           ;	DEBUG = 0x1, unprogrammed default
 11100  300006                     	org	3145734
 11101  300006  81                 	db	129
 11102                           
 11103                           ; Padding undefined space
 11104  300007                     	org	3145735
 11105  300007  FF                 	db	255
 11106                           
 11107                           ;Config register CONFIG5L @ 0x300008
 11108                           ;	unspecified, using default values
 11109                           ;	Code Protection bit
 11110                           ;	CP0 = 0x1, unprogrammed default
 11111                           ;	Code Protection bit
 11112                           ;	CP1 = 0x1, unprogrammed default
 11113  300008                     	org	3145736
 11114  300008  03                 	db	3
 11115                           
 11116                           ;Config register CONFIG5H @ 0x300009
 11117                           ;	unspecified, using default values
 11118                           ;	Boot Block Code Protection bitProtect Boot
 11119                           ;	CPB = 0x1, unprogrammed default
 11120                           ;	Data EEPROM Code Protection bit
 11121                           ;	CPD = 0x1, unprogrammed default
 11122  300009                     	org	3145737
 11123  300009  C0                 	db	192
 11124                           
 11125                           ;Config register CONFIG6L @ 0x30000A
 11126                           ;	unspecified, using default values
 11127                           ;	Write Protection bit
 11128                           ;	WRT0 = 0x1, unprogrammed default
 11129                           ;	Write Protection bit
 11130                           ;	WRT1 = 0x1, unprogrammed default
 11131  30000A                     	org	3145738
 11132  30000A  03                 	db	3
 11133                           
 11134                           ;Config register CONFIG6H @ 0x30000B
 11135                           ;	unspecified, using default values
 11136                           ;	Configuration Register Write Protection bit
 11137                           ;	WRTC = 0x1, unprogrammed default
 11138                           ;	Boot Block Write Protection bit
 11139                           ;	WRTB = 0x1, unprogrammed default
 11140                           ;	Data EEPROM Write Protection bit
 11141                           ;	WRTD = 0x1, unprogrammed default
 11142  30000B                     	org	3145739
 11143  30000B  E0                 	db	224
 11144                           
 11145                           ;Config register CONFIG7L @ 0x30000C
 11146                           ;	unspecified, using default values
 11147                           ;	Table Read Protection bit
 11148                           ;	EBTR0 = 0x1, unprogrammed default
 11149                           ;	Table Read Protection bit
 11150                           ;	EBTR1 = 0x1, unprogrammed default
 11151  30000C                     	org	3145740
 11152  30000C  03                 	db	3
 11153                           
 11154                           ;Config register CONFIG7H @ 0x30000D
 11155                           ;	unspecified, using default values
 11156                           ;	Boot Block Table Read Protection bit
 11157                           ;	EBTRB = 0x1, unprogrammed default
 11158  30000D                     	org	3145741
 11159  30000D  40                 	db	64
 11160                           tosu	equ	0xFFF
 11161                           tosh	equ	0xFFE
 11162                           tosl	equ	0xFFD
 11163                           stkptr	equ	0xFFC
 11164                           pclatu	equ	0xFFB
 11165                           pclath	equ	0xFFA
 11166                           pcl	equ	0xFF9
 11167                           tblptru	equ	0xFF8
 11168                           tblptrh	equ	0xFF7
 11169                           tblptrl	equ	0xFF6
 11170                           tablat	equ	0xFF5
 11171                           prodh	equ	0xFF4
 11172                           prodl	equ	0xFF3
 11173                           indf0	equ	0xFEF
 11174                           postinc0	equ	0xFEE
 11175                           postdec0	equ	0xFED
 11176                           preinc0	equ	0xFEC
 11177                           plusw0	equ	0xFEB
 11178                           fsr0h	equ	0xFEA
 11179                           fsr0l	equ	0xFE9
 11180                           wreg	equ	0xFE8
 11181                           indf1	equ	0xFE7
 11182                           postinc1	equ	0xFE6
 11183                           postdec1	equ	0xFE5
 11184                           preinc1	equ	0xFE4
 11185                           plusw1	equ	0xFE3
 11186                           fsr1h	equ	0xFE2
 11187                           fsr1l	equ	0xFE1
 11188                           bsr	equ	0xFE0
 11189                           indf2	equ	0xFDF
 11190                           postinc2	equ	0xFDE
 11191                           postdec2	equ	0xFDD
 11192                           preinc2	equ	0xFDC
 11193                           plusw2	equ	0xFDB
 11194                           fsr2h	equ	0xFDA
 11195                           fsr2l	equ	0xFD9
 11196                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        49
    BSS         302
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     121
    BANK0           128      5      76
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39267
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9911
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      75
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10724
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      4C       4       59.4%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17D       7        0.0%
DATA                 0      0     17D       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 06 19:03:50 2022

               TiResetTics@Handle 0066                  _loginNOTRegister 03C7  
                               _i 002B                                 _j 002A  
                              PL2 0CEC                                PL4 0CFA  
                              PL6 0A3A                                PL8 0D02  
                              l57 1C16                  UgetUserName@quin 0068  
       ??_UcheckExistsNotFinished 0066                               PL10 0D0C  
                             PL20 109E                               PL12 1C5A  
                             PL30 1BBC                               PL22 1638  
                             PL14 1082                               PL40 0A56  
                             PL32 0A50                               PL24 0EEC  
                             PL16 16DE                               PL50 0EF8  
                             PL42 1A46                               PL34 1A38  
                             PL26 1E10                               PL18 137C  
                             PL60 125C                               PL52 19A8  
                             PL44 0A60                               PL36 17DE  
                             PL28 0A46                               PL70 1658  
                             PL62 1942                               PL54 0D16  
                             PL46 10B0                               PL38 164A  
                             PL80 0A72                               PL72 1D62  
                             PL64 1E68                               PL56 1B54  
                             PL48 1B4A                               PL82 0A78  
                             PL74 1518                               PL66 1AD8  
                             PL58 1BCA                               PL84 0A80  
                             PL76 1A92                               PL68 17EC  
                             PL78 0A6C            __end_of_compareStrings 1B4A  
                             l513 0348                               l540 0476  
                             l541 0486                               l543 0492  
                             l609 0716                               l733 1D1E  
                             l742 15E0                               l752 160C  
                             l754 1612                               l746 15EE  
                             l842 1C6A                               l747 15F0  
                             l739 15D2                               l844 1C80  
                             l749 15F6                               l791 0F2C  
                             l784 0F04                               l785 0F16  
                             l794 0F52                               l787 0F22  
                             l875 1664                               l956 0AE0  
                             l968 0B48                               l986 0C38  
                             l988 0C5E                               u230 178C  
                             u250 17A2                               u308 17D0  
                             u270 17B6                               u248 178E  
                             u290 17CE                               u268 17A4  
                             u288 17B8                               _pos 0030  
                             _tmp 0034                  ??_CantaPartBaixa 0066  
                             prod 000FF3                               wreg 000FE8  
     __size_of_calculateShowUsers 0004                       _ultimaTecla 0054  
              __size_of_GLCDMotor 0264                              l1033 144E  
                            l1025 1390                              l1034 13E6  
                            l1026 13AA                              l1035 1400  
                            l1028 13CC                              l1037 1422  
                            l2200 1EE8                              l1177 1538  
                            l2170 1F18                              l3050 13E2  
                            l2330 1B08                              l2322 1AF0  
                            l1291 0DC2                              l3036 13C0  
                            l3028 13A6                              l2244 1ED0  
                            l1284 0D9C                              l2334 1B14  
                            l2326 1AFC                              l2344 1EC4  
                            l3074 1416                              l3066 13FC  
                            l2266 1EDC                              l2370 1CF0  
                            l5010 0DDC                              l1299 0E58  
                            l2364 1CE8                              l5020 0E0A  
                            l5012 0DE2                              l2382 1D00  
                            l5030 0E40                              l3088 1438  
                            l2376 1CF8                              l5040 0E6A  
                            l3098 143C                              l5106 1756  
                            l5114 1764                              l4412 1B70  
                            l5060 0EAC                              l6014 0C6A  
                            l6006 0C58                              l6110 1348  
                            l6102 1336                              l2742 1630  
                            l5118 1768                              l2398 1EB8  
                            l6024 0C86                              l5048 0E8A  
                     _puntuacions 0001                              l4434 1B96  
                            l6018 0C72                              l6034 0CA0  
                            l4610 147E                              l6106 133E  
                            l6042 129E                              l5090 1730  
                            l4444 1C1A                              l4524 1A8C  
                            l4516 1A78                              l6028 0C94  
                            l6052 12BA                              l6116 134E  
                            l5084 1724                              l5068 16F8  
                            l4438 1D74                              l4518 1A7E  
                            l4710 10CE                              l4702 10BA  
                            l6062 12D0                              l6054 12C0  
                            l6046 12AA                              l6048 12AE  
                            l6400 033C                              l5096 173C  
                            l6090 1314                              l6082 12FE  
                            l6074 12EC                              l3676 1D40  
                            l4476 1C40                              l4484 1C4A  
                            l6076 12F0                              l6068 12DE  
                            l4580 1B22                              l6420 037A  
                            l6412 035E                              l3678 1D44  
                            l4806 11C4                              l4726 10F8  
                            l6086 130A                              l6430 0398  
                            l4902 155C                              l4832 1208  
                            l4824 11F2                              l4760 114E  
                            l4728 10FC                              l6096 1328  
                            l6440 03BC                              l4904 1562  
                            l4842 121E                              l4818 11E8  
                            l4738 111C                              l4690 1CAE  
                            l4586 1B36                              l5706 16AC  
                            l4756 114A                              l4748 113E  
                            l5812 100C                              l6516 0462  
                            l6444 03C4                              l6428 0392  
                            l4924 15A2                              l4916 158C  
                            l4932 15B0                              l4940 0D22  
                            l5902 0B26                              l4838 1216  
                            l4782 1186                              l4774 1176  
                            l4862 122E                              l4686 1CA6  
                            l5806 1002                              l5750 0F56  
                            l6606 053E                              l6550 04BA  
                            l6526 0482                              l6470 03F8  
                            l6438 03B6                              l6382 030A  
                            l5718 16C4                              l4950 0D3E  
                            l4768 1164                              l5816 1014  
                            l5752 0F5C                              l5736 0F1C  
                            l6640 0594                              l6624 0566  
                            l6608 0544                              l6480 041C  
                            l6472 03FE                              l6456 03D4  
                            l6392 0328                              l6376 02F8  
                            l4880 1524                              l5850 0A8A  
                            l4794 11AA                              l4786 1190  
                            l5826 103E                              l5818 1018  
                            l5762 0F86                              l5842 1056  
                            l6810 07AA                              l6722 0664  
                            l6706 0642                              l6538 04A2  
                            l6482 0422                              l5690 1686  
                            l4970 0D6E                              l5908 0B38  
                            l5860 0AB0                              l5836 1048  
                            l6820 07C0                              l6804 078A  
                            l6652 05CC                              l5684 1674  
                            l4980 0D84                              l4972 0D74  
                            l5782 0FBE                              l5766 0F94  
                            l5758 0F82                              l6902 092C  
                            l6830 07D8                              l6822 07C6  
                            l6806 0790                              l6734 0676  
                            l6718 0660                              l6638 058E  
                            l6566 04D8                              l6558 04CA  
                            l6486 042A                              l6398 0336  
                            l5686 167A                              l4966 0D64  
                            l4958 0D52                              l5944 0B82  
                            l5880 0AEC                              l5784 0FC4  
                            l6912 0940                              l6840 07F0  
                            l6832 07DE                              l6816 07B6  
                            l6672 0600                              l6648 05B4  
                            l6592 051C                              l6920 094C  
                            l4896 154C                              l5970 0BE8  
                            l5954 0BA8                              l5938 0B70  
                            l5874 0AD4                              l5866 0ABE  
                            l5778 0FB4                              l6850 0824  
                            l6770 06CC                              l6746 0696  
                            l6690 0624                              l6578 04FA  
                            l6498 043A                              l5698 1692  
                            l5964 0BD8                              l5948 0B90  
                            l5796 0FEC                              l6844 07F8  
                            l6764 06BE                              l6756 06B0  
                            l5894 0B1A                              l5992 0C2C  
                            l5984 0C16                              l6864 0860  
                            l6890 08E0                              l6866 0866  
                            l6794 0730                              l6786 0718  
                            l6778 06F0                              l6962 18B4  
                            l6876 08AA                              l6788 071E  
                            l5998 0C40                              l6798 0748  
                            l6888 08DA                              l6898 08EE  
                            STR_1 02DF                              STR_2 02BB  
                            STR_3 02EE                              STR_4 02E7  
                            STR_5 02C6                              STR_6 02A2  
                            STR_7 0292                              STR_8 02D7  
                            STR_9 02AF                              u4000 1110  
                            _LATD 000F8C                              u4200 11F8  
                            u4120 119C                              u4210 120E  
                            u3600 199A                              u4080 1170  
                            u3540 1958                              u3620 18F2  
                            u3560 196E                              u3640 1908  
                            u3618 199C                              u6050 0B22  
                            u4450 0DA4                              u3580 1982  
                            u3660 191C                              u4460 0DA8  
                            u3558 195A                              u3638 18F4  
                            u3830 1B3A                              u3680 1934  
                            u6080 0B40                              u3840 150E  
                            u3578 1970                              u3658 190A  
                            u7130 0682                              u4490 0E20  
                            u3860 1A14                              u6340 1270  
                            u7140 0688                              u3598 1984  
                            u3678 191E                              u3870 1A2A  
                            u5800 0F4E                              u3698 1936  
                            u3867 1A12                              u6348 1272  
                            u6700 0448                              u3877 1A28  
                            u6630 03E2                              u7280 07B2  
                            u7450 0906                              u7370 085E  
                            u5780 0F26                              u7460 0908  
                            u7390 0878                              u6750 048C  
                            u6770 049A                              u5980 0ABA  
                            _CtoA 1D26                   ??_SsetNovaTecla 0066  
          __end_of_SIOcheckKrebut 1EBC                              _cap1 03BF  
                            _Rows 0040                              _cap2 03BE  
                            _main 186E                              _hora 0058  
                            _menu 02F6                              _nota 0028  
           getArrayShowUsers@quin 0068                   __end_of_HJugant 1FB2  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1F4C  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1D62                              start 0032  
                 __end_of_CantaIR 1E00                      ?_initAltaveu 0061  
                   LcInit@columns 0071                      ___param_bank 000000  
                     _stringScore 005E                  __end_of_GLCDInit 1FAC  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1FD0  
                           ?_CtoA 0061                __size_of_CToAReset 0008  
                     Espera@Timer 0070                             ?_main 0061  
         __size_of_escriureEEPROM 0028                             ?_menu 0061  
                           _EEADR 000FA9                             STR_10 02CF  
                   ??_TiInitTimer 0066                             _T0CON 000FD5  
                 ?_compareStrings 0066                             i2l376 1AD2  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 1A02  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0061                             _TXREG 000FAD  
                           _SMSon 1FB2                             _TXSTA 000FAC  
                     _MNovaLletra 1F8C                             _Minit 1F94  
                __end_of_HGetTime 1FD0                             _Sinit 1F84  
                           _Timer 003D                             _Uinit 15CA  
                 __end_of_initSIO 1F5C                             _s_ptr 000F  
                           _score 0012                             _nou_s 03C9  
           __end_of_JoystickMotor 1464                   _HActualitzaHora 1BD4  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03B8  
                           tablat 000FF5                       _LcNewString 1F04  
                   ??_TiResetTics 0066                   ?_SIOcheckKrebut 0061  
              _UshowUsersCalculat 1ED4                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                  ?_checkHoraAcabat 0061  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0004  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1C3C  
            CToAConverteix@numero 0066                  __end_of_LcLliure 1F1C  
                   ??__TiRSITimer 0061                  __end_of_LcScroll 1FC4  
                      _TiGetTimer 1C3C           EscriuPrimeraOrdre@ordre 0067  
                    __end_of_CtoA 1D4A                  __end_of_JendGame 1FFC  
                     ?_SIOendGame 0061                   __initialization 17F6  
             ?_UshowUsersCalculat 0061                __size_of_CantaData 0020  
                    __end_of_main 18E6            __end_of_HClearNouSegon 1FD4  
                    __end_of_menu 0A3A           ?_SIOHaAcabatPuntuacions 0061  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 0061  
               __end_of_GLCDMotor 0CEC                  __end_of_TeTeclat 137C  
                   _indexNextUser 002D                            ??_CtoA 0066  
                          ??_main 0077                            ??_menu 00C7  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 001A            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001C                  GLCDMotor@length2 001B  
                      _JnovaTecla 1F34                  __end_of_UgetTop5 1E68  
                          ?_LcLCD 0061                            ?_SMSon 0061  
                    ?_CToAobtenir 0066                            ?_Minit 0061  
            ??_UshowUsersCalculat 0066                            ?_Sinit 0061  
                          ?_Uinit 0061                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1CB8  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0066                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0066                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 0066                         ??_LcClear 0074  
                       ??_CantaIR 0068                            i2l4670 1AB8  
                          i2l4674 1ACE                            i2l4666 1AB0  
                  LcGotoXY@Fisics 006F                    LcGotoXY@Column 0073  
                   ??_WaitForBusy 006D                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 003C  
               __end_of_CToAReset 1F54                            _SMSoff 1FB8  
              SIONovaDireccio@num 0066                            _LcInit 1464  
                    _MNouJoystick 1F9C                    _UgetNumUsuaris 1FDC  
                          _SMotor 10B8               escriureCharEEPROM@c 0067  
                          _TeInit 1F7C                            _Espera 1D6C  
                    _LcGotoXY$336 0071                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1FF4                            _RowAct 003F  
             __end_of_TiResetTics 1E10                            Uinit@i 0068  
                          Uinit@j 0069                  __end_of_high_rsi 0032  
                          _h_Tics 000D                   ?_HClearNouSegon 0061  
                   ?_CToAHaAcabat 0061                  __end_of_initHora 1F64  
             __end_of__TiRSITimer 1AD8                  __end_of_menuList 0292  
                          clear_0 183C                            clear_1 1848  
                          clear_2 185A                            _jugant 03BD  
                          _segons 0017                        _UenviaChar 1E92  
                          isa$std 000001                __size_of_UgetScore 000E  
                      UenviaPas@c 0067       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 1EC8                         ??_initSIO 0067  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0EEC                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1C08                 ??_SIONovaDireccio 0066  
                __end_of_motorJoc 15CA                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0066  
              __size_of_UnewScore 003E               __size_of_SIOendGame 0004  
               __end_of_CantaData 1BBC                      TeTeclat@cols 0037  
                       ?_GLCDInit 0061                     ?_UcheckExists 0061  
                      __accesstop 0080           __end_of__initialization 1860  
          __end_of_UgetNumUsuaris 1FE0                 __end_of_LcPutChar 1A92  
                   _JnovaDireccio 1F3C                  JnovaDireccio@dir 0066  
                   ___rparam_used 000001                     __end_of_LcLCD 1A38  
                     ?_TiGetTimer 0061                     __end_of_SMSon 1FB8  
               SIONovaTecla@tecla 0066                    __pcstackCOMRAM 0061  
                   __end_of_Minit 1F9C               __end_of_WaitForBusy 1B9C  
                   __end_of_Sinit 1F8C                     __end_of_Uinit 1638  
               __end_of_NoFerMenu 1FF8                         ?_HGetTime 0066  
                    __pidataBANK0 1E32                    ??_CToAHaAcabat 0066  
            __size_of_initAltaveu 0008                 __end_of_URegister 1FEC  
               __end_of_HnoJugant 1FCC                 __end_of_SiFerMenu 1FF0  
                      __end_ofPL2 0CFA                        __end_ofPL4 0D02  
                      __end_ofPL6 0A46                        __end_ofPL8 0D0C  
                  _escriureEEPROM 1C68                 __end_of_TiGetTics 1CDE  
                     _TiInitTimer 1C90                       ?_JnovaTecla 0061  
                         ??_LcLCD 0075                           ??_SMSon 0066  
                       ?_LcGotoXY 006E                         ?_LcLliure 0061  
                         ??_Minit 0067                         ?_LcScroll 0061  
                         ??_Sinit 0067                   JnovaTecla@tecla 0066  
                         ??_Uinit 0066              __size_of_init_eusart 0016  
                       ?_JendGame 0061                    ??_UcheckExists 0066  
             MNouJoystick@posicio 0066                        ??_GLCDInit 0067  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 0050  
                       ?_TeTeclat 0061                       _TiResetTics 1E00  
                 ?_UgetNumUsuaris 0061                    ?_JnovaDireccio 0061  
                   ??_UmotorUsers 006B                 __end_of_UgetScore 1EB0  
                   ?_JoystickInit 0061                           ?_SMSoff 0061  
                         ?_LcInit 0071                     _CantaPartAlta 194C  
                         ?_SMotor 0061                           ?_TeInit 0061  
                         ?_Espera 006D                 __end_of_UenviaPas 1E92  
                     __TiRSITimer 1A9A               _indexNextUserStruct 002C  
                       ?_UgetTop5 0061                 __end_of_UnewScore 1B20  
                      ??_HGetTime 0068                     ?_UgetUserName 0066  
                ??_compareStrings 0069            __end_of_escriureEEPROM 1C90  
                         _BAUDCON 000FB8                       ?_UenviaChar 0066  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 1FDC  
                         LcInit@i 0073                  ?_HActualitzaHora 0066  
                      ??_LcGotoXY 006F                      ?_MNovaLletra 0061  
                      ??_LcLliure 0066                        ??_LcScroll 0069  
                ??_SIOcheckKrebut 0066               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0066  
                         _HJugant 1FAC                         ?_high_rsi 0061  
                         _JJuguem 1F44                           _LcClear 1D4A  
                         _CantaIR 1DE4                      ?_LcNewString 0069  
                  ??_JoystickInit 0066                         ?_initHora 0061  
                      ??_TeTeclat 006D                       _WaitForBusy 1B5E  
                  ?_CantaPartAlta 0061             __end_of_SsetNovaTecla 1F74  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A4  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 0066                      ??_SIOendGame 0066  
                       ?_motorSIO 0061                         ?_motorJoc 0061  
                  ??_UgetUserName 0068                 _getArrayShowUsers 1DC8  
             __end_of_UmotorUsers 1082          ?_UcheckExistsNotFinished 0061  
                 ?_escriureEEPROM 0061                     ?_motorAltaveu 0061  
                    __psmallconst 0200                ?_getArrayShowUsers 0066  
          _escriure2usuarisStruct 19B2                           __pcinit 17F6  
    __end_of_UcheckExistsGetError 1FE4                           _ferMenu 03C1  
                      _init_ports 1D8E                           __ramtop 0200  
                         __ptext0 186E                           __ptext1 0D20  
                         __ptext2 1AE2                           __ptext3 1522  
                         __ptext4 1CDE                           __ptext5 1FC4  
                         __ptext6 1EB0                           __ptext7 1F1C  
                         __ptext8 1F24                           __ptext9 1F2C  
                       _T0CONbits 000FD5                         _GLCDMotor 0A88  
                       CantaIR@IR 0068                           _initSIO 1F54  
                         _counter 0035                           _horaTmp 0041  
          conversorJoystick@direc 0066               ??_getArrayShowUsers 0068  
                     UenviaChar@c 0067        __end_of_escriureCharEEPROM 1D26  
                LcNewString@new_s 0069                   WaitForBusy@Busy 006D  
                     Uinit@j_1187 006A                      _do_showUsers 03C4  
                         _userPtr 000B                 GLCDMostraMenu@num 0066  
              __end_of_SIOendGame 1FC8                        ??_high_rsi 0062  
            __end_of_CToAHaAcabat 003A              end_of_initialization 1860  
                         _usuaris 0100                     UgetScore@quin 0066  
                 ??_JnovaDireccio 0066                        ??_initHora 0067  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 0000  
                 TiGetTics@Handle 006A                     _MsetNovaTecla 1F74  
             __size_of_UenviaChar 0010                 _conversorJoystick 1CDE  
               __end_of_motorHora 177A                  ??_HClearNouSegon 0066  
                      _novaLletra 0052         __end_of_getArrayShowUsers 1DE4  
              ?_conversorJoystick 0061                   _usuariActualSIO 004B  
                      ??_motorSIO 0075                         _CToAReset 1F4C  
                      ??_motorJoc 0074                   TiGetTics@actual 006B  
                   ?_SIONovaTecla 0061                        GLCDMotor@j 0021  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 1F2C                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006D          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 002E              __end_of_UcheckExists 1FE8  
                   TeTeclat@files 0036               ??_conversorJoystick 0066  
              SIOStartGame@usuari 0066            __size_of_JoystickMotor 00D6  
                   TeTeclat@state 0038                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0061  
                   ?_SIOStartGame 0061                         _TRISCbits 000F94  
                       _TRISDbits 000F95       __size_of_UshowUsersCalculat 000C  
                       _HNouSegon 1EBC                    _GLCDMostraMenu 1EEC  
       __end_of_conversorJoystick 1D02                   ??_CantaPartAlta 0066  
                  ?_MsetNovaTecla 0061                         _CantaData 1B9C  
               __size_of_GLCDInit 0008                       _UmotorUsers 0F02  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1EEC  
                  __end_of_SMSoff 1FBE                      ??_TiGetTimer 0066  
                  __end_of_LcInit 1518                    ??_SIONovaTecla 0066  
                      ?_CToAReset 0061                    __end_of_SMotor 125C  
                       _LcPutChar 1A52                    __end_of_TeInit 1F84  
               motorAltaveu@state 0025                    __end_of_Espera 1D8E  
                  GLCDMotor@state 0022        __end_of_EscriuPrimeraOrdre 17DE  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1DAC  
                     ?_init_ports 0061                         _NoFerMenu 1FF4  
                       _ColumnAct 003E              __end_of_JoystickInit 1E82  
                  ??_SIOStartGame 0066                         _URegister 1FE8  
                       _HnoJugant 1FC8                      ?_TiInitTimer 0061  
                    ??_JnovaTecla 0066                         _SiFerMenu 1FEC  
                     __end_ofPL10 0D16                       __end_ofPL20 10B0  
                     __end_ofPL12 1C68                       __end_ofPL30 1BCA  
                     __end_ofPL22 164A                       __end_ofPL14 109E  
                     __end_ofPL40 0A60                       __end_ofPL32 0A56  
                     __end_ofPL24 0EF8                       __end_ofPL16 16F6  
                     __end_ofPL50 0F02                       __end_ofPL42 1A52  
                     __end_ofPL34 1A46                       __end_ofPL26 1E1C  
                     __end_ofPL18 138E                       __end_ofPL60 1266  
                     __end_ofPL52 19B2                       __end_ofPL44 0A6C  
                     __end_ofPL36 17EC                       __end_ofPL28 0A50  
                     __end_ofPL70 1662                       __end_ofPL62 194C  
                     __end_ofPL54 0D20                       __end_ofPL46 10B8  
                     __end_ofPL38 1658                       __end_ofPL80 0A78  
                     __end_ofPL72 1D6C                       __end_ofPL64 1E70  
                     __end_ofPL56 1B5E                       __end_ofPL48 1B54  
                     __end_ofPL82 0A80                       __end_ofPL74 1522  
                     __end_ofPL66 1AE2                       __end_ofPL58 1BD4  
                     __end_ofPL84 0A88                       __end_ofPL76 1A9A  
                     __end_ofPL68 17F6                       __end_ofPL78 0A72  
             start_initialization 17F6                         _TiGetTics 1CB8  
          __end_of_GLCDMostraMenu 1EF8                        ?_HNouSegon 0061  
                ??_UgetNumUsuaris 0066                  UmotorUsers@state 0029  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1E5C  
              __end_of_TiGetTimer 1C5A                   _do_updateScores 03C3  
                   JJuguem@usuari 0066              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 138E                 __size_of_JendGame 0004  
                    ?_TiResetTics 0061                        ?_CantaData 0061  
            _UcheckExistsGetError 1FE0           __end_of_SIONovaDireccio 1F34  
            __size_of_LcNewString 000C                          ??_SMSoff 0066  
                        ??_LcInit 0072                         _NovaTecla 0053  
               __size_of_TeTeclat 0116                          ??_SMotor 006D  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 0067  
                    ?__TiRSITimer 0061                     ??_initAltaveu 0067  
                        ??_Espera 006F                         _UgetScore 1EA2  
              __end_of_JnovaTecla 1F3C                        ?_LcPutChar 0061  
                       _UenviaPas 1E82                 __size_of_UgetTop5 000C  
                     __pdataBANK0 00B2                    motorHora@state 0016  
                    _menuDaltGLCD 0023                      ??_UenviaChar 0067  
                       _UnewScore 1AE2                        ?_NoFerMenu 0061  
                     ??_GLCDMotor 0075                        ?_URegister 0061  
                      ?_HnoJugant 0061                 ??_checkHoraAcabat 0066  
                   ??_init_eusart 0066                        ?_SiFerMenu 0061  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                   __pcstackBANK0 00C7                        ?_TiGetTics 0066  
                 ?_GLCDMostraMenu 0061                          ?_HJugant 0061  
                  ?_JoystickMotor 0061                   ??_MsetNovaTecla 0066  
            __end_of_motorAltaveu 16DE                          ?_JJuguem 0061  
                        ?_LcClear 0061                          ?_CantaIR 0061  
      __size_of_conversorJoystick 0024                _calculateShowUsers 1FD8  
                  _CantaPartBaixa 18E6          ??_SIOHaAcabatPuntuacions 0066  
           ?_UcheckExistsGetError 0061                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0061               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 0066                SsetNovaTecla@tecla 0066  
              __end_of_UenviaChar 1EA2           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008                  ??_escriureEEPROM 0066  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 0061  
                      ?_UgetScore 0061                       ??_CToAReset 0066  
         ?_escriure2usuarisStruct 0061                         __pintcode 0008  
                   ??_playAltaveu 0066                        ?_UenviaPas 0066  
               __size_of_motorSIO 01CC                 __size_of_motorJoc 00A8  
                 CantaPartBaixa@c 0067                      _CToAHaAcabat 0036  
             __end_of_initAltaveu 1F6C                        ?_UnewScore 0061  
                       _arrayZero 0045                          ?_initSIO 0061  
                     __smallconst 0200                         _convertir 0048  
                   ??_CToAobtenir 0068                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 0066  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1F2C                    __size_of_Sinit 0008  
                     ??_HNouSegon 0066                    __size_of_Uinit 006E  
                     _direccioSIO 004A                       _direccioJoc 0015  
          __end_of_CantaPartBaixa 1942                JoystickMotor@state 0019  
                        _GLCDInit 1FA4                escriureEEPROM@caca 0066  
                     _do_register 03C5               __end_of_init_eusart 1E32  
                       _newString 03C0                      _UcheckExists 1FE4  
                       _jugantSIO 03B9          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03BA                      UgetTop5@quin 0066  
                     ??_CantaData 0068                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0061                  ?_SIONovaDireccio 0061  
            __end_of_SIOStartGame 1F24                     UenviaChar@pos 0066  
  __end_of_escriure2usuarisStruct 1A02                _escriureCharEEPROM 1D02  
                       _novaTecla 0056                     motorSIO@state 0011  
                        _PIR1bits 000F9E                       ??_LcPutChar 0074  
                       _timerGLCD 0024                         _motorHora 16F6  
                        _RCONbits 000FD0                         _reproduir 03C2  
                        _HGetTime 1FCC             __size_of_JoystickInit 0012  
                       _timerHora 0018                         _timerMenu 0033  
             ?_escriureCharEEPROM 0066                       ??_NoFerMenu 0066  
                      _ADCON0bits 000FC2                       ??_URegister 0066  
                     ??_HnoJugant 0066                       ??_SiFerMenu 0066  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1FD8  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006D  
                       _zeroTecla 003B                          _LcGotoXY 1C08  
                  _usuariLoguejat 0050                          _LcLliure 1F10  
                     ??_TiGetTics 0068           __size_of_compareStrings 002A  
            __size_of_TiInitTimer 0028                          _LcScroll 1FBE  
                 ??_JoystickMotor 0067                     GLCDMotor@max1 004F  
                   GLCDMotor@max2 004E                     GLCDMotor@min1 0020  
                   GLCDMotor@min2 001F                      _teclaPremuda 00BB  
                        _JendGame 1FF8                         _usuariJoc 004D  
                     LcGotoXY@Row 006E                         copy_data0 180A  
                       copy_data1 182A              ??_escriureCharEEPROM 0067  
                 ?_CantaPartBaixa 0061               __end_of_CToAobtenir 2000  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0066  
           escriureCharEEPROM@pos 0066                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 1266             __end_of_JnovaDireccio 1F44  
                  ??_MNouJoystick 0066   __size_of_SIOHaAcabatPuntuacions 0004  
                    ?_UmotorUsers 0061                      _JoystickInit 1E70  
                      _EECON1bits 000FA6                       _indexUsuari 0031  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0014                          __Hrparam 0000  
                     _initAltaveu 1F64                       ??_UgetScore 0066  
                        _UgetTop5 1E5C                         menu@state 002F  
                        __Lrparam 0000                        ?_motorHora 0061  
            __size_of__TiRSITimer 003E                      _UgetUserName 1E48  
                     ??_UenviaPas 0067                      _novaDireccio 0051  
                     ??_UnewScore 0066                      ??_init_ports 0066  
             HActualitzaHora@nova 0066        __end_of_UshowUsersCalculat 1EE0  
                     _init_eusart 1E1C                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007C                      _novaTeclaJOC 004C  
                    _novaTeclaSIO 0049                   _do_check_exists 03C6  
                        __ptext10 1FC8                          __ptext11 1EBC  
              _EscriuPrimeraOrdre 177A                          __ptext20 1EC8  
                        __ptext12 1FAC                          __ptext21 1FD8  
                        __ptext13 1FCC                          __ptext30 1FE0  
                        __ptext22 1ED4                          __ptext14 1FD0  
                        __ptext31 1FE4                          __ptext23 1E48  
                        __ptext15 16F6                          __ptext40 1F3C  
                        __ptext32 1FE8                          __ptext24 1E5C  
                        __ptext16 1FD4                          __ptext41 1FF8  
                        __ptext33 1FEC                          __ptext25 1EA2  
                        __ptext17 1662                          __ptext50 1E1C  
                        __ptext42 1F44                          __ptext34 1FB2  
                        __ptext26 1FDC                          __ptext18 02F6  
                        __ptext51 1F54                          __ptext43 1BD4  
                        __ptext35 1FB8                          __ptext27 1E82  
                        __ptext19 1DC8                          __ptext60 1C90  
                        __ptext52 1F5C                          __ptext44 1EEC  
                        __ptext36 1FF0                          __ptext28 1E92  
                        __ptext61 1266                          __ptext53 1F64  
                        __ptext45 1FFC                          __ptext37 1FF4  
                        __ptext29 1EE0                          __ptext70 1464  
                        __ptext62 1F6C                          __ptext54 1C68  
                        __ptext46 0036                          __ptext38 1FBE  
                        __ptext71 177A                          __ptext63 1F74  
                        __ptext55 19B2                          __ptext47 1EF8  
                        __ptext39 1F34                          __ptext80 1D4A  
                        __ptext72 138E                          __ptext64 1F7C  
                        __ptext56 0F02                          __ptext48 1F4C  
                        __ptext81 1C08                          __ptext73 1F9C  
                        __ptext65 1F84                          __ptext57 1D02  
                        __ptext49 1D8E                          __ptext90 1C3C  
                        __ptext82 1B5E                          __ptext74 1E70  
                        __ptext66 10B8                          __ptext58 1B20  
                        __ptext91 1D26                          __ptext83 1DE4  
                        __ptext75 0A88                          __ptext67 1F8C  
                        __ptext59 15CA                          __ptext84 18E6  
                        __ptext76 1A52                          __ptext68 1F94  
                        __ptext93 1A9A                          __ptext85 194C  
                        __ptext77 1B9C                          __ptext69 1A02  
                        __ptext86 1D6C                          __ptext78 1F04  
                        __ptext87 1E00                          __ptext79 1F10  
                        __ptext88 1CB8                          __ptext89 1FA4  
                  CantaPartAlta@c 0067                       _lletraASCII 0057  
                        _high_rsi 0008                          _copsNota 0026  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 1F5C                       _lletraInici 00B2  
                        _menuDalt 0032                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0061                     __size_of_main 0078  
                   __size_of_menu 0744             __end_of_CantaPartAlta 19A8  
                  _CToAConverteix 1EF8                     CantaData@Data 0068  
                        _tiTeclat 0039                __end_of_init_ports 1DAC  
                        _setSMSon 03C8                     _SsetNovaTecla 1F6C  
            __size_of_WaitForBusy 003E                          _nouSegon 03BC  
                        _motorSIO 0D20                 ??_HActualitzaHora 0067  
                        _motorJoc 1522                   _checkHoraAcabat 1EC8  
                        _timerSIO 0013                          _timerSMS 0055  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 0066                       _playAltaveu 1FD4  
                    _motorAltaveu 1662           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1FF0              ??_EscriuPrimeraOrdre 0066  
                      LcInit@rows 0072                  ??_GLCDMostraMenu 0066  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1EE0  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0066  
                     _CToAobtenir 1FFC             __size_of_SIOStartGame 0008  
                   ??_LcNewString 006B                          intlevel2 0000  
                    _timerAltaveu 0027                    _arrayShowUsers 00A1  
          __end_of_CToAConverteix 1F04                        LcPutChar@c 0074  
                  ?_SsetNovaTecla 0061                 MNovaLletra@lletra 0066  
                 compareStrings@a 0066                   compareStrings@b 0067  
                     ??_motorHora 006D                      _SIONovaTecla 1F24  
                  UnewScore@score 0066                       _tempsAcabat 03BB  
                     GLCDMotor@k1 001E                       GLCDMotor@k2 001D  
            __end_of_MNouJoystick 1FA4                      _SIOStartGame 1F1C  
                  _compareStrings 1B20                       _tmpPassword 0098  
             __end_of_MNovaLletra 1F94                   ?_CToAConverteix 0061  
           __end_of_MsetNovaTecla 1F7C           __end_of_checkHoraAcabat 1ED4  
                     _tmpUsername 00A9                    _SIOcheckKrebut 1EB0  
                     SMotor@state 003A           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1F10              __size_of_UmotorUsers 0180  
                      _SIOendGame 1FC4  
