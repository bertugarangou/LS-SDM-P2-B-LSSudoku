

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 13:18:40 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112                           	psect	pa_nodes0,global,class=CODE,delta=1
   113  0000                     
   114                           ; Version 2.32
   115                           ; Generated 02/02/2021 GMT
   116                           ; 
   117                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution. Publication is not required when
   131                           ;        this file is used in an embedded application.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4321 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataCOMRAM
   151  001AA0                     __pidataCOMRAM:
   152                           	callstack 0
   153                           
   154                           ;initializer for _convertir
   155  001AA0  FA                 	db	250
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001AA1  FF                 	db	255
   159                           
   160                           ;initializer for _direccioSIO
   161  001AA2  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001AA3  FF                 	db	255
   165                           
   166                           ;initializer for _novaTeclaJOC
   167  001AA4  FF                 	db	255
   168                           
   169                           ;initializer for _usuariJoc
   170  001AA5  FF                 	db	255
   171                           
   172                           ;initializer for GLCDMotor@max2
   173  001AA6  0F                 	db	15
   174                           
   175                           ;initializer for GLCDMotor@max1
   176  001AA7  0F                 	db	15
   177                           
   178                           ;initializer for _usuariLoguejat
   179  001AA8  FF                 	db	255
   180                           
   181                           ;initializer for _novaDireccio
   182  001AA9  FF                 	db	255
   183                           
   184                           ;initializer for _novaLletra
   185  001AAA  FF                 	db	255
   186                           
   187                           ;initializer for _NovaTecla
   188  001AAB  FF                 	db	255
   189                           
   190                           ;initializer for _ultimaTecla
   191  001AAC  FF                 	db	255
   192                           
   193                           ;initializer for _timerSMS
   194  001AAD  FF                 	db	255
   195                           
   196                           ;initializer for _novaTecla
   197  001AAE  FF                 	db	255
   198                           
   199                           ;initializer for _lletraASCII
   200  001AAF  FF                 	db	255
   201                           
   202                           ;initializer for _hora
   203  001AB0  33                 	db	51
   204  001AB1  30                 	db	48
   205  001AB2  3A                 	db	58
   206  001AB3  30                 	db	48
   207  001AB4  30                 	db	48
   208  001AB5  00                 	db	0
   209                           
   210                           ;initializer for _stringScore
   211  001AB6  30                 	db	48
   212  001AB7  30                 	db	48
   213  001AB8  00                 	db	0
   214                           
   215                           	psect	idataBANK0
   216  001B26                     __pidataBANK0:
   217                           	callstack 0
   218                           
   219                           ;initializer for _teclaPremuda
   220  001B26  01                 	db	1
   221  001B27  02                 	db	2
   222  001B28  03                 	db	3
   223  001B29  04                 	db	4
   224  001B2A  05                 	db	5
   225  001B2B  06                 	db	6
   226  001B2C  07                 	db	7
   227  001B2D  08                 	db	8
   228  001B2E  09                 	db	9
   229  001B2F  0A                 	db	10
   230  001B30  00                 	db	0
   231  001B31  0B                 	db	11
   232                           
   233                           	psect	mediumconst
   234  001F00                     __pmediumconst:
   235                           	callstack 0
   236  001F00  00                 	db	0
   237  001F01                     _lletraInici:
   238                           	callstack 0
   239  001F01  41                 	db	65
   240  001F02  44                 	db	68
   241  001F03  47                 	db	71
   242  001F04  4A                 	db	74
   243  001F05  4D                 	db	77
   244  001F06  50                 	db	80
   245  001F07  54                 	db	84
   246  001F08  57                 	db	87
   247  001F09                     __end_of_lletraInici:
   248                           	callstack 0
   249  001F09                     _arrayZero:
   250                           	callstack 0
   251  001F09  30                 	db	48
   252  001F0A  20                 	db	32
   253  001F0B                     __end_of_arrayZero:
   254                           	callstack 0
   255  001F0B                     _menuList:
   256                           	callstack 0
   257  001F0B  31                 	db	49
   258  001F0C  2E                 	db	46
   259  001F0D  50                 	db	80
   260  001F0E  6C                 	db	108
   261  001F0F  61                 	db	97
   262  001F10  79                 	db	121
   263  001F11  20                 	db	32
   264  001F12  61                 	db	97
   265  001F13  20                 	db	32
   266  001F14  47                 	db	71
   267  001F15  61                 	db	97
   268  001F16  6D                 	db	109
   269  001F17  65                 	db	101
   270  001F18  00                 	db	0
   271  001F19  00                 	db	0
   272  001F1A  00                 	db	0
   273  001F1B  00                 	db	0
   274  001F1C  00                 	db	0
   275  001F1D  00                 	db	0
   276  001F1E  00                 	db	0
   277  001F1F  00                 	db	0
   278  001F20  00                 	db	0
   279  001F21  00                 	db	0
   280  001F22  00                 	db	0
   281  001F23  00                 	db	0
   282  001F24  00                 	db	0
   283  001F25  00                 	db	0
   284  001F26  00                 	db	0
   285  001F27  00                 	db	0
   286  001F28  32                 	db	50
   287  001F29  2E                 	db	46
   288  001F2A  4D                 	db	77
   289  001F2B  6F                 	db	111
   290  001F2C  64                 	db	100
   291  001F2D  69                 	db	105
   292  001F2E  66                 	db	102
   293  001F2F  79                 	db	121
   294  001F30  20                 	db	32
   295  001F31  54                 	db	84
   296  001F32  69                 	db	105
   297  001F33  6D                 	db	109
   298  001F34  65                 	db	101
   299  001F35  00                 	db	0
   300  001F36  00                 	db	0
   301  001F37  00                 	db	0
   302  001F38  00                 	db	0
   303  001F39  00                 	db	0
   304  001F3A  00                 	db	0
   305  001F3B  00                 	db	0
   306  001F3C  00                 	db	0
   307  001F3D  00                 	db	0
   308  001F3E  00                 	db	0
   309  001F3F  00                 	db	0
   310  001F40  00                 	db	0
   311  001F41  00                 	db	0
   312  001F42  00                 	db	0
   313  001F43  00                 	db	0
   314  001F44  00                 	db	0
   315  001F45  33                 	db	51
   316  001F46  2E                 	db	46
   317  001F47  53                 	db	83
   318  001F48  68                 	db	104
   319  001F49  6F                 	db	111
   320  001F4A  77                 	db	119
   321  001F4B  20                 	db	32
   322  001F4C  47                 	db	71
   323  001F4D  65                 	db	101
   324  001F4E  6E                 	db	110
   325  001F4F  65                 	db	101
   326  001F50  72                 	db	114
   327  001F51  61                 	db	97
   328  001F52  6C                 	db	108
   329  001F53  20                 	db	32
   330  001F54  54                 	db	84
   331  001F55  6F                 	db	111
   332  001F56  70                 	db	112
   333  001F57  20                 	db	32
   334  001F58  35                 	db	53
   335  001F59  20                 	db	32
   336  001F5A  53                 	db	83
   337  001F5B  63                 	db	99
   338  001F5C  6F                 	db	111
   339  001F5D  72                 	db	114
   340  001F5E  65                 	db	101
   341  001F5F  73                 	db	115
   342  001F60  20                 	db	32
   343  001F61  00                 	db	0
   344  001F62  34                 	db	52
   345  001F63  2E                 	db	46
   346  001F64  4C                 	db	76
   347  001F65  6F                 	db	111
   348  001F66  67                 	db	103
   349  001F67  6F                 	db	111
   350  001F68  75                 	db	117
   351  001F69  74                 	db	116
   352  001F6A  00                 	db	0
   353  001F6B  00                 	db	0
   354  001F6C  00                 	db	0
   355  001F6D  00                 	db	0
   356  001F6E  00                 	db	0
   357  001F6F  00                 	db	0
   358  001F70  00                 	db	0
   359  001F71  00                 	db	0
   360  001F72  00                 	db	0
   361  001F73  00                 	db	0
   362  001F74  00                 	db	0
   363  001F75  00                 	db	0
   364  001F76  00                 	db	0
   365  001F77  00                 	db	0
   366  001F78  00                 	db	0
   367  001F79  00                 	db	0
   368  001F7A  00                 	db	0
   369  001F7B  00                 	db	0
   370  001F7C  00                 	db	0
   371  001F7D  00                 	db	0
   372  001F7E  00                 	db	0
   373  001F7F  35                 	db	53
   374  001F80  2E                 	db	46
   375  001F81  53                 	db	83
   376  001F82  68                 	db	104
   377  001F83  6F                 	db	111
   378  001F84  77                 	db	119
   379  001F85  20                 	db	32
   380  001F86  41                 	db	65
   381  001F87  6C                 	db	108
   382  001F88  6C                 	db	108
   383  001F89  20                 	db	32
   384  001F8A  55                 	db	85
   385  001F8B  73                 	db	115
   386  001F8C  65                 	db	101
   387  001F8D  72                 	db	114
   388  001F8E  73                 	db	115
   389  001F8F  00                 	db	0
   390  001F90  00                 	db	0
   391  001F91  00                 	db	0
   392  001F92  00                 	db	0
   393  001F93  00                 	db	0
   394  001F94  00                 	db	0
   395  001F95  00                 	db	0
   396  001F96  00                 	db	0
   397  001F97  00                 	db	0
   398  001F98  00                 	db	0
   399  001F99  00                 	db	0
   400  001F9A  00                 	db	0
   401  001F9B  00                 	db	0
   402  001F9C                     __end_of_menuList:
   403                           	callstack 0
   404  0000                     _PIR1bits	set	3998
   405  0000                     _RCREG	set	4014
   406  0000                     _TXREG	set	4013
   407  0000                     _TXSTAbits	set	4012
   408  0000                     _ADCON0bits	set	4034
   409  0000                     _ADRESH	set	4036
   410  0000                     _ADCON2	set	4032
   411  0000                     _ADCON1	set	4033
   412  0000                     _ADCON0	set	4034
   413  0000                     _EECON2	set	4007
   414  0000                     _EEDATA	set	4008
   415  0000                     _EEADR	set	4009
   416  0000                     _T0CONbits	set	4053
   417  0000                     _TMR0L	set	4054
   418  0000                     _TMR0H	set	4055
   419  0000                     _T0CON	set	4053
   420  0000                     _INTCONbits	set	4082
   421  0000                     _RCONbits	set	4048
   422  0000                     _PORTDbits	set	3971
   423  0000                     _SPBRG	set	4015
   424  0000                     _SPBRGH	set	4016
   425  0000                     _BAUDCON	set	4024
   426  0000                     _RCSTA	set	4011
   427  0000                     _TXSTA	set	4012
   428  0000                     _EECON1bits	set	4006
   429  0000                     _LATD	set	3980
   430  0000                     _TRISD	set	3989
   431  0000                     _TRISC	set	3988
   432  0000                     _LATBbits	set	3978
   433  0000                     _TRISB	set	3987
   434  0000                     _TRISA	set	3986
   435  0000                     _PORTCbits	set	3970
   436  0000                     _LATDbits	set	3980
   437  0000                     _LATCbits	set	3979
   438  0000                     _TRISDbits	set	3989
   439  0000                     _TRISCbits	set	3988
   440  001F9C                     STR_7:
   441  001F9C  54                 	db	84	;'T'
   442  001F9D  49                 	db	73	;'I'
   443  001F9E  4D                 	db	77	;'M'
   444  001F9F  45                 	db	69	;'E'
   445  001FA0  20                 	db	32
   446  001FA1  52                 	db	82	;'R'
   447  001FA2  45                 	db	69	;'E'
   448  001FA3  4D                 	db	77	;'M'
   449  001FA4  41                 	db	65	;'A'
   450  001FA5  49                 	db	73	;'I'
   451  001FA6  4E                 	db	78	;'N'
   452  001FA7  49                 	db	73	;'I'
   453  001FA8  4E                 	db	78	;'N'
   454  001FA9  47                 	db	71	;'G'
   455  001FAA  3A                 	db	58	;':'
   456  001FAB  00                 	db	0
   457  001FAC                     STR_6:
   458  001FAC  4D                 	db	77	;'M'
   459  001FAD  6F                 	db	111	;'o'
   460  001FAE  64                 	db	100	;'d'
   461  001FAF  69                 	db	105	;'i'
   462  001FB0  66                 	db	102	;'f'
   463  001FB1  79                 	db	121	;'y'
   464  001FB2  20                 	db	32
   465  001FB3  54                 	db	84	;'T'
   466  001FB4  69                 	db	105	;'i'
   467  001FB5  6D                 	db	109	;'m'
   468  001FB6  65                 	db	101	;'e'
   469  001FB7  3A                 	db	58	;':'
   470  001FB8  00                 	db	0
   471  001FB9                     STR_9:
   472  001FB9  54                 	db	84	;'T'
   473  001FBA  49                 	db	73	;'I'
   474  001FBB  4D                 	db	77	;'M'
   475  001FBC  45                 	db	69	;'E'
   476  001FBD  20                 	db	32
   477  001FBE  4C                 	db	76	;'L'
   478  001FBF  45                 	db	69	;'E'
   479  001FC0  46                 	db	70	;'F'
   480  001FC1  54                 	db	84	;'T'
   481  001FC2  3A                 	db	58	;':'
   482  001FC3  20                 	db	32
   483  001FC4  00                 	db	0
   484  001FC5                     STR_2:
   485  001FC5  32                 	db	50	;'2'
   486  001FC6  2E                 	db	46
   487  001FC7  52                 	db	82	;'R'
   488  001FC8  45                 	db	69	;'E'
   489  001FC9  47                 	db	71	;'G'
   490  001FCA  49                 	db	73	;'I'
   491  001FCB  53                 	db	83	;'S'
   492  001FCC  54                 	db	84	;'T'
   493  001FCD  45                 	db	69	;'E'
   494  001FCE  52                 	db	82	;'R'
   495  001FCF  00                 	db	0
   496  001FD0                     STR_5:
   497  001FD0  42                 	db	66	;'B'
   498  001FD1  59                 	db	89	;'Y'
   499  001FD2  45                 	db	69	;'E'
   500  001FD3  20                 	db	32
   501  001FD4  42                 	db	66	;'B'
   502  001FD5  59                 	db	89	;'Y'
   503  001FD6  45                 	db	69	;'E'
   504  001FD7  20                 	db	32
   505  001FD8  00                 	db	0
   506  001FD9                     STR_10:
   507  001FD9  53                 	db	83	;'S'
   508  001FDA  43                 	db	67	;'C'
   509  001FDB  4F                 	db	79	;'O'
   510  001FDC  52                 	db	82	;'R'
   511  001FDD  45                 	db	69	;'E'
   512  001FDE  3A                 	db	58	;':'
   513  001FDF  20                 	db	32
   514  001FE0  00                 	db	0
   515  001FE1                     STR_8:
   516  001FE1  45                 	db	69	;'E'
   517  001FE2  52                 	db	82	;'R'
   518  001FE3  52                 	db	82	;'R'
   519  001FE4  4F                 	db	79	;'O'
   520  001FE5  52                 	db	82	;'R'
   521  001FE6  53                 	db	83	;'S'
   522  001FE7  3A                 	db	58	;':'
   523  001FE8  00                 	db	0
   524  001FE9                     STR_1:
   525  001FE9  31                 	db	49	;'1'
   526  001FEA  2E                 	db	46
   527  001FEB  4C                 	db	76	;'L'
   528  001FEC  4F                 	db	79	;'O'
   529  001FED  47                 	db	71	;'G'
   530  001FEE  49                 	db	73	;'I'
   531  001FEF  4E                 	db	78	;'N'
   532  001FF0  00                 	db	0
   533  001FF1                     STR_4:
   534  001FF1  50                 	db	80	;'P'
   535  001FF2  53                 	db	83	;'S'
   536  001FF3  57                 	db	87	;'W'
   537  001FF4  44                 	db	68	;'D'
   538  001FF5  3A                 	db	58	;':'
   539  001FF6  20                 	db	32
   540  001FF7  00                 	db	0
   541  001FF8                     STR_3:
   542  001FF8  55                 	db	85	;'U'
   543  001FF9  53                 	db	83	;'S'
   544  001FFA  45                 	db	69	;'E'
   545  001FFB  52                 	db	82	;'R'
   546  001FFC  3A                 	db	58	;':'
   547  001FFD  20                 	db	32
   548  001FFE  00                 	db	0
   549  001FFF  00                 	db	0	; dummy byte at the end
   550  0000                     
   551                           ; #config settings
   552                           
   553                           	psect	cinit
   554  001524                     __pcinit:
   555                           	callstack 0
   556  001524                     start_initialization:
   557                           	callstack 0
   558  001524                     __initialization:
   559                           	callstack 0
   560                           
   561                           ; Initialize objects allocated to BANK0 (12 bytes)
   562                           ; load TBLPTR registers with __pidataBANK0
   563  001524  0E26               	movlw	low __pidataBANK0
   564  001526  6EF6               	movwf	tblptrl,c
   565  001528  0E1B               	movlw	high __pidataBANK0
   566  00152A  6EF7               	movwf	tblptrh,c
   567  00152C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   568  00152E  6EF8               	movwf	tblptru,c
   569  001530  EE00  F0AA         	lfsr	0,__pdataBANK0
   570  001534  EE10 F00C          	lfsr	1,12
   571  001538                     copy_data0:
   572  001538  0009               	tblrd		*+
   573  00153A  CFF5 FFEE          	movff	tablat,postinc0
   574  00153E  50E5               	movf	postdec1,w,c
   575  001540  50E1               	movf	fsr1l,w,c
   576  001542  E1FA               	bnz	copy_data0
   577                           
   578                           ; Initialize objects allocated to COMRAM (25 bytes)
   579                           ; load TBLPTR registers with __pidataCOMRAM
   580  001544  0EA0               	movlw	low __pidataCOMRAM
   581  001546  6EF6               	movwf	tblptrl,c
   582  001548  0E1A               	movlw	high __pidataCOMRAM
   583  00154A  6EF7               	movwf	tblptrh,c
   584  00154C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   585  00154E  6EF8               	movwf	tblptru,c
   586  001550  EE00  F04A         	lfsr	0,__pdataCOMRAM
   587  001554  EE10 F019          	lfsr	1,25
   588  001558                     copy_data1:
   589  001558  0009               	tblrd		*+
   590  00155A  CFF5 FFEE          	movff	tablat,postinc0
   591  00155E  50E5               	movf	postdec1,w,c
   592  001560  50E1               	movf	fsr1l,w,c
   593  001562  E1FA               	bnz	copy_data1
   594                           
   595                           ; Clear objects allocated to BANK1 (184 bytes)
   596  001564  EE01  F000         	lfsr	0,__pbssBANK1
   597  001568  0EB8               	movlw	184
   598  00156A                     clear_0:
   599  00156A  6AEE               	clrf	postinc0,c
   600  00156C  06E8               	decf	wreg,f,c
   601  00156E  E1FD               	bnz	clear_0
   602                           
   603                           ; Clear objects allocated to BANK0 (42 bytes)
   604  001570  EE00  F080         	lfsr	0,__pbssBANK0
   605  001574  0E2A               	movlw	42
   606  001576                     clear_1:
   607  001576  6AEE               	clrf	postinc0,c
   608  001578  06E8               	decf	wreg,f,c
   609  00157A  E1FD               	bnz	clear_1
   610                           
   611                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   612  00157C  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   613  00157E  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   614  001580  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   615                           
   616                           ; Clear objects allocated to COMRAM (73 bytes)
   617  001582  EE00  F001         	lfsr	0,__pbssCOMRAM
   618  001586  0E49               	movlw	73
   619  001588                     clear_2:
   620  001588  6AEE               	clrf	postinc0,c
   621  00158A  06E8               	decf	wreg,f,c
   622  00158C  E1FD               	bnz	clear_2
   623  00158E                     end_of_initialization:
   624                           	callstack 0
   625  00158E                     __end_of__initialization:
   626                           	callstack 0
   627  00158E  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   628  001590  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   629  001592  0E00               	movlw	low (__Lmediumconst shr (0+16))
   630  001594  6EF8               	movwf	tblptru,c
   631  001596  0100               	movlb	0
   632  001598  EFCE  F00A         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bitbssCOMRAM
   635  0003B8                     __pbitbssCOMRAM:
   636                           	callstack 0
   637  0003B8                     _Krebut:
   638                           	callstack 0
   639  0003B8                     	ds	1
   640  0003B9                     _jugantSIO:
   641                           	callstack 0
   642  0003B9                     	ds	1
   643  0003BA                     _jugantJoc:
   644                           	callstack 0
   645  0003BA                     	ds	1
   646  0003BB                     _tempsAcabat:
   647                           	callstack 0
   648  0003BB                     	ds	1
   649  0003BC                     _nouSegon:
   650                           	callstack 0
   651  0003BC                     	ds	1
   652  0003BD                     _jugant:
   653                           	callstack 0
   654  0003BD                     	ds	1
   655  0003BE                     _cap2:
   656                           	callstack 0
   657  0003BE                     	ds	1
   658  0003BF                     _cap1:
   659                           	callstack 0
   660  0003BF                     	ds	1
   661  0003C0                     _newString:
   662                           	callstack 0
   663  0003C0                     	ds	1
   664  0003C1                     _ferMenu:
   665                           	callstack 0
   666  0003C1                     	ds	1
   667  0003C2                     _do_updateScore:
   668                           	callstack 0
   669  0003C2                     	ds	1
   670  0003C3                     _do_showUsers:
   671                           	callstack 0
   672  0003C3                     	ds	1
   673  0003C4                     _do_register:
   674                           	callstack 0
   675  0003C4                     	ds	1
   676  0003C5                     _do_check_exists:
   677                           	callstack 0
   678  0003C5                     	ds	1
   679  0003C6                     _loginNOTRegister:
   680                           	callstack 0
   681  0003C6                     	ds	1
   682  0003C7                     _setSMSon:
   683                           	callstack 0
   684  0003C7                     	ds	1
   685  0003C8                     _nou_s:
   686                           	callstack 0
   687  0003C8                     	ds	1
   688                           
   689                           	psect	bssCOMRAM
   690  000001                     __pbssCOMRAM:
   691                           	callstack 0
   692  000001                     _puntuacions:
   693                           	callstack 0
   694  000001                     	ds	10
   695  00000B                     _arrayShowUsers:
   696                           	callstack 0
   697  00000B                     	ds	8
   698  000013                     _userPtr:
   699                           	callstack 0
   700  000013                     	ds	2
   701  000015                     _h_Tics:
   702                           	callstack 0
   703  000015                     	ds	2
   704  000017                     _s_ptr:
   705                           	callstack 0
   706  000017                     	ds	2
   707  000019                     motorSIO@state:
   708                           	callstack 0
   709  000019                     	ds	1
   710  00001A                     _score:
   711                           	callstack 0
   712  00001A                     	ds	1
   713  00001B                     _timerSIO:
   714                           	callstack 0
   715  00001B                     	ds	1
   716  00001C                     motorJoc@state:
   717                           	callstack 0
   718  00001C                     	ds	1
   719  00001D                     _direccioJoc:
   720                           	callstack 0
   721  00001D                     	ds	1
   722  00001E                     motorHora@state:
   723                           	callstack 0
   724  00001E                     	ds	1
   725  00001F                     _segons:
   726                           	callstack 0
   727  00001F                     	ds	1
   728  000020                     _timerHora:
   729                           	callstack 0
   730  000020                     	ds	1
   731  000021                     JoystickMotor@state:
   732                           	callstack 0
   733  000021                     	ds	1
   734  000022                     _ultimaTeclaAD:
   735                           	callstack 0
   736  000022                     	ds	1
   737  000023                     GLCDMotor@length2:
   738                           	callstack 0
   739  000023                     	ds	1
   740  000024                     GLCDMotor@length1:
   741                           	callstack 0
   742  000024                     	ds	1
   743  000025                     GLCDMotor@k2:
   744                           	callstack 0
   745  000025                     	ds	1
   746  000026                     GLCDMotor@k1:
   747                           	callstack 0
   748  000026                     	ds	1
   749  000027                     GLCDMotor@min2:
   750                           	callstack 0
   751  000027                     	ds	1
   752  000028                     GLCDMotor@min1:
   753                           	callstack 0
   754  000028                     	ds	1
   755  000029                     GLCDMotor@j:
   756                           	callstack 0
   757  000029                     	ds	1
   758  00002A                     GLCDMotor@state:
   759                           	callstack 0
   760  00002A                     	ds	1
   761  00002B                     _menuDaltGLCD:
   762                           	callstack 0
   763  00002B                     	ds	1
   764  00002C                     _timerGLCD:
   765                           	callstack 0
   766  00002C                     	ds	1
   767  00002D                     UmotorUsers@state:
   768                           	callstack 0
   769  00002D                     	ds	1
   770  00002E                     _scoreUsr:
   771                           	callstack 0
   772  00002E                     	ds	1
   773  00002F                     _j:
   774                           	callstack 0
   775  00002F                     	ds	1
   776  000030                     _i:
   777                           	callstack 0
   778  000030                     	ds	1
   779  000031                     _indexNextUserStruct:
   780                           	callstack 0
   781  000031                     	ds	1
   782  000032                     _indexNextUser:
   783                           	callstack 0
   784  000032                     	ds	1
   785  000033                     _numUsuaris:
   786                           	callstack 0
   787  000033                     	ds	1
   788  000034                     menu@state:
   789                           	callstack 0
   790  000034                     	ds	1
   791  000035                     _pos:
   792                           	callstack 0
   793  000035                     	ds	1
   794  000036                     _indexUsuari:
   795                           	callstack 0
   796  000036                     	ds	1
   797  000037                     _menuDalt:
   798                           	callstack 0
   799  000037                     	ds	1
   800  000038                     _timerMenu:
   801                           	callstack 0
   802  000038                     	ds	1
   803  000039                     _tmp:
   804                           	callstack 0
   805  000039                     	ds	1
   806  00003A                     _counter:
   807                           	callstack 0
   808  00003A                     	ds	1
   809  00003B                     TeTeclat@files:
   810                           	callstack 0
   811  00003B                     	ds	1
   812  00003C                     TeTeclat@cols:
   813                           	callstack 0
   814  00003C                     	ds	1
   815  00003D                     TeTeclat@state:
   816                           	callstack 0
   817  00003D                     	ds	1
   818  00003E                     _tiTeclat:
   819                           	callstack 0
   820  00003E                     	ds	1
   821  00003F                     SMotor@state:
   822                           	callstack 0
   823  00003F                     	ds	1
   824  000040                     _zeroTecla:
   825                           	callstack 0
   826  000040                     	ds	1
   827  000041                     _sumaPulsacions:
   828                           	callstack 0
   829  000041                     	ds	1
   830  000042                     _Timer:
   831                           	callstack 0
   832  000042                     	ds	1
   833  000043                     _ColumnAct:
   834                           	callstack 0
   835  000043                     	ds	1
   836  000044                     _RowAct:
   837                           	callstack 0
   838  000044                     	ds	1
   839  000045                     _Rows:
   840                           	callstack 0
   841  000045                     	ds	1
   842  000046                     _horaTmp:
   843                           	callstack 0
   844  000046                     	ds	4
   845                           
   846                           	psect	dataCOMRAM
   847  00004A                     __pdataCOMRAM:
   848                           	callstack 0
   849  00004A                     _convertir:
   850                           	callstack 0
   851  00004A                     	ds	1
   852  00004B                     _novaTeclaSIO:
   853                           	callstack 0
   854  00004B                     	ds	1
   855  00004C                     _direccioSIO:
   856                           	callstack 0
   857  00004C                     	ds	1
   858  00004D                     _usuariActualSIO:
   859                           	callstack 0
   860  00004D                     	ds	1
   861  00004E                     _novaTeclaJOC:
   862                           	callstack 0
   863  00004E                     	ds	1
   864  00004F                     _usuariJoc:
   865                           	callstack 0
   866  00004F                     	ds	1
   867  000050                     GLCDMotor@max2:
   868                           	callstack 0
   869  000050                     	ds	1
   870  000051                     GLCDMotor@max1:
   871                           	callstack 0
   872  000051                     	ds	1
   873  000052                     _usuariLoguejat:
   874                           	callstack 0
   875  000052                     	ds	1
   876  000053                     _novaDireccio:
   877                           	callstack 0
   878  000053                     	ds	1
   879  000054                     _novaLletra:
   880                           	callstack 0
   881  000054                     	ds	1
   882  000055                     _NovaTecla:
   883                           	callstack 0
   884  000055                     	ds	1
   885  000056                     _ultimaTecla:
   886                           	callstack 0
   887  000056                     	ds	1
   888  000057                     _timerSMS:
   889                           	callstack 0
   890  000057                     	ds	1
   891  000058                     _novaTecla:
   892                           	callstack 0
   893  000058                     	ds	1
   894  000059                     _lletraASCII:
   895                           	callstack 0
   896  000059                     	ds	1
   897  00005A                     _hora:
   898                           	callstack 0
   899  00005A                     	ds	6
   900  000060                     _stringScore:
   901                           	callstack 0
   902  000060                     	ds	3
   903                           
   904                           	psect	bssBANK0
   905  000080                     __pbssBANK0:
   906                           	callstack 0
   907  000080                     _s_Timers:
   908                           	callstack 0
   909  000080                     	ds	24
   910  000098                     _tmpPassword:
   911                           	callstack 0
   912  000098                     	ds	9
   913  0000A1                     _tmpUsername:
   914                           	callstack 0
   915  0000A1                     	ds	9
   916                           
   917                           	psect	dataBANK0
   918  0000AA                     __pdataBANK0:
   919                           	callstack 0
   920  0000AA                     _teclaPremuda:
   921                           	callstack 0
   922  0000AA                     	ds	12
   923                           
   924                           	psect	bssBANK1
   925  000100                     __pbssBANK1:
   926                           	callstack 0
   927  000100                     _usuaris:
   928                           	callstack 0
   929  000100                     	ds	184
   930                           
   931                           	psect	cstackBANK0
   932  0000B6                     __pcstackBANK0:
   933                           	callstack 0
   934  0000B6                     ??_GLCDMotor:
   935  0000B6                     ??_motorJoc:
   936  0000B6                     ??_motorSIO:
   937  0000B6                     ??_menu:
   938                           
   939                           ; 1 bytes @ 0x0
   940  0000B6                     	ds	5
   941                           
   942                           	psect	cstackCOMRAM
   943  000063                     __pcstackCOMRAM:
   944                           	callstack 0
   945  000063                     
   946                           ; 1 bytes @ 0x0
   947  000063                     	ds	1
   948  000064                     ??_high_rsi:
   949                           
   950                           ; 1 bytes @ 0x1
   951  000064                     	ds	4
   952  000068                     ??_EscriuPrimeraOrdre:
   953  000068                     ??_CantaPartAlta:
   954  000068                     ??_CantaPartBaixa:
   955  000068                     ?_TiGetTics:
   956                           	callstack 0
   957  000068                     ?_UgetUserName:
   958                           	callstack 0
   959  000068                     ?_getArrayShowUsers:
   960                           	callstack 0
   961  000068                     SsetNovaTecla@tecla:
   962                           	callstack 0
   963  000068                     TiResetTics@Handle:
   964                           	callstack 0
   965  000068                     MsetNovaTecla@tecla:
   966                           	callstack 0
   967  000068                     MNovaLletra@lletra:
   968                           	callstack 0
   969  000068                     MNouJoystick@posicio:
   970                           	callstack 0
   971  000068                     UenviaChar@pos:
   972                           	callstack 0
   973  000068                     UenviaPas@pos:
   974                           	callstack 0
   975  000068                     escriureCharEEPROM@pos:
   976                           	callstack 0
   977  000068                     llegirCharEEPROM@pos:
   978                           	callstack 0
   979  000068                     compareStrings@a:
   980                           	callstack 0
   981  000068                     UgetScore@quin:
   982                           	callstack 0
   983  000068                     UgetTop5@quin:
   984                           	callstack 0
   985  000068                     UnewScore@scoretmp:
   986                           	callstack 0
   987  000068                     GLCDMostraMenu@num:
   988                           	callstack 0
   989  000068                     HActualitzaHora@nova:
   990                           	callstack 0
   991  000068                     JJuguem@usuari:
   992                           	callstack 0
   993  000068                     JnovaTecla@tecla:
   994                           	callstack 0
   995  000068                     JnovaDireccio@dir:
   996                           	callstack 0
   997  000068                     conversorJoystick@direc:
   998                           	callstack 0
   999  000068                     SIONovaDireccio@num:
  1000                           	callstack 0
  1001  000068                     SIOStartGame@usuari:
  1002                           	callstack 0
  1003  000068                     SIONovaTecla@tecla:
  1004                           	callstack 0
  1005  000068                     CToAConverteix@numero:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x5
  1009  000068                     	ds	1
  1010  000069                     ??_JoystickMotor:
  1011  000069                     CantaPartAlta@c:
  1012                           	callstack 0
  1013  000069                     CantaPartBaixa@c:
  1014                           	callstack 0
  1015  000069                     EscriuPrimeraOrdre@ordre:
  1016                           	callstack 0
  1017  000069                     UenviaChar@c:
  1018                           	callstack 0
  1019  000069                     UenviaPas@c:
  1020                           	callstack 0
  1021  000069                     escriureCharEEPROM@c:
  1022                           	callstack 0
  1023  000069                     Uinit@i:
  1024                           	callstack 0
  1025  000069                     compareStrings@b:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  000069                     	ds	1
  1030  00006A                     ??_TiGetTics:
  1031  00006A                     CantaIR@IR:
  1032                           	callstack 0
  1033  00006A                     CantaData@Data:
  1034                           	callstack 0
  1035  00006A                     UgetUserName@quin:
  1036                           	callstack 0
  1037  00006A                     getArrayShowUsers@quin:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x7
  1041  00006A                     	ds	1
  1042  00006B                     ??_compareStrings:
  1043  00006B                     LcNewString@new_s:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x8
  1047  00006B                     	ds	1
  1048  00006C                     TiGetTics@Handle:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x9
  1052  00006C                     	ds	1
  1053  00006D                     ??_UmotorUsers:
  1054  00006D                     TiGetTics@actual:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0xA
  1058  00006D                     	ds	2
  1059  00006F                     ??_SMotor:
  1060  00006F                     ??_motorHora:
  1061  00006F                     ??_TeTeclat:
  1062  00006F                     WaitForBusy@Busy:
  1063                           	callstack 0
  1064  00006F                     Espera@ms:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0xC
  1068  00006F                     	ds	1
  1069  000070                     LcGotoXY@Row:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0xD
  1073  000070                     	ds	1
  1074  000071                     ??_Espera:
  1075  000071                     LcGotoXY@Fisics:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xE
  1079  000071                     	ds	1
  1080  000072                     Espera@Timer:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xF
  1084  000072                     	ds	1
  1085  000073                     LcInit@columns:
  1086                           	callstack 0
  1087  000073                     _LcGotoXY$336:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091  000073                     	ds	1
  1092  000074                     LcInit@rows:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x11
  1096  000074                     	ds	1
  1097  000075                     LcGotoXY@Column:
  1098                           	callstack 0
  1099  000075                     LcInit@i:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x12
  1103  000075                     	ds	1
  1104  000076                     LcPutChar@c:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108  000076                     	ds	1
  1109  000077                     
  1110                           ; 1 bytes @ 0x14
  1111 ;;
  1112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1113 ;;
  1114 ;; *************** function _main *****************
  1115 ;; Defined at:
  1116 ;;		line 77 in file "main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1
  1130 ;;      Params:         0       0       0
  1131 ;;      Locals:         0       0       0
  1132 ;;      Temps:          0       0       0
  1133 ;;      Totals:         0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels required when called: 7
  1136 ;; This function calls:
  1137 ;;		_CtoA
  1138 ;;		_GLCDInit
  1139 ;;		_GLCDMotor
  1140 ;;		_JoystickInit
  1141 ;;		_JoystickMotor
  1142 ;;		_LcInit
  1143 ;;		_LcLCD
  1144 ;;		_Minit
  1145 ;;		_SMotor
  1146 ;;		_Sinit
  1147 ;;		_TeInit
  1148 ;;		_TeTeclat
  1149 ;;		_TiInitTimer
  1150 ;;		_Uinit
  1151 ;;		_UmotorUsers
  1152 ;;		_initHora
  1153 ;;		_initSIO
  1154 ;;		_init_eusart
  1155 ;;		_init_ports
  1156 ;;		_menu
  1157 ;;		_motorHora
  1158 ;;		_motorJoc
  1159 ;;		_motorSIO
  1160 ;; This function is called by:
  1161 ;;		Startup code after reset
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text0
  1166  00159C                     __ptext0:
  1167                           	callstack 0
  1168  00159C                     _main:
  1169                           	callstack 24
  1170                           
  1171                           ;main.c: 78:     init_ports();
  1172                           
  1173                           ;incstack = 0
  1174  00159C  EC17  F00D         	call	_init_ports	;wreg free
  1175                           
  1176                           ;main.c: 80:     init_eusart();
  1177  0015A0  EC5D  F00D         	call	_init_eusart	;wreg free
  1178                           
  1179                           ;main.c: 81:     TiInitTimer();
  1180  0015A4  EC97  F00C         	call	_TiInitTimer	;wreg free
  1181                           
  1182                           ;main.c: 82:     TeInit();
  1183  0015A8  EC0C  F00E         	call	_TeInit	;wreg free
  1184                           
  1185                           ;main.c: 83:     Sinit();
  1186  0015AC  EC10  F00E         	call	_Sinit	;wreg free
  1187                           
  1188                           ;main.c: 84:     SMotor();
  1189  0015B0  EC70  F007         	call	_SMotor	;wreg free
  1190                           
  1191                           ;main.c: 85:     Uinit();
  1192  0015B4  EC32  F00C         	call	_Uinit	;wreg free
  1193                           
  1194                           ;main.c: 87:     GLCDInit();
  1195  0015B8  EC20  F00E         	call	_GLCDInit	;wreg free
  1196                           
  1197                           ;main.c: 88:     JoystickInit();
  1198  0015BC  EC72  F00D         	call	_JoystickInit	;wreg free
  1199                           
  1200                           ;main.c: 89:     initHora();
  1201  0015C0  EC00  F00E         	call	_initHora	;wreg free
  1202                           
  1203                           ;main.c: 90:     initSIO();
  1204  0015C4  ECFC  F00D         	call	_initSIO	;wreg free
  1205                           
  1206                           ;main.c: 92:     LcInit(2,16);
  1207  0015C8  0E10               	movlw	16
  1208  0015CA  6E73               	movwf	LcInit@columns^0,c
  1209  0015CC  0E02               	movlw	2
  1210  0015CE  EC5F  F009         	call	_LcInit
  1211                           
  1212                           ;main.c: 93:     Minit();
  1213  0015D2  EC18  F00E         	call	_Minit	;wreg free
  1214  0015D6                     l6865:
  1215                           
  1216                           ;main.c: 98:         GLCDMotor();
  1217  0015D6  ECDF  F003         	call	_GLCDMotor	;wreg free
  1218                           
  1219                           ;main.c: 99:         motorJoc();
  1220  0015DA  ECBE  F009         	call	_motorJoc	;wreg free
  1221                           
  1222                           ;main.c: 100:         motorSIO();
  1223  0015DE  EC7A  F006         	call	_motorSIO	;wreg free
  1224                           
  1225                           ;main.c: 101:         motorHora();
  1226  0015E2  EC14  F00A         	call	_motorHora	;wreg free
  1227                           
  1228                           ;main.c: 102:         JoystickMotor();
  1229  0015E6  ECF4  F008         	call	_JoystickMotor	;wreg free
  1230                           
  1231                           ;main.c: 103:         menu();
  1232  0015EA  EC1B  F000         	call	_menu	;wreg free
  1233                           
  1234                           ;main.c: 105:         CtoA();
  1235  0015EE  ECE3  F00C         	call	_CtoA	;wreg free
  1236                           
  1237                           ;main.c: 107:         UmotorUsers();
  1238  0015F2  EC3A  F005         	call	_UmotorUsers	;wreg free
  1239                           
  1240                           ;main.c: 109:         TeTeclat();
  1241  0015F6  EC60  F008         	call	_TeTeclat	;wreg free
  1242                           
  1243                           ;main.c: 110:         SMotor();
  1244  0015FA  EC70  F007         	call	_SMotor	;wreg free
  1245                           
  1246                           ;main.c: 111:         LcLCD();
  1247  0015FE  EC68  F00B         	call	_LcLCD	;wreg free
  1248  001602  D7E9               	goto	l6865
  1249  001604                     __end_of_main:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _motorSIO *****************
  1253 ;; Defined at:
  1254 ;;		line 43 in file "SIO.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1
  1268 ;;      Params:         0       0       0
  1269 ;;      Locals:         0       0       0
  1270 ;;      Temps:          0       2       0
  1271 ;;      Totals:         0       2       0
  1272 ;;Total ram usage:        2 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 6
  1275 ;; This function calls:
  1276 ;;		_CToAConverteix
  1277 ;;		_CToAHaAcabat
  1278 ;;		_CToAobtenir
  1279 ;;		_HGetTime
  1280 ;;		_LcClear
  1281 ;;		_LcGotoXY
  1282 ;;		_LcLliure
  1283 ;;		_LcNewString
  1284 ;;		_LcPutChar
  1285 ;;		_TiGetTics
  1286 ;;		_TiResetTics
  1287 ;;		_UgetUserName
  1288 ;;		_UnewScore
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text1
  1295  000CF4                     __ptext1:
  1296                           	callstack 0
  1297  000CF4                     _motorSIO:
  1298                           	callstack 24
  1299                           
  1300                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1301                           
  1302                           ;incstack = 0
  1303  000CF4  D0C8               	goto	l6275
  1304  000CF6                     l6157:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1308  000CF6  BE4D               	btfsc	_usuariActualSIO^0,7,c
  1309  000CF8  0012               	return	
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1313  000CFA  504D               	movf	_usuariActualSIO^0,w,c
  1314  000CFC  EC68  F00D         	call	_UgetUserName
  1315  000D00  C068  F013         	movff	?_UgetUserName,_userPtr
  1316  000D04  C069  F014         	movff	?_UgetUserName+1,_userPtr+1
  1317                           
  1318                           ;SIO.c: 50:     jugantSIO = 1;
  1319  000D08  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1320                           
  1321                           ;SIO.c: 51:     Krebut = 0;
  1322  000D0A  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1323                           
  1324                           ;SIO.c: 52:     state = 1;
  1325  000D0C  0E01               	movlw	1
  1326  000D0E  6E19               	movwf	motorSIO@state^0,c
  1327  000D10  0C01               	retlw	1
  1328  000D12                     l6167:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1332  000D12  D8DA               	call	PL26	;call to abstracted procedure
  1333  000D14  E108               	bnz	l6175
  1334                           
  1335                           ; BSR set to: 0
  1336  000D16  A2AC               	btfss	172,1,c	;volatile
  1337  000D18  D006               	goto	l6175
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;SIO.c: 57:     TXREG = '\0';
  1341  000D1A  6AAD               	clrf	173,c	;volatile
  1342                           
  1343                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1344  000D1C  6A4B               	clrf	_novaTeclaSIO^0,c
  1345                           
  1346                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1347  000D1E  868A               	bsf	138,3,c	;volatile
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;SIO.c: 60:     state = 2;
  1351  000D20  0E02               	movlw	2
  1352  000D22  6E19               	movwf	motorSIO@state^0,c
  1353                           
  1354                           ;SIO.c: 61:    }
  1355  000D24  0C02               	retlw	2
  1356  000D26                     l6175:
  1357                           
  1358                           ; BSR set to: 0
  1359  000D26  D8D0               	call	PL26	;call to abstracted procedure
  1360  000D28  A4D8               	btfss	status,2,c
  1361                           
  1362                           ; BSR set to: 0
  1363  000D2A  A2AC               	btfss	172,1,c	;volatile
  1364  000D2C  0012               	return	
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;SIO.c: 63:     TXREG = *userPtr;
  1368  000D2E  D8CC               	call	PL26	;call to abstracted procedure
  1369  000D30  6EAD               	movwf	173,c	;volatile
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;SIO.c: 64:     userPtr++;
  1373  000D32  4A13               	infsnz	_userPtr^0,f,c
  1374  000D34  2A14               	incf	(_userPtr+1)^0,f,c
  1375  000D36  0012               	return	
  1376  000D38                     l6183:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;SIO.c: 68:    if (RCREG == 'K') {
  1380  000D38  0E4B               	movlw	75
  1381  000D3A  18AE               	xorwf	174,w,c
  1382  000D3C  A4D8               	btfss	status,2,c
  1383  000D3E  0012               	return	
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;SIO.c: 69:     Krebut = 1;
  1387  000D40  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1388  000D42                     l6187:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;SIO.c: 70:     state = 3;
  1392  000D42  0E03               	movlw	3
  1393  000D44  6E19               	movwf	motorSIO@state^0,c
  1394  000D46  0C03               	retlw	3
  1395  000D48                     l6189:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1399  000D48  284C               	incf	_direccioSIO^0,w,c
  1400  000D4A  E006               	bz	l6197
  1401                           
  1402                           ; BSR set to: 0
  1403  000D4C  A2AC               	btfss	172,1,c	;volatile
  1404  000D4E  D004               	goto	l6197
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;SIO.c: 75:     TXREG = direccioSIO;
  1408  000D50  C04C  FFAD         	movff	_direccioSIO,4013	;volatile
  1409                           
  1410                           ;SIO.c: 76:     direccioSIO = -1;
  1411  000D54  684C               	setf	_direccioSIO^0,c
  1412  000D56  D7F5               	goto	l6187
  1413  000D58                     l6197:
  1414                           
  1415                           ; BSR set to: 0
  1416  000D58  0E30               	movlw	48
  1417  000D5A  644B               	cpfsgt	_novaTeclaSIO^0,c
  1418  000D5C  D009               	goto	l1243
  1419                           
  1420                           ; BSR set to: 0
  1421  000D5E  0E3A               	movlw	58
  1422  000D60  604B               	cpfslt	_novaTeclaSIO^0,c
  1423  000D62  D006               	goto	l1243
  1424                           
  1425                           ; BSR set to: 0
  1426  000D64  A2AC               	btfss	172,1,c	;volatile
  1427  000D66  D004               	goto	l1243
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1431  000D68  C04B  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1432                           
  1433                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1434  000D6C  6A4B               	clrf	_novaTeclaSIO^0,c
  1435  000D6E  D7E9               	goto	l6187
  1436  000D70                     l1243:
  1437                           
  1438                           ; BSR set to: 0
  1439  000D70  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1440  000D72  D002               	goto	u7020
  1441                           
  1442                           ; BSR set to: 0
  1443  000D74  B2AC               	btfsc	172,1,c	;volatile
  1444  000D76  D002               	goto	u7030
  1445  000D78                     u7020:
  1446                           
  1447                           ; BSR set to: 0
  1448  000D78  AA9E               	btfss	158,5,c	;volatile
  1449  000D7A  0012               	return	
  1450  000D7C                     u7030:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;SIO.c: 85:     LcClear();
  1454  000D7C  ECF5  F00C         	call	_LcClear	;wreg free
  1455                           
  1456                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1457  000D80  0EE1               	movlw	low STR_8
  1458  000D82  6E6B               	movwf	LcNewString@new_s^0,c
  1459  000D84  0E1F               	movlw	high STR_8
  1460  000D86  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  1461  000D88  ECCF  F00D         	call	_LcNewString	;wreg free
  1462                           
  1463                           ;SIO.c: 87:     TXREG = 'F';
  1464  000D8C  0E46               	movlw	70
  1465  000D8E  6EAD               	movwf	173,c	;volatile
  1466                           
  1467                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1468  000D90  6A4B               	clrf	_novaTeclaSIO^0,c
  1469                           
  1470                           ;SIO.c: 89:     state = 4;
  1471  000D92  0E04               	movlw	4
  1472  000D94  6E19               	movwf	motorSIO@state^0,c
  1473  000D96  0C04               	retlw	4
  1474  000D98                     l1250:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1478  000D98  AA9E               	btfss	158,5,c	;volatile
  1479  000D9A  0012               	return	
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;SIO.c: 94:                 score = RCREG;
  1483  000D9C  CFAE F01A          	movff	4014,_score	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;SIO.c: 95:                 UnewScore(score);
  1487  000DA0  501A               	movf	_score^0,w,c
  1488  000DA2  ECDB  F00D         	call	_UnewScore
  1489                           
  1490                           ;SIO.c: 96:     CToAConverteix(score);
  1491  000DA6  501A               	movf	_score^0,w,c
  1492  000DA8  ECC9  F00D         	call	_CToAConverteix
  1493                           
  1494                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1495  000DAC  501B               	movf	_timerSIO^0,w,c
  1496  000DAE  EC42  F00D         	call	_TiResetTics
  1497  000DB2                     l6225:
  1498                           
  1499                           ;SIO.c: 98:     state = 5;
  1500  000DB2  0E05               	movlw	5
  1501  000DB4  6E19               	movwf	motorSIO@state^0,c
  1502  000DB6  0C05               	retlw	5
  1503  000DB8                     l6227:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1507  000DB8  501B               	movf	_timerSIO^0,w,c
  1508  000DBA  ECBE  F00C         	call	_TiGetTics
  1509  000DBE  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  1510  000DC0  D010               	goto	l6235
  1511  000DC2  0EBB               	movlw	187
  1512  000DC4  5C68               	subwf	?_TiGetTics^0,w,c
  1513  000DC6  0E09               	movlw	9
  1514  000DC8  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  1515  000DCA  E30B               	bnc	l6235
  1516                           
  1517                           ;SIO.c: 103:     LcClear();
  1518  000DCC  ECF5  F00C         	call	_LcClear	;wreg free
  1519                           
  1520                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1521  000DD0  0EB9               	movlw	low STR_9
  1522  000DD2  6E6B               	movwf	LcNewString@new_s^0,c
  1523  000DD4  0E1F               	movlw	high STR_9
  1524  000DD6  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  1525  000DD8  ECCF  F00D         	call	_LcNewString	;wreg free
  1526                           
  1527                           ;SIO.c: 105:     state = 7;
  1528  000DDC  0E07               	movlw	7
  1529  000DDE  6E19               	movwf	motorSIO@state^0,c
  1530                           
  1531                           ;SIO.c: 106:    }
  1532  000DE0  0C07               	retlw	7
  1533  000DE2                     l6235:
  1534  000DE2  501B               	movf	_timerSIO^0,w,c
  1535  000DE4  ECBE  F00C         	call	_TiGetTics
  1536  000DE8  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  1537  000DEA  D006               	goto	u7060
  1538  000DEC  0EBA               	movlw	186
  1539  000DEE  5C68               	subwf	?_TiGetTics^0,w,c
  1540  000DF0  0E09               	movlw	9
  1541  000DF2  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  1542  000DF4  B0D8               	btfsc	status,0,c
  1543  000DF6  0012               	return	
  1544  000DF8                     u7060:
  1545  000DF8  AA9E               	btfss	158,5,c	;volatile
  1546  000DFA  0012               	return	
  1547  000DFC  ECD5  F00D         	call	_LcLliure	;wreg free
  1548  000E00  A0D8               	btfss	status,0,c
  1549  000E02  0012               	return	
  1550                           
  1551                           ;SIO.c: 108:     LcGotoXY(0,1);
  1552  000E04  ECC3  F003         	call	PL34	;call to abstracted procedure
  1553  000E08  EC67  F00C         	call	_LcGotoXY
  1554                           
  1555                           ;SIO.c: 109:     LcPutChar(RCREG);
  1556  000E0C  50AE               	movf	174,w,c	;volatile
  1557  000E0E  EC90  F00B         	call	_LcPutChar
  1558                           
  1559                           ;SIO.c: 110:     state = 6;
  1560  000E12  0E06               	movlw	6
  1561  000E14  6E19               	movwf	motorSIO@state^0,c
  1562  000E16  0C06               	retlw	6
  1563  000E18                     l6245:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;SIO.c: 114:    if (LcLliure()) {
  1567  000E18  ECD5  F00D         	call	_LcLliure	;wreg free
  1568  000E1C  A0D8               	btfss	status,0,c
  1569  000E1E  0012               	return	
  1570                           
  1571                           ;SIO.c: 115:     LcNewString(HGetTime());
  1572  000E20  EC34  F00E         	call	_HGetTime	;wreg free
  1573  000E24  D857               	call	PL48	;call to abstracted procedure
  1574  000E26  ECCF  F00D         	call	_LcNewString	;wreg free
  1575                           
  1576                           ;SIO.c: 116:     state = 8;
  1577  000E2A  0E08               	movlw	8
  1578  000E2C  6E19               	movwf	motorSIO@state^0,c
  1579  000E2E  0C08               	retlw	8
  1580  000E30                     l1258:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1584  000E30  AA9E               	btfss	158,5,c	;volatile
  1585  000E32  0012               	return	
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;SIO.c: 121:     LcPutChar(RCREG);
  1589  000E34  50AE               	movf	174,w,c	;volatile
  1590  000E36  EC90  F00B         	call	_LcPutChar
  1591                           
  1592                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1593  000E3A  501B               	movf	_timerSIO^0,w,c
  1594  000E3C  EC42  F00D         	call	_TiResetTics
  1595  000E40  D7B8               	goto	l6225
  1596  000E42                     l6255:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;SIO.c: 127:    if (LcLliure()) {
  1600  000E42  ECD5  F00D         	call	_LcLliure	;wreg free
  1601  000E46  A0D8               	btfss	status,0,c
  1602  000E48  0012               	return	
  1603                           
  1604                           ;SIO.c: 128:     LcGotoXY(0,1);
  1605  000E4A  ECC3  F003         	call	PL34	;call to abstracted procedure
  1606  000E4E  EC67  F00C         	call	_LcGotoXY
  1607                           
  1608                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1609  000E52  0ED9               	movlw	low STR_10
  1610  000E54  6E6B               	movwf	LcNewString@new_s^0,c
  1611  000E56  0E1F               	movlw	high STR_10
  1612  000E58  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  1613  000E5A  ECCF  F00D         	call	_LcNewString	;wreg free
  1614                           
  1615                           ;SIO.c: 130:     state = 9;
  1616  000E5E  0E09               	movlw	9
  1617  000E60  6E19               	movwf	motorSIO@state^0,c
  1618  000E62  0C09               	retlw	9
  1619  000E64                     l6263:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1623  000E64  ECD5  F00D         	call	_LcLliure	;wreg free
  1624  000E68  A0D8               	btfss	status,0,c
  1625  000E6A  0012               	return	
  1626  000E6C  EC4C  F00E         	call	_CToAHaAcabat	;wreg free
  1627  000E70  0AFA               	xorlw	250
  1628  000E72  A4D8               	btfss	status,2,c
  1629  000E74  0012               	return	
  1630                           
  1631                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1632  000E76  EC4A  F00E         	call	_CToAobtenir	;wreg free
  1633  000E7A  D82C               	call	PL48	;call to abstracted procedure
  1634  000E7C  ECCF  F00D         	call	_LcNewString	;wreg free
  1635                           
  1636                           ;SIO.c: 136:     usuariActualSIO = -1;
  1637  000E80  684D               	setf	_usuariActualSIO^0,c
  1638                           
  1639                           ;SIO.c: 137:     state = 0;
  1640  000E82  6A19               	clrf	motorSIO@state^0,c
  1641  000E84  0012               	return	
  1642  000E86                     l6275:
  1643  000E86  5019               	movf	motorSIO@state^0,w,c
  1644  000E88  0100               	movlb	0	; () banked
  1645  000E8A  6FB6               	movwf	??_motorSIO& (0+255),b
  1646  000E8C  6BB7               	clrf	(??_motorSIO+1)& (0+255),b
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "space"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655  000E8E  51B7               	movf	(??_motorSIO+1)& (0+255),w,b
  1656  000E90  A4D8               	btfss	status,2,c
  1657  000E92  0012               	return	
  1658                           
  1659                           ; BSR set to: 0
  1660                           ; Switch size 1, requested type "space"
  1661                           ; Number of cases is 10, Range of values is 0 to 9
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte           31    16 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666  000E94  51B6               	movf	??_motorSIO& (0+255),w,b
  1667  000E96  E101 D72E          	bz	l6157
  1668  000E9A  0A01               	xorlw	1	; case 1
  1669  000E9C  E101 D739          	bz	l6167
  1670  000EA0  0A03               	xorlw	3	; case 2
  1671  000EA2  E101 D749          	bz	l6183
  1672  000EA6  0A01               	xorlw	1	; case 3
  1673  000EA8  E101 D74E          	bz	l6189
  1674  000EAC  0A07               	xorlw	7	; case 4
  1675  000EAE  E101 D773          	bz	l1250
  1676  000EB2  0A01               	xorlw	1	; case 5
  1677  000EB4  E081               	bz	l6227
  1678  000EB6  0A03               	xorlw	3	; case 6
  1679  000EB8  E0BB               	bz	l1258
  1680  000EBA  0A01               	xorlw	1	; case 7
  1681  000EBC  E0AD               	bz	l6245
  1682  000EBE  0A0F               	xorlw	15	; case 8
  1683  000EC0  E0C0               	bz	l6255
  1684  000EC2  0A01               	xorlw	1	; case 9
  1685  000EC4  E0CF               	bz	l6263
  1686  000EC6  0012               	return		;funcret
  1687  000EC8                     __end_of_motorSIO:
  1688                           	callstack 0
  1689  000EC8                     PL26:
  1690                           	callstack 24
  1691  000EC8  C013  FFD9         	movff	_userPtr,fsr2l
  1692  000ECC  C014  FFDA         	movff	_userPtr+1,fsr2h
  1693  000ED0  50DF               	movf	indf2,w,c
  1694  000ED2  0012               	return	
  1695  000ED4                     __end_ofPL26:
  1696                           	callstack 0
  1697  000ED4                     PL48:
  1698                           	callstack 24
  1699  000ED4  0100               	movlb	0	; () banked
  1700  000ED6  6FB6               	movwf	??_motorSIO& (0+255),b
  1701  000ED8  C0B6  F06B         	movff	??_motorSIO,LcNewString@new_s
  1702  000EDC  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  1703  000EDE  0012               	return	
  1704  000EE0                     __end_ofPL48:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _UnewScore *****************
  1708 ;; Defined at:
  1709 ;;		line 332 in file "Usuaris.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  scoretmp        1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1
  1723 ;;      Params:         0       0       0
  1724 ;;      Locals:         1       0       0
  1725 ;;      Temps:          0       0       0
  1726 ;;      Totals:         1       0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 2
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_motorSIO
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text2
  1738  001BB6                     __ptext2:
  1739                           	callstack 0
  1740  001BB6                     _UnewScore:
  1741                           	callstack 27
  1742                           
  1743                           ;incstack = 0
  1744                           ;UnewScore@scoretmp stored from wreg
  1745  001BB6  6E68               	movwf	UnewScore@scoretmp^0,c
  1746                           
  1747                           ;Usuaris.c: 333:     scoreUsr = scoretmp;
  1748  001BB8  C068  F02E         	movff	UnewScore@scoretmp,_scoreUsr
  1749                           
  1750                           ;Usuaris.c: 334:     do_updateScore = 1;
  1751  001BBC  8478               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1752  001BBE  0012               	return		;funcret
  1753  001BC0                     __end_of_UnewScore:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _motorJoc *****************
  1757 ;; Defined at:
  1758 ;;		line 48 in file "Joc.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1
  1772 ;;      Params:         0       0       0
  1773 ;;      Locals:         0       0       0
  1774 ;;      Temps:          0       2       0
  1775 ;;      Totals:         0       2       0
  1776 ;;Total ram usage:        2 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 5
  1779 ;; This function calls:
  1780 ;;		_HClearNouSegon
  1781 ;;		_HGetTime
  1782 ;;		_HJugant
  1783 ;;		_HNouSegon
  1784 ;;		_HnoJugant
  1785 ;;		_LcGotoXY
  1786 ;;		_LcLliure
  1787 ;;		_LcNewString
  1788 ;;		_SIONovaDireccio
  1789 ;;		_SIONovaTecla
  1790 ;;		_SIOStartGame
  1791 ;;		_SIOcheckKrebut
  1792 ;;		_SIOendGame
  1793 ;;		_conversorJoystick
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text3
  1800  00137C                     __ptext3:
  1801                           	callstack 0
  1802  00137C                     _motorJoc:
  1803                           	callstack 25
  1804                           
  1805                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1806                           
  1807                           ;incstack = 0
  1808  00137C  D047               	goto	l6147
  1809  00137E                     l6095:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1813  00137E  284F               	incf	_usuariJoc^0,w,c
  1814  001380  B4D8               	btfsc	status,2,c
  1815  001382  0012               	return	
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1819  001384  504F               	movf	_usuariJoc^0,w,c
  1820  001386  ECE0  F00D         	call	_SIOStartGame
  1821                           
  1822                           ;Joc.c: 55:     jugantJoc = 1;
  1823  00138A  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1824                           
  1825                           ;Joc.c: 56:     state = 2;
  1826  00138C  0E02               	movlw	2
  1827  00138E  6E1C               	movwf	motorJoc@state^0,c
  1828                           
  1829                           ;Joc.c: 58:   break;
  1830                           
  1831                           ;Joc.c: 57:    }
  1832  001390  0C02               	retlw	2
  1833  001392                     l1136:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;Joc.c: 60:    if (!jugantJoc) {
  1837  001392  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1838  001394  D008               	goto	l6111
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;Joc.c: 61:     usuariJoc = -1;
  1842  001396  684F               	setf	_usuariJoc^0,c
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;Joc.c: 62:     HnoJugant();
  1846  001398  EC32  F00E         	call	_HnoJugant	;wreg free
  1847                           
  1848                           ;Joc.c: 63:     SIOendGame();
  1849  00139C  EC30  F00E         	call	_SIOendGame	;wreg free
  1850                           
  1851                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1852  0013A0  968A               	bcf	138,3,c	;volatile
  1853                           
  1854                           ;Joc.c: 65:     state = 0;
  1855  0013A2  6A1C               	clrf	motorJoc@state^0,c
  1856                           
  1857                           ;Joc.c: 66:    }
  1858  0013A4  0012               	return	
  1859  0013A6                     l6111:
  1860                           
  1861                           ; BSR set to: 0
  1862  0013A6  BE1D               	btfsc	_direccioJoc^0,7,c
  1863  0013A8  D009               	goto	l6119
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1867  0013AA  501D               	movf	_direccioJoc^0,w,c
  1868  0013AC  ECD1  F00C         	call	_conversorJoystick
  1869  0013B0  ECE8  F00D         	call	_SIONovaDireccio
  1870                           
  1871                           ;Joc.c: 69:     direccioJoc = -1;
  1872  0013B4  681D               	setf	_direccioJoc^0,c
  1873  0013B6                     l6117:
  1874                           
  1875                           ;Joc.c: 70:     state = 1;
  1876  0013B6  0E01               	movlw	1
  1877  0013B8  6E1C               	movwf	motorJoc@state^0,c
  1878                           
  1879                           ;Joc.c: 71:    }
  1880  0013BA  0C01               	retlw	1
  1881  0013BC                     l6119:
  1882                           
  1883                           ; BSR set to: 0
  1884  0013BC  EC9F  F00D         	call	_HNouSegon	;wreg free
  1885  0013C0  E313               	bnc	l6131
  1886  0013C2  ECD5  F00D         	call	_LcLliure	;wreg free
  1887  0013C6  E310               	bnc	l6131
  1888                           
  1889                           ;Joc.c: 73:     HClearNouSegon();
  1890  0013C8  EC36  F00E         	call	_HClearNouSegon	;wreg free
  1891                           
  1892                           ;Joc.c: 74:     LcGotoXY(0,1);
  1893  0013CC  ECC3  F003         	call	PL34	;call to abstracted procedure
  1894  0013D0  EC67  F00C         	call	_LcGotoXY
  1895                           
  1896                           ;Joc.c: 75:     LcNewString(HGetTime());
  1897  0013D4  EC34  F00E         	call	_HGetTime	;wreg free
  1898  0013D8  0100               	movlb	0	; () banked
  1899  0013DA  6FB6               	movwf	??_motorJoc& (0+255),b
  1900  0013DC  C0B6  F06B         	movff	??_motorJoc,LcNewString@new_s
  1901  0013E0  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  1902  0013E2  ECCF  F00D         	call	_LcNewString	;wreg free
  1903  0013E6  D7E7               	goto	l6117
  1904  0013E8                     l6131:
  1905  0013E8  504E               	movf	_novaTeclaJOC^0,w,c
  1906  0013EA  0A80               	xorlw	128
  1907  0013EC  0F7F               	addlw	-129
  1908  0013EE  A0D8               	btfss	status,0,c
  1909  0013F0  0012               	return	
  1910                           
  1911                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1912  0013F2  504E               	movf	_novaTeclaJOC^0,w,c
  1913  0013F4  0F30               	addlw	48
  1914  0013F6  ECE4  F00D         	call	_SIONovaTecla
  1915                           
  1916                           ;Joc.c: 80:     novaTeclaJOC = -1;
  1917  0013FA  684E               	setf	_novaTeclaJOC^0,c
  1918  0013FC  D7DC               	goto	l6117
  1919  0013FE                     l6139:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  1923  0013FE  EC99  F00D         	call	_SIOcheckKrebut	;wreg free
  1924  001402  A0D8               	btfss	status,0,c
  1925  001404  0012               	return	
  1926                           
  1927                           ;Joc.c: 86:     HJugant();
  1928  001406  EC24  F00E         	call	_HJugant	;wreg free
  1929  00140A  D7D5               	goto	l6117
  1930  00140C                     l6147:
  1931  00140C  501C               	movf	motorJoc@state^0,w,c
  1932  00140E  0100               	movlb	0	; () banked
  1933  001410  6FB6               	movwf	??_motorJoc& (0+255),b
  1934  001412  6BB7               	clrf	(??_motorJoc+1)& (0+255),b
  1935                           
  1936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1937                           ; Switch size 1, requested type "space"
  1938                           ; Number of cases is 1, Range of values is 0 to 0
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943  001414  51B7               	movf	(??_motorJoc+1)& (0+255),w,b
  1944  001416  A4D8               	btfss	status,2,c
  1945  001418  0012               	return	
  1946                           
  1947                           ; BSR set to: 0
  1948                           ; Switch size 1, requested type "space"
  1949                           ; Number of cases is 3, Range of values is 0 to 2
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte           10     6 (average)
  1953                           ;	Chosen strategy is simple_byte
  1954  00141A  51B6               	movf	??_motorJoc& (0+255),w,b
  1955  00141C  E0B0               	bz	l6095
  1956  00141E  0A01               	xorlw	1	; case 1
  1957  001420  E0B8               	bz	l1136
  1958  001422  0A03               	xorlw	3	; case 2
  1959  001424  E0EC               	bz	l6139
  1960  001426  0012               	return		;funcret
  1961  001428                     __end_of_motorJoc:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _conversorJoystick *****************
  1965 ;; Defined at:
  1966 ;;		line 31 in file "Joc.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  direc           1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  direc           1    5[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         1       0       0
  1982 ;;      Temps:          0       0       0
  1983 ;;      Totals:         1       0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_motorJoc
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text4
  1995  0019A2                     __ptext4:
  1996                           	callstack 0
  1997  0019A2                     _conversorJoystick:
  1998                           	callstack 27
  1999                           
  2000                           ;incstack = 0
  2001                           ;conversorJoystick@direc stored from wreg
  2002  0019A2  6E68               	movwf	conversorJoystick@direc^0,c
  2003                           
  2004                           ;Joc.c: 33:     if (direc==2) {
  2005  0019A4  0E02               	movlw	2
  2006  0019A6  1868               	xorwf	conversorJoystick@direc^0,w,c
  2007  0019A8  E101               	bnz	l2317
  2008                           
  2009                           ;Joc.c: 34:         return 'W';
  2010  0019AA  0C57               	retlw	87
  2011  0019AC                     l2317:
  2012                           
  2013                           ;Joc.c: 36:     if (direc==6) {
  2014  0019AC  0E06               	movlw	6
  2015  0019AE  1868               	xorwf	conversorJoystick@direc^0,w,c
  2016  0019B0  E101               	bnz	l2323
  2017                           
  2018                           ;Joc.c: 37:         return 'D';
  2019  0019B2  0C44               	retlw	68
  2020  0019B4                     l2323:
  2021                           
  2022                           ;Joc.c: 39:     if (direc==8) {
  2023  0019B4  0E08               	movlw	8
  2024  0019B6  1868               	xorwf	conversorJoystick@direc^0,w,c
  2025  0019B8  E101               	bnz	l2329
  2026                           
  2027                           ;Joc.c: 40:         return 'S';
  2028  0019BA  0C53               	retlw	83
  2029  0019BC                     l2329:
  2030                           
  2031                           ;Joc.c: 42:     if (direc==4) {
  2032  0019BC  0E04               	movlw	4
  2033  0019BE  1868               	xorwf	conversorJoystick@direc^0,w,c
  2034  0019C0  E101               	bnz	l2335
  2035                           
  2036                           ;Joc.c: 43:         return 'A';
  2037  0019C2  0C41               	retlw	65
  2038  0019C4                     l2335:
  2039                           
  2040                           ;Joc.c: 45:     return 0;
  2041  0019C4  0C00               	retlw	0	;funcret
  2042  0019C6                     __end_of_conversorJoystick:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _SIOendGame *****************
  2046 ;; Defined at:
  2047 ;;		line 23 in file "SIO.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		None
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1
  2061 ;;      Params:         0       0       0
  2062 ;;      Locals:         0       0       0
  2063 ;;      Temps:          0       0       0
  2064 ;;      Totals:         0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 2
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_motorJoc
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text5
  2076  001C60                     __ptext5:
  2077                           	callstack 0
  2078  001C60                     _SIOendGame:
  2079                           	callstack 27
  2080                           
  2081                           ;SIO.c: 24:     jugantSIO = 0;
  2082                           
  2083                           ;incstack = 0
  2084  001C60  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2085  001C62  0012               	return		;funcret
  2086  001C64                     __end_of_SIOendGame:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _SIOcheckKrebut *****************
  2090 ;; Defined at:
  2091 ;;		line 26 in file "SIO.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;		None               void
  2098 ;; Registers used:
  2099 ;;		status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1
  2105 ;;      Params:         0       0       0
  2106 ;;      Locals:         0       0       0
  2107 ;;      Temps:          0       0       0
  2108 ;;      Totals:         0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 2
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_motorJoc
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text6
  2120  001B32                     __ptext6:
  2121                           	callstack 0
  2122  001B32                     _SIOcheckKrebut:
  2123                           	callstack 27
  2124                           
  2125                           ;SIO.c: 27:     return Krebut;
  2126                           
  2127                           ;incstack = 0
  2128  001B32  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2129  001B34  D002               	goto	l2351
  2130  001B36  90D8               	bcf	status,0,c
  2131  001B38  0012               	return	
  2132  001B3A                     l2351:
  2133  001B3A  80D8               	bsf	status,0,c
  2134  001B3C  0012               	return		;funcret
  2135  001B3E                     __end_of_SIOcheckKrebut:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _SIOStartGame *****************
  2139 ;; Defined at:
  2140 ;;		line 33 in file "SIO.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  usuari          1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  usuari          1    5[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1
  2154 ;;      Params:         0       0       0
  2155 ;;      Locals:         1       0       0
  2156 ;;      Temps:          0       0       0
  2157 ;;      Totals:         1       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 2
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_motorJoc
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text7
  2169  001BC0                     __ptext7:
  2170                           	callstack 0
  2171  001BC0                     _SIOStartGame:
  2172                           	callstack 27
  2173                           
  2174                           ;incstack = 0
  2175                           ;SIOStartGame@usuari stored from wreg
  2176  001BC0  6E68               	movwf	SIOStartGame@usuari^0,c
  2177                           
  2178                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2179  001BC2  C068  F04D         	movff	SIOStartGame@usuari,_usuariActualSIO
  2180  001BC6  0012               	return		;funcret
  2181  001BC8                     __end_of_SIOStartGame:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _SIONovaTecla *****************
  2185 ;; Defined at:
  2186 ;;		line 40 in file "SIO.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  tecla           1    wreg     char 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  tecla           1    5[COMRAM] char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1
  2200 ;;      Params:         0       0       0
  2201 ;;      Locals:         1       0       0
  2202 ;;      Temps:          0       0       0
  2203 ;;      Totals:         1       0       0
  2204 ;;Total ram usage:        1 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 2
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_motorJoc
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text8
  2215  001BC8                     __ptext8:
  2216                           	callstack 0
  2217  001BC8                     _SIONovaTecla:
  2218                           	callstack 27
  2219                           
  2220                           ;incstack = 0
  2221                           ;SIONovaTecla@tecla stored from wreg
  2222  001BC8  6E68               	movwf	SIONovaTecla@tecla^0,c
  2223                           
  2224                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2225  001BCA  C068  F04B         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2226  001BCE  0012               	return		;funcret
  2227  001BD0                     __end_of_SIONovaTecla:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _SIONovaDireccio *****************
  2231 ;; Defined at:
  2232 ;;		line 29 in file "SIO.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  num             1    wreg     unsigned char 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  num             1    5[COMRAM] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1
  2246 ;;      Params:         0       0       0
  2247 ;;      Locals:         1       0       0
  2248 ;;      Temps:          0       0       0
  2249 ;;      Totals:         1       0       0
  2250 ;;Total ram usage:        1 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 2
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_motorJoc
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text9
  2261  001BD0                     __ptext9:
  2262                           	callstack 0
  2263  001BD0                     _SIONovaDireccio:
  2264                           	callstack 27
  2265                           
  2266                           ;incstack = 0
  2267                           ;SIONovaDireccio@num stored from wreg
  2268  001BD0  6E68               	movwf	SIONovaDireccio@num^0,c
  2269                           
  2270                           ;SIO.c: 30:     direccioSIO = num;
  2271  001BD2  C068  F04C         	movff	SIONovaDireccio@num,_direccioSIO
  2272  001BD6  0012               	return		;funcret
  2273  001BD8                     __end_of_SIONovaDireccio:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _HnoJugant *****************
  2277 ;; Defined at:
  2278 ;;		line 34 in file "Hora.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		None
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1
  2292 ;;      Params:         0       0       0
  2293 ;;      Locals:         0       0       0
  2294 ;;      Temps:          0       0       0
  2295 ;;      Totals:         0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 2
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_motorJoc
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text10
  2307  001C64                     __ptext10:
  2308                           	callstack 0
  2309  001C64                     _HnoJugant:
  2310                           	callstack 27
  2311                           
  2312                           ;Hora.c: 35:     jugant = 0;
  2313                           
  2314                           ;incstack = 0
  2315  001C64  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2316  001C66  0012               	return		;funcret
  2317  001C68                     __end_of_HnoJugant:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _HNouSegon *****************
  2321 ;; Defined at:
  2322 ;;		line 22 in file "Hora.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1
  2336 ;;      Params:         0       0       0
  2337 ;;      Locals:         0       0       0
  2338 ;;      Temps:          0       0       0
  2339 ;;      Totals:         0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_motorJoc
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text11
  2351  001B3E                     __ptext11:
  2352                           	callstack 0
  2353  001B3E                     _HNouSegon:
  2354                           	callstack 27
  2355                           
  2356                           ;Hora.c: 23:     return nouSegon;
  2357                           
  2358                           ;incstack = 0
  2359  001B3E  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2360  001B40  D002               	goto	l2297
  2361  001B42  90D8               	bcf	status,0,c
  2362  001B44  0012               	return	
  2363  001B46                     l2297:
  2364  001B46  80D8               	bsf	status,0,c
  2365  001B48  0012               	return		;funcret
  2366  001B4A                     __end_of_HNouSegon:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _HJugant *****************
  2370 ;; Defined at:
  2371 ;;		line 37 in file "Hora.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		None
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1
  2385 ;;      Params:         0       0       0
  2386 ;;      Locals:         0       0       0
  2387 ;;      Temps:          0       0       0
  2388 ;;      Totals:         0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_motorJoc
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text12
  2400  001C48                     __ptext12:
  2401                           	callstack 0
  2402  001C48                     _HJugant:
  2403                           	callstack 27
  2404                           
  2405                           ;Hora.c: 38:     jugant = 1;
  2406                           
  2407                           ;incstack = 0
  2408  001C48  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2409                           
  2410                           ;Hora.c: 39:     tempsAcabat = 0;
  2411  001C4A  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2412  001C4C  0012               	return		;funcret
  2413  001C4E                     __end_of_HJugant:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _HGetTime *****************
  2417 ;; Defined at:
  2418 ;;		line 30 in file "Hora.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      PTR unsigned char 
  2425 ;; Registers used:
  2426 ;;		wreg
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1
  2432 ;;      Params:         2       0       0
  2433 ;;      Locals:         0       0       0
  2434 ;;      Temps:          0       0       0
  2435 ;;      Totals:         2       0       0
  2436 ;;Total ram usage:        2 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_motorJoc
  2443 ;;		_motorSIO
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text13
  2448  001C68                     __ptext13:
  2449                           	callstack 0
  2450  001C68                     _HGetTime:
  2451                           	callstack 27
  2452                           
  2453                           ;Hora.c: 31:     return hora;
  2454                           
  2455                           ;incstack = 0
  2456  001C68  0E5A               	movlw	_hora& (0+255)
  2457  001C6A  0012               	return		;funcret
  2458  001C6C                     __end_of_HGetTime:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _HClearNouSegon *****************
  2462 ;; Defined at:
  2463 ;;		line 26 in file "Hora.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		None
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1
  2477 ;;      Params:         0       0       0
  2478 ;;      Locals:         0       0       0
  2479 ;;      Temps:          0       0       0
  2480 ;;      Totals:         0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_motorJoc
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text14
  2492  001C6C                     __ptext14:
  2493                           	callstack 0
  2494  001C6C                     _HClearNouSegon:
  2495                           	callstack 27
  2496                           
  2497                           ;Hora.c: 27:     nouSegon = 0;
  2498                           
  2499                           ;incstack = 0
  2500  001C6C  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2501  001C6E  0012               	return		;funcret
  2502  001C70                     __end_of_HClearNouSegon:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _motorHora *****************
  2506 ;; Defined at:
  2507 ;;		line 45 in file "Hora.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1
  2521 ;;      Params:         0       0       0
  2522 ;;      Locals:         0       0       0
  2523 ;;      Temps:          2       0       0
  2524 ;;      Totals:         2       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 3
  2528 ;; This function calls:
  2529 ;;		_TiGetTics
  2530 ;;		_TiResetTics
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text15
  2537  001428                     __ptext15:
  2538                           	callstack 0
  2539  001428                     _motorHora:
  2540                           	callstack 27
  2541                           
  2542                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2543                           
  2544                           ;incstack = 0
  2545  001428  D036               	goto	l5007
  2546  00142A                     l4961:
  2547                           
  2548                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2549  00142A  5020               	movf	_timerHora^0,w,c
  2550  00142C  ECBE  F00C         	call	_TiGetTics
  2551  001430  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  2552  001432  0012               	return	
  2553  001434  EC35  F005         	call	PL70	;call to abstracted procedure
  2554  001438  A0D8               	btfss	status,0,c
  2555  00143A  0012               	return	
  2556                           
  2557                           ;Hora.c: 51:     TiResetTics(timerHora);
  2558  00143C  5020               	movf	_timerHora^0,w,c
  2559  00143E  EC42  F00D         	call	_TiResetTics
  2560                           
  2561                           ;Hora.c: 52:     if(jugant){
  2562  001442  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2563  001444  D026               	goto	l1062
  2564                           
  2565                           ;Hora.c: 53:       nouSegon = 1;
  2566  001446  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2567                           
  2568                           ;Hora.c: 55:      hora[4]--;
  2569  001448  065E               	decf	(_hora+4)^0,f,c
  2570                           
  2571                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2572  00144A  0E2F               	movlw	47
  2573  00144C  185E               	xorwf	(_hora+4)^0,w,c
  2574  00144E  E103               	bnz	l4977
  2575                           
  2576                           ;Hora.c: 57:       hora[4] = '9';
  2577  001450  0E39               	movlw	57
  2578  001452  6E5E               	movwf	(_hora+4)^0,c
  2579                           
  2580                           ;Hora.c: 58:       hora[3]--;
  2581  001454  065D               	decf	(_hora+3)^0,f,c
  2582  001456                     l4977:
  2583                           
  2584                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2585  001456  0E2F               	movlw	47
  2586  001458  185D               	xorwf	(_hora+3)^0,w,c
  2587  00145A  E103               	bnz	l4983
  2588                           
  2589                           ;Hora.c: 62:       hora[3] = '5';
  2590  00145C  0E35               	movlw	53
  2591  00145E  6E5D               	movwf	(_hora+3)^0,c
  2592                           
  2593                           ;Hora.c: 63:       hora[1]--;
  2594  001460  065B               	decf	(_hora+1)^0,f,c
  2595  001462                     l4983:
  2596                           
  2597                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2598  001462  0E2F               	movlw	47
  2599  001464  185B               	xorwf	(_hora+1)^0,w,c
  2600  001466  E103               	bnz	l4989
  2601                           
  2602                           ;Hora.c: 67:       hora[1] = '9';
  2603  001468  0E39               	movlw	57
  2604  00146A  6E5B               	movwf	(_hora+1)^0,c
  2605                           
  2606                           ;Hora.c: 68:       hora[0]--;
  2607  00146C  065A               	decf	_hora^0,f,c
  2608  00146E                     l4989:
  2609                           
  2610                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2611  00146E  0E30               	movlw	48
  2612  001470  185A               	xorwf	_hora^0,w,c
  2613  001472  E10A               	bnz	l4999
  2614  001474  0E30               	movlw	48
  2615  001476  185B               	xorwf	(_hora+1)^0,w,c
  2616  001478  E107               	bnz	l4999
  2617  00147A  0E30               	movlw	48
  2618  00147C  185D               	xorwf	(_hora+3)^0,w,c
  2619  00147E  E104               	bnz	l4999
  2620  001480  0E30               	movlw	48
  2621  001482  185E               	xorwf	(_hora+4)^0,w,c
  2622  001484  E101               	bnz	l4999
  2623                           
  2624                           ;Hora.c: 72:       tempsAcabat = 1;
  2625  001486  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2626  001488                     l4999:
  2627                           
  2628                           ;Hora.c: 75:      segons++;
  2629  001488  2A1F               	incf	_segons^0,f,c
  2630                           
  2631                           ;Hora.c: 76:      if(segons > 59){
  2632  00148A  0E3B               	movlw	59
  2633  00148C  641F               	cpfsgt	_segons^0,c
  2634  00148E  D001               	goto	l1062
  2635                           
  2636                           ;Hora.c: 78:       segons = 0;
  2637  001490  6A1F               	clrf	_segons^0,c
  2638  001492                     l1062:
  2639                           
  2640                           ;Hora.c: 81:     state = 0;
  2641  001492  6A1E               	clrf	motorHora@state^0,c
  2642  001494  0012               	return	
  2643  001496                     l5007:
  2644  001496  501E               	movf	motorHora@state^0,w,c
  2645  001498  6E6F               	movwf	??_motorHora^0,c
  2646  00149A  6A70               	clrf	(??_motorHora+1)^0,c
  2647                           
  2648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2649                           ; Switch size 1, requested type "space"
  2650                           ; Number of cases is 1, Range of values is 0 to 0
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte            4     3 (average)
  2654                           ;	Chosen strategy is simple_byte
  2655  00149C  5070               	movf	(??_motorHora+1)^0,w,c
  2656  00149E  A4D8               	btfss	status,2,c
  2657  0014A0  0012               	return	
  2658                           
  2659                           ; Switch size 1, requested type "space"
  2660                           ; Number of cases is 1, Range of values is 0 to 0
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte            4     3 (average)
  2664                           ;	Chosen strategy is simple_byte
  2665  0014A2  506F               	movf	??_motorHora^0,w,c
  2666  0014A4  E0C2               	bz	l4961
  2667  0014A6  0012               	return		;funcret
  2668  0014A8                     __end_of_motorHora:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _menu *****************
  2672 ;; Defined at:
  2673 ;;		line 40 in file "Menu.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1
  2687 ;;      Params:         0       0       0
  2688 ;;      Locals:         0       0       0
  2689 ;;      Temps:          0       5       0
  2690 ;;      Totals:         0       5       0
  2691 ;;Total ram usage:        5 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 6
  2694 ;; This function calls:
  2695 ;;		_CToAConverteix
  2696 ;;		_CToAHaAcabat
  2697 ;;		_CToAobtenir
  2698 ;;		_GLCDMostraMenu
  2699 ;;		_HActualitzaHora
  2700 ;;		_JJuguem
  2701 ;;		_JendGame
  2702 ;;		_JnovaDireccio
  2703 ;;		_JnovaTecla
  2704 ;;		_LcClear
  2705 ;;		_LcGotoXY
  2706 ;;		_LcLliure
  2707 ;;		_LcNewString
  2708 ;;		_LcPutChar
  2709 ;;		_LcScroll
  2710 ;;		_NoFerMenu
  2711 ;;		_SIOHaAcabatPuntuacions
  2712 ;;		_SMSoff
  2713 ;;		_SMSon
  2714 ;;		_SiFerMenu
  2715 ;;		_TiGetTics
  2716 ;;		_TiResetTics
  2717 ;;		_URegister
  2718 ;;		_UcheckExists
  2719 ;;		_UcheckExistsGetError
  2720 ;;		_UcheckExistsNotFinished
  2721 ;;		_UenviaChar
  2722 ;;		_UenviaPas
  2723 ;;		_UgetNumUsuaris
  2724 ;;		_UgetScore
  2725 ;;		_UgetTop5
  2726 ;;		_UgetUserName
  2727 ;;		_UshowUsersCalculat
  2728 ;;		_calculateShowUsers
  2729 ;;		_checkHoraAcabat
  2730 ;;		_getArrayShowUsers
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text16
  2737  000036                     __ptext16:
  2738                           	callstack 0
  2739  000036                     _menu:
  2740                           	callstack 24
  2741                           
  2742                           ;Menu.c: 41:  static char state = 0;;Menu.c: 43:  switch(state) {
  2743                           
  2744                           ;incstack = 0
  2745  000036  D32B               	goto	l6833
  2746  000038                     l6287:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;Menu.c: 45:    LcClear();
  2750  000038  ECF5  F00C         	call	_LcClear	;wreg free
  2751                           
  2752                           ;Menu.c: 46:    LcNewString("1.LOGIN");
  2753  00003C  0EE9               	movlw	low STR_1
  2754  00003E  6E6B               	movwf	LcNewString@new_s^0,c
  2755  000040  0E1F               	movlw	high STR_1
  2756  000042  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2757  000044  ECCF  F00D         	call	_LcNewString	;wreg free
  2758                           
  2759                           ;Menu.c: 47:    state = 1;
  2760  000048  0E01               	movlw	1
  2761  00004A  6E34               	movwf	menu@state^0,c
  2762                           
  2763                           ;Menu.c: 48:   break;
  2764  00004C  0C01               	retlw	1
  2765  00004E                     l6293:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;Menu.c: 50:    if (LcLliure()) {
  2769  00004E  ECD5  F00D         	call	_LcLliure	;wreg free
  2770  000052  A0D8               	btfss	status,0,c
  2771  000054  0012               	return	
  2772                           
  2773                           ;Menu.c: 51:     LcGotoXY(0,1);
  2774  000056  DB97               	call	PL34	;call to abstracted procedure
  2775  000058  EC67  F00C         	call	_LcGotoXY
  2776                           
  2777                           ;Menu.c: 52:     LcNewString("2.REGISTER");
  2778  00005C  0EC5               	movlw	low STR_2
  2779  00005E  6E6B               	movwf	LcNewString@new_s^0,c
  2780  000060  0E1F               	movlw	high STR_2
  2781  000062  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2782  000064  ECCF  F00D         	call	_LcNewString	;wreg free
  2783                           
  2784                           ;Menu.c: 53:     NovaTecla = -1;
  2785  000068  6855               	setf	_NovaTecla^0,c
  2786                           
  2787                           ;Menu.c: 54:     state = 2;
  2788  00006A  0E02               	movlw	2
  2789  00006C  6E34               	movwf	menu@state^0,c
  2790                           
  2791                           ;Menu.c: 56:   break;
  2792                           
  2793                           ;Menu.c: 55:    }
  2794  00006E  0C02               	retlw	2
  2795  000070                     l6303:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;Menu.c: 58:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2799  000070  0455               	decf	_NovaTecla^0,w,c
  2800  000072  E108               	bnz	l6311
  2801                           
  2802                           ; BSR set to: 0
  2803  000074  EC3A  F00E         	call	_UgetNumUsuaris	;wreg free
  2804  000078  0900               	iorlw	0
  2805  00007A  E004               	bz	l6311
  2806                           
  2807                           ;Menu.c: 59:     loginNOTRegister = 1;
  2808  00007C  8C78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2809  00007E                     l6309:
  2810                           
  2811                           ;Menu.c: 60:     state = 3;
  2812  00007E  0E03               	movlw	3
  2813  000080  6E34               	movwf	menu@state^0,c
  2814                           
  2815                           ;Menu.c: 61:    }
  2816  000082  0C03               	retlw	3
  2817  000084                     l6311:
  2818  000084  0E02               	movlw	2
  2819  000086  1855               	xorwf	_NovaTecla^0,w,c
  2820  000088  A4D8               	btfss	status,2,c
  2821  00008A  0012               	return	
  2822                           
  2823                           ;Menu.c: 63:     loginNOTRegister = 0;
  2824  00008C  9C78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2825  00008E  D7F7               	goto	l6309
  2826  000090                     l503:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;Menu.c: 68:    NovaTecla = -1;
  2830  000090  6855               	setf	_NovaTecla^0,c
  2831                           
  2832                           ;Menu.c: 69:    novaLletra = -1;
  2833  000092  6854               	setf	_novaLletra^0,c
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;Menu.c: 70:    LcClear();
  2837  000094  ECF5  F00C         	call	_LcClear	;wreg free
  2838                           
  2839                           ;Menu.c: 71:    LcNewString("USER: ");
  2840  000098  0EF8               	movlw	low STR_3
  2841  00009A  6E6B               	movwf	LcNewString@new_s^0,c
  2842  00009C  0E1F               	movlw	high STR_3
  2843  00009E  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2844  0000A0  ECCF  F00D         	call	_LcNewString	;wreg free
  2845                           
  2846                           ;Menu.c: 72:    state = 4;
  2847  0000A4  0E04               	movlw	4
  2848  0000A6  6E34               	movwf	menu@state^0,c
  2849                           
  2850                           ;Menu.c: 73:   break;
  2851  0000A8  0C04               	retlw	4
  2852  0000AA                     l6323:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;Menu.c: 75:    if (LcLliure()) {
  2856  0000AA  ECD5  F00D         	call	_LcLliure	;wreg free
  2857  0000AE  A0D8               	btfss	status,0,c
  2858  0000B0  0012               	return	
  2859                           
  2860                           ;Menu.c: 76:     LcGotoXY(0,1);
  2861  0000B2  DB69               	call	PL34	;call to abstracted procedure
  2862  0000B4  EC67  F00C         	call	_LcGotoXY
  2863                           
  2864                           ;Menu.c: 77:     LcNewString("PSWD: ");
  2865  0000B8  0EF1               	movlw	low STR_4
  2866  0000BA  6E6B               	movwf	LcNewString@new_s^0,c
  2867  0000BC  0E1F               	movlw	high STR_4
  2868  0000BE  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2869  0000C0  ECCF  F00D         	call	_LcNewString	;wreg free
  2870                           
  2871                           ;Menu.c: 78:     state = 5;
  2872  0000C4  0E05               	movlw	5
  2873  0000C6  6E34               	movwf	menu@state^0,c
  2874  0000C8  0C05               	retlw	5
  2875  0000CA                     l6331:
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;Menu.c: 82:    if (LcLliure()) {
  2879  0000CA  ECD5  F00D         	call	_LcLliure	;wreg free
  2880  0000CE  A0D8               	btfss	status,0,c
  2881  0000D0  0012               	return	
  2882                           
  2883                           ;Menu.c: 83:     LcGotoXY(6,0);
  2884  0000D2  0E00               	movlw	0
  2885  0000D4  6E70               	movwf	LcGotoXY@Row^0,c
  2886  0000D6  0E06               	movlw	6
  2887  0000D8  EC67  F00C         	call	_LcGotoXY
  2888                           
  2889                           ;Menu.c: 84:     SMSon();
  2890  0000DC  EC27  F00E         	call	_SMSon	;wreg free
  2891                           
  2892                           ;Menu.c: 85:     tmp =0;
  2893  0000E0  6A39               	clrf	_tmp^0,c
  2894  0000E2                     l6339:
  2895                           
  2896                           ;Menu.c: 86:     state = 6;
  2897  0000E2  0E06               	movlw	6
  2898  0000E4  6E34               	movwf	menu@state^0,c
  2899  0000E6  0C06               	retlw	6
  2900  0000E8                     l6341:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;Menu.c: 90:    if (novaLletra > 31 && NovaTecla != 10) {
  2904  0000E8  5054               	movf	_novaLletra^0,w,c
  2905  0000EA  0A80               	xorlw	128
  2906  0000EC  0F60               	addlw	-160
  2907  0000EE  E30E               	bnc	l6351
  2908                           
  2909                           ; BSR set to: 0
  2910  0000F0  0E0A               	movlw	10
  2911  0000F2  1855               	xorwf	_NovaTecla^0,w,c
  2912  0000F4  E00B               	bz	l6351
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;Menu.c: 91:     LcPutChar(novaLletra);
  2916  0000F6  5054               	movf	_novaLletra^0,w,c
  2917  0000F8  EC90  F00B         	call	_LcPutChar
  2918                           
  2919                           ;Menu.c: 92:     UenviaChar(novaLletra,tmp);
  2920  0000FC  C039  F068         	movff	_tmp,UenviaChar@pos
  2921  000100  5054               	movf	_novaLletra^0,w,c
  2922  000102  EC83  F00D         	call	_UenviaChar
  2923  000106                     l6349:
  2924                           
  2925                           ;Menu.c: 93:     state = 7;
  2926  000106  0E07               	movlw	7
  2927  000108  6E34               	movwf	menu@state^0,c
  2928                           
  2929                           ;Menu.c: 94:    }
  2930  00010A  0C07               	retlw	7
  2931  00010C                     l6351:
  2932                           
  2933                           ; BSR set to: 0
  2934  00010C  0E0B               	movlw	11
  2935  00010E  1855               	xorwf	_NovaTecla^0,w,c
  2936  000110  E0FA               	bz	l6349
  2937  000112  0012               	return	
  2938  000114                     l6355:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;Menu.c: 100:    if (tmp != 7 && NovaTecla != 11) {
  2942  000114  0E07               	movlw	7
  2943  000116  1839               	xorwf	_tmp^0,w,c
  2944  000118  E005               	bz	l6367
  2945                           
  2946                           ; BSR set to: 0
  2947  00011A  0E0B               	movlw	11
  2948  00011C  1855               	xorwf	_NovaTecla^0,w,c
  2949  00011E  E002               	bz	l6367
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;Menu.c: 101:     tmp++;
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;Menu.c: 102:     NovaTecla = -1;
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;Menu.c: 103:     novaLletra = -1;
  2959  000120  DB4A               	call	PL82	;call to abstracted procedure
  2960  000122  D7DF               	goto	l6339
  2961  000124                     l6367:
  2962                           
  2963                           ; BSR set to: 0
  2964  000124  0E07               	movlw	7
  2965  000126  1839               	xorwf	_tmp^0,w,c
  2966  000128  E004               	bz	u7260
  2967                           
  2968                           ; BSR set to: 0
  2969  00012A  0E0B               	movlw	11
  2970  00012C  1855               	xorwf	_NovaTecla^0,w,c
  2971  00012E  A4D8               	btfss	status,2,c
  2972  000130  0012               	return	
  2973  000132                     u7260:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;Menu.c: 107:     LcGotoXY(6,1);
  2977  000132  0E01               	movlw	1
  2978  000134  6E70               	movwf	LcGotoXY@Row^0,c
  2979  000136  0E06               	movlw	6
  2980  000138  EC67  F00C         	call	_LcGotoXY
  2981                           
  2982                           ;Menu.c: 108:     UenviaChar('\0',tmp);
  2983  00013C  C039  F068         	movff	_tmp,UenviaChar@pos
  2984  000140  0E00               	movlw	0
  2985  000142  EC83  F00D         	call	_UenviaChar
  2986                           
  2987                           ;Menu.c: 109:     NovaTecla = -1;
  2988                           
  2989                           ;Menu.c: 110:     novaLletra = -1;
  2990                           
  2991                           ;Menu.c: 111:     tmp = 0;
  2992  000146  DB33               	call	PL80	;call to abstracted procedure
  2993  000148                     l6381:
  2994                           
  2995                           ;Menu.c: 112:     state = 8;
  2996  000148  0E08               	movlw	8
  2997  00014A  6E34               	movwf	menu@state^0,c
  2998  00014C  0C08               	retlw	8
  2999  00014E                     l6383:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;Menu.c: 116:    if (novaLletra > 31 && NovaTecla != 10) {
  3003  00014E  5054               	movf	_novaLletra^0,w,c
  3004  000150  0A80               	xorlw	128
  3005  000152  0F60               	addlw	-160
  3006  000154  E30E               	bnc	l6393
  3007                           
  3008                           ; BSR set to: 0
  3009  000156  0E0A               	movlw	10
  3010  000158  1855               	xorwf	_NovaTecla^0,w,c
  3011  00015A  E00B               	bz	l6393
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;Menu.c: 117:     LcPutChar(novaLletra);
  3015  00015C  5054               	movf	_novaLletra^0,w,c
  3016  00015E  EC90  F00B         	call	_LcPutChar
  3017                           
  3018                           ;Menu.c: 118:     UenviaPas(novaLletra,tmp);
  3019  000162  C039  F068         	movff	_tmp,UenviaPas@pos
  3020  000166  5054               	movf	_novaLletra^0,w,c
  3021  000168  EC7B  F00D         	call	_UenviaPas
  3022  00016C                     l6391:
  3023                           
  3024                           ;Menu.c: 119:     state = 9;
  3025  00016C  0E09               	movlw	9
  3026  00016E  6E34               	movwf	menu@state^0,c
  3027                           
  3028                           ;Menu.c: 120:    }
  3029  000170  0C09               	retlw	9
  3030  000172                     l6393:
  3031                           
  3032                           ; BSR set to: 0
  3033  000172  0E0B               	movlw	11
  3034  000174  1855               	xorwf	_NovaTecla^0,w,c
  3035  000176  E0FA               	bz	l6391
  3036  000178  0012               	return	
  3037  00017A                     l6397:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;Menu.c: 126:    if (tmp != 7 && NovaTecla != 11) {
  3041  00017A  0E07               	movlw	7
  3042  00017C  1839               	xorwf	_tmp^0,w,c
  3043  00017E  E005               	bz	l6409
  3044                           
  3045                           ; BSR set to: 0
  3046  000180  0E0B               	movlw	11
  3047  000182  1855               	xorwf	_NovaTecla^0,w,c
  3048  000184  E002               	bz	l6409
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;Menu.c: 127:     tmp++;
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;Menu.c: 128:     NovaTecla = -1;
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;Menu.c: 129:     novaLletra = -1;
  3058  000186  DB17               	call	PL82	;call to abstracted procedure
  3059  000188  D7DF               	goto	l6381
  3060  00018A                     l6409:
  3061                           
  3062                           ; BSR set to: 0
  3063  00018A  0E07               	movlw	7
  3064  00018C  1839               	xorwf	_tmp^0,w,c
  3065  00018E  E004               	bz	u7330
  3066                           
  3067                           ; BSR set to: 0
  3068  000190  0E0B               	movlw	11
  3069  000192  1855               	xorwf	_NovaTecla^0,w,c
  3070  000194  A4D8               	btfss	status,2,c
  3071  000196  0012               	return	
  3072  000198                     u7330:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;Menu.c: 133:     UenviaPas('\0',tmp);
  3076  000198  C039  F068         	movff	_tmp,UenviaPas@pos
  3077  00019C  0E00               	movlw	0
  3078  00019E  EC7B  F00D         	call	_UenviaPas
  3079                           
  3080                           ;Menu.c: 134:     NovaTecla = -1;
  3081                           
  3082                           ;Menu.c: 135:     novaLletra = -1;
  3083                           
  3084                           ;Menu.c: 136:     tmp = 0;
  3085  0001A2  DB05               	call	PL80	;call to abstracted procedure
  3086                           
  3087                           ;Menu.c: 137:     UcheckExists();
  3088  0001A4  EC3E  F00E         	call	_UcheckExists	;wreg free
  3089                           
  3090                           ;Menu.c: 138:     SMSoff();
  3091  0001A8  EC2A  F00E         	call	_SMSoff	;wreg free
  3092                           
  3093                           ;Menu.c: 139:     state = 10;
  3094  0001AC  0E0A               	movlw	10
  3095  0001AE  6E34               	movwf	menu@state^0,c
  3096  0001B0  0C0A               	retlw	10
  3097  0001B2                     l6427:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;Menu.c: 143:    if (!UcheckExistsNotFinished()) {
  3101  0001B2  ECBD  F00D         	call	_UcheckExistsNotFinished	;wreg free
  3102  0001B6  B0D8               	btfsc	status,0,c
  3103  0001B8  0012               	return	
  3104                           
  3105                           ;Menu.c: 144:     indexUsuari = UcheckExistsGetError();
  3106  0001BA  EC3C  F00E         	call	_UcheckExistsGetError	;wreg free
  3107  0001BE  6E36               	movwf	_indexUsuari^0,c
  3108                           
  3109                           ;Menu.c: 145:     state = 11;
  3110  0001C0  0E0B               	movlw	11
  3111  0001C2  6E34               	movwf	menu@state^0,c
  3112  0001C4  0C0B               	retlw	11
  3113  0001C6                     l530:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;Menu.c: 149:    if (!loginNOTRegister && indexUsuari == -1) {
  3117  0001C6  BC78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3118  0001C8  D006               	goto	l531
  3119                           
  3120                           ; BSR set to: 0
  3121  0001CA  2836               	incf	_indexUsuari^0,w,c
  3122  0001CC  E104               	bnz	l531
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;Menu.c: 150:     URegister();
  3126  0001CE  EC40  F00E         	call	_URegister	;wreg free
  3127  0001D2                     l6437:
  3128                           
  3129                           ;Menu.c: 151:     state = 0;
  3130  0001D2  6A34               	clrf	menu@state^0,c
  3131                           
  3132                           ;Menu.c: 152:    }
  3133  0001D4  0012               	return	
  3134  0001D6                     l531:
  3135                           
  3136                           ; BSR set to: 0
  3137  0001D6  BC78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3138                           
  3139                           ; BSR set to: 0
  3140  0001D8  BE36               	btfsc	_indexUsuari^0,7,c
  3141  0001DA  D003               	goto	l533
  3142  0001DC                     u7380:
  3143                           
  3144                           ;Menu.c: 154:     state = 12;
  3145  0001DC  0E0C               	movlw	12
  3146  0001DE  6E34               	movwf	menu@state^0,c
  3147                           
  3148                           ;Menu.c: 155:    }
  3149  0001E0  0C0C               	retlw	12
  3150  0001E2                     l533:
  3151                           
  3152                           ; BSR set to: 0
  3153  0001E2  AC78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3154  0001E4  D002               	goto	u7400
  3155                           
  3156                           ; BSR set to: 0
  3157  0001E6  2836               	incf	_indexUsuari^0,w,c
  3158  0001E8  E0F4               	bz	l6437
  3159  0001EA                     u7400:
  3160                           
  3161                           ; BSR set to: 0
  3162  0001EA  AC78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3163                           
  3164                           ; BSR set to: 0
  3165  0001EC  BE36               	btfsc	_indexUsuari^0,7,c
  3166  0001EE  D7F6               	goto	u7380
  3167  0001F0  D7F0               	goto	l6437
  3168  0001F2                     l6449:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;Menu.c: 164:    LcClear();
  3172  0001F2  ECF5  F00C         	call	_LcClear	;wreg free
  3173                           
  3174                           ;Menu.c: 165:    SiFerMenu();
  3175  0001F6  EC42  F00E         	call	_SiFerMenu	;wreg free
  3176                           
  3177                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3178  0001FA  5037               	movf	_menuDalt^0,w,c
  3179  0001FC  ECC3  F00D         	call	_GLCDMostraMenu
  3180                           
  3181                           ;Menu.c: 167:    novaDireccio = -1;
  3182  000200  6853               	setf	_novaDireccio^0,c
  3183                           
  3184                           ;Menu.c: 168:    NovaTecla = -1;
  3185  000202  6855               	setf	_NovaTecla^0,c
  3186                           
  3187                           ;Menu.c: 169:    state = 13;
  3188  000204  0E0D               	movlw	13
  3189  000206  6E34               	movwf	menu@state^0,c
  3190                           
  3191                           ;Menu.c: 170:   break;
  3192  000208  0C0D               	retlw	13
  3193  00020A                     l6461:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3197  00020A  0E08               	movlw	8
  3198  00020C  1853               	xorwf	_novaDireccio^0,w,c
  3199  00020E  E105               	bnz	l6469
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3203  000210  0E04               	movlw	4
  3204  000212  6037               	cpfslt	_menuDalt^0,c
  3205  000214  D7E3               	goto	u7380
  3206                           
  3207                           ; BSR set to: 0
  3208  000216  2A37               	incf	_menuDalt^0,f,c
  3209  000218  D7E1               	goto	u7380
  3210  00021A                     l6469:
  3211                           
  3212                           ; BSR set to: 0
  3213  00021A  0E02               	movlw	2
  3214  00021C  1853               	xorwf	_novaDireccio^0,w,c
  3215  00021E  E104               	bnz	l6477
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3219  000220  5037               	movf	_menuDalt^0,w,c
  3220  000222  E0DC               	bz	u7380
  3221                           
  3222                           ; BSR set to: 0
  3223  000224  0637               	decf	_menuDalt^0,f,c
  3224  000226  D7DA               	goto	u7380
  3225  000228                     l6477:
  3226                           
  3227                           ; BSR set to: 0
  3228  000228  0E0B               	movlw	11
  3229  00022A  1855               	xorwf	_NovaTecla^0,w,c
  3230  00022C  E110               	bnz	l6489
  3231                           
  3232                           ; BSR set to: 0
  3233  00022E  0E03               	movlw	3
  3234  000230  1837               	xorwf	_menuDalt^0,w,c
  3235  000232  E10D               	bnz	l6489
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;Menu.c: 181:     NoFerMenu();
  3239  000234  EC46  F00E         	call	_NoFerMenu	;wreg free
  3240                           
  3241                           ;Menu.c: 182:     LcClear();
  3242  000238  ECF5  F00C         	call	_LcClear	;wreg free
  3243                           
  3244                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3245  00023C  0ED0               	movlw	low STR_5
  3246  00023E  6E6B               	movwf	LcNewString@new_s^0,c
  3247  000240  0E1F               	movlw	high STR_5
  3248  000242  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3249  000244  ECCF  F00D         	call	_LcNewString	;wreg free
  3250                           
  3251                           ;Menu.c: 184:     state = 14;
  3252  000248  0E0E               	movlw	14
  3253  00024A  6E34               	movwf	menu@state^0,c
  3254                           
  3255                           ;Menu.c: 185:    }
  3256  00024C  0C0E               	retlw	14
  3257  00024E                     l6489:
  3258                           
  3259                           ; BSR set to: 0
  3260  00024E  0E0B               	movlw	11
  3261  000250  1855               	xorwf	_NovaTecla^0,w,c
  3262  000252  E110               	bnz	l6503
  3263                           
  3264                           ; BSR set to: 0
  3265  000254  0437               	decf	_menuDalt^0,w,c
  3266  000256  E10E               	bnz	l6503
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;Menu.c: 187:     LcClear();
  3270  000258  ECF5  F00C         	call	_LcClear	;wreg free
  3271                           
  3272                           ;Menu.c: 188:     NoFerMenu();
  3273  00025C  EC46  F00E         	call	_NoFerMenu	;wreg free
  3274                           
  3275                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3276  000260  0EAC               	movlw	low STR_6
  3277  000262  6E6B               	movwf	LcNewString@new_s^0,c
  3278  000264  0E1F               	movlw	high STR_6
  3279  000266  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3280  000268  ECCF  F00D         	call	_LcNewString	;wreg free
  3281                           
  3282                           ;Menu.c: 190:     NovaTecla = -1;
  3283  00026C  6855               	setf	_NovaTecla^0,c
  3284                           
  3285                           ;Menu.c: 191:     state = 16;
  3286  00026E  0E10               	movlw	16
  3287  000270  6E34               	movwf	menu@state^0,c
  3288                           
  3289                           ;Menu.c: 192:    }
  3290  000272  0C10               	retlw	16
  3291  000274                     l6503:
  3292                           
  3293                           ; BSR set to: 0
  3294  000274  5037               	movf	_menuDalt^0,w,c
  3295  000276  E114               	bnz	l6519
  3296                           
  3297                           ; BSR set to: 0
  3298  000278  0E0B               	movlw	11
  3299  00027A  1855               	xorwf	_NovaTecla^0,w,c
  3300  00027C  E111               	bnz	l6519
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;Menu.c: 194:     NoFerMenu();
  3304  00027E  EC46  F00E         	call	_NoFerMenu	;wreg free
  3305                           
  3306                           ;Menu.c: 195:     NovaTecla = -1;
  3307  000282  6855               	setf	_NovaTecla^0,c
  3308                           
  3309                           ;Menu.c: 196:     LcClear();
  3310  000284  ECF5  F00C         	call	_LcClear	;wreg free
  3311                           
  3312                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3313  000288  0E9C               	movlw	low STR_7
  3314  00028A  6E6B               	movwf	LcNewString@new_s^0,c
  3315  00028C  0E1F               	movlw	high STR_7
  3316  00028E  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3317  000290  ECCF  F00D         	call	_LcNewString	;wreg free
  3318                           
  3319                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3320  000294  5036               	movf	_indexUsuari^0,w,c
  3321  000296  ECF4  F00D         	call	_JJuguem
  3322  00029A                     l6517:
  3323                           
  3324                           ;Menu.c: 199:     state = 21;
  3325  00029A  0E15               	movlw	21
  3326  00029C  6E34               	movwf	menu@state^0,c
  3327                           
  3328                           ;Menu.c: 200:    }
  3329  00029E  0C15               	retlw	21
  3330  0002A0                     l6519:
  3331                           
  3332                           ; BSR set to: 0
  3333  0002A0  0E0B               	movlw	11
  3334  0002A2  1855               	xorwf	_NovaTecla^0,w,c
  3335  0002A4  E10E               	bnz	l6535
  3336                           
  3337                           ; BSR set to: 0
  3338  0002A6  0E04               	movlw	4
  3339  0002A8  1837               	xorwf	_menuDalt^0,w,c
  3340  0002AA  E10B               	bnz	l6535
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;Menu.c: 202:     NoFerMenu();
  3344  0002AC  EC46  F00E         	call	_NoFerMenu	;wreg free
  3345                           
  3346                           ;Menu.c: 203:     LcClear();
  3347  0002B0  ECF5  F00C         	call	_LcClear	;wreg free
  3348                           
  3349                           ;Menu.c: 204:     menuDalt = 0;
  3350  0002B4  6A37               	clrf	_menuDalt^0,c
  3351                           
  3352                           ;Menu.c: 205:     NovaTecla = -1;
  3353  0002B6  6855               	setf	_NovaTecla^0,c
  3354                           
  3355                           ;Menu.c: 206:     calculateShowUsers();
  3356  0002B8  EC38  F00E         	call	_calculateShowUsers	;wreg free
  3357                           
  3358                           ;Menu.c: 207:     state = 30;
  3359  0002BC  0E1E               	movlw	30
  3360  0002BE  6E34               	movwf	menu@state^0,c
  3361                           
  3362                           ;Menu.c: 208:    }
  3363  0002C0  0C1E               	retlw	30
  3364  0002C2                     l6535:
  3365                           
  3366                           ; BSR set to: 0
  3367  0002C2  0E0B               	movlw	11
  3368  0002C4  1855               	xorwf	_NovaTecla^0,w,c
  3369  0002C6  A4D8               	btfss	status,2,c
  3370  0002C8  0012               	return	
  3371                           
  3372                           ; BSR set to: 0
  3373  0002CA  0E02               	movlw	2
  3374  0002CC  1837               	xorwf	_menuDalt^0,w,c
  3375  0002CE  A4D8               	btfss	status,2,c
  3376  0002D0  0012               	return	
  3377                           
  3378                           ; BSR set to: 0
  3379  0002D2  0E00               	movlw	0
  3380  0002D4  ECB1  F00D         	call	_UgetTop5
  3381  0002D8  0AFF               	xorlw	255
  3382  0002DA  B4D8               	btfsc	status,2,c
  3383  0002DC  0012               	return	
  3384                           
  3385                           ;Menu.c: 210:     NoFerMenu();
  3386  0002DE  EC46  F00E         	call	_NoFerMenu	;wreg free
  3387                           
  3388                           ;Menu.c: 211:     LcClear();
  3389  0002E2  ECF5  F00C         	call	_LcClear	;wreg free
  3390                           
  3391                           ;Menu.c: 212:     menuDalt = 0;
  3392  0002E6  6A37               	clrf	_menuDalt^0,c
  3393                           
  3394                           ;Menu.c: 213:     NovaTecla = -1;
  3395  0002E8  6855               	setf	_NovaTecla^0,c
  3396  0002EA                     l6549:
  3397                           
  3398                           ;Menu.c: 214:     state = 31;
  3399  0002EA  0E1F               	movlw	31
  3400  0002EC  6E34               	movwf	menu@state^0,c
  3401  0002EE  0C1F               	retlw	31
  3402  0002F0                     l6551:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;Menu.c: 218:    if (LcLliure()) {
  3406  0002F0  ECD5  F00D         	call	_LcLliure	;wreg free
  3407  0002F4  A0D8               	btfss	status,0,c
  3408  0002F6  0012               	return	
  3409                           
  3410                           ;Menu.c: 219:     LcNewString(UgetUserName(indexUsuari));
  3411  0002F8  5036               	movf	_indexUsuari^0,w,c
  3412  0002FA  EC68  F00D         	call	_UgetUserName
  3413  0002FE  DA46               	call	PL42	;call to abstracted procedure
  3414  000300  ECCF  F00D         	call	_LcNewString	;wreg free
  3415                           
  3416                           ;Menu.c: 220:     TiResetTics(timerMenu);
  3417  000304  5038               	movf	_timerMenu^0,w,c
  3418  000306  EC42  F00D         	call	_TiResetTics
  3419                           
  3420                           ;Menu.c: 221:     state = 15;
  3421  00030A  0E0F               	movlw	15
  3422  00030C  6E34               	movwf	menu@state^0,c
  3423  00030E  0C0F               	retlw	15
  3424  000310                     l6559:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;Menu.c: 225:    if (TiGetTics(timerMenu) > 2410) {
  3428  000310  5038               	movf	_timerMenu^0,w,c
  3429  000312  ECBE  F00C         	call	_TiGetTics
  3430  000316  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  3431  000318  0012               	return	
  3432  00031A  0E6B               	movlw	107
  3433  00031C  5C68               	subwf	?_TiGetTics^0,w,c
  3434  00031E  0E09               	movlw	9
  3435  000320  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  3436  000322  E301 D756          	bc	l6437
  3437  000326  0012               	return	
  3438  000328                     l6563:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;Menu.c: 230:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3442  000328  ECD5  F00D         	call	_LcLliure	;wreg free
  3443  00032C  E347               	bnc	l6629
  3444  00032E  BE55               	btfsc	_NovaTecla^0,7,c
  3445  000330  D045               	goto	l6629
  3446  000332  5055               	movf	_NovaTecla^0,w,c
  3447  000334  0A80               	xorlw	128
  3448  000336  0F76               	addlw	-138
  3449  000338  E241               	bc	l6629
  3450                           
  3451                           ;Menu.c: 231:     LcGotoXY(0,1);
  3452  00033A  DA25               	call	PL34	;call to abstracted procedure
  3453  00033C  EC67  F00C         	call	_LcGotoXY
  3454                           
  3455                           ;Menu.c: 232:     horaTmp[0] = NovaTecla+48;
  3456  000340  5055               	movf	_NovaTecla^0,w,c
  3457  000342  0F30               	addlw	48
  3458  000344  6E46               	movwf	_horaTmp^0,c
  3459                           
  3460                           ;Menu.c: 233:     LcPutChar(horaTmp[0]);
  3461  000346  5046               	movf	_horaTmp^0,w,c
  3462  000348  EC90  F00B         	call	_LcPutChar
  3463                           
  3464                           ;Menu.c: 234:     NovaTecla = -1;
  3465  00034C  6855               	setf	_NovaTecla^0,c
  3466                           
  3467                           ;Menu.c: 235:     state = 17;
  3468  00034E  0E11               	movlw	17
  3469  000350                     L1:
  3470  000350  6E34               	movwf	menu@state^0,c
  3471                           
  3472                           ;Menu.c: 236:    }
  3473  000352  0012               	return	
  3474  000354                     L2:
  3475  000354  1855               	xorwf	_NovaTecla^0,w,c
  3476  000356  E101 D741          	bz	u7380
  3477  00035A  0012               	return	
  3478  00035C                     l6583:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;Menu.c: 242:    if (NovaTecla > -1 && NovaTecla < 10) {
  3482  00035C  BE55               	btfsc	_NovaTecla^0,7,c
  3483  00035E  D02E               	goto	l6629
  3484                           
  3485                           ; BSR set to: 0
  3486  000360  5055               	movf	_NovaTecla^0,w,c
  3487  000362  0A80               	xorlw	128
  3488  000364  0F76               	addlw	-138
  3489  000366  E22A               	bc	l6629
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;Menu.c: 243:     horaTmp[1] = NovaTecla+48;
  3493  000368  5055               	movf	_NovaTecla^0,w,c
  3494  00036A  0F30               	addlw	48
  3495  00036C  6E47               	movwf	(_horaTmp+1)^0,c
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;Menu.c: 244:     LcPutChar(horaTmp[1]);
  3499  00036E  5047               	movf	(_horaTmp+1)^0,w,c
  3500  000370  EC90  F00B         	call	_LcPutChar
  3501                           
  3502                           ;Menu.c: 245:     NovaTecla = -1;
  3503  000374  6855               	setf	_NovaTecla^0,c
  3504                           
  3505                           ;Menu.c: 246:     LcPutChar(':');
  3506  000376  0E3A               	movlw	58
  3507  000378  EC90  F00B         	call	_LcPutChar
  3508                           
  3509                           ;Menu.c: 247:     state = 18;
  3510  00037C  0E12               	movlw	18
  3511  00037E  D7E8               	goto	L1
  3512  000380                     l6601:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;Menu.c: 254:    if (NovaTecla > -1 && NovaTecla < 10) {
  3516  000380  BE55               	btfsc	_NovaTecla^0,7,c
  3517  000382  D01C               	goto	l6629
  3518                           
  3519                           ; BSR set to: 0
  3520  000384  5055               	movf	_NovaTecla^0,w,c
  3521  000386  0A80               	xorlw	128
  3522  000388  0F76               	addlw	-138
  3523  00038A  E218               	bc	l6629
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;Menu.c: 255:     horaTmp[2] = NovaTecla+48;
  3527  00038C  5055               	movf	_NovaTecla^0,w,c
  3528  00038E  0F30               	addlw	48
  3529  000390  6E48               	movwf	(_horaTmp+2)^0,c
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;Menu.c: 256:     LcPutChar(horaTmp[2]);
  3533  000392  5048               	movf	(_horaTmp+2)^0,w,c
  3534  000394  EC90  F00B         	call	_LcPutChar
  3535                           
  3536                           ;Menu.c: 257:     NovaTecla = -1;
  3537  000398  6855               	setf	_NovaTecla^0,c
  3538                           
  3539                           ;Menu.c: 258:     state = 19;
  3540  00039A  0E13               	movlw	19
  3541  00039C  D7D9               	goto	L1
  3542  00039E                     l6617:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;Menu.c: 265:    if (NovaTecla > -1 && NovaTecla < 10) {
  3546  00039E  BE55               	btfsc	_NovaTecla^0,7,c
  3547  0003A0  D00D               	goto	l6629
  3548                           
  3549                           ; BSR set to: 0
  3550  0003A2  5055               	movf	_NovaTecla^0,w,c
  3551  0003A4  0A80               	xorlw	128
  3552  0003A6  0F76               	addlw	-138
  3553  0003A8  E209               	bc	l6629
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;Menu.c: 266:     horaTmp[3] = NovaTecla+48;
  3557  0003AA  5055               	movf	_NovaTecla^0,w,c
  3558  0003AC  0F30               	addlw	48
  3559  0003AE  6E49               	movwf	(_horaTmp+3)^0,c
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;Menu.c: 267:     LcPutChar(horaTmp[3]);
  3563  0003B0  5049               	movf	(_horaTmp+3)^0,w,c
  3564  0003B2  EC90  F00B         	call	_LcPutChar
  3565                           
  3566                           ;Menu.c: 268:     NovaTecla = -1;
  3567  0003B6  6855               	setf	_NovaTecla^0,c
  3568                           
  3569                           ;Menu.c: 269:     state = 20;
  3570  0003B8  0E14               	movlw	20
  3571  0003BA  D7CA               	goto	L1
  3572  0003BC                     l6629:
  3573                           
  3574                           ; BSR set to: 0
  3575  0003BC  0E0A               	movlw	10
  3576  0003BE  D7CA               	goto	L2
  3577  0003C0                     l6633:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;Menu.c: 276:    if (NovaTecla == 11) {
  3581  0003C0  0E0B               	movlw	11
  3582  0003C2  1855               	xorwf	_NovaTecla^0,w,c
  3583  0003C4  E1FB               	bnz	l6629
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;Menu.c: 277:     HActualitzaHora(horaTmp);
  3587  0003C6  0E46               	movlw	low _horaTmp
  3588  0003C8  6E68               	movwf	HActualitzaHora@nova^0,c
  3589  0003CA  EC4D  F00C         	call	_HActualitzaHora	;wreg free
  3590                           
  3591                           ;Menu.c: 278:     NovaTecla = -1;
  3592  0003CE  6855               	setf	_NovaTecla^0,c
  3593  0003D0  D705               	goto	u7380
  3594  0003D2                     l6645:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;Menu.c: 286:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3598  0003D2  0E0A               	movlw	10
  3599  0003D4  1855               	xorwf	_NovaTecla^0,w,c
  3600  0003D6  E103               	bnz	u7760
  3601                           
  3602                           ; BSR set to: 0
  3603  0003D8  ECD5  F00D         	call	_LcLliure	;wreg free
  3604  0003DC  E203               	bc	u7770
  3605  0003DE                     u7760:
  3606  0003DE  ECA5  F00D         	call	_checkHoraAcabat	;wreg free
  3607  0003E2  E307               	bnc	l6657
  3608  0003E4                     u7770:
  3609                           
  3610                           ;Menu.c: 287:     LcClear();
  3611  0003E4  ECF5  F00C         	call	_LcClear	;wreg free
  3612                           
  3613                           ;Menu.c: 288:     JendGame();
  3614  0003E8  EC48  F00E         	call	_JendGame	;wreg free
  3615                           
  3616                           ;Menu.c: 289:     state = 22;
  3617  0003EC  0E16               	movlw	22
  3618  0003EE  6E34               	movwf	menu@state^0,c
  3619                           
  3620                           ;Menu.c: 290:    }
  3621  0003F0  0C16               	retlw	22
  3622  0003F2                     l6657:
  3623  0003F2  5055               	movf	_NovaTecla^0,w,c
  3624  0003F4  0A80               	xorlw	128
  3625  0003F6  0F7F               	addlw	-129
  3626  0003F8  E309               	bnc	l6667
  3627  0003FA  5055               	movf	_NovaTecla^0,w,c
  3628  0003FC  0A80               	xorlw	128
  3629  0003FE  0F76               	addlw	-138
  3630  000400  E205               	bc	l6667
  3631                           
  3632                           ;Menu.c: 292:     JnovaTecla(NovaTecla);
  3633  000402  5055               	movf	_NovaTecla^0,w,c
  3634  000404  ECEC  F00D         	call	_JnovaTecla
  3635                           
  3636                           ;Menu.c: 293:     NovaTecla = -1;
  3637  000408  6855               	setf	_NovaTecla^0,c
  3638  00040A  D747               	goto	l6517
  3639  00040C                     l6667:
  3640  00040C  BE53               	btfsc	_novaDireccio^0,7,c
  3641  00040E  0012               	return	
  3642                           
  3643                           ;Menu.c: 297:     JnovaDireccio(novaDireccio);
  3644  000410  5053               	movf	_novaDireccio^0,w,c
  3645  000412  ECF0  F00D         	call	_JnovaDireccio
  3646                           
  3647                           ;Menu.c: 298:     novaDireccio = -1;
  3648  000416  6853               	setf	_novaDireccio^0,c
  3649  000418  D740               	goto	l6517
  3650  00041A                     l6675:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;Menu.c: 303:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3654  00041A  EC44  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3655  00041E  0900               	iorlw	0
  3656  000420  B4D8               	btfsc	status,2,c
  3657  000422  0012               	return	
  3658  000424  0E0B               	movlw	11
  3659  000426  D796               	goto	L2
  3660  000428                     l6681:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;Menu.c: 308:    if (LcLliure()) {
  3664  000428  ECD5  F00D         	call	_LcLliure	;wreg free
  3665  00042C  A0D8               	btfss	status,0,c
  3666  00042E  0012               	return	
  3667                           
  3668                           ;Menu.c: 309:     LcGotoXY(0,0);
  3669  000430  0E00               	movlw	0
  3670  000432  6E70               	movwf	LcGotoXY@Row^0,c
  3671  000434  EC67  F00C         	call	_LcGotoXY
  3672                           
  3673                           ;Menu.c: 310:     LcNewString(getArrayShowUsers(menuDalt));
  3674  000438  5037               	movf	_menuDalt^0,w,c
  3675  00043A  EC26  F00D         	call	_getArrayShowUsers
  3676  00043E  D99E               	call	PL30	;call to abstracted procedure
  3677  000440  ECCF  F00D         	call	_LcNewString	;wreg free
  3678                           
  3679                           ;Menu.c: 311:     menuDalt++;
  3680  000444  2A37               	incf	_menuDalt^0,f,c
  3681                           
  3682                           ;Menu.c: 312:     state = 24;
  3683  000446  0E18               	movlw	24
  3684  000448  6E34               	movwf	menu@state^0,c
  3685  00044A  0C18               	retlw	24
  3686  00044C                     l6689:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;Menu.c: 316:    if (LcLliure()) {
  3690  00044C  ECD5  F00D         	call	_LcLliure	;wreg free
  3691  000450  A0D8               	btfss	status,0,c
  3692  000452  0012               	return	
  3693                           
  3694                           ;Menu.c: 317:     if (menuDalt < UgetNumUsuaris()){
  3695  000454  EC3A  F00E         	call	_UgetNumUsuaris	;wreg free
  3696  000458  6037               	cpfslt	_menuDalt^0,c
  3697  00045A  D00B               	goto	l599
  3698                           
  3699                           ;Menu.c: 318:       LcGotoXY(0,1);
  3700  00045C  D994               	call	PL34	;call to abstracted procedure
  3701  00045E  EC67  F00C         	call	_LcGotoXY
  3702                           
  3703                           ;Menu.c: 319:       LcNewString(getArrayShowUsers(menuDalt));
  3704  000462  5037               	movf	_menuDalt^0,w,c
  3705  000464  EC26  F00D         	call	_getArrayShowUsers
  3706  000468  D989               	call	PL30	;call to abstracted procedure
  3707  00046A  ECCF  F00D         	call	_LcNewString	;wreg free
  3708                           
  3709                           ;Menu.c: 320:       menuDalt++;
  3710  00046E  2A37               	incf	_menuDalt^0,f,c
  3711                           
  3712                           ;Menu.c: 321:     } else {
  3713  000470  D001               	goto	l6697
  3714  000472                     l599:
  3715                           
  3716                           ;Menu.c: 322:       menuDalt = 0;
  3717  000472  6A37               	clrf	_menuDalt^0,c
  3718  000474                     l6697:
  3719                           
  3720                           ;Menu.c: 324:     state = 25;
  3721  000474  0E19               	movlw	25
  3722  000476  6E34               	movwf	menu@state^0,c
  3723  000478  0C19               	retlw	25
  3724  00047A                     l6699:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;Menu.c: 328:    if (LcLliure()) {
  3728  00047A  ECD5  F00D         	call	_LcLliure	;wreg free
  3729  00047E  A0D8               	btfss	status,0,c
  3730  000480  0012               	return	
  3731                           
  3732                           ;Menu.c: 329:     if (menuDalt == UgetNumUsuaris()){
  3733  000482  EC3A  F00E         	call	_UgetNumUsuaris	;wreg free
  3734  000486  1837               	xorwf	_menuDalt^0,w,c
  3735  000488  E101               	bnz	l6705
  3736                           
  3737                           ;Menu.c: 330:       menuDalt = 0;
  3738  00048A  6A37               	clrf	_menuDalt^0,c
  3739  00048C                     l6705:
  3740                           
  3741                           ;Menu.c: 332:     LcGotoXY(16,0);
  3742  00048C  D98D               	call	PL78	;call to abstracted procedure
  3743  00048E  EC67  F00C         	call	_LcGotoXY
  3744                           
  3745                           ;Menu.c: 333:     LcNewString(getArrayShowUsers(menuDalt));
  3746  000492  5037               	movf	_menuDalt^0,w,c
  3747  000494  EC26  F00D         	call	_getArrayShowUsers
  3748  000498  D971               	call	PL30	;call to abstracted procedure
  3749  00049A  ECCF  F00D         	call	_LcNewString	;wreg free
  3750                           
  3751                           ;Menu.c: 334:     state = 26;
  3752  00049E  0E1A               	movlw	26
  3753  0004A0  6E34               	movwf	menu@state^0,c
  3754  0004A2  0C1A               	retlw	26
  3755  0004A4                     l6709:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;Menu.c: 338:    if (LcLliure()) {
  3759  0004A4  ECD5  F00D         	call	_LcLliure	;wreg free
  3760  0004A8  A0D8               	btfss	status,0,c
  3761  0004AA  0012               	return	
  3762                           
  3763                           ;Menu.c: 339:     if (menuDalt+1 < UgetNumUsuaris()){
  3764  0004AC  EC3A  F00E         	call	_UgetNumUsuaris	;wreg free
  3765  0004B0  0100               	movlb	0	; () banked
  3766  0004B2  6FB6               	movwf	??_menu& (0+255),b
  3767  0004B4  6BB7               	clrf	(??_menu+1)& (0+255),b
  3768  0004B6  5037               	movf	_menuDalt^0,w,c
  3769  0004B8  6FB8               	movwf	(??_menu+2)& (0+255),b
  3770  0004BA  6BB9               	clrf	(??_menu+3)& (0+255),b
  3771  0004BC  2BB8               	incf	(??_menu+2)& (0+255),f,b
  3772  0004BE  0E00               	movlw	0
  3773  0004C0  23B9               	addwfc	(??_menu+3)& (0+255),f,b
  3774  0004C2  51B6               	movf	??_menu& (0+255),w,b
  3775  0004C4  5DB8               	subwf	(??_menu+2)& (0+255),w,b
  3776  0004C6  51B9               	movf	(??_menu+3)& (0+255),w,b
  3777  0004C8  0A80               	xorlw	128
  3778  0004CA  6FBA               	movwf	(??_menu+4)& (0+255),b
  3779  0004CC  51B7               	movf	(??_menu+1)& (0+255),w,b
  3780  0004CE  0A80               	xorlw	128
  3781  0004D0  59BA               	subwfb	(??_menu+4)& (0+255),w,b
  3782  0004D2  E209               	bc	l6715
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;Menu.c: 340:       LcGotoXY(16,1);
  3786  0004D4  D966               	call	PL76	;call to abstracted procedure
  3787  0004D6  EC67  F00C         	call	_LcGotoXY
  3788                           
  3789                           ;Menu.c: 341:       LcNewString(getArrayShowUsers(menuDalt+1));
  3790  0004DA  2837               	incf	_menuDalt^0,w,c
  3791  0004DC  EC26  F00D         	call	_getArrayShowUsers
  3792  0004E0  D94D               	call	PL30	;call to abstracted procedure
  3793  0004E2  ECCF  F00D         	call	_LcNewString	;wreg free
  3794  0004E6                     l6715:
  3795                           
  3796                           ;Menu.c: 343:     state = 27;
  3797  0004E6  0E1B               	movlw	27
  3798  0004E8  6E34               	movwf	menu@state^0,c
  3799  0004EA  0C1B               	retlw	27
  3800  0004EC                     l6717:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;Menu.c: 347:    if (TiGetTics(timerMenu) > 1205) {
  3804  0004EC  5038               	movf	_timerMenu^0,w,c
  3805  0004EE  ECBE  F00C         	call	_TiGetTics
  3806  0004F2  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  3807  0004F4  D008               	goto	l6721
  3808  0004F6  0EB6               	movlw	182
  3809  0004F8  5C68               	subwf	?_TiGetTics^0,w,c
  3810  0004FA  0E04               	movlw	4
  3811  0004FC  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  3812  0004FE  E303               	bnc	l6721
  3813                           
  3814                           ;Menu.c: 348:     state = 29;
  3815  000500  0E1D               	movlw	29
  3816  000502  6E34               	movwf	menu@state^0,c
  3817                           
  3818                           ;Menu.c: 349:    }
  3819  000504  0C1D               	retlw	29
  3820  000506                     l6721:
  3821  000506  0E0B               	movlw	11
  3822  000508  1855               	xorwf	_NovaTecla^0,w,c
  3823  00050A  A4D8               	btfss	status,2,c
  3824  00050C  0012               	return	
  3825  00050E                     u7910:
  3826                           
  3827                           ;Menu.c: 351:     menuDalt = 0;
  3828  00050E  6A37               	clrf	_menuDalt^0,c
  3829  000510  D665               	goto	u7380
  3830  000512                     l6727:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;Menu.c: 356:    if (pos > 15) {
  3834  000512  0E0F               	movlw	15
  3835  000514  6435               	cpfsgt	_pos^0,c
  3836  000516  D005               	goto	l6733
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;Menu.c: 357:     LcClear();
  3840  000518  ECF5  F00C         	call	_LcClear	;wreg free
  3841  00051C                     l6731:
  3842                           
  3843                           ;Menu.c: 358:     state = 23;
  3844  00051C  0E17               	movlw	23
  3845  00051E  6E34               	movwf	menu@state^0,c
  3846                           
  3847                           ;Menu.c: 359:    }
  3848  000520  0C17               	retlw	23
  3849  000522                     l6733:
  3850                           
  3851                           ; BSR set to: 0
  3852  000522  0E10               	movlw	16
  3853  000524  6035               	cpfslt	_pos^0,c
  3854  000526  0C10               	retlw	16
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;Menu.c: 361:     TiResetTics(timerMenu);
  3858  000528  5038               	movf	_timerMenu^0,w,c
  3859  00052A  EC42  F00D         	call	_TiResetTics
  3860                           
  3861                           ;Menu.c: 362:     LcScroll();
  3862  00052E  EC2D  F00E         	call	_LcScroll	;wreg free
  3863                           
  3864                           ;Menu.c: 363:     pos++;
  3865  000532  2A35               	incf	_pos^0,f,c
  3866  000534                     l6741:
  3867                           
  3868                           ;Menu.c: 364:     state = 28;
  3869  000534  0E1C               	movlw	28
  3870  000536  6E34               	movwf	menu@state^0,c
  3871  000538  0C1C               	retlw	28
  3872  00053A                     l6743:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;Menu.c: 368:    if (LcLliure()) {
  3876  00053A  ECD5  F00D         	call	_LcLliure	;wreg free
  3877  00053E  A0D8               	btfss	status,0,c
  3878  000540  0012               	return	
  3879                           
  3880                           ;Menu.c: 369:     TiResetTics(timerMenu);
  3881  000542  5038               	movf	_timerMenu^0,w,c
  3882  000544  EC42  F00D         	call	_TiResetTics
  3883                           
  3884                           ;Menu.c: 370:     pos = 0;
  3885  000548  6A35               	clrf	_pos^0,c
  3886  00054A  D7F4               	goto	l6741
  3887  00054C                     l6751:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;Menu.c: 375:    if (UshowUsersCalculat()) {
  3891  00054C  ECAB  F00D         	call	_UshowUsersCalculat	;wreg free
  3892  000550  E2E5               	bc	l6731
  3893  000552  0012               	return	
  3894  000554                     l6755:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;Menu.c: 380:    if (LcLliure()) {
  3898  000554  ECD5  F00D         	call	_LcLliure	;wreg free
  3899  000558  A0D8               	btfss	status,0,c
  3900  00055A  0012               	return	
  3901                           
  3902                           ;Menu.c: 381:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  3903  00055C  5037               	movf	_menuDalt^0,w,c
  3904  00055E  ECB1  F00D         	call	_UgetTop5
  3905  000562  EC68  F00D         	call	_UgetUserName
  3906  000566  D912               	call	PL42	;call to abstracted procedure
  3907  000568  ECCF  F00D         	call	_LcNewString	;wreg free
  3908                           
  3909                           ;Menu.c: 382:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  3910  00056C  5037               	movf	_menuDalt^0,w,c
  3911  00056E  ECB1  F00D         	call	_UgetTop5
  3912  000572  ECB7  F00D         	call	_UgetScore
  3913  000576  ECC9  F00D         	call	_CToAConverteix
  3914                           
  3915                           ;Menu.c: 383:     state = 32;
  3916  00057A  0E20               	movlw	32
  3917  00057C  6E34               	movwf	menu@state^0,c
  3918  00057E  0C20               	retlw	32
  3919  000580                     l6761:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;Menu.c: 387:    if (CToAHaAcabat() == 250 && LcLliure()) {
  3923  000580  EC4C  F00E         	call	_CToAHaAcabat	;wreg free
  3924  000584  0AFA               	xorlw	250
  3925  000586  A4D8               	btfss	status,2,c
  3926  000588  0012               	return	
  3927  00058A  ECD5  F00D         	call	_LcLliure	;wreg free
  3928  00058E  A0D8               	btfss	status,0,c
  3929  000590  0012               	return	
  3930                           
  3931                           ;Menu.c: 388:     LcPutChar(':');
  3932  000592  0E3A               	movlw	58
  3933  000594  EC90  F00B         	call	_LcPutChar
  3934                           
  3935                           ;Menu.c: 389:     LcGotoXY(0,1);
  3936  000598  D8F6               	call	PL34	;call to abstracted procedure
  3937  00059A  EC67  F00C         	call	_LcGotoXY
  3938                           
  3939                           ;Menu.c: 390:     LcNewString(CToAobtenir());
  3940  00059E  EC4A  F00E         	call	_CToAobtenir	;wreg free
  3941  0005A2  D8F9               	call	PL46	;call to abstracted procedure
  3942  0005A4  ECCF  F00D         	call	_LcNewString	;wreg free
  3943                           
  3944                           ;Menu.c: 391:     menuDalt++;
  3945  0005A8  2A37               	incf	_menuDalt^0,f,c
  3946                           
  3947                           ;Menu.c: 392:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  3948  0005AA  0E05               	movlw	5
  3949  0005AC  1837               	xorwf	_menuDalt^0,w,c
  3950  0005AE  E005               	bz	u8000
  3951  0005B0  5037               	movf	_menuDalt^0,w,c
  3952  0005B2  ECB1  F00D         	call	_UgetTop5
  3953  0005B6  0AFF               	xorlw	255
  3954  0005B8  E101               	bnz	l6775
  3955  0005BA                     u8000:
  3956  0005BA  6A37               	clrf	_menuDalt^0,c
  3957  0005BC                     l6775:
  3958                           
  3959                           ;Menu.c: 393:     state = 34;
  3960  0005BC  0E22               	movlw	34
  3961  0005BE  6E34               	movwf	menu@state^0,c
  3962  0005C0  0C22               	retlw	34
  3963  0005C2                     l6777:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;Menu.c: 397:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  3967  0005C2  5037               	movf	_menuDalt^0,w,c
  3968  0005C4  ECB1  F00D         	call	_UgetTop5
  3969  0005C8  0AFF               	xorlw	255
  3970  0005CA  E104               	bnz	u8020
  3971  0005CC  0E05               	movlw	5
  3972  0005CE  1837               	xorwf	_menuDalt^0,w,c
  3973  0005D0  B4D8               	btfsc	status,2,c
  3974  0005D2  0012               	return	
  3975  0005D4                     u8020:
  3976  0005D4  ECD5  F00D         	call	_LcLliure	;wreg free
  3977  0005D8  A0D8               	btfss	status,0,c
  3978  0005DA  0012               	return	
  3979                           
  3980                           ;Menu.c: 398:     LcGotoXY(16,0);
  3981  0005DC  D8E5               	call	PL78	;call to abstracted procedure
  3982  0005DE  EC67  F00C         	call	_LcGotoXY
  3983                           
  3984                           ;Menu.c: 399:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  3985  0005E2  5037               	movf	_menuDalt^0,w,c
  3986  0005E4  ECB1  F00D         	call	_UgetTop5
  3987  0005E8  EC68  F00D         	call	_UgetUserName
  3988  0005EC  D8CF               	call	PL42	;call to abstracted procedure
  3989  0005EE  ECCF  F00D         	call	_LcNewString	;wreg free
  3990                           
  3991                           ;Menu.c: 400:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  3992  0005F2  5037               	movf	_menuDalt^0,w,c
  3993  0005F4  ECB1  F00D         	call	_UgetTop5
  3994  0005F8  ECB7  F00D         	call	_UgetScore
  3995  0005FC  ECC9  F00D         	call	_CToAConverteix
  3996                           
  3997                           ;Menu.c: 401:     state = 35;
  3998  000600  0E23               	movlw	35
  3999  000602  6E34               	movwf	menu@state^0,c
  4000  000604  0C23               	retlw	35
  4001  000606                     l6787:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;Menu.c: 405:    if (LcLliure() && CToAHaAcabat() == 250) {
  4005  000606  ECD5  F00D         	call	_LcLliure	;wreg free
  4006  00060A  A0D8               	btfss	status,0,c
  4007  00060C  0012               	return	
  4008  00060E  EC4C  F00E         	call	_CToAHaAcabat	;wreg free
  4009  000612  0AFA               	xorlw	250
  4010  000614  A4D8               	btfss	status,2,c
  4011  000616  0012               	return	
  4012                           
  4013                           ;Menu.c: 406:     LcPutChar(':');
  4014  000618  0E3A               	movlw	58
  4015  00061A  EC90  F00B         	call	_LcPutChar
  4016                           
  4017                           ;Menu.c: 407:     LcGotoXY(16,1);
  4018  00061E  D8C1               	call	PL76	;call to abstracted procedure
  4019  000620  EC67  F00C         	call	_LcGotoXY
  4020                           
  4021                           ;Menu.c: 408:     LcNewString(CToAobtenir());
  4022  000624  EC4A  F00E         	call	_CToAobtenir	;wreg free
  4023  000628  D8B6               	call	PL46	;call to abstracted procedure
  4024  00062A  ECCF  F00D         	call	_LcNewString	;wreg free
  4025                           
  4026                           ;Menu.c: 409:     pos = 0;
  4027  00062E  6A35               	clrf	_pos^0,c
  4028                           
  4029                           ;Menu.c: 410:     TiResetTics(timerMenu);
  4030  000630  5038               	movf	_timerMenu^0,w,c
  4031  000632  EC42  F00D         	call	_TiResetTics
  4032  000636                     l6799:
  4033                           
  4034                           ;Menu.c: 411:     state = 37;
  4035  000636  0E25               	movlw	37
  4036  000638  6E34               	movwf	menu@state^0,c
  4037  00063A  0C25               	retlw	37
  4038  00063C                     l6801:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;Menu.c: 415:    if (NovaTecla == 11 && LcLliure()) {
  4042  00063C  0E0B               	movlw	11
  4043  00063E  1855               	xorwf	_NovaTecla^0,w,c
  4044  000640  E104               	bnz	l6809
  4045                           
  4046                           ; BSR set to: 0
  4047  000642  ECD5  F00D         	call	_LcLliure	;wreg free
  4048  000646  E301 D762          	bc	u7910
  4049  00064A                     l6809:
  4050  00064A  5038               	movf	_timerMenu^0,w,c
  4051  00064C  ECBE  F00C         	call	_TiGetTics
  4052  000650  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  4053  000652  0012               	return	
  4054  000654  0E91               	movlw	145
  4055  000656  5C68               	subwf	?_TiGetTics^0,w,c
  4056  000658  0E01               	movlw	1
  4057  00065A  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  4058  00065C  A0D8               	btfss	status,0,c
  4059  00065E  0012               	return	
  4060  000660  ECD5  F00D         	call	_LcLliure	;wreg free
  4061  000664  A0D8               	btfss	status,0,c
  4062  000666  0012               	return	
  4063                           
  4064                           ;Menu.c: 420:     state = 38;
  4065  000668  0E26               	movlw	38
  4066  00066A  6E34               	movwf	menu@state^0,c
  4067  00066C  0C26               	retlw	38
  4068  00066E                     l6815:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;Menu.c: 424:    if (pos < 16) {
  4072  00066E  0E10               	movlw	16
  4073  000670  6035               	cpfslt	_pos^0,c
  4074  000672  D007               	goto	l6825
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;Menu.c: 425:     TiResetTics(timerMenu);
  4078  000674  5038               	movf	_timerMenu^0,w,c
  4079  000676  EC42  F00D         	call	_TiResetTics
  4080                           
  4081                           ;Menu.c: 426:     LcScroll();
  4082  00067A  EC2D  F00E         	call	_LcScroll	;wreg free
  4083                           
  4084                           ;Menu.c: 427:     pos++;
  4085  00067E  2A35               	incf	_pos^0,f,c
  4086  000680  D7DA               	goto	l6799
  4087  000682                     l6825:
  4088                           
  4089                           ; BSR set to: 0
  4090  000682  0E0F               	movlw	15
  4091  000684  6435               	cpfsgt	_pos^0,c
  4092  000686  0C0F               	retlw	15
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;Menu.c: 431:     LcClear();
  4096  000688  ECF5  F00C         	call	_LcClear	;wreg free
  4097  00068C  D62E               	goto	l6549
  4098  00068E                     l6833:
  4099  00068E  5034               	movf	menu@state^0,w,c
  4100  000690  0100               	movlb	0	; () banked
  4101  000692  6FB6               	movwf	??_menu& (0+255),b
  4102  000694  6BB7               	clrf	(??_menu+1)& (0+255),b
  4103                           
  4104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4105                           ; Switch size 1, requested type "space"
  4106                           ; Number of cases is 1, Range of values is 0 to 0
  4107                           ; switch strategies available:
  4108                           ; Name         Instructions Cycles
  4109                           ; simple_byte            4     3 (average)
  4110                           ;	Chosen strategy is simple_byte
  4111  000696  51B7               	movf	(??_menu+1)& (0+255),w,b
  4112  000698  A4D8               	btfss	status,2,c
  4113  00069A  0012               	return	
  4114                           
  4115                           ; BSR set to: 0
  4116                           ; Switch size 1, requested type "space"
  4117                           ; Number of cases is 37, Range of values is 0 to 38
  4118                           ; switch strategies available:
  4119                           ; Name         Instructions Cycles
  4120                           ; simple_byte          112    57 (average)
  4121                           ;	Chosen strategy is simple_byte
  4122  00069C  51B6               	movf	??_menu& (0+255),w,b
  4123  00069E  E101 D4CB          	bz	l6287
  4124  0006A2  0A01               	xorlw	1	; case 1
  4125  0006A4  E101 D4D3          	bz	l6293
  4126  0006A8  0A03               	xorlw	3	; case 2
  4127  0006AA  E101 D4E1          	bz	l6303
  4128  0006AE  0A01               	xorlw	1	; case 3
  4129  0006B0  E101 D4EE          	bz	l503
  4130  0006B4  0A07               	xorlw	7	; case 4
  4131  0006B6  E101 D4F8          	bz	l6323
  4132  0006BA  0A01               	xorlw	1	; case 5
  4133  0006BC  E101 D505          	bz	l6331
  4134  0006C0  0A03               	xorlw	3	; case 6
  4135  0006C2  E101 D511          	bz	l6341
  4136  0006C6  0A01               	xorlw	1	; case 7
  4137  0006C8  E101 D524          	bz	l6355
  4138  0006CC  0A0F               	xorlw	15	; case 8
  4139  0006CE  E101 D53E          	bz	l6383
  4140  0006D2  0A01               	xorlw	1	; case 9
  4141  0006D4  E101 D551          	bz	l6397
  4142  0006D8  0A03               	xorlw	3	; case 10
  4143  0006DA  E101 D56A          	bz	l6427
  4144  0006DE  0A01               	xorlw	1	; case 11
  4145  0006E0  E101 D571          	bz	l530
  4146  0006E4  0A07               	xorlw	7	; case 12
  4147  0006E6  E101 D584          	bz	l6449
  4148  0006EA  0A01               	xorlw	1	; case 13
  4149  0006EC  E101 D58D          	bz	l6461
  4150  0006F0  0A03               	xorlw	3	; case 14
  4151  0006F2  E101 D5FD          	bz	l6551
  4152  0006F6  0A01               	xorlw	1	; case 15
  4153  0006F8  E101 D60A          	bz	l6559
  4154  0006FC  0A1F               	xorlw	31	; case 16
  4155  0006FE  E101 D613          	bz	l6563
  4156  000702  0A01               	xorlw	1	; case 17
  4157  000704  E101 D62A          	bz	l6583
  4158  000708  0A03               	xorlw	3	; case 18
  4159  00070A  E101 D639          	bz	l6601
  4160  00070E  0A01               	xorlw	1	; case 19
  4161  000710  E101 D645          	bz	l6617
  4162  000714  0A07               	xorlw	7	; case 20
  4163  000716  E101 D653          	bz	l6633
  4164  00071A  0A01               	xorlw	1	; case 21
  4165  00071C  E101 D659          	bz	l6645
  4166  000720  0A03               	xorlw	3	; case 22
  4167  000722  E101 D67A          	bz	l6675
  4168  000726  0A01               	xorlw	1	; case 23
  4169  000728  E101 D67E          	bz	l6681
  4170  00072C  0A0F               	xorlw	15	; case 24
  4171  00072E  E101 D68D          	bz	l6689
  4172  000732  0A01               	xorlw	1	; case 25
  4173  000734  E101 D6A1          	bz	l6699
  4174  000738  0A03               	xorlw	3	; case 26
  4175  00073A  E101 D6B3          	bz	l6709
  4176  00073E  0A01               	xorlw	1	; case 27
  4177  000740  E101 D6FB          	bz	l6743
  4178  000744  0A07               	xorlw	7	; case 28
  4179  000746  E101 D6D1          	bz	l6717
  4180  00074A  0A01               	xorlw	1	; case 29
  4181  00074C  E101 D6E1          	bz	l6727
  4182  000750  0A03               	xorlw	3	; case 30
  4183  000752  E101 D6FB          	bz	l6751
  4184  000756  0A01               	xorlw	1	; case 31
  4185  000758  E101 D6FC          	bz	l6755
  4186  00075C  0A3F               	xorlw	63	; case 32
  4187  00075E  E101 D70F          	bz	l6761
  4188  000762  0A02               	xorlw	2	; case 34
  4189  000764  E101 D72D          	bz	l6777
  4190  000768  0A01               	xorlw	1	; case 35
  4191  00076A  E101 D74C          	bz	l6787
  4192  00076E  0A06               	xorlw	6	; case 37
  4193  000770  E101 D764          	bz	l6801
  4194  000774  0A03               	xorlw	3	; case 38
  4195  000776  E101 D77A          	bz	l6815
  4196  00077A  0012               	return		;funcret
  4197  00077C                     __end_of_menu:
  4198                           	callstack 0
  4199  00077C                     PL30:
  4200                           	callstack 24
  4201  00077C  C068  F06B         	movff	?_getArrayShowUsers,LcNewString@new_s
  4202  000780  C069  F06C         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4203  000784  0012               	return	
  4204  000786                     __end_ofPL30:
  4205                           	callstack 0
  4206  000786                     PL34:
  4207                           	callstack 24
  4208  000786  0E01               	movlw	1
  4209  000788  6E70               	movwf	LcGotoXY@Row^0,c
  4210  00078A  0C00               	retlw	0
  4211  00078C                     __end_ofPL34:
  4212                           	callstack 0
  4213  00078C                     PL42:
  4214                           	callstack 24
  4215  00078C  C068  F06B         	movff	?_UgetUserName,LcNewString@new_s
  4216  000790  C069  F06C         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4217  000794  0012               	return	
  4218  000796                     __end_ofPL42:
  4219                           	callstack 0
  4220  000796                     PL46:
  4221                           	callstack 24
  4222  000796  0100               	movlb	0	; () banked
  4223  000798  6FB6               	movwf	??_menu& (0+255),b
  4224  00079A  C0B6  F06B         	movff	??_menu,LcNewString@new_s
  4225  00079E  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  4226  0007A0  0012               	return	
  4227  0007A2                     __end_ofPL46:
  4228                           	callstack 0
  4229  0007A2                     PL76:
  4230                           	callstack 24
  4231  0007A2  0E01               	movlw	1
  4232  0007A4  6E70               	movwf	LcGotoXY@Row^0,c
  4233  0007A6  0C10               	retlw	16
  4234  0007A8                     __end_ofPL76:
  4235                           	callstack 0
  4236  0007A8                     PL78:
  4237                           	callstack 24
  4238  0007A8  0E00               	movlw	0
  4239  0007AA  6E70               	movwf	LcGotoXY@Row^0,c
  4240  0007AC  0C10               	retlw	16
  4241  0007AE                     __end_ofPL78:
  4242                           	callstack 0
  4243  0007AE                     PL80:
  4244                           	callstack 24
  4245  0007AE  6855               	setf	_NovaTecla^0,c
  4246  0007B0  6854               	setf	_novaLletra^0,c
  4247  0007B2  6A39               	clrf	_tmp^0,c
  4248  0007B4  0012               	return	
  4249  0007B6                     __end_ofPL80:
  4250                           	callstack 0
  4251  0007B6                     PL82:
  4252                           	callstack 24
  4253  0007B6  2A39               	incf	_tmp^0,f,c
  4254  0007B8  6855               	setf	_NovaTecla^0,c
  4255  0007BA  6854               	setf	_novaLletra^0,c
  4256  0007BC  0012               	return	
  4257  0007BE                     __end_ofPL82:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _getArrayShowUsers *****************
  4261 ;; Defined at:
  4262 ;;		line 63 in file "Usuaris.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  quin            1    wreg     unsigned char 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  quin            1    7[COMRAM] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  2    5[COMRAM] PTR unsigned char 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1
  4276 ;;      Params:         2       0       0
  4277 ;;      Locals:         1       0       0
  4278 ;;      Temps:          0       0       0
  4279 ;;      Totals:         3       0       0
  4280 ;;Total ram usage:        3 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 2
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_menu
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text17
  4291  001A4C                     __ptext17:
  4292                           	callstack 0
  4293  001A4C                     _getArrayShowUsers:
  4294                           	callstack 27
  4295                           
  4296                           ;incstack = 0
  4297                           ;getArrayShowUsers@quin stored from wreg
  4298  001A4C  6E6A               	movwf	getArrayShowUsers@quin^0,c
  4299                           
  4300                           ;Usuaris.c: 65:     return usuaris[arrayShowUsers[quin]].username;
  4301  001A4E  506A               	movf	getArrayShowUsers@quin^0,w,c
  4302  001A50  0F0B               	addlw	low _arrayShowUsers
  4303  001A52  6ED9               	movwf	fsr2l,c
  4304  001A54  6ADA               	clrf	fsr2h,c
  4305  001A56  50DF               	movf	indf2,w,c
  4306  001A58  0D17               	mullw	23
  4307  001A5A  0E00               	movlw	low _usuaris
  4308  001A5C  24F3               	addwf	243,w,c
  4309  001A5E  6E68               	movwf	?_getArrayShowUsers^0,c
  4310  001A60  0E01               	movlw	high _usuaris
  4311  001A62  20F4               	addwfc	prodh,w,c
  4312  001A64  6E69               	movwf	(?_getArrayShowUsers+1)^0,c
  4313  001A66  0012               	return		;funcret
  4314  001A68                     __end_of_getArrayShowUsers:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _checkHoraAcabat *****************
  4318 ;; Defined at:
  4319 ;;		line 41 in file "Hora.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;		None               void
  4326 ;; Registers used:
  4327 ;;		status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1
  4333 ;;      Params:         0       0       0
  4334 ;;      Locals:         0       0       0
  4335 ;;      Temps:          0       0       0
  4336 ;;      Totals:         0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 2
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_menu
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text18
  4348  001B4A                     __ptext18:
  4349                           	callstack 0
  4350  001B4A                     _checkHoraAcabat:
  4351                           	callstack 27
  4352                           
  4353                           ;Hora.c: 42:     return tempsAcabat;
  4354                           
  4355                           ;incstack = 0
  4356  001B4A  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4357  001B4C  D002               	goto	l2203
  4358  001B4E  90D8               	bcf	status,0,c
  4359  001B50  0012               	return	
  4360  001B52                     l2203:
  4361  001B52  80D8               	bsf	status,0,c
  4362  001B54  0012               	return		;funcret
  4363  001B56                     __end_of_checkHoraAcabat:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _calculateShowUsers *****************
  4367 ;; Defined at:
  4368 ;;		line 182 in file "Usuaris.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		None
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1
  4382 ;;      Params:         0       0       0
  4383 ;;      Locals:         0       0       0
  4384 ;;      Temps:          0       0       0
  4385 ;;      Totals:         0       0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 2
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_menu
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text19
  4397  001C70                     __ptext19:
  4398                           	callstack 0
  4399  001C70                     _calculateShowUsers:
  4400                           	callstack 27
  4401                           
  4402                           ;Usuaris.c: 183:     do_showUsers = 1;
  4403                           
  4404                           ;incstack = 0
  4405  001C70  8678               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4406  001C72  0012               	return		;funcret
  4407  001C74                     __end_of_calculateShowUsers:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _UshowUsersCalculat *****************
  4411 ;; Defined at:
  4412 ;;		line 185 in file "Usuaris.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;		None               void
  4419 ;; Registers used:
  4420 ;;		status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1
  4426 ;;      Params:         0       0       0
  4427 ;;      Locals:         0       0       0
  4428 ;;      Temps:          0       0       0
  4429 ;;      Totals:         0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 2
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_menu
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text20
  4441  001B56                     __ptext20:
  4442                           	callstack 0
  4443  001B56                     _UshowUsersCalculat:
  4444                           	callstack 27
  4445                           
  4446                           ;Usuaris.c: 186:     return !do_showUsers;
  4447                           
  4448                           ;incstack = 0
  4449  001B56  A678               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4450  001B58  D002               	goto	l2225
  4451  001B5A  90D8               	bcf	status,0,c
  4452  001B5C  0012               	return	
  4453  001B5E                     l2225:
  4454  001B5E  80D8               	bsf	status,0,c
  4455  001B60  0012               	return		;funcret
  4456  001B62                     __end_of_UshowUsersCalculat:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _UgetUserName *****************
  4460 ;; Defined at:
  4461 ;;		line 59 in file "Usuaris.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  quin            1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  quin            1    7[COMRAM] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    5[COMRAM] PTR unsigned char 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, prodl, prodh
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1
  4475 ;;      Params:         2       0       0
  4476 ;;      Locals:         1       0       0
  4477 ;;      Temps:          0       0       0
  4478 ;;      Totals:         3       0       0
  4479 ;;Total ram usage:        3 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 2
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_menu
  4486 ;;		_motorSIO
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text21
  4491  001AD0                     __ptext21:
  4492                           	callstack 0
  4493  001AD0                     _UgetUserName:
  4494                           	callstack 27
  4495                           
  4496                           ;incstack = 0
  4497                           ;UgetUserName@quin stored from wreg
  4498  001AD0  6E6A               	movwf	UgetUserName@quin^0,c
  4499                           
  4500                           ;Usuaris.c: 60:     return usuaris[quin].username;
  4501  001AD2  506A               	movf	UgetUserName@quin^0,w,c
  4502  001AD4  0D17               	mullw	23
  4503  001AD6  0E00               	movlw	low _usuaris
  4504  001AD8  24F3               	addwf	243,w,c
  4505  001ADA  6E68               	movwf	?_UgetUserName^0,c
  4506  001ADC  0E01               	movlw	high _usuaris
  4507  001ADE  20F4               	addwfc	prodh,w,c
  4508  001AE0  6E69               	movwf	(?_UgetUserName+1)^0,c
  4509  001AE2  0012               	return		;funcret
  4510  001AE4                     __end_of_UgetUserName:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function _UgetTop5 *****************
  4514 ;; Defined at:
  4515 ;;		line 329 in file "Usuaris.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  quin            1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  quin            1    5[COMRAM] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      char 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1
  4529 ;;      Params:         0       0       0
  4530 ;;      Locals:         1       0       0
  4531 ;;      Temps:          0       0       0
  4532 ;;      Totals:         1       0       0
  4533 ;;Total ram usage:        1 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 2
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_menu
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text22
  4544  001B62                     __ptext22:
  4545                           	callstack 0
  4546  001B62                     _UgetTop5:
  4547                           	callstack 27
  4548                           
  4549                           ;incstack = 0
  4550                           ;UgetTop5@quin stored from wreg
  4551  001B62  6E68               	movwf	UgetTop5@quin^0,c
  4552                           
  4553                           ;Usuaris.c: 330:     return puntuacions[quin].indexStruct;
  4554  001B64  5068               	movf	UgetTop5@quin^0,w,c
  4555  001B66  EC67  F006         	call	PL20	;call to abstracted procedure
  4556  001B6A  50DF               	movf	indf2,w,c
  4557  001B6C  0012               	return		;funcret
  4558  001B6E                     __end_of_UgetTop5:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _UgetScore *****************
  4562 ;; Defined at:
  4563 ;;		line 326 in file "Usuaris.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  quin            1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  quin            1    5[COMRAM] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      unsigned char 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1
  4577 ;;      Params:         0       0       0
  4578 ;;      Locals:         1       0       0
  4579 ;;      Temps:          0       0       0
  4580 ;;      Totals:         1       0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 2
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_menu
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text23
  4592  001B6E                     __ptext23:
  4593                           	callstack 0
  4594  001B6E                     _UgetScore:
  4595                           	callstack 27
  4596                           
  4597                           ;incstack = 0
  4598                           ;UgetScore@quin stored from wreg
  4599  001B6E  6E68               	movwf	UgetScore@quin^0,c
  4600                           
  4601                           ;Usuaris.c: 327:     return puntuacions[quin].score;
  4602  001B70  5068               	movf	UgetScore@quin^0,w,c
  4603  001B72  EC61  F006         	call	PL18	;call to abstracted procedure
  4604  001B76  50DF               	movf	indf2,w,c
  4605  001B78  0012               	return		;funcret
  4606  001B7A                     __end_of_UgetScore:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _UgetNumUsuaris *****************
  4610 ;; Defined at:
  4611 ;;		line 35 in file "Usuaris.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      unsigned char 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1
  4625 ;;      Params:         0       0       0
  4626 ;;      Locals:         0       0       0
  4627 ;;      Temps:          0       0       0
  4628 ;;      Totals:         0       0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 2
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_menu
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text24
  4640  001C74                     __ptext24:
  4641                           	callstack 0
  4642  001C74                     _UgetNumUsuaris:
  4643                           	callstack 27
  4644                           
  4645                           ;Usuaris.c: 36:     return numUsuaris;
  4646                           
  4647                           ;incstack = 0
  4648  001C74  5033               	movf	_numUsuaris^0,w,c
  4649  001C76  0012               	return		;funcret
  4650  001C78                     __end_of_UgetNumUsuaris:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _UenviaPas *****************
  4654 ;; Defined at:
  4655 ;;		line 51 in file "Usuaris.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  c               1    wreg     unsigned char 
  4658 ;;  pos             1    5[COMRAM] unsigned char 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  c               1    6[COMRAM] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1
  4670 ;;      Params:         1       0       0
  4671 ;;      Locals:         1       0       0
  4672 ;;      Temps:          0       0       0
  4673 ;;      Totals:         2       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 2
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_menu
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text25
  4685  001AF6                     __ptext25:
  4686                           	callstack 0
  4687  001AF6                     _UenviaPas:
  4688                           	callstack 27
  4689                           
  4690                           ;incstack = 0
  4691                           ;UenviaPas@c stored from wreg
  4692  001AF6  6E69               	movwf	UenviaPas@c^0,c
  4693                           
  4694                           ;Usuaris.c: 52:     tmpPassword[pos] = c;
  4695  001AF8  5068               	movf	UenviaPas@pos^0,w,c
  4696  001AFA  0F98               	addlw	low _tmpPassword
  4697  001AFC  6ED9               	movwf	fsr2l,c
  4698  001AFE  6ADA               	clrf	fsr2h,c
  4699  001B00  C069  FFDF         	movff	UenviaPas@c,indf2
  4700  001B04  0012               	return		;funcret
  4701  001B06                     __end_of_UenviaPas:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function _UenviaChar *****************
  4705 ;; Defined at:
  4706 ;;		line 48 in file "Usuaris.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  c               1    wreg     unsigned char 
  4709 ;;  pos             1    5[COMRAM] unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  c               1    6[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1
  4721 ;;      Params:         1       0       0
  4722 ;;      Locals:         1       0       0
  4723 ;;      Temps:          0       0       0
  4724 ;;      Totals:         2       0       0
  4725 ;;Total ram usage:        2 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 2
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_menu
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text26
  4736  001B06                     __ptext26:
  4737                           	callstack 0
  4738  001B06                     _UenviaChar:
  4739                           	callstack 27
  4740                           
  4741                           ;incstack = 0
  4742                           ;UenviaChar@c stored from wreg
  4743  001B06  6E69               	movwf	UenviaChar@c^0,c
  4744                           
  4745                           ;Usuaris.c: 49:     tmpUsername[pos] = c;
  4746  001B08  5068               	movf	UenviaChar@pos^0,w,c
  4747  001B0A  0FA1               	addlw	low _tmpUsername
  4748  001B0C  6ED9               	movwf	fsr2l,c
  4749  001B0E  6ADA               	clrf	fsr2h,c
  4750  001B10  C069  FFDF         	movff	UenviaChar@c,indf2
  4751  001B14  0012               	return		;funcret
  4752  001B16                     __end_of_UenviaChar:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _UcheckExistsNotFinished *****************
  4756 ;; Defined at:
  4757 ;;		line 42 in file "Usuaris.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1
  4771 ;;      Params:         0       0       0
  4772 ;;      Locals:         0       0       0
  4773 ;;      Temps:          0       0       0
  4774 ;;      Totals:         0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 2
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_menu
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text27
  4786  001B7A                     __ptext27:
  4787                           	callstack 0
  4788  001B7A                     _UcheckExistsNotFinished:
  4789                           	callstack 27
  4790                           
  4791                           ;Usuaris.c: 43:     return do_check_exists;
  4792                           
  4793                           ;incstack = 0
  4794  001B7A  BA78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4795  001B7C  D002               	goto	l2159
  4796  001B7E  90D8               	bcf	status,0,c
  4797  001B80  0012               	return	
  4798  001B82                     l2159:
  4799  001B82  80D8               	bsf	status,0,c
  4800  001B84  0012               	return		;funcret
  4801  001B86                     __end_of_UcheckExistsNotFinished:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _UcheckExistsGetError *****************
  4805 ;; Defined at:
  4806 ;;		line 45 in file "Usuaris.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      char 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1
  4820 ;;      Params:         0       0       0
  4821 ;;      Locals:         0       0       0
  4822 ;;      Temps:          0       0       0
  4823 ;;      Totals:         0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 2
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_menu
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text28
  4835  001C78                     __ptext28:
  4836                           	callstack 0
  4837  001C78                     _UcheckExistsGetError:
  4838                           	callstack 27
  4839                           
  4840                           ;Usuaris.c: 46:     return usuariLoguejat;
  4841                           
  4842                           ;incstack = 0
  4843  001C78  5052               	movf	_usuariLoguejat^0,w,c
  4844  001C7A  0012               	return		;funcret
  4845  001C7C                     __end_of_UcheckExistsGetError:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _UcheckExists *****************
  4849 ;; Defined at:
  4850 ;;		line 39 in file "Usuaris.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		None
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1
  4864 ;;      Params:         0       0       0
  4865 ;;      Locals:         0       0       0
  4866 ;;      Temps:          0       0       0
  4867 ;;      Totals:         0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 2
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_menu
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text29
  4879  001C7C                     __ptext29:
  4880                           	callstack 0
  4881  001C7C                     _UcheckExists:
  4882                           	callstack 27
  4883                           
  4884                           ;Usuaris.c: 40:     do_check_exists = 1;
  4885                           
  4886                           ;incstack = 0
  4887  001C7C  8A78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4888  001C7E  0012               	return		;funcret
  4889  001C80                     __end_of_UcheckExists:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _URegister *****************
  4893 ;; Defined at:
  4894 ;;		line 55 in file "Usuaris.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		None
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1
  4908 ;;      Params:         0       0       0
  4909 ;;      Locals:         0       0       0
  4910 ;;      Temps:          0       0       0
  4911 ;;      Totals:         0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 2
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_menu
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text30
  4923  001C80                     __ptext30:
  4924                           	callstack 0
  4925  001C80                     _URegister:
  4926                           	callstack 27
  4927                           
  4928                           ;Usuaris.c: 56:     do_register = 1;
  4929                           
  4930                           ;incstack = 0
  4931  001C80  8878               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4932  001C82  0012               	return		;funcret
  4933  001C84                     __end_of_URegister:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _SiFerMenu *****************
  4937 ;; Defined at:
  4938 ;;		line 19 in file "GestioLCD.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		None
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1
  4952 ;;      Params:         0       0       0
  4953 ;;      Locals:         0       0       0
  4954 ;;      Temps:          0       0       0
  4955 ;;      Totals:         0       0       0
  4956 ;;Total ram usage:        0 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 2
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_menu
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text31
  4967  001C84                     __ptext31:
  4968                           	callstack 0
  4969  001C84                     _SiFerMenu:
  4970                           	callstack 27
  4971                           
  4972                           ;GestioLCD.c: 20:     ferMenu = 1;
  4973                           
  4974                           ;incstack = 0
  4975  001C84  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4976  001C86  0012               	return		;funcret
  4977  001C88                     __end_of_SiFerMenu:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _SMSon *****************
  4981 ;; Defined at:
  4982 ;;		line 128 in file "Ssms.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		None
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1
  4996 ;;      Params:         0       0       0
  4997 ;;      Locals:         0       0       0
  4998 ;;      Temps:          0       0       0
  4999 ;;      Totals:         0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 2
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_menu
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text32
  5011  001C4E                     __ptext32:
  5012                           	callstack 0
  5013  001C4E                     _SMSon:
  5014                           	callstack 27
  5015                           
  5016                           ;Ssms.c: 129:     setSMSon = 1;
  5017                           
  5018                           ;incstack = 0
  5019  001C4E  8E78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5020                           
  5021                           ;Ssms.c: 130:     novaTecla = -1;
  5022  001C50  6858               	setf	_novaTecla^0,c
  5023  001C52  0012               	return		;funcret
  5024  001C54                     __end_of_SMSon:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _SMSoff *****************
  5028 ;; Defined at:
  5029 ;;		line 133 in file "Ssms.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		None
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1
  5043 ;;      Params:         0       0       0
  5044 ;;      Locals:         0       0       0
  5045 ;;      Temps:          0       0       0
  5046 ;;      Totals:         0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_menu
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text33
  5058  001C54                     __ptext33:
  5059                           	callstack 0
  5060  001C54                     _SMSoff:
  5061                           	callstack 27
  5062                           
  5063                           ;Ssms.c: 134:     setSMSon = 0;
  5064                           
  5065                           ;incstack = 0
  5066  001C54  9E78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5067                           
  5068                           ;Ssms.c: 135:     novaTecla = -1;
  5069  001C56  6858               	setf	_novaTecla^0,c
  5070  001C58  0012               	return		;funcret
  5071  001C5A                     __end_of_SMSoff:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5075 ;; Defined at:
  5076 ;;		line 37 in file "SIO.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      char 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1
  5090 ;;      Params:         0       0       0
  5091 ;;      Locals:         0       0       0
  5092 ;;      Temps:          0       0       0
  5093 ;;      Totals:         0       0       0
  5094 ;;Total ram usage:        0 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 2
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_menu
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text34
  5105  001C88                     __ptext34:
  5106                           	callstack 0
  5107  001C88                     _SIOHaAcabatPuntuacions:
  5108                           	callstack 27
  5109                           
  5110                           ;SIO.c: 38:     return usuariActualSIO;
  5111                           
  5112                           ;incstack = 0
  5113  001C88  504D               	movf	_usuariActualSIO^0,w,c
  5114  001C8A  0012               	return		;funcret
  5115  001C8C                     __end_of_SIOHaAcabatPuntuacions:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _NoFerMenu *****************
  5119 ;; Defined at:
  5120 ;;		line 22 in file "GestioLCD.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		None
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1
  5134 ;;      Params:         0       0       0
  5135 ;;      Locals:         0       0       0
  5136 ;;      Temps:          0       0       0
  5137 ;;      Totals:         0       0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 2
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_menu
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text35
  5149  001C8C                     __ptext35:
  5150                           	callstack 0
  5151  001C8C                     _NoFerMenu:
  5152                           	callstack 27
  5153                           
  5154                           ;GestioLCD.c: 23:     ferMenu = 0;
  5155                           
  5156                           ;incstack = 0
  5157  001C8C  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5158  001C8E  0012               	return		;funcret
  5159  001C90                     __end_of_NoFerMenu:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function _LcScroll *****************
  5163 ;; Defined at:
  5164 ;;		line 37 in file "LcTLCD.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1
  5178 ;;      Params:         0       0       0
  5179 ;;      Locals:         0       0       0
  5180 ;;      Temps:          0       0       0
  5181 ;;      Totals:         0       0       0
  5182 ;;Total ram usage:        0 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; Hardware stack levels required when called: 4
  5185 ;; This function calls:
  5186 ;;		_CantaIR
  5187 ;; This function is called by:
  5188 ;;		_menu
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text36
  5193  001C5A                     __ptext36:
  5194                           	callstack 0
  5195  001C5A                     _LcScroll:
  5196                           	callstack 25
  5197                           
  5198                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5199                           
  5200                           ;incstack = 0
  5201  001C5A  0E18               	movlw	24
  5202  001C5C  EF34  F00D         	goto	_CantaIR
  5203  001C60                     __end_of_LcScroll:
  5204                           	callstack 0
  5205                           
  5206 ;; *************** function _JnovaTecla *****************
  5207 ;; Defined at:
  5208 ;;		line 16 in file "Joc.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  tecla           1    wreg     char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  tecla           1    5[COMRAM] char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1
  5222 ;;      Params:         0       0       0
  5223 ;;      Locals:         1       0       0
  5224 ;;      Temps:          0       0       0
  5225 ;;      Totals:         1       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 2
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_menu
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text37
  5237  001BD8                     __ptext37:
  5238                           	callstack 0
  5239  001BD8                     _JnovaTecla:
  5240                           	callstack 27
  5241                           
  5242                           ;incstack = 0
  5243                           ;JnovaTecla@tecla stored from wreg
  5244  001BD8  6E68               	movwf	JnovaTecla@tecla^0,c
  5245                           
  5246                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5247  001BDA  C068  F04E         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5248  001BDE  0012               	return		;funcret
  5249  001BE0                     __end_of_JnovaTecla:
  5250                           	callstack 0
  5251                           
  5252 ;; *************** function _JnovaDireccio *****************
  5253 ;; Defined at:
  5254 ;;		line 19 in file "Joc.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  dir             1    wreg     unsigned char 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  dir             1    5[COMRAM] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1
  5268 ;;      Params:         0       0       0
  5269 ;;      Locals:         1       0       0
  5270 ;;      Temps:          0       0       0
  5271 ;;      Totals:         1       0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 2
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_menu
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text38
  5283  001BE0                     __ptext38:
  5284                           	callstack 0
  5285  001BE0                     _JnovaDireccio:
  5286                           	callstack 27
  5287                           
  5288                           ;incstack = 0
  5289                           ;JnovaDireccio@dir stored from wreg
  5290  001BE0  6E68               	movwf	JnovaDireccio@dir^0,c
  5291                           
  5292                           ;Joc.c: 20:     direccioJoc = dir;
  5293  001BE2  C068  F01D         	movff	JnovaDireccio@dir,_direccioJoc
  5294  001BE6  0012               	return		;funcret
  5295  001BE8                     __end_of_JnovaDireccio:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _JendGame *****************
  5299 ;; Defined at:
  5300 ;;		line 27 in file "Joc.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		None
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1
  5314 ;;      Params:         0       0       0
  5315 ;;      Locals:         0       0       0
  5316 ;;      Temps:          0       0       0
  5317 ;;      Totals:         0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 2
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_menu
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text39
  5329  001C90                     __ptext39:
  5330                           	callstack 0
  5331  001C90                     _JendGame:
  5332                           	callstack 27
  5333                           
  5334                           ;Joc.c: 28:     jugantJoc = 0;
  5335                           
  5336                           ;incstack = 0
  5337  001C90  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5338  001C92  0012               	return		;funcret
  5339  001C94                     __end_of_JendGame:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _JJuguem *****************
  5343 ;; Defined at:
  5344 ;;		line 13 in file "Joc.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  usuari          1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  usuari          1    5[COMRAM] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1
  5358 ;;      Params:         0       0       0
  5359 ;;      Locals:         1       0       0
  5360 ;;      Temps:          0       0       0
  5361 ;;      Totals:         1       0       0
  5362 ;;Total ram usage:        1 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 2
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_menu
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text40
  5373  001BE8                     __ptext40:
  5374                           	callstack 0
  5375  001BE8                     _JJuguem:
  5376                           	callstack 27
  5377                           
  5378                           ;incstack = 0
  5379                           ;JJuguem@usuari stored from wreg
  5380  001BE8  6E68               	movwf	JJuguem@usuari^0,c
  5381                           
  5382                           ;Joc.c: 14:     usuariJoc = usuari;
  5383  001BEA  C068  F04F         	movff	JJuguem@usuari,_usuariJoc
  5384  001BEE  0012               	return		;funcret
  5385  001BF0                     __end_of_JJuguem:
  5386                           	callstack 0
  5387                           
  5388 ;; *************** function _HActualitzaHora *****************
  5389 ;; Defined at:
  5390 ;;		line 15 in file "Hora.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5393 ;;		 -> horaTmp(4), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1
  5405 ;;      Params:         1       0       0
  5406 ;;      Locals:         0       0       0
  5407 ;;      Temps:          0       0       0
  5408 ;;      Totals:         1       0       0
  5409 ;;Total ram usage:        1 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 2
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_menu
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text41
  5420  00189A                     __ptext41:
  5421                           	callstack 0
  5422  00189A                     _HActualitzaHora:
  5423                           	callstack 27
  5424                           
  5425                           ;Hora.c: 16:     hora[0] = nova[0];
  5426                           
  5427                           ;incstack = 0
  5428  00189A  5068               	movf	HActualitzaHora@nova^0,w,c
  5429  00189C  6ED9               	movwf	fsr2l,c
  5430  00189E  6ADA               	clrf	fsr2h,c
  5431  0018A0  50DF               	movf	indf2,w,c
  5432  0018A2  6E5A               	movwf	_hora^0,c
  5433                           
  5434                           ;Hora.c: 17:     hora[1] = nova[1];
  5435  0018A4  5068               	movf	HActualitzaHora@nova^0,w,c
  5436  0018A6  6ED9               	movwf	fsr2l,c
  5437  0018A8  6ADA               	clrf	fsr2h,c
  5438  0018AA  2AD9               	incf	fsr2l,f,c
  5439  0018AC  50DF               	movf	indf2,w,c
  5440  0018AE  6E5B               	movwf	(_hora+1)^0,c
  5441                           
  5442                           ;Hora.c: 18:     hora[3] = nova[2];
  5443  0018B0  5068               	movf	HActualitzaHora@nova^0,w,c
  5444  0018B2  6ED9               	movwf	fsr2l,c
  5445  0018B4  6ADA               	clrf	fsr2h,c
  5446  0018B6  0E02               	movlw	2
  5447  0018B8  26D9               	addwf	fsr2l,f,c
  5448  0018BA  50DF               	movf	indf2,w,c
  5449  0018BC  6E5D               	movwf	(_hora+3)^0,c
  5450                           
  5451                           ;Hora.c: 19:     hora[4] = nova[3];
  5452  0018BE  5068               	movf	HActualitzaHora@nova^0,w,c
  5453  0018C0  6ED9               	movwf	fsr2l,c
  5454  0018C2  6ADA               	clrf	fsr2h,c
  5455  0018C4  0E03               	movlw	3
  5456  0018C6  26D9               	addwf	fsr2l,f,c
  5457  0018C8  50DF               	movf	indf2,w,c
  5458  0018CA  6E5E               	movwf	(_hora+4)^0,c
  5459  0018CC  0012               	return		;funcret
  5460  0018CE                     __end_of_HActualitzaHora:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _GLCDMostraMenu *****************
  5464 ;; Defined at:
  5465 ;;		line 30 in file "GestioLCD.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  num             1    wreg     unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  num             1    5[COMRAM] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1
  5479 ;;      Params:         0       0       0
  5480 ;;      Locals:         1       0       0
  5481 ;;      Temps:          0       0       0
  5482 ;;      Totals:         1       0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used: 1
  5485 ;; Hardware stack levels required when called: 2
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_menu
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text42
  5494  001B86                     __ptext42:
  5495                           	callstack 0
  5496  001B86                     _GLCDMostraMenu:
  5497                           	callstack 27
  5498                           
  5499                           ;incstack = 0
  5500                           ;GLCDMostraMenu@num stored from wreg
  5501  001B86  6E68               	movwf	GLCDMostraMenu@num^0,c
  5502                           
  5503                           ;GestioLCD.c: 31:     newString = 1;
  5504  001B88  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5505                           
  5506                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5507  001B8A  C068  F02B         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5508                           
  5509                           ;GestioLCD.c: 33:     ferMenu = 1;
  5510  001B8E  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5511  001B90  0012               	return		;funcret
  5512  001B92                     __end_of_GLCDMostraMenu:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _CToAobtenir *****************
  5516 ;; Defined at:
  5517 ;;		line 7 in file "CtoA.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      PTR unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1
  5531 ;;      Params:         2       0       0
  5532 ;;      Locals:         0       0       0
  5533 ;;      Temps:          0       0       0
  5534 ;;      Totals:         2       0       0
  5535 ;;Total ram usage:        2 bytes
  5536 ;; Hardware stack levels used: 1
  5537 ;; Hardware stack levels required when called: 2
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_menu
  5542 ;;		_motorSIO
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text43
  5547  001C94                     __ptext43:
  5548                           	callstack 0
  5549  001C94                     _CToAobtenir:
  5550                           	callstack 27
  5551                           
  5552                           ;CtoA.c: 8:     return stringScore;
  5553                           
  5554                           ;incstack = 0
  5555  001C94  0E60               	movlw	_stringScore& (0+255)
  5556  001C96  0012               	return		;funcret
  5557  001C98                     __end_of_CToAobtenir:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _CToAHaAcabat *****************
  5561 ;; Defined at:
  5562 ;;		line 10 in file "CtoA.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      unsigned char 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1
  5576 ;;      Params:         0       0       0
  5577 ;;      Locals:         0       0       0
  5578 ;;      Temps:          0       0       0
  5579 ;;      Totals:         0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 2
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_menu
  5587 ;;		_motorSIO
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text44
  5592  001C98                     __ptext44:
  5593                           	callstack 0
  5594  001C98                     _CToAHaAcabat:
  5595                           	callstack 27
  5596                           
  5597                           ;CtoA.c: 11:     return convertir;
  5598                           
  5599                           ;incstack = 0
  5600  001C98  504A               	movf	_convertir^0,w,c
  5601  001C9A  0012               	return		;funcret
  5602  001C9C                     __end_of_CToAHaAcabat:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _CToAConverteix *****************
  5606 ;; Defined at:
  5607 ;;		line 14 in file "CtoA.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  numero          1    wreg     unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  numero          1    5[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1
  5621 ;;      Params:         0       0       0
  5622 ;;      Locals:         1       0       0
  5623 ;;      Temps:          0       0       0
  5624 ;;      Totals:         1       0       0
  5625 ;;Total ram usage:        1 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 3
  5628 ;; This function calls:
  5629 ;;		_CToAReset
  5630 ;; This function is called by:
  5631 ;;		_menu
  5632 ;;		_motorSIO
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text45
  5637  001B92                     __ptext45:
  5638                           	callstack 0
  5639  001B92                     _CToAConverteix:
  5640                           	callstack 26
  5641                           
  5642                           ;incstack = 0
  5643                           ;CToAConverteix@numero stored from wreg
  5644  001B92  6E68               	movwf	CToAConverteix@numero^0,c
  5645                           
  5646                           ;CtoA.c: 15:     CToAReset();
  5647  001B94  ECF8  F00D         	call	_CToAReset	;wreg free
  5648                           
  5649                           ;CtoA.c: 16:     convertir = numero;
  5650  001B98  C068  F04A         	movff	CToAConverteix@numero,_convertir
  5651  001B9C  0012               	return		;funcret
  5652  001B9E                     __end_of_CToAConverteix:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _CToAReset *****************
  5656 ;; Defined at:
  5657 ;;		line 18 in file "CtoA.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1
  5671 ;;      Params:         0       0       0
  5672 ;;      Locals:         0       0       0
  5673 ;;      Temps:          0       0       0
  5674 ;;      Totals:         0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 2
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_CToAConverteix
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text46
  5686  001BF0                     __ptext46:
  5687                           	callstack 0
  5688  001BF0                     _CToAReset:
  5689                           	callstack 26
  5690                           
  5691                           ;CtoA.c: 19:     stringScore[0] = '0';
  5692                           
  5693                           ;incstack = 0
  5694  001BF0  0E30               	movlw	48
  5695  001BF2  6E60               	movwf	_stringScore^0,c
  5696                           
  5697                           ;CtoA.c: 20:     stringScore[1] = '0';
  5698  001BF4  6E61               	movwf	(_stringScore+1)^0,c
  5699  001BF6  0C30               	retlw	48	;funcret
  5700  001BF8                     __end_of_CToAReset:
  5701                           	callstack 0
  5702                           
  5703 ;; *************** function _init_ports *****************
  5704 ;; Defined at:
  5705 ;;		line 26 in file "main.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1
  5719 ;;      Params:         0       0       0
  5720 ;;      Locals:         0       0       0
  5721 ;;      Temps:          0       0       0
  5722 ;;      Totals:         0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used: 1
  5725 ;; Hardware stack levels required when called: 2
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text47
  5734  001A2E                     __ptext47:
  5735                           	callstack 0
  5736  001A2E                     _init_ports:
  5737                           	callstack 28
  5738                           
  5739                           ;incstack = 0
  5740  001A2E  0E03               	movlw	3
  5741  001A30  6E92               	movwf	146,c	;volatile
  5742  001A32  0EE0               	movlw	224
  5743  001A34  6E93               	movwf	147,c	;volatile
  5744  001A36  968A               	bcf	138,3,c	;volatile
  5745  001A38  908A               	bcf	138,0,c	;volatile
  5746  001A3A  928A               	bcf	138,1,c	;volatile
  5747                           
  5748                           ;main.c: 50:     TRISC = 0xC0;
  5749  001A3C  0EC0               	movlw	192
  5750  001A3E  6E94               	movwf	148,c	;volatile
  5751                           
  5752                           ;main.c: 60:     TRISD = 0x8F;
  5753  001A40  0E8F               	movlw	143
  5754  001A42  6E95               	movwf	149,c	;volatile
  5755                           
  5756                           ;main.c: 61:     LATD = 0x00;
  5757  001A44  6A8C               	clrf	140,c	;volatile
  5758                           
  5759                           ;main.c: 64:     EECON1bits.EEPGD = 1;
  5760  001A46  8EA6               	bsf	166,7,c	;volsfr
  5761                           
  5762                           ;main.c: 65:     EECON1bits.CFGS = 0;
  5763  001A48  9CA6               	bcf	166,6,c	;volsfr
  5764  001A4A  0012               	return		;funcret
  5765  001A4C                     __end_of_init_ports:
  5766                           	callstack 0
  5767                           
  5768 ;; *************** function _init_eusart *****************
  5769 ;; Defined at:
  5770 ;;		line 68 in file "main.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1
  5784 ;;      Params:         0       0       0
  5785 ;;      Locals:         0       0       0
  5786 ;;      Temps:          0       0       0
  5787 ;;      Totals:         0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used: 1
  5790 ;; Hardware stack levels required when called: 2
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text48
  5799  001ABA                     __ptext48:
  5800                           	callstack 0
  5801  001ABA                     _init_eusart:
  5802                           	callstack 28
  5803                           
  5804                           ;main.c: 69:     TXSTA = 0x24;
  5805                           
  5806                           ;incstack = 0
  5807  001ABA  0E24               	movlw	36
  5808  001ABC  6EAC               	movwf	172,c	;volatile
  5809                           
  5810                           ;main.c: 70:     RCSTA = 0x90;
  5811  001ABE  0E90               	movlw	144
  5812  001AC0  6EAB               	movwf	171,c	;volatile
  5813                           
  5814                           ;main.c: 71:     BAUDCON = 0x08;
  5815  001AC2  0E08               	movlw	8
  5816  001AC4  6EB8               	movwf	184,c	;volatile
  5817                           
  5818                           ;main.c: 72:     SPBRGH = 0x04;
  5819  001AC6  0E04               	movlw	4
  5820  001AC8  6EB0               	movwf	176,c	;volatile
  5821                           
  5822                           ;main.c: 73:     SPBRG = 0x10;
  5823  001ACA  0E10               	movlw	16
  5824  001ACC  6EAF               	movwf	175,c	;volatile
  5825  001ACE  0C10               	retlw	16	;funcret
  5826  001AD0                     __end_of_init_eusart:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function _initSIO *****************
  5830 ;; Defined at:
  5831 ;;		line 19 in file "SIO.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1
  5845 ;;      Params:         0       0       0
  5846 ;;      Locals:         0       0       0
  5847 ;;      Temps:          0       0       0
  5848 ;;      Totals:         0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 3
  5852 ;; This function calls:
  5853 ;;		_TiGetTimer
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text49
  5860  001BF8                     __ptext49:
  5861                           	callstack 0
  5862  001BF8                     _initSIO:
  5863                           	callstack 27
  5864                           
  5865                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  5866                           
  5867                           ;incstack = 0
  5868  001BF8  EC81  F00C         	call	_TiGetTimer	;wreg free
  5869  001BFC  6E1B               	movwf	_timerSIO^0,c
  5870  001BFE  0012               	return		;funcret
  5871  001C00                     __end_of_initSIO:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _initHora *****************
  5875 ;; Defined at:
  5876 ;;		line 11 in file "Hora.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1
  5890 ;;      Params:         0       0       0
  5891 ;;      Locals:         0       0       0
  5892 ;;      Temps:          0       0       0
  5893 ;;      Totals:         0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 3
  5897 ;; This function calls:
  5898 ;;		_TiGetTimer
  5899 ;; This function is called by:
  5900 ;;		_main
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text50
  5905  001C00                     __ptext50:
  5906                           	callstack 0
  5907  001C00                     _initHora:
  5908                           	callstack 27
  5909                           
  5910                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5911                           
  5912                           ;incstack = 0
  5913  001C00  EC81  F00C         	call	_TiGetTimer	;wreg free
  5914  001C04  6E20               	movwf	_timerHora^0,c
  5915  001C06  0012               	return		;funcret
  5916  001C08                     __end_of_initHora:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function _UmotorUsers *****************
  5920 ;; Defined at:
  5921 ;;		line 189 in file "Usuaris.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1
  5935 ;;      Params:         0       0       0
  5936 ;;      Locals:         0       0       0
  5937 ;;      Temps:          2       0       0
  5938 ;;      Totals:         2       0       0
  5939 ;;Total ram usage:        2 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 3
  5942 ;; This function calls:
  5943 ;;		_compareStrings
  5944 ;;		_escriureCharEEPROM
  5945 ;; This function is called by:
  5946 ;;		_main
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text51
  5951  000A74                     __ptext51:
  5952                           	callstack 0
  5953  000A74                     _UmotorUsers:
  5954                           	callstack 27
  5955                           
  5956                           ;Usuaris.c: 190:     static char state = 0;;Usuaris.c: 192:  switch(state) {
  5957                           
  5958                           ;incstack = 0
  5959  000A74  D0FC               	goto	l5735
  5960  000A76                     l750:
  5961                           
  5962                           ;Usuaris.c: 194:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  5963  000A76  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5964  000A78  B878               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5965  000A7A  D006               	goto	l751
  5966  000A7C  A678               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5967  000A7E  B478               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  5968  000A80  D003               	goto	l751
  5969                           
  5970                           ;Usuaris.c: 195:     i = 0;
  5971  000A82  6A30               	clrf	_i^0,c
  5972                           
  5973                           ;Usuaris.c: 196:     j = 0;
  5974  000A84  6A2F               	clrf	_j^0,c
  5975                           
  5976                           ;Usuaris.c: 197:    }
  5977  000A86  0012               	return	
  5978  000A88                     l751:
  5979  000A88  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5980  000A8A  D004               	goto	l753
  5981                           
  5982                           ;Usuaris.c: 199:     usuariLoguejat = -1;
  5983  000A8C  6852               	setf	_usuariLoguejat^0,c
  5984  000A8E                     l5579:
  5985                           
  5986                           ;Usuaris.c: 200:     state = 1;
  5987  000A8E  0E01               	movlw	1
  5988  000A90  6E2D               	movwf	UmotorUsers@state^0,c
  5989                           
  5990                           ;Usuaris.c: 201:    }
  5991  000A92  0C01               	retlw	1
  5992  000A94                     l753:
  5993  000A94  A878               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5994  000A96  D003               	goto	l755
  5995  000A98                     u5990:
  5996                           
  5997                           ;Usuaris.c: 203:     state = 2;
  5998  000A98  0E02               	movlw	2
  5999  000A9A  6E2D               	movwf	UmotorUsers@state^0,c
  6000                           
  6001                           ;Usuaris.c: 204:    }
  6002  000A9C  0C02               	retlw	2
  6003  000A9E                     l755:
  6004  000A9E  A678               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6005  000AA0  D015               	goto	l757
  6006                           
  6007                           ;Usuaris.c: 206:     arrayShowUsers[0] = usuariLoguejat;
  6008  000AA2  C052  F00B         	movff	_usuariLoguejat,_arrayShowUsers
  6009                           
  6010                           ;Usuaris.c: 207:     arrayShowUsers[1] = -1;
  6011  000AA6  680C               	setf	(_arrayShowUsers+1)^0,c
  6012                           
  6013                           ;Usuaris.c: 208:     arrayShowUsers[2] = -1;
  6014  000AA8  680D               	setf	(_arrayShowUsers+2)^0,c
  6015                           
  6016                           ;Usuaris.c: 209:     arrayShowUsers[3] = -1;
  6017  000AAA  680E               	setf	(_arrayShowUsers+3)^0,c
  6018                           
  6019                           ;Usuaris.c: 210:     arrayShowUsers[4] = -1;
  6020  000AAC  680F               	setf	(_arrayShowUsers+4)^0,c
  6021                           
  6022                           ;Usuaris.c: 211:     arrayShowUsers[5] = -1;
  6023  000AAE  6810               	setf	(_arrayShowUsers+5)^0,c
  6024                           
  6025                           ;Usuaris.c: 212:     arrayShowUsers[6] = -1;
  6026  000AB0  6811               	setf	(_arrayShowUsers+6)^0,c
  6027                           
  6028                           ;Usuaris.c: 213:     arrayShowUsers[7] = -1;
  6029  000AB2  6812               	setf	(_arrayShowUsers+7)^0,c
  6030                           
  6031                           ;Usuaris.c: 214:     i = 1;
  6032  000AB4  0E01               	movlw	1
  6033  000AB6  6E30               	movwf	_i^0,c
  6034                           
  6035                           ;Usuaris.c: 215:     if(numUsuaris < 7) {
  6036  000AB8  0E07               	movlw	7
  6037  000ABA  6033               	cpfslt	_numUsuaris^0,c
  6038  000ABC  D002               	goto	l758
  6039  000ABE                     u6010:
  6040                           
  6041                           ;Usuaris.c: 216:       j = 0;
  6042  000ABE  6A2F               	clrf	_j^0,c
  6043                           
  6044                           ;Usuaris.c: 217:     }
  6045  000AC0  D002               	goto	l5591
  6046  000AC2                     l758:
  6047                           
  6048                           ;Usuaris.c: 219:       j = indexNextUserStruct;
  6049  000AC2  C031  F02F         	movff	_indexNextUserStruct,_j
  6050  000AC6                     l5591:
  6051                           
  6052                           ;Usuaris.c: 221:     state = 5;
  6053  000AC6  0E05               	movlw	5
  6054  000AC8  6E2D               	movwf	UmotorUsers@state^0,c
  6055                           
  6056                           ;Usuaris.c: 222:    }
  6057  000ACA  0C05               	retlw	5
  6058  000ACC                     l757:
  6059  000ACC  A478               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6060  000ACE  0012               	return	
  6061                           
  6062                           ;Usuaris.c: 224:     do_updateScore = 0;
  6063  000AD0  9478               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6064  000AD2                     l5595:
  6065                           
  6066                           ;Usuaris.c: 225:     state = 6;
  6067  000AD2  0E06               	movlw	6
  6068  000AD4  6E2D               	movwf	UmotorUsers@state^0,c
  6069  000AD6  0C06               	retlw	6
  6070  000AD8                     l5597:
  6071                           
  6072                           ;Usuaris.c: 229:    if (i < numUsuaris) {
  6073  000AD8  5033               	movf	_numUsuaris^0,w,c
  6074  000ADA  5C30               	subwf	_i^0,w,c
  6075  000ADC  E212               	bc	l5607
  6076                           
  6077                           ;Usuaris.c: 230:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6078  000ADE  0EA1               	movlw	low _tmpUsername
  6079  000AE0  6E68               	movwf	compareStrings@a^0,c
  6080  000AE2  5030               	movf	_i^0,w,c
  6081  000AE4  0D17               	mullw	23
  6082  000AE6  0E00               	movlw	low _usuaris
  6083  000AE8  24F3               	addwf	243,w,c
  6084  000AEA  6E69               	movwf	compareStrings@b^0,c
  6085  000AEC  0E01               	movlw	high _usuaris
  6086  000AEE  20F4               	addwfc	prodh,w,c
  6087  000AF0  6E6A               	movwf	(compareStrings@b+1)^0,c
  6088  000AF2  ECD8  F00B         	call	_compareStrings	;wreg free
  6089  000AF6  0900               	iorlw	0
  6090  000AF8  E102               	bnz	l5603
  6091                           
  6092                           ;Usuaris.c: 231:      usuariLoguejat = i;
  6093  000AFA  C030  F052         	movff	_i,_usuariLoguejat
  6094  000AFE                     l5603:
  6095                           
  6096                           ;Usuaris.c: 234:     i++;
  6097  000AFE  2A30               	incf	_i^0,f,c
  6098  000B00  D7C6               	goto	l5579
  6099  000B02                     l5607:
  6100  000B02  5033               	movf	_numUsuaris^0,w,c
  6101  000B04  1830               	xorwf	_i^0,w,c
  6102  000B06  A4D8               	btfss	status,2,c
  6103  000B08  0012               	return	
  6104                           
  6105                           ;Usuaris.c: 238:     do_check_exists = 0;
  6106  000B0A  9A78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6107                           
  6108                           ;Usuaris.c: 239:     state = 0;
  6109  000B0C  6A2D               	clrf	UmotorUsers@state^0,c
  6110  000B0E  0012               	return	
  6111  000B10                     l5611:
  6112                           
  6113                           ;Usuaris.c: 243:    if (i != 8) {
  6114  000B10  0E08               	movlw	8
  6115  000B12  1830               	xorwf	_i^0,w,c
  6116  000B14  E00D               	bz	l5623
  6117                           
  6118                           ;Usuaris.c: 244:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  6119  000B16  C032  F068         	movff	_indexNextUser,escriureCharEEPROM@pos
  6120  000B1A  5030               	movf	_i^0,w,c
  6121  000B1C  0FA1               	addlw	low _tmpUsername
  6122  000B1E  D8E6               	call	PL52	;call to abstracted procedure
  6123  000B20  ECAB  F00C         	call	_escriureCharEEPROM
  6124  000B24  2A32               	incf	_indexNextUser^0,f,c
  6125                           
  6126                           ;Usuaris.c: 245:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6127  000B26  5030               	movf	_i^0,w,c
  6128  000B28  0FA1               	addlw	low _tmpUsername
  6129  000B2A  D8D7               	call	PL22	;call to abstracted procedure
  6130                           
  6131                           ;Usuaris.c: 246:     i++;
  6132  000B2C  D8BC               	call	PL16	;call to abstracted procedure
  6133  000B2E  D7B4               	goto	u5990
  6134  000B30                     l5623:
  6135  000B30  0E08               	movlw	8
  6136  000B32  1830               	xorwf	_i^0,w,c
  6137  000B34  A4D8               	btfss	status,2,c
  6138  000B36  0012               	return	
  6139                           
  6140                           ;Usuaris.c: 250:     i = 0;
  6141  000B38  6A30               	clrf	_i^0,c
  6142  000B3A                     l5627:
  6143                           
  6144                           ;Usuaris.c: 251:     state = 3;
  6145  000B3A  0E03               	movlw	3
  6146  000B3C  6E2D               	movwf	UmotorUsers@state^0,c
  6147  000B3E  0C03               	retlw	3
  6148  000B40                     l5629:
  6149                           
  6150                           ;Usuaris.c: 255:    if (i != 8) {
  6151  000B40  0E08               	movlw	8
  6152  000B42  1830               	xorwf	_i^0,w,c
  6153  000B44  E011               	bz	l5641
  6154                           
  6155                           ;Usuaris.c: 256:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  6156  000B46  C032  F068         	movff	_indexNextUser,escriureCharEEPROM@pos
  6157  000B4A  5030               	movf	_i^0,w,c
  6158  000B4C  0F98               	addlw	low _tmpPassword
  6159  000B4E  D8CE               	call	PL52	;call to abstracted procedure
  6160  000B50  ECAB  F00C         	call	_escriureCharEEPROM
  6161  000B54  2A32               	incf	_indexNextUser^0,f,c
  6162                           
  6163                           ;Usuaris.c: 257:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6164  000B56  5030               	movf	_i^0,w,c
  6165  000B58  0F98               	addlw	low _tmpPassword
  6166  000B5A  D8BF               	call	PL22	;call to abstracted procedure
  6167  000B5C  0E09               	movlw	9
  6168  000B5E  266D               	addwf	??_UmotorUsers^0,f,c
  6169  000B60  0E00               	movlw	0
  6170  000B62  226E               	addwfc	(??_UmotorUsers+1)^0,f,c
  6171                           
  6172                           ;Usuaris.c: 258:     i++;
  6173  000B64  D8A0               	call	PL16	;call to abstracted procedure
  6174  000B66  D7E9               	goto	l5627
  6175  000B68                     l5641:
  6176  000B68  0E08               	movlw	8
  6177  000B6A  1830               	xorwf	_i^0,w,c
  6178  000B6C  A4D8               	btfss	status,2,c
  6179  000B6E  0012               	return	
  6180                           
  6181                           ;Usuaris.c: 262:     do_register = 0;
  6182  000B70  9878               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6183                           
  6184                           ;Usuaris.c: 263:     indexNextUser++;
  6185  000B72  2A32               	incf	_indexNextUser^0,f,c
  6186                           
  6187                           ;Usuaris.c: 264:     if(indexNextUser == 159) indexNextUser = 16;
  6188  000B74  0E9F               	movlw	159
  6189  000B76  1832               	xorwf	_indexNextUser^0,w,c
  6190  000B78  E102               	bnz	l5651
  6191  000B7A  0E10               	movlw	16
  6192  000B7C  6E32               	movwf	_indexNextUser^0,c
  6193  000B7E                     l5651:
  6194                           
  6195                           ;Usuaris.c: 265:     indexNextUserStruct++;
  6196  000B7E  2A31               	incf	_indexNextUserStruct^0,f,c
  6197                           
  6198                           ;Usuaris.c: 266:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6199  000B80  0E08               	movlw	8
  6200  000B82  1831               	xorwf	_indexNextUserStruct^0,w,c
  6201  000B84  E101               	bnz	l5657
  6202  000B86  6A31               	clrf	_indexNextUserStruct^0,c
  6203  000B88                     l5657:
  6204                           
  6205                           ;Usuaris.c: 267:     if(numUsuaris != 8) numUsuaris++;
  6206  000B88  0E08               	movlw	8
  6207  000B8A  1833               	xorwf	_numUsuaris^0,w,c
  6208  000B8C  E001               	bz	l5661
  6209  000B8E  2A33               	incf	_numUsuaris^0,f,c
  6210  000B90                     l5661:
  6211                           
  6212                           ;Usuaris.c: 268:     state = 0;
  6213  000B90  6A2D               	clrf	UmotorUsers@state^0,c
  6214  000B92  0012               	return	
  6215  000B94                     l5663:
  6216                           
  6217                           ;Usuaris.c: 272:    if (i < numUsuaris) {
  6218  000B94  5033               	movf	_numUsuaris^0,w,c
  6219  000B96  5C30               	subwf	_i^0,w,c
  6220  000B98  E217               	bc	l5679
  6221                           
  6222                           ;Usuaris.c: 273:     if(j != usuariLoguejat){
  6223  000B9A  C052  F06D         	movff	_usuariLoguejat,??_UmotorUsers
  6224  000B9E  6A6E               	clrf	(??_UmotorUsers+1)^0,c
  6225  000BA0  BE6D               	btfsc	??_UmotorUsers^0,7,c
  6226  000BA2  066E               	decf	(??_UmotorUsers+1)^0,f,c
  6227  000BA4  502F               	movf	_j^0,w,c
  6228  000BA6  186D               	xorwf	??_UmotorUsers^0,w,c
  6229  000BA8  106E               	iorwf	(??_UmotorUsers+1)^0,w,c
  6230  000BAA  E008               	bz	l5671
  6231                           
  6232                           ;Usuaris.c: 274:       arrayShowUsers[i] = j;
  6233  000BAC  5030               	movf	_i^0,w,c
  6234  000BAE  0F0B               	addlw	low _arrayShowUsers
  6235  000BB0  6ED9               	movwf	fsr2l,c
  6236  000BB2  6ADA               	clrf	fsr2h,c
  6237  000BB4  C02F  FFDF         	movff	_j,indf2
  6238                           
  6239                           ;Usuaris.c: 275:      i++;
  6240  000BB8  2A30               	incf	_i^0,f,c
  6241                           
  6242                           ;Usuaris.c: 276:     }else{
  6243  000BBA  D001               	goto	l782
  6244  000BBC                     l5671:
  6245                           
  6246                           ;Usuaris.c: 277:       j++;
  6247  000BBC  2A2F               	incf	_j^0,f,c
  6248  000BBE                     l782:
  6249                           
  6250                           ;Usuaris.c: 279:     j++;
  6251  000BBE  2A2F               	incf	_j^0,f,c
  6252                           
  6253                           ;Usuaris.c: 280:     if(j > 7) j=0;
  6254  000BC0  0E07               	movlw	7
  6255  000BC2  642F               	cpfsgt	_j^0,c
  6256  000BC4  D780               	goto	l5591
  6257  000BC6  D77B               	goto	u6010
  6258  000BC8                     l5679:
  6259  000BC8  5033               	movf	_numUsuaris^0,w,c
  6260  000BCA  1830               	xorwf	_i^0,w,c
  6261  000BCC  A4D8               	btfss	status,2,c
  6262  000BCE  0012               	return	
  6263                           
  6264                           ;Usuaris.c: 284:     do_showUsers = 0;
  6265  000BD0  9678               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6266                           
  6267                           ;Usuaris.c: 285:     state = 0;
  6268  000BD2  6A2D               	clrf	UmotorUsers@state^0,c
  6269  000BD4  0012               	return	
  6270  000BD6                     l5683:
  6271                           
  6272                           ;Usuaris.c: 289:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6273  000BD6  0E05               	movlw	5
  6274  000BD8  6030               	cpfslt	_i^0,c
  6275  000BDA  D006               	goto	l5691
  6276  000BDC  5030               	movf	_i^0,w,c
  6277  000BDE  D877               	call	PL20	;call to abstracted procedure
  6278  000BE0  28DE               	incf	postinc2,w,c
  6279  000BE2  E002               	bz	l5691
  6280                           
  6281                           ;Usuaris.c: 290:     i++;
  6282  000BE4  2A30               	incf	_i^0,f,c
  6283  000BE6  D775               	goto	l5595
  6284  000BE8                     l5691:
  6285  000BE8  0E05               	movlw	5
  6286  000BEA  6030               	cpfslt	_i^0,c
  6287  000BEC  D007               	goto	l5697
  6288  000BEE  5030               	movf	_i^0,w,c
  6289  000BF0  D86E               	call	PL20	;call to abstracted procedure
  6290  000BF2  28DE               	incf	postinc2,w,c
  6291  000BF4  E103               	bnz	l5697
  6292  000BF6                     u6200:
  6293                           
  6294                           ;Usuaris.c: 294:     state = 7;
  6295  000BF6  0E07               	movlw	7
  6296  000BF8  6E2D               	movwf	UmotorUsers@state^0,c
  6297                           
  6298                           ;Usuaris.c: 295:    }
  6299  000BFA  0C07               	retlw	7
  6300  000BFC                     l5697:
  6301  000BFC  0E04               	movlw	4
  6302  000BFE  6430               	cpfsgt	_i^0,c
  6303  000C00  0C04               	retlw	4
  6304                           
  6305                           ;Usuaris.c: 297:     i = 0;
  6306  000C02  6A30               	clrf	_i^0,c
  6307  000C04                     l5701:
  6308                           
  6309                           ;Usuaris.c: 298:     state = 8;
  6310  000C04  0E08               	movlw	8
  6311  000C06  6E2D               	movwf	UmotorUsers@state^0,c
  6312  000C08  0C08               	retlw	8
  6313  000C0A                     l5703:
  6314                           
  6315                           ;Usuaris.c: 302:    puntuacions[i].score = scoreUsr;
  6316  000C0A  5030               	movf	_i^0,w,c
  6317  000C0C  D85A               	call	PL18	;call to abstracted procedure
  6318  000C0E  C02E  FFDF         	movff	_scoreUsr,indf2
  6319                           
  6320                           ;Usuaris.c: 303:    puntuacions[i].indexStruct = usuariLoguejat;
  6321  000C12  5030               	movf	_i^0,w,c
  6322  000C14  D85C               	call	PL20	;call to abstracted procedure
  6323  000C16  C052  FFDF         	movff	_usuariLoguejat,indf2
  6324                           
  6325                           ;Usuaris.c: 304:    i = i+i;
  6326  000C1A  0E02               	movlw	2
  6327  000C1C  0230               	mulwf	_i^0,c
  6328  000C1E  50F3               	movf	prodl,w,c
  6329  000C20  6E30               	movwf	_i^0,c
  6330                           
  6331                           ;Usuaris.c: 305:    escriureCharEEPROM(usuariLoguejat,200+i);
  6332  000C22  5030               	movf	_i^0,w,c
  6333  000C24  0FC8               	addlw	200
  6334  000C26  6E68               	movwf	escriureCharEEPROM@pos^0,c
  6335  000C28  5052               	movf	_usuariLoguejat^0,w,c
  6336  000C2A  ECAB  F00C         	call	_escriureCharEEPROM
  6337                           
  6338                           ;Usuaris.c: 306:    i++;
  6339  000C2E  2A30               	incf	_i^0,f,c
  6340                           
  6341                           ;Usuaris.c: 307:    escriureCharEEPROM(scoreUsr,200+i);
  6342  000C30  5030               	movf	_i^0,w,c
  6343  000C32  0FC8               	addlw	200
  6344  000C34  6E68               	movwf	escriureCharEEPROM@pos^0,c
  6345  000C36  502E               	movf	_scoreUsr^0,w,c
  6346  000C38  ECAB  F00C         	call	_escriureCharEEPROM
  6347  000C3C  D7A9               	goto	l5661
  6348  000C3E                     l5715:
  6349                           
  6350                           ;Usuaris.c: 311:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6351  000C3E  5030               	movf	_i^0,w,c
  6352  000C40  D840               	call	PL18	;call to abstracted procedure
  6353  000C42  502E               	movf	_scoreUsr^0,w,c
  6354  000C44  5CDE               	subwf	postinc2,w,c
  6355  000C46  E305               	bnc	l5723
  6356  000C48  0E05               	movlw	5
  6357  000C4A  6030               	cpfslt	_i^0,c
  6358  000C4C  D002               	goto	l5723
  6359                           
  6360                           ;Usuaris.c: 312:     i++;
  6361  000C4E  2A30               	incf	_i^0,f,c
  6362  000C50  D7D9               	goto	l5701
  6363  000C52                     l5723:
  6364  000C52  0E04               	movlw	4
  6365  000C54  6430               	cpfsgt	_i^0,c
  6366  000C56  D001               	goto	l5727
  6367  000C58  D79B               	goto	l5661
  6368  000C5A                     l5727:
  6369  000C5A  5030               	movf	_i^0,w,c
  6370  000C5C  D832               	call	PL18	;call to abstracted procedure
  6371  000C5E  502E               	movf	_scoreUsr^0,w,c
  6372  000C60  5CDE               	subwf	postinc2,w,c
  6373  000C62  B0D8               	btfsc	status,0,c
  6374  000C64  0012               	return	
  6375  000C66  0E05               	movlw	5
  6376  000C68  6030               	cpfslt	_i^0,c
  6377  000C6A  0C05               	retlw	5
  6378  000C6C  D7C4               	goto	u6200
  6379  000C6E                     l5735:
  6380  000C6E  502D               	movf	UmotorUsers@state^0,w,c
  6381  000C70  6E6D               	movwf	??_UmotorUsers^0,c
  6382  000C72  6A6E               	clrf	(??_UmotorUsers+1)^0,c
  6383                           
  6384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6385                           ; Switch size 1, requested type "space"
  6386                           ; Number of cases is 1, Range of values is 0 to 0
  6387                           ; switch strategies available:
  6388                           ; Name         Instructions Cycles
  6389                           ; simple_byte            4     3 (average)
  6390                           ;	Chosen strategy is simple_byte
  6391  000C74  506E               	movf	(??_UmotorUsers+1)^0,w,c
  6392  000C76  A4D8               	btfss	status,2,c
  6393  000C78  0012               	return	
  6394                           
  6395                           ; Switch size 1, requested type "space"
  6396                           ; Number of cases is 8, Range of values is 0 to 8
  6397                           ; switch strategies available:
  6398                           ; Name         Instructions Cycles
  6399                           ; simple_byte           25    13 (average)
  6400                           ;	Chosen strategy is simple_byte
  6401  000C7A  506D               	movf	??_UmotorUsers^0,w,c
  6402  000C7C  E101 D6FB          	bz	l750
  6403  000C80  0A01               	xorlw	1	; case 1
  6404  000C82  E101 D729          	bz	l5597
  6405  000C86  0A03               	xorlw	3	; case 2
  6406  000C88  E101 D742          	bz	l5611
  6407  000C8C  0A01               	xorlw	1	; case 3
  6408  000C8E  E101 D757          	bz	l5629
  6409  000C92  0A06               	xorlw	6	; case 5
  6410  000C94  E101 D77E          	bz	l5663
  6411  000C98  0A03               	xorlw	3	; case 6
  6412  000C9A  E09D               	bz	l5683
  6413  000C9C  0A01               	xorlw	1	; case 7
  6414  000C9E  E0B5               	bz	l5703
  6415  000CA0  0A0F               	xorlw	15	; case 8
  6416  000CA2  E0CD               	bz	l5715
  6417  000CA4  0012               	return		;funcret
  6418  000CA6                     __end_of_UmotorUsers:
  6419                           	callstack 0
  6420  000CA6                     PL16:
  6421                           	callstack 27
  6422  000CA6  50F3               	movf	243,w,c
  6423  000CA8  266D               	addwf	??_UmotorUsers^0,f,c
  6424  000CAA  50F4               	movf	244,w,c
  6425  000CAC  226E               	addwfc	(??_UmotorUsers+1)^0,f,c
  6426  000CAE  5030               	movf	_i^0,w,c
  6427  000CB0  246D               	addwf	??_UmotorUsers^0,w,c
  6428  000CB2  6EE1               	movwf	fsr1l,c
  6429  000CB4  0E00               	movlw	0
  6430  000CB6  206E               	addwfc	(??_UmotorUsers+1)^0,w,c
  6431  000CB8  6EE2               	movwf	fsr1h,c
  6432  000CBA  CFDF FFE7          	movff	indf2,indf1
  6433  000CBE  2A30               	incf	_i^0,f,c
  6434  000CC0  0012               	return	
  6435  000CC2                     __end_ofPL16:
  6436                           	callstack 0
  6437  000CC2                     PL18:
  6438                           	callstack 27
  6439  000CC2  0D02               	mullw	2
  6440  000CC4  50F3               	movf	243,w,c
  6441  000CC6  0F02               	addlw	low (_puntuacions+1)
  6442  000CC8  6ED9               	movwf	fsr2l,c
  6443  000CCA  6ADA               	clrf	fsr2h,c
  6444  000CCC  0012               	return	
  6445  000CCE                     __end_ofPL18:
  6446                           	callstack 0
  6447  000CCE                     PL20:
  6448                           	callstack 27
  6449  000CCE  0D02               	mullw	2
  6450  000CD0  50F3               	movf	243,w,c
  6451  000CD2  0F01               	addlw	low _puntuacions
  6452  000CD4  6ED9               	movwf	fsr2l,c
  6453  000CD6  6ADA               	clrf	fsr2h,c
  6454  000CD8  0012               	return	
  6455  000CDA                     __end_ofPL20:
  6456                           	callstack 0
  6457  000CDA                     PL22:
  6458                           	callstack 27
  6459  000CDA  6ED9               	movwf	fsr2l,c
  6460  000CDC  6ADA               	clrf	fsr2h,c
  6461  000CDE  5031               	movf	_indexNextUserStruct^0,w,c
  6462  000CE0  0D17               	mullw	23
  6463  000CE2  0E00               	movlw	low _usuaris
  6464  000CE4  6E6D               	movwf	??_UmotorUsers^0,c
  6465  000CE6  0E01               	movlw	high _usuaris
  6466  000CE8  6E6E               	movwf	(??_UmotorUsers+1)^0,c
  6467  000CEA  0012               	return	
  6468  000CEC                     __end_ofPL22:
  6469                           	callstack 0
  6470  000CEC                     PL52:
  6471                           	callstack 27
  6472  000CEC  6ED9               	movwf	fsr2l,c
  6473  000CEE  6ADA               	clrf	fsr2h,c
  6474  000CF0  50DF               	movf	indf2,w,c
  6475  000CF2  0012               	return	
  6476  000CF4                     __end_ofPL52:
  6477                           	callstack 0
  6478                           
  6479 ;; *************** function _escriureCharEEPROM *****************
  6480 ;; Defined at:
  6481 ;;		line 67 in file "Usuaris.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  c               1    wreg     unsigned char 
  6484 ;;  pos             1    5[COMRAM] unsigned char 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  c               1    6[COMRAM] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1
  6496 ;;      Params:         1       0       0
  6497 ;;      Locals:         1       0       0
  6498 ;;      Temps:          0       0       0
  6499 ;;      Totals:         2       0       0
  6500 ;;Total ram usage:        2 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 2
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_UmotorUsers
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text52
  6511  001956                     __ptext52:
  6512                           	callstack 0
  6513  001956                     _escriureCharEEPROM:
  6514                           	callstack 27
  6515                           
  6516                           ;incstack = 0
  6517                           ;escriureCharEEPROM@c stored from wreg
  6518  001956  6E69               	movwf	escriureCharEEPROM@c^0,c
  6519                           
  6520                           ;Usuaris.c: 68:     EEADR = pos;
  6521  001958  C068  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6522                           
  6523                           ;Usuaris.c: 69:     EEDATA = c;
  6524  00195C  C069  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6525                           
  6526                           ;Usuaris.c: 70:     EECON1bits.EEPGD = 0;
  6527  001960  9EA6               	bcf	166,7,c	;volsfr
  6528                           
  6529                           ;Usuaris.c: 71:     EECON1bits.CFGS = 0;
  6530  001962  9CA6               	bcf	166,6,c	;volsfr
  6531                           
  6532                           ;Usuaris.c: 72:     EECON1bits.WREN = 1;
  6533  001964  84A6               	bsf	166,2,c	;volsfr
  6534                           
  6535                           ;Usuaris.c: 73:     INTCONbits.GIE = 0;
  6536  001966  9EF2               	bcf	242,7,c	;volatile
  6537                           
  6538                           ;Usuaris.c: 74:     EECON2 = 85;
  6539  001968  0E55               	movlw	85
  6540  00196A  6EA7               	movwf	167,c	;volsfr
  6541                           
  6542                           ;Usuaris.c: 75:     EECON2 = 170;
  6543  00196C  0EAA               	movlw	170
  6544  00196E  6EA7               	movwf	167,c	;volsfr
  6545                           
  6546                           ;Usuaris.c: 76:     EECON1bits.WR = 1;
  6547  001970  82A6               	bsf	166,1,c	;volsfr
  6548  001972                     l716:
  6549  001972  B2A6               	btfsc	166,1,c	;volsfr
  6550  001974  D7FE               	goto	l716
  6551                           
  6552                           ;Usuaris.c: 78:     INTCONbits.GIE = 1;
  6553  001976  8EF2               	bsf	242,7,c	;volatile
  6554                           
  6555                           ;Usuaris.c: 79:     EECON1bits.WREN = 0;
  6556  001978  94A6               	bcf	166,2,c	;volsfr
  6557  00197A  0012               	return		;funcret
  6558  00197C                     __end_of_escriureCharEEPROM:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _compareStrings *****************
  6562 ;; Defined at:
  6563 ;;		line 173 in file "Usuaris.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6566 ;;		 -> tmpUsername(9), 
  6567 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6568 ;;		 -> usuaris.username(9), usuaris(184), 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1
  6580 ;;      Params:         3       0       0
  6581 ;;      Locals:         0       0       0
  6582 ;;      Temps:          2       0       0
  6583 ;;      Totals:         5       0       0
  6584 ;;Total ram usage:        5 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 2
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_UmotorUsers
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text53
  6595  0017B0                     __ptext53:
  6596                           	callstack 0
  6597  0017B0                     _compareStrings:
  6598                           	callstack 27
  6599                           
  6600                           ;Usuaris.c: 174:     while (*a){
  6601                           
  6602                           ;incstack = 0
  6603  0017B0  D00A               	goto	l4295
  6604  0017B2                     l4289:
  6605                           
  6606                           ;Usuaris.c: 175:         if (*a != *b)break;
  6607  0017B2  D813               	call	PL50	;call to abstracted procedure
  6608  0017B4  5068               	movf	compareStrings@a^0,w,c
  6609  0017B6  6EE1               	movwf	fsr1l,c
  6610  0017B8  6AE2               	clrf	fsr1h,c
  6611  0017BA  50DE               	movf	postinc2,w,c
  6612  0017BC  18E6               	xorwf	postinc1,w,c
  6613  0017BE  E105               	bnz	u3730
  6614                           
  6615                           ;Usuaris.c: 176:         a++;
  6616  0017C0  2A68               	incf	compareStrings@a^0,f,c
  6617                           
  6618                           ;Usuaris.c: 177:         b++;
  6619  0017C2  4A69               	infsnz	compareStrings@b^0,f,c
  6620  0017C4  2A6A               	incf	(compareStrings@b+1)^0,f,c
  6621  0017C6                     l4295:
  6622                           
  6623                           ;Usuaris.c: 174:     while (*a){
  6624  0017C6  D80E               	call	PL72	;call to abstracted procedure
  6625  0017C8  E1F4               	bnz	l4289
  6626  0017CA                     u3730:
  6627                           
  6628                           ;Usuaris.c: 179:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6629  0017CA  D807               	call	PL50	;call to abstracted procedure
  6630  0017CC  50DF               	movf	indf2,w,c
  6631  0017CE  6E6B               	movwf	??_compareStrings^0,c
  6632  0017D0  D809               	call	PL72	;call to abstracted procedure
  6633  0017D2  6E6C               	movwf	(??_compareStrings+1)^0,c
  6634  0017D4  506B               	movf	??_compareStrings^0,w,c
  6635  0017D6  5C6C               	subwf	(??_compareStrings+1)^0,w,c
  6636  0017D8  0012               	return		;funcret
  6637  0017DA                     __end_of_compareStrings:
  6638                           	callstack 0
  6639  0017DA                     PL50:
  6640                           	callstack 27
  6641  0017DA  C069  FFD9         	movff	compareStrings@b,fsr2l
  6642  0017DE  C06A  FFDA         	movff	compareStrings@b+1,fsr2h
  6643  0017E2  0012               	return	
  6644  0017E4                     __end_ofPL50:
  6645                           	callstack 0
  6646  0017E4                     PL72:
  6647                           	callstack 27
  6648  0017E4  5068               	movf	compareStrings@a^0,w,c
  6649  0017E6  6ED9               	movwf	fsr2l,c
  6650  0017E8  6ADA               	clrf	fsr2h,c
  6651  0017EA  50DF               	movf	indf2,w,c
  6652  0017EC  0012               	return	
  6653  0017EE                     __end_ofPL72:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function _Uinit *****************
  6657 ;; Defined at:
  6658 ;;		line 88 in file "Usuaris.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  i               1    6[COMRAM] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1
  6672 ;;      Params:         0       0       0
  6673 ;;      Locals:         1       0       0
  6674 ;;      Temps:          0       0       0
  6675 ;;      Totals:         1       0       0
  6676 ;;Total ram usage:        1 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 3
  6679 ;; This function calls:
  6680 ;;		_llegirCharEEPROM
  6681 ;; This function is called by:
  6682 ;;		_main
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text54
  6687  001864                     __ptext54:
  6688                           	callstack 0
  6689  001864                     _Uinit:
  6690                           	callstack 27
  6691                           
  6692                           ;Usuaris.c: 131:     puntuacions[0].indexStruct = -1;
  6693                           
  6694                           ;incstack = 0
  6695  001864  6801               	setf	_puntuacions^0,c
  6696                           
  6697                           ;Usuaris.c: 132:     for(char i = 0; i<5; i++){
  6698  001866  6A69               	clrf	Uinit@i^0,c
  6699  001868                     l2645:
  6700                           
  6701                           ;Usuaris.c: 133:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  6702  001868  5069               	movf	Uinit@i^0,w,c
  6703  00186A  EC67  F006         	call	PL20	;call to abstracted procedure
  6704  00186E  5069               	movf	Uinit@i^0,w,c
  6705  001870  0D02               	mullw	2
  6706  001872  50F3               	movf	243,w,c
  6707  001874  0FC8               	addlw	200
  6708  001876  EC8B  F00D         	call	_llegirCharEEPROM
  6709  00187A  6EDF               	movwf	indf2,c
  6710                           
  6711                           ;Usuaris.c: 134:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  6712  00187C  5069               	movf	Uinit@i^0,w,c
  6713  00187E  EC61  F006         	call	PL18	;call to abstracted procedure
  6714  001882  5069               	movf	Uinit@i^0,w,c
  6715  001884  0D02               	mullw	2
  6716  001886  50F3               	movf	243,w,c
  6717  001888  0FC9               	addlw	201
  6718  00188A  EC8B  F00D         	call	_llegirCharEEPROM
  6719  00188E  6EDF               	movwf	indf2,c
  6720                           
  6721                           ;Usuaris.c: 135:     }
  6722  001890  2A69               	incf	Uinit@i^0,f,c
  6723  001892  0E04               	movlw	4
  6724  001894  6469               	cpfsgt	Uinit@i^0,c
  6725  001896  D7E8               	goto	l2645
  6726  001898  0C04               	retlw	4
  6727  00189A                     __end_of_Uinit:
  6728                           	callstack 0
  6729                           
  6730 ;; *************** function _llegirCharEEPROM *****************
  6731 ;; Defined at:
  6732 ;;		line 81 in file "Usuaris.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  pos             1    wreg     unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  pos             1    5[COMRAM] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      unsigned char 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1
  6746 ;;      Params:         0       0       0
  6747 ;;      Locals:         1       0       0
  6748 ;;      Temps:          0       0       0
  6749 ;;      Totals:         1       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 2
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_Uinit
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text55
  6761  001B16                     __ptext55:
  6762                           	callstack 0
  6763  001B16                     _llegirCharEEPROM:
  6764                           	callstack 27
  6765                           
  6766                           ;incstack = 0
  6767                           ;llegirCharEEPROM@pos stored from wreg
  6768  001B16  6E68               	movwf	llegirCharEEPROM@pos^0,c
  6769                           
  6770                           ;Usuaris.c: 82:     EEADR = pos;
  6771  001B18  C068  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  6772                           
  6773                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  6774  001B1C  9EA6               	bcf	166,7,c	;volsfr
  6775                           
  6776                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  6777  001B1E  9CA6               	bcf	166,6,c	;volsfr
  6778                           
  6779                           ;Usuaris.c: 85:     EECON1bits.RD = 1;
  6780  001B20  80A6               	bsf	166,0,c	;volsfr
  6781                           
  6782                           ;Usuaris.c: 86:     return EEDATA;
  6783  001B22  50A8               	movf	168,w,c	;volatile
  6784  001B24  0012               	return		;funcret
  6785  001B26                     __end_of_llegirCharEEPROM:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _TiInitTimer *****************
  6789 ;; Defined at:
  6790 ;;		line 18 in file "TiTTimer.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1
  6804 ;;      Params:         0       0       0
  6805 ;;      Locals:         0       0       0
  6806 ;;      Temps:          0       0       0
  6807 ;;      Totals:         0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 2
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_main
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text56
  6819  00192E                     __ptext56:
  6820                           	callstack 0
  6821  00192E                     _TiInitTimer:
  6822                           	callstack 28
  6823                           
  6824                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6825                           
  6826                           ;incstack = 0
  6827  00192E  9ED0               	bcf	208,7,c	;volatile
  6828                           
  6829                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6830  001930  8EF2               	bsf	242,7,c	;volatile
  6831                           
  6832                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6833  001932  8CF2               	bsf	242,6,c	;volatile
  6834                           
  6835                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6836  001934  8AF2               	bsf	242,5,c	;volatile
  6837                           
  6838                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6839  001936  94F2               	bcf	242,2,c	;volatile
  6840                           
  6841                           ;TiTTimer.c: 25:     T0CON = 136;
  6842  001938  0E88               	movlw	136
  6843  00193A  6ED5               	movwf	213,c	;volatile
  6844                           
  6845                           ;TiTTimer.c: 27:     TMR0H = 223;
  6846                           
  6847                           ;TiTTimer.c: 28:     TMR0L = 148;
  6848  00193C  ECD3  F00B         	call	PL60	;call to abstracted procedure
  6849                           
  6850                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6851  001940  8ED5               	bsf	213,7,c	;volatile
  6852                           
  6853                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6854  001942  6A3A               	clrf	_counter^0,c
  6855  001944                     l4395:
  6856  001944  0E07               	movlw	7
  6857  001946  643A               	cpfsgt	_counter^0,c
  6858  001948  D001               	goto	l4399
  6859  00194A  0C07               	retlw	7
  6860  00194C                     l4399:
  6861                           
  6862                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6863  00194C  EC90  F00C         	call	PL14	;call to abstracted procedure
  6864  001950  6ADF               	clrf	indf2,c
  6865                           
  6866                           ;TiTTimer.c: 33:     }
  6867  001952  2A3A               	incf	_counter^0,f,c
  6868  001954  D7F7               	goto	l4395
  6869  001956                     __end_of_TiInitTimer:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function _TeTeclat *****************
  6873 ;; Defined at:
  6874 ;;		line 21 in file "TeTeclat.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1
  6888 ;;      Params:         0       0       0
  6889 ;;      Locals:         0       0       0
  6890 ;;      Temps:          3       0       0
  6891 ;;      Totals:         3       0       0
  6892 ;;Total ram usage:        3 bytes
  6893 ;; Hardware stack levels used: 1
  6894 ;; Hardware stack levels required when called: 3
  6895 ;; This function calls:
  6896 ;;		_MsetNovaTecla
  6897 ;;		_SsetNovaTecla
  6898 ;;		_TiGetTics
  6899 ;;		_TiResetTics
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text57
  6906  0010C0                     __ptext57:
  6907                           	callstack 0
  6908  0010C0                     _TeTeclat:
  6909                           	callstack 27
  6910                           
  6911                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6912                           
  6913                           ;incstack = 0
  6914  0010C0  A083               	btfss	131,0,c	;volatile
  6915  0010C2  D003               	goto	u6270
  6916  0010C4  6A6F               	clrf	??_TeTeclat^0,c
  6917  0010C6  2A6F               	incf	??_TeTeclat^0,f,c
  6918  0010C8  D001               	goto	u6278
  6919  0010CA                     u6270:
  6920  0010CA  6A6F               	clrf	??_TeTeclat^0,c
  6921  0010CC                     u6278:
  6922  0010CC  0E01               	movlw	1
  6923  0010CE  A283               	btfss	131,1,c	;volatile
  6924  0010D0  0E00               	movlw	0
  6925  0010D2  0D02               	mullw	2
  6926  0010D4  CFF3 F070          	movff	prodl,??_TeTeclat+1
  6927  0010D8  0E01               	movlw	1
  6928  0010DA  A483               	btfss	131,2,c	;volatile
  6929  0010DC  0E00               	movlw	0
  6930  0010DE  0D03               	mullw	3
  6931  0010E0  CFF3 F071          	movff	prodl,??_TeTeclat+2
  6932  0010E4  0E01               	movlw	1
  6933  0010E6  A683               	btfss	131,3,c	;volatile
  6934  0010E8  0E00               	movlw	0
  6935  0010EA  0D04               	mullw	4
  6936  0010EC  50F3               	movf	243,w,c
  6937  0010EE  2471               	addwf	(??_TeTeclat+2)^0,w,c
  6938  0010F0  2470               	addwf	(??_TeTeclat+1)^0,w,c
  6939  0010F2  246F               	addwf	??_TeTeclat^0,w,c
  6940  0010F4  6E3B               	movwf	TeTeclat@files^0,c
  6941                           
  6942                           ;TeTeclat.c: 26:  switch(state) {
  6943  0010F6  D058               	goto	l5817
  6944  0010F8                     l5743:
  6945                           
  6946                           ;TeTeclat.c: 28:    if (files==0) {
  6947  0010F8  503B               	movf	TeTeclat@files^0,w,c
  6948  0010FA  E106               	bnz	l5749
  6949                           
  6950                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  6951  0010FC  888C               	bsf	140,4,c	;volatile
  6952                           
  6953                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  6954  0010FE  9A8C               	bcf	140,5,c	;volatile
  6955                           
  6956                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  6957  001100  9C8C               	bcf	140,6,c	;volatile
  6958                           
  6959                           ;TeTeclat.c: 32:     cols=0;
  6960  001102  6A3C               	clrf	TeTeclat@cols^0,c
  6961  001104                     l5747:
  6962                           
  6963                           ;TeTeclat.c: 33:     state++;
  6964  001104  2A3D               	incf	TeTeclat@state^0,f,c
  6965                           
  6966                           ;TeTeclat.c: 34:    }
  6967  001106  0012               	return	
  6968  001108                     l5749:
  6969  001108  503B               	movf	TeTeclat@files^0,w,c
  6970  00110A  B4D8               	btfsc	status,2,c
  6971  00110C  0012               	return	
  6972                           
  6973                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  6974  00110E  503E               	movf	_tiTeclat^0,w,c
  6975  001110  EC42  F00D         	call	_TiResetTics
  6976  001114                     l5753:
  6977                           
  6978                           ;TeTeclat.c: 37:     state = 3;
  6979  001114  0E03               	movlw	3
  6980  001116  6E3D               	movwf	TeTeclat@state^0,c
  6981  001118  0C03               	retlw	3
  6982  00111A                     l5755:
  6983                           
  6984                           ;TeTeclat.c: 41:    if (files==0) {
  6985  00111A  503B               	movf	TeTeclat@files^0,w,c
  6986  00111C  E106               	bnz	l5763
  6987                           
  6988                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  6989  00111E  988C               	bcf	140,4,c	;volatile
  6990                           
  6991                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  6992  001120  8A8C               	bsf	140,5,c	;volatile
  6993                           
  6994                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  6995  001122  9C8C               	bcf	140,6,c	;volatile
  6996                           
  6997                           ;TeTeclat.c: 45:     cols=1;
  6998  001124  0E01               	movlw	1
  6999  001126  6E3C               	movwf	TeTeclat@cols^0,c
  7000  001128  D7ED               	goto	l5747
  7001  00112A                     l5763:
  7002  00112A  503B               	movf	TeTeclat@files^0,w,c
  7003  00112C  B4D8               	btfsc	status,2,c
  7004  00112E  0012               	return	
  7005                           
  7006                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7007  001130  503E               	movf	_tiTeclat^0,w,c
  7008  001132  EC42  F00D         	call	_TiResetTics
  7009  001136  D7EE               	goto	l5753
  7010  001138                     l5769:
  7011                           
  7012                           ;TeTeclat.c: 54:    if (files==0) {
  7013  001138  503B               	movf	TeTeclat@files^0,w,c
  7014  00113A  E107               	bnz	l5777
  7015                           
  7016                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7017  00113C  988C               	bcf	140,4,c	;volatile
  7018                           
  7019                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7020  00113E  9A8C               	bcf	140,5,c	;volatile
  7021                           
  7022                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7023  001140  8C8C               	bsf	140,6,c	;volatile
  7024                           
  7025                           ;TeTeclat.c: 58:     cols=2;
  7026  001142  0E02               	movlw	2
  7027  001144  6E3C               	movwf	TeTeclat@cols^0,c
  7028  001146                     l5775:
  7029                           
  7030                           ;TeTeclat.c: 59:     state = 0;
  7031  001146  6A3D               	clrf	TeTeclat@state^0,c
  7032                           
  7033                           ;TeTeclat.c: 60:    }
  7034  001148  0012               	return	
  7035  00114A                     l5777:
  7036  00114A  503B               	movf	TeTeclat@files^0,w,c
  7037  00114C  B4D8               	btfsc	status,2,c
  7038  00114E  0012               	return	
  7039                           
  7040                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7041  001150  503E               	movf	_tiTeclat^0,w,c
  7042  001152  EC42  F00D         	call	_TiResetTics
  7043  001156  D7D6               	goto	l5747
  7044  001158                     l5783:
  7045                           
  7046                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7047  001158  503E               	movf	_tiTeclat^0,w,c
  7048  00115A  ECBE  F00C         	call	_TiGetTics
  7049  00115E  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  7050  001160  0012               	return	
  7051  001162  D7D0               	goto	l5747
  7052  001164                     l5787:
  7053                           
  7054                           ;TeTeclat.c: 72:    if (files==0) {
  7055  001164  503B               	movf	TeTeclat@files^0,w,c
  7056  001166  E103               	bnz	l5791
  7057                           
  7058                           ;TeTeclat.c: 73:     state = 1;
  7059  001168  0E01               	movlw	1
  7060  00116A  6E3D               	movwf	TeTeclat@state^0,c
  7061                           
  7062                           ;TeTeclat.c: 74:    }
  7063  00116C  0C01               	retlw	1
  7064  00116E                     l5791:
  7065  00116E  503B               	movf	TeTeclat@files^0,w,c
  7066  001170  B4D8               	btfsc	status,2,c
  7067  001172  0012               	return	
  7068                           
  7069                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7070  001174  D830               	call	PL24	;call to abstracted procedure
  7071  001176  EC08  F00E         	call	_MsetNovaTecla
  7072                           
  7073                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7074  00117A  D82D               	call	PL24	;call to abstracted procedure
  7075  00117C  EC04  F00E         	call	_SsetNovaTecla
  7076  001180  D7C1               	goto	l5747
  7077  001182                     l5797:
  7078                           
  7079                           ;TeTeclat.c: 83:    if (files==0) {
  7080  001182  503B               	movf	TeTeclat@files^0,w,c
  7081  001184  A4D8               	btfss	status,2,c
  7082  001186  0012               	return	
  7083                           
  7084                           ;TeTeclat.c: 84:     TiResetTics(tiTeclat);
  7085  001188  503E               	movf	_tiTeclat^0,w,c
  7086  00118A  EC42  F00D         	call	_TiResetTics
  7087  00118E  D7BA               	goto	l5747
  7088  001190                     l5803:
  7089                           
  7090                           ;TeTeclat.c: 89:    if (TiGetTics(tiTeclat)>=0) {
  7091  001190  503E               	movf	_tiTeclat^0,w,c
  7092  001192  ECBE  F00C         	call	_TiGetTics
  7093  001196  D7E3               	goto	L3
  7094  001198                     l5807:
  7095                           
  7096                           ;TeTeclat.c: 94:    if (files!=0) {
  7097  001198  503B               	movf	TeTeclat@files^0,w,c
  7098  00119A  E003               	bz	l5811
  7099                           
  7100                           ;TeTeclat.c: 95:     state = 5;
  7101  00119C  0E05               	movlw	5
  7102  00119E  6E3D               	movwf	TeTeclat@state^0,c
  7103                           
  7104                           ;TeTeclat.c: 96:    }
  7105  0011A0  0C05               	retlw	5
  7106  0011A2                     l5811:
  7107  0011A2  503B               	movf	TeTeclat@files^0,w,c
  7108  0011A4  E0D0               	bz	l5775
  7109  0011A6  0012               	return	
  7110  0011A8                     l5817:
  7111  0011A8  503D               	movf	TeTeclat@state^0,w,c
  7112  0011AA  6E6F               	movwf	??_TeTeclat^0,c
  7113  0011AC  6A70               	clrf	(??_TeTeclat+1)^0,c
  7114                           
  7115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7116                           ; Switch size 1, requested type "space"
  7117                           ; Number of cases is 1, Range of values is 0 to 0
  7118                           ; switch strategies available:
  7119                           ; Name         Instructions Cycles
  7120                           ; simple_byte            4     3 (average)
  7121                           ;	Chosen strategy is simple_byte
  7122  0011AE  5070               	movf	(??_TeTeclat+1)^0,w,c
  7123  0011B0  A4D8               	btfss	status,2,c
  7124  0011B2  0012               	return	
  7125                           
  7126                           ; Switch size 1, requested type "space"
  7127                           ; Number of cases is 8, Range of values is 0 to 7
  7128                           ; switch strategies available:
  7129                           ; Name         Instructions Cycles
  7130                           ; simple_byte           25    13 (average)
  7131                           ;	Chosen strategy is simple_byte
  7132  0011B4  506F               	movf	??_TeTeclat^0,w,c
  7133  0011B6  E0A0               	bz	l5743
  7134  0011B8  0A01               	xorlw	1	; case 1
  7135  0011BA  E0AF               	bz	l5755
  7136  0011BC  0A03               	xorlw	3	; case 2
  7137  0011BE  E0BC               	bz	l5769
  7138  0011C0  0A01               	xorlw	1	; case 3
  7139  0011C2  E0CA               	bz	l5783
  7140  0011C4  0A07               	xorlw	7	; case 4
  7141  0011C6  E0CE               	bz	l5787
  7142  0011C8  0A01               	xorlw	1	; case 5
  7143  0011CA  E0DB               	bz	l5797
  7144  0011CC  0A03               	xorlw	3	; case 6
  7145  0011CE  E0E0               	bz	l5803
  7146  0011D0  0A01               	xorlw	1	; case 7
  7147  0011D2  E0E2               	bz	l5807
  7148  0011D4  0012               	return		;funcret
  7149  0011D6                     __end_of_TeTeclat:
  7150                           	callstack 0
  7151  0011D6                     PL24:
  7152                           	callstack 27
  7153  0011D6  503B               	movf	TeTeclat@files^0,w,c
  7154  0011D8  0D03               	mullw	3
  7155  0011DA  50F3               	movf	243,w,c
  7156  0011DC  0FA7               	addlw	low (_teclaPremuda+253)
  7157  0011DE  243C               	addwf	TeTeclat@cols^0,w,c
  7158  0011E0  6ED9               	movwf	fsr2l,c
  7159  0011E2  6ADA               	clrf	fsr2h,c
  7160  0011E4  50DF               	movf	indf2,w,c
  7161  0011E6  0012               	return	
  7162  0011E8                     __end_ofPL24:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function _SsetNovaTecla *****************
  7166 ;; Defined at:
  7167 ;;		line 124 in file "Ssms.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  tecla           1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  tecla           1    5[COMRAM] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1
  7181 ;;      Params:         0       0       0
  7182 ;;      Locals:         1       0       0
  7183 ;;      Temps:          0       0       0
  7184 ;;      Totals:         1       0       0
  7185 ;;Total ram usage:        1 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 2
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_TeTeclat
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text58
  7196  001C08                     __ptext58:
  7197                           	callstack 0
  7198  001C08                     _SsetNovaTecla:
  7199                           	callstack 27
  7200                           
  7201                           ;incstack = 0
  7202                           ;SsetNovaTecla@tecla stored from wreg
  7203  001C08  6E68               	movwf	SsetNovaTecla@tecla^0,c
  7204                           
  7205                           ;Ssms.c: 125:     novaTecla = tecla;
  7206  001C0A  C068  F058         	movff	SsetNovaTecla@tecla,_novaTecla
  7207  001C0E  0012               	return		;funcret
  7208  001C10                     __end_of_SsetNovaTecla:
  7209                           	callstack 0
  7210                           
  7211 ;; *************** function _MsetNovaTecla *****************
  7212 ;; Defined at:
  7213 ;;		line 29 in file "Menu.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  tecla           1    wreg     unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  tecla           1    5[COMRAM] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1    wreg      void 
  7220 ;; Registers used:
  7221 ;;		wreg
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1
  7227 ;;      Params:         0       0       0
  7228 ;;      Locals:         1       0       0
  7229 ;;      Temps:          0       0       0
  7230 ;;      Totals:         1       0       0
  7231 ;;Total ram usage:        1 bytes
  7232 ;; Hardware stack levels used: 1
  7233 ;; Hardware stack levels required when called: 2
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_TeTeclat
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text59
  7242  001C10                     __ptext59:
  7243                           	callstack 0
  7244  001C10                     _MsetNovaTecla:
  7245                           	callstack 27
  7246                           
  7247                           ;incstack = 0
  7248                           ;MsetNovaTecla@tecla stored from wreg
  7249  001C10  6E68               	movwf	MsetNovaTecla@tecla^0,c
  7250                           
  7251                           ;Menu.c: 30:     NovaTecla = tecla;
  7252  001C12  C068  F055         	movff	MsetNovaTecla@tecla,_NovaTecla
  7253  001C16  0012               	return		;funcret
  7254  001C18                     __end_of_MsetNovaTecla:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function _TeInit *****************
  7258 ;; Defined at:
  7259 ;;		line 17 in file "TeTeclat.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1
  7273 ;;      Params:         0       0       0
  7274 ;;      Locals:         0       0       0
  7275 ;;      Temps:          0       0       0
  7276 ;;      Totals:         0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 3
  7280 ;; This function calls:
  7281 ;;		_TiGetTimer
  7282 ;; This function is called by:
  7283 ;;		_main
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text60
  7288  001C18                     __ptext60:
  7289                           	callstack 0
  7290  001C18                     _TeInit:
  7291                           	callstack 27
  7292                           
  7293                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7294                           
  7295                           ;incstack = 0
  7296  001C18  EC81  F00C         	call	_TiGetTimer	;wreg free
  7297  001C1C  6E3E               	movwf	_tiTeclat^0,c
  7298  001C1E  0012               	return		;funcret
  7299  001C20                     __end_of_TeInit:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _Sinit *****************
  7303 ;; Defined at:
  7304 ;;		line 18 in file "Ssms.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1
  7318 ;;      Params:         0       0       0
  7319 ;;      Locals:         0       0       0
  7320 ;;      Temps:          0       0       0
  7321 ;;      Totals:         0       0       0
  7322 ;;Total ram usage:        0 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 3
  7325 ;; This function calls:
  7326 ;;		_TiGetTimer
  7327 ;; This function is called by:
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text61
  7333  001C20                     __ptext61:
  7334                           	callstack 0
  7335  001C20                     _Sinit:
  7336                           	callstack 27
  7337                           
  7338                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7339                           
  7340                           ;incstack = 0
  7341  001C20  EC81  F00C         	call	_TiGetTimer	;wreg free
  7342  001C24  6E57               	movwf	_timerSMS^0,c
  7343  001C26  0012               	return		;funcret
  7344  001C28                     __end_of_Sinit:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _SMotor *****************
  7348 ;; Defined at:
  7349 ;;		line 22 in file "Ssms.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1
  7363 ;;      Params:         0       0       0
  7364 ;;      Locals:         0       0       0
  7365 ;;      Temps:          4       0       0
  7366 ;;      Totals:         4       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; Hardware stack levels required when called: 3
  7370 ;; This function calls:
  7371 ;;		_MNovaLletra
  7372 ;;		_TiGetTics
  7373 ;;		_TiResetTics
  7374 ;; This function is called by:
  7375 ;;		_main
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text62
  7380  000EE0                     __ptext62:
  7381                           	callstack 0
  7382  000EE0                     _SMotor:
  7383                           	callstack 27
  7384                           
  7385                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7386                           
  7387                           ;incstack = 0
  7388  000EE0  D0C1               	goto	l4567
  7389  000EE2                     l4411:
  7390                           
  7391                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7392  000EE2  2858               	incf	_novaTecla^0,w,c
  7393  000EE4  E008               	bz	l4419
  7394  000EE6  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7395  000EE8  D006               	goto	l4419
  7396                           
  7397                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7398  000EEA  5057               	movf	_timerSMS^0,w,c
  7399  000EEC  EC42  F00D         	call	_TiResetTics
  7400                           
  7401                           ;Ssms.c: 29:     state = 3;
  7402  000EF0  0E03               	movlw	3
  7403  000EF2  6E3F               	movwf	SMotor@state^0,c
  7404                           
  7405                           ;Ssms.c: 30:    }
  7406  000EF4  0C03               	retlw	3
  7407  000EF6                     l4419:
  7408  000EF6  2858               	incf	_novaTecla^0,w,c
  7409  000EF8  A4D8               	btfss	status,2,c
  7410  000EFA  0012               	return	
  7411  000EFC  5057               	movf	_timerSMS^0,w,c
  7412  000EFE  ECBE  F00C         	call	_TiGetTics
  7413  000F02  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  7414  000F04  0012               	return	
  7415  000F06  D8D7               	call	PL56	;call to abstracted procedure
  7416  000F08  A0D8               	btfss	status,0,c
  7417  000F0A  0012               	return	
  7418  000F0C  2859               	incf	_lletraASCII^0,w,c
  7419  000F0E  A4D8               	btfss	status,2,c
  7420  000F10  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7421  000F12  0012               	return	
  7422                           
  7423                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7424  000F14  5059               	movf	_lletraASCII^0,w,c
  7425  000F16  EC14  F00E         	call	_MNovaLletra
  7426                           
  7427                           ;Ssms.c: 33:     lletraASCII = -1;
  7428  000F1A  6859               	setf	_lletraASCII^0,c
  7429                           
  7430                           ;Ssms.c: 34:     ultimaTecla = -1;
  7431  000F1C  6856               	setf	_ultimaTecla^0,c
  7432                           
  7433                           ;Ssms.c: 35:     zeroTecla = 0;
  7434  000F1E  6A40               	clrf	_zeroTecla^0,c
  7435  000F20  0012               	return	
  7436  000F22                     l4435:
  7437                           
  7438                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7439  000F22  5056               	movf	_ultimaTecla^0,w,c
  7440  000F24  1858               	xorwf	_novaTecla^0,w,c
  7441  000F26  E10C               	bnz	l4443
  7442  000F28  5057               	movf	_timerSMS^0,w,c
  7443  000F2A  ECBE  F00C         	call	_TiGetTics
  7444  000F2E  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  7445  000F30  D002               	goto	u3900
  7446  000F32  D8C1               	call	PL56	;call to abstracted procedure
  7447  000F34  E205               	bc	l4443
  7448  000F36                     u3900:
  7449                           
  7450                           ;Ssms.c: 40:     novaTecla = -1;
  7451  000F36  6858               	setf	_novaTecla^0,c
  7452                           
  7453                           ;Ssms.c: 41:     sumaPulsacions++;
  7454  000F38  2A41               	incf	_sumaPulsacions^0,f,c
  7455                           
  7456                           ;Ssms.c: 42:     lletraASCII++;
  7457  000F3A  2A59               	incf	_lletraASCII^0,f,c
  7458                           
  7459                           ;Ssms.c: 43:     state++;
  7460  000F3C  2A3F               	incf	SMotor@state^0,f,c
  7461                           
  7462                           ;Ssms.c: 44:    }
  7463  000F3E  0012               	return	
  7464  000F40                     l4443:
  7465  000F40  2858               	incf	_novaTecla^0,w,c
  7466  000F42  B4D8               	btfsc	status,2,c
  7467  000F44  0012               	return	
  7468  000F46  5056               	movf	_ultimaTecla^0,w,c
  7469  000F48  1858               	xorwf	_novaTecla^0,w,c
  7470  000F4A  B4D8               	btfsc	status,2,c
  7471  000F4C  0012               	return	
  7472                           
  7473                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  7474  000F4E  5059               	movf	_lletraASCII^0,w,c
  7475  000F50  EC14  F00E         	call	_MNovaLletra
  7476                           
  7477                           ;Ssms.c: 47:     if(novaTecla != 0){
  7478  000F54  5058               	movf	_novaTecla^0,w,c
  7479  000F56  E007               	bz	l4453
  7480                           
  7481                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  7482  000F58  0EFE               	movlw	254
  7483  000F5A  6E6F               	movwf	??_SMotor^0,c
  7484  000F5C  6870               	setf	(??_SMotor+1)^0,c
  7485  000F5E  C058  F071         	movff	_novaTecla,??_SMotor+2
  7486  000F62  D898               	call	PL12	;call to abstracted procedure
  7487                           
  7488                           ;Ssms.c: 49:     }else{
  7489  000F64  D002               	goto	l4455
  7490  000F66                     l4453:
  7491                           
  7492                           ;Ssms.c: 50:       lletraASCII = '0';
  7493  000F66  0E30               	movlw	48
  7494  000F68  6E59               	movwf	_lletraASCII^0,c
  7495  000F6A                     l4455:
  7496                           
  7497                           ;Ssms.c: 52:     zeroTecla=0;
  7498  000F6A  6A40               	clrf	_zeroTecla^0,c
  7499                           
  7500                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  7501  000F6C  C058  F056         	movff	_novaTecla,_ultimaTecla
  7502                           
  7503                           ;Ssms.c: 54:     sumaPulsacions = 0;
  7504  000F70  6A41               	clrf	_sumaPulsacions^0,c
  7505                           
  7506                           ;Ssms.c: 55:     novaTecla = -1;
  7507  000F72  6858               	setf	_novaTecla^0,c
  7508                           
  7509                           ;Ssms.c: 56:     state--;
  7510  000F74  063F               	decf	SMotor@state^0,f,c
  7511  000F76  0012               	return	
  7512  000F78                     l4465:
  7513                           
  7514                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7515  000F78  0E07               	movlw	7
  7516  000F7A  1856               	xorwf	_ultimaTecla^0,w,c
  7517  000F7C  E008               	bz	l4473
  7518  000F7E  0E09               	movlw	9
  7519  000F80  1856               	xorwf	_ultimaTecla^0,w,c
  7520  000F82  E005               	bz	l4473
  7521  000F84  5056               	movf	_ultimaTecla^0,w,c
  7522  000F86  E003               	bz	l4473
  7523                           
  7524                           ;Ssms.c: 61:     state = 5;
  7525  000F88  0E05               	movlw	5
  7526  000F8A  6E3F               	movwf	SMotor@state^0,c
  7527                           
  7528                           ;Ssms.c: 62:    }
  7529  000F8C  0C05               	retlw	5
  7530  000F8E                     l4473:
  7531  000F8E  0E07               	movlw	7
  7532  000F90  1856               	xorwf	_ultimaTecla^0,w,c
  7533  000F92  E003               	bz	u3980
  7534  000F94  0E09               	movlw	9
  7535  000F96  1856               	xorwf	_ultimaTecla^0,w,c
  7536  000F98  E103               	bnz	l4479
  7537  000F9A                     u3980:
  7538                           
  7539                           ;Ssms.c: 64:     state = 6;
  7540  000F9A  0E06               	movlw	6
  7541  000F9C  6E3F               	movwf	SMotor@state^0,c
  7542                           
  7543                           ;Ssms.c: 65:    }
  7544  000F9E  0C06               	retlw	6
  7545  000FA0                     l4479:
  7546  000FA0  5056               	movf	_ultimaTecla^0,w,c
  7547  000FA2  A4D8               	btfss	status,2,c
  7548  000FA4  0012               	return	
  7549                           
  7550                           ;Ssms.c: 67:     zeroTecla++;
  7551  000FA6  2A40               	incf	_zeroTecla^0,f,c
  7552                           
  7553                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  7554  000FA8  0E02               	movlw	2
  7555  000FAA  1840               	xorwf	_zeroTecla^0,w,c
  7556  000FAC  E101               	bnz	l4487
  7557  000FAE  6A40               	clrf	_zeroTecla^0,c
  7558  000FB0                     l4487:
  7559                           
  7560                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  7561  000FB0  0E09               	movlw	low _arrayZero
  7562  000FB2  2440               	addwf	_zeroTecla^0,w,c
  7563  000FB4  6EF6               	movwf	tblptrl,c
  7564  000FB6  6AF7               	clrf	tblptrh,c
  7565  000FB8  0E1F               	movlw	high _arrayZero
  7566  000FBA  22F7               	addwfc	tblptrh,f,c
  7567  000FBC                     	if	0	;There are less than 3 active tblptr bytes
  7568  000FBC                     	endif
  7569  000FBC  0008               	tblrd		*
  7570  000FBE  CFF5 F059          	movff	tablat,_lletraASCII
  7571  000FC2                     l4489:
  7572                           
  7573                           ;Ssms.c: 70:     state = 0;
  7574  000FC2  6A3F               	clrf	SMotor@state^0,c
  7575  000FC4  0012               	return	
  7576  000FC6                     l4491:
  7577                           
  7578                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7579  000FC6  5058               	movf	_novaTecla^0,w,c
  7580  000FC8  0A80               	xorlw	128
  7581  000FCA  0F7E               	addlw	-130
  7582  000FCC  E202               	bc	u4020
  7583  000FCE  5058               	movf	_novaTecla^0,w,c
  7584  000FD0  E107               	bnz	l4499
  7585  000FD2                     u4020:
  7586  000FD2  5058               	movf	_novaTecla^0,w,c
  7587  000FD4  0A80               	xorlw	128
  7588  000FD6  0F76               	addlw	-138
  7589  000FD8  E203               	bc	l4499
  7590                           
  7591                           ;Ssms.c: 75:     state = 1;
  7592  000FDA  0E01               	movlw	1
  7593  000FDC  6E3F               	movwf	SMotor@state^0,c
  7594                           
  7595                           ;Ssms.c: 76:    }
  7596  000FDE  0C01               	retlw	1
  7597  000FE0                     l4499:
  7598  000FE0  5058               	movf	_novaTecla^0,w,c
  7599  000FE2  E00C               	bz	l4511
  7600  000FE4  5058               	movf	_novaTecla^0,w,c
  7601  000FE6  0A80               	xorlw	128
  7602  000FE8  0F7E               	addlw	-130
  7603  000FEA  E208               	bc	l4511
  7604  000FEC  2859               	incf	_lletraASCII^0,w,c
  7605  000FEE  E106               	bnz	l4511
  7606                           
  7607                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  7608  000FF0  5058               	movf	_novaTecla^0,w,c
  7609  000FF2  0F30               	addlw	48
  7610  000FF4  EC14  F00E         	call	_MNovaLletra
  7611  000FF8                     l4507:
  7612                           
  7613                           ;Ssms.c: 79:     novaTecla = -1;
  7614  000FF8  6858               	setf	_novaTecla^0,c
  7615  000FFA  D7E3               	goto	l4489
  7616  000FFC                     l4511:
  7617  000FFC  5058               	movf	_novaTecla^0,w,c
  7618  000FFE  B4D8               	btfsc	status,2,c
  7619  001000  0012               	return	
  7620  001002  5058               	movf	_novaTecla^0,w,c
  7621  001004  0A80               	xorlw	128
  7622  001006  0F7E               	addlw	-130
  7623  001008  B0D8               	btfsc	status,0,c
  7624  00100A  0012               	return	
  7625  00100C  2859               	incf	_lletraASCII^0,w,c
  7626  00100E  B4D8               	btfsc	status,2,c
  7627  001010  0012               	return	
  7628                           
  7629                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  7630  001012  5059               	movf	_lletraASCII^0,w,c
  7631  001014  EC14  F00E         	call	_MNovaLletra
  7632                           
  7633                           ;Ssms.c: 84:     lletraASCII = -1;
  7634  001018  6859               	setf	_lletraASCII^0,c
  7635                           
  7636                           ;Ssms.c: 85:     state++;
  7637  00101A  2A3F               	incf	SMotor@state^0,f,c
  7638  00101C  0012               	return	
  7639  00101E                     l4523:
  7640                           
  7641                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  7642  00101E  5058               	movf	_novaTecla^0,w,c
  7643  001020  0F30               	addlw	48
  7644  001022  EC14  F00E         	call	_MNovaLletra
  7645  001026  D7E8               	goto	l4507
  7646  001028                     l4529:
  7647                           
  7648                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  7649  001028  0E04               	movlw	4
  7650  00102A  1841               	xorwf	_sumaPulsacions^0,w,c
  7651  00102C  E108               	bnz	l4537
  7652  00102E                     u4100:
  7653                           
  7654                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  7655  00102E  0EFE               	movlw	254
  7656  001030  6E6F               	movwf	??_SMotor^0,c
  7657  001032  6870               	setf	(??_SMotor+1)^0,c
  7658  001034  C056  F071         	movff	_ultimaTecla,??_SMotor+2
  7659  001038  D82D               	call	PL12	;call to abstracted procedure
  7660                           
  7661                           ;Ssms.c: 96:     sumaPulsacions = 0;
  7662  00103A  6A41               	clrf	_sumaPulsacions^0,c
  7663  00103C  D7C2               	goto	l4489
  7664  00103E                     l4537:
  7665  00103E  0E03               	movlw	3
  7666  001040  1841               	xorwf	_sumaPulsacions^0,w,c
  7667  001042  E104               	bnz	l4543
  7668  001044                     u4110:
  7669                           
  7670                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  7671  001044  5056               	movf	_ultimaTecla^0,w,c
  7672  001046  0F30               	addlw	48
  7673  001048  6E59               	movwf	_lletraASCII^0,c
  7674  00104A  D7BB               	goto	l4489
  7675  00104C                     l4543:
  7676  00104C  0E03               	movlw	3
  7677  00104E  6041               	cpfslt	_sumaPulsacions^0,c
  7678  001050  0012               	return	
  7679  001052  D7B7               	goto	l4489
  7680  001054                     l4547:
  7681                           
  7682                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  7683  001054  0E04               	movlw	4
  7684  001056  1841               	xorwf	_sumaPulsacions^0,w,c
  7685  001058  E0F5               	bz	u4110
  7686  00105A  0E05               	movlw	5
  7687  00105C  1841               	xorwf	_sumaPulsacions^0,w,c
  7688  00105E  E0E7               	bz	u4100
  7689  001060  0E04               	movlw	4
  7690  001062  D7F5               	goto	L4
  7691  001064                     l4567:
  7692  001064  503F               	movf	SMotor@state^0,w,c
  7693  001066  6E6F               	movwf	??_SMotor^0,c
  7694  001068  6A70               	clrf	(??_SMotor+1)^0,c
  7695                           
  7696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7697                           ; Switch size 1, requested type "space"
  7698                           ; Number of cases is 1, Range of values is 0 to 0
  7699                           ; switch strategies available:
  7700                           ; Name         Instructions Cycles
  7701                           ; simple_byte            4     3 (average)
  7702                           ;	Chosen strategy is simple_byte
  7703  00106A  5070               	movf	(??_SMotor+1)^0,w,c
  7704  00106C  A4D8               	btfss	status,2,c
  7705  00106E  0012               	return	
  7706                           
  7707                           ; Switch size 1, requested type "space"
  7708                           ; Number of cases is 7, Range of values is 0 to 6
  7709                           ; switch strategies available:
  7710                           ; Name         Instructions Cycles
  7711                           ; simple_byte           22    12 (average)
  7712                           ;	Chosen strategy is simple_byte
  7713  001070  506F               	movf	??_SMotor^0,w,c
  7714  001072  E101 D736          	bz	l4411
  7715  001076  0A01               	xorlw	1	; case 1
  7716  001078  E101 D753          	bz	l4435
  7717  00107C  0A03               	xorlw	3	; case 2
  7718  00107E  E101 D77B          	bz	l4465
  7719  001082  0A01               	xorlw	1	; case 3
  7720  001084  E0A0               	bz	l4491
  7721  001086  0A07               	xorlw	7	; case 4
  7722  001088  E0CA               	bz	l4523
  7723  00108A  0A01               	xorlw	1	; case 5
  7724  00108C  E0CD               	bz	l4529
  7725  00108E  0A03               	xorlw	3	; case 6
  7726  001090  E0E1               	bz	l4547
  7727  001092  0012               	return		;funcret
  7728  001094                     __end_of_SMotor:
  7729                           	callstack 0
  7730  001094                     PL12:
  7731                           	callstack 27
  7732  001094  6A72               	clrf	(??_SMotor+3)^0,c
  7733  001096  BE71               	btfsc	(??_SMotor+2)^0,7,c
  7734  001098  0672               	decf	(??_SMotor+3)^0,f,c
  7735  00109A  506F               	movf	??_SMotor^0,w,c
  7736  00109C  2671               	addwf	(??_SMotor+2)^0,f,c
  7737  00109E  5070               	movf	(??_SMotor+1)^0,w,c
  7738  0010A0  2272               	addwfc	(??_SMotor+3)^0,f,c
  7739  0010A2  0E01               	movlw	low _lletraInici
  7740  0010A4  2471               	addwf	(??_SMotor+2)^0,w,c
  7741  0010A6  6EF6               	movwf	tblptrl,c
  7742  0010A8  0E1F               	movlw	high _lletraInici
  7743  0010AA  2072               	addwfc	(??_SMotor+3)^0,w,c
  7744  0010AC  6EF7               	movwf	tblptrh,c
  7745  0010AE                     	if	0	;There are less than 3 active tblptr bytes
  7746  0010AE                     	endif
  7747  0010AE  0008               	tblrd		*
  7748  0010B0  CFF5 F059          	movff	tablat,_lletraASCII
  7749  0010B4  0012               	return	
  7750  0010B6                     __end_ofPL12:
  7751                           	callstack 0
  7752  0010B6                     PL56:
  7753                           	callstack 27
  7754  0010B6  0E5A               	movlw	90
  7755  0010B8  5C68               	subwf	?_TiGetTics^0,w,c
  7756  0010BA  0E02               	movlw	2
  7757  0010BC  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  7758  0010BE  0012               	return	
  7759  0010C0                     __end_ofPL56:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _MNovaLletra *****************
  7763 ;; Defined at:
  7764 ;;		line 33 in file "Menu.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  lletra          1    wreg     unsigned char 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  lletra          1    5[COMRAM] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1
  7778 ;;      Params:         0       0       0
  7779 ;;      Locals:         1       0       0
  7780 ;;      Temps:          0       0       0
  7781 ;;      Totals:         1       0       0
  7782 ;;Total ram usage:        1 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 2
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_SMotor
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text63
  7793  001C28                     __ptext63:
  7794                           	callstack 0
  7795  001C28                     _MNovaLletra:
  7796                           	callstack 27
  7797                           
  7798                           ;incstack = 0
  7799                           ;MNovaLletra@lletra stored from wreg
  7800  001C28  6E68               	movwf	MNovaLletra@lletra^0,c
  7801                           
  7802                           ;Menu.c: 34:     novaLletra = lletra;
  7803  001C2A  C068  F054         	movff	MNovaLletra@lletra,_novaLletra
  7804  001C2E  0012               	return		;funcret
  7805  001C30                     __end_of_MNovaLletra:
  7806                           	callstack 0
  7807                           
  7808 ;; *************** function _Minit *****************
  7809 ;; Defined at:
  7810 ;;		line 26 in file "Menu.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1
  7824 ;;      Params:         0       0       0
  7825 ;;      Locals:         0       0       0
  7826 ;;      Temps:          0       0       0
  7827 ;;      Totals:         0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 3
  7831 ;; This function calls:
  7832 ;;		_TiGetTimer
  7833 ;; This function is called by:
  7834 ;;		_main
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text64
  7839  001C30                     __ptext64:
  7840                           	callstack 0
  7841  001C30                     _Minit:
  7842                           	callstack 27
  7843                           
  7844                           ;Menu.c: 27:     timerMenu = TiGetTimer();
  7845                           
  7846                           ;incstack = 0
  7847  001C30  EC81  F00C         	call	_TiGetTimer	;wreg free
  7848  001C34  6E38               	movwf	_timerMenu^0,c
  7849  001C36  0012               	return		;funcret
  7850  001C38                     __end_of_Minit:
  7851                           	callstack 0
  7852                           
  7853 ;; *************** function _LcLCD *****************
  7854 ;; Defined at:
  7855 ;;		line 246 in file "LcTLCD.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1
  7869 ;;      Params:         0       0       0
  7870 ;;      Locals:         0       0       0
  7871 ;;      Temps:          0       0       0
  7872 ;;      Totals:         0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 6
  7876 ;; This function calls:
  7877 ;;		_LcPutChar
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text65
  7884  0016D0                     __ptext65:
  7885                           	callstack 0
  7886  0016D0                     _LcLCD:
  7887                           	callstack 24
  7888                           
  7889                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7890                           
  7891                           ;incstack = 0
  7892  0016D0  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7893  0016D2  0012               	return	
  7894                           
  7895                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7896  0016D4  D818               	call	PL36	;call to abstracted procedure
  7897  0016D6  64F7               	cpfsgt	tblptrh,c
  7898  0016D8  D003               	bra	u3767
  7899  0016DA  0008               	tblrd		*
  7900  0016DC  50F5               	movf	tablat,w,c
  7901  0016DE  D001               	bra	u3760
  7902  0016E0                     u3767:
  7903  0016E0  D819               	call	PL44	;call to abstracted procedure
  7904  0016E2                     u3760:
  7905  0016E2  EC90  F00B         	call	_LcPutChar
  7906                           
  7907                           ;LcTLCD.c: 249:         s_ptr++;
  7908  0016E6  4A17               	infsnz	_s_ptr^0,f,c
  7909  0016E8  2A18               	incf	(_s_ptr+1)^0,f,c
  7910                           
  7911                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7912  0016EA  D80D               	call	PL36	;call to abstracted procedure
  7913  0016EC  64F7               	cpfsgt	tblptrh,c
  7914  0016EE  D003               	bra	u3777
  7915  0016F0  0008               	tblrd		*
  7916  0016F2  50F5               	movf	tablat,w,c
  7917  0016F4  D001               	bra	u3770
  7918  0016F6                     u3777:
  7919  0016F6  D80E               	call	PL44	;call to abstracted procedure
  7920  0016F8                     u3770:
  7921  0016F8  0900               	iorlw	0
  7922  0016FA  A4D8               	btfss	status,2,c
  7923  0016FC  0012               	return	
  7924                           
  7925                           ;LcTLCD.c: 251:             nou_s = 0;
  7926  0016FE  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7927                           
  7928                           ;LcTLCD.c: 252:             s_ptr=0;
  7929  001700  6A17               	clrf	_s_ptr^0,c
  7930  001702  6A18               	clrf	(_s_ptr+1)^0,c
  7931  001704  0012               	return		;funcret
  7932  001706                     __end_of_LcLCD:
  7933                           	callstack 0
  7934  001706                     PL36:
  7935                           	callstack 24
  7936  001706  C017  FFF6         	movff	_s_ptr,tblptrl
  7937  00170A  C018  FFF7         	movff	_s_ptr+1,tblptrh
  7938  00170E  6AF8               	clrf	tblptru,c
  7939  001710  0E01               	movlw	(high __ramtop+-1)
  7940  001712  0012               	return	
  7941  001714                     __end_ofPL36:
  7942                           	callstack 0
  7943  001714                     PL44:
  7944                           	callstack 24
  7945  001714  CFF6 FFE1          	movff	tblptrl,fsr1l
  7946  001718  CFF7 FFE2          	movff	tblptrh,fsr1h
  7947  00171C  50E7               	movf	indf1,w,c
  7948  00171E  0012               	return	
  7949  001720                     __end_ofPL44:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _LcInit *****************
  7953 ;; Defined at:
  7954 ;;		line 41 in file "LcTLCD.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  rows            1    wreg     unsigned char 
  7957 ;;  columns         1   16[COMRAM] unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  rows            1   17[COMRAM] unsigned char 
  7960 ;;  i               2   18[COMRAM] int 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1
  7970 ;;      Params:         1       0       0
  7971 ;;      Locals:         3       0       0
  7972 ;;      Temps:          0       0       0
  7973 ;;      Totals:         4       0       0
  7974 ;;Total ram usage:        4 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; Hardware stack levels required when called: 4
  7977 ;; This function calls:
  7978 ;;		_CantaIR
  7979 ;;		_EscriuPrimeraOrdre
  7980 ;;		_Espera
  7981 ;;		_TiGetTimer
  7982 ;;		_WaitForBusy
  7983 ;; This function is called by:
  7984 ;;		_main
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text66
  7989  0012BE                     __ptext66:
  7990                           	callstack 0
  7991  0012BE                     _LcInit:
  7992                           	callstack 26
  7993                           
  7994                           ;incstack = 0
  7995                           ;LcInit@rows stored from wreg
  7996  0012BE  6E74               	movwf	LcInit@rows^0,c
  7997                           
  7998                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7999  0012C0  EC81  F00C         	call	_TiGetTimer	;wreg free
  8000  0012C4  6E42               	movwf	_Timer^0,c
  8001                           
  8002                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  8003  0012C6  C074  F045         	movff	LcInit@rows,_Rows
  8004                           
  8005                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8006  0012CA  6A43               	clrf	_ColumnAct^0,c
  8007  0012CC  6A44               	clrf	_RowAct^0,c
  8008                           
  8009                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8010  0012CE  9894               	bcf	148,4,c	;volatile
  8011  0012D0  9E95               	bcf	149,7,c	;volatile
  8012  0012D2  9A94               	bcf	148,5,c	;volatile
  8013                           
  8014                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8015  0012D4  6A75               	clrf	LcInit@i^0,c
  8016  0012D6  6A76               	clrf	(LcInit@i+1)^0,c
  8017  0012D8                     l4319:
  8018                           
  8019                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8020  0012D8  6A70               	clrf	(Espera@ms+1)^0,c
  8021  0012DA  0E64               	movlw	100
  8022  0012DC  6E6F               	movwf	Espera@ms^0,c
  8023  0012DE  5042               	movf	_Timer^0,w,c
  8024  0012E0  EC06  F00D         	call	_Espera
  8025                           
  8026                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8027  0012E4  0E03               	movlw	3
  8028  0012E6  EC54  F00A         	call	_EscriuPrimeraOrdre
  8029                           
  8030                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8031  0012EA  6A70               	clrf	(Espera@ms+1)^0,c
  8032  0012EC  0E05               	movlw	5
  8033  0012EE  6E6F               	movwf	Espera@ms^0,c
  8034  0012F0  5042               	movf	_Timer^0,w,c
  8035  0012F2  EC06  F00D         	call	_Espera
  8036                           
  8037                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8038  0012F6  0E03               	movlw	3
  8039  0012F8  EC54  F00A         	call	_EscriuPrimeraOrdre
  8040                           
  8041                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8042  0012FC  D83A               	call	PL66	;call to abstracted procedure
  8043  0012FE  EC06  F00D         	call	_Espera
  8044                           
  8045                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8046  001302  0E03               	movlw	3
  8047  001304  EC54  F00A         	call	_EscriuPrimeraOrdre
  8048                           
  8049                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8050  001308  D834               	call	PL66	;call to abstracted procedure
  8051  00130A  EC06  F00D         	call	_Espera
  8052                           
  8053                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8054  00130E  0E02               	movlw	2
  8055  001310  EC54  F00A         	call	_EscriuPrimeraOrdre
  8056                           
  8057                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8058  001314  6A70               	clrf	(Espera@ms+1)^0,c
  8059  001316  0E04               	movlw	4
  8060  001318  6E6F               	movwf	Espera@ms^0,c
  8061  00131A  5042               	movf	_Timer^0,w,c
  8062  00131C  EC06  F00D         	call	_Espera
  8063                           
  8064                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8065  001320  0E28               	movlw	40
  8066  001322  EC34  F00D         	call	_CantaIR
  8067                           
  8068                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8069  001326  ECF7  F00B         	call	_WaitForBusy	;wreg free
  8070  00132A  0E08               	movlw	8
  8071  00132C  EC34  F00D         	call	_CantaIR
  8072                           
  8073                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8074  001330  ECF7  F00B         	call	_WaitForBusy	;wreg free
  8075  001334  0E01               	movlw	1
  8076  001336  EC34  F00D         	call	_CantaIR
  8077                           
  8078                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8079  00133A  EC01  F00D         	call	PL64	;call to abstracted procedure
  8080  00133E  EC06  F00D         	call	_Espera
  8081                           
  8082                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8083  001342  ECF7  F00B         	call	_WaitForBusy	;wreg free
  8084  001346  0E06               	movlw	6
  8085  001348  EC34  F00D         	call	_CantaIR
  8086                           
  8087                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8088  00134C  ECF7  F00B         	call	_WaitForBusy	;wreg free
  8089  001350  0E0F               	movlw	15
  8090  001352  EC34  F00D         	call	_CantaIR
  8091                           
  8092                           ;LcTLCD.c: 74:  }
  8093  001356  4A75               	infsnz	LcInit@i^0,f,c
  8094  001358  2A76               	incf	(LcInit@i+1)^0,f,c
  8095  00135A  BE76               	btfsc	(LcInit@i+1)^0,7,c
  8096  00135C  D7BD               	goto	l4319
  8097  00135E  5076               	movf	(LcInit@i+1)^0,w,c
  8098  001360  E103               	bnz	u3740
  8099  001362  0E02               	movlw	2
  8100  001364  5C75               	subwf	LcInit@i^0,w,c
  8101  001366  E3B8               	bnc	l4319
  8102  001368                     u3740:
  8103                           
  8104                           ;LcTLCD.c: 80:     WaitForBusy();
  8105  001368  ECF7  F00B         	call	_WaitForBusy	;wreg free
  8106                           
  8107                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8108  00136C  0E0C               	movlw	12
  8109  00136E  EF34  F00D         	goto	_CantaIR
  8110  001372                     __end_of_LcInit:
  8111                           	callstack 0
  8112  001372                     PL66:
  8113                           	callstack 26
  8114  001372  6A70               	clrf	(Espera@ms+1)^0,c
  8115  001374  0E01               	movlw	1
  8116  001376  6E6F               	movwf	Espera@ms^0,c
  8117  001378  5042               	movf	_Timer^0,w,c
  8118  00137A  0012               	return	
  8119  00137C                     __end_ofPL66:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function _EscriuPrimeraOrdre *****************
  8123 ;; Defined at:
  8124 ;;		line 230 in file "LcTLCD.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  ordre           1    wreg     unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  ordre           1    6[COMRAM] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1
  8138 ;;      Params:         0       0       0
  8139 ;;      Locals:         1       0       0
  8140 ;;      Temps:          1       0       0
  8141 ;;      Totals:         2       0       0
  8142 ;;Total ram usage:        2 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; Hardware stack levels required when called: 2
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_LcInit
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text67
  8153  0014A8                     __ptext67:
  8154                           	callstack 0
  8155  0014A8                     _EscriuPrimeraOrdre:
  8156                           	callstack 27
  8157                           
  8158                           ;incstack = 0
  8159                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8160  0014A8  6E69               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8161                           
  8162                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8163  0014AA  9694               	bcf	148,3,c	;volatile
  8164                           
  8165                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8166  0014AC  D82F               	call	PL40	;call to abstracted procedure
  8167  0014AE  888B               	bsf	139,4,c	;volatile
  8168                           
  8169                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8170  0014B0  A669               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8171  0014B2  D003               	goto	u230
  8172  0014B4  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8173  0014B6  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  8174  0014B8  D001               	goto	u248
  8175  0014BA                     u230:
  8176  0014BA  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8177  0014BC                     u248:
  8178  0014BC  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8179  0014BE  D82D               	call	PL62	;call to abstracted procedure
  8180  0014C0  0BF7               	andlw	-9
  8181  0014C2  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8182  0014C4  6E8B               	movwf	139,c	;volatile
  8183                           
  8184                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8185  0014C6  A469               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8186  0014C8  D003               	goto	u250
  8187  0014CA  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8188  0014CC  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  8189  0014CE  D001               	goto	u268
  8190  0014D0                     u250:
  8191  0014D0  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8192  0014D2                     u268:
  8193  0014D2  D823               	call	PL62	;call to abstracted procedure
  8194  0014D4  0BFB               	andlw	-5
  8195  0014D6  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8196  0014D8  6E8B               	movwf	139,c	;volatile
  8197                           
  8198                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8199  0014DA  A269               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8200  0014DC  D003               	goto	u270
  8201  0014DE  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8202  0014E0  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  8203  0014E2  D001               	goto	u288
  8204  0014E4                     u270:
  8205  0014E4  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8206  0014E6                     u288:
  8207  0014E6  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8208  0014E8  508B               	movf	139,w,c	;volatile
  8209  0014EA  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8210  0014EC  0BFD               	andlw	-3
  8211  0014EE  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8212  0014F0  6E8B               	movwf	139,c	;volatile
  8213                           
  8214                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8215  0014F2  A069               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8216  0014F4  D003               	goto	u290
  8217  0014F6  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8218  0014F8  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  8219  0014FA  D001               	goto	u308
  8220  0014FC                     u290:
  8221  0014FC  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  8222  0014FE                     u308:
  8223  0014FE  508B               	movf	139,w,c	;volatile
  8224  001500  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8225  001502  0BFE               	andlw	-2
  8226  001504  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8227  001506  6E8B               	movwf	139,c	;volatile
  8228                           
  8229                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  8230  001508  988B               	bcf	139,4,c	;volatile
  8231  00150A  0012               	return		;funcret
  8232  00150C                     __end_of_EscriuPrimeraOrdre:
  8233                           	callstack 0
  8234  00150C                     PL40:
  8235                           	callstack 24
  8236  00150C  9494               	bcf	148,2,c	;volatile
  8237  00150E  9294               	bcf	148,1,c	;volatile
  8238  001510  9094               	bcf	148,0,c	;volatile
  8239  001512  9A8B               	bcf	139,5,c	;volatile
  8240  001514  9E8C               	bcf	140,7,c	;volatile
  8241  001516  888B               	bsf	139,4,c	;volatile
  8242  001518  0012               	return	
  8243  00151A                     __end_ofPL40:
  8244                           	callstack 0
  8245  00151A                     PL62:
  8246                           	callstack 27
  8247  00151A  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8248  00151C  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8249  00151E  508B               	movf	139,w,c	;volatile
  8250  001520  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8251  001522  0012               	return	
  8252  001524                     __end_ofPL62:
  8253                           	callstack 0
  8254                           
  8255 ;; *************** function _JoystickMotor *****************
  8256 ;; Defined at:
  8257 ;;		line 18 in file "Joystick.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1
  8271 ;;      Params:         0       0       0
  8272 ;;      Locals:         0       0       0
  8273 ;;      Temps:          2       0       0
  8274 ;;      Totals:         2       0       0
  8275 ;;Total ram usage:        2 bytes
  8276 ;; Hardware stack levels used: 1
  8277 ;; Hardware stack levels required when called: 3
  8278 ;; This function calls:
  8279 ;;		_MNouJoystick
  8280 ;; This function is called by:
  8281 ;;		_main
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text68
  8286  0011E8                     __ptext68:
  8287                           	callstack 0
  8288  0011E8                     _JoystickMotor:
  8289                           	callstack 27
  8290                           
  8291                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8292                           
  8293                           ;incstack = 0
  8294  0011E8  D056               	goto	l3173
  8295  0011EA                     l986:
  8296                           
  8297                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8298  0011EA  B2C2               	btfsc	194,1,c	;volatile
  8299  0011EC  D00B               	goto	l987
  8300  0011EE  0EC8               	movlw	200
  8301  0011F0  60C4               	cpfslt	196,c	;volatile
  8302  0011F2  D008               	goto	l987
  8303  0011F4  0E32               	movlw	50
  8304  0011F6  64C4               	cpfsgt	196,c	;volatile
  8305  0011F8  D005               	goto	l987
  8306                           
  8307                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8308  0011FA  0E07               	movlw	7
  8309  0011FC  6EC2               	movwf	194,c	;volatile
  8310                           
  8311                           ;Joystick.c: 24:                 cap1 = 1;
  8312  0011FE  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8313  001200                     l3103:
  8314                           
  8315                           ;Joystick.c: 25:     state++;
  8316  001200  2A21               	incf	JoystickMotor@state^0,f,c
  8317                           
  8318                           ;Joystick.c: 26:    }
  8319  001202  D052               	goto	l994
  8320  001204                     l987:
  8321  001204  B2C2               	btfsc	194,1,c	;volatile
  8322  001206  D00F               	goto	l989
  8323  001208  0EC7               	movlw	199
  8324  00120A  64C4               	cpfsgt	196,c	;volatile
  8325  00120C  D00C               	goto	l989
  8326                           
  8327                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8328  00120E  0E02               	movlw	2
  8329  001210  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8330  001212  E003               	bz	l3111
  8331  001214  0E02               	movlw	2
  8332  001216  EC1C  F00E         	call	_MNouJoystick
  8333  00121A                     l3111:
  8334                           
  8335                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8336  00121A  0E02               	movlw	2
  8337  00121C  6E22               	movwf	_ultimaTeclaAD^0,c
  8338                           
  8339                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8340  00121E  0E07               	movlw	7
  8341  001220  6EC2               	movwf	194,c	;volatile
  8342                           
  8343                           ;Joystick.c: 31:                 cap1 = 0;
  8344  001222  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8345  001224  D7ED               	goto	l3103
  8346  001226                     l989:
  8347  001226  B2C2               	btfsc	194,1,c	;volatile
  8348  001228  D03F               	goto	l994
  8349  00122A  0E33               	movlw	51
  8350  00122C  60C4               	cpfslt	196,c	;volatile
  8351  00122E  D03C               	goto	l994
  8352                           
  8353                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8354  001230  0E08               	movlw	8
  8355  001232  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8356  001234  E003               	bz	l3125
  8357  001236  0E08               	movlw	8
  8358  001238  EC1C  F00E         	call	_MNouJoystick
  8359  00123C                     l3125:
  8360                           
  8361                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8362  00123C  0E08               	movlw	8
  8363  00123E  D7EE               	goto	L5
  8364  001240                     l995:
  8365                           
  8366                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8367  001240  B2C2               	btfsc	194,1,c	;volatile
  8368  001242  D00B               	goto	l996
  8369  001244  0EC8               	movlw	200
  8370  001246  60C4               	cpfslt	196,c	;volatile
  8371  001248  D008               	goto	l996
  8372  00124A  0E32               	movlw	50
  8373  00124C  64C4               	cpfsgt	196,c	;volatile
  8374  00124E  D005               	goto	l996
  8375                           
  8376                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8377  001250  0E03               	movlw	3
  8378  001252  6EC2               	movwf	194,c	;volatile
  8379                           
  8380                           ;Joystick.c: 45:                 cap2 = 1;
  8381  001254  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8382  001256                     l3141:
  8383                           
  8384                           ;Joystick.c: 46:     state--;
  8385  001256  0621               	decf	JoystickMotor@state^0,f,c
  8386                           
  8387                           ;Joystick.c: 47:    }
  8388  001258  D027               	goto	l994
  8389  00125A                     l996:
  8390  00125A  B2C2               	btfsc	194,1,c	;volatile
  8391  00125C  D00F               	goto	l998
  8392  00125E  0EC7               	movlw	199
  8393  001260  64C4               	cpfsgt	196,c	;volatile
  8394  001262  D00C               	goto	l998
  8395                           
  8396                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8397  001264  0E06               	movlw	6
  8398  001266  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8399  001268  E003               	bz	l3149
  8400  00126A  0E06               	movlw	6
  8401  00126C  EC1C  F00E         	call	_MNouJoystick
  8402  001270                     l3149:
  8403                           
  8404                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8405  001270  0E06               	movlw	6
  8406  001272  6E22               	movwf	_ultimaTeclaAD^0,c
  8407                           
  8408                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8409  001274  0E03               	movlw	3
  8410  001276  6EC2               	movwf	194,c	;volatile
  8411                           
  8412                           ;Joystick.c: 52:                 cap2 = 0;
  8413  001278  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8414  00127A  D7ED               	goto	l3141
  8415  00127C                     l998:
  8416  00127C  B2C2               	btfsc	194,1,c	;volatile
  8417  00127E  D014               	goto	l994
  8418  001280  0E33               	movlw	51
  8419  001282  60C4               	cpfslt	196,c	;volatile
  8420  001284  D011               	goto	l994
  8421                           
  8422                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8423  001286  0E04               	movlw	4
  8424  001288  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8425  00128A  E003               	bz	l3163
  8426  00128C  0E04               	movlw	4
  8427  00128E  EC1C  F00E         	call	_MNouJoystick
  8428  001292                     l3163:
  8429                           
  8430                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8431  001292  0E04               	movlw	4
  8432  001294  D7EE               	goto	L6
  8433  001296                     l3173:
  8434  001296  5021               	movf	JoystickMotor@state^0,w,c
  8435  001298  6E69               	movwf	??_JoystickMotor^0,c
  8436  00129A  6A6A               	clrf	(??_JoystickMotor+1)^0,c
  8437                           
  8438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8439                           ; Switch size 1, requested type "space"
  8440                           ; Number of cases is 1, Range of values is 0 to 0
  8441                           ; switch strategies available:
  8442                           ; Name         Instructions Cycles
  8443                           ; simple_byte            4     3 (average)
  8444                           ;	Chosen strategy is simple_byte
  8445  00129C  506A               	movf	(??_JoystickMotor+1)^0,w,c
  8446  00129E  E104               	bnz	l994
  8447                           
  8448                           ; Switch size 1, requested type "space"
  8449                           ; Number of cases is 2, Range of values is 0 to 1
  8450                           ; switch strategies available:
  8451                           ; Name         Instructions Cycles
  8452                           ; simple_byte            7     4 (average)
  8453                           ;	Chosen strategy is simple_byte
  8454  0012A0  5069               	movf	??_JoystickMotor^0,w,c
  8455  0012A2  E0A3               	bz	l986
  8456  0012A4  0A01               	xorlw	1	; case 1
  8457  0012A6  E0CC               	bz	l995
  8458  0012A8                     l994:
  8459                           
  8460                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8461  0012A8  BE77               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8462  0012AA  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8463  0012AC  0012               	return	
  8464  0012AE  5022               	movf	_ultimaTeclaAD^0,w,c
  8465  0012B0  B4D8               	btfsc	status,2,c
  8466  0012B2  0012               	return	
  8467                           
  8468                           ;Joystick.c: 66:         MNouJoystick(-1);
  8469  0012B4  0EFF               	movlw	255
  8470  0012B6  EC1C  F00E         	call	_MNouJoystick
  8471                           
  8472                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8473  0012BA  6822               	setf	_ultimaTeclaAD^0,c
  8474  0012BC  0012               	return		;funcret
  8475  0012BE                     __end_of_JoystickMotor:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _MNouJoystick *****************
  8479 ;; Defined at:
  8480 ;;		line 36 in file "Menu.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  posicio         1    wreg     char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  posicio         1    5[COMRAM] char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1
  8494 ;;      Params:         0       0       0
  8495 ;;      Locals:         1       0       0
  8496 ;;      Temps:          0       0       0
  8497 ;;      Totals:         1       0       0
  8498 ;;Total ram usage:        1 bytes
  8499 ;; Hardware stack levels used: 1
  8500 ;; Hardware stack levels required when called: 2
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_JoystickMotor
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text69
  8509  001C38                     __ptext69:
  8510                           	callstack 0
  8511  001C38                     _MNouJoystick:
  8512                           	callstack 27
  8513                           
  8514                           ;incstack = 0
  8515                           ;MNouJoystick@posicio stored from wreg
  8516  001C38  6E68               	movwf	MNouJoystick@posicio^0,c
  8517                           
  8518                           ;Menu.c: 37:     novaDireccio = posicio;
  8519  001C3A  C068  F053         	movff	MNouJoystick@posicio,_novaDireccio
  8520  001C3E  0012               	return		;funcret
  8521  001C40                     __end_of_MNouJoystick:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _JoystickInit *****************
  8525 ;; Defined at:
  8526 ;;		line 12 in file "Joystick.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1
  8540 ;;      Params:         0       0       0
  8541 ;;      Locals:         0       0       0
  8542 ;;      Temps:          0       0       0
  8543 ;;      Totals:         0       0       0
  8544 ;;Total ram usage:        0 bytes
  8545 ;; Hardware stack levels used: 1
  8546 ;; Hardware stack levels required when called: 2
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text70
  8555  001AE4                     __ptext70:
  8556                           	callstack 0
  8557  001AE4                     _JoystickInit:
  8558                           	callstack 28
  8559                           
  8560                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8561                           
  8562                           ;incstack = 0
  8563  001AE4  0E01               	movlw	1
  8564  001AE6  6EC2               	movwf	194,c	;volatile
  8565                           
  8566                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8567  001AE8  0E0D               	movlw	13
  8568  001AEA  6EC1               	movwf	193,c	;volatile
  8569                           
  8570                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8571  001AEC  0E09               	movlw	9
  8572  001AEE  6EC0               	movwf	192,c	;volatile
  8573                           
  8574                           ;Joystick.c: 16:     ADRESH = 127;
  8575  001AF0  0E7F               	movlw	127
  8576  001AF2  6EC4               	movwf	196,c	;volatile
  8577  001AF4  0C7F               	retlw	127	;funcret
  8578  001AF6                     __end_of_JoystickInit:
  8579                           	callstack 0
  8580                           
  8581 ;; *************** function _GLCDMotor *****************
  8582 ;; Defined at:
  8583 ;;		line 36 in file "GestioLCD.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1
  8597 ;;      Params:         0       0       0
  8598 ;;      Locals:         0       0       0
  8599 ;;      Temps:          0       2       0
  8600 ;;      Totals:         0       2       0
  8601 ;;Total ram usage:        2 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 6
  8604 ;; This function calls:
  8605 ;;		_LcClear
  8606 ;;		_LcGotoXY
  8607 ;;		_LcLliure
  8608 ;;		_LcNewString
  8609 ;;		_LcPutChar
  8610 ;;		_TiGetTics
  8611 ;;		_TiResetTics
  8612 ;; This function is called by:
  8613 ;;		_main
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text71
  8618  0007BE                     __ptext71:
  8619                           	callstack 0
  8620  0007BE                     _GLCDMotor:
  8621                           	callstack 24
  8622                           
  8623                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8624                           
  8625                           ;incstack = 0
  8626  0007BE  D101               	goto	l6085
  8627  0007C0                     l5901:
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8631  0007C0  0E11               	movlw	17
  8632  0007C2  6024               	cpfslt	GLCDMotor@length1^0,c
  8633  0007C4  D00E               	goto	l5911
  8634                           
  8635                           ; BSR set to: 0
  8636  0007C6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8637  0007C8  D00C               	goto	l5911
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8641  0007CA  0E00               	movlw	0
  8642  0007CC  6E70               	movwf	LcGotoXY@Row^0,c
  8643  0007CE  EC67  F00C         	call	_LcGotoXY
  8644                           
  8645                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8646  0007D2  502B               	movf	_menuDaltGLCD^0,w,c
  8647  0007D4  0D1D               	mullw	29
  8648  0007D6  D942               	call	PL38	;call to abstracted procedure
  8649  0007D8  ECCF  F00D         	call	_LcNewString	;wreg free
  8650                           
  8651                           ;GestioLCD.c: 53:     state = 5;
  8652  0007DC  0E05               	movlw	5
  8653  0007DE  6E2A               	movwf	GLCDMotor@state^0,c
  8654                           
  8655                           ;GestioLCD.c: 54:    }
  8656  0007E0  0C05               	retlw	5
  8657  0007E2                     l5911:
  8658                           
  8659                           ; BSR set to: 0
  8660  0007E2  0E10               	movlw	16
  8661  0007E4  6424               	cpfsgt	GLCDMotor@length1^0,c
  8662  0007E6  0C10               	retlw	16
  8663                           
  8664                           ; BSR set to: 0
  8665  0007E8  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8666  0007EA  0C10               	retlw	16
  8667  0007EC                     u6470:
  8668                           
  8669                           ;GestioLCD.c: 56:     state++;
  8670  0007EC  2A2A               	incf	GLCDMotor@state^0,f,c
  8671  0007EE  0012               	return	
  8672  0007F0                     l5917:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;GestioLCD.c: 60:    if (j>=16) {
  8676  0007F0  0E0F               	movlw	15
  8677  0007F2  6429               	cpfsgt	GLCDMotor@j^0,c
  8678  0007F4  D012               	goto	l5931
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;GestioLCD.c: 61:     min1++;
  8682  0007F6  2A28               	incf	GLCDMotor@min1^0,f,c
  8683                           
  8684                           ;GestioLCD.c: 62:     max1++;
  8685  0007F8  2A51               	incf	GLCDMotor@max1^0,f,c
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8689  0007FA  D914               	call	PL4	;call to abstracted procedure
  8690  0007FC  5051               	movf	GLCDMotor@max1^0,w,c
  8691  0007FE  D908               	call	PL2	;call to abstracted procedure
  8692  000800  E101               	bnz	l5925
  8693                           
  8694                           ; BSR set to: 0
  8695  000802  6A51               	clrf	GLCDMotor@max1^0,c
  8696  000804                     l5925:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8700  000804  D90F               	call	PL4	;call to abstracted procedure
  8701  000806  5028               	movf	GLCDMotor@min1^0,w,c
  8702  000808  D903               	call	PL2	;call to abstracted procedure
  8703  00080A  E101               	bnz	l917
  8704                           
  8705                           ; BSR set to: 0
  8706  00080C  6A28               	clrf	GLCDMotor@min1^0,c
  8707  00080E                     l917:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;GestioLCD.c: 65:     j=0;
  8711  00080E  6A29               	clrf	GLCDMotor@j^0,c
  8712                           
  8713                           ;GestioLCD.c: 66:     k1=min1;
  8714  000810  C028  F026         	movff	GLCDMotor@min1,GLCDMotor@k1
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;GestioLCD.c: 67:     state = 6;
  8718  000814  0E06               	movlw	6
  8719  000816  6E2A               	movwf	GLCDMotor@state^0,c
  8720                           
  8721                           ;GestioLCD.c: 68:    }
  8722  000818  0C06               	retlw	6
  8723  00081A                     l5931:
  8724                           
  8725                           ; BSR set to: 0
  8726  00081A  0E10               	movlw	16
  8727  00081C  6029               	cpfslt	GLCDMotor@j^0,c
  8728  00081E  0C10               	retlw	16
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8732  000820  0E00               	movlw	0
  8733  000822  6E70               	movwf	LcGotoXY@Row^0,c
  8734  000824  5029               	movf	GLCDMotor@j^0,w,c
  8735  000826  EC67  F00C         	call	_LcGotoXY
  8736                           
  8737                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8738  00082A  D913               	call	PL10	;call to abstracted procedure
  8739  00082C  D906               	call	PL6	;call to abstracted procedure
  8740  00082E  5026               	movf	GLCDMotor@k1^0,w,c
  8741  000830  D8EF               	call	PL2	;call to abstracted procedure
  8742  000832  EC90  F00B         	call	_LcPutChar
  8743                           
  8744                           ;GestioLCD.c: 72:     j++;
  8745  000836  2A29               	incf	GLCDMotor@j^0,f,c
  8746                           
  8747                           ;GestioLCD.c: 73:     k1++;
  8748  000838  2A26               	incf	GLCDMotor@k1^0,f,c
  8749                           
  8750                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8751  00083A  D90B               	call	PL10	;call to abstracted procedure
  8752  00083C  D8FE               	call	PL6	;call to abstracted procedure
  8753  00083E  5026               	movf	GLCDMotor@k1^0,w,c
  8754  000840  D8E7               	call	PL2	;call to abstracted procedure
  8755  000842  B4D8               	btfsc	status,2,c
  8756                           
  8757                           ; BSR set to: 0
  8758  000844  6A26               	clrf	GLCDMotor@k1^0,c
  8759  000846  0012               	return	
  8760  000848                     l5945:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8764  000848  0E04               	movlw	4
  8765  00084A  602B               	cpfslt	_menuDaltGLCD^0,c
  8766  00084C  D010               	goto	u6570
  8767  00084E  D7CE               	goto	u6470
  8768  000850                     u6540:
  8769                           
  8770                           ;GestioLCD.c: 82:     state = 0;
  8771  000850  6A2A               	clrf	GLCDMotor@state^0,c
  8772  000852  0012               	return	
  8773  000854                     l5953:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8777  000854  ECD5  F00D         	call	_LcLliure	;wreg free
  8778  000858  E306               	bnc	l5959
  8779  00085A  0E04               	movlw	4
  8780  00085C  602B               	cpfslt	_menuDaltGLCD^0,c
  8781  00085E  D003               	goto	l5959
  8782                           
  8783                           ;GestioLCD.c: 87:     state = 7;
  8784  000860  0E07               	movlw	7
  8785  000862  6E2A               	movwf	GLCDMotor@state^0,c
  8786                           
  8787                           ;GestioLCD.c: 88:    }
  8788  000864  0C07               	retlw	7
  8789  000866                     l5959:
  8790  000866  ECD5  F00D         	call	_LcLliure	;wreg free
  8791  00086A  A0D8               	btfss	status,0,c
  8792  00086C  0012               	return	
  8793  00086E                     u6570:
  8794  00086E  0E03               	movlw	3
  8795  000870  642B               	cpfsgt	_menuDaltGLCD^0,c
  8796  000872  0C03               	retlw	3
  8797  000874  D7ED               	goto	u6540
  8798  000876                     l929:
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8802  000876  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8803                           
  8804                           ; BSR set to: 0
  8805  000878  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8806  00087A  0012               	return	
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;GestioLCD.c: 95:     length1 = 0;
  8810  00087C  6A24               	clrf	GLCDMotor@length1^0,c
  8811                           
  8812                           ;GestioLCD.c: 96:     length2 = 0;
  8813  00087E  6A23               	clrf	GLCDMotor@length2^0,c
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8817  000880  0E00               	movlw	0
  8818  000882  6E70               	movwf	LcGotoXY@Row^0,c
  8819  000884  EC67  F00C         	call	_LcGotoXY
  8820                           
  8821                           ;GestioLCD.c: 98:     min1 = 0;
  8822  000888  6A28               	clrf	GLCDMotor@min1^0,c
  8823                           
  8824                           ;GestioLCD.c: 99:     max1 = 15;
  8825  00088A  0E0F               	movlw	15
  8826  00088C  6E51               	movwf	GLCDMotor@max1^0,c
  8827                           
  8828                           ;GestioLCD.c: 100:     min2 = 0;
  8829  00088E  6A27               	clrf	GLCDMotor@min2^0,c
  8830                           
  8831                           ;GestioLCD.c: 101:     max2 = 15;
  8832  000890  0E0F               	movlw	15
  8833  000892  6E50               	movwf	GLCDMotor@max2^0,c
  8834                           
  8835                           ;GestioLCD.c: 102:     j = 0;
  8836  000894  6A29               	clrf	GLCDMotor@j^0,c
  8837                           
  8838                           ;GestioLCD.c: 103:     k1 = 0;
  8839  000896  6A26               	clrf	GLCDMotor@k1^0,c
  8840                           
  8841                           ;GestioLCD.c: 104:     k2 = 0;
  8842  000898  6A25               	clrf	GLCDMotor@k2^0,c
  8843                           
  8844                           ;GestioLCD.c: 105:     newString = 0;
  8845  00089A  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8846  00089C  D7A7               	goto	u6470
  8847  00089E                     l5989:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8851  00089E  D8C2               	call	PL4	;call to abstracted procedure
  8852  0008A0  5024               	movf	GLCDMotor@length1^0,w,c
  8853  0008A2  D8B6               	call	PL2	;call to abstracted procedure
  8854  0008A4  E104               	bnz	l5995
  8855                           
  8856                           ; BSR set to: 0
  8857  0008A6  0E03               	movlw	3
  8858  0008A8  642B               	cpfsgt	_menuDaltGLCD^0,c
  8859  0008AA  D001               	goto	l5995
  8860  0008AC  D79F               	goto	u6470
  8861  0008AE                     l5995:
  8862                           
  8863                           ; BSR set to: 0
  8864  0008AE  D8BA               	call	PL4	;call to abstracted procedure
  8865  0008B0  5024               	movf	GLCDMotor@length1^0,w,c
  8866  0008B2  D8AE               	call	PL2	;call to abstracted procedure
  8867  0008B4  E002               	bz	l5999
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;GestioLCD.c: 114:     length1++;
  8871  0008B6  2A24               	incf	GLCDMotor@length1^0,f,c
  8872                           
  8873                           ;GestioLCD.c: 115:    }
  8874  0008B8  0012               	return	
  8875  0008BA                     l5999:
  8876                           
  8877                           ; BSR set to: 0
  8878  0008BA  0E04               	movlw	4
  8879  0008BC  602B               	cpfslt	_menuDaltGLCD^0,c
  8880  0008BE  0C04               	retlw	4
  8881                           
  8882                           ; BSR set to: 0
  8883  0008C0  D8B1               	call	PL4	;call to abstracted procedure
  8884  0008C2  5024               	movf	GLCDMotor@length1^0,w,c
  8885  0008C4  D8A5               	call	PL2	;call to abstracted procedure
  8886  0008C6  A4D8               	btfss	status,2,c
  8887  0008C8  0012               	return	
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;GestioLCD.c: 117:     state = 13;
  8891  0008CA  0E0D               	movlw	13
  8892  0008CC  6E2A               	movwf	GLCDMotor@state^0,c
  8893  0008CE  0C0D               	retlw	13
  8894  0008D0                     l6005:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8898  0008D0  0E11               	movlw	17
  8899  0008D2  6023               	cpfslt	GLCDMotor@length2^0,c
  8900  0008D4  D010               	goto	l6015
  8901                           
  8902                           ; BSR set to: 0
  8903  0008D6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8904  0008D8  D00E               	goto	l6015
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8908  0008DA  ECC3  F003         	call	PL34	;call to abstracted procedure
  8909  0008DE  EC67  F00C         	call	_LcGotoXY
  8910                           
  8911                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8912  0008E2  502B               	movf	_menuDaltGLCD^0,w,c
  8913  0008E4  0D1D               	mullw	29
  8914  0008E6  0E1D               	movlw	29
  8915  0008E8  26F3               	addwf	243,f,c
  8916  0008EA  0E00               	movlw	0
  8917  0008EC  22F4               	addwfc	244,f,c
  8918  0008EE  D8B6               	call	PL38	;call to abstracted procedure
  8919  0008F0  ECCF  F00D         	call	_LcNewString	;wreg free
  8920  0008F4  D77B               	goto	u6470
  8921  0008F6                     l6015:
  8922                           
  8923                           ; BSR set to: 0
  8924  0008F6  0E10               	movlw	16
  8925  0008F8  6423               	cpfsgt	GLCDMotor@length2^0,c
  8926  0008FA  0C10               	retlw	16
  8927                           
  8928                           ; BSR set to: 0
  8929  0008FC  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8930  0008FE  0C10               	retlw	16
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;GestioLCD.c: 127:     state = 9;
  8934  000900  0E09               	movlw	9
  8935  000902  6E2A               	movwf	GLCDMotor@state^0,c
  8936  000904  0C09               	retlw	9
  8937  000906                     l6021:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;GestioLCD.c: 131:    if (j<16) {
  8941  000906  0E10               	movlw	16
  8942  000908  6029               	cpfslt	GLCDMotor@j^0,c
  8943  00090A  D016               	goto	l6035
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8947  00090C  0E01               	movlw	1
  8948  00090E  6E70               	movwf	LcGotoXY@Row^0,c
  8949  000910  5029               	movf	GLCDMotor@j^0,w,c
  8950  000912  EC67  F00C         	call	_LcGotoXY
  8951                           
  8952                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8953  000916  D89D               	call	PL10	;call to abstracted procedure
  8954  000918  D890               	call	PL6	;call to abstracted procedure
  8955  00091A  5025               	movf	GLCDMotor@k2^0,w,c
  8956  00091C  D896               	call	PL8	;call to abstracted procedure
  8957  00091E  D878               	call	PL2	;call to abstracted procedure
  8958  000920  EC90  F00B         	call	_LcPutChar
  8959                           
  8960                           ;GestioLCD.c: 134:     j++;
  8961  000924  2A29               	incf	GLCDMotor@j^0,f,c
  8962                           
  8963                           ;GestioLCD.c: 135:     k2++;
  8964  000926  2A25               	incf	GLCDMotor@k2^0,f,c
  8965                           
  8966                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8967  000928  D894               	call	PL10	;call to abstracted procedure
  8968  00092A  D887               	call	PL6	;call to abstracted procedure
  8969  00092C  5025               	movf	GLCDMotor@k2^0,w,c
  8970  00092E  D88D               	call	PL8	;call to abstracted procedure
  8971  000930  D86F               	call	PL2	;call to abstracted procedure
  8972  000932  B4D8               	btfsc	status,2,c
  8973                           
  8974                           ; BSR set to: 0
  8975  000934  6A25               	clrf	GLCDMotor@k2^0,c
  8976  000936  0012               	return	
  8977  000938                     l6035:
  8978                           
  8979                           ; BSR set to: 0
  8980  000938  0E0F               	movlw	15
  8981  00093A  6429               	cpfsgt	GLCDMotor@j^0,c
  8982  00093C  0C0F               	retlw	15
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;GestioLCD.c: 139:     min2++;
  8986  00093E  2A27               	incf	GLCDMotor@min2^0,f,c
  8987                           
  8988                           ;GestioLCD.c: 140:     max2++;
  8989  000940  2A50               	incf	GLCDMotor@max2^0,f,c
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8993  000942  D870               	call	PL4	;call to abstracted procedure
  8994  000944  5050               	movf	GLCDMotor@max2^0,w,c
  8995  000946  D881               	call	PL8	;call to abstracted procedure
  8996  000948  D863               	call	PL2	;call to abstracted procedure
  8997  00094A  E101               	bnz	l6043
  8998                           
  8999                           ; BSR set to: 0
  9000  00094C  6A50               	clrf	GLCDMotor@max2^0,c
  9001  00094E                     l6043:
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9005  00094E  D86A               	call	PL4	;call to abstracted procedure
  9006  000950  5027               	movf	GLCDMotor@min2^0,w,c
  9007  000952  D87B               	call	PL8	;call to abstracted procedure
  9008  000954  D85D               	call	PL2	;call to abstracted procedure
  9009  000956  E101               	bnz	l947
  9010                           
  9011                           ; BSR set to: 0
  9012  000958  6A27               	clrf	GLCDMotor@min2^0,c
  9013  00095A                     l947:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;GestioLCD.c: 143:     j=0;
  9017  00095A  6A29               	clrf	GLCDMotor@j^0,c
  9018                           
  9019                           ;GestioLCD.c: 144:     k2=min2;
  9020  00095C  C027  F025         	movff	GLCDMotor@min2,GLCDMotor@k2
  9021  000960  D745               	goto	u6470
  9022  000962                     l6049:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9026  000962  502C               	movf	_timerGLCD^0,w,c
  9027  000964  ECBE  F00C         	call	_TiGetTics
  9028  000968  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  9029  00096A  D00A               	goto	l949
  9030  00096C  D87E               	call	PL70	;call to abstracted procedure
  9031  00096E  E308               	bnc	l949
  9032  000970  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9033  000972  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9034  000974  D005               	goto	l949
  9035                           
  9036                           ;GestioLCD.c: 150:     LcClear();
  9037  000976  ECF5  F00C         	call	_LcClear	;wreg free
  9038  00097A                     l6057:
  9039                           
  9040                           ;GestioLCD.c: 151:     state = 2;
  9041  00097A  0E02               	movlw	2
  9042  00097C  6E2A               	movwf	GLCDMotor@state^0,c
  9043                           
  9044                           ;GestioLCD.c: 152:    }
  9045  00097E  0C02               	retlw	2
  9046  000980                     l949:
  9047  000980  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9048  000982  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9049  000984  0012               	return	
  9050                           
  9051                           ;GestioLCD.c: 154:     LcClear();
  9052  000986  ECF5  F00C         	call	_LcClear	;wreg free
  9053  00098A  D762               	goto	u6540
  9054  00098C                     l6065:
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9058  00098C  502C               	movf	_timerGLCD^0,w,c
  9059  00098E  EC42  F00D         	call	_TiResetTics
  9060  000992  D72C               	goto	u6470
  9061  000994                     l6069:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9065  000994  ECD5  F00D         	call	_LcLliure	;wreg free
  9066  000998  A0D8               	btfss	status,0,c
  9067  00099A  0012               	return	
  9068                           
  9069                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9070  00099C  502C               	movf	_timerGLCD^0,w,c
  9071  00099E  EC42  F00D         	call	_TiResetTics
  9072                           
  9073                           ;GestioLCD.c: 165:     state = 11;
  9074  0009A2  0E0B               	movlw	11
  9075  0009A4  6E2A               	movwf	GLCDMotor@state^0,c
  9076  0009A6  0C0B               	retlw	11
  9077  0009A8                     l6075:
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9081  0009A8  D83D               	call	PL4	;call to abstracted procedure
  9082  0009AA  5023               	movf	GLCDMotor@length2^0,w,c
  9083  0009AC  D84E               	call	PL8	;call to abstracted procedure
  9084  0009AE  D830               	call	PL2	;call to abstracted procedure
  9085  0009B0  E002               	bz	l6079
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;GestioLCD.c: 170:     length2++;
  9089  0009B2  2A23               	incf	GLCDMotor@length2^0,f,c
  9090                           
  9091                           ;GestioLCD.c: 171:    }
  9092  0009B4  0012               	return	
  9093  0009B6                     l6079:
  9094                           
  9095                           ; BSR set to: 0
  9096  0009B6  D836               	call	PL4	;call to abstracted procedure
  9097  0009B8  5023               	movf	GLCDMotor@length2^0,w,c
  9098  0009BA  D847               	call	PL8	;call to abstracted procedure
  9099  0009BC  D829               	call	PL2	;call to abstracted procedure
  9100  0009BE  E0DD               	bz	l6057
  9101  0009C0  0012               	return	
  9102  0009C2                     l6085:
  9103  0009C2  502A               	movf	GLCDMotor@state^0,w,c
  9104  0009C4  0100               	movlb	0	; () banked
  9105  0009C6  6FB6               	movwf	??_GLCDMotor& (0+255),b
  9106  0009C8  6BB7               	clrf	(??_GLCDMotor+1)& (0+255),b
  9107                           
  9108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9109                           ; Switch size 1, requested type "space"
  9110                           ; Number of cases is 1, Range of values is 0 to 0
  9111                           ; switch strategies available:
  9112                           ; Name         Instructions Cycles
  9113                           ; simple_byte            4     3 (average)
  9114                           ;	Chosen strategy is simple_byte
  9115  0009CA  51B7               	movf	(??_GLCDMotor+1)& (0+255),w,b
  9116  0009CC  A4D8               	btfss	status,2,c
  9117  0009CE  0012               	return	
  9118                           
  9119                           ; BSR set to: 0
  9120                           ; Switch size 1, requested type "space"
  9121                           ; Number of cases is 12, Range of values is 0 to 13
  9122                           ; switch strategies available:
  9123                           ; Name         Instructions Cycles
  9124                           ; simple_byte           37    19 (average)
  9125                           ;	Chosen strategy is simple_byte
  9126  0009D0  51B6               	movf	??_GLCDMotor& (0+255),w,b
  9127  0009D2  E101 D750          	bz	l929
  9128  0009D6  0A01               	xorlw	1	; case 1
  9129  0009D8  E101 D761          	bz	l5989
  9130  0009DC  0A03               	xorlw	3	; case 2
  9131  0009DE  E101 D6EF          	bz	l5901
  9132  0009E2  0A01               	xorlw	1	; case 3
  9133  0009E4  E101 D704          	bz	l5917
  9134  0009E8  0A06               	xorlw	6	; case 5
  9135  0009EA  E101 D733          	bz	l5953
  9136  0009EE  0A03               	xorlw	3	; case 6
  9137  0009F0  E101 D72A          	bz	l5945
  9138  0009F4  0A01               	xorlw	1	; case 7
  9139  0009F6  E101 D76B          	bz	l6005
  9140  0009FA  0A0F               	xorlw	15	; case 8
  9141  0009FC  E0CB               	bz	l6069
  9142  0009FE  0A01               	xorlw	1	; case 9
  9143  000A00  E082               	bz	l6021
  9144  000A02  0A03               	xorlw	3	; case 10
  9145  000A04  E0C3               	bz	l6065
  9146  000A06  0A01               	xorlw	1	; case 11
  9147  000A08  E0AC               	bz	l6049
  9148  000A0A  0A06               	xorlw	6	; case 13
  9149  000A0C  E0CD               	bz	l6075
  9150  000A0E  0012               	return		;funcret
  9151  000A10                     __end_of_GLCDMotor:
  9152                           	callstack 0
  9153  000A10                     PL2:
  9154                           	callstack 24
  9155  000A10  27B6               	addwf	??_GLCDMotor& (0+255),f,b
  9156  000A12  0E00               	movlw	0
  9157  000A14  23B7               	addwfc	(??_GLCDMotor+1)& (0+255),f,b
  9158  000A16  C0B6  FFF6         	movff	??_GLCDMotor,tblptrl
  9159  000A1A  C0B7  FFF7         	movff	??_GLCDMotor+1,tblptrh
  9160  000A1E                     	if	0	;tblptru may be non-zero
  9161  000A1E                     	endif
  9162  000A1E                     	if	0	;tblptru may be non-zero
  9163  000A1E                     	endif
  9164  000A1E  0008               	tblrd		*
  9165  000A20  50F5               	movf	tablat,w,c
  9166  000A22  0012               	return	
  9167  000A24                     __end_ofPL2:
  9168                           	callstack 0
  9169  000A24                     PL4:
  9170                           	callstack 24
  9171  000A24  502B               	movf	_menuDaltGLCD^0,w,c
  9172  000A26  0D1D               	mullw	29
  9173  000A28  0E0B               	movlw	low _menuList
  9174  000A2A  6FB6               	movwf	??_GLCDMotor& (0+255),b
  9175  000A2C  0E1F               	movlw	high _menuList
  9176  000A2E  6FB7               	movwf	(??_GLCDMotor+1)& (0+255),b
  9177  000A30  50F3               	movf	243,w,c
  9178  000A32  27B6               	addwf	??_GLCDMotor& (0+255),f,b
  9179  000A34  50F4               	movf	244,w,c
  9180  000A36  23B7               	addwfc	(??_GLCDMotor+1)& (0+255),f,b
  9181  000A38  0012               	return	
  9182  000A3A                     __end_ofPL4:
  9183                           	callstack 0
  9184  000A3A                     PL6:
  9185                           	callstack 24
  9186  000A3A  6FB6               	movwf	??_GLCDMotor& (0+255),b
  9187  000A3C  0E1F               	movlw	high _menuList
  9188  000A3E  6FB7               	movwf	(??_GLCDMotor+1)& (0+255),b
  9189  000A40  50F3               	movf	243,w,c
  9190  000A42  27B6               	addwf	??_GLCDMotor& (0+255),f,b
  9191  000A44  50F4               	movf	244,w,c
  9192  000A46  23B7               	addwfc	(??_GLCDMotor+1)& (0+255),f,b
  9193  000A48  0012               	return	
  9194  000A4A                     __end_ofPL6:
  9195                           	callstack 0
  9196  000A4A                     PL8:
  9197                           	callstack 24
  9198  000A4A  27B6               	addwf	??_GLCDMotor& (0+255),f,b
  9199  000A4C  0E00               	movlw	0
  9200  000A4E  23B7               	addwfc	(??_GLCDMotor+1)& (0+255),f,b
  9201  000A50  0C1D               	retlw	29
  9202  000A52                     __end_ofPL8:
  9203                           	callstack 0
  9204  000A52                     PL10:
  9205                           	callstack 24
  9206  000A52  502B               	movf	_menuDaltGLCD^0,w,c
  9207  000A54  0D1D               	mullw	29
  9208  000A56  0E0B               	movlw	low _menuList
  9209  000A58  0100               	movlb	0	; () banked
  9210  000A5A  0012               	return	
  9211  000A5C                     __end_ofPL10:
  9212                           	callstack 0
  9213  000A5C                     PL38:
  9214                           	callstack 24
  9215  000A5C  0E0B               	movlw	low _menuList
  9216  000A5E  24F3               	addwf	243,w,c
  9217  000A60  6E6B               	movwf	LcNewString@new_s^0,c
  9218  000A62  0E1F               	movlw	high _menuList
  9219  000A64  20F4               	addwfc	prodh,w,c
  9220  000A66  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  9221  000A68  0012               	return	
  9222  000A6A                     __end_ofPL38:
  9223                           	callstack 0
  9224  000A6A                     PL70:
  9225                           	callstack 27
  9226  000A6A  0EB5               	movlw	181
  9227  000A6C  5C68               	subwf	?_TiGetTics^0,w,c
  9228  000A6E  0E04               	movlw	4
  9229  000A70  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  9230  000A72  0012               	return	
  9231  000A74                     __end_ofPL70:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _LcPutChar *****************
  9235 ;; Defined at:
  9236 ;;		line 134 in file "LcTLCD.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  c               1    wreg     unsigned char 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  c               1   19[COMRAM] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1
  9250 ;;      Params:         0       0       0
  9251 ;;      Locals:         1       0       0
  9252 ;;      Temps:          0       0       0
  9253 ;;      Totals:         1       0       0
  9254 ;;Total ram usage:        1 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 5
  9257 ;; This function calls:
  9258 ;;		_CantaData
  9259 ;;		_LcGotoXY
  9260 ;;		_WaitForBusy
  9261 ;; This function is called by:
  9262 ;;		_LcLCD
  9263 ;;		_menu
  9264 ;;		_GLCDMotor
  9265 ;;		_motorSIO
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text72
  9270  001720                     __ptext72:
  9271                           	callstack 0
  9272  001720                     _LcPutChar:
  9273                           	callstack 24
  9274                           
  9275                           ;incstack = 0
  9276                           ;LcPutChar@c stored from wreg
  9277  001720  6E76               	movwf	LcPutChar@c^0,c
  9278                           
  9279                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  9280  001722  ECF7  F00B         	call	_WaitForBusy	;wreg free
  9281  001726  5076               	movf	LcPutChar@c^0,w,c
  9282  001728  EC16  F00C         	call	_CantaData
  9283                           
  9284                           ;LcTLCD.c: 138:  ++ColumnAct;
  9285  00172C  2A43               	incf	_ColumnAct^0,f,c
  9286                           
  9287                           ;LcTLCD.c: 140:  if (Rows == 2) {
  9288  00172E  0E02               	movlw	2
  9289  001730  1845               	xorwf	_Rows^0,w,c
  9290  001732  E10C               	bnz	l4229
  9291                           
  9292                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  9293  001734  0E27               	movlw	39
  9294  001736  6443               	cpfsgt	_ColumnAct^0,c
  9295  001738  D009               	goto	l4229
  9296                           
  9297                           ;LcTLCD.c: 142:    ColumnAct = 0;
  9298  00173A  6A43               	clrf	_ColumnAct^0,c
  9299                           
  9300                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  9301  00173C  2A44               	incf	_RowAct^0,f,c
  9302  00173E  0E01               	movlw	1
  9303  001740  6444               	cpfsgt	_RowAct^0,c
  9304  001742  D001               	goto	l4227
  9305  001744  6A44               	clrf	_RowAct^0,c
  9306  001746                     l4227:
  9307                           
  9308                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  9309  001746  D80C               	call	PL74	;call to abstracted procedure
  9310  001748  EC67  F00C         	call	_LcGotoXY
  9311  00174C                     l4229:
  9312                           
  9313                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  9314  00174C  0444               	decf	_RowAct^0,w,c
  9315  00174E  A4D8               	btfss	status,2,c
  9316  001750  0012               	return	
  9317                           
  9318                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  9319  001752  0E27               	movlw	39
  9320  001754  6443               	cpfsgt	_ColumnAct^0,c
  9321  001756  D001               	goto	l4235
  9322  001758  6A43               	clrf	_ColumnAct^0,c
  9323  00175A                     l4235:
  9324                           
  9325                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  9326  00175A  D802               	call	PL74	;call to abstracted procedure
  9327  00175C  EF67  F00C         	goto	_LcGotoXY
  9328  001760                     __end_of_LcPutChar:
  9329                           	callstack 0
  9330  001760                     PL74:
  9331                           	callstack 24
  9332  001760  C044  F070         	movff	_RowAct,LcGotoXY@Row
  9333  001764  5043               	movf	_ColumnAct^0,w,c
  9334  001766  0012               	return	
  9335  001768                     __end_ofPL74:
  9336                           	callstack 0
  9337                           
  9338 ;; *************** function _CantaData *****************
  9339 ;; Defined at:
  9340 ;;		line 196 in file "LcTLCD.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  Data            1    wreg     unsigned char 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  Data            1    7[COMRAM] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, status,2, status,0, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1
  9354 ;;      Params:         0       0       0
  9355 ;;      Locals:         1       0       0
  9356 ;;      Temps:          0       0       0
  9357 ;;      Totals:         1       0       0
  9358 ;;Total ram usage:        1 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 3
  9361 ;; This function calls:
  9362 ;;		_CantaPartAlta
  9363 ;;		_CantaPartBaixa
  9364 ;; This function is called by:
  9365 ;;		_LcPutChar
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text73
  9370  00182C                     __ptext73:
  9371                           	callstack 0
  9372  00182C                     _CantaData:
  9373                           	callstack 25
  9374                           
  9375                           ;incstack = 0
  9376                           ;CantaData@Data stored from wreg
  9377  00182C  6E6A               	movwf	CantaData@Data^0,c
  9378                           
  9379                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9380  00182E  9694               	bcf	148,3,c	;volatile
  9381  001830  9494               	bcf	148,2,c	;volatile
  9382  001832  9294               	bcf	148,1,c	;volatile
  9383  001834  9094               	bcf	148,0,c	;volatile
  9384                           
  9385                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  9386  001836  8A8B               	bsf	139,5,c	;volatile
  9387                           
  9388                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  9389  001838  9E8C               	bcf	140,7,c	;volatile
  9390                           
  9391                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  9392  00183A  888B               	bsf	139,4,c	;volatile
  9393                           
  9394                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9395  00183C  506A               	movf	CantaData@Data^0,w,c
  9396  00183E  EC35  F00B         	call	_CantaPartAlta
  9397                           
  9398                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9399                           
  9400                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9401                           
  9402                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9403                           
  9404                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9405  001842  D80B               	call	PL54	;call to abstracted procedure
  9406                           
  9407                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9408  001844  506A               	movf	CantaData@Data^0,w,c
  9409  001846  EC02  F00B         	call	_CantaPartBaixa
  9410                           
  9411                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9412                           
  9413                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9414                           
  9415                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9416  00184A  D000               	goto	PL32	;call to abstracted procedure
  9417  00184C                     __end_of_CantaData:
  9418                           	callstack 0
  9419  00184C                     PL32:
  9420                           	callstack 24
  9421  00184C  888B               	bsf	139,4,c	;volatile
  9422  00184E  988B               	bcf	139,4,c	;volatile
  9423  001850  8694               	bsf	148,3,c	;volatile
  9424  001852  8494               	bsf	148,2,c	;volatile
  9425  001854  8294               	bsf	148,1,c	;volatile
  9426  001856  8094               	bsf	148,0,c	;volatile
  9427  001858  0012               	return		;funcret
  9428  00185A                     __end_ofPL32:
  9429                           	callstack 0
  9430  00185A                     PL54:
  9431                           	callstack 24
  9432  00185A  888B               	bsf	139,4,c	;volatile
  9433  00185C  988B               	bcf	139,4,c	;volatile
  9434  00185E  988B               	bcf	139,4,c	;volatile
  9435  001860  888B               	bsf	139,4,c	;volatile
  9436  001862  0012               	return	
  9437  001864                     __end_ofPL54:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function _LcNewString *****************
  9441 ;; Defined at:
  9442 ;;		line 241 in file "LcTLCD.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9445 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  9446 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9447 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  9448 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1
  9460 ;;      Params:         2       0       0
  9461 ;;      Locals:         0       0       0
  9462 ;;      Temps:          0       0       0
  9463 ;;      Totals:         2       0       0
  9464 ;;Total ram usage:        2 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; Hardware stack levels required when called: 2
  9467 ;; This function calls:
  9468 ;;		Nothing
  9469 ;; This function is called by:
  9470 ;;		_menu
  9471 ;;		_GLCDMotor
  9472 ;;		_motorJoc
  9473 ;;		_motorSIO
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text74
  9478  001B9E                     __ptext74:
  9479                           	callstack 0
  9480  001B9E                     _LcNewString:
  9481                           	callstack 27
  9482                           
  9483                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9484                           
  9485                           ;incstack = 0
  9486  001B9E  C06B  F017         	movff	LcNewString@new_s,_s_ptr
  9487  001BA2  C06C  F018         	movff	LcNewString@new_s+1,_s_ptr+1
  9488                           
  9489                           ;LcTLCD.c: 243:     nou_s = 1;
  9490  001BA6  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9491  001BA8  0012               	return		;funcret
  9492  001BAA                     __end_of_LcNewString:
  9493                           	callstack 0
  9494                           
  9495 ;; *************** function _LcLliure *****************
  9496 ;; Defined at:
  9497 ;;		line 257 in file "LcTLCD.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;		None               void
  9504 ;; Registers used:
  9505 ;;		status,0
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1
  9511 ;;      Params:         0       0       0
  9512 ;;      Locals:         0       0       0
  9513 ;;      Temps:          0       0       0
  9514 ;;      Totals:         0       0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used: 1
  9517 ;; Hardware stack levels required when called: 2
  9518 ;; This function calls:
  9519 ;;		Nothing
  9520 ;; This function is called by:
  9521 ;;		_menu
  9522 ;;		_GLCDMotor
  9523 ;;		_motorJoc
  9524 ;;		_motorSIO
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text75
  9529  001BAA                     __ptext75:
  9530                           	callstack 0
  9531  001BAA                     _LcLliure:
  9532                           	callstack 27
  9533                           
  9534                           ;LcTLCD.c: 258:     return !nou_s;
  9535                           
  9536                           ;incstack = 0
  9537  001BAA  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9538  001BAC  D002               	goto	l2129
  9539  001BAE  90D8               	bcf	status,0,c
  9540  001BB0  0012               	return	
  9541  001BB2                     l2129:
  9542  001BB2  80D8               	bsf	status,0,c
  9543  001BB4  0012               	return		;funcret
  9544  001BB6                     __end_of_LcLliure:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function _LcClear *****************
  9548 ;; Defined at:
  9549 ;;		line 84 in file "LcTLCD.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1
  9563 ;;      Params:         0       0       0
  9564 ;;      Locals:         0       0       0
  9565 ;;      Temps:          0       0       0
  9566 ;;      Totals:         0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 5
  9570 ;; This function calls:
  9571 ;;		_CantaIR
  9572 ;;		_Espera
  9573 ;;		_LcGotoXY
  9574 ;;		_WaitForBusy
  9575 ;; This function is called by:
  9576 ;;		_menu
  9577 ;;		_GLCDMotor
  9578 ;;		_motorSIO
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text76
  9583  0019EA                     __ptext76:
  9584                           	callstack 0
  9585  0019EA                     _LcClear:
  9586                           	callstack 24
  9587                           
  9588                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9589                           
  9590                           ;incstack = 0
  9591  0019EA  ECF7  F00B         	call	_WaitForBusy	;wreg free
  9592  0019EE  0E01               	movlw	1
  9593  0019F0  EC34  F00D         	call	_CantaIR
  9594                           
  9595                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9596  0019F4  D806               	call	PL64	;call to abstracted procedure
  9597  0019F6  EC06  F00D         	call	_Espera
  9598                           
  9599                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9600  0019FA  0E00               	movlw	0
  9601  0019FC  6E70               	movwf	LcGotoXY@Row^0,c
  9602  0019FE  EF67  F00C         	goto	_LcGotoXY
  9603  001A02                     __end_of_LcClear:
  9604                           	callstack 0
  9605  001A02                     PL64:
  9606                           	callstack 26
  9607  001A02  6A70               	clrf	(Espera@ms+1)^0,c
  9608  001A04  0E03               	movlw	3
  9609  001A06  6E6F               	movwf	Espera@ms^0,c
  9610  001A08  5042               	movf	_Timer^0,w,c
  9611  001A0A  0012               	return	
  9612  001A0C                     __end_ofPL64:
  9613                           	callstack 0
  9614                           
  9615 ;; *************** function _LcGotoXY *****************
  9616 ;; Defined at:
  9617 ;;		line 106 in file "LcTLCD.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  Column          1    wreg     unsigned char 
  9620 ;;  Row             1   13[COMRAM] unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  Column          1   18[COMRAM] unsigned char 
  9623 ;;  Fisics          2   14[COMRAM] int 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1
  9633 ;;      Params:         1       0       0
  9634 ;;      Locals:         5       0       0
  9635 ;;      Temps:          0       0       0
  9636 ;;      Totals:         6       0       0
  9637 ;;Total ram usage:        6 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 4
  9640 ;; This function calls:
  9641 ;;		_CantaIR
  9642 ;;		_WaitForBusy
  9643 ;; This function is called by:
  9644 ;;		_LcClear
  9645 ;;		_LcPutChar
  9646 ;;		_menu
  9647 ;;		_GLCDMotor
  9648 ;;		_motorJoc
  9649 ;;		_motorSIO
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text77
  9654  0018CE                     __ptext77:
  9655                           	callstack 0
  9656  0018CE                     _LcGotoXY:
  9657                           	callstack 24
  9658                           
  9659                           ;incstack = 0
  9660                           ;LcGotoXY@Column stored from wreg
  9661  0018CE  6E75               	movwf	LcGotoXY@Column^0,c
  9662                           
  9663                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9664  0018D0  5070               	movf	LcGotoXY@Row^0,w,c
  9665  0018D2  E004               	bz	l57
  9666  0018D4  6A74               	clrf	(_LcGotoXY$336+1)^0,c
  9667  0018D6  0E40               	movlw	64
  9668  0018D8  6E73               	movwf	_LcGotoXY$336^0,c
  9669  0018DA  D002               	goto	l4155
  9670  0018DC                     l57:
  9671  0018DC  6A73               	clrf	_LcGotoXY$336^0,c
  9672  0018DE  6A74               	clrf	(_LcGotoXY$336+1)^0,c
  9673  0018E0                     l4155:
  9674  0018E0  5075               	movf	LcGotoXY@Column^0,w,c
  9675  0018E2  2473               	addwf	_LcGotoXY$336^0,w,c
  9676  0018E4  6E71               	movwf	LcGotoXY@Fisics^0,c
  9677  0018E6  0E00               	movlw	0
  9678  0018E8  2074               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9679  0018EA  6E72               	movwf	(LcGotoXY@Fisics+1)^0,c
  9680                           
  9681                           ;LcTLCD.c: 127:  WaitForBusy();
  9682  0018EC  ECF7  F00B         	call	_WaitForBusy	;wreg free
  9683                           
  9684                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9685  0018F0  5071               	movf	LcGotoXY@Fisics^0,w,c
  9686  0018F2  0980               	iorlw	128
  9687  0018F4  EC34  F00D         	call	_CantaIR
  9688                           
  9689                           ;LcTLCD.c: 130:  RowAct = Row;
  9690  0018F8  C070  F044         	movff	LcGotoXY@Row,_RowAct
  9691                           
  9692                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9693  0018FC  C075  F043         	movff	LcGotoXY@Column,_ColumnAct
  9694  001900  0012               	return		;funcret
  9695  001902                     __end_of_LcGotoXY:
  9696                           	callstack 0
  9697                           
  9698 ;; *************** function _WaitForBusy *****************
  9699 ;; Defined at:
  9700 ;;		line 212 in file "LcTLCD.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  Busy            1   12[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1
  9714 ;;      Params:         0       0       0
  9715 ;;      Locals:         1       0       0
  9716 ;;      Temps:          0       0       0
  9717 ;;      Totals:         1       0       0
  9718 ;;Total ram usage:        1 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 3
  9721 ;; This function calls:
  9722 ;;		_TiGetTics
  9723 ;;		_TiResetTics
  9724 ;; This function is called by:
  9725 ;;		_LcInit
  9726 ;;		_LcClear
  9727 ;;		_LcGotoXY
  9728 ;;		_LcPutChar
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text78
  9733  0017EE                     __ptext78:
  9734                           	callstack 0
  9735  0017EE                     _WaitForBusy:
  9736                           	callstack 25
  9737                           
  9738                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9739                           
  9740                           ;incstack = 0
  9741  0017EE  8694               	bsf	148,3,c	;volatile
  9742  0017F0  8494               	bsf	148,2,c	;volatile
  9743  0017F2  8294               	bsf	148,1,c	;volatile
  9744  0017F4  8094               	bsf	148,0,c	;volatile
  9745                           
  9746                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9747  0017F6  9A8B               	bcf	139,5,c	;volatile
  9748                           
  9749                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9750  0017F8  8E8C               	bsf	140,7,c	;volatile
  9751                           
  9752                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9753  0017FA  5042               	movf	_Timer^0,w,c
  9754  0017FC  EC42  F00D         	call	_TiResetTics
  9755  001800                     l4123:
  9756                           
  9757                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9758  001800  888B               	bsf	139,4,c	;volatile
  9759  001802  888B               	bsf	139,4,c	;volatile
  9760                           
  9761                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9762  001804  0E00               	movlw	0
  9763  001806  B682               	btfsc	130,3,c	;volatile
  9764  001808  0E01               	movlw	1
  9765  00180A  6E6F               	movwf	WaitForBusy@Busy^0,c
  9766                           
  9767                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9768  00180C  988B               	bcf	139,4,c	;volatile
  9769                           
  9770                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9771  00180E  988B               	bcf	139,4,c	;volatile
  9772                           
  9773                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9774  001810  888B               	bsf	139,4,c	;volatile
  9775  001812  888B               	bsf	139,4,c	;volatile
  9776                           
  9777                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9778  001814  988B               	bcf	139,4,c	;volatile
  9779                           
  9780                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9781  001816  988B               	bcf	139,4,c	;volatile
  9782                           
  9783                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9784  001818  5042               	movf	_Timer^0,w,c
  9785  00181A  ECBE  F00C         	call	_TiGetTics
  9786  00181E  5068               	movf	?_TiGetTics^0,w,c
  9787  001820  1069               	iorwf	(?_TiGetTics+1)^0,w,c
  9788  001822  E001               	bz	l4145
  9789  001824  0012               	return	
  9790  001826                     l4145:
  9791                           
  9792                           ;LcTLCD.c: 227:  } while(Busy);
  9793  001826  506F               	movf	WaitForBusy@Busy^0,w,c
  9794  001828  E1EB               	bnz	l4123
  9795  00182A  0012               	return		;funcret
  9796  00182C                     __end_of_WaitForBusy:
  9797                           	callstack 0
  9798                           
  9799 ;; *************** function _CantaIR *****************
  9800 ;; Defined at:
  9801 ;;		line 180 in file "LcTLCD.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  IR              1    wreg     unsigned char 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  IR              1    7[COMRAM] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1
  9815 ;;      Params:         0       0       0
  9816 ;;      Locals:         1       0       0
  9817 ;;      Temps:          0       0       0
  9818 ;;      Totals:         1       0       0
  9819 ;;Total ram usage:        1 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 3
  9822 ;; This function calls:
  9823 ;;		_CantaPartAlta
  9824 ;;		_CantaPartBaixa
  9825 ;; This function is called by:
  9826 ;;		_LcScroll
  9827 ;;		_LcInit
  9828 ;;		_LcClear
  9829 ;;		_LcGotoXY
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text79
  9834  001A68                     __ptext79:
  9835                           	callstack 0
  9836  001A68                     _CantaIR:
  9837                           	callstack 24
  9838                           
  9839                           ;incstack = 0
  9840                           ;CantaIR@IR stored from wreg
  9841  001A68  6E6A               	movwf	CantaIR@IR^0,c
  9842                           
  9843                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9844  001A6A  9694               	bcf	148,3,c	;volatile
  9845                           
  9846                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9847                           
  9848                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9849                           
  9850                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9851  001A6C  EC86  F00A         	call	PL40	;call to abstracted procedure
  9852                           
  9853                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9854  001A70  506A               	movf	CantaIR@IR^0,w,c
  9855  001A72  EC35  F00B         	call	_CantaPartAlta
  9856                           
  9857                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9858                           
  9859                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9860                           
  9861                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9862                           
  9863                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9864  001A76  EC2D  F00C         	call	PL54	;call to abstracted procedure
  9865                           
  9866                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9867  001A7A  506A               	movf	CantaIR@IR^0,w,c
  9868  001A7C  EC02  F00B         	call	_CantaPartBaixa
  9869                           
  9870                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9871                           
  9872                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9873                           
  9874                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9875  001A80  EF26  F00C         	goto	PL32	;call to abstracted procedure
  9876  001A84                     __end_of_CantaIR:
  9877                           	callstack 0
  9878                           
  9879 ;; *************** function _CantaPartBaixa *****************
  9880 ;; Defined at:
  9881 ;;		line 173 in file "LcTLCD.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  c               1    wreg     unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  c               1    6[COMRAM] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1    wreg      void 
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1
  9895 ;;      Params:         0       0       0
  9896 ;;      Locals:         1       0       0
  9897 ;;      Temps:          1       0       0
  9898 ;;      Totals:         2       0       0
  9899 ;;Total ram usage:        2 bytes
  9900 ;; Hardware stack levels used: 1
  9901 ;; Hardware stack levels required when called: 2
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_CantaIR
  9906 ;;		_CantaData
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text80
  9911  001604                     __ptext80:
  9912                           	callstack 0
  9913  001604                     _CantaPartBaixa:
  9914                           	callstack 24
  9915                           
  9916                           ;incstack = 0
  9917                           ;CantaPartBaixa@c stored from wreg
  9918  001604  6E69               	movwf	CantaPartBaixa@c^0,c
  9919                           
  9920                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9921  001606  A669               	btfss	CantaPartBaixa@c^0,3,c
  9922  001608  D003               	goto	u3520
  9923  00160A  6A68               	clrf	??_CantaPartBaixa^0,c
  9924  00160C  2A68               	incf	??_CantaPartBaixa^0,f,c
  9925  00160E  D001               	goto	u3538
  9926  001610                     u3520:
  9927  001610  6A68               	clrf	??_CantaPartBaixa^0,c
  9928  001612                     u3538:
  9929  001612  4668               	rlncf	??_CantaPartBaixa^0,f,c
  9930  001614  D825               	call	PL58	;call to abstracted procedure
  9931  001616  0BF7               	andlw	-9
  9932  001618  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9933  00161A  6E8B               	movwf	139,c	;volatile
  9934                           
  9935                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9936  00161C  A469               	btfss	CantaPartBaixa@c^0,2,c
  9937  00161E  D003               	goto	u3540
  9938  001620  6A68               	clrf	??_CantaPartBaixa^0,c
  9939  001622  2A68               	incf	??_CantaPartBaixa^0,f,c
  9940  001624  D001               	goto	u3558
  9941  001626                     u3540:
  9942  001626  6A68               	clrf	??_CantaPartBaixa^0,c
  9943  001628                     u3558:
  9944  001628  D81B               	call	PL58	;call to abstracted procedure
  9945  00162A  0BFB               	andlw	-5
  9946  00162C  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9947  00162E  6E8B               	movwf	139,c	;volatile
  9948                           
  9949                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9950  001630  A269               	btfss	CantaPartBaixa@c^0,1,c
  9951  001632  D003               	goto	u3560
  9952  001634  6A68               	clrf	??_CantaPartBaixa^0,c
  9953  001636  2A68               	incf	??_CantaPartBaixa^0,f,c
  9954  001638  D001               	goto	u3578
  9955  00163A                     u3560:
  9956  00163A  6A68               	clrf	??_CantaPartBaixa^0,c
  9957  00163C                     u3578:
  9958  00163C  4668               	rlncf	??_CantaPartBaixa^0,f,c
  9959  00163E  508B               	movf	139,w,c	;volatile
  9960  001640  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9961  001642  0BFD               	andlw	-3
  9962  001644  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9963  001646  6E8B               	movwf	139,c	;volatile
  9964                           
  9965                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9966  001648  A069               	btfss	CantaPartBaixa@c^0,0,c
  9967  00164A  D003               	goto	u3580
  9968  00164C  6A68               	clrf	??_CantaPartBaixa^0,c
  9969  00164E  2A68               	incf	??_CantaPartBaixa^0,f,c
  9970  001650  D001               	goto	u3598
  9971  001652                     u3580:
  9972  001652  6A68               	clrf	??_CantaPartBaixa^0,c
  9973  001654                     u3598:
  9974  001654  508B               	movf	139,w,c	;volatile
  9975  001656  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9976  001658  0BFE               	andlw	-2
  9977  00165A  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9978  00165C  6E8B               	movwf	139,c	;volatile
  9979  00165E  0012               	return		;funcret
  9980  001660                     __end_of_CantaPartBaixa:
  9981                           	callstack 0
  9982  001660                     PL58:
  9983                           	callstack 24
  9984  001660  4668               	rlncf	??_CantaPartBaixa^0,f,c
  9985  001662  4668               	rlncf	??_CantaPartBaixa^0,f,c
  9986  001664  508B               	movf	139,w,c	;volatile
  9987  001666  1868               	xorwf	??_CantaPartBaixa^0,w,c
  9988  001668  0012               	return	
  9989  00166A                     __end_ofPL58:
  9990                           	callstack 0
  9991                           
  9992 ;; *************** function _CantaPartAlta *****************
  9993 ;; Defined at:
  9994 ;;		line 166 in file "LcTLCD.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  c               1    wreg     unsigned char 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  c               1    6[COMRAM] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1
 10008 ;;      Params:         0       0       0
 10009 ;;      Locals:         1       0       0
 10010 ;;      Temps:          1       0       0
 10011 ;;      Totals:         2       0       0
 10012 ;;Total ram usage:        2 bytes
 10013 ;; Hardware stack levels used: 1
 10014 ;; Hardware stack levels required when called: 2
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_CantaIR
 10019 ;;		_CantaData
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text81
 10024  00166A                     __ptext81:
 10025                           	callstack 0
 10026  00166A                     _CantaPartAlta:
 10027                           	callstack 24
 10028                           
 10029                           ;incstack = 0
 10030                           ;CantaPartAlta@c stored from wreg
 10031  00166A  6E69               	movwf	CantaPartAlta@c^0,c
 10032                           
 10033                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10034  00166C  AE69               	btfss	CantaPartAlta@c^0,7,c
 10035  00166E  D003               	goto	u3440
 10036  001670  6A68               	clrf	??_CantaPartAlta^0,c
 10037  001672  2A68               	incf	??_CantaPartAlta^0,f,c
 10038  001674  D001               	goto	u3458
 10039  001676                     u3440:
 10040  001676  6A68               	clrf	??_CantaPartAlta^0,c
 10041  001678                     u3458:
 10042  001678  4668               	rlncf	??_CantaPartAlta^0,f,c
 10043  00167A  D825               	call	PL68	;call to abstracted procedure
 10044  00167C  0BF7               	andlw	-9
 10045  00167E  1868               	xorwf	??_CantaPartAlta^0,w,c
 10046  001680  6E8B               	movwf	139,c	;volatile
 10047                           
 10048                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10049  001682  AC69               	btfss	CantaPartAlta@c^0,6,c
 10050  001684  D003               	goto	u3460
 10051  001686  6A68               	clrf	??_CantaPartAlta^0,c
 10052  001688  2A68               	incf	??_CantaPartAlta^0,f,c
 10053  00168A  D001               	goto	u3478
 10054  00168C                     u3460:
 10055  00168C  6A68               	clrf	??_CantaPartAlta^0,c
 10056  00168E                     u3478:
 10057  00168E  D81B               	call	PL68	;call to abstracted procedure
 10058  001690  0BFB               	andlw	-5
 10059  001692  1868               	xorwf	??_CantaPartAlta^0,w,c
 10060  001694  6E8B               	movwf	139,c	;volatile
 10061                           
 10062                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10063  001696  AA69               	btfss	CantaPartAlta@c^0,5,c
 10064  001698  D003               	goto	u3480
 10065  00169A  6A68               	clrf	??_CantaPartAlta^0,c
 10066  00169C  2A68               	incf	??_CantaPartAlta^0,f,c
 10067  00169E  D001               	goto	u3498
 10068  0016A0                     u3480:
 10069  0016A0  6A68               	clrf	??_CantaPartAlta^0,c
 10070  0016A2                     u3498:
 10071  0016A2  4668               	rlncf	??_CantaPartAlta^0,f,c
 10072  0016A4  508B               	movf	139,w,c	;volatile
 10073  0016A6  1868               	xorwf	??_CantaPartAlta^0,w,c
 10074  0016A8  0BFD               	andlw	-3
 10075  0016AA  1868               	xorwf	??_CantaPartAlta^0,w,c
 10076  0016AC  6E8B               	movwf	139,c	;volatile
 10077                           
 10078                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10079  0016AE  A869               	btfss	CantaPartAlta@c^0,4,c
 10080  0016B0  D003               	goto	u3500
 10081  0016B2  6A68               	clrf	??_CantaPartAlta^0,c
 10082  0016B4  2A68               	incf	??_CantaPartAlta^0,f,c
 10083  0016B6  D001               	goto	u3518
 10084  0016B8                     u3500:
 10085  0016B8  6A68               	clrf	??_CantaPartAlta^0,c
 10086  0016BA                     u3518:
 10087  0016BA  508B               	movf	139,w,c	;volatile
 10088  0016BC  1868               	xorwf	??_CantaPartAlta^0,w,c
 10089  0016BE  0BFE               	andlw	-2
 10090  0016C0  1868               	xorwf	??_CantaPartAlta^0,w,c
 10091  0016C2  6E8B               	movwf	139,c	;volatile
 10092  0016C4  0012               	return		;funcret
 10093  0016C6                     __end_of_CantaPartAlta:
 10094                           	callstack 0
 10095  0016C6                     PL68:
 10096                           	callstack 24
 10097  0016C6  4668               	rlncf	??_CantaPartAlta^0,f,c
 10098  0016C8  4668               	rlncf	??_CantaPartAlta^0,f,c
 10099  0016CA  508B               	movf	139,w,c	;volatile
 10100  0016CC  1868               	xorwf	??_CantaPartAlta^0,w,c
 10101  0016CE  0012               	return	
 10102  0016D0                     __end_ofPL68:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function _Espera *****************
 10106 ;; Defined at:
 10107 ;;		line 161 in file "LcTLCD.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  Timer           1    wreg     unsigned char 
 10110 ;;  ms              2   12[COMRAM] int 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  Timer           1   15[COMRAM] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1
 10122 ;;      Params:         2       0       0
 10123 ;;      Locals:         1       0       0
 10124 ;;      Temps:          1       0       0
 10125 ;;      Totals:         4       0       0
 10126 ;;Total ram usage:        4 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; Hardware stack levels required when called: 3
 10129 ;; This function calls:
 10130 ;;		_TiGetTics
 10131 ;;		_TiResetTics
 10132 ;; This function is called by:
 10133 ;;		_LcInit
 10134 ;;		_LcClear
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text82
 10139  001A0C                     __ptext82:
 10140                           	callstack 0
 10141  001A0C                     _Espera:
 10142                           	callstack 25
 10143                           
 10144                           ;incstack = 0
 10145                           ;Espera@Timer stored from wreg
 10146  001A0C  6E72               	movwf	Espera@Timer^0,c
 10147                           
 10148                           ;LcTLCD.c: 162:  TiResetTics(Timer);
 10149  001A0E  5072               	movf	Espera@Timer^0,w,c
 10150  001A10  EC42  F00D         	call	_TiResetTics
 10151  001A14                     l4149:
 10152  001A14  5072               	movf	Espera@Timer^0,w,c
 10153  001A16  ECBE  F00C         	call	_TiGetTics
 10154  001A1A  506F               	movf	Espera@ms^0,w,c
 10155  001A1C  5C68               	subwf	?_TiGetTics^0,w,c
 10156  001A1E  5069               	movf	(?_TiGetTics+1)^0,w,c
 10157  001A20  0A80               	xorlw	128
 10158  001A22  6E71               	movwf	??_Espera^0,c
 10159  001A24  5070               	movf	(Espera@ms+1)^0,w,c
 10160  001A26  0A80               	xorlw	128
 10161  001A28  5871               	subwfb	??_Espera^0,w,c
 10162  001A2A  E3F4               	bnc	l4149
 10163  001A2C  0012               	return		;funcret
 10164  001A2E                     __end_of_Espera:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function _TiResetTics *****************
 10168 ;; Defined at:
 10169 ;;		line 55 in file "TiTTimer.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  Handle          1    wreg     unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  Handle          1    5[COMRAM] unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1
 10183 ;;      Params:         0       0       0
 10184 ;;      Locals:         1       0       0
 10185 ;;      Temps:          0       0       0
 10186 ;;      Totals:         1       0       0
 10187 ;;Total ram usage:        1 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 2
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_Espera
 10194 ;;		_WaitForBusy
 10195 ;;		_SMotor
 10196 ;;		_TeTeclat
 10197 ;;		_menu
 10198 ;;		_GLCDMotor
 10199 ;;		_motorHora
 10200 ;;		_motorSIO
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text83
 10205  001A84                     __ptext83:
 10206                           	callstack 0
 10207  001A84                     _TiResetTics:
 10208                           	callstack 27
 10209                           
 10210                           ;incstack = 0
 10211                           ;TiResetTics@Handle stored from wreg
 10212  001A84  6E68               	movwf	TiResetTics@Handle^0,c
 10213                           
 10214                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10215  001A86  5068               	movf	TiResetTics@Handle^0,w,c
 10216  001A88  D805               	call	PL28	;call to abstracted procedure
 10217  001A8A  C015  FFDE         	movff	_h_Tics,postinc2
 10218  001A8E  C016  FFDD         	movff	_h_Tics+1,postdec2
 10219  001A92  0012               	return		;funcret
 10220  001A94                     __end_of_TiResetTics:
 10221                           	callstack 0
 10222  001A94                     PL28:
 10223                           	callstack 24
 10224  001A94  0D03               	mullw	3
 10225  001A96  50F3               	movf	243,w,c
 10226  001A98  0F80               	addlw	low _s_Timers
 10227  001A9A  6ED9               	movwf	fsr2l,c
 10228  001A9C  6ADA               	clrf	fsr2h,c
 10229  001A9E  0012               	return	
 10230  001AA0                     __end_ofPL28:
 10231                           	callstack 0
 10232                           
 10233 ;; *************** function _TiGetTics *****************
 10234 ;; Defined at:
 10235 ;;		line 61 in file "TiTTimer.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  Handle          1    wreg     unsigned char 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  Handle          1    9[COMRAM] unsigned char 
 10240 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  2    5[COMRAM] int 
 10243 ;; Registers used:
 10244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1
 10250 ;;      Params:         2       0       0
 10251 ;;      Locals:         3       0       0
 10252 ;;      Temps:          2       0       0
 10253 ;;      Totals:         7       0       0
 10254 ;;Total ram usage:        7 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; Hardware stack levels required when called: 2
 10257 ;; This function calls:
 10258 ;;		Nothing
 10259 ;; This function is called by:
 10260 ;;		_Espera
 10261 ;;		_WaitForBusy
 10262 ;;		_SMotor
 10263 ;;		_TeTeclat
 10264 ;;		_menu
 10265 ;;		_GLCDMotor
 10266 ;;		_motorHora
 10267 ;;		_motorSIO
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text84
 10272  00197C                     __ptext84:
 10273                           	callstack 0
 10274  00197C                     _TiGetTics:
 10275                           	callstack 27
 10276                           
 10277                           ;incstack = 0
 10278                           ;TiGetTics@Handle stored from wreg
 10279  00197C  6E6C               	movwf	TiGetTics@Handle^0,c
 10280                           
 10281                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10282  00197E  C015  F06D         	movff	_h_Tics,TiGetTics@actual	;volatile
 10283  001982  C016  F06E         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10284                           
 10285                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10286  001986  506C               	movf	TiGetTics@Handle^0,w,c
 10287  001988  EC4A  F00D         	call	PL28	;call to abstracted procedure
 10288  00198C  CFDE F06A          	movff	postinc2,??_TiGetTics
 10289  001990  CFDD F06B          	movff	postdec2,??_TiGetTics+1
 10290  001994  506A               	movf	??_TiGetTics^0,w,c
 10291  001996  5C6D               	subwf	TiGetTics@actual^0,w,c	;volatile
 10292  001998  6E68               	movwf	?_TiGetTics^0,c
 10293  00199A  506B               	movf	(??_TiGetTics+1)^0,w,c
 10294  00199C  586E               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10295  00199E  6E69               	movwf	(?_TiGetTics+1)^0,c
 10296  0019A0  0012               	return		;funcret
 10297  0019A2                     __end_of_TiGetTics:
 10298                           	callstack 0
 10299                           
 10300 ;; *************** function _GLCDInit *****************
 10301 ;; Defined at:
 10302 ;;		line 26 in file "GestioLCD.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;		None
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1
 10316 ;;      Params:         0       0       0
 10317 ;;      Locals:         0       0       0
 10318 ;;      Temps:          0       0       0
 10319 ;;      Totals:         0       0       0
 10320 ;;Total ram usage:        0 bytes
 10321 ;; Hardware stack levels used: 1
 10322 ;; Hardware stack levels required when called: 3
 10323 ;; This function calls:
 10324 ;;		_TiGetTimer
 10325 ;; This function is called by:
 10326 ;;		_main
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text85
 10331  001C40                     __ptext85:
 10332                           	callstack 0
 10333  001C40                     _GLCDInit:
 10334                           	callstack 27
 10335                           
 10336                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10337                           
 10338                           ;incstack = 0
 10339  001C40  EC81  F00C         	call	_TiGetTimer	;wreg free
 10340  001C44  6E2C               	movwf	_timerGLCD^0,c
 10341  001C46  0012               	return		;funcret
 10342  001C48                     __end_of_GLCDInit:
 10343                           	callstack 0
 10344                           
 10345 ;; *************** function _TiGetTimer *****************
 10346 ;; Defined at:
 10347 ;;		line 70 in file "TiTTimer.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;		None
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;		None
 10352 ;; Return value:  Size  Location     Type
 10353 ;;                  1    wreg      unsigned char 
 10354 ;; Registers used:
 10355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1
 10361 ;;      Params:         0       0       0
 10362 ;;      Locals:         0       0       0
 10363 ;;      Temps:          1       0       0
 10364 ;;      Totals:         1       0       0
 10365 ;;Total ram usage:        1 bytes
 10366 ;; Hardware stack levels used: 1
 10367 ;; Hardware stack levels required when called: 2
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_LcInit
 10372 ;;		_Sinit
 10373 ;;		_TeInit
 10374 ;;		_Minit
 10375 ;;		_GLCDInit
 10376 ;;		_initHora
 10377 ;;		_initSIO
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text86
 10382  001902                     __ptext86:
 10383                           	callstack 0
 10384  001902                     _TiGetTimer:
 10385                           	callstack 27
 10386                           
 10387                           ;TiTTimer.c: 74:     counter=0;
 10388                           
 10389                           ;incstack = 0
 10390  001902  6A3A               	clrf	_counter^0,c
 10391                           
 10392                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10393  001904  D005               	goto	l4195
 10394  001906                     l4187:
 10395                           
 10396                           ;TiTTimer.c: 76:         counter++;
 10397  001906  2A3A               	incf	_counter^0,f,c
 10398                           
 10399                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10400  001908  0E08               	movlw	8
 10401  00190A  183A               	xorwf	_counter^0,w,c
 10402  00190C  E101               	bnz	l4195
 10403  00190E  0CFF               	retlw	255
 10404  001910                     l4195:
 10405                           
 10406                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10407  001910  D807               	call	PL14	;call to abstracted procedure
 10408  001912  04DE               	decf	postinc2,w,c
 10409  001914  E0F8               	bz	l4187
 10410                           
 10411                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10412  001916  D804               	call	PL14	;call to abstracted procedure
 10413  001918  0E01               	movlw	1
 10414  00191A  6EDF               	movwf	indf2,c
 10415                           
 10416                           ;TiTTimer.c: 80:     return (counter);
 10417  00191C  503A               	movf	_counter^0,w,c
 10418  00191E  0012               	return		;funcret
 10419  001920                     __end_of_TiGetTimer:
 10420                           	callstack 0
 10421  001920                     PL14:
 10422                           	callstack 28
 10423  001920  503A               	movf	_counter^0,w,c
 10424  001922  0D03               	mullw	3
 10425  001924  50F3               	movf	243,w,c
 10426  001926  0F82               	addlw	low (_s_Timers+2)
 10427  001928  6ED9               	movwf	fsr2l,c
 10428  00192A  6ADA               	clrf	fsr2h,c
 10429  00192C  0012               	return	
 10430  00192E                     __end_ofPL14:
 10431                           	callstack 0
 10432                           
 10433 ;; *************** function _CtoA *****************
 10434 ;; Defined at:
 10435 ;;		line 22 in file "CtoA.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;		None
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;		None
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1
 10449 ;;      Params:         0       0       0
 10450 ;;      Locals:         0       0       0
 10451 ;;      Temps:          0       0       0
 10452 ;;      Totals:         0       0       0
 10453 ;;Total ram usage:        0 bytes
 10454 ;; Hardware stack levels used: 1
 10455 ;; Hardware stack levels required when called: 2
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_main
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text87
 10464  0019C6                     __ptext87:
 10465                           	callstack 0
 10466  0019C6                     _CtoA:
 10467                           	callstack 28
 10468                           
 10469                           ;CtoA.c: 23:     if (convertir != 250) {
 10470                           
 10471                           ;incstack = 0
 10472  0019C6  0EFA               	movlw	250
 10473  0019C8  184A               	xorwf	_convertir^0,w,c
 10474  0019CA  B4D8               	btfsc	status,2,c
 10475  0019CC  0012               	return	
 10476                           
 10477                           ;CtoA.c: 24:         if (convertir != 0){
 10478  0019CE  504A               	movf	_convertir^0,w,c
 10479  0019D0  E009               	bz	l3755
 10480                           
 10481                           ;CtoA.c: 25:             stringScore[1]++;
 10482  0019D2  2A61               	incf	(_stringScore+1)^0,f,c
 10483                           
 10484                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10485  0019D4  0E3A               	movlw	58
 10486  0019D6  1861               	xorwf	(_stringScore+1)^0,w,c
 10487  0019D8  E103               	bnz	l3753
 10488                           
 10489                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10490  0019DA  0E30               	movlw	48
 10491  0019DC  6E61               	movwf	(_stringScore+1)^0,c
 10492                           
 10493                           ;CtoA.c: 28:                 stringScore[0]++;
 10494  0019DE  2A60               	incf	_stringScore^0,f,c
 10495  0019E0                     l3753:
 10496                           
 10497                           ;CtoA.c: 30:             convertir--;
 10498  0019E0  064A               	decf	_convertir^0,f,c
 10499                           
 10500                           ;CtoA.c: 31:         } else {
 10501  0019E2  0012               	return	
 10502  0019E4                     l3755:
 10503                           
 10504                           ;CtoA.c: 32:             convertir = 250;
 10505  0019E4  0EFA               	movlw	250
 10506  0019E6  6E4A               	movwf	_convertir^0,c
 10507  0019E8  0CFA               	retlw	250	;funcret
 10508  0019EA                     __end_of_CtoA:
 10509                           	callstack 0
 10510                           
 10511 ;; *************** function _high_rsi *****************
 10512 ;; Defined at:
 10513 ;;		line 22 in file "main.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1
 10527 ;;      Params:         0       0       0
 10528 ;;      Locals:         0       0       0
 10529 ;;      Temps:          4       0       0
 10530 ;;      Totals:         4       0       0
 10531 ;;Total ram usage:        4 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; Hardware stack levels required when called: 1
 10534 ;; This function calls:
 10535 ;;		__TiRSITimer
 10536 ;; This function is called by:
 10537 ;;		Interrupt level 2
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           	psect	intcode
 10542  000008                     __pintcode:
 10543                           	callstack 0
 10544  000008                     _high_rsi:
 10545                           	callstack 24
 10546                           
 10547                           ;incstack = 0
 10548  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10549  00000A  CFD9 F064          	movff	fsr2l,??_high_rsi
 10550  00000E  CFDA F065          	movff	fsr2h,??_high_rsi+1
 10551  000012  CFF3 F066          	movff	prodl,??_high_rsi+2
 10552  000016  CFF4 F067          	movff	prodh,??_high_rsi+3
 10553  00001A  ECB4  F00B         	call	__TiRSITimer	;wreg free
 10554  00001E  C067  FFF4         	movff	??_high_rsi+3,prodh
 10555  000022  C066  FFF3         	movff	??_high_rsi+2,prodl
 10556  000026  C065  FFDA         	movff	??_high_rsi+1,fsr2h
 10557  00002A  C064  FFD9         	movff	??_high_rsi,fsr2l
 10558  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10559  000030  0011               	retfie		f
 10560  000032                     __end_of_high_rsi:
 10561                           	callstack 0
 10562                           
 10563 ;; *************** function __TiRSITimer *****************
 10564 ;; Defined at:
 10565 ;;		line 37 in file "TiTTimer.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;		None
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;		None
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  1    wreg      void 
 10572 ;; Registers used:
 10573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMRAM   BANK0   BANK1
 10579 ;;      Params:         0       0       0
 10580 ;;      Locals:         0       0       0
 10581 ;;      Temps:          1       0       0
 10582 ;;      Totals:         1       0       0
 10583 ;;Total ram usage:        1 bytes
 10584 ;; Hardware stack levels used: 1
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_high_rsi
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           	psect	text89
 10593  001768                     __ptext89:
 10594                           	callstack 0
 10595  001768                     __TiRSITimer:
 10596                           	callstack 0
 10597                           
 10598                           ;TiTTimer.c: 39:     TMR0H = 223;
 10599                           
 10600                           ;incstack = 0
 10601                           
 10602                           ;TiTTimer.c: 40:     TMR0L = 148;
 10603  001768  D81E               	call	PL60	;call to abstracted procedure
 10604                           
 10605                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10606  00176A  94F2               	bcf	242,2,c	;volatile
 10607                           
 10608                           ;TiTTimer.c: 42:     h_Tics++;
 10609  00176C  4A15               	infsnz	_h_Tics^0,f,c
 10610  00176E  2A16               	incf	(_h_Tics+1)^0,f,c
 10611                           
 10612                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10613  001770  0E48               	movlw	72
 10614  001772  5C15               	subwf	_h_Tics^0,w,c
 10615  001774  0EEE               	movlw	238
 10616  001776  5816               	subwfb	(_h_Tics+1)^0,w,c
 10617  001778  A0D8               	btfss	status,0,c
 10618  00177A  0012               	return	
 10619                           
 10620                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10621  00177C  6A3A               	clrf	_counter^0,c
 10622  00177E                     i2l4375:
 10623  00177E  0E07               	movlw	7
 10624  001780  643A               	cpfsgt	_counter^0,c
 10625  001782  D001               	goto	i2l4379
 10626  001784  D00D               	goto	i2l368
 10627  001786                     i2l4379:
 10628                           
 10629                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10630  001786  EC90  F00C         	call	PL14	;call to abstracted procedure
 10631  00178A  04DE               	decf	postinc2,w,c
 10632  00178C  E107               	bnz	i2l4383
 10633                           
 10634                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10635  00178E  503A               	movf	_counter^0,w,c
 10636  001790  EC4A  F00D         	call	PL28	;call to abstracted procedure
 10637  001794  5015               	movf	_h_Tics^0,w,c
 10638  001796  5EDE               	subwf	postinc2,f,c
 10639  001798  5016               	movf	(_h_Tics+1)^0,w,c
 10640  00179A  5ADD               	subwfb	postdec2,f,c
 10641  00179C                     i2l4383:
 10642                           
 10643                           ;TiTTimer.c: 50:         }
 10644  00179C  2A3A               	incf	_counter^0,f,c
 10645  00179E  D7EF               	goto	i2l4375
 10646  0017A0                     i2l368:
 10647                           
 10648                           ;TiTTimer.c: 51:         h_Tics=0;
 10649  0017A0  6A15               	clrf	_h_Tics^0,c
 10650  0017A2  6A16               	clrf	(_h_Tics+1)^0,c
 10651  0017A4  0012               	return		;funcret
 10652  0017A6                     __end_of__TiRSITimer:
 10653                           	callstack 0
 10654  0017A6                     PL60:
 10655                           	callstack 28
 10656  0017A6  0EDF               	movlw	223
 10657  0017A8  6ED7               	movwf	215,c	;volatile
 10658  0017AA  0E94               	movlw	148
 10659  0017AC  6ED6               	movwf	214,c	;volatile
 10660  0017AE  0C94               	retlw	148
 10661  0017B0                     __end_ofPL60:
 10662                           	callstack 0
 10663                           
 10664                           	psect	rparam
 10665  0000                     
 10666                           	psect	temp
 10667  00007A                     btemp:
 10668                           	callstack 0
 10669  00007A                     	ds	1
 10670  0000                     int$flags	set	btemp
 10671  0000                     wtemp8	set	btemp+1
 10672  0000                     ttemp5	set	btemp+1
 10673  0000                     ttemp6	set	btemp+4
 10674  0000                     ttemp7	set	btemp+8
 10675                           
 10676                           	psect	idloc
 10677                           
 10678                           ;Config register IDLOC0 @ 0x200000
 10679                           ;	unspecified, using default values
 10680  200000                     	org	2097152
 10681  200000  FF                 	db	255
 10682                           
 10683                           ;Config register IDLOC1 @ 0x200001
 10684                           ;	unspecified, using default values
 10685  200001                     	org	2097153
 10686  200001  FF                 	db	255
 10687                           
 10688                           ;Config register IDLOC2 @ 0x200002
 10689                           ;	unspecified, using default values
 10690  200002                     	org	2097154
 10691  200002  FF                 	db	255
 10692                           
 10693                           ;Config register IDLOC3 @ 0x200003
 10694                           ;	unspecified, using default values
 10695  200003                     	org	2097155
 10696  200003  FF                 	db	255
 10697                           
 10698                           ;Config register IDLOC4 @ 0x200004
 10699                           ;	unspecified, using default values
 10700  200004                     	org	2097156
 10701  200004  FF                 	db	255
 10702                           
 10703                           ;Config register IDLOC5 @ 0x200005
 10704                           ;	unspecified, using default values
 10705  200005                     	org	2097157
 10706  200005  FF                 	db	255
 10707                           
 10708                           ;Config register IDLOC6 @ 0x200006
 10709                           ;	unspecified, using default values
 10710  200006                     	org	2097158
 10711  200006  FF                 	db	255
 10712                           
 10713                           ;Config register IDLOC7 @ 0x200007
 10714                           ;	unspecified, using default values
 10715  200007                     	org	2097159
 10716  200007  FF                 	db	255
 10717                           
 10718                           	psect	config
 10719                           
 10720                           ; Padding undefined space
 10721  300000                     	org	3145728
 10722  300000  FF                 	db	255
 10723                           
 10724                           ;Config register CONFIG1H @ 0x300001
 10725                           ;	Oscillator
 10726                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10727                           ;	Fail-Safe Clock Monitor Enable bit
 10728                           ;	FCMEN = 0x0, unprogrammed default
 10729                           ;	Internal/External Oscillator Switchover bit
 10730                           ;	IESO = 0x0, unprogrammed default
 10731  300001                     	org	3145729
 10732  300001  06                 	db	6
 10733                           
 10734                           ;Config register CONFIG2L @ 0x300002
 10735                           ;	unspecified, using default values
 10736                           ;	Power-up Timer Enable bit
 10737                           ;	PWRT = 0x1, unprogrammed default
 10738                           ;	Brown-out Reset Enable bits
 10739                           ;	BOR = 0x3, unprogrammed default
 10740                           ;	Brown-out Reset Voltage bits
 10741                           ;	BORV = 0x3, unprogrammed default
 10742  300002                     	org	3145730
 10743  300002  1F                 	db	31
 10744                           
 10745                           ;Config register CONFIG2H @ 0x300003
 10746                           ;	Watchdog Timer Enable bit
 10747                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10748                           ;	Watchdog Timer Postscale Select bits
 10749                           ;	WDTPS = 0xF, unprogrammed default
 10750  300003                     	org	3145731
 10751  300003  1E                 	db	30
 10752                           
 10753                           ; Padding undefined space
 10754  300004                     	org	3145732
 10755  300004  FF                 	db	255
 10756                           
 10757                           ;Config register CONFIG3H @ 0x300005
 10758                           ;	CCP2 MUX bit
 10759                           ;	CCP2MX = 0x1, unprogrammed default
 10760                           ;	PORTB A/D Enable bit
 10761                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10762                           ;	Low-Power Timer1 Oscillator Enable bit
 10763                           ;	LPT1OSC = 0x0, unprogrammed default
 10764                           ;	MCLR Pin Enable bit
 10765                           ;	MCLRE = 0x1, unprogrammed default
 10766  300005                     	org	3145733
 10767  300005  81                 	db	129
 10768                           
 10769                           ;Config register CONFIG4L @ 0x300006
 10770                           ;	Stack Full/Underflow Reset Enable bit
 10771                           ;	STVREN = 0x1, unprogrammed default
 10772                           ;	Single-Supply ICSP Enable bit
 10773                           ;	LVP = OFF, Single-Supply ICSP disabled
 10774                           ;	Boot Block Size Select bits
 10775                           ;	BBSIZ = 0x0, unprogrammed default
 10776                           ;	Extended Instruction Set Enable bit
 10777                           ;	XINST = 0x0, unprogrammed default
 10778                           ;	Background Debugger Enable bit
 10779                           ;	DEBUG = 0x1, unprogrammed default
 10780  300006                     	org	3145734
 10781  300006  81                 	db	129
 10782                           
 10783                           ; Padding undefined space
 10784  300007                     	org	3145735
 10785  300007  FF                 	db	255
 10786                           
 10787                           ;Config register CONFIG5L @ 0x300008
 10788                           ;	unspecified, using default values
 10789                           ;	Code Protection bit
 10790                           ;	CP0 = 0x1, unprogrammed default
 10791                           ;	Code Protection bit
 10792                           ;	CP1 = 0x1, unprogrammed default
 10793  300008                     	org	3145736
 10794  300008  03                 	db	3
 10795                           
 10796                           ;Config register CONFIG5H @ 0x300009
 10797                           ;	unspecified, using default values
 10798                           ;	Boot Block Code Protection bitProtect Boot
 10799                           ;	CPB = 0x1, unprogrammed default
 10800                           ;	Data EEPROM Code Protection bit
 10801                           ;	CPD = 0x1, unprogrammed default
 10802  300009                     	org	3145737
 10803  300009  C0                 	db	192
 10804                           
 10805                           ;Config register CONFIG6L @ 0x30000A
 10806                           ;	unspecified, using default values
 10807                           ;	Write Protection bit
 10808                           ;	WRT0 = 0x1, unprogrammed default
 10809                           ;	Write Protection bit
 10810                           ;	WRT1 = 0x1, unprogrammed default
 10811  30000A                     	org	3145738
 10812  30000A  03                 	db	3
 10813                           
 10814                           ;Config register CONFIG6H @ 0x30000B
 10815                           ;	unspecified, using default values
 10816                           ;	Configuration Register Write Protection bit
 10817                           ;	WRTC = 0x1, unprogrammed default
 10818                           ;	Boot Block Write Protection bit
 10819                           ;	WRTB = 0x1, unprogrammed default
 10820                           ;	Data EEPROM Write Protection bit
 10821                           ;	WRTD = 0x1, unprogrammed default
 10822  30000B                     	org	3145739
 10823  30000B  E0                 	db	224
 10824                           
 10825                           ;Config register CONFIG7L @ 0x30000C
 10826                           ;	unspecified, using default values
 10827                           ;	Table Read Protection bit
 10828                           ;	EBTR0 = 0x1, unprogrammed default
 10829                           ;	Table Read Protection bit
 10830                           ;	EBTR1 = 0x1, unprogrammed default
 10831  30000C                     	org	3145740
 10832  30000C  03                 	db	3
 10833                           
 10834                           ;Config register CONFIG7H @ 0x30000D
 10835                           ;	unspecified, using default values
 10836                           ;	Boot Block Table Read Protection bit
 10837                           ;	EBTRB = 0x1, unprogrammed default
 10838  30000D                     	org	3145741
 10839  30000D  40                 	db	64
 10840                           tosu	equ	0xFFF
 10841                           tosh	equ	0xFFE
 10842                           tosl	equ	0xFFD
 10843                           stkptr	equ	0xFFC
 10844                           pclatu	equ	0xFFB
 10845                           pclath	equ	0xFFA
 10846                           pcl	equ	0xFF9
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           prodh	equ	0xFF4
 10852                           prodl	equ	0xFF3
 10853                           indf0	equ	0xFEF
 10854                           postinc0	equ	0xFEE
 10855                           postdec0	equ	0xFED
 10856                           preinc0	equ	0xFEC
 10857                           plusw0	equ	0xFEB
 10858                           fsr0h	equ	0xFEA
 10859                           fsr0l	equ	0xFE9
 10860                           wreg	equ	0xFE8
 10861                           indf1	equ	0xFE7
 10862                           postinc1	equ	0xFE6
 10863                           postdec1	equ	0xFE5
 10864                           preinc1	equ	0xFE4
 10865                           plusw1	equ	0xFE3
 10866                           fsr1h	equ	0xFE2
 10867                           fsr1l	equ	0xFE1
 10868                           bsr	equ	0xFE0
 10869                           indf2	equ	0xFDF
 10870                           postinc2	equ	0xFDE
 10871                           postdec2	equ	0xFDD
 10872                           preinc2	equ	0xFDC
 10873                           plusw2	equ	0xFDB
 10874                           fsr2h	equ	0xFDA
 10875                           fsr2l	equ	0xFD9
 10876                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    155
    Data        37
    BSS         299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     121
    BANK0           128      5      59
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->_llegirCharEEPROM
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39225
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9851
                                              0 BANK0      2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                              0 BANK0      2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10724
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     612
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     348
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                1     1      0     105
                                              6 COMRAM     1     1      0
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               4     4      0      82
                                             12 COMRAM     4     4      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorHora
     _TiGetTics
     _TiResetTics
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      3B       4       46.1%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     14      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C       7        0.0%
DATA                 0      0     16C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 13:18:40 2022

               TiResetTics@Handle 0068                  _loginNOTRegister 03C6  
                               _i 0030                                 _j 002F  
                              PL2 0A10                                PL4 0A24  
                              PL6 0A3A                                PL8 0A4A  
                              l57 18DC                  UgetUserName@quin 006A  
       ??_UcheckExistsNotFinished 0068         __size_of_llegirCharEEPROM 0010  
                             PL10 0A52                               PL20 0CCE  
                             PL12 1094                               PL30 077C  
                             PL22 0CDA                               PL14 1920  
                             PL40 150C                               PL32 184C  
                             PL24 11D6                               PL16 0CA6  
                             PL50 17DA                               PL42 078C  
                             PL34 0786                               PL26 0EC8  
                             PL18 0CC2                               PL60 17A6  
                             PL52 0CEC                               PL44 1714  
                             PL36 1706                               PL28 1A94  
                             PL70 0A6A                               PL62 151A  
                             PL54 185A                               PL46 0796  
                             PL38 0A5C                               PL80 07AE  
                             PL72 17E4                               PL64 1A02  
                             PL56 10B6                               PL48 0ED4  
                             PL82 07B6                               PL74 1760  
                             PL66 1372                               PL58 1660  
                             PL76 07A2                               PL68 16C6  
                             PL78 07A8            __end_of_compareStrings 17DA  
                             l503 0090                               l530 01C6  
                             l531 01D6                               l533 01E2  
                             l716 1972                               l750 0A76  
                             l751 0A88                               l753 0A94  
                             l755 0A9E                               l917 080E  
                             l757 0ACC                               l782 0BBE  
                             l758 0AC2                               l599 0472  
                             l929 0876                               l947 095A  
                             l949 0980                               l994 12A8  
                             l986 11EA                               l995 1240  
                             l987 1204                               l996 125A  
                             l989 1226                               l998 127C  
                             u230 14BA                               u250 14D0  
                             u308 14FE                               u270 14E4  
                             u248 14BC                               u290 14FC  
                             u268 14D2                               u288 14E6  
                             _pos 0035                               _tmp 0039  
                ??_CantaPartBaixa 0068                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0056                __size_of_GLCDMotor 0252  
                            l1062 1492                              l1136 1392  
                            l1250 0D98                              l2203 1B52  
                            l1243 0D70                              l3111 121A  
                            l3103 1200                              l2129 1BB2  
                            l2225 1B5E                              l1258 0E30  
                            l2323 19B4                              l3141 1256  
                            l3125 123C                              l2317 19AC  
                            l2159 1B82                              l2351 1B3A  
                            l2335 19C4                              l2329 19BC  
                            l4123 1800                              l3163 1292  
                            l3149 1270                              l3173 1296  
                            l5007 1496                              l4145 1826  
                            l2297 1B46                              l4155 18E0  
                            l4235 175A                              l4227 1746  
                            l4411 0EE2                              l4149 1A14  
                            l4229 174C                              l6021 0906  
                            l6005 08D0                              l2645 1868  
                            l6015 08F6                              l4319 12D8  
                            l4511 0FFC                              l6111 13A6  
                     _puntuacions 0001                              l4187 1906  
                            l4195 1910                              l6043 094E  
                            l6035 0938                              l4523 101E  
                            l4507 0FF8                              l4443 0F40  
                            l4435 0F22                              l4419 0EF6  
                            l6131 13E8                              l4453 0F66  
                            l6117 13B6                              l4543 104C  
                            l4455 0F6A                              l4295 17C6  
                            l6311 0084                              l6303 0070  
                            l6119 13BC                              l3753 19E0  
                            l6065 098C                              l6057 097A  
                            l6049 0962                              l4537 103E  
                            l4529 1028                              l4473 0F8E  
                            l4465 0F78                              l4289 17B2  
                            l6225 0DB2                              l3755 19E4  
                            l6075 09A8                              l4547 1054  
                            l4491 0FC6                              l4395 1944  
                            l5611 0B10                              l5603 0AFE  
                            l6331 00CA                              l6323 00AA  
                            l6139 13FE                              l6147 140C  
                            l6235 0DE2                              l6227 0DB8  
                            l6069 0994                              l6085 09C2  
                            l5701 0C04                              l6341 00E8  
                            l6309 007E                              l6245 0E18  
                            l6157 0CF6                              l6079 09B6  
                            l4487 0FB0                              l4479 0FA0  
                            l4567 1064                              l4399 194C  
                            l5703 0C0A                              l5623 0B30  
                            l5607 0B02                              l6503 0274  
                            l6351 010C                              l6095 137E  
                            l6263 0E64                              l6255 0E42  
                            l6183 0D38                              l6175 0D26  
                            l6167 0D12                              l4489 0FC2  
                            l5641 0B68                              l6601 0380  
                            l6409 018A                              l4499 0FE0  
                            l5811 11A2                              l5803 1190  
                            l5723 0C52                              l5715 0C3E  
                            l5651 0B7E                              l5627 0B3A  
                            l6427 01B2                              l6355 0114  
                            l6339 00E2                              l6187 0D42  
                            l6275 0E86                              l5901 07C0  
                            l5661 0B90                              l5629 0B40  
                            l6517 029A                              l6461 020A  
                            l6437 01D2                              l6381 0148  
                            l6349 0106                              l6293 004E  
                            l6197 0D58                              l6189 0D48  
                            l5911 07E2                              l5807 1198  
                            l5743 10F8                              l5727 0C5A  
                            l5671 0BBC                              l5663 0B94  
                            l5591 0AC6                              l5735 0C6E  
                            l6551 02F0                              l6535 02C2  
                            l6519 02A0                              l6391 016C  
                            l6383 014E                              l6367 0124  
                            l6287 0038                              l5753 1114  
                            l5817 11A8                              l5657 0B88  
                            l6801 063C                              l6721 0506  
                            l6705 048C                              l6633 03C0  
                            l6617 039E                              l6449 01F2  
                            l6393 0172                              l4961 142A  
                            l5931 081A                              l5763 112A  
                            l5755 111A                              l5747 1104  
                            l5691 0BE8                              l5683 0BD6  
                            l5595 0AD2                              l5579 0A8E  
                            l6731 051C                              l6715 04E6  
                            l6563 0328                              l5925 0804  
                            l5917 07F0                              l5749 1108  
                            l5597 0AD8                              l6741 0534  
                            l6733 0522                              l6717 04EC  
                            l6709 04A4                              l6645 03D2  
                            l6629 03BC                              l6549 02EA  
                            l6477 0228                              l6469 021A  
                            l6397 017A                              l5791 116E  
                            l5783 1158                              l5775 1146  
                            l5679 0BC8                              l6815 066E  
                            l6751 054C                              l6743 053A  
                            l6727 0512                              l6583 035C  
                            l6559 0310                              l4983 1462  
                            l5953 0854                              l5945 0848  
                            l5777 114A                              l5769 1138  
                            l5697 0BFC                              l6825 0682  
                            l6809 064A                              l6761 0580  
                            l6681 0428                              l6657 03F2  
                            l6489 024E                              l6833 068E  
                            l4977 1456                              l5787 1164  
                            l6755 0554                              l6675 041A  
                            l6667 040C                              l5797 1182  
                            l4989 146E                              l5959 0866  
                            l6775 05BC                              l4999 1488  
                            l6777 05C2                              l6697 0474  
                            l6689 044C                              l6865 15D6  
                            l5995 08AE                              l6787 0606  
                            l6699 047A                              l5989 089E  
                            l5999 08BA                              l6799 0636  
                            STR_1 1FE9                              STR_2 1FC5  
                            STR_3 1FF8                              STR_4 1FF1  
                            STR_5 1FD0                              STR_6 1FAC  
                            STR_7 1F9C                              STR_8 1FE1  
                            STR_9 1FB9                              _LATD 000F8C  
                            u4100 102E                              u4020 0FD2  
                            u4110 1044                              u3500 16B8  
                            u3440 1676                              u3520 1610  
                            u6010 0ABE                              u3460 168C  
                            u3540 1626                              u3518 16BA  
                            u3480 16A0                              u3560 163A  
                            u6200 0BF6                              u3458 1678  
                            u3538 1612                              u3730 17CA  
                            u3580 1652                              u3740 1368  
                            u3900 0F36                              u7020 0D78  
                            u3478 168E                              u3558 1628  
                            u7030 0D7C                              u3760 16E2  
                            u8000 05BA                              u3498 16A2  
                            u3578 163C                              u3770 16F8  
                            u8020 05D4                              u7060 0DF8  
                            u3598 1654                              u6270 10CA  
                            u3767 16E0                              u7400 01EA  
                            u3777 16F6                              u7330 0198  
                            u6540 0850                              u3980 0F9A  
                            u7260 0132                              u6470 07EC  
                            u6278 10CC                              u6570 086E  
                            u7380 01DC                              u5990 0A98  
                            u7910 050E                              u7760 03DE  
                            u7770 03E4                              _CtoA 19C6  
                 ??_SsetNovaTecla 0068            __end_of_SIOcheckKrebut 1B3E  
                            _cap1 03BF                              _Rows 0045  
                            _cap2 03BE                              _main 159C  
                            _hora 005A                              _menu 0036  
           getArrayShowUsers@quin 006A                   __end_of_HJugant 1C4E  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1BF0  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1A02                              start 0032  
                 __end_of_CantaIR 1A84                     LcInit@columns 0073  
                    ___param_bank 000000                       _stringScore 0060  
                __end_of_GLCDInit 1C48          __size_of_SIONovaDireccio 0008  
                  _HClearNouSegon 1C6C                             ?_CtoA 0063  
              __size_of_CToAReset 0008                       Espera@Timer 0072  
                           ?_main 0063                             ?_menu 0063  
                           _EEADR 000FA9                             STR_10 1FD9  
                   ??_TiInitTimer 0068                             _T0CON 000FD5  
                 ?_compareStrings 0068                             i2l368 17A0  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 16D0  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0063                             _TXREG 000FAD  
                           _SMSon 1C4E                             _TXSTA 000FAC  
                     _MNovaLletra 1C28                             _Minit 1C30  
                __end_of_HGetTime 1C6C                             _Sinit 1C20  
                           _Timer 0042                             _Uinit 1864  
                 __end_of_initSIO 1C00                             _s_ptr 0017  
                           _score 001A                             _nou_s 03C8  
           __end_of_JoystickMotor 12BE                   _HActualitzaHora 189A  
     __size_of_escriureCharEEPROM 0026                    __pbitbssCOMRAM 03B8  
                           tablat 000FF5                       _LcNewString 1B9E  
                   ??_TiResetTics 0068                   ?_SIOcheckKrebut 0063  
              _UshowUsersCalculat 1B56                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                  ?_checkHoraAcabat 0063  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0004  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1902  
            CToAConverteix@numero 0068                  __end_of_LcLliure 1BB6  
                   ??__TiRSITimer 0063                  __end_of_LcScroll 1C60  
                      _TiGetTimer 1902           EscriuPrimeraOrdre@ordre 0069  
                    __end_of_CtoA 19EA                  __end_of_JendGame 1C94  
                     ?_SIOendGame 0063                   __initialization 1524  
             ?_UshowUsersCalculat 0063                __size_of_CantaData 0020  
                    __end_of_main 1604            __end_of_HClearNouSegon 1C70  
                    __end_of_menu 077C           ?_SIOHaAcabatPuntuacions 0063  
           __size_of_MNouJoystick 0008                 __end_of_GLCDMotor 0A10  
                __end_of_TeTeclat 11D6                     _indexNextUser 0032  
                          ??_CtoA 0068                            ??_main 0077  
                          ??_menu 00B6                __size_of_LcPutChar 0040  
                   __activetblptr 000002                     _ultimaTeclaAD 0022  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 0024  
                GLCDMotor@length2 0023                        _JnovaTecla 1BD8  
                __end_of_UgetTop5 1B6E                            ?_LcLCD 0063  
                          ?_SMSon 0063                      ?_CToAobtenir 0068  
                          ?_Minit 0063              ??_UshowUsersCalculat 0068  
                          ?_Sinit 0063                            ?_Uinit 0063  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 1956                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 0068  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 0068  
              __size_of_SiFerMenu 0004                         ??_LcClear 0076  
                       ??_CantaIR 006A                            i2l4383 179C  
                          i2l4375 177E                            i2l4379 1786  
                  LcGotoXY@Fisics 0071                    LcGotoXY@Column 0075  
                   ??_WaitForBusy 006F                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 0041  
               __end_of_CToAReset 1BF8                            _SMSoff 1C54  
              SIONovaDireccio@num 0068                            _LcInit 12BE  
                    _MNouJoystick 1C38                    _UgetNumUsuaris 1C74  
                          _SMotor 0EE0               escriureCharEEPROM@c 0069  
                          _TeInit 1C18                            _Espera 1A0C  
                    _LcGotoXY$336 0073                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1C8C                            _RowAct 0044  
             __end_of_TiResetTics 1A94                            Uinit@i 0069  
                __end_of_high_rsi 0032                            _h_Tics 0015  
                 ?_HClearNouSegon 0063                     ?_CToAHaAcabat 0063  
                __end_of_initHora 1C08               __end_of__TiRSITimer 17A6  
                __end_of_menuList 1F9C                            clear_0 156A  
                          clear_1 1576                            clear_2 1588  
                          _jugant 03BD                            _segons 001F  
                      _UenviaChar 1B06                            isa$std 000001  
                _llegirCharEEPROM 1B16                __size_of_UgetScore 000C  
                      UenviaPas@c 0069       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 1B4A                         ??_initSIO 0069  
                    __pdataCOMRAM 004A            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0EC8                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 18CE                 ??_SIONovaDireccio 0068  
                __end_of_motorJoc 1428                      __mediumconst 1F00  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0068  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 184C                      TeTeclat@cols 003C  
                       ?_GLCDInit 0063                     ?_UcheckExists 0063  
                      __accesstop 0080           __end_of__initialization 158E  
          __end_of_UgetNumUsuaris 1C78                 __end_of_LcPutChar 1760  
                   _JnovaDireccio 1BE0                  JnovaDireccio@dir 0068  
                   ___rparam_used 000001                     __end_of_LcLCD 1706  
                     ?_TiGetTimer 0063                     __end_of_SMSon 1C54  
               SIONovaTecla@tecla 0068                    __pcstackCOMRAM 0063  
                   __end_of_Minit 1C38               __end_of_WaitForBusy 182C  
                   __end_of_Sinit 1C28                     __end_of_Uinit 189A  
               __end_of_NoFerMenu 1C90                         ?_HGetTime 0068  
                    __pidataBANK0 1B26                    ??_CToAHaAcabat 0068  
               __end_of_URegister 1C84                 __end_of_HnoJugant 1C68  
               __end_of_SiFerMenu 1C88                        __end_ofPL2 0A24  
                      __end_ofPL4 0A3A                        __end_ofPL6 0A4A  
                      __end_ofPL8 0A52                 __end_of_TiGetTics 19A2  
                     _TiInitTimer 192E                       ?_JnovaTecla 0063  
                         ??_LcLCD 0077                           ??_SMSon 0068  
                       ?_LcGotoXY 0070                         ?_LcLliure 0063  
                         ??_Minit 0069                         ?_LcScroll 0063  
                         ??_Sinit 0069                   JnovaTecla@tecla 0068  
                         ??_Uinit 0069              __size_of_init_eusart 0016  
                       ?_JendGame 0063                    ??_UcheckExists 0068  
             MNouJoystick@posicio 0068                        ??_GLCDInit 0069  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 0063  
                     _TiResetTics 1A84                   ?_UgetNumUsuaris 0063  
                  ?_JnovaDireccio 0063                     ??_UmotorUsers 006D  
               __end_of_UgetScore 1B7A                     ?_JoystickInit 0063  
                         ?_SMSoff 0063                           ?_LcInit 0073  
                   _CantaPartAlta 166A                           ?_SMotor 0063  
                         ?_TeInit 0063                           ?_Espera 006F  
               __end_of_UenviaPas 1B06                       __TiRSITimer 1768  
             _indexNextUserStruct 0031                         ?_UgetTop5 0063  
               __end_of_UnewScore 1BC0                        ??_HGetTime 006A  
                   ?_UgetUserName 0068                  ??_compareStrings 006B  
                         _BAUDCON 000FB8                       ?_UenviaChar 0068  
              __size_of_motorHora 0080            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1C74                           LcInit@i 0075  
                ?_HActualitzaHora 0068                        ??_LcGotoXY 0071  
                    ?_MNovaLletra 0063                        ??_LcLliure 0068  
                      ??_LcScroll 006B                  ??_SIOcheckKrebut 0068  
             __size_of_TiGetTimer 001E              __size_of_CToAobtenir 0004  
                      ??_JendGame 0068                           _HJugant 1C48  
                       ?_high_rsi 0063                           _JJuguem 1BE8  
                         _LcClear 19EA                           _CantaIR 1A68  
                    ?_LcNewString 006B                    ??_JoystickInit 0068  
                       ?_initHora 0063                        ??_TeTeclat 006F  
                     _WaitForBusy 17EE                    ?_CantaPartAlta 0063  
           __end_of_SsetNovaTecla 1C10                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01B4               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                        ??_UgetTop5 0068  
                    ??_SIOendGame 0068                         ?_motorSIO 0063  
                       ?_motorJoc 0063                    ??_UgetUserName 006A  
               _getArrayShowUsers 1A4C               __end_of_UmotorUsers 0CA6  
        ?_UcheckExistsNotFinished 0063                 __end_of_arrayZero 1F0B  
              ?_getArrayShowUsers 0068                           __pcinit 1524  
    __end_of_UcheckExistsGetError 1C7C                           _ferMenu 03C1  
                      _init_ports 1A2E                           __ramtop 0200  
                         __ptext0 159C                           __ptext1 0CF4  
                         __ptext2 1BB6                           __ptext3 137C  
                         __ptext4 19A2                           __ptext5 1C60  
                         __ptext6 1B32                           __ptext7 1BC0  
                         __ptext8 1BC8                           __ptext9 1BD0  
                       _T0CONbits 000FD5                         _GLCDMotor 07BE  
                       CantaIR@IR 006A                           _initSIO 1BF8  
                         _counter 003A                           _horaTmp 0046  
          conversorJoystick@direc 0068               ??_getArrayShowUsers 006A  
                     UenviaChar@c 0069        __end_of_escriureCharEEPROM 197C  
                LcNewString@new_s 006B                   WaitForBusy@Busy 006F  
                    _do_showUsers 03C3                           _userPtr 0013  
               GLCDMostraMenu@num 0068                __end_of_SIOendGame 1C64  
                      ??_high_rsi 0064              __end_of_CToAHaAcabat 1C9C  
            end_of_initialization 158E                           _usuaris 0100  
                   UgetScore@quin 0068                   ??_JnovaDireccio 0068  
                      ??_initHora 0069          __end_of_llegirCharEEPROM 1B26  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 1F00  
                 TiGetTics@Handle 006C                     _MsetNovaTecla 1C10  
             __size_of_UenviaChar 0010                 _conversorJoystick 19A2  
               __end_of_motorHora 14A8                  ??_HClearNouSegon 0068  
                      _novaLletra 0054         __end_of_getArrayShowUsers 1A68  
              ?_conversorJoystick 0063                   _usuariActualSIO 004D  
                      ??_motorSIO 00B6                         _CToAReset 1BF0  
                      ??_motorJoc 00B6                   TiGetTics@actual 006D  
                   ?_SIONovaTecla 0063                        GLCDMotor@j 0029  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 1BD0                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 0033  
            __end_of_UcheckExists 1C80                     TeTeclat@files 003B  
             ??_conversorJoystick 0068                SIOStartGame@usuari 0068  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 003D  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0063                     ?_SIOStartGame 0063  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1B3E  
               UnewScore@scoretmp 0068                    _GLCDMostraMenu 1B86  
       __end_of_conversorJoystick 19C6                   ??_CantaPartAlta 0068  
                  ?_MsetNovaTecla 0063                         _CantaData 182C  
               __size_of_GLCDInit 0008                       _UmotorUsers 0A74  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1B86  
                  __end_of_SMSoff 1C5A                      ??_TiGetTimer 0068  
                  __end_of_LcInit 1372                    ??_SIONovaTecla 0068  
                      ?_CToAReset 0063                    __end_of_SMotor 1094  
                       _LcPutChar 1720                    __end_of_TeInit 1C20  
                  __end_of_Espera 1A2E                    GLCDMotor@state 002A  
      __end_of_EscriuPrimeraOrdre 150C                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1AA0                       ?_init_ports 0063  
                       _NoFerMenu 1C8C                         _ColumnAct 0043  
            __end_of_JoystickInit 1AF6                    ??_SIOStartGame 0068  
                       _URegister 1C80                         _HnoJugant 1C64  
                    ?_TiInitTimer 0063                      ??_JnovaTecla 0068  
                       _SiFerMenu 1C84                       __end_ofPL10 0A5C  
                     __end_ofPL20 0CDA                       __end_ofPL12 10B6  
                     __end_ofPL30 0786                       __end_ofPL22 0CEC  
                     __end_ofPL14 192E                       __end_ofPL40 151A  
                     __end_ofPL32 185A                       __end_ofPL24 11E8  
                     __end_ofPL16 0CC2                       __end_ofPL50 17E4  
                     __end_ofPL42 0796                       __end_ofPL34 078C  
                     __end_ofPL26 0ED4                       __end_ofPL18 0CCE  
                     __end_ofPL60 17B0                       __end_ofPL52 0CF4  
                     __end_ofPL44 1720                       __end_ofPL36 1714  
                     __end_ofPL28 1AA0                       __end_ofPL70 0A74  
                     __end_ofPL62 1524                       __end_ofPL54 1864  
                     __end_ofPL46 07A2                       __end_ofPL38 0A6A  
                     __end_ofPL80 07B6                       __end_ofPL72 17EE  
                     __end_ofPL64 1A0C                       __end_ofPL56 10C0  
                     __end_ofPL48 0EE0                       __end_ofPL82 07BE  
                     __end_ofPL74 1768                       __end_ofPL66 137C  
                     __end_ofPL58 166A                       __end_ofPL76 07A8  
                     __end_ofPL68 16D0                       __end_ofPL78 07AE  
             start_initialization 1524                         _TiGetTics 197C  
          __end_of_GLCDMostraMenu 1B92                        ?_HNouSegon 0063  
                ??_UgetNumUsuaris 0068                  UmotorUsers@state 002D  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1AE4  
              __end_of_TiGetTimer 1920                     JJuguem@usuari 0068  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 11E8  
               __size_of_JendGame 0004                      ?_TiResetTics 0063  
                      ?_CantaData 0063              _UcheckExistsGetError 1C78  
         __end_of_SIONovaDireccio 1BD8              __size_of_LcNewString 000C  
                        ??_SMSoff 0068                          ??_LcInit 0074  
                       _NovaTecla 0055                 __size_of_TeTeclat 0116  
                        ??_SMotor 006F        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 0069                      ?__TiRSITimer 0063  
                        ??_Espera 0071                         _UgetScore 1B6E  
              __end_of_JnovaTecla 1BE0                        ?_LcPutChar 0063  
                       _UenviaPas 1AF6                 __size_of_UgetTop5 000C  
                     __pdataBANK0 00AA                    motorHora@state 001E  
                    _menuDaltGLCD 002B                      ??_UenviaChar 0069  
                       _UnewScore 1BB6                        ?_NoFerMenu 0063  
                     ??_GLCDMotor 00B6                        ?_URegister 0063  
                      ?_HnoJugant 0063                 ??_checkHoraAcabat 0068  
                   ??_init_eusart 0068                        ?_SiFerMenu 0063  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                   __pcstackBANK0 00B6                        ?_TiGetTics 0068  
                 ?_GLCDMostraMenu 0063                          ?_HJugant 0063  
                  ?_JoystickMotor 0063                   ??_MsetNovaTecla 0068  
                        ?_JJuguem 0063                          ?_LcClear 0063  
                        ?_CantaIR 0063        __size_of_conversorJoystick 0024  
              _calculateShowUsers 1C70                    _CantaPartBaixa 1604  
        ??_SIOHaAcabatPuntuacions 0068             ?_UcheckExistsGetError 0063  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0063  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0068  
              SsetNovaTecla@tecla 0068                __end_of_UenviaChar 1B16  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 0063  
                      ?_UgetScore 0063                       ??_CToAReset 0068  
                       __pintcode 0008                     __pmediumconst 1F00  
                      ?_UenviaPas 0068                 __size_of_motorSIO 01D4  
               __size_of_motorJoc 00AC                   CantaPartBaixa@c 0069  
                    _CToAHaAcabat 1C98                        ?_UnewScore 0063  
                       _arrayZero 1F09                          ?_initSIO 0063  
                       _convertir 004A                     ??_CToAobtenir 006A  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0006  
            ??_calculateShowUsers 0068  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 1BD0  
                  __size_of_Sinit 0008                       ??_HNouSegon 0068  
                  __size_of_Uinit 0036                       _direccioSIO 004C  
                     _direccioJoc 001D            __end_of_CantaPartBaixa 1660  
              JoystickMotor@state 0021                          _GLCDInit 1C40  
                     _do_register 03C4               __end_of_init_eusart 1AD0  
                       _newString 03C0                      _UcheckExists 1C7C  
                       _jugantSIO 03B9          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03BA                      UgetTop5@quin 0068  
                     ??_CantaData 006A                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 0063                     ?_MNouJoystick 0063  
                ?_SIONovaDireccio 0063              __end_of_SIOStartGame 1BC8  
                   UenviaChar@pos 0068                _escriureCharEEPROM 1956  
                       _novaTecla 0058                ??_llegirCharEEPROM 0068  
                   motorSIO@state 0019                          _PIR1bits 000F9E  
             __end_of_lletraInici 1F09                       ??_LcPutChar 0076  
                       _timerGLCD 002C                         _motorHora 1428  
                        _RCONbits 000FD0                          _HGetTime 1C68  
           __size_of_JoystickInit 0012                         _timerHora 0020  
                       _timerMenu 0038               ?_escriureCharEEPROM 0068  
                     ??_NoFerMenu 0068                        _ADCON0bits 000FC2  
                     ??_URegister 0068                       ??_HnoJugant 0068  
                     ??_SiFerMenu 0068             __size_of_UgetUserName 0014  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006F  
                       _zeroTecla 0040                          _LcGotoXY 18CE  
                  _usuariLoguejat 0052                          _LcLliure 1BAA  
                     ??_TiGetTics 006A           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 0068              __size_of_TiInitTimer 0028  
                        _LcScroll 1C5A                   ??_JoystickMotor 0069  
                   GLCDMotor@max1 0051                     GLCDMotor@max2 0050  
                   GLCDMotor@min1 0028                     GLCDMotor@min2 0027  
                    _teclaPremuda 00AA                          _JendGame 1C90  
                       _usuariJoc 004F                       LcGotoXY@Row 0070  
                       copy_data0 1538                         copy_data1 1558  
            ??_escriureCharEEPROM 0069                   ?_CantaPartBaixa 0063  
             __end_of_CToAobtenir 1C98                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0068             escriureCharEEPROM@pos 0068  
                __size_of_JJuguem 0008                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 10C0  
           __end_of_JnovaDireccio 1BE8                    ??_MNouJoystick 0068  
                  _do_updateScore 03C2   __size_of_SIOHaAcabatPuntuacions 0004  
                    ?_UmotorUsers 0063                      _JoystickInit 1AE4  
                      _EECON1bits 000FA6                       _indexUsuari 0036  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 001C                          __Hrparam 0000  
                     ??_UgetScore 0068                          _UgetTop5 1B62  
                       menu@state 0034                          __Lrparam 0000  
                      ?_motorHora 0063              __size_of__TiRSITimer 003E  
                    _UgetUserName 1AD0                       ??_UenviaPas 0069  
                    _novaDireccio 0053                       ??_UnewScore 0068  
                    ??_init_ports 0068               HActualitzaHora@nova 0068  
      __end_of_UshowUsersCalculat 1B62                       _init_eusart 1ABA  
                __size_of_initSIO 0008                      _novaTeclaJOC 004E  
                    _novaTeclaSIO 004B                   _do_check_exists 03C5  
                        __ptext10 1C64                          __ptext11 1B3E  
              _EscriuPrimeraOrdre 14A8                          __ptext20 1B56  
                        __ptext12 1C48                          __ptext21 1AD0  
                        __ptext13 1C68                          __ptext30 1C80  
                        __ptext22 1B62                          __ptext14 1C6C  
                        __ptext31 1C84                          __ptext23 1B6E  
                        __ptext15 1428                          __ptext40 1BE8  
                        __ptext32 1C4E                          __ptext24 1C74  
                        __ptext16 0036                          __ptext41 189A  
                        __ptext33 1C54                          __ptext25 1AF6  
                        __ptext17 1A4C                          __ptext50 1C00  
                        __ptext42 1B86                          __ptext34 1C88  
                        __ptext26 1B06                          __ptext18 1B4A  
                        __ptext51 0A74                          __ptext43 1C94  
                        __ptext35 1C8C                          __ptext27 1B7A  
                        __ptext19 1C70                          __ptext60 1C18  
                        __ptext52 1956                          __ptext44 1C98  
                        __ptext36 1C5A                          __ptext28 1C78  
                        __ptext61 1C20                          __ptext53 17B0  
                        __ptext45 1B92                          __ptext37 1BD8  
                        __ptext29 1C7C                          __ptext70 1AE4  
                        __ptext62 0EE0                          __ptext54 1864  
                        __ptext46 1BF0                          __ptext38 1BE0  
                        __ptext71 07BE                          __ptext63 1C28  
                        __ptext55 1B16                          __ptext47 1A2E  
                        __ptext39 1C90                          __ptext80 1604  
                        __ptext72 1720                          __ptext64 1C30  
                        __ptext56 192E                          __ptext48 1ABA  
                        __ptext81 166A                          __ptext73 182C  
                        __ptext65 16D0                          __ptext57 10C0  
                        __ptext49 1BF8                          __ptext82 1A0C  
                        __ptext74 1B9E                          __ptext66 12BE  
                        __ptext58 1C08                          __ptext83 1A84  
                        __ptext75 1BAA                          __ptext67 14A8  
                        __ptext59 1C10                          __ptext84 197C  
                        __ptext76 19EA                          __ptext68 11E8  
                        __ptext85 1C40                          __ptext77 18CE  
                        __ptext69 1C38                          __ptext86 1902  
                        __ptext78 17EE                          __ptext87 19C6  
                        __ptext79 1A68                          __ptext89 1768  
                  CantaPartAlta@c 0069                       _lletraASCII 0059  
                        _high_rsi 0008                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 1C00  
                     _lletraInici 1F01                          _menuDalt 0037  
                        _menuList 1F0B               ?_EscriuPrimeraOrdre 0063  
                   __size_of_main 0068                     __size_of_menu 0746  
           __end_of_CantaPartAlta 16C6                    _CToAConverteix 1B92  
                   CantaData@Data 006A                          _tiTeclat 003E  
              __end_of_init_ports 1A4C                          _setSMSon 03C7  
                   _SsetNovaTecla 1C08              __size_of_WaitForBusy 003E  
                        _nouSegon 03BC                          _scoreUsr 002E  
                        _motorSIO 0CF4                 ??_HActualitzaHora 0069  
                        _motorJoc 137C                   _checkHoraAcabat 1B4A  
                        _timerSIO 001B                          _timerSMS 0057  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 0068           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1C88              ??_EscriuPrimeraOrdre 0068  
                      LcInit@rows 0074                  ??_GLCDMostraMenu 0068  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1B7A  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0068  
                     _CToAobtenir 1C94             __size_of_SIOStartGame 0008  
                   ??_LcNewString 006D                          intlevel2 0000  
                  _arrayShowUsers 000B            __end_of_CToAConverteix 1B9E  
                      LcPutChar@c 0076                    ?_SsetNovaTecla 0063  
               MNovaLletra@lletra 0068                   compareStrings@a 0068  
                 compareStrings@b 0069                       ??_motorHora 006F  
                    _SIONovaTecla 1BC8                       _tempsAcabat 03BB  
                     GLCDMotor@k1 0026                       GLCDMotor@k2 0025  
            __end_of_MNouJoystick 1C40                      _SIOStartGame 1BC0  
                  _compareStrings 17B0                       _tmpPassword 0098  
             __end_of_MNovaLletra 1C30                   ?_CToAConverteix 0063  
           __end_of_MsetNovaTecla 1C18           __end_of_checkHoraAcabat 1B56  
                     _tmpUsername 00A1                    _SIOcheckKrebut 1B32  
                     SMotor@state 003F           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1BAA              __size_of_UmotorUsers 0232  
                      _SIOendGame 1C60  
