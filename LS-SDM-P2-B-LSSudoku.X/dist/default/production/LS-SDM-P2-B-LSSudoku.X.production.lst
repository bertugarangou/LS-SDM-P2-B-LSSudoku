

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 20 12:06:05 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.32
    51                           ; Generated 02/02/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4321 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  000B08                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _lletraInici
    91  000B08  41                 	db	65
    92  000B09  44                 	db	68
    93  000B0A  47                 	db	71
    94  000B0B  4A                 	db	74
    95  000B0C  4D                 	db	77
    96  000B0D  50                 	db	80
    97  000B0E  54                 	db	84
    98  000B0F  57                 	db	87
    99  000B10  00                 	db	0
   100                           
   101                           ;initializer for _novaLletra
   102  000B11  FF                 	db	255
   103                           
   104                           ;initializer for _NovaTecla
   105  000B12  FF                 	db	255
   106                           
   107                           ;initializer for _ultimaTecla
   108  000B13  FF                 	db	255
   109                           
   110                           ;initializer for _timerSMS
   111  000B14  FF                 	db	255
   112                           
   113                           ;initializer for _novaTecla
   114  000B15  FF                 	db	255
   115                           
   116                           ;initializer for _lletraASCII
   117  000B16  FF                 	db	255
   118                           
   119                           ;initializer for _teclaPremuda
   120  000B17  01                 	db	1
   121  000B18  02                 	db	2
   122  000B19  03                 	db	3
   123  000B1A  04                 	db	4
   124  000B1B  05                 	db	5
   125  000B1C  06                 	db	6
   126  000B1D  07                 	db	7
   127  000B1E  08                 	db	8
   128  000B1F  09                 	db	9
   129  000B20  0A                 	db	10
   130  000B21  00                 	db	0
   131  000B22  0B                 	db	11
   132  0000                     _T0CONbits	set	4053
   133  0000                     _TMR0L	set	4054
   134  0000                     _TMR0H	set	4055
   135  0000                     _T0CON	set	4053
   136  0000                     _INTCONbits	set	4082
   137  0000                     _RCONbits	set	4048
   138  0000                     _PORTDbits	set	3971
   139  0000                     _LATD	set	3980
   140  0000                     _TRISD	set	3989
   141  0000                     _TRISC	set	3988
   142  0000                     _LATBbits	set	3978
   143  0000                     _TRISB	set	3987
   144  0000                     _TRISA	set	3986
   145  0000                     _PORTCbits	set	3970
   146  0000                     _LATDbits	set	3980
   147  0000                     _LATCbits	set	3979
   148  0000                     _TRISDbits	set	3989
   149  0000                     _TRISCbits	set	3988
   150                           
   151                           	psect	smallconst
   152  000200                     __psmallconst:
   153                           	callstack 0
   154  000200  00                 	db	0
   155  000201                     STR_2:
   156  000201  32                 	db	50	;'2'
   157  000202  2E                 	db	46
   158  000203  52                 	db	82	;'R'
   159  000204  45                 	db	69	;'E'
   160  000205  47                 	db	71	;'G'
   161  000206  49                 	db	73	;'I'
   162  000207  53                 	db	83	;'S'
   163  000208  54                 	db	84	;'T'
   164  000209  45                 	db	69	;'E'
   165  00020A  52                 	db	82	;'R'
   166  00020B  00                 	db	0
   167  00020C                     STR_3:
   168  00020C  4C                 	db	76	;'L'
   169  00020D  2D                 	db	45
   170  00020E  55                 	db	85	;'U'
   171  00020F  53                 	db	83	;'S'
   172  000210  45                 	db	69	;'E'
   173  000211  52                 	db	82	;'R'
   174  000212  3A                 	db	58	;':'
   175  000213  20                 	db	32
   176  000214  00                 	db	0
   177  000215                     STR_4:
   178  000215  52                 	db	82	;'R'
   179  000216  2D                 	db	45
   180  000217  55                 	db	85	;'U'
   181  000218  53                 	db	83	;'S'
   182  000219  45                 	db	69	;'E'
   183  00021A  52                 	db	82	;'R'
   184  00021B  3A                 	db	58	;':'
   185  00021C  20                 	db	32
   186  00021D  00                 	db	0
   187  00021E                     STR_1:
   188  00021E  31                 	db	49	;'1'
   189  00021F  2E                 	db	46
   190  000220  4C                 	db	76	;'L'
   191  000221  4F                 	db	79	;'O'
   192  000222  47                 	db	71	;'G'
   193  000223  49                 	db	73	;'I'
   194  000224  4E                 	db	78	;'N'
   195  000225  00                 	db	0
   196  000226  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  0008C8                     __pcinit:
   202                           	callstack 0
   203  0008C8                     start_initialization:
   204                           	callstack 0
   205  0008C8                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (27 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  0008C8  0E08               	movlw	low __pidataCOMRAM
   211  0008CA  6EF6               	movwf	tblptrl,c
   212  0008CC  0E0B               	movlw	high __pidataCOMRAM
   213  0008CE  6EF7               	movwf	tblptrh,c
   214  0008D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  0008D2  6EF8               	movwf	tblptru,c
   216  0008D4  EE00  F02C         	lfsr	0,__pdataCOMRAM
   217  0008D8  EE10 F01B          	lfsr	1,27
   218  0008DC                     copy_data0:
   219  0008DC  0009               	tblrd		*+
   220  0008DE  CFF5 FFEE          	movff	tablat,postinc0
   221  0008E2  50E5               	movf	postdec1,w,c
   222  0008E4  50E1               	movf	fsr1l,w,c
   223  0008E6  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   226  0008E8  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   227                           
   228                           ; Clear objects allocated to COMRAM (43 bytes)
   229  0008EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   230  0008EE  0E2B               	movlw	43
   231  0008F0                     clear_0:
   232  0008F0  6AEE               	clrf	postinc0,c
   233  0008F2  06E8               	decf	wreg,f,c
   234  0008F4  E1FD               	bnz	clear_0
   235  0008F6                     end_of_initialization:
   236                           	callstack 0
   237  0008F6                     __end_of__initialization:
   238                           	callstack 0
   239  0008F6  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  0008F8  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  0008FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  0008FC  6EF8               	movwf	tblptru,c
   243  0008FE  0100               	movlb	0
   244  000900  EFD8  F004         	goto	_main	;jump to C main() function
   245                           
   246                           	psect	bitbssCOMRAM
   247  0002E0                     __pbitbssCOMRAM:
   248                           	callstack 0
   249  0002E0                     _setSMSon:
   250                           	callstack 0
   251  0002E0                     	ds	1
   252  0002E1                     _nou_s:
   253                           	callstack 0
   254  0002E1                     	ds	1
   255                           
   256                           	psect	bssCOMRAM
   257  000001                     __pbssCOMRAM:
   258                           	callstack 0
   259  000001                     _s_Timers:
   260                           	callstack 0
   261  000001                     	ds	24
   262  000019                     _h_Tics:
   263                           	callstack 0
   264  000019                     	ds	2
   265  00001B                     _numUsuaris:
   266                           	callstack 0
   267  00001B                     	ds	1
   268  00001C                     menu@state:
   269                           	callstack 0
   270  00001C                     	ds	1
   271  00001D                     _timerMenu:
   272                           	callstack 0
   273  00001D                     	ds	1
   274  00001E                     _menuDalt:
   275                           	callstack 0
   276  00001E                     	ds	1
   277  00001F                     _counter:
   278                           	callstack 0
   279  00001F                     	ds	1
   280  000020                     TeTeclat@files:
   281                           	callstack 0
   282  000020                     	ds	1
   283  000021                     TeTeclat@cols:
   284                           	callstack 0
   285  000021                     	ds	1
   286  000022                     TeTeclat@state:
   287                           	callstack 0
   288  000022                     	ds	1
   289  000023                     _tiTeclat:
   290                           	callstack 0
   291  000023                     	ds	1
   292  000024                     SMotor@state:
   293                           	callstack 0
   294  000024                     	ds	1
   295  000025                     _sumaPulsacions:
   296                           	callstack 0
   297  000025                     	ds	1
   298  000026                     _s_ptr:
   299                           	callstack 0
   300  000026                     	ds	1
   301  000027                     _Timer:
   302                           	callstack 0
   303  000027                     	ds	1
   304  000028                     _ColumnAct:
   305                           	callstack 0
   306  000028                     	ds	1
   307  000029                     _RowAct:
   308                           	callstack 0
   309  000029                     	ds	1
   310  00002A                     _Columns:
   311                           	callstack 0
   312  00002A                     	ds	1
   313  00002B                     _Rows:
   314                           	callstack 0
   315  00002B                     	ds	1
   316                           
   317                           	psect	dataCOMRAM
   318  00002C                     __pdataCOMRAM:
   319                           	callstack 0
   320  00002C                     _lletraInici:
   321                           	callstack 0
   322  00002C                     	ds	9
   323  000035                     _novaLletra:
   324                           	callstack 0
   325  000035                     	ds	1
   326  000036                     _NovaTecla:
   327                           	callstack 0
   328  000036                     	ds	1
   329  000037                     _ultimaTecla:
   330                           	callstack 0
   331  000037                     	ds	1
   332  000038                     _timerSMS:
   333                           	callstack 0
   334  000038                     	ds	1
   335  000039                     _novaTecla:
   336                           	callstack 0
   337  000039                     	ds	1
   338  00003A                     _lletraASCII:
   339                           	callstack 0
   340  00003A                     	ds	1
   341  00003B                     _teclaPremuda:
   342                           	callstack 0
   343  00003B                     	ds	12
   344                           
   345                           	psect	cstackCOMRAM
   346  000047                     __pcstackCOMRAM:
   347                           	callstack 0
   348  000047                     
   349                           ; 1 bytes @ 0x0
   350  000047                     	ds	1
   351  000048                     ??_high_rsi:
   352                           
   353                           ; 1 bytes @ 0x1
   354  000048                     	ds	4
   355  00004C                     ??_EscriuPrimeraOrdre:
   356  00004C                     ??_CantaPartAlta:
   357  00004C                     ??_CantaPartBaixa:
   358  00004C                     ?_TiGetTics:
   359                           	callstack 0
   360  00004C                     LcNewString@new_s:
   361                           	callstack 0
   362  00004C                     SsetNovaTecla@tecla:
   363                           	callstack 0
   364  00004C                     TiResetTics@Handle:
   365                           	callstack 0
   366  00004C                     MsetNovaTecla@tecla:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x5
   370  00004C                     	ds	1
   371  00004D                     CantaPartAlta@c:
   372                           	callstack 0
   373  00004D                     CantaPartBaixa@c:
   374                           	callstack 0
   375  00004D                     EscriuPrimeraOrdre@ordre:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x6
   379  00004D                     	ds	1
   380  00004E                     ??_TiGetTics:
   381  00004E                     CantaIR@IR:
   382                           	callstack 0
   383  00004E                     CantaData@Data:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x7
   387  00004E                     	ds	2
   388  000050                     TiGetTics@Handle:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x9
   392  000050                     	ds	1
   393  000051                     TiGetTics@actual:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xA
   397  000051                     	ds	2
   398  000053                     ??_SMotor:
   399  000053                     ??_TeTeclat:
   400  000053                     WaitForBusy@Busy:
   401                           	callstack 0
   402  000053                     Espera@ms:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xC
   406  000053                     	ds	1
   407  000054                     LcGotoXY@Row:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xD
   411  000054                     	ds	1
   412  000055                     ??_Espera:
   413  000055                     LcGotoXY@Fisics:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xE
   417  000055                     	ds	1
   418  000056                     Espera@Timer:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xF
   422  000056                     	ds	1
   423  000057                     LcInit@columns:
   424                           	callstack 0
   425  000057                     _LcGotoXY$342:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x10
   429  000057                     	ds	1
   430  000058                     LcInit@rows:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x11
   434  000058                     	ds	1
   435  000059                     LcGotoXY@Column:
   436                           	callstack 0
   437  000059                     LcInit@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x12
   441  000059                     	ds	1
   442  00005A                     ??_menu:
   443  00005A                     LcPutChar@c:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x13
   447  00005A                     	ds	1
   448  00005B                     
   449                           ; 1 bytes @ 0x14
   450  00005B                     	ds	1
   451  00005C                     
   452                           ; 1 bytes @ 0x15
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 64 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1
   472 ;;      Params:         0       0       0
   473 ;;      Locals:         0       0       0
   474 ;;      Temps:          0       0       0
   475 ;;      Totals:         0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels required when called: 7
   478 ;; This function calls:
   479 ;;		_LcInit
   480 ;;		_LcLCD
   481 ;;		_Minit
   482 ;;		_SMotor
   483 ;;		_Sinit
   484 ;;		_TeInit
   485 ;;		_TeTeclat
   486 ;;		_TiInitTimer
   487 ;;		_init_ports
   488 ;;		_menu
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495  0009B0                     __ptext0:
   496                           	callstack 0
   497  0009B0                     _main:
   498                           	callstack 24
   499                           
   500                           ;main.c: 65:     init_ports();
   501                           
   502                           ;incstack = 0
   503  0009B0  EC76  F005         	call	_init_ports	;wreg free
   504                           
   505                           ;main.c: 66:     TiInitTimer();
   506  0009B4  ECBC  F004         	call	_TiInitTimer	;wreg free
   507                           
   508                           ;main.c: 67:     TeInit();
   509  0009B8  ECB6  F005         	call	_TeInit	;wreg free
   510                           
   511                           ;main.c: 68:     Sinit();
   512  0009BC  ECBA  F005         	call	_Sinit	;wreg free
   513                           
   514                           ;main.c: 69:     SMotor();
   515  0009C0  ECC6  F001         	call	_SMotor	;wreg free
   516                           
   517                           ;main.c: 71:     LcInit(2,16);
   518  0009C4  0E10               	movlw	16
   519  0009C6  6E57               	movwf	LcInit@columns^0,c
   520  0009C8  0E02               	movlw	2
   521  0009CA  EC71  F002         	call	_LcInit
   522                           
   523                           ;main.c: 72:     Minit();
   524  0009CE  ECBE  F005         	call	_Minit	;wreg free
   525  0009D2                     l2146:
   526                           
   527                           ;main.c: 76:         menu();
   528  0009D2  ECDE  F002         	call	_menu	;wreg free
   529                           
   530                           ;main.c: 77:         TeTeclat();
   531  0009D6  EC14  F001         	call	_TeTeclat	;wreg free
   532                           
   533                           ;main.c: 78:         SMotor();
   534  0009DA  ECC6  F001         	call	_SMotor	;wreg free
   535                           
   536                           ;main.c: 79:         LcLCD();
   537  0009DE  EC24  F005         	call	_LcLCD	;wreg free
   538  0009E2  D7F7               	goto	l2146
   539  0009E4                     __end_of_main:
   540                           	callstack 0
   541                           
   542 ;; *************** function _menu *****************
   543 ;; Defined at:
   544 ;;		line 23 in file "Menu.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1
   558 ;;      Params:         0       0       0
   559 ;;      Locals:         0       0       0
   560 ;;      Temps:          2       0       0
   561 ;;      Totals:         2       0       0
   562 ;;Total ram usage:        2 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 6
   565 ;; This function calls:
   566 ;;		_LcClear
   567 ;;		_LcGotoXY
   568 ;;		_LcLliure
   569 ;;		_LcNewString
   570 ;;		_UgetNumUsuaris
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text1
   577  0005BC                     __ptext1:
   578                           	callstack 0
   579  0005BC                     _menu:
   580                           	callstack 24
   581                           
   582                           ;Menu.c: 24:  static char state = 0;;Menu.c: 26:  switch(state) {
   583                           
   584                           ;incstack = 0
   585  0005BC  D04E               	goto	l2044
   586  0005BE                     l1994:
   587                           
   588                           ;Menu.c: 28:    LcClear();
   589  0005BE  EC52  F005         	call	_LcClear	;wreg free
   590                           
   591                           ;Menu.c: 29:    LcNewString("1.LOGIN");
   592  0005C2  0E1E               	movlw	low STR_1
   593  0005C4  6E4C               	movwf	LcNewString@new_s^0,c
   594  0005C6  ECAA  F005         	call	_LcNewString	;wreg free
   595                           
   596                           ;Menu.c: 30:    state = 1;
   597  0005CA  0E01               	movlw	1
   598  0005CC  6E1C               	movwf	menu@state^0,c
   599                           
   600                           ;Menu.c: 31:   break;
   601  0005CE  0012               	return	
   602  0005D0                     l2000:
   603                           
   604                           ;Menu.c: 33:    if (LcLliure()) {
   605  0005D0  EC9E  F005         	call	_LcLliure	;wreg free
   606  0005D4  A0D8               	btfss	status,0,c
   607  0005D6  0012               	return	
   608                           
   609                           ;Menu.c: 34:     LcGotoXY(0,1);
   610  0005D8  0E01               	movlw	1
   611  0005DA  6E54               	movwf	LcGotoXY@Row^0,c
   612  0005DC  0E00               	movlw	0
   613  0005DE  EC82  F004         	call	_LcGotoXY
   614                           
   615                           ;Menu.c: 35:     LcNewString("2.REGISTER");
   616  0005E2  0E01               	movlw	low STR_2
   617  0005E4  6E4C               	movwf	LcNewString@new_s^0,c
   618  0005E6  ECAA  F005         	call	_LcNewString	;wreg free
   619                           
   620                           ;Menu.c: 36:     NovaTecla = -1;
   621  0005EA  6836               	setf	_NovaTecla^0,c
   622                           
   623                           ;Menu.c: 37:     state = 2;
   624  0005EC  0E02               	movlw	2
   625  0005EE  6E1C               	movwf	menu@state^0,c
   626  0005F0  0012               	return	
   627  0005F2                     l2010:
   628                           
   629                           ;Menu.c: 41:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   630  0005F2  0436               	decf	_NovaTecla^0,w,c
   631  0005F4  A4D8               	btfss	status,2,c
   632  0005F6  D00F               	goto	l2022
   633  0005F8  ECC2  F005         	call	_UgetNumUsuaris	;wreg free
   634  0005FC  0900               	iorlw	0
   635  0005FE  B4D8               	btfsc	status,2,c
   636  000600  D00A               	goto	l2022
   637                           
   638                           ;Menu.c: 42:     NovaTecla = -1;
   639  000602  6836               	setf	_NovaTecla^0,c
   640                           
   641                           ;Menu.c: 43:     LcClear();
   642  000604  EC52  F005         	call	_LcClear	;wreg free
   643                           
   644                           ;Menu.c: 44:     LcNewString("L-USER: ");
   645  000608  0E0C               	movlw	low STR_3
   646  00060A  6E4C               	movwf	LcNewString@new_s^0,c
   647  00060C  ECAA  F005         	call	_LcNewString	;wreg free
   648                           
   649                           ;Menu.c: 45:     state = 3;
   650  000610  0E03               	movlw	3
   651  000612  6E1C               	movwf	menu@state^0,c
   652                           
   653                           ;Menu.c: 46:    }
   654  000614  0012               	return	
   655  000616                     l2022:
   656  000616  0E02               	movlw	2
   657  000618  1836               	xorwf	_NovaTecla^0,w,c
   658  00061A  A4D8               	btfss	status,2,c
   659  00061C  0012               	return	
   660  00061E  ECC2  F005         	call	_UgetNumUsuaris	;wreg free
   661  000622  6E5A               	movwf	??_menu^0,c
   662  000624  0E08               	movlw	8
   663  000626  605A               	cpfslt	??_menu^0,c
   664  000628  0012               	return	
   665                           
   666                           ;Menu.c: 48:     NovaTecla = -1;
   667  00062A  6836               	setf	_NovaTecla^0,c
   668                           
   669                           ;Menu.c: 49:     LcClear();
   670  00062C  EC52  F005         	call	_LcClear	;wreg free
   671                           
   672                           ;Menu.c: 50:     LcNewString("R-USER: ");
   673  000630  0E15               	movlw	low STR_4
   674  000632  6E4C               	movwf	LcNewString@new_s^0,c
   675  000634  ECAA  F005         	call	_LcNewString	;wreg free
   676                           
   677                           ;Menu.c: 51:     state = 4;
   678  000638  0E04               	movlw	4
   679  00063A  6E1C               	movwf	menu@state^0,c
   680  00063C  0012               	return	
   681  00063E                     l2034:
   682                           
   683                           ;Menu.c: 55:    if (LcLliure()) {
   684  00063E  EC9E  F005         	call	_LcLliure	;wreg free
   685  000642  A0D8               	btfss	status,0,c
   686  000644  0012               	return	
   687                           
   688                           ;Menu.c: 56:     state = 5;
   689  000646  0E05               	movlw	5
   690  000648  6E1C               	movwf	menu@state^0,c
   691  00064A  0012               	return	
   692  00064C                     l2038:
   693                           
   694                           ;Menu.c: 60:    if (LcLliure()) {
   695  00064C  EC9E  F005         	call	_LcLliure	;wreg free
   696  000650  A0D8               	btfss	status,0,c
   697  000652  0012               	return	
   698                           
   699                           ;Menu.c: 61:     state = 6;
   700  000654  0E06               	movlw	6
   701  000656  6E1C               	movwf	menu@state^0,c
   702  000658  0012               	return	
   703  00065A                     l2044:
   704  00065A  501C               	movf	menu@state^0,w,c
   705  00065C  6E5A               	movwf	??_menu^0,c
   706  00065E  6A5B               	clrf	(??_menu+1)^0,c
   707                           
   708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   709                           ; Switch size 1, requested type "simple"
   710                           ; Number of cases is 1, Range of values is 0 to 0
   711                           ; switch strategies available:
   712                           ; Name         Instructions Cycles
   713                           ; simple_byte            4     3 (average)
   714                           ;	Chosen strategy is simple_byte
   715  000660  505B               	movf	(??_menu+1)^0,w,c
   716  000662  0A00               	xorlw	0	; case 0
   717  000664  A4D8               	btfss	status,2,c
   718  000666  0012               	return	
   719                           
   720                           ; Switch size 1, requested type "simple"
   721                           ; Number of cases is 7, Range of values is 0 to 6
   722                           ; switch strategies available:
   723                           ; Name         Instructions Cycles
   724                           ; simple_byte           22    12 (average)
   725                           ;	Chosen strategy is simple_byte
   726  000668  505A               	movf	??_menu^0,w,c
   727  00066A  0A00               	xorlw	0	; case 0
   728  00066C  B4D8               	btfsc	status,2,c
   729  00066E  D7A7               	goto	l1994
   730  000670  0A01               	xorlw	1	; case 1
   731  000672  B4D8               	btfsc	status,2,c
   732  000674  D7AD               	goto	l2000
   733  000676  0A03               	xorlw	3	; case 2
   734  000678  B4D8               	btfsc	status,2,c
   735  00067A  D7BB               	goto	l2010
   736  00067C  0A01               	xorlw	1	; case 3
   737  00067E  B4D8               	btfsc	status,2,c
   738  000680  D7DE               	goto	l2034
   739  000682  0A07               	xorlw	7	; case 4
   740  000684  B4D8               	btfsc	status,2,c
   741  000686  D7E2               	goto	l2038
   742  000688  0A01               	xorlw	1	; case 5
   743  00068A  B4D8               	btfsc	status,2,c
   744  00068C  0012               	return	
   745  00068E  0A03               	xorlw	3	; case 6
   746  000690  0012               	return	
   747  000692                     __end_of_menu:
   748                           	callstack 0
   749                           
   750 ;; *************** function _UgetNumUsuaris *****************
   751 ;; Defined at:
   752 ;;		line 7 in file "Usuaris.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      unsigned char 
   759 ;; Registers used:
   760 ;;		wreg, status,2
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1
   766 ;;      Params:         0       0       0
   767 ;;      Locals:         0       0       0
   768 ;;      Temps:          0       0       0
   769 ;;      Totals:         0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 2
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_menu
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text2
   781  000B84                     __ptext2:
   782                           	callstack 0
   783  000B84                     _UgetNumUsuaris:
   784                           	callstack 27
   785                           
   786                           ;Usuaris.c: 8:     return numUsuaris;
   787                           
   788                           ;incstack = 0
   789  000B84  501B               	movf	_numUsuaris^0,w,c
   790  000B86  0012               	return		;funcret
   791  000B88                     __end_of_UgetNumUsuaris:
   792                           	callstack 0
   793                           
   794 ;; *************** function _LcNewString *****************
   795 ;; Defined at:
   796 ;;		line 239 in file "LcTLCD.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  new_s           1    5[COMRAM] PTR unsigned char 
   799 ;;		 -> STR_4(9), STR_3(9), STR_2(11), STR_1(8), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1
   811 ;;      Params:         1       0       0
   812 ;;      Locals:         0       0       0
   813 ;;      Temps:          0       0       0
   814 ;;      Totals:         1       0       0
   815 ;;Total ram usage:        1 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_menu
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  000B54                     __ptext3:
   827                           	callstack 0
   828  000B54                     _LcNewString:
   829                           	callstack 27
   830                           
   831                           ;LcTLCD.c: 240:     s_ptr = new_s;
   832                           
   833                           ;incstack = 0
   834  000B54  C04C  F026         	movff	LcNewString@new_s,_s_ptr
   835                           
   836                           ;LcTLCD.c: 241:     nou_s = 1;
   837  000B58  825C               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
   838  000B5A  0012               	return		;funcret
   839  000B5C                     __end_of_LcNewString:
   840                           	callstack 0
   841                           
   842 ;; *************** function _LcLliure *****************
   843 ;; Defined at:
   844 ;;		line 265 in file "LcTLCD.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;		None               void
   851 ;; Registers used:
   852 ;;		status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1
   858 ;;      Params:         0       0       0
   859 ;;      Locals:         0       0       0
   860 ;;      Temps:          0       0       0
   861 ;;      Totals:         0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 2
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_menu
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873  000B3C                     __ptext4:
   874                           	callstack 0
   875  000B3C                     _LcLliure:
   876                           	callstack 27
   877                           
   878                           ;LcTLCD.c: 266:     return !nou_s;
   879                           
   880                           ;incstack = 0
   881  000B3C  A25C               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
   882  000B3E  D002               	goto	l1244
   883  000B40  90D8               	bcf	status,0,c
   884  000B42  0012               	return	
   885  000B44                     l1244:
   886  000B44  80D8               	bsf	status,0,c
   887  000B46  0012               	return		;funcret
   888  000B48                     __end_of_LcLliure:
   889                           	callstack 0
   890                           
   891 ;; *************** function _LcClear *****************
   892 ;; Defined at:
   893 ;;		line 82 in file "LcTLCD.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1
   907 ;;      Params:         0       0       0
   908 ;;      Locals:         0       0       0
   909 ;;      Temps:          0       0       0
   910 ;;      Totals:         0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 5
   914 ;; This function calls:
   915 ;;		_CantaIR
   916 ;;		_Espera
   917 ;;		_LcGotoXY
   918 ;;		_WaitForBusy
   919 ;; This function is called by:
   920 ;;		_menu
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text5
   925  000AA4                     __ptext5:
   926                           	callstack 0
   927  000AA4                     _LcClear:
   928                           	callstack 24
   929                           
   930                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
   931                           
   932                           ;incstack = 0
   933  000AA4  EC44  F004         	call	_WaitForBusy	;wreg free
   934  000AA8  0E01               	movlw	1
   935  000AAA  EC0B  F005         	call	_CantaIR
   936                           
   937                           ;LcTLCD.c: 86:  Espera(Timer, 3);
   938  000AAE  0E00               	movlw	0
   939  000AB0  6E54               	movwf	(Espera@ms+1)^0,c
   940  000AB2  0E03               	movlw	3
   941  000AB4  6E53               	movwf	Espera@ms^0,c
   942  000AB6  5027               	movf	_Timer^0,w,c
   943  000AB8  EC64  F005         	call	_Espera
   944                           
   945                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
   946  000ABC  0E00               	movlw	0
   947  000ABE  6E54               	movwf	LcGotoXY@Row^0,c
   948  000AC0  0E00               	movlw	0
   949  000AC2  EC82  F004         	call	_LcGotoXY
   950  000AC6  0012               	return		;funcret
   951  000AC8                     __end_of_LcClear:
   952                           	callstack 0
   953                           
   954 ;; *************** function _init_ports *****************
   955 ;; Defined at:
   956 ;;		line 19 in file "main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1
   970 ;;      Params:         0       0       0
   971 ;;      Locals:         0       0       0
   972 ;;      Temps:          0       0       0
   973 ;;      Totals:         0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text6
   985  000AEC                     __ptext6:
   986                           	callstack 0
   987  000AEC                     _init_ports:
   988                           	callstack 28
   989                           
   990                           ;incstack = 0
   991  000AEC  0E03               	movlw	3
   992  000AEE  6E92               	movwf	146,c	;volatile
   993  000AF0  0EE0               	movlw	224
   994  000AF2  6E93               	movwf	147,c	;volatile
   995  000AF4  968A               	bcf	138,3,c	;volatile
   996  000AF6  908A               	bcf	138,0,c	;volatile
   997  000AF8  928A               	bcf	138,1,c	;volatile
   998                           
   999                           ;main.c: 42:     TRISC = 0xC0;
  1000  000AFA  0EC0               	movlw	192
  1001  000AFC  6E94               	movwf	148,c	;volatile
  1002                           
  1003                           ;main.c: 52:     TRISD = 0x8F;
  1004  000AFE  0E8F               	movlw	143
  1005  000B00  6E95               	movwf	149,c	;volatile
  1006                           
  1007                           ;main.c: 53:     LATD = 0x00;
  1008  000B02  0E00               	movlw	0
  1009  000B04  6E8C               	movwf	140,c	;volatile
  1010  000B06  0012               	return		;funcret
  1011  000B08                     __end_of_init_ports:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _TiInitTimer *****************
  1015 ;; Defined at:
  1016 ;;		line 18 in file "TiTTimer.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1
  1030 ;;      Params:         0       0       0
  1031 ;;      Locals:         0       0       0
  1032 ;;      Temps:          0       0       0
  1033 ;;      Totals:         0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text7
  1045  000978                     __ptext7:
  1046                           	callstack 0
  1047  000978                     _TiInitTimer:
  1048                           	callstack 28
  1049                           
  1050                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1051                           
  1052                           ;incstack = 0
  1053  000978  9ED0               	bcf	208,7,c	;volatile
  1054                           
  1055                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1056  00097A  8EF2               	bsf	242,7,c	;volatile
  1057                           
  1058                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1059  00097C  8CF2               	bsf	242,6,c	;volatile
  1060                           
  1061                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1062  00097E  8AF2               	bsf	242,5,c	;volatile
  1063                           
  1064                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1065  000980  94F2               	bcf	242,2,c	;volatile
  1066                           
  1067                           ;TiTTimer.c: 25:     T0CON = 136;
  1068  000982  0E88               	movlw	136
  1069  000984  6ED5               	movwf	213,c	;volatile
  1070                           
  1071                           ;TiTTimer.c: 27:     TMR0H = 223;
  1072  000986  0EDF               	movlw	223
  1073  000988  6ED7               	movwf	215,c	;volatile
  1074                           
  1075                           ;TiTTimer.c: 28:     TMR0L = 148;
  1076  00098A  0E94               	movlw	148
  1077  00098C  6ED6               	movwf	214,c	;volatile
  1078                           
  1079                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1080  00098E  8ED5               	bsf	213,7,c	;volatile
  1081                           
  1082                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1083  000990  0E00               	movlw	0
  1084  000992  6E1F               	movwf	_counter^0,c
  1085  000994                     l1356:
  1086  000994  0E07               	movlw	7
  1087  000996  641F               	cpfsgt	_counter^0,c
  1088  000998  D001               	goto	l1360
  1089  00099A  0012               	return	
  1090  00099C                     l1360:
  1091                           
  1092                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1093  00099C  501F               	movf	_counter^0,w,c
  1094  00099E  0D03               	mullw	3
  1095  0009A0  50F3               	movf	243,w,c
  1096  0009A2  0F03               	addlw	low (_s_Timers+2)
  1097  0009A4  6ED9               	movwf	fsr2l,c
  1098  0009A6  6ADA               	clrf	fsr2h,c
  1099  0009A8  0E00               	movlw	0
  1100  0009AA  6EDF               	movwf	indf2,c
  1101                           
  1102                           ;TiTTimer.c: 33:     }
  1103  0009AC  2A1F               	incf	_counter^0,f,c
  1104  0009AE  D7F2               	goto	l1356
  1105  0009B0                     __end_of_TiInitTimer:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _TeTeclat *****************
  1109 ;; Defined at:
  1110 ;;		line 22 in file "TeTeclat.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1
  1124 ;;      Params:         0       0       0
  1125 ;;      Locals:         0       0       0
  1126 ;;      Temps:          3       0       0
  1127 ;;      Totals:         3       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 3
  1131 ;; This function calls:
  1132 ;;		_MsetNovaTecla
  1133 ;;		_SsetNovaTecla
  1134 ;;		_TiGetTics
  1135 ;;		_TiResetTics
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text8
  1142  000228                     __ptext8:
  1143                           	callstack 0
  1144  000228                     _TeTeclat:
  1145                           	callstack 27
  1146                           
  1147                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1148                           
  1149                           ;incstack = 0
  1150  000228  A083               	btfss	131,0,c	;volatile
  1151  00022A  D003               	goto	u1450
  1152  00022C  6A53               	clrf	??_TeTeclat^0,c
  1153  00022E  2A53               	incf	??_TeTeclat^0,f,c
  1154  000230  D001               	goto	u1458
  1155  000232                     u1450:
  1156  000232  6A53               	clrf	??_TeTeclat^0,c
  1157  000234                     u1458:
  1158  000234  A283               	btfss	131,1,c	;volatile
  1159  000236  D002               	goto	u1460
  1160  000238  0E01               	movlw	1
  1161  00023A  D001               	goto	u1466
  1162  00023C                     u1460:
  1163  00023C  0E00               	movlw	0
  1164  00023E                     u1466:
  1165  00023E  0D02               	mullw	2
  1166  000240  CFF3 F054          	movff	prodl,??_TeTeclat+1
  1167  000244  A483               	btfss	131,2,c	;volatile
  1168  000246  D002               	goto	u1470
  1169  000248  0E01               	movlw	1
  1170  00024A  D001               	goto	u1476
  1171  00024C                     u1470:
  1172  00024C  0E00               	movlw	0
  1173  00024E                     u1476:
  1174  00024E  0D03               	mullw	3
  1175  000250  CFF3 F055          	movff	prodl,??_TeTeclat+2
  1176  000254  A683               	btfss	131,3,c	;volatile
  1177  000256  D002               	goto	u1480
  1178  000258  0E01               	movlw	1
  1179  00025A  D001               	goto	u1486
  1180  00025C                     u1480:
  1181  00025C  0E00               	movlw	0
  1182  00025E                     u1486:
  1183  00025E  0D04               	mullw	4
  1184  000260  50F3               	movf	243,w,c
  1185  000262  2455               	addwf	(??_TeTeclat+2)^0,w,c
  1186  000264  2454               	addwf	(??_TeTeclat+1)^0,w,c
  1187  000266  2453               	addwf	??_TeTeclat^0,w,c
  1188  000268  6E20               	movwf	TeTeclat@files^0,c
  1189                           
  1190                           ;TeTeclat.c: 27:  switch(state) {
  1191  00026A  D06F               	goto	l2126
  1192  00026C                     l2052:
  1193                           
  1194                           ;TeTeclat.c: 29:    if (files==0) {
  1195  00026C  5020               	movf	TeTeclat@files^0,w,c
  1196  00026E  A4D8               	btfss	status,2,c
  1197  000270  D007               	goto	l2060
  1198                           
  1199                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1200  000272  888C               	bsf	140,4,c	;volatile
  1201                           
  1202                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1203  000274  9A8C               	bcf	140,5,c	;volatile
  1204                           
  1205                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1206  000276  9C8C               	bcf	140,6,c	;volatile
  1207                           
  1208                           ;TeTeclat.c: 33:     cols=0;
  1209  000278  0E00               	movlw	0
  1210  00027A  6E21               	movwf	TeTeclat@cols^0,c
  1211  00027C                     l2058:
  1212                           
  1213                           ;TeTeclat.c: 34:     state++;
  1214  00027C  2A22               	incf	TeTeclat@state^0,f,c
  1215                           
  1216                           ;TeTeclat.c: 35:    }
  1217  00027E  0012               	return	
  1218  000280                     l2060:
  1219  000280  5020               	movf	TeTeclat@files^0,w,c
  1220  000282  B4D8               	btfsc	status,2,c
  1221  000284  0012               	return	
  1222                           
  1223                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1224  000286  5023               	movf	_tiTeclat^0,w,c
  1225  000288  EC92  F005         	call	_TiResetTics
  1226  00028C                     l2064:
  1227                           
  1228                           ;TeTeclat.c: 38:     state = 3;
  1229  00028C  0E03               	movlw	3
  1230  00028E  6E22               	movwf	TeTeclat@state^0,c
  1231  000290  0012               	return	
  1232  000292                     l2066:
  1233                           
  1234                           ;TeTeclat.c: 42:    if (files==0) {
  1235  000292  5020               	movf	TeTeclat@files^0,w,c
  1236  000294  A4D8               	btfss	status,2,c
  1237  000296  D005               	goto	l2074
  1238                           
  1239                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  1240  000298  988C               	bcf	140,4,c	;volatile
  1241                           
  1242                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  1243  00029A  8A8C               	bsf	140,5,c	;volatile
  1244                           
  1245                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  1246  00029C  9C8C               	bcf	140,6,c	;volatile
  1247                           
  1248                           ;TeTeclat.c: 46:     cols=1;
  1249  00029E  0E01               	movlw	1
  1250  0002A0  D7EC               	goto	L1
  1251  0002A2                     l2074:
  1252  0002A2  5020               	movf	TeTeclat@files^0,w,c
  1253  0002A4  B4D8               	btfsc	status,2,c
  1254  0002A6  0012               	return	
  1255                           
  1256                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  1257  0002A8  5023               	movf	_tiTeclat^0,w,c
  1258  0002AA  EC92  F005         	call	_TiResetTics
  1259  0002AE  D7EE               	goto	l2064
  1260  0002B0                     l2080:
  1261                           
  1262                           ;TeTeclat.c: 55:    if (files==0) {
  1263  0002B0  5020               	movf	TeTeclat@files^0,w,c
  1264  0002B2  A4D8               	btfss	status,2,c
  1265  0002B4  D008               	goto	l2086
  1266                           
  1267                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  1268  0002B6  988C               	bcf	140,4,c	;volatile
  1269                           
  1270                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  1271  0002B8  9A8C               	bcf	140,5,c	;volatile
  1272                           
  1273                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  1274  0002BA  8C8C               	bsf	140,6,c	;volatile
  1275                           
  1276                           ;TeTeclat.c: 59:     cols=2;
  1277  0002BC  0E02               	movlw	2
  1278  0002BE  6E21               	movwf	TeTeclat@cols^0,c
  1279                           
  1280                           ;TeTeclat.c: 60:     state = 0;
  1281  0002C0  0E00               	movlw	0
  1282  0002C2  6E22               	movwf	TeTeclat@state^0,c
  1283                           
  1284                           ;TeTeclat.c: 61:    }
  1285  0002C4  0012               	return	
  1286  0002C6                     l2086:
  1287  0002C6  5020               	movf	TeTeclat@files^0,w,c
  1288  0002C8  B4D8               	btfsc	status,2,c
  1289  0002CA  0012               	return	
  1290                           
  1291                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  1292  0002CC  5023               	movf	_tiTeclat^0,w,c
  1293  0002CE  EC92  F005         	call	_TiResetTics
  1294  0002D2  D7D4               	goto	l2058
  1295  0002D4                     l2092:
  1296                           
  1297                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  1298  0002D4  5023               	movf	_tiTeclat^0,w,c
  1299  0002D6  EC3C  F005         	call	_TiGetTics
  1300  0002DA  BE4D               	btfsc	(?_TiGetTics+1)^0,7,c
  1301  0002DC  0012               	return	
  1302  0002DE  D7CE               	goto	l2058
  1303  0002E0                     l2096:
  1304                           
  1305                           ;TeTeclat.c: 73:    if (files==0) {
  1306  0002E0  5020               	movf	TeTeclat@files^0,w,c
  1307  0002E2  A4D8               	btfss	status,2,c
  1308  0002E4  D003               	goto	l2100
  1309                           
  1310                           ;TeTeclat.c: 74:     state = 1;
  1311  0002E6  0E01               	movlw	1
  1312  0002E8  6E22               	movwf	TeTeclat@state^0,c
  1313                           
  1314                           ;TeTeclat.c: 75:    }
  1315  0002EA  0012               	return	
  1316  0002EC                     l2100:
  1317  0002EC  5020               	movf	TeTeclat@files^0,w,c
  1318  0002EE  B4D8               	btfsc	status,2,c
  1319  0002F0  0012               	return	
  1320                           
  1321                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  1322  0002F2  5020               	movf	TeTeclat@files^0,w,c
  1323  0002F4  0D03               	mullw	3
  1324  0002F6  50F3               	movf	243,w,c
  1325  0002F8  0F38               	addlw	low (_teclaPremuda+253)
  1326  0002FA  2421               	addwf	TeTeclat@cols^0,w,c
  1327  0002FC  6ED9               	movwf	fsr2l,c
  1328  0002FE  6ADA               	clrf	fsr2h,c
  1329  000300  50DF               	movf	indf2,w,c
  1330  000302  ECB2  F005         	call	_MsetNovaTecla
  1331                           
  1332                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1333  000306  5020               	movf	TeTeclat@files^0,w,c
  1334  000308  0D03               	mullw	3
  1335  00030A  50F3               	movf	243,w,c
  1336  00030C  0F38               	addlw	low (_teclaPremuda+253)
  1337  00030E  2421               	addwf	TeTeclat@cols^0,w,c
  1338  000310  6ED9               	movwf	fsr2l,c
  1339  000312  6ADA               	clrf	fsr2h,c
  1340  000314  50DF               	movf	indf2,w,c
  1341  000316  ECAE  F005         	call	_SsetNovaTecla
  1342  00031A  D7B0               	goto	l2058
  1343  00031C                     l2106:
  1344                           
  1345                           ;TeTeclat.c: 84:    if (files==0) {
  1346  00031C  5020               	movf	TeTeclat@files^0,w,c
  1347  00031E  A4D8               	btfss	status,2,c
  1348  000320  0012               	return	
  1349                           
  1350                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  1351  000322  5023               	movf	_tiTeclat^0,w,c
  1352  000324  EC92  F005         	call	_TiResetTics
  1353  000328  D7A9               	goto	l2058
  1354  00032A                     l2112:
  1355                           
  1356                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  1357  00032A  5023               	movf	_tiTeclat^0,w,c
  1358  00032C  EC3C  F005         	call	_TiGetTics
  1359  000330  D7D4               	goto	L2
  1360  000332                     l2116:
  1361                           
  1362                           ;TeTeclat.c: 95:    if (files!=0) {
  1363  000332  5020               	movf	TeTeclat@files^0,w,c
  1364  000334  B4D8               	btfsc	status,2,c
  1365  000336  D003               	goto	l2120
  1366                           
  1367                           ;TeTeclat.c: 96:     state = 5;
  1368  000338  0E05               	movlw	5
  1369  00033A  6E22               	movwf	TeTeclat@state^0,c
  1370                           
  1371                           ;TeTeclat.c: 97:    }
  1372  00033C  0012               	return	
  1373  00033E                     l2120:
  1374  00033E  5020               	movf	TeTeclat@files^0,w,c
  1375  000340  A4D8               	btfss	status,2,c
  1376  000342  0012               	return	
  1377                           
  1378                           ;TeTeclat.c: 99:     state = 0;
  1379  000344  0E00               	movlw	0
  1380  000346  6E22               	movwf	TeTeclat@state^0,c
  1381  000348  0012               	return	
  1382  00034A                     l2126:
  1383  00034A  5022               	movf	TeTeclat@state^0,w,c
  1384  00034C  6E53               	movwf	??_TeTeclat^0,c
  1385  00034E  6A54               	clrf	(??_TeTeclat+1)^0,c
  1386                           
  1387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1388                           ; Switch size 1, requested type "simple"
  1389                           ; Number of cases is 1, Range of values is 0 to 0
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte            4     3 (average)
  1393                           ;	Chosen strategy is simple_byte
  1394  000350  5054               	movf	(??_TeTeclat+1)^0,w,c
  1395  000352  0A00               	xorlw	0	; case 0
  1396  000354  A4D8               	btfss	status,2,c
  1397  000356  0012               	return	
  1398                           
  1399                           ; Switch size 1, requested type "simple"
  1400                           ; Number of cases is 8, Range of values is 0 to 7
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte           25    13 (average)
  1404                           ;	Chosen strategy is simple_byte
  1405  000358  5053               	movf	??_TeTeclat^0,w,c
  1406  00035A  0A00               	xorlw	0	; case 0
  1407  00035C  B4D8               	btfsc	status,2,c
  1408  00035E  D786               	goto	l2052
  1409  000360  0A01               	xorlw	1	; case 1
  1410  000362  B4D8               	btfsc	status,2,c
  1411  000364  D796               	goto	l2066
  1412  000366  0A03               	xorlw	3	; case 2
  1413  000368  B4D8               	btfsc	status,2,c
  1414  00036A  D7A2               	goto	l2080
  1415  00036C  0A01               	xorlw	1	; case 3
  1416  00036E  B4D8               	btfsc	status,2,c
  1417  000370  D7B1               	goto	l2092
  1418  000372  0A07               	xorlw	7	; case 4
  1419  000374  B4D8               	btfsc	status,2,c
  1420  000376  D7B4               	goto	l2096
  1421  000378  0A01               	xorlw	1	; case 5
  1422  00037A  B4D8               	btfsc	status,2,c
  1423  00037C  D7CF               	goto	l2106
  1424  00037E  0A03               	xorlw	3	; case 6
  1425  000380  B4D8               	btfsc	status,2,c
  1426  000382  D7D3               	goto	l2112
  1427  000384  0A01               	xorlw	1	; case 7
  1428  000386  A4D8               	btfss	status,2,c
  1429  000388  0012               	return	
  1430  00038A  D7D3               	goto	l2116
  1431  00038C                     __end_of_TeTeclat:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _SsetNovaTecla *****************
  1435 ;; Defined at:
  1436 ;;		line 110 in file "Ssms.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  tecla           1    wreg     unsigned char 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  tecla           1    5[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1
  1450 ;;      Params:         0       0       0
  1451 ;;      Locals:         1       0       0
  1452 ;;      Temps:          0       0       0
  1453 ;;      Totals:         1       0       0
  1454 ;;Total ram usage:        1 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 2
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_TeTeclat
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text9
  1465  000B5C                     __ptext9:
  1466                           	callstack 0
  1467  000B5C                     _SsetNovaTecla:
  1468                           	callstack 27
  1469                           
  1470                           ;incstack = 0
  1471                           ;SsetNovaTecla@tecla stored from wreg
  1472  000B5C  6E4C               	movwf	SsetNovaTecla@tecla^0,c
  1473                           
  1474                           ;Ssms.c: 111:     novaTecla = tecla;
  1475  000B5E  C04C  F039         	movff	SsetNovaTecla@tecla,_novaTecla
  1476  000B62  0012               	return		;funcret
  1477  000B64                     __end_of_SsetNovaTecla:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _MsetNovaTecla *****************
  1481 ;; Defined at:
  1482 ;;		line 15 in file "Menu.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  tecla           1    wreg     unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  tecla           1    5[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         1       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         1       0       0
  1500 ;;Total ram usage:        1 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_TeTeclat
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text10
  1511  000B64                     __ptext10:
  1512                           	callstack 0
  1513  000B64                     _MsetNovaTecla:
  1514                           	callstack 27
  1515                           
  1516                           ;incstack = 0
  1517                           ;MsetNovaTecla@tecla stored from wreg
  1518  000B64  6E4C               	movwf	MsetNovaTecla@tecla^0,c
  1519                           
  1520                           ;Menu.c: 16:     NovaTecla = tecla;
  1521  000B66  C04C  F036         	movff	MsetNovaTecla@tecla,_NovaTecla
  1522  000B6A  0012               	return		;funcret
  1523  000B6C                     __end_of_MsetNovaTecla:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _TeInit *****************
  1527 ;; Defined at:
  1528 ;;		line 18 in file "TeTeclat.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1
  1542 ;;      Params:         0       0       0
  1543 ;;      Locals:         0       0       0
  1544 ;;      Temps:          0       0       0
  1545 ;;      Totals:         0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 3
  1549 ;; This function calls:
  1550 ;;		_TiGetTimer
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text11
  1557  000B6C                     __ptext11:
  1558                           	callstack 0
  1559  000B6C                     _TeInit:
  1560                           	callstack 27
  1561                           
  1562                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  1563                           
  1564                           ;incstack = 0
  1565  000B6C  EC9F  F004         	call	_TiGetTimer	;wreg free
  1566  000B70  6E23               	movwf	_tiTeclat^0,c
  1567  000B72  0012               	return		;funcret
  1568  000B74                     __end_of_TeInit:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _Sinit *****************
  1572 ;; Defined at:
  1573 ;;		line 16 in file "Ssms.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1
  1587 ;;      Params:         0       0       0
  1588 ;;      Locals:         0       0       0
  1589 ;;      Temps:          0       0       0
  1590 ;;      Totals:         0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 3
  1594 ;; This function calls:
  1595 ;;		_TiGetTimer
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text12
  1602  000B74                     __ptext12:
  1603                           	callstack 0
  1604  000B74                     _Sinit:
  1605                           	callstack 27
  1606                           
  1607                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  1608                           
  1609                           ;incstack = 0
  1610  000B74  EC9F  F004         	call	_TiGetTimer	;wreg free
  1611  000B78  6E38               	movwf	_timerSMS^0,c
  1612  000B7A  0012               	return		;funcret
  1613  000B7C                     __end_of_Sinit:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _SMotor *****************
  1617 ;; Defined at:
  1618 ;;		line 21 in file "Ssms.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1
  1632 ;;      Params:         0       0       0
  1633 ;;      Locals:         0       0       0
  1634 ;;      Temps:          2       0       0
  1635 ;;      Totals:         2       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 3
  1639 ;; This function calls:
  1640 ;;		_TiGetTics
  1641 ;;		_TiResetTics
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text13
  1648  00038C                     __ptext13:
  1649                           	callstack 0
  1650  00038C                     _SMotor:
  1651                           	callstack 27
  1652                           
  1653                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  1654                           
  1655                           ;incstack = 0
  1656  00038C  D08C               	goto	l1986
  1657  00038E                     l1872:
  1658  00038E  2839               	incf	_novaTecla^0,w,c
  1659  000390  A4D8               	btfss	status,2,c
  1660  000392  0012               	return	
  1661  000394  5038               	movf	_timerSMS^0,w,c
  1662  000396  EC3C  F005         	call	_TiGetTics
  1663  00039A  0012               	return	
  1664  00039C                     l1890:
  1665                           
  1666                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 1000) {
  1667  00039C  5037               	movf	_ultimaTecla^0,w,c
  1668  00039E  1839               	xorwf	_novaTecla^0,w,c
  1669  0003A0  A4D8               	btfss	status,2,c
  1670  0003A2  D010               	goto	l1898
  1671  0003A4  5038               	movf	_timerSMS^0,w,c
  1672  0003A6  EC3C  F005         	call	_TiGetTics
  1673  0003AA  BE4D               	btfsc	(?_TiGetTics+1)^0,7,c
  1674  0003AC  D006               	goto	u1190
  1675  0003AE  0EE8               	movlw	232
  1676  0003B0  5C4C               	subwf	?_TiGetTics^0,w,c
  1677  0003B2  0E03               	movlw	3
  1678  0003B4  584D               	subwfb	(?_TiGetTics+1)^0,w,c
  1679  0003B6  B0D8               	btfsc	status,0,c
  1680  0003B8  D005               	goto	l1898
  1681  0003BA                     u1190:
  1682                           
  1683                           ;Ssms.c: 37:     novaTecla = -1;
  1684  0003BA  6839               	setf	_novaTecla^0,c
  1685                           
  1686                           ;Ssms.c: 38:     sumaPulsacions++;
  1687  0003BC  2A25               	incf	_sumaPulsacions^0,f,c
  1688                           
  1689                           ;Ssms.c: 39:     lletraASCII++;
  1690  0003BE  2A3A               	incf	_lletraASCII^0,f,c
  1691                           
  1692                           ;Ssms.c: 40:     state++;
  1693  0003C0  2A24               	incf	SMotor@state^0,f,c
  1694                           
  1695                           ;Ssms.c: 41:    }
  1696  0003C2  0012               	return	
  1697  0003C4                     l1898:
  1698  0003C4  2839               	incf	_novaTecla^0,w,c
  1699  0003C6  B4D8               	btfsc	status,2,c
  1700  0003C8  0012               	return	
  1701  0003CA  5037               	movf	_ultimaTecla^0,w,c
  1702  0003CC  1839               	xorwf	_novaTecla^0,w,c
  1703  0003CE  B4D8               	btfsc	status,2,c
  1704  0003D0  0012               	return	
  1705                           
  1706                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  1707  0003D2  5039               	movf	_novaTecla^0,w,c
  1708  0003D4  0F2A               	addlw	low (_lletraInici+254)
  1709  0003D6  6ED9               	movwf	fsr2l,c
  1710  0003D8  6ADA               	clrf	fsr2h,c
  1711  0003DA  50DF               	movf	indf2,w,c
  1712  0003DC  6E3A               	movwf	_lletraASCII^0,c
  1713                           
  1714                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  1715  0003DE  C039  F037         	movff	_novaTecla,_ultimaTecla
  1716                           
  1717                           ;Ssms.c: 46:     sumaPulsacions = 0;
  1718  0003E2  0E00               	movlw	0
  1719  0003E4  6E25               	movwf	_sumaPulsacions^0,c
  1720                           
  1721                           ;Ssms.c: 47:     novaTecla = -1;
  1722  0003E6  6839               	setf	_novaTecla^0,c
  1723                           
  1724                           ;Ssms.c: 48:     state--;
  1725  0003E8  0624               	decf	SMotor@state^0,f,c
  1726  0003EA  0012               	return	
  1727  0003EC                     l1912:
  1728                           
  1729                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  1730  0003EC  0E07               	movlw	7
  1731  0003EE  1837               	xorwf	_ultimaTecla^0,w,c
  1732  0003F0  B4D8               	btfsc	status,2,c
  1733  0003F2  D007               	goto	l1918
  1734  0003F4  0E09               	movlw	9
  1735  0003F6  1837               	xorwf	_ultimaTecla^0,w,c
  1736  0003F8  B4D8               	btfsc	status,2,c
  1737  0003FA  D003               	goto	l1918
  1738                           
  1739                           ;Ssms.c: 53:     state = 5;
  1740  0003FC  0E05               	movlw	5
  1741  0003FE  6E24               	movwf	SMotor@state^0,c
  1742                           
  1743                           ;Ssms.c: 54:    }
  1744  000400  0012               	return	
  1745  000402                     l1918:
  1746  000402  0E07               	movlw	7
  1747  000404  1837               	xorwf	_ultimaTecla^0,w,c
  1748  000406  B4D8               	btfsc	status,2,c
  1749  000408  D004               	goto	u1250
  1750  00040A  0E09               	movlw	9
  1751  00040C  1837               	xorwf	_ultimaTecla^0,w,c
  1752  00040E  A4D8               	btfss	status,2,c
  1753  000410  0012               	return	
  1754  000412                     u1250:
  1755                           
  1756                           ;Ssms.c: 56:     state = 6;
  1757  000412  0E06               	movlw	6
  1758  000414  6E24               	movwf	SMotor@state^0,c
  1759  000416  0012               	return	
  1760  000418                     l1924:
  1761                           
  1762                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  1763  000418  5039               	movf	_novaTecla^0,w,c
  1764  00041A  0A80               	xorlw	128
  1765  00041C  0F7E               	addlw	-130
  1766  00041E  A0D8               	btfss	status,0,c
  1767  000420  D008               	goto	l1930
  1768  000422  5039               	movf	_novaTecla^0,w,c
  1769  000424  0A80               	xorlw	128
  1770  000426  0F76               	addlw	-138
  1771  000428  B0D8               	btfsc	status,0,c
  1772  00042A  D003               	goto	l1930
  1773                           
  1774                           ;Ssms.c: 61:     state = 1;
  1775  00042C  0E01               	movlw	1
  1776  00042E  6E24               	movwf	SMotor@state^0,c
  1777                           
  1778                           ;Ssms.c: 62:    }
  1779  000430  0012               	return	
  1780  000432                     l1930:
  1781  000432  5039               	movf	_novaTecla^0,w,c
  1782  000434  0A80               	xorlw	128
  1783  000436  0F7E               	addlw	-130
  1784  000438  B0D8               	btfsc	status,0,c
  1785  00043A  D007               	goto	l1938
  1786  00043C  283A               	incf	_lletraASCII^0,w,c
  1787  00043E  A4D8               	btfss	status,2,c
  1788  000440  D004               	goto	l1938
  1789  000442                     u1290:
  1790                           
  1791                           ;Ssms.c: 65:     novaTecla = -1;
  1792  000442  6839               	setf	_novaTecla^0,c
  1793  000444                     l1936:
  1794                           
  1795                           ;Ssms.c: 66:     state = 0;
  1796  000444  0E00               	movlw	0
  1797  000446  6E24               	movwf	SMotor@state^0,c
  1798                           
  1799                           ;Ssms.c: 67:    }
  1800  000448  0012               	return	
  1801  00044A                     l1938:
  1802  00044A  5039               	movf	_novaTecla^0,w,c
  1803  00044C  0A80               	xorlw	128
  1804  00044E  0F7E               	addlw	-130
  1805  000450  B0D8               	btfsc	status,0,c
  1806  000452  0012               	return	
  1807  000454  283A               	incf	_lletraASCII^0,w,c
  1808  000456  B4D8               	btfsc	status,2,c
  1809  000458  0012               	return	
  1810                           
  1811                           ;Ssms.c: 70:     lletraASCII = -1;
  1812  00045A  683A               	setf	_lletraASCII^0,c
  1813                           
  1814                           ;Ssms.c: 71:     state++;
  1815  00045C  2A24               	incf	SMotor@state^0,f,c
  1816  00045E  0012               	return	
  1817  000460                     l1948:
  1818                           
  1819                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  1820  000460  0E04               	movlw	4
  1821  000462  1825               	xorwf	_sumaPulsacions^0,w,c
  1822  000464  A4D8               	btfss	status,2,c
  1823  000466  D009               	goto	l1956
  1824  000468                     u1320:
  1825                           
  1826                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  1827  000468  5037               	movf	_ultimaTecla^0,w,c
  1828  00046A  0F2A               	addlw	low (_lletraInici+254)
  1829  00046C  6ED9               	movwf	fsr2l,c
  1830  00046E  6ADA               	clrf	fsr2h,c
  1831  000470  50DF               	movf	indf2,w,c
  1832  000472  6E3A               	movwf	_lletraASCII^0,c
  1833                           
  1834                           ;Ssms.c: 82:     sumaPulsacions = 0;
  1835  000474  0E00               	movlw	0
  1836  000476  6E25               	movwf	_sumaPulsacions^0,c
  1837  000478  D7E5               	goto	l1936
  1838  00047A                     l1956:
  1839  00047A  0E03               	movlw	3
  1840  00047C  1825               	xorwf	_sumaPulsacions^0,w,c
  1841  00047E  A4D8               	btfss	status,2,c
  1842  000480  D004               	goto	l1962
  1843  000482                     u1330:
  1844                           
  1845                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  1846  000482  5037               	movf	_ultimaTecla^0,w,c
  1847  000484  0F30               	addlw	48
  1848  000486  6E3A               	movwf	_lletraASCII^0,c
  1849  000488  D7DD               	goto	l1936
  1850  00048A                     l1962:
  1851  00048A  0E03               	movlw	3
  1852  00048C  6025               	cpfslt	_sumaPulsacions^0,c
  1853  00048E  0012               	return	
  1854  000490  D7D9               	goto	l1936
  1855  000492                     l1966:
  1856                           
  1857                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  1858  000492  0E04               	movlw	4
  1859  000494  1825               	xorwf	_sumaPulsacions^0,w,c
  1860  000496  B4D8               	btfsc	status,2,c
  1861  000498  D7F4               	goto	u1330
  1862  00049A  0E05               	movlw	5
  1863  00049C  1825               	xorwf	_sumaPulsacions^0,w,c
  1864  00049E  B4D8               	btfsc	status,2,c
  1865  0004A0  D7E3               	goto	u1320
  1866  0004A2  0E04               	movlw	4
  1867  0004A4  D7F3               	goto	L3
  1868  0004A6                     l1986:
  1869  0004A6  5024               	movf	SMotor@state^0,w,c
  1870  0004A8  6E53               	movwf	??_SMotor^0,c
  1871  0004AA  6A54               	clrf	(??_SMotor+1)^0,c
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ;	Chosen strategy is simple_byte
  1880  0004AC  5054               	movf	(??_SMotor+1)^0,w,c
  1881  0004AE  0A00               	xorlw	0	; case 0
  1882  0004B0  A4D8               	btfss	status,2,c
  1883  0004B2  0012               	return	
  1884                           
  1885                           ; Switch size 1, requested type "simple"
  1886                           ; Number of cases is 7, Range of values is 0 to 6
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte           22    12 (average)
  1890                           ;	Chosen strategy is simple_byte
  1891  0004B4  5053               	movf	??_SMotor^0,w,c
  1892  0004B6  0A00               	xorlw	0	; case 0
  1893  0004B8  B4D8               	btfsc	status,2,c
  1894  0004BA  D769               	goto	l1872
  1895  0004BC  0A01               	xorlw	1	; case 1
  1896  0004BE  B4D8               	btfsc	status,2,c
  1897  0004C0  D76D               	goto	l1890
  1898  0004C2  0A03               	xorlw	3	; case 2
  1899  0004C4  B4D8               	btfsc	status,2,c
  1900  0004C6  D792               	goto	l1912
  1901  0004C8  0A01               	xorlw	1	; case 3
  1902  0004CA  B4D8               	btfsc	status,2,c
  1903  0004CC  D7A5               	goto	l1924
  1904  0004CE  0A07               	xorlw	7	; case 4
  1905  0004D0  B4D8               	btfsc	status,2,c
  1906  0004D2  D7B7               	goto	u1290
  1907  0004D4  0A01               	xorlw	1	; case 5
  1908  0004D6  B4D8               	btfsc	status,2,c
  1909  0004D8  D7C3               	goto	l1948
  1910  0004DA  0A03               	xorlw	3	; case 6
  1911  0004DC  A4D8               	btfss	status,2,c
  1912  0004DE  0012               	return	
  1913  0004E0  D7D8               	goto	l1966
  1914  0004E2                     __end_of_SMotor:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _Minit *****************
  1918 ;; Defined at:
  1919 ;;		line 12 in file "Menu.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1
  1933 ;;      Params:         0       0       0
  1934 ;;      Locals:         0       0       0
  1935 ;;      Temps:          0       0       0
  1936 ;;      Totals:         0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 3
  1940 ;; This function calls:
  1941 ;;		_TiGetTimer
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text14
  1948  000B7C                     __ptext14:
  1949                           	callstack 0
  1950  000B7C                     _Minit:
  1951                           	callstack 27
  1952                           
  1953                           ;Menu.c: 13:     timerMenu = TiGetTimer();
  1954                           
  1955                           ;incstack = 0
  1956  000B7C  EC9F  F004         	call	_TiGetTimer	;wreg free
  1957  000B80  6E1D               	movwf	_timerMenu^0,c
  1958  000B82  0012               	return		;funcret
  1959  000B84                     __end_of_Minit:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _LcLCD *****************
  1963 ;; Defined at:
  1964 ;;		line 254 in file "LcTLCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1
  1978 ;;      Params:         0       0       0
  1979 ;;      Locals:         0       0       0
  1980 ;;      Temps:          0       0       0
  1981 ;;      Totals:         0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 6
  1985 ;; This function calls:
  1986 ;;		_LcPutChar
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text15
  1993  000A48                     __ptext15:
  1994                           	callstack 0
  1995  000A48                     _LcLCD:
  1996                           	callstack 24
  1997                           
  1998                           ;LcTLCD.c: 255:     if(nou_s == 1){
  1999                           
  2000                           ;incstack = 0
  2001  000A48  A25C               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2002  000A4A  0012               	return	
  2003                           
  2004                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  2005  000A4C  C026  FFF6         	movff	_s_ptr,tblptrl
  2006  000A50                     	if	1	;There is more than 1 active tblptr byte
  2007  000A50  0E02               	movlw	high __smallconst
  2008  000A52  6EF7               	movwf	tblptrh,c
  2009  000A54                     	endif
  2010  000A54                     	if	0	;tblptru may be non-zero
  2011  000A54                     	endif
  2012  000A54                     	if	0	;tblptru may be non-zero
  2013  000A54                     	endif
  2014  000A54  0008               	tblrd		*
  2015  000A56  50F5               	movf	tablat,w,c
  2016  000A58  EC1B  F004         	call	_LcPutChar
  2017                           
  2018                           ;LcTLCD.c: 257:         s_ptr++;
  2019  000A5C  2A26               	incf	_s_ptr^0,f,c
  2020                           
  2021                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  2022  000A5E  C026  FFF6         	movff	_s_ptr,tblptrl
  2023  000A62                     	if	1	;There is more than 1 active tblptr byte
  2024  000A62  0E02               	movlw	high __smallconst
  2025  000A64  6EF7               	movwf	tblptrh,c
  2026  000A66                     	endif
  2027  000A66                     	if	0	;tblptru may be non-zero
  2028  000A66                     	endif
  2029  000A66                     	if	0	;tblptru may be non-zero
  2030  000A66                     	endif
  2031  000A66  0008               	tblrd		*
  2032  000A68  50F5               	movf	tablat,w,c
  2033  000A6A  0900               	iorlw	0
  2034  000A6C  A4D8               	btfss	status,2,c
  2035  000A6E  0012               	return	
  2036                           
  2037                           ;LcTLCD.c: 259:             nou_s = 0;
  2038  000A70  925C               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2039                           
  2040                           ;LcTLCD.c: 260:             s_ptr=0;
  2041  000A72  0E00               	movlw	0
  2042  000A74  6E26               	movwf	_s_ptr^0,c
  2043  000A76  0012               	return		;funcret
  2044  000A78                     __end_of_LcLCD:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _LcPutChar *****************
  2048 ;; Defined at:
  2049 ;;		line 132 in file "LcTLCD.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  c               1    wreg     unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  c               1   19[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1
  2063 ;;      Params:         0       0       0
  2064 ;;      Locals:         1       0       0
  2065 ;;      Temps:          0       0       0
  2066 ;;      Totals:         1       0       0
  2067 ;;Total ram usage:        1 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 5
  2070 ;; This function calls:
  2071 ;;		_CantaData
  2072 ;;		_LcGotoXY
  2073 ;;		_WaitForBusy
  2074 ;; This function is called by:
  2075 ;;		_LcLCD
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text16
  2080  000836                     __ptext16:
  2081                           	callstack 0
  2082  000836                     _LcPutChar:
  2083                           	callstack 24
  2084                           
  2085                           ;incstack = 0
  2086                           ;LcPutChar@c stored from wreg
  2087  000836  6E5A               	movwf	LcPutChar@c^0,c
  2088                           
  2089                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  2090  000838  EC44  F004         	call	_WaitForBusy	;wreg free
  2091  00083C  505A               	movf	LcPutChar@c^0,w,c
  2092  00083E  ECF2  F004         	call	_CantaData
  2093                           
  2094                           ;LcTLCD.c: 136:  ++ColumnAct;
  2095  000842  2A28               	incf	_ColumnAct^0,f,c
  2096                           
  2097                           ;LcTLCD.c: 138:  if (Rows == 2) {
  2098  000844  0E02               	movlw	2
  2099  000846  182B               	xorwf	_Rows^0,w,c
  2100  000848  A4D8               	btfss	status,2,c
  2101  00084A  D010               	goto	l1796
  2102                           
  2103                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  2104  00084C  0E27               	movlw	39
  2105  00084E  6428               	cpfsgt	_ColumnAct^0,c
  2106  000850  D00D               	goto	l1796
  2107                           
  2108                           ;LcTLCD.c: 140:    ColumnAct = 0;
  2109  000852  0E00               	movlw	0
  2110  000854  6E28               	movwf	_ColumnAct^0,c
  2111                           
  2112                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  2113  000856  2A29               	incf	_RowAct^0,f,c
  2114  000858  0E01               	movlw	1
  2115  00085A  6429               	cpfsgt	_RowAct^0,c
  2116  00085C  D002               	goto	l1794
  2117  00085E  0E00               	movlw	0
  2118  000860  6E29               	movwf	_RowAct^0,c
  2119  000862                     l1794:
  2120                           
  2121                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  2122  000862  C029  F054         	movff	_RowAct,LcGotoXY@Row
  2123  000866  5028               	movf	_ColumnAct^0,w,c
  2124  000868  EC82  F004         	call	_LcGotoXY
  2125  00086C                     l1796:
  2126                           
  2127                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  2128  00086C  0429               	decf	_RowAct^0,w,c
  2129  00086E  A4D8               	btfss	status,2,c
  2130  000870  0012               	return	
  2131                           
  2132                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  2133  000872  0E27               	movlw	39
  2134  000874  6428               	cpfsgt	_ColumnAct^0,c
  2135  000876  D002               	goto	l1802
  2136  000878  0E00               	movlw	0
  2137  00087A  6E28               	movwf	_ColumnAct^0,c
  2138  00087C                     l1802:
  2139                           
  2140                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  2141  00087C  C029  F054         	movff	_RowAct,LcGotoXY@Row
  2142  000880  5028               	movf	_ColumnAct^0,w,c
  2143  000882  EC82  F004         	call	_LcGotoXY
  2144  000886  0012               	return		;funcret
  2145  000888                     __end_of_LcPutChar:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _LcGotoXY *****************
  2149 ;; Defined at:
  2150 ;;		line 104 in file "LcTLCD.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  Column          1    wreg     unsigned char 
  2153 ;;  Row             1   13[COMRAM] unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  Column          1   18[COMRAM] unsigned char 
  2156 ;;  Fisics          2   14[COMRAM] int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1
  2166 ;;      Params:         1       0       0
  2167 ;;      Locals:         5       0       0
  2168 ;;      Temps:          0       0       0
  2169 ;;      Totals:         6       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 4
  2173 ;; This function calls:
  2174 ;;		_CantaIR
  2175 ;;		_WaitForBusy
  2176 ;; This function is called by:
  2177 ;;		_LcClear
  2178 ;;		_LcPutChar
  2179 ;;		_menu
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text17
  2184  000904                     __ptext17:
  2185                           	callstack 0
  2186  000904                     _LcGotoXY:
  2187                           	callstack 25
  2188                           
  2189                           ;incstack = 0
  2190                           ;LcGotoXY@Column stored from wreg
  2191  000904  6E59               	movwf	LcGotoXY@Column^0,c
  2192                           
  2193                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  2194  000906  5054               	movf	LcGotoXY@Row^0,w,c
  2195  000908  B4D8               	btfsc	status,2,c
  2196  00090A  D004               	goto	l1736
  2197  00090C  0E00               	movlw	0
  2198  00090E  6E58               	movwf	(_LcGotoXY$342+1)^0,c
  2199  000910  0E40               	movlw	64
  2200  000912  D003               	goto	L4
  2201  000914                     l1736:
  2202  000914  0E00               	movlw	0
  2203  000916  6E58               	movwf	(_LcGotoXY$342+1)^0,c
  2204  000918  0E00               	movlw	0
  2205  00091A                     L4:
  2206  00091A  6E57               	movwf	_LcGotoXY$342^0,c
  2207  00091C  5059               	movf	LcGotoXY@Column^0,w,c
  2208  00091E  2457               	addwf	_LcGotoXY$342^0,w,c
  2209  000920  6E55               	movwf	LcGotoXY@Fisics^0,c
  2210  000922  0E00               	movlw	0
  2211  000924  2058               	addwfc	(_LcGotoXY$342+1)^0,w,c
  2212  000926  6E56               	movwf	(LcGotoXY@Fisics+1)^0,c
  2213                           
  2214                           ;LcTLCD.c: 125:  WaitForBusy();
  2215  000928  EC44  F004         	call	_WaitForBusy	;wreg free
  2216                           
  2217                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  2218  00092C  5055               	movf	LcGotoXY@Fisics^0,w,c
  2219  00092E  0980               	iorlw	128
  2220  000930  EC0B  F005         	call	_CantaIR
  2221                           
  2222                           ;LcTLCD.c: 128:  RowAct = Row;
  2223  000934  C054  F029         	movff	LcGotoXY@Row,_RowAct
  2224                           
  2225                           ;LcTLCD.c: 129:  ColumnAct = Column;
  2226  000938  C059  F028         	movff	LcGotoXY@Column,_ColumnAct
  2227  00093C  0012               	return		;funcret
  2228  00093E                     __end_of_LcGotoXY:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _CantaData *****************
  2232 ;; Defined at:
  2233 ;;		line 194 in file "LcTLCD.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  Data            1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  Data            1    7[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1
  2247 ;;      Params:         0       0       0
  2248 ;;      Locals:         1       0       0
  2249 ;;      Temps:          0       0       0
  2250 ;;      Totals:         1       0       0
  2251 ;;Total ram usage:        1 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 3
  2254 ;; This function calls:
  2255 ;;		_CantaPartAlta
  2256 ;;		_CantaPartBaixa
  2257 ;; This function is called by:
  2258 ;;		_LcPutChar
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text18
  2263  0009E4                     __ptext18:
  2264                           	callstack 0
  2265  0009E4                     _CantaData:
  2266                           	callstack 25
  2267                           
  2268                           ;incstack = 0
  2269                           ;CantaData@Data stored from wreg
  2270  0009E4  6E4E               	movwf	CantaData@Data^0,c
  2271                           
  2272                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  2273  0009E6  9694               	bcf	148,3,c	;volatile
  2274  0009E8  9494               	bcf	148,2,c	;volatile
  2275  0009EA  9294               	bcf	148,1,c	;volatile
  2276  0009EC  9094               	bcf	148,0,c	;volatile
  2277                           
  2278                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  2279  0009EE  8A8B               	bsf	139,5,c	;volatile
  2280                           
  2281                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  2282  0009F0  9E8C               	bcf	140,7,c	;volatile
  2283                           
  2284                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  2285  0009F2  888B               	bsf	139,4,c	;volatile
  2286                           
  2287                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  2288  0009F4  504E               	movf	CantaData@Data^0,w,c
  2289  0009F6  ECBA  F003         	call	_CantaPartAlta
  2290                           
  2291                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  2292  0009FA  888B               	bsf	139,4,c	;volatile
  2293                           
  2294                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  2295  0009FC  988B               	bcf	139,4,c	;volatile
  2296                           
  2297                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  2298  0009FE  988B               	bcf	139,4,c	;volatile
  2299                           
  2300                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  2301  000A00  888B               	bsf	139,4,c	;volatile
  2302                           
  2303                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  2304  000A02  504E               	movf	CantaData@Data^0,w,c
  2305  000A04  EC86  F003         	call	_CantaPartBaixa
  2306                           
  2307                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  2308  000A08  888B               	bsf	139,4,c	;volatile
  2309                           
  2310                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  2311  000A0A  988B               	bcf	139,4,c	;volatile
  2312                           
  2313                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2314  000A0C  8694               	bsf	148,3,c	;volatile
  2315  000A0E  8494               	bsf	148,2,c	;volatile
  2316  000A10  8294               	bsf	148,1,c	;volatile
  2317  000A12  8094               	bsf	148,0,c	;volatile
  2318  000A14  0012               	return		;funcret
  2319  000A16                     __end_of_CantaData:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _LcInit *****************
  2323 ;; Defined at:
  2324 ;;		line 41 in file "LcTLCD.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  rows            1    wreg     unsigned char 
  2327 ;;  columns         1   16[COMRAM] unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  rows            1   17[COMRAM] unsigned char 
  2330 ;;  i               2   18[COMRAM] int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1
  2340 ;;      Params:         1       0       0
  2341 ;;      Locals:         3       0       0
  2342 ;;      Temps:          0       0       0
  2343 ;;      Totals:         4       0       0
  2344 ;;Total ram usage:        4 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 5
  2347 ;; This function calls:
  2348 ;;		_CantaIR
  2349 ;;		_EscriuPrimeraOrdre
  2350 ;;		_Espera
  2351 ;;		_LcCursorOff
  2352 ;;		_TiGetTimer
  2353 ;;		_WaitForBusy
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text19
  2360  0004E2                     __ptext19:
  2361                           	callstack 0
  2362  0004E2                     _LcInit:
  2363                           	callstack 25
  2364                           
  2365                           ;incstack = 0
  2366                           ;LcInit@rows stored from wreg
  2367  0004E2  6E58               	movwf	LcInit@rows^0,c
  2368                           
  2369                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  2370  0004E4  EC9F  F004         	call	_TiGetTimer	;wreg free
  2371  0004E8  6E27               	movwf	_Timer^0,c
  2372                           
  2373                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  2374  0004EA  C058  F02B         	movff	LcInit@rows,_Rows
  2375  0004EE  C057  F02A         	movff	LcInit@columns,_Columns
  2376                           
  2377                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  2378  0004F2  0E00               	movlw	0
  2379  0004F4  6E28               	movwf	_ColumnAct^0,c
  2380  0004F6  C028  F029         	movff	_ColumnAct,_RowAct
  2381                           
  2382                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  2383  0004FA  9894               	bcf	148,4,c	;volatile
  2384  0004FC  9E95               	bcf	149,7,c	;volatile
  2385  0004FE  9A94               	bcf	148,5,c	;volatile
  2386                           
  2387                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  2388  000500  0E00               	movlw	0
  2389  000502  6E5A               	movwf	(LcInit@i+1)^0,c
  2390  000504  0E00               	movlw	0
  2391  000506  6E59               	movwf	LcInit@i^0,c
  2392  000508                     l1824:
  2393                           
  2394                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  2395  000508  0E00               	movlw	0
  2396  00050A  6E54               	movwf	(Espera@ms+1)^0,c
  2397  00050C  0E64               	movlw	100
  2398  00050E  6E53               	movwf	Espera@ms^0,c
  2399  000510  5027               	movf	_Timer^0,w,c
  2400  000512  EC64  F005         	call	_Espera
  2401                           
  2402                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  2403  000516  0E03               	movlw	3
  2404  000518  EC49  F003         	call	_EscriuPrimeraOrdre
  2405                           
  2406                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  2407  00051C  0E00               	movlw	0
  2408  00051E  6E54               	movwf	(Espera@ms+1)^0,c
  2409  000520  0E05               	movlw	5
  2410  000522  6E53               	movwf	Espera@ms^0,c
  2411  000524  5027               	movf	_Timer^0,w,c
  2412  000526  EC64  F005         	call	_Espera
  2413                           
  2414                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  2415  00052A  0E03               	movlw	3
  2416  00052C  EC49  F003         	call	_EscriuPrimeraOrdre
  2417                           
  2418                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  2419  000530  0E00               	movlw	0
  2420  000532  6E54               	movwf	(Espera@ms+1)^0,c
  2421  000534  0E01               	movlw	1
  2422  000536  6E53               	movwf	Espera@ms^0,c
  2423  000538  5027               	movf	_Timer^0,w,c
  2424  00053A  EC64  F005         	call	_Espera
  2425                           
  2426                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  2427  00053E  0E03               	movlw	3
  2428  000540  EC49  F003         	call	_EscriuPrimeraOrdre
  2429                           
  2430                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  2431  000544  0E00               	movlw	0
  2432  000546  6E54               	movwf	(Espera@ms+1)^0,c
  2433  000548  0E01               	movlw	1
  2434  00054A  6E53               	movwf	Espera@ms^0,c
  2435  00054C  5027               	movf	_Timer^0,w,c
  2436  00054E  EC64  F005         	call	_Espera
  2437                           
  2438                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  2439  000552  0E02               	movlw	2
  2440  000554  EC49  F003         	call	_EscriuPrimeraOrdre
  2441                           
  2442                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  2443  000558  0E00               	movlw	0
  2444  00055A  6E54               	movwf	(Espera@ms+1)^0,c
  2445  00055C  0E04               	movlw	4
  2446  00055E  6E53               	movwf	Espera@ms^0,c
  2447  000560  5027               	movf	_Timer^0,w,c
  2448  000562  EC64  F005         	call	_Espera
  2449                           
  2450                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  2451  000566  0E28               	movlw	40
  2452  000568  EC0B  F005         	call	_CantaIR
  2453                           
  2454                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  2455  00056C  EC44  F004         	call	_WaitForBusy	;wreg free
  2456  000570  0E08               	movlw	8
  2457  000572  EC0B  F005         	call	_CantaIR
  2458                           
  2459                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  2460  000576  EC44  F004         	call	_WaitForBusy	;wreg free
  2461  00057A  0E01               	movlw	1
  2462  00057C  EC0B  F005         	call	_CantaIR
  2463                           
  2464                           ;LcTLCD.c: 71:   Espera(Timer,3);
  2465  000580  0E00               	movlw	0
  2466  000582  6E54               	movwf	(Espera@ms+1)^0,c
  2467  000584  0E03               	movlw	3
  2468  000586  6E53               	movwf	Espera@ms^0,c
  2469  000588  5027               	movf	_Timer^0,w,c
  2470  00058A  EC64  F005         	call	_Espera
  2471                           
  2472                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  2473  00058E  EC44  F004         	call	_WaitForBusy	;wreg free
  2474  000592  0E06               	movlw	6
  2475  000594  EC0B  F005         	call	_CantaIR
  2476                           
  2477                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  2478  000598  EC44  F004         	call	_WaitForBusy	;wreg free
  2479  00059C  0E0F               	movlw	15
  2480  00059E  EC0B  F005         	call	_CantaIR
  2481                           
  2482                           ;LcTLCD.c: 74:  }
  2483  0005A2  4A59               	infsnz	LcInit@i^0,f,c
  2484  0005A4  2A5A               	incf	(LcInit@i+1)^0,f,c
  2485  0005A6  BE5A               	btfsc	(LcInit@i+1)^0,7,c
  2486  0005A8  D7AF               	goto	l1824
  2487  0005AA  505A               	movf	(LcInit@i+1)^0,w,c
  2488  0005AC  E104               	bnz	u1140
  2489  0005AE  0E02               	movlw	2
  2490  0005B0  5C59               	subwf	LcInit@i^0,w,c
  2491  0005B2  A0D8               	btfss	status,0,c
  2492  0005B4  D7A9               	goto	l1824
  2493  0005B6                     u1140:
  2494                           
  2495                           ;LcTLCD.c: 79:     LcCursorOff();
  2496  0005B6  ECA4  F005         	call	_LcCursorOff	;wreg free
  2497  0005BA  0012               	return		;funcret
  2498  0005BC                     __end_of_LcInit:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _TiGetTimer *****************
  2502 ;; Defined at:
  2503 ;;		line 70 in file "TiTTimer.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      unsigned char 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1
  2517 ;;      Params:         0       0       0
  2518 ;;      Locals:         0       0       0
  2519 ;;      Temps:          1       0       0
  2520 ;;      Totals:         1       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 2
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_LcInit
  2528 ;;		_Sinit
  2529 ;;		_TeInit
  2530 ;;		_Minit
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text20
  2535  00093E                     __ptext20:
  2536                           	callstack 0
  2537  00093E                     _TiGetTimer:
  2538                           	callstack 27
  2539                           
  2540                           ;TiTTimer.c: 74:     counter=0;
  2541                           
  2542                           ;incstack = 0
  2543  00093E  0E00               	movlw	0
  2544  000940  6E1F               	movwf	_counter^0,c
  2545                           
  2546                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  2547  000942  D007               	goto	l1184
  2548  000944                     l1176:
  2549                           
  2550                           ;TiTTimer.c: 76:         counter++;
  2551  000944  2A1F               	incf	_counter^0,f,c
  2552                           
  2553                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  2554  000946  0E08               	movlw	8
  2555  000948  181F               	xorwf	_counter^0,w,c
  2556  00094A  A4D8               	btfss	status,2,c
  2557  00094C  D002               	goto	l1184
  2558  00094E  0EFF               	movlw	255
  2559  000950  0012               	return	
  2560  000952                     l1184:
  2561                           
  2562                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  2563  000952  501F               	movf	_counter^0,w,c
  2564  000954  0D03               	mullw	3
  2565  000956  50F3               	movf	243,w,c
  2566  000958  0F03               	addlw	low (_s_Timers+2)
  2567  00095A  6ED9               	movwf	fsr2l,c
  2568  00095C  6ADA               	clrf	fsr2h,c
  2569  00095E  04DE               	decf	postinc2,w,c
  2570  000960  B4D8               	btfsc	status,2,c
  2571  000962  D7F0               	goto	l1176
  2572                           
  2573                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  2574  000964  501F               	movf	_counter^0,w,c
  2575  000966  0D03               	mullw	3
  2576  000968  50F3               	movf	243,w,c
  2577  00096A  0F03               	addlw	low (_s_Timers+2)
  2578  00096C  6ED9               	movwf	fsr2l,c
  2579  00096E  6ADA               	clrf	fsr2h,c
  2580  000970  0E01               	movlw	1
  2581  000972  6EDF               	movwf	indf2,c
  2582                           
  2583                           ;TiTTimer.c: 80:     return (counter);
  2584  000974  501F               	movf	_counter^0,w,c
  2585  000976  0012               	return		;funcret
  2586  000978                     __end_of_TiGetTimer:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _LcCursorOff *****************
  2590 ;; Defined at:
  2591 ;;		line 97 in file "LcTLCD.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1
  2605 ;;      Params:         0       0       0
  2606 ;;      Locals:         0       0       0
  2607 ;;      Temps:          0       0       0
  2608 ;;      Totals:         0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 4
  2612 ;; This function calls:
  2613 ;;		_CantaIR
  2614 ;;		_WaitForBusy
  2615 ;; This function is called by:
  2616 ;;		_LcInit
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text21
  2621  000B48                     __ptext21:
  2622                           	callstack 0
  2623  000B48                     _LcCursorOff:
  2624                           	callstack 25
  2625                           
  2626                           ;LcTLCD.c: 100:  WaitForBusy();
  2627                           
  2628                           ;incstack = 0
  2629  000B48  EC44  F004         	call	_WaitForBusy	;wreg free
  2630                           
  2631                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  2632  000B4C  0E0C               	movlw	12
  2633  000B4E  EC0B  F005         	call	_CantaIR
  2634  000B52  0012               	return		;funcret
  2635  000B54                     __end_of_LcCursorOff:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _WaitForBusy *****************
  2639 ;; Defined at:
  2640 ;;		line 210 in file "LcTLCD.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  Busy            1   12[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1
  2654 ;;      Params:         0       0       0
  2655 ;;      Locals:         1       0       0
  2656 ;;      Temps:          0       0       0
  2657 ;;      Totals:         1       0       0
  2658 ;;Total ram usage:        1 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 3
  2661 ;; This function calls:
  2662 ;;		_TiGetTics
  2663 ;;		_TiResetTics
  2664 ;; This function is called by:
  2665 ;;		_LcInit
  2666 ;;		_LcClear
  2667 ;;		_LcCursorOff
  2668 ;;		_LcGotoXY
  2669 ;;		_LcPutChar
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text22
  2674  000888                     __ptext22:
  2675                           	callstack 0
  2676  000888                     _WaitForBusy:
  2677                           	callstack 25
  2678                           
  2679                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2680                           
  2681                           ;incstack = 0
  2682  000888  8694               	bsf	148,3,c	;volatile
  2683  00088A  8494               	bsf	148,2,c	;volatile
  2684  00088C  8294               	bsf	148,1,c	;volatile
  2685  00088E  8094               	bsf	148,0,c	;volatile
  2686                           
  2687                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  2688  000890  9A8B               	bcf	139,5,c	;volatile
  2689                           
  2690                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  2691  000892  8E8C               	bsf	140,7,c	;volatile
  2692                           
  2693                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  2694  000894  5027               	movf	_Timer^0,w,c
  2695  000896  EC92  F005         	call	_TiResetTics
  2696  00089A                     l1704:
  2697                           
  2698                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  2699  00089A  888B               	bsf	139,4,c	;volatile
  2700  00089C  888B               	bsf	139,4,c	;volatile
  2701                           
  2702                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  2703  00089E  0E00               	movlw	0
  2704  0008A0  B682               	btfsc	130,3,c	;volatile
  2705  0008A2  0E01               	movlw	1
  2706  0008A4  6E53               	movwf	WaitForBusy@Busy^0,c
  2707                           
  2708                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  2709  0008A6  988B               	bcf	139,4,c	;volatile
  2710                           
  2711                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  2712  0008A8  988B               	bcf	139,4,c	;volatile
  2713                           
  2714                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  2715  0008AA  888B               	bsf	139,4,c	;volatile
  2716  0008AC  888B               	bsf	139,4,c	;volatile
  2717                           
  2718                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  2719  0008AE  988B               	bcf	139,4,c	;volatile
  2720                           
  2721                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  2722  0008B0  988B               	bcf	139,4,c	;volatile
  2723                           
  2724                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  2725  0008B2  5027               	movf	_Timer^0,w,c
  2726  0008B4  EC3C  F005         	call	_TiGetTics
  2727  0008B8  504C               	movf	?_TiGetTics^0,w,c
  2728  0008BA  104D               	iorwf	(?_TiGetTics+1)^0,w,c
  2729  0008BC  A4D8               	btfss	status,2,c
  2730  0008BE  0012               	return	
  2731                           
  2732                           ;LcTLCD.c: 225:  } while(Busy);
  2733  0008C0  5053               	movf	WaitForBusy@Busy^0,w,c
  2734  0008C2  B4D8               	btfsc	status,2,c
  2735  0008C4  0012               	return	
  2736  0008C6  D7E9               	goto	l1704
  2737  0008C8                     __end_of_WaitForBusy:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _CantaIR *****************
  2741 ;; Defined at:
  2742 ;;		line 178 in file "LcTLCD.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  IR              1    wreg     unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  IR              1    7[COMRAM] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1
  2756 ;;      Params:         0       0       0
  2757 ;;      Locals:         1       0       0
  2758 ;;      Temps:          0       0       0
  2759 ;;      Totals:         1       0       0
  2760 ;;Total ram usage:        1 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 3
  2763 ;; This function calls:
  2764 ;;		_CantaPartAlta
  2765 ;;		_CantaPartBaixa
  2766 ;; This function is called by:
  2767 ;;		_LcInit
  2768 ;;		_LcClear
  2769 ;;		_LcCursorOff
  2770 ;;		_LcGotoXY
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text23
  2775  000A16                     __ptext23:
  2776                           	callstack 0
  2777  000A16                     _CantaIR:
  2778                           	callstack 25
  2779                           
  2780                           ;incstack = 0
  2781                           ;CantaIR@IR stored from wreg
  2782  000A16  6E4E               	movwf	CantaIR@IR^0,c
  2783                           
  2784                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  2785  000A18  9694               	bcf	148,3,c	;volatile
  2786  000A1A  9494               	bcf	148,2,c	;volatile
  2787  000A1C  9294               	bcf	148,1,c	;volatile
  2788  000A1E  9094               	bcf	148,0,c	;volatile
  2789                           
  2790                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  2791  000A20  9A8B               	bcf	139,5,c	;volatile
  2792                           
  2793                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  2794  000A22  9E8C               	bcf	140,7,c	;volatile
  2795                           
  2796                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  2797  000A24  888B               	bsf	139,4,c	;volatile
  2798                           
  2799                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  2800  000A26  504E               	movf	CantaIR@IR^0,w,c
  2801  000A28  ECBA  F003         	call	_CantaPartAlta
  2802                           
  2803                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  2804  000A2C  888B               	bsf	139,4,c	;volatile
  2805                           
  2806                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  2807  000A2E  988B               	bcf	139,4,c	;volatile
  2808                           
  2809                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  2810  000A30  988B               	bcf	139,4,c	;volatile
  2811                           
  2812                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  2813  000A32  888B               	bsf	139,4,c	;volatile
  2814                           
  2815                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  2816  000A34  504E               	movf	CantaIR@IR^0,w,c
  2817  000A36  EC86  F003         	call	_CantaPartBaixa
  2818                           
  2819                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  2820  000A3A  888B               	bsf	139,4,c	;volatile
  2821                           
  2822                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  2823  000A3C  988B               	bcf	139,4,c	;volatile
  2824                           
  2825                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2826  000A3E  8694               	bsf	148,3,c	;volatile
  2827  000A40  8494               	bsf	148,2,c	;volatile
  2828  000A42  8294               	bsf	148,1,c	;volatile
  2829  000A44  8094               	bsf	148,0,c	;volatile
  2830  000A46  0012               	return		;funcret
  2831  000A48                     __end_of_CantaIR:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _CantaPartBaixa *****************
  2835 ;; Defined at:
  2836 ;;		line 171 in file "LcTLCD.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  c               1    wreg     unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  c               1    6[COMRAM] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1
  2850 ;;      Params:         0       0       0
  2851 ;;      Locals:         1       0       0
  2852 ;;      Temps:          1       0       0
  2853 ;;      Totals:         2       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 2
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_CantaIR
  2861 ;;		_CantaData
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text24
  2866  00070C                     __ptext24:
  2867                           	callstack 0
  2868  00070C                     _CantaPartBaixa:
  2869                           	callstack 25
  2870                           
  2871                           ;incstack = 0
  2872                           ;CantaPartBaixa@c stored from wreg
  2873  00070C  6E4D               	movwf	CantaPartBaixa@c^0,c
  2874                           
  2875                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  2876  00070E  A64D               	btfss	CantaPartBaixa@c^0,3,c
  2877  000710  D003               	goto	u970
  2878  000712  6A4C               	clrf	??_CantaPartBaixa^0,c
  2879  000714  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2880  000716  D001               	goto	u988
  2881  000718                     u970:
  2882  000718  6A4C               	clrf	??_CantaPartBaixa^0,c
  2883  00071A                     u988:
  2884  00071A  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2885  00071C  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2886  00071E  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2887  000720  508B               	movf	139,w,c	;volatile
  2888  000722  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2889  000724  0BF7               	andlw	-9
  2890  000726  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2891  000728  6E8B               	movwf	139,c	;volatile
  2892                           
  2893                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  2894  00072A  A44D               	btfss	CantaPartBaixa@c^0,2,c
  2895  00072C  D003               	goto	u990
  2896  00072E  6A4C               	clrf	??_CantaPartBaixa^0,c
  2897  000730  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2898  000732  D001               	goto	u1008
  2899  000734                     u990:
  2900  000734  6A4C               	clrf	??_CantaPartBaixa^0,c
  2901  000736                     u1008:
  2902  000736  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2903  000738  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2904  00073A  508B               	movf	139,w,c	;volatile
  2905  00073C  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2906  00073E  0BFB               	andlw	-5
  2907  000740  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2908  000742  6E8B               	movwf	139,c	;volatile
  2909                           
  2910                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  2911  000744  A24D               	btfss	CantaPartBaixa@c^0,1,c
  2912  000746  D003               	goto	u1010
  2913  000748  6A4C               	clrf	??_CantaPartBaixa^0,c
  2914  00074A  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2915  00074C  D001               	goto	u1028
  2916  00074E                     u1010:
  2917  00074E  6A4C               	clrf	??_CantaPartBaixa^0,c
  2918  000750                     u1028:
  2919  000750  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2920  000752  508B               	movf	139,w,c	;volatile
  2921  000754  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2922  000756  0BFD               	andlw	-3
  2923  000758  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2924  00075A  6E8B               	movwf	139,c	;volatile
  2925                           
  2926                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  2927  00075C  A04D               	btfss	CantaPartBaixa@c^0,0,c
  2928  00075E  D003               	goto	u1030
  2929  000760  6A4C               	clrf	??_CantaPartBaixa^0,c
  2930  000762  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2931  000764  D001               	goto	u1048
  2932  000766                     u1030:
  2933  000766  6A4C               	clrf	??_CantaPartBaixa^0,c
  2934  000768                     u1048:
  2935  000768  508B               	movf	139,w,c	;volatile
  2936  00076A  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2937  00076C  0BFE               	andlw	-2
  2938  00076E  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2939  000770  6E8B               	movwf	139,c	;volatile
  2940  000772  0012               	return		;funcret
  2941  000774                     __end_of_CantaPartBaixa:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _CantaPartAlta *****************
  2945 ;; Defined at:
  2946 ;;		line 164 in file "LcTLCD.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  c               1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  c               1    6[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1
  2960 ;;      Params:         0       0       0
  2961 ;;      Locals:         1       0       0
  2962 ;;      Temps:          1       0       0
  2963 ;;      Totals:         2       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 2
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_CantaIR
  2971 ;;		_CantaData
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text25
  2976  000774                     __ptext25:
  2977                           	callstack 0
  2978  000774                     _CantaPartAlta:
  2979                           	callstack 25
  2980                           
  2981                           ;incstack = 0
  2982                           ;CantaPartAlta@c stored from wreg
  2983  000774  6E4D               	movwf	CantaPartAlta@c^0,c
  2984                           
  2985                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  2986  000776  AE4D               	btfss	CantaPartAlta@c^0,7,c
  2987  000778  D003               	goto	u890
  2988  00077A  6A4C               	clrf	??_CantaPartAlta^0,c
  2989  00077C  2A4C               	incf	??_CantaPartAlta^0,f,c
  2990  00077E  D001               	goto	u908
  2991  000780                     u890:
  2992  000780  6A4C               	clrf	??_CantaPartAlta^0,c
  2993  000782                     u908:
  2994  000782  464C               	rlncf	??_CantaPartAlta^0,f,c
  2995  000784  464C               	rlncf	??_CantaPartAlta^0,f,c
  2996  000786  464C               	rlncf	??_CantaPartAlta^0,f,c
  2997  000788  508B               	movf	139,w,c	;volatile
  2998  00078A  184C               	xorwf	??_CantaPartAlta^0,w,c
  2999  00078C  0BF7               	andlw	-9
  3000  00078E  184C               	xorwf	??_CantaPartAlta^0,w,c
  3001  000790  6E8B               	movwf	139,c	;volatile
  3002                           
  3003                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  3004  000792  AC4D               	btfss	CantaPartAlta@c^0,6,c
  3005  000794  D003               	goto	u910
  3006  000796  6A4C               	clrf	??_CantaPartAlta^0,c
  3007  000798  2A4C               	incf	??_CantaPartAlta^0,f,c
  3008  00079A  D001               	goto	u928
  3009  00079C                     u910:
  3010  00079C  6A4C               	clrf	??_CantaPartAlta^0,c
  3011  00079E                     u928:
  3012  00079E  464C               	rlncf	??_CantaPartAlta^0,f,c
  3013  0007A0  464C               	rlncf	??_CantaPartAlta^0,f,c
  3014  0007A2  508B               	movf	139,w,c	;volatile
  3015  0007A4  184C               	xorwf	??_CantaPartAlta^0,w,c
  3016  0007A6  0BFB               	andlw	-5
  3017  0007A8  184C               	xorwf	??_CantaPartAlta^0,w,c
  3018  0007AA  6E8B               	movwf	139,c	;volatile
  3019                           
  3020                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  3021  0007AC  AA4D               	btfss	CantaPartAlta@c^0,5,c
  3022  0007AE  D003               	goto	u930
  3023  0007B0  6A4C               	clrf	??_CantaPartAlta^0,c
  3024  0007B2  2A4C               	incf	??_CantaPartAlta^0,f,c
  3025  0007B4  D001               	goto	u948
  3026  0007B6                     u930:
  3027  0007B6  6A4C               	clrf	??_CantaPartAlta^0,c
  3028  0007B8                     u948:
  3029  0007B8  464C               	rlncf	??_CantaPartAlta^0,f,c
  3030  0007BA  508B               	movf	139,w,c	;volatile
  3031  0007BC  184C               	xorwf	??_CantaPartAlta^0,w,c
  3032  0007BE  0BFD               	andlw	-3
  3033  0007C0  184C               	xorwf	??_CantaPartAlta^0,w,c
  3034  0007C2  6E8B               	movwf	139,c	;volatile
  3035                           
  3036                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  3037  0007C4  A84D               	btfss	CantaPartAlta@c^0,4,c
  3038  0007C6  D003               	goto	u950
  3039  0007C8  6A4C               	clrf	??_CantaPartAlta^0,c
  3040  0007CA  2A4C               	incf	??_CantaPartAlta^0,f,c
  3041  0007CC  D001               	goto	u968
  3042  0007CE                     u950:
  3043  0007CE  6A4C               	clrf	??_CantaPartAlta^0,c
  3044  0007D0                     u968:
  3045  0007D0  508B               	movf	139,w,c	;volatile
  3046  0007D2  184C               	xorwf	??_CantaPartAlta^0,w,c
  3047  0007D4  0BFE               	andlw	-2
  3048  0007D6  184C               	xorwf	??_CantaPartAlta^0,w,c
  3049  0007D8  6E8B               	movwf	139,c	;volatile
  3050  0007DA  0012               	return		;funcret
  3051  0007DC                     __end_of_CantaPartAlta:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _Espera *****************
  3055 ;; Defined at:
  3056 ;;		line 159 in file "LcTLCD.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  Timer           1    wreg     unsigned char 
  3059 ;;  ms              2   12[COMRAM] int 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  Timer           1   15[COMRAM] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1
  3071 ;;      Params:         2       0       0
  3072 ;;      Locals:         1       0       0
  3073 ;;      Temps:          1       0       0
  3074 ;;      Totals:         4       0       0
  3075 ;;Total ram usage:        4 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 3
  3078 ;; This function calls:
  3079 ;;		_TiGetTics
  3080 ;;		_TiResetTics
  3081 ;; This function is called by:
  3082 ;;		_LcInit
  3083 ;;		_LcClear
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text26
  3088  000AC8                     __ptext26:
  3089                           	callstack 0
  3090  000AC8                     _Espera:
  3091                           	callstack 25
  3092                           
  3093                           ;incstack = 0
  3094                           ;Espera@Timer stored from wreg
  3095  000AC8  6E56               	movwf	Espera@Timer^0,c
  3096                           
  3097                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  3098  000ACA  5056               	movf	Espera@Timer^0,w,c
  3099  000ACC  EC92  F005         	call	_TiResetTics
  3100  000AD0                     l1730:
  3101  000AD0  5056               	movf	Espera@Timer^0,w,c
  3102  000AD2  EC3C  F005         	call	_TiGetTics
  3103  000AD6  5053               	movf	Espera@ms^0,w,c
  3104  000AD8  5C4C               	subwf	?_TiGetTics^0,w,c
  3105  000ADA  504D               	movf	(?_TiGetTics+1)^0,w,c
  3106  000ADC  0A80               	xorlw	128
  3107  000ADE  6E55               	movwf	??_Espera^0,c
  3108  000AE0  5054               	movf	(Espera@ms+1)^0,w,c
  3109  000AE2  0A80               	xorlw	128
  3110  000AE4  5855               	subwfb	??_Espera^0,w,c
  3111  000AE6  B0D8               	btfsc	status,0,c
  3112  000AE8  0012               	return	
  3113  000AEA  D7F2               	goto	l1730
  3114  000AEC                     __end_of_Espera:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _TiResetTics *****************
  3118 ;; Defined at:
  3119 ;;		line 55 in file "TiTTimer.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  Handle          1    wreg     unsigned char 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  Handle          1    5[COMRAM] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1
  3133 ;;      Params:         0       0       0
  3134 ;;      Locals:         1       0       0
  3135 ;;      Temps:          0       0       0
  3136 ;;      Totals:         1       0       0
  3137 ;;Total ram usage:        1 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 2
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_Espera
  3144 ;;		_WaitForBusy
  3145 ;;		_SMotor
  3146 ;;		_TeTeclat
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text27
  3151  000B24                     __ptext27:
  3152                           	callstack 0
  3153  000B24                     _TiResetTics:
  3154                           	callstack 25
  3155                           
  3156                           ;incstack = 0
  3157                           ;TiResetTics@Handle stored from wreg
  3158  000B24  6E4C               	movwf	TiResetTics@Handle^0,c
  3159                           
  3160                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  3161  000B26  504C               	movf	TiResetTics@Handle^0,w,c
  3162  000B28  0D03               	mullw	3
  3163  000B2A  50F3               	movf	243,w,c
  3164  000B2C  0F01               	addlw	low _s_Timers
  3165  000B2E  6ED9               	movwf	fsr2l,c
  3166  000B30  6ADA               	clrf	fsr2h,c
  3167  000B32  C019  FFDE         	movff	_h_Tics,postinc2
  3168  000B36  C01A  FFDD         	movff	_h_Tics+1,postdec2
  3169  000B3A  0012               	return		;funcret
  3170  000B3C                     __end_of_TiResetTics:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _TiGetTics *****************
  3174 ;; Defined at:
  3175 ;;		line 61 in file "TiTTimer.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  Handle          1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  Handle          1    9[COMRAM] unsigned char 
  3180 ;;  actual          2   10[COMRAM] volatile unsigned int 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  2    5[COMRAM] int 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1
  3190 ;;      Params:         2       0       0
  3191 ;;      Locals:         3       0       0
  3192 ;;      Temps:          2       0       0
  3193 ;;      Totals:         7       0       0
  3194 ;;Total ram usage:        7 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 2
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_Espera
  3201 ;;		_WaitForBusy
  3202 ;;		_SMotor
  3203 ;;		_TeTeclat
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text28
  3208  000A78                     __ptext28:
  3209                           	callstack 0
  3210  000A78                     _TiGetTics:
  3211                           	callstack 25
  3212                           
  3213                           ;incstack = 0
  3214                           ;TiGetTics@Handle stored from wreg
  3215  000A78  6E50               	movwf	TiGetTics@Handle^0,c
  3216                           
  3217                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  3218  000A7A  C019  F051         	movff	_h_Tics,TiGetTics@actual	;volatile
  3219  000A7E  C01A  F052         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  3220                           
  3221                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  3222  000A82  5050               	movf	TiGetTics@Handle^0,w,c
  3223  000A84  0D03               	mullw	3
  3224  000A86  50F3               	movf	243,w,c
  3225  000A88  0F01               	addlw	low _s_Timers
  3226  000A8A  6ED9               	movwf	fsr2l,c
  3227  000A8C  6ADA               	clrf	fsr2h,c
  3228  000A8E  CFDE F04E          	movff	postinc2,??_TiGetTics
  3229  000A92  CFDD F04F          	movff	postdec2,??_TiGetTics+1
  3230  000A96  504E               	movf	??_TiGetTics^0,w,c
  3231  000A98  5C51               	subwf	TiGetTics@actual^0,w,c	;volatile
  3232  000A9A  6E4C               	movwf	?_TiGetTics^0,c
  3233  000A9C  504F               	movf	(??_TiGetTics+1)^0,w,c
  3234  000A9E  5852               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  3235  000AA0  6E4D               	movwf	(?_TiGetTics+1)^0,c
  3236  000AA2  0012               	return		;funcret
  3237  000AA4                     __end_of_TiGetTics:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _EscriuPrimeraOrdre *****************
  3241 ;; Defined at:
  3242 ;;		line 228 in file "LcTLCD.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  ordre           1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  ordre           1    6[COMRAM] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1
  3256 ;;      Params:         0       0       0
  3257 ;;      Locals:         1       0       0
  3258 ;;      Temps:          1       0       0
  3259 ;;      Totals:         2       0       0
  3260 ;;Total ram usage:        2 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 2
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_LcInit
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text29
  3271  000692                     __ptext29:
  3272                           	callstack 0
  3273  000692                     _EscriuPrimeraOrdre:
  3274                           	callstack 27
  3275                           
  3276                           ;incstack = 0
  3277                           ;EscriuPrimeraOrdre@ordre stored from wreg
  3278  000692  6E4D               	movwf	EscriuPrimeraOrdre@ordre^0,c
  3279                           
  3280                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  3281  000694  9694               	bcf	148,3,c	;volatile
  3282  000696  9494               	bcf	148,2,c	;volatile
  3283  000698  9294               	bcf	148,1,c	;volatile
  3284  00069A  9094               	bcf	148,0,c	;volatile
  3285  00069C  9A8B               	bcf	139,5,c	;volatile
  3286  00069E  9E8C               	bcf	140,7,c	;volatile
  3287                           
  3288                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  3289  0006A0  888B               	bsf	139,4,c	;volatile
  3290  0006A2  888B               	bsf	139,4,c	;volatile
  3291                           
  3292                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  3293  0006A4  A64D               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  3294  0006A6  D003               	goto	u230
  3295  0006A8  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3296  0006AA  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  3297  0006AC  D001               	goto	u248
  3298  0006AE                     u230:
  3299  0006AE  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3300  0006B0                     u248:
  3301  0006B0  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3302  0006B2  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3303  0006B4  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3304  0006B6  508B               	movf	139,w,c	;volatile
  3305  0006B8  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3306  0006BA  0BF7               	andlw	-9
  3307  0006BC  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3308  0006BE  6E8B               	movwf	139,c	;volatile
  3309                           
  3310                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  3311  0006C0  A44D               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  3312  0006C2  D003               	goto	u250
  3313  0006C4  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3314  0006C6  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  3315  0006C8  D001               	goto	u268
  3316  0006CA                     u250:
  3317  0006CA  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3318  0006CC                     u268:
  3319  0006CC  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3320  0006CE  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3321  0006D0  508B               	movf	139,w,c	;volatile
  3322  0006D2  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3323  0006D4  0BFB               	andlw	-5
  3324  0006D6  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3325  0006D8  6E8B               	movwf	139,c	;volatile
  3326                           
  3327                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  3328  0006DA  A24D               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  3329  0006DC  D003               	goto	u270
  3330  0006DE  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3331  0006E0  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  3332  0006E2  D001               	goto	u288
  3333  0006E4                     u270:
  3334  0006E4  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3335  0006E6                     u288:
  3336  0006E6  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3337  0006E8  508B               	movf	139,w,c	;volatile
  3338  0006EA  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3339  0006EC  0BFD               	andlw	-3
  3340  0006EE  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3341  0006F0  6E8B               	movwf	139,c	;volatile
  3342                           
  3343                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  3344  0006F2  A04D               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  3345  0006F4  D003               	goto	u290
  3346  0006F6  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3347  0006F8  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  3348  0006FA  D001               	goto	u308
  3349  0006FC                     u290:
  3350  0006FC  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  3351  0006FE                     u308:
  3352  0006FE  508B               	movf	139,w,c	;volatile
  3353  000700  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3354  000702  0BFE               	andlw	-2
  3355  000704  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3356  000706  6E8B               	movwf	139,c	;volatile
  3357                           
  3358                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  3359  000708  988B               	bcf	139,4,c	;volatile
  3360  00070A  0012               	return		;funcret
  3361  00070C                     __end_of_EscriuPrimeraOrdre:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _high_rsi *****************
  3365 ;; Defined at:
  3366 ;;		line 15 in file "main.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1
  3380 ;;      Params:         0       0       0
  3381 ;;      Locals:         0       0       0
  3382 ;;      Temps:          4       0       0
  3383 ;;      Totals:         4       0       0
  3384 ;;Total ram usage:        4 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 1
  3387 ;; This function calls:
  3388 ;;		__TiRSITimer
  3389 ;; This function is called by:
  3390 ;;		Interrupt level 2
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	intcode
  3395  000008                     __pintcode:
  3396                           	callstack 0
  3397  000008                     _high_rsi:
  3398                           	callstack 24
  3399                           
  3400                           ;incstack = 0
  3401  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3402  00000A  CFD9 F048          	movff	fsr2l,??_high_rsi
  3403  00000E  CFDA F049          	movff	fsr2h,??_high_rsi+1
  3404  000012  CFF3 F04A          	movff	prodl,??_high_rsi+2
  3405  000016  CFF4 F04B          	movff	prodh,??_high_rsi+3
  3406                           
  3407                           ;main.c: 16:     LATBbits.LATB0 = 0;
  3408  00001A  ECEE  F003         	call	__TiRSITimer	;wreg free
  3409  00001E  C04B  FFF4         	movff	??_high_rsi+3,prodh
  3410  000022  C04A  FFF3         	movff	??_high_rsi+2,prodl
  3411  000026  C049  FFDA         	movff	??_high_rsi+1,fsr2h
  3412  00002A  C048  FFD9         	movff	??_high_rsi,fsr2l
  3413  00002E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3414  000030  0011               	retfie		f
  3415  000032                     __end_of_high_rsi:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function __TiRSITimer *****************
  3419 ;; Defined at:
  3420 ;;		line 37 in file "TiTTimer.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1
  3434 ;;      Params:         0       0       0
  3435 ;;      Locals:         0       0       0
  3436 ;;      Temps:          1       0       0
  3437 ;;      Totals:         1       0       0
  3438 ;;Total ram usage:        1 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_high_rsi
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text31
  3448  0007DC                     __ptext31:
  3449                           	callstack 0
  3450  0007DC                     __TiRSITimer:
  3451                           	callstack 24
  3452                           
  3453                           ;TiTTimer.c: 39:     TMR0H = 223;
  3454                           
  3455                           ;incstack = 0
  3456  0007DC  0EDF               	movlw	223
  3457  0007DE  6ED7               	movwf	215,c	;volatile
  3458                           
  3459                           ;TiTTimer.c: 40:     TMR0L = 148;
  3460  0007E0  0E94               	movlw	148
  3461  0007E2  6ED6               	movwf	214,c	;volatile
  3462                           
  3463                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  3464  0007E4  94F2               	bcf	242,2,c	;volatile
  3465                           
  3466                           ;TiTTimer.c: 42:     h_Tics++;
  3467  0007E6  4A19               	infsnz	_h_Tics^0,f,c
  3468  0007E8  2A1A               	incf	(_h_Tics+1)^0,f,c
  3469                           
  3470                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  3471  0007EA  0E48               	movlw	72
  3472  0007EC  5C19               	subwf	_h_Tics^0,w,c
  3473  0007EE  0EEE               	movlw	238
  3474  0007F0  581A               	subwfb	(_h_Tics+1)^0,w,c
  3475  0007F2  A0D8               	btfss	status,0,c
  3476  0007F4  0012               	return	
  3477                           
  3478                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  3479  0007F6  0E00               	movlw	0
  3480  0007F8  6E1F               	movwf	_counter^0,c
  3481  0007FA                     i2l1328:
  3482  0007FA  0E07               	movlw	7
  3483  0007FC  641F               	cpfsgt	_counter^0,c
  3484  0007FE  D001               	goto	i2l1332
  3485  000800  D015               	goto	i2l1340
  3486  000802                     i2l1332:
  3487                           
  3488                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  3489  000802  501F               	movf	_counter^0,w,c
  3490  000804  0D03               	mullw	3
  3491  000806  50F3               	movf	243,w,c
  3492  000808  0F03               	addlw	low (_s_Timers+2)
  3493  00080A  6ED9               	movwf	fsr2l,c
  3494  00080C  6ADA               	clrf	fsr2h,c
  3495  00080E  04DE               	decf	postinc2,w,c
  3496  000810  A4D8               	btfss	status,2,c
  3497  000812  D00A               	goto	i2l1336
  3498                           
  3499                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  3500  000814  501F               	movf	_counter^0,w,c
  3501  000816  0D03               	mullw	3
  3502  000818  50F3               	movf	243,w,c
  3503  00081A  0F01               	addlw	low _s_Timers
  3504  00081C  6ED9               	movwf	fsr2l,c
  3505  00081E  6ADA               	clrf	fsr2h,c
  3506  000820  5019               	movf	_h_Tics^0,w,c
  3507  000822  5EDE               	subwf	postinc2,f,c
  3508  000824  501A               	movf	(_h_Tics+1)^0,w,c
  3509  000826  5ADD               	subwfb	postdec2,f,c
  3510  000828                     i2l1336:
  3511                           
  3512                           ;TiTTimer.c: 50:         }
  3513  000828  2A1F               	incf	_counter^0,f,c
  3514  00082A  D7E7               	goto	i2l1328
  3515  00082C                     i2l1340:
  3516                           
  3517                           ;TiTTimer.c: 51:         h_Tics=0;
  3518  00082C  0E00               	movlw	0
  3519  00082E  6E1A               	movwf	(_h_Tics+1)^0,c
  3520  000830  0E00               	movlw	0
  3521  000832  6E19               	movwf	_h_Tics^0,c
  3522  000834  0012               	return		;funcret
  3523  000836                     __end_of__TiRSITimer:
  3524                           	callstack 0
  3525                           
  3526                           	psect	rparam
  3527  0000                     
  3528                           	psect	temp
  3529  00005D                     btemp:
  3530                           	callstack 0
  3531  00005D                     	ds	1
  3532  0000                     int$flags	set	btemp
  3533  0000                     wtemp8	set	btemp+1
  3534  0000                     ttemp5	set	btemp+1
  3535  0000                     ttemp6	set	btemp+4
  3536  0000                     ttemp7	set	btemp+8
  3537                           
  3538                           	psect	idloc
  3539                           
  3540                           ;Config register IDLOC0 @ 0x200000
  3541                           ;	unspecified, using default values
  3542  200000                     	org	2097152
  3543  200000  FF                 	db	255
  3544                           
  3545                           ;Config register IDLOC1 @ 0x200001
  3546                           ;	unspecified, using default values
  3547  200001                     	org	2097153
  3548  200001  FF                 	db	255
  3549                           
  3550                           ;Config register IDLOC2 @ 0x200002
  3551                           ;	unspecified, using default values
  3552  200002                     	org	2097154
  3553  200002  FF                 	db	255
  3554                           
  3555                           ;Config register IDLOC3 @ 0x200003
  3556                           ;	unspecified, using default values
  3557  200003                     	org	2097155
  3558  200003  FF                 	db	255
  3559                           
  3560                           ;Config register IDLOC4 @ 0x200004
  3561                           ;	unspecified, using default values
  3562  200004                     	org	2097156
  3563  200004  FF                 	db	255
  3564                           
  3565                           ;Config register IDLOC5 @ 0x200005
  3566                           ;	unspecified, using default values
  3567  200005                     	org	2097157
  3568  200005  FF                 	db	255
  3569                           
  3570                           ;Config register IDLOC6 @ 0x200006
  3571                           ;	unspecified, using default values
  3572  200006                     	org	2097158
  3573  200006  FF                 	db	255
  3574                           
  3575                           ;Config register IDLOC7 @ 0x200007
  3576                           ;	unspecified, using default values
  3577  200007                     	org	2097159
  3578  200007  FF                 	db	255
  3579                           
  3580                           	psect	config
  3581                           
  3582                           ; Padding undefined space
  3583  300000                     	org	3145728
  3584  300000  FF                 	db	255
  3585                           
  3586                           ;Config register CONFIG1H @ 0x300001
  3587                           ;	Oscillator
  3588                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3589                           ;	Fail-Safe Clock Monitor Enable bit
  3590                           ;	FCMEN = 0x0, unprogrammed default
  3591                           ;	Internal/External Oscillator Switchover bit
  3592                           ;	IESO = 0x0, unprogrammed default
  3593  300001                     	org	3145729
  3594  300001  06                 	db	6
  3595                           
  3596                           ;Config register CONFIG2L @ 0x300002
  3597                           ;	unspecified, using default values
  3598                           ;	Power-up Timer Enable bit
  3599                           ;	PWRT = 0x1, unprogrammed default
  3600                           ;	Brown-out Reset Enable bits
  3601                           ;	BOR = 0x3, unprogrammed default
  3602                           ;	Brown-out Reset Voltage bits
  3603                           ;	BORV = 0x3, unprogrammed default
  3604  300002                     	org	3145730
  3605  300002  1F                 	db	31
  3606                           
  3607                           ;Config register CONFIG2H @ 0x300003
  3608                           ;	Watchdog Timer Enable bit
  3609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3610                           ;	Watchdog Timer Postscale Select bits
  3611                           ;	WDTPS = 0xF, unprogrammed default
  3612  300003                     	org	3145731
  3613  300003  1E                 	db	30
  3614                           
  3615                           ; Padding undefined space
  3616  300004                     	org	3145732
  3617  300004  FF                 	db	255
  3618                           
  3619                           ;Config register CONFIG3H @ 0x300005
  3620                           ;	CCP2 MUX bit
  3621                           ;	CCP2MX = 0x1, unprogrammed default
  3622                           ;	PORTB A/D Enable bit
  3623                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  3624                           ;	Low-Power Timer1 Oscillator Enable bit
  3625                           ;	LPT1OSC = 0x0, unprogrammed default
  3626                           ;	MCLR Pin Enable bit
  3627                           ;	MCLRE = 0x1, unprogrammed default
  3628  300005                     	org	3145733
  3629  300005  81                 	db	129
  3630                           
  3631                           ;Config register CONFIG4L @ 0x300006
  3632                           ;	Stack Full/Underflow Reset Enable bit
  3633                           ;	STVREN = 0x1, unprogrammed default
  3634                           ;	Single-Supply ICSP Enable bit
  3635                           ;	LVP = OFF, Single-Supply ICSP disabled
  3636                           ;	Boot Block Size Select bits
  3637                           ;	BBSIZ = 0x0, unprogrammed default
  3638                           ;	Extended Instruction Set Enable bit
  3639                           ;	XINST = 0x0, unprogrammed default
  3640                           ;	Background Debugger Enable bit
  3641                           ;	DEBUG = 0x1, unprogrammed default
  3642  300006                     	org	3145734
  3643  300006  81                 	db	129
  3644                           
  3645                           ; Padding undefined space
  3646  300007                     	org	3145735
  3647  300007  FF                 	db	255
  3648                           
  3649                           ;Config register CONFIG5L @ 0x300008
  3650                           ;	unspecified, using default values
  3651                           ;	Code Protection bit
  3652                           ;	CP0 = 0x1, unprogrammed default
  3653                           ;	Code Protection bit
  3654                           ;	CP1 = 0x1, unprogrammed default
  3655  300008                     	org	3145736
  3656  300008  03                 	db	3
  3657                           
  3658                           ;Config register CONFIG5H @ 0x300009
  3659                           ;	unspecified, using default values
  3660                           ;	Boot Block Code Protection bitProtect Boot
  3661                           ;	CPB = 0x1, unprogrammed default
  3662                           ;	Data EEPROM Code Protection bit
  3663                           ;	CPD = 0x1, unprogrammed default
  3664  300009                     	org	3145737
  3665  300009  C0                 	db	192
  3666                           
  3667                           ;Config register CONFIG6L @ 0x30000A
  3668                           ;	unspecified, using default values
  3669                           ;	Write Protection bit
  3670                           ;	WRT0 = 0x1, unprogrammed default
  3671                           ;	Write Protection bit
  3672                           ;	WRT1 = 0x1, unprogrammed default
  3673  30000A                     	org	3145738
  3674  30000A  03                 	db	3
  3675                           
  3676                           ;Config register CONFIG6H @ 0x30000B
  3677                           ;	unspecified, using default values
  3678                           ;	Configuration Register Write Protection bit
  3679                           ;	WRTC = 0x1, unprogrammed default
  3680                           ;	Boot Block Write Protection bit
  3681                           ;	WRTB = 0x1, unprogrammed default
  3682                           ;	Data EEPROM Write Protection bit
  3683                           ;	WRTD = 0x1, unprogrammed default
  3684  30000B                     	org	3145739
  3685  30000B  E0                 	db	224
  3686                           
  3687                           ;Config register CONFIG7L @ 0x30000C
  3688                           ;	unspecified, using default values
  3689                           ;	Table Read Protection bit
  3690                           ;	EBTR0 = 0x1, unprogrammed default
  3691                           ;	Table Read Protection bit
  3692                           ;	EBTR1 = 0x1, unprogrammed default
  3693  30000C                     	org	3145740
  3694  30000C  03                 	db	3
  3695                           
  3696                           ;Config register CONFIG7H @ 0x30000D
  3697                           ;	unspecified, using default values
  3698                           ;	Boot Block Table Read Protection bit
  3699                           ;	EBTRB = 0x1, unprogrammed default
  3700  30000D                     	org	3145741
  3701  30000D  40                 	db	64
  3702                           tosu	equ	0xFFF
  3703                           tosh	equ	0xFFE
  3704                           tosl	equ	0xFFD
  3705                           stkptr	equ	0xFFC
  3706                           pclatu	equ	0xFFB
  3707                           pclath	equ	0xFFA
  3708                           pcl	equ	0xFF9
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           indf0	equ	0xFEF
  3716                           postinc0	equ	0xFEE
  3717                           postdec0	equ	0xFED
  3718                           preinc0	equ	0xFEC
  3719                           plusw0	equ	0xFEB
  3720                           fsr0h	equ	0xFEA
  3721                           fsr0l	equ	0xFE9
  3722                           wreg	equ	0xFE8
  3723                           indf1	equ	0xFE7
  3724                           postinc1	equ	0xFE6
  3725                           postdec1	equ	0xFE5
  3726                           preinc1	equ	0xFE4
  3727                           plusw1	equ	0xFE3
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           bsr	equ	0xFE0
  3731                           indf2	equ	0xFDF
  3732                           postinc2	equ	0xFDE
  3733                           postdec2	equ	0xFDD
  3734                           preinc2	equ	0xFDC
  3735                           plusw2	equ	0xFDB
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        27
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21      92
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcGotoXY
    _LcClear->_LcGotoXY
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5744
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    2925
                                             19 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    1787
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1144
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1144
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1     812
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     15      5C       1       73.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C       7        0.0%
DATA                 0      0      5C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 20 12:06:05 2022

          TiResetTics@Handle 004C                          u230 06AE                          u250 06CA  
                        u308 06FE                          u270 06E4                          u248 06B0  
                        u290 06FC                          u268 06CC                          u288 06E6  
                        u910 079C                          u930 07B6                          u908 0782  
                        u950 07CE                          u928 079E                          u890 0780  
                        u970 0718                          u948 07B8                          u990 0734  
                        u968 07D0                          u988 071A             ??_CantaPartBaixa 004C  
                        wreg 000FE8                  _ultimaTecla 0037                         l2000 05D0  
                       l2010 05F2                         l2100 02EC                         l2022 0616  
                       l2120 033E                         l2112 032A                         l2106 031C  
                       l2034 063E                         l2116 0332                         l2060 0280  
                       l2052 026C                         l1244 0B44                         l2044 065A  
                       l2126 034A                         l2038 064C                         l1176 0944  
                       l1184 0952                         l2080 02B0                         l2064 028C  
                       l1360 099C                         l2074 02A2                         l2066 0292  
                       l2058 027C                         l2146 09D2                         l2092 02D4  
                       l1356 0994                         l2086 02C6                         l1704 089A  
                       l2096 02E0                         l1730 0AD0                         l1802 087C  
                       l1824 0508                         l1736 0914                         l1912 03EC  
                       l1930 0432                         l1924 0418                         l1918 0402  
                       l1936 0444                         l1872 038E                         l1794 0862  
                       l1962 048A                         l1938 044A                         l1890 039C  
                       l1796 086C                         l1956 047A                         l1948 0460  
                       l1966 0492                         l1898 03C4                         l1986 04A6  
                       l1994 05BE                         STR_1 021E                         STR_2 0201  
                       STR_3 020C                         STR_4 0215                         u1010 074E  
                       u1030 0766                         u1008 0736                         u1028 0750  
                       u1140 05B6                         u1048 0768                         u1320 0468  
                       u1330 0482                         u1250 0412                         u1190 03BA  
                       _LATD 000F8C                         u1290 0442                         u1450 0232  
                       u1460 023C                         u1470 024C                         u1480 025C  
                       u1466 023E                         u1458 0234                         u1476 024E  
                       u1486 025E              ??_SsetNovaTecla 004C                         _Rows 002B  
                       _main 09B0                         _menu 05BC                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 005D                         prodh 000FF4                         prodl 000FF3  
            __end_of_LcClear 0AC8                         start 0032              __end_of_CantaIR 0A48  
              LcInit@columns 0057                 ___param_bank 000000                  Espera@Timer 0056  
                      ?_main 0047                        ?_menu 0047                ??_TiInitTimer 004C  
                      _T0CON 000FD5                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _LcLCD 0A48                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _Minit 0B7C  
                      _Sinit 0B74                        _Timer 0027                        _s_ptr 0026  
                      _nou_s 02E1                  _LcCursorOff 0B48               __pbitbssCOMRAM 02E0  
                      tablat 000FF5                  _LcNewString 0B54                ??_TiResetTics 004C  
                      ttemp5 005E                        ttemp6 0061                        ttemp7 0065  
                      status 000FD8                        wtemp8 005E             __end_of_LcGotoXY 093E  
           __end_of_LcLliure 0B48                ??__TiRSITimer 0047                   _TiGetTimer 093E  
    EscriuPrimeraOrdre@ordre 004D              __initialization 08C8           __size_of_CantaData 0032  
               __end_of_main 09E4                 __end_of_menu 0692             __end_of_TeTeclat 038C  
                     ??_main 005C                       ??_menu 005A           __size_of_LcPutChar 0052  
              __activetblptr 000002                       ?_LcLCD 0047                       ?_Minit 0047  
                     ?_Sinit 0047          __end_of_TiInitTimer 09B0                    ??_LcClear 005A  
                  ??_CantaIR 004E                       i2l1340 082C                       i2l1332 0802  
                     i2l1336 0828                       i2l1328 07FA               LcGotoXY@Fisics 0055  
             LcGotoXY@Column 0059                ??_WaitForBusy 0053           __size_of_TiGetTics 002C  
             _sumaPulsacions 0025                       _LcInit 04E2               _UgetNumUsuaris 0B84  
                     _SMotor 038C                       _TeInit 0B6C                       _Espera 0AC8  
               _LcGotoXY$342 0057                       _RowAct 0029          __end_of_TiResetTics 0B3C  
           __end_of_high_rsi 0032                       _h_Tics 0019          __end_of__TiRSITimer 0836  
                     clear_0 08F0                       isa$std 000001  __size_of_EscriuPrimeraOrdre 007A  
               __pdataCOMRAM 002C       __size_of_CantaPartAlta 0068                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
          __end_of_CantaData 0A16                 TeTeclat@cols 0021                   __accesstop 0080  
    __end_of__initialization 08F6       __end_of_UgetNumUsuaris 0B88            __end_of_LcPutChar 0888  
              ___rparam_used 000001                __end_of_LcLCD 0A78                  ?_TiGetTimer 0047  
             __pcstackCOMRAM 0047                __end_of_Minit 0B84          __end_of_WaitForBusy 08C8  
              __end_of_Sinit 0B7C            __end_of_TiGetTics 0AA4                  _TiInitTimer 0978  
                    ??_LcLCD 005B                    ?_LcGotoXY 0054                    ?_LcLliure 0047  
                    ??_Minit 004D                      ??_Sinit 004D                    ?_TeTeclat 0047  
                _TiResetTics 0B24              ?_UgetNumUsuaris 0047                      ?_LcInit 0057  
              _CantaPartAlta 0774                      ?_SMotor 0047                      ?_TeInit 0047  
                    ?_Espera 0053                  __TiRSITimer 07DC       __size_of_MsetNovaTecla 0008  
                    LcInit@i 0059                   ??_LcGotoXY 0055                   ??_LcLliure 004C  
        __size_of_TiGetTimer 003A                 ?_LcCursorOff 0047                    ?_high_rsi 0047  
                    _LcClear 0AA4                      _CantaIR 0A16                 ?_LcNewString 004C  
                 ??_TeTeclat 0053                  _WaitForBusy 0888               ?_CantaPartAlta 0047  
                    _Columns 002A        __end_of_SsetNovaTecla 0B64              __size_of_LcInit 00DA  
                    __Hparam 0000              __size_of_SMotor 0156              __size_of_TeInit 0008  
            __size_of_Espera 0024                      __Lparam 0000                 __psmallconst 0200  
                    __pcinit 08C8                   _init_ports 0AEC                      __ramtop 0200  
                    __ptext0 09B0                      __ptext1 05BC                      __ptext2 0B84  
                    __ptext3 0B54                      __ptext4 0B3C                      __ptext5 0AA4  
                    __ptext6 0AEC                      __ptext7 0978                      __ptext8 0228  
                    __ptext9 0B5C                    _T0CONbits 000FD5                    CantaIR@IR 004E  
                    _counter 001F             LcNewString@new_s 004C              WaitForBusy@Busy 0053  
                 ??_high_rsi 0048         end_of_initialization 08F6      __size_of_CantaPartBaixa 0068  
              __Lmediumconst 0000              TiGetTics@Handle 0050                _MsetNovaTecla 0B64  
                 _novaLletra 0035              TiGetTics@actual 0051                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
                 _numUsuaris 001B                TeTeclat@files 0020                TeTeclat@state 0022  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _TRISCbits 000F94  
                  _TRISDbits 000F95              ??_CantaPartAlta 004C               ?_MsetNovaTecla 0047  
                  _CantaData 09E4                 ??_TiGetTimer 004C               __end_of_LcInit 05BC  
             __end_of_SMotor 04E2                    _LcPutChar 0836               __end_of_TeInit 0B74  
             __end_of_Espera 0AEC   __end_of_EscriuPrimeraOrdre 070C                __pidataCOMRAM 0B08  
                ?_init_ports 0047                    _ColumnAct 0028                 ?_TiInitTimer 0047  
        start_initialization 08C8                    _TiGetTics 0A78             ??_UgetNumUsuaris 004C  
          __size_of_LcGotoXY 003A           __end_of_TiGetTimer 0978            __size_of_LcLliure 000C  
               ?_TiResetTics 0047         __size_of_LcCursorOff 000C                   ?_CantaData 0047  
       __size_of_LcNewString 0008                     ??_LcInit 0058                    _NovaTecla 0036  
          __size_of_TeTeclat 0164                     ??_SMotor 0053                     ??_TeInit 004D  
               ?__TiRSITimer 0047                     ??_Espera 0055                   ?_LcPutChar 0047  
                __pbssCOMRAM 0001                   ?_TiGetTics 004C              ??_MsetNovaTecla 004C  
                   ?_LcClear 0047                     ?_CantaIR 0047               _CantaPartBaixa 070C  
          __size_of_high_rsi 002A                 ?_WaitForBusy 0047          __size_of_init_ports 001C  
         MsetNovaTecla@tecla 004C           SsetNovaTecla@tecla 004C                    __pintcode 0008  
            CantaPartBaixa@c 004D                  __smallconst 0200               __size_of_LcLCD 0030  
             __size_of_Minit 0008               __size_of_Sinit 0008       __end_of_CantaPartBaixa 0774  
                ??_CantaData 004E                     _LATBbits 000F8A                     _LATCbits 000F8B  
                   _LATDbits 000F8C                    _novaTecla 0039                  ??_LcPutChar 005A  
                   _RCONbits 000FD0                    _timerMenu 001D       __size_of_SsetNovaTecla 0008  
                   Espera@ms 0053                     _LcGotoXY 0904                     _LcLliure 0B3C  
                ??_TiGetTics 004E         __size_of_TiInitTimer 0038                 _teclaPremuda 003B  
                LcGotoXY@Row 0054                    copy_data0 08DC              ?_CantaPartBaixa 0047  
           __size_of_LcClear 0024             __size_of_CantaIR 0032                     _TeTeclat 0228  
       __size_of_TiResetTics 0018                     __Hrparam 0000                    menu@state 001C  
                   __Lrparam 0000         __size_of__TiRSITimer 005A                 ??_init_ports 004C  
                   __ptext10 0B64                     __ptext11 0B6C           _EscriuPrimeraOrdre 0692  
                   __ptext20 093E                     __ptext12 0B74                     __ptext21 0B48  
                   __ptext13 038C                     __ptext22 0888                     __ptext14 0B7C  
                   __ptext31 07DC                     __ptext23 0A16                     __ptext15 0A48  
                   __ptext24 070C                     __ptext16 0836                     __ptext25 0774  
                   __ptext17 0904                     __ptext26 0AC8                     __ptext18 09E4  
                   __ptext27 0B24                     __ptext19 04E2                     __ptext28 0A78  
                   __ptext29 0692               CantaPartAlta@c 004D                  _lletraASCII 003A  
                   _high_rsi 0008                     _s_Timers 0001                  _lletraInici 002C  
                   _menuDalt 001E          ?_EscriuPrimeraOrdre 0047                __size_of_main 0034  
              __size_of_menu 00D6        __end_of_CantaPartAlta 07DC                CantaData@Data 004E  
                   _tiTeclat 0023           __end_of_init_ports 0B08                     _setSMSon 02E0  
              _SsetNovaTecla 0B5C         __size_of_WaitForBusy 0040                     _timerSMS 0038  
                   isa$xinst 000000                     int$flags 005D         ??_EscriuPrimeraOrdre 004C  
                 LcInit@rows 0058                   _INTCONbits 000FF2                ??_LcCursorOff 0054  
              ??_LcNewString 004D                     intlevel2 0000                   LcPutChar@c 005A  
             ?_SsetNovaTecla 0047        __end_of_MsetNovaTecla 0B6C          __end_of_LcCursorOff 0B54  
                SMotor@state 0024      __size_of_UgetNumUsuaris 0004          __end_of_LcNewString 0B5C  
