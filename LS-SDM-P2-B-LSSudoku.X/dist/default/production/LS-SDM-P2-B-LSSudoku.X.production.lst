

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 10 13:01:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.32
   120                           ; Generated 02/02/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F4321 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataCOMRAM
   156  0000'                    __pidataCOMRAM:
   157                           	callstack 0
   158                           
   159                           ;initializer for _arrayZero
   160  0000' 30                 	db	48
   161  0001' 20                 	db	32
   162                           
   163                           ;initializer for _convertir
   164  0002' FA                 	db	250
   165                           
   166                           ;initializer for _novaTeclaSIO
   167  0003' FF                 	db	255
   168                           
   169                           ;initializer for _direccioSIO
   170  0004' FF                 	db	255
   171                           
   172                           ;initializer for _usuariActualSIO
   173  0005' FF                 	db	255
   174                           
   175                           ;initializer for _novaTeclaJOC
   176  0006' FF                 	db	255
   177                           
   178                           ;initializer for _usuariJoc
   179  0007' FF                 	db	255
   180                           
   181                           ;initializer for GLCDMotor@max2
   182  0008' 0F                 	db	15
   183                           
   184                           ;initializer for GLCDMotor@max1
   185  0009' 0F                 	db	15
   186                           
   187                           ;initializer for _duradaNotes
   188  000A' A8                 	db	168
   189                           
   190                           ;initializer for _usuariLoguejat
   191  000B' FF                 	db	255
   192                           
   193                           ;initializer for _novaDireccio
   194  000C' FF                 	db	255
   195                           
   196                           ;initializer for _novaLletra
   197  000D' FF                 	db	255
   198                           
   199                           ;initializer for _NovaTecla
   200  000E' FF                 	db	255
   201                           
   202                           ;initializer for _ultimaTecla
   203  000F' FF                 	db	255
   204                           
   205                           ;initializer for _novaTecla
   206  0010' FF                 	db	255
   207                           
   208                           ;initializer for _lletraASCII
   209  0011' FF                 	db	255
   210                           
   211                           ;initializer for _hora
   212  0012' 33                 	db	51
   213  0013' 30                 	db	48
   214  0014' 3A                 	db	58
   215  0015' 30                 	db	48
   216  0016' 30                 	db	48
   217  0017' 00                 	db	0
   218                           
   219                           ;initializer for _stringScore
   220  0018' 30                 	db	48
   221  0019' 30                 	db	48
   222  001A' 00                 	db	0
   223                           
   224                           	psect	idataBANK0
   225  0000'                    __pidataBANK0:
   226                           	callstack 0
   227                           
   228                           ;initializer for _lletraInici
   229  0000' 41                 	db	65
   230  0001' 44                 	db	68
   231  0002' 47                 	db	71
   232  0003' 4A                 	db	74
   233  0004' 4D                 	db	77
   234  0005' 50                 	db	80
   235  0006' 54                 	db	84
   236  0007' 57                 	db	87
   237                           
   238                           ;initializer for _registerText
   239  0008' 32                 	db	50
   240  0009' 2E                 	db	46
   241  000A' 52                 	db	82
   242  000B' 45                 	db	69
   243  000C' 47                 	db	71
   244  000D' 49                 	db	73
   245  000E' 53                 	db	83
   246  000F' 54                 	db	84
   247  0010' 45                 	db	69
   248  0011' 52                 	db	82
   249  0012' 00                 	db	0
   250                           
   251                           ;initializer for _loginText
   252  0013' 31                 	db	49
   253  0014' 2E                 	db	46
   254  0015' 4C                 	db	76
   255  0016' 4F                 	db	79
   256  0017' 47                 	db	71
   257  0018' 49                 	db	73
   258  0019' 4E                 	db	78
   259  001A' 00                 	db	0
   260                           
   261                           	psect	smallconst
   262  0000'                    __psmallconst:
   263                           	callstack 0
   264  0000' 00                 	db	0
   265  0001' 0D                 	db	13
   266  0002'                    __end_of_newLineChar:
   267                           	callstack 0
   268  0002'                    _menuList:
   269                           	callstack 0
   270  0002' 31                 	db	49
   271  0003' 2E                 	db	46
   272  0004' 50                 	db	80
   273  0005' 6C                 	db	108
   274  0006' 61                 	db	97
   275  0007' 79                 	db	121
   276  0008' 20                 	db	32
   277  0009' 61                 	db	97
   278  000A' 20                 	db	32
   279  000B' 47                 	db	71
   280  000C' 61                 	db	97
   281  000D' 6D                 	db	109
   282  000E' 65                 	db	101
   283  000F' 00                 	db	0
   284  0010' 00                 	db	0
   285  0011' 00                 	db	0
   286  0012' 00                 	db	0
   287  0013' 00                 	db	0
   288  0014' 00                 	db	0
   289  0015' 00                 	db	0
   290  0016' 00                 	db	0
   291  0017' 00                 	db	0
   292  0018' 00                 	db	0
   293  0019' 00                 	db	0
   294  001A' 00                 	db	0
   295  001B' 00                 	db	0
   296  001C' 00                 	db	0
   297  001D' 00                 	db	0
   298  001E' 00                 	db	0
   299  001F' 32                 	db	50
   300  0020' 2E                 	db	46
   301  0021' 4D                 	db	77
   302  0022' 6F                 	db	111
   303  0023' 64                 	db	100
   304  0024' 69                 	db	105
   305  0025' 66                 	db	102
   306  0026' 79                 	db	121
   307  0027' 20                 	db	32
   308  0028' 54                 	db	84
   309  0029' 69                 	db	105
   310  002A' 6D                 	db	109
   311  002B' 65                 	db	101
   312  002C' 00                 	db	0
   313  002D' 00                 	db	0
   314  002E' 00                 	db	0
   315  002F' 00                 	db	0
   316  0030' 00                 	db	0
   317  0031' 00                 	db	0
   318  0032' 00                 	db	0
   319  0033' 00                 	db	0
   320  0034' 00                 	db	0
   321  0035' 00                 	db	0
   322  0036' 00                 	db	0
   323  0037' 00                 	db	0
   324  0038' 00                 	db	0
   325  0039' 00                 	db	0
   326  003A' 00                 	db	0
   327  003B' 00                 	db	0
   328  003C' 33                 	db	51
   329  003D' 2E                 	db	46
   330  003E' 53                 	db	83
   331  003F' 68                 	db	104
   332  0040' 6F                 	db	111
   333  0041' 77                 	db	119
   334  0042' 20                 	db	32
   335  0043' 47                 	db	71
   336  0044' 65                 	db	101
   337  0045' 6E                 	db	110
   338  0046' 65                 	db	101
   339  0047' 72                 	db	114
   340  0048' 61                 	db	97
   341  0049' 6C                 	db	108
   342  004A' 20                 	db	32
   343  004B' 54                 	db	84
   344  004C' 6F                 	db	111
   345  004D' 70                 	db	112
   346  004E' 20                 	db	32
   347  004F' 35                 	db	53
   348  0050' 20                 	db	32
   349  0051' 53                 	db	83
   350  0052' 63                 	db	99
   351  0053' 6F                 	db	111
   352  0054' 72                 	db	114
   353  0055' 65                 	db	101
   354  0056' 73                 	db	115
   355  0057' 20                 	db	32
   356  0058' 00                 	db	0
   357  0059' 34                 	db	52
   358  005A' 2E                 	db	46
   359  005B' 4C                 	db	76
   360  005C' 6F                 	db	111
   361  005D' 67                 	db	103
   362  005E' 6F                 	db	111
   363  005F' 75                 	db	117
   364  0060' 74                 	db	116
   365  0061' 00                 	db	0
   366  0062' 00                 	db	0
   367  0063' 00                 	db	0
   368  0064' 00                 	db	0
   369  0065' 00                 	db	0
   370  0066' 00                 	db	0
   371  0067' 00                 	db	0
   372  0068' 00                 	db	0
   373  0069' 00                 	db	0
   374  006A' 00                 	db	0
   375  006B' 00                 	db	0
   376  006C' 00                 	db	0
   377  006D' 00                 	db	0
   378  006E' 00                 	db	0
   379  006F' 00                 	db	0
   380  0070' 00                 	db	0
   381  0071' 00                 	db	0
   382  0072' 00                 	db	0
   383  0073' 00                 	db	0
   384  0074' 00                 	db	0
   385  0075' 00                 	db	0
   386  0076' 35                 	db	53
   387  0077' 2E                 	db	46
   388  0078' 53                 	db	83
   389  0079' 68                 	db	104
   390  007A' 6F                 	db	111
   391  007B' 77                 	db	119
   392  007C' 20                 	db	32
   393  007D' 41                 	db	65
   394  007E' 6C                 	db	108
   395  007F' 6C                 	db	108
   396  0080' 20                 	db	32
   397  0081' 55                 	db	85
   398  0082' 73                 	db	115
   399  0083' 65                 	db	101
   400  0084' 72                 	db	114
   401  0085' 73                 	db	115
   402  0086' 00                 	db	0
   403  0087' 00                 	db	0
   404  0088' 00                 	db	0
   405  0089' 00                 	db	0
   406  008A' 00                 	db	0
   407  008B' 00                 	db	0
   408  008C' 00                 	db	0
   409  008D' 00                 	db	0
   410  008E' 00                 	db	0
   411  008F' 00                 	db	0
   412  0090' 00                 	db	0
   413  0091' 00                 	db	0
   414  0092' 00                 	db	0
   415  0093'                    __end_of_menuList:
   416                           	callstack 0
   417  0093'                    _teclaPremuda:
   418                           	callstack 0
   419  0093' 01                 	db	1
   420  0094' 02                 	db	2
   421  0095' 03                 	db	3
   422  0096' 04                 	db	4
   423  0097' 05                 	db	5
   424  0098' 06                 	db	6
   425  0099' 07                 	db	7
   426  009A' 08                 	db	8
   427  009B' 09                 	db	9
   428  009C' 0A                 	db	10
   429  009D' 00                 	db	0
   430  009E' 0B                 	db	11
   431  009F'                    __end_of_teclaPremuda:
   432                           	callstack 0
   433  0000                     _PIR1bits	set	3998
   434  0000                     _RCREG	set	4014
   435  0000                     _TXREG	set	4013
   436  0000                     _TXSTAbits	set	4012
   437  0000                     _ADCON0bits	set	4034
   438  0000                     _ADRESH	set	4036
   439  0000                     _ADCON2	set	4032
   440  0000                     _ADCON1	set	4033
   441  0000                     _ADCON0	set	4034
   442  0000                     _EECON2	set	4007
   443  0000                     _EEDATA	set	4008
   444  0000                     _EEADR	set	4009
   445  0000                     _T0CONbits	set	4053
   446  0000                     _TMR0L	set	4054
   447  0000                     _TMR0H	set	4055
   448  0000                     _T0CON	set	4053
   449  0000                     _INTCONbits	set	4082
   450  0000                     _RCONbits	set	4048
   451  0000                     _PORTDbits	set	3971
   452  0000                     _SPBRG	set	4015
   453  0000                     _SPBRGH	set	4016
   454  0000                     _BAUDCON	set	4024
   455  0000                     _RCSTA	set	4011
   456  0000                     _TXSTA	set	4012
   457  0000                     _EECON1bits	set	4006
   458  0000                     _LATD	set	3980
   459  0000                     _TRISD	set	3989
   460  0000                     _TRISC	set	3988
   461  0000                     _LATBbits	set	3978
   462  0000                     _TRISB	set	3987
   463  0000                     _TRISA	set	3986
   464  0000                     _PORTCbits	set	3970
   465  0000                     _LATDbits	set	3980
   466  0000                     _LATCbits	set	3979
   467  0000                     _TRISDbits	set	3989
   468  0000                     _TRISCbits	set	3988
   469  009F'                    STR_5:
   470  009F' 54                 	db	84	;'T'
   471  00A0' 49                 	db	73	;'I'
   472  00A1' 4D                 	db	77	;'M'
   473  00A2' 45                 	db	69	;'E'
   474  00A3' 20                 	db	32
   475  00A4' 52                 	db	82	;'R'
   476  00A5' 45                 	db	69	;'E'
   477  00A6' 4D                 	db	77	;'M'
   478  00A7' 41                 	db	65	;'A'
   479  00A8' 49                 	db	73	;'I'
   480  00A9' 4E                 	db	78	;'N'
   481  00AA' 49                 	db	73	;'I'
   482  00AB' 4E                 	db	78	;'N'
   483  00AC' 47                 	db	71	;'G'
   484  00AD' 3A                 	db	58	;':'
   485  00AE' 00                 	db	0
   486  00AF'                    STR_4:
   487  00AF' 4D                 	db	77	;'M'
   488  00B0' 6F                 	db	111	;'o'
   489  00B1' 64                 	db	100	;'d'
   490  00B2' 69                 	db	105	;'i'
   491  00B3' 66                 	db	102	;'f'
   492  00B4' 79                 	db	121	;'y'
   493  00B5' 20                 	db	32
   494  00B6' 54                 	db	84	;'T'
   495  00B7' 69                 	db	105	;'i'
   496  00B8' 6D                 	db	109	;'m'
   497  00B9' 65                 	db	101	;'e'
   498  00BA' 3A                 	db	58	;':'
   499  00BB' 00                 	db	0
   500  00BC'                    STR_7:
   501  00BC' 54                 	db	84	;'T'
   502  00BD' 49                 	db	73	;'I'
   503  00BE' 4D                 	db	77	;'M'
   504  00BF' 45                 	db	69	;'E'
   505  00C0' 20                 	db	32
   506  00C1' 4C                 	db	76	;'L'
   507  00C2' 45                 	db	69	;'E'
   508  00C3' 46                 	db	70	;'F'
   509  00C4' 54                 	db	84	;'T'
   510  00C5' 3A                 	db	58	;':'
   511  00C6' 20                 	db	32
   512  00C7' 00                 	db	0
   513  00C8'                    STR_3:
   514  00C8' 42                 	db	66	;'B'
   515  00C9' 59                 	db	89	;'Y'
   516  00CA' 45                 	db	69	;'E'
   517  00CB' 20                 	db	32
   518  00CC' 42                 	db	66	;'B'
   519  00CD' 59                 	db	89	;'Y'
   520  00CE' 45                 	db	69	;'E'
   521  00CF' 20                 	db	32
   522  00D0' 00                 	db	0
   523  00D1'                    STR_8:
   524  00D1' 53                 	db	83	;'S'
   525  00D2' 43                 	db	67	;'C'
   526  00D3' 4F                 	db	79	;'O'
   527  00D4' 52                 	db	82	;'R'
   528  00D5' 45                 	db	69	;'E'
   529  00D6' 3A                 	db	58	;':'
   530  00D7' 20                 	db	32
   531  00D8' 00                 	db	0
   532  00D9'                    STR_6:
   533  00D9' 45                 	db	69	;'E'
   534  00DA' 52                 	db	82	;'R'
   535  00DB' 52                 	db	82	;'R'
   536  00DC' 4F                 	db	79	;'O'
   537  00DD' 52                 	db	82	;'R'
   538  00DE' 53                 	db	83	;'S'
   539  00DF' 3A                 	db	58	;':'
   540  00E0' 00                 	db	0
   541  00E1'                    STR_2:
   542  00E1' 50                 	db	80	;'P'
   543  00E2' 53                 	db	83	;'S'
   544  00E3' 57                 	db	87	;'W'
   545  00E4' 44                 	db	68	;'D'
   546  00E5' 3A                 	db	58	;':'
   547  00E6' 20                 	db	32
   548  00E7' 00                 	db	0
   549  00E8'                    STR_1:
   550  00E8' 55                 	db	85	;'U'
   551  00E9' 53                 	db	83	;'S'
   552  00EA' 45                 	db	69	;'E'
   553  00EB' 52                 	db	82	;'R'
   554  00EC' 3A                 	db	58	;':'
   555  00ED' 20                 	db	32
   556  00EE' 00                 	db	0
   557  00EF' 00                 	db	0	; dummy byte at the end
   558  0000                     
   559                           ; #config settings
   560                           
   561                           	psect	cinit
   562  0000'                    __pcinit:
   563                           	callstack 0
   564  0000'                    start_initialization:
   565                           	callstack 0
   566  0000'                    __initialization:
   567                           	callstack 0
   568                           
   569                           ; Initialize objects allocated to BANK0 (27 bytes)
   570                           ; load TBLPTR registers with __pidataBANK0
   571  0000' 0E00'              	movlw	low __pidataBANK0
   572  0002' 6EF6               	movwf	tblptrl,c
   573  0004' 0E00'              	movlw	high __pidataBANK0
   574  0006' 6EF7               	movwf	tblptrh,c
   575  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   576  000A' 6EF8               	movwf	tblptru,c
   577  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   578  0010' EE10 F01B          	lfsr	1,27
   579  0014'                    copy_data0:
   580  0014' 0009               	tblrd		*+
   581  0016' CFF5 FFEE          	movff	tablat,postinc0
   582  001A' 50E5               	movf	postdec1,w,c
   583  001C' 50E1               	movf	fsr1l,w,c
   584  001E' E1FA               	bnz	copy_data0
   585                           
   586                           ; Initialize objects allocated to COMRAM (27 bytes)
   587                           ; load TBLPTR registers with __pidataCOMRAM
   588  0020' 0E00'              	movlw	low __pidataCOMRAM
   589  0022' 6EF6               	movwf	tblptrl,c
   590  0024' 0E00'              	movlw	high __pidataCOMRAM
   591  0026' 6EF7               	movwf	tblptrh,c
   592  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   593  002A' 6EF8               	movwf	tblptru,c
   594  002C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   595  0030' EE10 F01B          	lfsr	1,27
   596  0034'                    copy_data1:
   597  0034' 0009               	tblrd		*+
   598  0036' CFF5 FFEE          	movff	tablat,postinc0
   599  003A' 50E5               	movf	postdec1,w,c
   600  003C' 50E1               	movf	fsr1l,w,c
   601  003E' E1FA               	bnz	copy_data1
   602                           
   603                           ; Clear objects allocated to BANK1 (144 bytes)
   604  0040' EE00' F000'        	lfsr	0,__pbssBANK1
   605  0044' 0E90               	movlw	144
   606  0046'                    clear_0:
   607  0046' 6AEE               	clrf	postinc0,c
   608  0048' 06E8               	decf	wreg,f,c
   609  004A' E1FD               	bnz	clear_0
   610                           
   611                           ; Clear objects allocated to BANK0 (60 bytes)
   612  004C' EE00' F000'        	lfsr	0,__pbssBANK0
   613  0050' 0E3C               	movlw	60
   614  0052'                    clear_1:
   615  0052' 6AEE               	clrf	postinc0,c
   616  0054' 06E8               	decf	wreg,f,c
   617  0056' E1FD               	bnz	clear_1
   618                           
   619                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   620  0058' 6A00'              	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   621  005A' 6A00'              	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   622  005C' 6A00'              	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   623                           
   624                           ; Clear objects allocated to COMRAM (68 bytes)
   625  005E' EE00' F000'        	lfsr	0,__pbssCOMRAM
   626  0062' 0E44               	movlw	68
   627  0064'                    clear_2:
   628  0064' 6AEE               	clrf	postinc0,c
   629  0066' 06E8               	decf	wreg,f,c
   630  0068' E1FD               	bnz	clear_2
   631  006A'                    end_of_initialization:
   632                           	callstack 0
   633  006A'                    __end_of__initialization:
   634                           	callstack 0
   635  006A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   636  006C' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   637  006E' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   638  0070' 6EF8               	movwf	tblptru,c
   639  0072' 0100               	movlb	0
   640  0074' EF00' F000'        	goto	_main	;jump to C main() function
   641                           
   642                           	psect	bitbssCOMRAM
   643  0000'                    __pbitbssCOMRAM:
   644                           	callstack 0
   645  0000'                    _hi_ha_hora_sio2:
   646                           	callstack 0
   647  0000'                    	ds	1
   648  0001'                    _Krebut:
   649                           	callstack 0
   650  0001'                    	ds	1
   651  0002'                    _jugantSIO:
   652                           	callstack 0
   653  0002'                    	ds	1
   654  0003'                    _jugantJoc:
   655                           	callstack 0
   656  0003'                    	ds	1
   657  0004'                    _tempsAcabat:
   658                           	callstack 0
   659  0004'                    	ds	1
   660  0005'                    _nouSegon:
   661                           	callstack 0
   662  0005'                    	ds	1
   663  0006'                    _jugant:
   664                           	callstack 0
   665  0006'                    	ds	1
   666  0007'                    _cap2:
   667                           	callstack 0
   668  0007'                    	ds	1
   669  0008'                    _cap1:
   670                           	callstack 0
   671  0008'                    	ds	1
   672  0009'                    _newString:
   673                           	callstack 0
   674  0009'                    	ds	1
   675  000A'                    _ferMenu:
   676                           	callstack 0
   677  000A'                    	ds	1
   678  000B'                    _reproduir:
   679                           	callstack 0
   680  000B'                    	ds	1
   681  000C'                    _do_updateScore:
   682                           	callstack 0
   683  000C'                    	ds	1
   684  000D'                    _do_showUsers:
   685                           	callstack 0
   686  000D'                    	ds	1
   687  000E'                    _do_register:
   688                           	callstack 0
   689  000E'                    	ds	1
   690  000F'                    _do_check_exists:
   691                           	callstack 0
   692  000F'                    	ds	1
   693  0010'                    _loginNOTRegister:
   694                           	callstack 0
   695  0010'                    	ds	1
   696  0011'                    _setSMSon:
   697                           	callstack 0
   698  0011'                    	ds	1
   699  0012'                    _nou_s:
   700                           	callstack 0
   701  0012'                    	ds	1
   702                           
   703                           	psect	bssCOMRAM
   704  0000'                    __pbssCOMRAM:
   705                           	callstack 0
   706  0000'                    _horaTX:
   707                           	callstack 0
   708  0000'                    	ds	6
   709  0006'                    _userPtr:
   710                           	callstack 0
   711  0006'                    	ds	2
   712  0008'                    _h_Tics:
   713                           	callstack 0
   714  0008'                    	ds	2
   715  000A'                    _s_ptr:
   716                           	callstack 0
   717  000A'                    	ds	2
   718  000C'                    motorSIO@state:
   719                           	callstack 0
   720  000C'                    	ds	1
   721  000D'                    _mask:
   722                           	callstack 0
   723  000D'                    	ds	1
   724  000E'                    _charActu:
   725                           	callstack 0
   726  000E'                    	ds	1
   727  000F'                    _score:
   728                           	callstack 0
   729  000F'                    	ds	1
   730  0010'                    _timerSIO:
   731                           	callstack 0
   732  0010'                    	ds	1
   733  0011'                    motorJoc@state:
   734                           	callstack 0
   735  0011'                    	ds	1
   736  0012'                    _direccioJoc:
   737                           	callstack 0
   738  0012'                    	ds	1
   739  0013'                    motorHora@state:
   740                           	callstack 0
   741  0013'                    	ds	1
   742  0014'                    _segons:
   743                           	callstack 0
   744  0014'                    	ds	1
   745  0015'                    _timerHora:
   746                           	callstack 0
   747  0015'                    	ds	1
   748  0016'                    JoystickMotor@state:
   749                           	callstack 0
   750  0016'                    	ds	1
   751  0017'                    _ultimaTeclaAD:
   752                           	callstack 0
   753  0017'                    	ds	1
   754  0018'                    GLCDMotor@length2:
   755                           	callstack 0
   756  0018'                    	ds	1
   757  0019'                    GLCDMotor@length1:
   758                           	callstack 0
   759  0019'                    	ds	1
   760  001A'                    GLCDMotor@k2:
   761                           	callstack 0
   762  001A'                    	ds	1
   763  001B'                    GLCDMotor@k1:
   764                           	callstack 0
   765  001B'                    	ds	1
   766  001C'                    GLCDMotor@min2:
   767                           	callstack 0
   768  001C'                    	ds	1
   769  001D'                    GLCDMotor@min1:
   770                           	callstack 0
   771  001D'                    	ds	1
   772  001E'                    GLCDMotor@j:
   773                           	callstack 0
   774  001E'                    	ds	1
   775  001F'                    GLCDMotor@state:
   776                           	callstack 0
   777  001F'                    	ds	1
   778  0020'                    _menuDaltGLCD:
   779                           	callstack 0
   780  0020'                    	ds	1
   781  0021'                    _timerGLCD:
   782                           	callstack 0
   783  0021'                    	ds	1
   784  0022'                    motorAltaveu@state:
   785                           	callstack 0
   786  0022'                    	ds	1
   787  0023'                    _copsNota:
   788                           	callstack 0
   789  0023'                    	ds	1
   790  0024'                    _timerAltaveu:
   791                           	callstack 0
   792  0024'                    	ds	1
   793  0025'                    _nota:
   794                           	callstack 0
   795  0025'                    	ds	1
   796  0026'                    UmotorUsers@state:
   797                           	callstack 0
   798  0026'                    	ds	1
   799  0027'                    _scoreUsr:
   800                           	callstack 0
   801  0027'                    	ds	1
   802  0028'                    _j:
   803                           	callstack 0
   804  0028'                    	ds	1
   805  0029'                    _i:
   806                           	callstack 0
   807  0029'                    	ds	1
   808  002A'                    _indexNextUserStruct:
   809                           	callstack 0
   810  002A'                    	ds	1
   811  002B'                    _indexNextUser:
   812                           	callstack 0
   813  002B'                    	ds	1
   814  002C'                    _numUsuaris:
   815                           	callstack 0
   816  002C'                    	ds	1
   817  002D'                    menu@state:
   818                           	callstack 0
   819  002D'                    	ds	1
   820  002E'                    _pos:
   821                           	callstack 0
   822  002E'                    	ds	1
   823  002F'                    _indexUsuari:
   824                           	callstack 0
   825  002F'                    	ds	1
   826  0030'                    _menuDalt:
   827                           	callstack 0
   828  0030'                    	ds	1
   829  0031'                    _timerMenu:
   830                           	callstack 0
   831  0031'                    	ds	1
   832  0032'                    _tmp:
   833                           	callstack 0
   834  0032'                    	ds	1
   835  0033'                    _counter:
   836                           	callstack 0
   837  0033'                    	ds	1
   838  0034'                    TeTeclat@files:
   839                           	callstack 0
   840  0034'                    	ds	1
   841  0035'                    TeTeclat@cols:
   842                           	callstack 0
   843  0035'                    	ds	1
   844  0036'                    TeTeclat@state:
   845                           	callstack 0
   846  0036'                    	ds	1
   847  0037'                    _tiTeclat:
   848                           	callstack 0
   849  0037'                    	ds	1
   850  0038'                    SMotor@state:
   851                           	callstack 0
   852  0038'                    	ds	1
   853  0039'                    _zeroTecla:
   854                           	callstack 0
   855  0039'                    	ds	1
   856  003A'                    _timerSMS:
   857                           	callstack 0
   858  003A'                    	ds	1
   859  003B'                    _sumaPulsacions:
   860                           	callstack 0
   861  003B'                    	ds	1
   862  003C'                    _Timer:
   863                           	callstack 0
   864  003C'                    	ds	1
   865  003D'                    _ColumnAct:
   866                           	callstack 0
   867  003D'                    	ds	1
   868  003E'                    _RowAct:
   869                           	callstack 0
   870  003E'                    	ds	1
   871  003F'                    _Rows:
   872                           	callstack 0
   873  003F'                    	ds	1
   874  0040'                    _horaTmp:
   875                           	callstack 0
   876  0040'                    	ds	4
   877                           
   878                           	psect	dataCOMRAM
   879  0000'                    __pdataCOMRAM:
   880                           	callstack 0
   881  0000'                    _arrayZero:
   882                           	callstack 0
   883  0000'                    	ds	2
   884  0002'                    _convertir:
   885                           	callstack 0
   886  0002'                    	ds	1
   887  0003'                    _novaTeclaSIO:
   888                           	callstack 0
   889  0003'                    	ds	1
   890  0004'                    _direccioSIO:
   891                           	callstack 0
   892  0004'                    	ds	1
   893  0005'                    _usuariActualSIO:
   894                           	callstack 0
   895  0005'                    	ds	1
   896  0006'                    _novaTeclaJOC:
   897                           	callstack 0
   898  0006'                    	ds	1
   899  0007'                    _usuariJoc:
   900                           	callstack 0
   901  0007'                    	ds	1
   902  0008'                    GLCDMotor@max2:
   903                           	callstack 0
   904  0008'                    	ds	1
   905  0009'                    GLCDMotor@max1:
   906                           	callstack 0
   907  0009'                    	ds	1
   908  000A'                    _duradaNotes:
   909                           	callstack 0
   910  000A'                    	ds	1
   911  000B'                    _usuariLoguejat:
   912                           	callstack 0
   913  000B'                    	ds	1
   914  000C'                    _novaDireccio:
   915                           	callstack 0
   916  000C'                    	ds	1
   917  000D'                    _novaLletra:
   918                           	callstack 0
   919  000D'                    	ds	1
   920  000E'                    _NovaTecla:
   921                           	callstack 0
   922  000E'                    	ds	1
   923  000F'                    _ultimaTecla:
   924                           	callstack 0
   925  000F'                    	ds	1
   926  0010'                    _novaTecla:
   927                           	callstack 0
   928  0010'                    	ds	1
   929  0011'                    _lletraASCII:
   930                           	callstack 0
   931  0011'                    	ds	1
   932  0012'                    _hora:
   933                           	callstack 0
   934  0012'                    	ds	6
   935  0018'                    _stringScore:
   936                           	callstack 0
   937  0018'                    	ds	3
   938                           
   939                           	psect	bssBANK0
   940  0000'                    __pbssBANK0:
   941                           	callstack 0
   942  0000'                    _s_Timers:
   943                           	callstack 0
   944  0000'                    	ds	24
   945  0018'                    _puntuacions:
   946                           	callstack 0
   947  0018'                    	ds	10
   948  0022'                    _arrayShowUsers:
   949                           	callstack 0
   950  0022'                    	ds	8
   951  002A'                    _tmpPassword:
   952                           	callstack 0
   953  002A'                    	ds	9
   954  0033'                    _tmpUsername:
   955                           	callstack 0
   956  0033'                    	ds	9
   957                           
   958                           	psect	dataBANK0
   959  0000'                    __pdataBANK0:
   960                           	callstack 0
   961  0000'                    _lletraInici:
   962                           	callstack 0
   963  0000'                    	ds	8
   964  0008'                    _registerText:
   965                           	callstack 0
   966  0008'                    	ds	11
   967  0013'                    _loginText:
   968                           	callstack 0
   969  0013'                    	ds	8
   970                           
   971                           	psect	bssBANK1
   972  0000'                    __pbssBANK1:
   973                           	callstack 0
   974  0000'                    _usuaris:
   975                           	callstack 0
   976  0000'                    	ds	144
   977                           
   978                           	psect	cstackBANK0
   979  0000'                    __pcstackBANK0:
   980                           	callstack 0
   981  0000'                    ??_menu:
   982                           
   983                           ; 1 bytes @ 0x0
   984  0000'                    	ds	5
   985                           
   986                           	psect	cstackCOMRAM
   987  0000'                    __pcstackCOMRAM:
   988                           	callstack 0
   989  0000'                    
   990                           ; 1 bytes @ 0x0
   991  0000'                    	ds	1
   992  0001'                    ??_high_rsi:
   993                           
   994                           ; 1 bytes @ 0x1
   995  0001'                    	ds	4
   996  0005'                    ??_EscriuPrimeraOrdre:
   997  0005'                    ??_CantaPartAlta:
   998  0005'                    ??_CantaPartBaixa:
   999  0005'                    ?_TiGetTics:
  1000                           	callstack 0
  1001  0005'                    ?_UgetUserName:
  1002                           	callstack 0
  1003  0005'                    ?_getArrayShowUsers:
  1004                           	callstack 0
  1005  0005'                    SsetNovaTecla@tecla:
  1006                           	callstack 0
  1007  0005'                    TiResetTics@Handle:
  1008                           	callstack 0
  1009  0005'                    MsetNovaTecla@tecla:
  1010                           	callstack 0
  1011  0005'                    MNovaLletra@lletra:
  1012                           	callstack 0
  1013  0005'                    MNouJoystick@posicio:
  1014                           	callstack 0
  1015  0005'                    UenviaChar@pos:
  1016                           	callstack 0
  1017  0005'                    UenviaPas@pos:
  1018                           	callstack 0
  1019  0005'                    escriureCharEEPROM@pos:
  1020                           	callstack 0
  1021  0005'                    llegirCharEEPROM@pos:
  1022                           	callstack 0
  1023  0005'                    compareStrings@a:
  1024                           	callstack 0
  1025  0005'                    UgetScore@quin:
  1026                           	callstack 0
  1027  0005'                    UgetTop5@quin:
  1028                           	callstack 0
  1029  0005'                    UnewScore@scoretmp:
  1030                           	callstack 0
  1031  0005'                    GLCDMostraMenu@num:
  1032                           	callstack 0
  1033  0005'                    HActualitzaHora@nova:
  1034                           	callstack 0
  1035  0005'                    JJuguem@usuari:
  1036                           	callstack 0
  1037  0005'                    JnovaTecla@tecla:
  1038                           	callstack 0
  1039  0005'                    JnovaDireccio@dir:
  1040                           	callstack 0
  1041  0005'                    conversorJoystick@direc:
  1042                           	callstack 0
  1043  0005'                    SIONovaDireccio@num:
  1044                           	callstack 0
  1045  0005'                    SIOStartGame@usuari:
  1046                           	callstack 0
  1047  0005'                    SIONovaTecla@tecla:
  1048                           	callstack 0
  1049  0005'                    CToAConverteix@numero:
  1050                           	callstack 0
  1051  0005'                    ___lbdiv@divisor:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x5
  1055  0005'                    	ds	1
  1056  0006'                    ??_JoystickMotor:
  1057  0006'                    CantaPartAlta@c:
  1058                           	callstack 0
  1059  0006'                    CantaPartBaixa@c:
  1060                           	callstack 0
  1061  0006'                    EscriuPrimeraOrdre@ordre:
  1062                           	callstack 0
  1063  0006'                    UenviaChar@c:
  1064                           	callstack 0
  1065  0006'                    UenviaPas@c:
  1066                           	callstack 0
  1067  0006'                    escriureCharEEPROM@c:
  1068                           	callstack 0
  1069  0006'                    ___lbdiv@dividend:
  1070                           	callstack 0
  1071  0006'                    compareStrings@b:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x6
  1075  0006'                    	ds	1
  1076  0007'                    ??_TiGetTics:
  1077  0007'                    ??_getArrayShowUsers:
  1078  0007'                    CantaIR@IR:
  1079                           	callstack 0
  1080  0007'                    CantaData@Data:
  1081                           	callstack 0
  1082  0007'                    UgetUserName@quin:
  1083                           	callstack 0
  1084  0007'                    ___lbdiv@counter:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x7
  1088  0007'                    	ds	1
  1089  0008'                    ??_compareStrings:
  1090  0008'                    getArrayShowUsers@quin:
  1091                           	callstack 0
  1092  0008'                    ___lbdiv@quotient:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x8
  1096  0008'                    	ds	1
  1097  0009'                    ??_Uinit:
  1098  0009'                    TiGetTics@Handle:
  1099                           	callstack 0
  1100  0009'                    LcNewString@new_s:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x9
  1104  0009'                    	ds	1
  1105  000A'                    ??_UmotorUsers:
  1106  000A'                    TiGetTics@actual:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xA
  1110  000A'                    	ds	1
  1111  000B'                    Uinit@k:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0xB
  1115  000B'                    	ds	1
  1116  000C'                    ??_motorHora:
  1117  000C'                    ??_motorAltaveu:
  1118  000C'                    ??_TeTeclat:
  1119  000C'                    ??_SMotor:
  1120  000C'                    WaitForBusy@Busy:
  1121                           	callstack 0
  1122  000C'                    Uinit@k_1176:
  1123                           	callstack 0
  1124  000C'                    Espera@ms:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0xC
  1128  000C'                    	ds	1
  1129  000D'                    LcGotoXY@Row:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0xD
  1133  000D'                    	ds	1
  1134  000E'                    ??_Espera:
  1135  000E'                    LcGotoXY@Fisics:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0xE
  1139  000E'                    	ds	1
  1140  000F'                    Espera@Timer:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0xF
  1144  000F'                    	ds	1
  1145  0010'                    LcInit@rows:
  1146                           	callstack 0
  1147  0010'                    _LcGotoXY$334:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x10
  1151  0010'                    	ds	1
  1152  0011'                    LcInit@i:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x11
  1156  0011'                    	ds	1
  1157  0012'                    LcGotoXY@Column:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x12
  1161  0012'                    	ds	1
  1162  0013'                    ??_motorJoc:
  1163  0013'                    LcPutChar@c:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x13
  1167  0013'                    	ds	1
  1168  0014'                    ??_GLCDMotor:
  1169  0014'                    ??_motorSIO:
  1170  0014'                    
  1171                           ; 1 bytes @ 0x14
  1172  0014'                    	ds	2
  1173  0016'                    
  1174                           ; 1 bytes @ 0x16
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1177 ;;
  1178 ;; *************** function _main *****************
  1179 ;; Defined at:
  1180 ;;		line 75 in file "main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1
  1194 ;;      Params:         0       0       0
  1195 ;;      Locals:         0       0       0
  1196 ;;      Temps:          0       0       0
  1197 ;;      Totals:         0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels required when called: 7
  1200 ;; This function calls:
  1201 ;;		_CtoA
  1202 ;;		_GLCDInit
  1203 ;;		_GLCDMotor
  1204 ;;		_JoystickInit
  1205 ;;		_JoystickMotor
  1206 ;;		_LcInit
  1207 ;;		_LcLCD
  1208 ;;		_Minit
  1209 ;;		_SMotor
  1210 ;;		_Sinit
  1211 ;;		_TeInit
  1212 ;;		_TeTeclat
  1213 ;;		_TiInitTimer
  1214 ;;		_Uinit
  1215 ;;		_UmotorUsers
  1216 ;;		_initAltaveu
  1217 ;;		_initHora
  1218 ;;		_initSIO
  1219 ;;		_init_eusart
  1220 ;;		_init_ports
  1221 ;;		_menu
  1222 ;;		_motorAltaveu
  1223 ;;		_motorHora
  1224 ;;		_motorJoc
  1225 ;;		_motorSIO
  1226 ;; This function is called by:
  1227 ;;		Startup code after reset
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text0
  1232  0000'                    __ptext0:
  1233                           	callstack 0
  1234  0000'                    _main:
  1235                           	callstack 24
  1236                           
  1237                           ;main.c: 76:     init_ports();
  1238                           
  1239                           ;incstack = 0
  1240  0000' EC00' F000'        	call	_init_ports	;wreg free
  1241                           
  1242                           ;main.c: 77:     init_eusart();
  1243  0004' EC00' F000'        	call	_init_eusart	;wreg free
  1244                           
  1245                           ;main.c: 78:     TiInitTimer();
  1246  0008' EC00' F000'        	call	_TiInitTimer	;wreg free
  1247                           
  1248                           ;main.c: 79:     TeInit();
  1249  000C' EC00' F000'        	call	_TeInit	;wreg free
  1250                           
  1251                           ;main.c: 80:     Sinit();
  1252  0010' EC00' F000'        	call	_Sinit	;wreg free
  1253                           
  1254                           ;main.c: 82:     initAltaveu();
  1255  0014' EC00' F000'        	call	_initAltaveu	;wreg free
  1256                           
  1257                           ;main.c: 83:     GLCDInit();
  1258  0018' EC00' F000'        	call	_GLCDInit	;wreg free
  1259                           
  1260                           ;main.c: 84:     JoystickInit();
  1261  001C' EC00' F000'        	call	_JoystickInit	;wreg free
  1262                           
  1263                           ;main.c: 85:     initHora();
  1264  0020' EC00' F000'        	call	_initHora	;wreg free
  1265                           
  1266                           ;main.c: 86:     initSIO();
  1267  0024' EC00' F000'        	call	_initSIO	;wreg free
  1268                           
  1269                           ;main.c: 88:     LcInit(2);
  1270  0028' 0E02               	movlw	2
  1271  002A' EC00' F000'        	call	_LcInit
  1272                           
  1273                           ;main.c: 89:     Uinit();
  1274  002E' EC00' F000'        	call	_Uinit	;wreg free
  1275                           
  1276                           ;main.c: 90:     Minit();
  1277  0032' EC00' F000'        	call	_Minit	;wreg free
  1278  0036'                    l7218:
  1279                           
  1280                           ;main.c: 92:         GLCDMotor();
  1281  0036' EC00' F000'        	call	_GLCDMotor	;wreg free
  1282                           
  1283                           ;main.c: 93:         motorJoc();
  1284  003A' EC00' F000'        	call	_motorJoc	;wreg free
  1285                           
  1286                           ;main.c: 94:         motorSIO();
  1287  003E' EC00' F000'        	call	_motorSIO	;wreg free
  1288                           
  1289                           ;main.c: 95:         motorHora();
  1290  0042' EC00' F000'        	call	_motorHora	;wreg free
  1291                           
  1292                           ;main.c: 96:         JoystickMotor();
  1293  0046' EC00' F000'        	call	_JoystickMotor	;wreg free
  1294                           
  1295                           ;main.c: 97:         menu();
  1296  004A' EC00' F000'        	call	_menu	;wreg free
  1297                           
  1298                           ;main.c: 98:         CtoA();
  1299  004E' EC00' F000'        	call	_CtoA	;wreg free
  1300                           
  1301                           ;main.c: 99:         motorAltaveu();
  1302  0052' EC00' F000'        	call	_motorAltaveu	;wreg free
  1303                           
  1304                           ;main.c: 100:         UmotorUsers();
  1305  0056' EC00' F000'        	call	_UmotorUsers	;wreg free
  1306                           
  1307                           ;main.c: 102:         TeTeclat();
  1308  005A' EC00' F000'        	call	_TeTeclat	;wreg free
  1309                           
  1310                           ;main.c: 103:         SMotor();
  1311  005E' EC00' F000'        	call	_SMotor	;wreg free
  1312                           
  1313                           ;main.c: 104:         LcLCD();
  1314  0062' EC00' F000'        	call	_LcLCD	;wreg free
  1315  0066' D7E7               	goto	l7218
  1316  0068'                    __end_of_main:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _motorSIO *****************
  1320 ;; Defined at:
  1321 ;;		line 50 in file "SIO.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1
  1335 ;;      Params:         0       0       0
  1336 ;;      Locals:         0       0       0
  1337 ;;      Temps:          2       0       0
  1338 ;;      Totals:         2       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 6
  1342 ;; This function calls:
  1343 ;;		_CToAConverteix
  1344 ;;		_CToAHaAcabat
  1345 ;;		_CToAobtenir
  1346 ;;		_HGetTime
  1347 ;;		_LcClear
  1348 ;;		_LcGotoXY
  1349 ;;		_LcLliure
  1350 ;;		_LcNewString
  1351 ;;		_LcPutChar
  1352 ;;		_TiGetTics
  1353 ;;		_TiResetTics
  1354 ;;		_UgetUserName
  1355 ;;		_UnewScore
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text1
  1362  0000'                    __ptext1:
  1363                           	callstack 0
  1364  0000'                    _motorSIO:
  1365                           	callstack 24
  1366                           
  1367                           ;SIO.c: 51:     static char state = 0;;SIO.c: 53:  switch(state) {
  1368                           
  1369                           ;incstack = 0
  1370  0000' D15A               	goto	l5320
  1371  0002'                    l5142:
  1372                           
  1373                           ;SIO.c: 55:    if (usuariActualSIO > -1) {
  1374  0002' BE00'              	btfsc	_usuariActualSIO^0,7,c
  1375  0004' 0012               	return	
  1376                           
  1377                           ;SIO.c: 56:     userPtr = UgetUserName(usuariActualSIO);
  1378  0006' 5000'              	movf	_usuariActualSIO^0,w,c
  1379  0008' EC00' F000'        	call	_UgetUserName
  1380  000C' C005' F006'        	movff	?_UgetUserName,_userPtr
  1381  0010' C006' F007'        	movff	?_UgetUserName+1,_userPtr+1
  1382                           
  1383                           ;SIO.c: 57:     jugantSIO = 1;
  1384  0014' 8000'              	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1385                           
  1386                           ;SIO.c: 58:     Krebut = 0;
  1387  0016' 9000'              	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1388  0018'                    l5150:
  1389                           
  1390                           ;SIO.c: 59:     state++;
  1391  0018' 2A00'              	incf	motorSIO@state^0,f,c
  1392                           
  1393                           ;SIO.c: 61:   break;
  1394                           
  1395                           ;SIO.c: 60:    }
  1396  001A' 0012               	return	
  1397  001C'                    l5152:
  1398                           
  1399                           ;SIO.c: 63:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1400  001C' C006' FFD9         	movff	_userPtr,fsr2l
  1401  0020' C007' FFDA         	movff	_userPtr+1,fsr2h
  1402  0024' 50DF               	movf	indf2,w,c
  1403  0026' B4D8               	btfsc	status,2,c
  1404  0028' A2AC               	btfss	172,1,c	;volatile
  1405  002A' D002               	goto	l5160
  1406                           
  1407                           ;SIO.c: 64:     TXREG = '\0';
  1408  002C' 0E00               	movlw	0
  1409  002E' D03E               	goto	L1
  1410  0030'                    l5160:
  1411  0030' C006' FFD9         	movff	_userPtr,fsr2l
  1412  0034' C007' FFDA         	movff	_userPtr+1,fsr2h
  1413  0038' 50DF               	movf	indf2,w,c
  1414  003A' B4D8               	btfsc	status,2,c
  1415  003C' 0012               	return	
  1416  003E' A2AC               	btfss	172,1,c	;volatile
  1417  0040' 0012               	return	
  1418                           
  1419                           ;SIO.c: 69:     TXREG = *userPtr;
  1420  0042' C006' FFD9         	movff	_userPtr,fsr2l
  1421  0046' C007' FFDA         	movff	_userPtr+1,fsr2h
  1422  004A' 50DF               	movf	indf2,w,c
  1423  004C' 6EAD               	movwf	173,c	;volatile
  1424                           
  1425                           ;SIO.c: 70:     userPtr++;
  1426  004E' 4A00'              	infsnz	_userPtr^0,f,c
  1427  0050' 2A00'              	incf	(_userPtr+1)^0,f,c
  1428  0052' 0012               	return	
  1429  0054'                    l5168:
  1430                           
  1431                           ;SIO.c: 74:    if (RCREG == 'K') {
  1432  0054' 0E4B               	movlw	75
  1433  0056' 18AE               	xorwf	174,w,c
  1434  0058' A4D8               	btfss	status,2,c
  1435  005A' 0012               	return	
  1436                           
  1437                           ;SIO.c: 75:     Krebut = 1;
  1438  005C' 8000'              	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1439  005E' D7DC               	goto	l5150
  1440  0060'                    l5174:
  1441                           
  1442                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1443  0060' 2800'              	incf	_direccioSIO^0,w,c
  1444  0062' A4D8               	btfss	status,2,c
  1445  0064' A2AC               	btfss	172,1,c	;volatile
  1446  0066' D004               	goto	l5180
  1447                           
  1448                           ;SIO.c: 81:     TXREG = direccioSIO;
  1449  0068' C004' FFAD         	movff	_direccioSIO,4013	;volatile
  1450                           
  1451                           ;SIO.c: 82:     direccioSIO = -1;
  1452  006C' 6800'              	setf	_direccioSIO^0,c
  1453                           
  1454                           ;SIO.c: 84:    }
  1455  006E' 0012               	return	
  1456  0070'                    l5180:
  1457  0070' 0E30               	movlw	48
  1458  0072' 6400'              	cpfsgt	_novaTeclaSIO^0,c
  1459  0074' D00A               	goto	l1290
  1460  0076' 0E3A               	movlw	58
  1461  0078' 6000'              	cpfslt	_novaTeclaSIO^0,c
  1462  007A' D007               	goto	l1290
  1463  007C' A2AC               	btfss	172,1,c	;volatile
  1464  007E' D005               	goto	l1290
  1465                           
  1466                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1467  0080' C003' FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1468                           
  1469                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1470  0084' 0E00               	movlw	0
  1471  0086' 6E00'              	movwf	_novaTeclaSIO^0,c
  1472                           
  1473                           ;SIO.c: 89:    }
  1474  0088' 0012               	return	
  1475  008A'                    l1290:
  1476  008A' B000'              	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1477  008C' D002               	goto	u4830
  1478  008E' B2AC               	btfsc	172,1,c	;volatile
  1479  0090' D002               	goto	u4840
  1480  0092'                    u4830:
  1481  0092' AA9E               	btfss	158,5,c	;volatile
  1482  0094' D00F               	goto	l1292
  1483  0096'                    u4840:
  1484                           
  1485                           ;SIO.c: 91:     LcClear();
  1486  0096' EC00' F000'        	call	_LcClear	;wreg free
  1487                           
  1488                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1489  009A' 0E00'              	movlw	low STR_6
  1490  009C' 6E00'              	movwf	LcNewString@new_s^0,c
  1491  009E' 5000'              	movf	LcNewString@new_s^0,w,c
  1492  00A0' A4D8               	btfss	status,2,c
  1493  00A2' 0E00'              	movlw	high __smallconst
  1494  00A4' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1495  00A6' EC00' F000'        	call	_LcNewString	;wreg free
  1496                           
  1497                           ;SIO.c: 93:     TXREG = 'F';
  1498  00AA' 0E46               	movlw	70
  1499  00AC'                    L1:
  1500  00AC' 6EAD               	movwf	173,c	;volatile
  1501                           
  1502                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1503  00AE' 0E00               	movlw	0
  1504  00B0' 6E00'              	movwf	_novaTeclaSIO^0,c
  1505  00B2' D7B2               	goto	l5150
  1506  00B4'                    l1292:
  1507  00B4' A000'              	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1508  00B6' 0012               	return	
  1509                           
  1510                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1511  00B8' EC00' F000'        	call	_HGetTime	;wreg free
  1512  00BC' 6ED9               	movwf	fsr2l,c
  1513  00BE' 6ADA               	clrf	fsr2h,c
  1514  00C0' 50DF               	movf	indf2,w,c
  1515  00C2' 6E00'              	movwf	_horaTX^0,c
  1516                           
  1517                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1518  00C4' EC00' F000'        	call	_HGetTime	;wreg free
  1519  00C8' 6ED9               	movwf	fsr2l,c
  1520  00CA' 6ADA               	clrf	fsr2h,c
  1521  00CC' 0E01               	movlw	1
  1522  00CE' 26D9               	addwf	fsr2l,f,c
  1523  00D0' 50DF               	movf	indf2,w,c
  1524  00D2' 6E00'              	movwf	(_horaTX+1)^0,c
  1525                           
  1526                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1527  00D4' EC00' F000'        	call	_HGetTime	;wreg free
  1528  00D8' 6ED9               	movwf	fsr2l,c
  1529  00DA' 6ADA               	clrf	fsr2h,c
  1530  00DC' 0E02               	movlw	2
  1531  00DE' 26D9               	addwf	fsr2l,f,c
  1532  00E0' 50DF               	movf	indf2,w,c
  1533  00E2' 6E00'              	movwf	(_horaTX+2)^0,c
  1534                           
  1535                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1536  00E4' EC00' F000'        	call	_HGetTime	;wreg free
  1537  00E8' 6ED9               	movwf	fsr2l,c
  1538  00EA' 6ADA               	clrf	fsr2h,c
  1539  00EC' 0E03               	movlw	3
  1540  00EE' 26D9               	addwf	fsr2l,f,c
  1541  00F0' 50DF               	movf	indf2,w,c
  1542  00F2' 6E00'              	movwf	(_horaTX+3)^0,c
  1543                           
  1544                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1545  00F4' EC00' F000'        	call	_HGetTime	;wreg free
  1546  00F8' 6ED9               	movwf	fsr2l,c
  1547  00FA' 6ADA               	clrf	fsr2h,c
  1548  00FC' 0E04               	movlw	4
  1549  00FE' 26D9               	addwf	fsr2l,f,c
  1550  0100' 50DF               	movf	indf2,w,c
  1551  0102' 6E00'              	movwf	(_horaTX+4)^0,c
  1552                           
  1553                           ;SIO.c: 103:     horaTX[5] = newLineChar;
  1554  0104' 0E0D               	movlw	13
  1555  0106' 6E00'              	movwf	(_horaTX+5)^0,c
  1556                           
  1557                           ;SIO.c: 104:     mask = 1;
  1558  0108' 0E01               	movlw	1
  1559  010A' 6E00'              	movwf	_mask^0,c
  1560                           
  1561                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1562  010C' 5000'              	movf	_timerSIO^0,w,c
  1563  010E' EC00' F000'        	call	_TiResetTics
  1564                           
  1565                           ;SIO.c: 106:     charActu = 0;
  1566  0112' 0E00               	movlw	0
  1567  0114' 6E00'              	movwf	_charActu^0,c
  1568                           
  1569                           ;SIO.c: 107:     state = 10;
  1570  0116' 0E0A               	movlw	10
  1571  0118' 6E00'              	movwf	motorSIO@state^0,c
  1572  011A' 0012               	return	
  1573  011C'                    l1299:
  1574                           
  1575                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1576  011C' AA9E               	btfss	158,5,c	;volatile
  1577  011E' 0012               	return	
  1578                           
  1579                           ;SIO.c: 112:     score = RCREG;
  1580  0120' CFAE F00F'         	movff	4014,_score	;volatile
  1581                           
  1582                           ;SIO.c: 113:     UnewScore(score);
  1583  0124' 5000'              	movf	_score^0,w,c
  1584  0126' EC00' F000'        	call	_UnewScore
  1585                           
  1586                           ;SIO.c: 114:     CToAConverteix(score);
  1587  012A' 5000'              	movf	_score^0,w,c
  1588  012C' EC00' F000'        	call	_CToAConverteix
  1589                           
  1590                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1591  0130' 5000'              	movf	_timerSIO^0,w,c
  1592  0132' EC00' F000'        	call	_TiResetTics
  1593  0136' D770               	goto	l5150
  1594  0138'                    l5230:
  1595                           
  1596                           ;SIO.c: 120:    if (TiGetTics(timerSIO) > 2490) {
  1597  0138' 5000'              	movf	_timerSIO^0,w,c
  1598  013A' EC00' F000'        	call	_TiGetTics
  1599  013E' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1600  0140' D013               	goto	l5238
  1601  0142' 0EBB               	movlw	187
  1602  0144' 5C00'              	subwf	?_TiGetTics^0,w,c
  1603  0146' 0E09               	movlw	9
  1604  0148' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  1605  014A' A0D8               	btfss	status,0,c
  1606  014C' D00D               	goto	l5238
  1607                           
  1608                           ;SIO.c: 121:     LcClear();
  1609  014E' EC00' F000'        	call	_LcClear	;wreg free
  1610                           
  1611                           ;SIO.c: 122:     LcNewString("TIME LEFT: ");
  1612  0152' 0E00'              	movlw	low STR_7
  1613  0154' 6E00'              	movwf	LcNewString@new_s^0,c
  1614  0156' 5000'              	movf	LcNewString@new_s^0,w,c
  1615  0158' A4D8               	btfss	status,2,c
  1616  015A' 0E00'              	movlw	high __smallconst
  1617  015C' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1618  015E' EC00' F000'        	call	_LcNewString	;wreg free
  1619                           
  1620                           ;SIO.c: 123:     state = 7;
  1621  0162' 0E07               	movlw	7
  1622  0164' 6E00'              	movwf	motorSIO@state^0,c
  1623                           
  1624                           ;SIO.c: 124:    }
  1625  0166' 0012               	return	
  1626  0168'                    l5238:
  1627  0168' 5000'              	movf	_timerSIO^0,w,c
  1628  016A' EC00' F000'        	call	_TiGetTics
  1629  016E' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1630  0170' D006               	goto	u4880
  1631  0172' 0EBA               	movlw	186
  1632  0174' 5C00'              	subwf	?_TiGetTics^0,w,c
  1633  0176' 0E09               	movlw	9
  1634  0178' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  1635  017A' B0D8               	btfsc	status,0,c
  1636  017C' 0012               	return	
  1637  017E'                    u4880:
  1638  017E' AA9E               	btfss	158,5,c	;volatile
  1639  0180' 0012               	return	
  1640  0182' EC00' F000'        	call	_LcLliure	;wreg free
  1641  0186' A0D8               	btfss	status,0,c
  1642  0188' 0012               	return	
  1643                           
  1644                           ;SIO.c: 126:     LcGotoXY(0,1);
  1645  018A' 0E01               	movlw	1
  1646  018C' 6E00'              	movwf	LcGotoXY@Row^0,c
  1647  018E' 0E00               	movlw	0
  1648  0190' EC00' F000'        	call	_LcGotoXY
  1649                           
  1650                           ;SIO.c: 127:     LcPutChar(RCREG);
  1651  0194' 50AE               	movf	174,w,c	;volatile
  1652  0196' EC00' F000'        	call	_LcPutChar
  1653  019A' D73E               	goto	l5150
  1654  019C'                    l5248:
  1655                           
  1656                           ;SIO.c: 132:    if (LcLliure()) {
  1657  019C' EC00' F000'        	call	_LcLliure	;wreg free
  1658  01A0' A0D8               	btfss	status,0,c
  1659  01A2' 0012               	return	
  1660                           
  1661                           ;SIO.c: 133:     LcNewString(HGetTime());
  1662  01A4' EC00' F000'        	call	_HGetTime	;wreg free
  1663  01A8' 6E00'              	movwf	??_motorSIO^0,c
  1664  01AA' C014' F009'        	movff	??_motorSIO,LcNewString@new_s
  1665  01AE' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  1666  01B0' EC00' F000'        	call	_LcNewString	;wreg free
  1667  01B4' D731               	goto	l5150
  1668  01B6'                    l1307:
  1669                           
  1670                           ;SIO.c: 138:    if (PIR1bits.RCIF) {
  1671  01B6' AA9E               	btfss	158,5,c	;volatile
  1672  01B8' 0012               	return	
  1673                           
  1674                           ;SIO.c: 139:     LcPutChar(RCREG);
  1675  01BA' 50AE               	movf	174,w,c	;volatile
  1676  01BC' EC00' F000'        	call	_LcPutChar
  1677                           
  1678                           ;SIO.c: 140:     TiResetTics(timerSIO);
  1679  01C0' 5000'              	movf	_timerSIO^0,w,c
  1680  01C2' EC00' F000'        	call	_TiResetTics
  1681  01C6'                    l5256:
  1682                           
  1683                           ;SIO.c: 141:     state--;
  1684  01C6' 0600'              	decf	motorSIO@state^0,f,c
  1685  01C8' 0012               	return	
  1686  01CA'                    l5258:
  1687                           
  1688                           ;SIO.c: 145:    if (LcLliure()) {
  1689  01CA' EC00' F000'        	call	_LcLliure	;wreg free
  1690  01CE' A0D8               	btfss	status,0,c
  1691  01D0' 0012               	return	
  1692                           
  1693                           ;SIO.c: 146:     LcGotoXY(0,1);
  1694  01D2' 0E01               	movlw	1
  1695  01D4' 6E00'              	movwf	LcGotoXY@Row^0,c
  1696  01D6' 0E00               	movlw	0
  1697  01D8' EC00' F000'        	call	_LcGotoXY
  1698                           
  1699                           ;SIO.c: 147:     LcNewString("SCORE: ");
  1700  01DC' 0E00'              	movlw	low STR_8
  1701  01DE' 6E00'              	movwf	LcNewString@new_s^0,c
  1702  01E0' 5000'              	movf	LcNewString@new_s^0,w,c
  1703  01E2' A4D8               	btfss	status,2,c
  1704  01E4' 0E00'              	movlw	high __smallconst
  1705  01E6' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1706  01E8' EC00' F000'        	call	_LcNewString	;wreg free
  1707  01EC' D715               	goto	l5150
  1708  01EE'                    l5266:
  1709                           
  1710                           ;SIO.c: 152:    if (LcLliure() && CToAHaAcabat() == 250) {
  1711  01EE' EC00' F000'        	call	_LcLliure	;wreg free
  1712  01F2' A0D8               	btfss	status,0,c
  1713  01F4' 0012               	return	
  1714  01F6' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  1715  01FA' 0AFA               	xorlw	250
  1716  01FC' A4D8               	btfss	status,2,c
  1717  01FE' 0012               	return	
  1718                           
  1719                           ;SIO.c: 153:     LcNewString(CToAobtenir());
  1720  0200' EC00' F000'        	call	_CToAobtenir	;wreg free
  1721  0204' 6E00'              	movwf	??_motorSIO^0,c
  1722  0206' C014' F009'        	movff	??_motorSIO,LcNewString@new_s
  1723  020A' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  1724  020C' EC00' F000'        	call	_LcNewString	;wreg free
  1725                           
  1726                           ;SIO.c: 154:     usuariActualSIO = -1;
  1727  0210' 6800'              	setf	_usuariActualSIO^0,c
  1728                           
  1729                           ;SIO.c: 155:     state = 0;
  1730  0212' 0E00               	movlw	0
  1731  0214' 6E00'              	movwf	motorSIO@state^0,c
  1732  0216' 0012               	return	
  1733  0218'                    l5276:
  1734                           
  1735                           ;SIO.c: 159:    if (charActu == 6) {
  1736  0218' 0E06               	movlw	6
  1737  021A' 1800'              	xorwf	_charActu^0,w,c
  1738  021C' A4D8               	btfss	status,2,c
  1739  021E' D004               	goto	l5282
  1740                           
  1741                           ;SIO.c: 160:     hi_ha_hora_sio2 = 0;
  1742  0220' 9000'              	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1743                           
  1744                           ;SIO.c: 161:     state = 3;
  1745  0222' 0E03               	movlw	3
  1746  0224' 6E00'              	movwf	motorSIO@state^0,c
  1747                           
  1748                           ;SIO.c: 162:    }
  1749  0226' 0012               	return	
  1750  0228'                    l5282:
  1751  0228' 0E06               	movlw	6
  1752  022A' 6000'              	cpfslt	_charActu^0,c
  1753  022C' 0012               	return	
  1754  022E' 5000'              	movf	_timerSIO^0,w,c
  1755  0230' EC00' F000'        	call	_TiGetTics
  1756  0234' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1757  0236' 0012               	return	
  1758  0238' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  1759  023A' E103               	bnz	u4980
  1760  023C' 0400'              	decf	?_TiGetTics^0,w,c
  1761  023E' A0D8               	btfss	status,0,c
  1762  0240' 0012               	return	
  1763  0242'                    u4980:
  1764                           
  1765                           ;SIO.c: 164:     LATBbits.LATB1 = 0;
  1766  0242' 928A               	bcf	138,1,c	;volatile
  1767                           
  1768                           ;SIO.c: 165:     TiResetTics(timerSIO);
  1769  0244' 5000'              	movf	_timerSIO^0,w,c
  1770  0246' EC00' F000'        	call	_TiResetTics
  1771  024A' D6E6               	goto	l5150
  1772  024C'                    l5292:
  1773                           
  1774                           ;SIO.c: 171:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1775  024C' 5000'              	movf	_mask^0,w,c
  1776  024E' A4D8               	btfss	status,2,c
  1777  0250' D012               	goto	l5306
  1778  0252' 5000'              	movf	_timerSIO^0,w,c
  1779  0254' EC00' F000'        	call	_TiGetTics
  1780  0258' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1781  025A' D00D               	goto	l5306
  1782  025C' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  1783  025E' E103               	bnz	u5000
  1784  0260' 0400'              	decf	?_TiGetTics^0,w,c
  1785  0262' A0D8               	btfss	status,0,c
  1786  0264' D008               	goto	l5306
  1787  0266'                    u5000:
  1788                           
  1789                           ;SIO.c: 172:     mask = 1;
  1790  0266' 0E01               	movlw	1
  1791  0268' 6E00'              	movwf	_mask^0,c
  1792                           
  1793                           ;SIO.c: 173:     charActu++;
  1794  026A' 2A00'              	incf	_charActu^0,f,c
  1795                           
  1796                           ;SIO.c: 174:     LATBbits.LATB1 = 1;
  1797  026C' 828A               	bsf	138,1,c	;volatile
  1798                           
  1799                           ;SIO.c: 175:     TiResetTics(timerSIO);
  1800  026E' 5000'              	movf	_timerSIO^0,w,c
  1801  0270' EC00' F000'        	call	_TiResetTics
  1802  0274' D7A8               	goto	l5256
  1803  0276'                    l5306:
  1804  0276' 5000'              	movf	_timerSIO^0,w,c
  1805  0278' EC00' F000'        	call	_TiGetTics
  1806  027C' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1807  027E' 0012               	return	
  1808  0280' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  1809  0282' E103               	bnz	u5010
  1810  0284' 0400'              	decf	?_TiGetTics^0,w,c
  1811  0286' A0D8               	btfss	status,0,c
  1812  0288' 0012               	return	
  1813  028A'                    u5010:
  1814  028A' 5000'              	movf	_mask^0,w,c
  1815  028C' B4D8               	btfsc	status,2,c
  1816  028E' 0012               	return	
  1817                           
  1818                           ;SIO.c: 179:     if(mask & horaTX[charActu]){
  1819  0290' 5000'              	movf	_charActu^0,w,c
  1820  0292' 0F00'              	addlw	low _horaTX
  1821  0294' 6ED9               	movwf	fsr2l,c
  1822  0296' 6ADA               	clrf	fsr2h,c
  1823  0298' 50DF               	movf	indf2,w,c
  1824  029A' 1400'              	andwf	_mask^0,w,c
  1825  029C' 0900               	iorlw	0
  1826  029E' B4D8               	btfsc	status,2,c
  1827  02A0' D002               	goto	l1321
  1828                           
  1829                           ;SIO.c: 180:        LATBbits.LATB1 = 1;
  1830  02A2' 828A               	bsf	138,1,c	;volatile
  1831                           
  1832                           ;SIO.c: 181:       }else{
  1833  02A4' D001               	goto	l5314
  1834  02A6'                    l1321:
  1835                           
  1836                           ;SIO.c: 182:        LATBbits.LATB1 = 0;
  1837  02A6' 928A               	bcf	138,1,c	;volatile
  1838  02A8'                    l5314:
  1839                           
  1840                           ;SIO.c: 184:       mask = mask<<1;
  1841  02A8' 5000'              	movf	_mask^0,w,c
  1842  02AA' 2400'              	addwf	_mask^0,w,c
  1843  02AC' 6E00'              	movwf	_mask^0,c
  1844                           
  1845                           ;SIO.c: 185:     TiResetTics(timerSIO);
  1846  02AE' 5000'              	movf	_timerSIO^0,w,c
  1847  02B0' EC00' F000'        	call	_TiResetTics
  1848  02B4' 0012               	return	
  1849  02B6'                    l5320:
  1850  02B6' 5000'              	movf	motorSIO@state^0,w,c
  1851  02B8' 6E00'              	movwf	??_motorSIO^0,c
  1852  02BA' 6A00'              	clrf	(??_motorSIO+1)^0,c
  1853                           
  1854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 1, Range of values is 0 to 0
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte            4     3 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861  02BC' 5000'              	movf	(??_motorSIO+1)^0,w,c
  1862  02BE' 0A00               	xorlw	0	; case 0
  1863  02C0' A4D8               	btfss	status,2,c
  1864  02C2' 0012               	return	
  1865                           
  1866                           ; Switch size 1, requested type "simple"
  1867                           ; Number of cases is 12, Range of values is 0 to 11
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte           37    19 (average)
  1871                           ;	Chosen strategy is simple_byte
  1872  02C4' 5000'              	movf	??_motorSIO^0,w,c
  1873  02C6' 0A00               	xorlw	0	; case 0
  1874  02C8' B4D8               	btfsc	status,2,c
  1875  02CA' D69B               	goto	l5142
  1876  02CC' 0A01               	xorlw	1	; case 1
  1877  02CE' B4D8               	btfsc	status,2,c
  1878  02D0' D6A5               	goto	l5152
  1879  02D2' 0A03               	xorlw	3	; case 2
  1880  02D4' B4D8               	btfsc	status,2,c
  1881  02D6' D6BE               	goto	l5168
  1882  02D8' 0A01               	xorlw	1	; case 3
  1883  02DA' B4D8               	btfsc	status,2,c
  1884  02DC' D6C1               	goto	l5174
  1885  02DE' 0A07               	xorlw	7	; case 4
  1886  02E0' B4D8               	btfsc	status,2,c
  1887  02E2' D71C               	goto	l1299
  1888  02E4' 0A01               	xorlw	1	; case 5
  1889  02E6' B4D8               	btfsc	status,2,c
  1890  02E8' D727               	goto	l5230
  1891  02EA' 0A03               	xorlw	3	; case 6
  1892  02EC' B4D8               	btfsc	status,2,c
  1893  02EE' D763               	goto	l1307
  1894  02F0' 0A01               	xorlw	1	; case 7
  1895  02F2' B4D8               	btfsc	status,2,c
  1896  02F4' D753               	goto	l5248
  1897  02F6' 0A0F               	xorlw	15	; case 8
  1898  02F8' B4D8               	btfsc	status,2,c
  1899  02FA' D767               	goto	l5258
  1900  02FC' 0A01               	xorlw	1	; case 9
  1901  02FE' B4D8               	btfsc	status,2,c
  1902  0300' D776               	goto	l5266
  1903  0302' 0A03               	xorlw	3	; case 10
  1904  0304' B4D8               	btfsc	status,2,c
  1905  0306' D788               	goto	l5276
  1906  0308' 0A01               	xorlw	1	; case 11
  1907  030A' A4D8               	btfss	status,2,c
  1908  030C' 0012               	return	
  1909  030E' D79E               	goto	l5292
  1910  0310'                    __end_of_motorSIO:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _UnewScore *****************
  1914 ;; Defined at:
  1915 ;;		line 315 in file "Usuaris.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  scoretmp        1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1
  1929 ;;      Params:         0       0       0
  1930 ;;      Locals:         1       0       0
  1931 ;;      Temps:          0       0       0
  1932 ;;      Totals:         1       0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 2
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_motorSIO
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text2
  1944  0000'                    __ptext2:
  1945                           	callstack 0
  1946  0000'                    _UnewScore:
  1947                           	callstack 27
  1948                           
  1949                           ;incstack = 0
  1950                           ;UnewScore@scoretmp stored from wreg
  1951  0000' 6E00'              	movwf	UnewScore@scoretmp^0,c
  1952                           
  1953                           ;Usuaris.c: 316:     scoreUsr = scoretmp;
  1954  0002' C005' F027'        	movff	UnewScore@scoretmp,_scoreUsr
  1955                           
  1956                           ;Usuaris.c: 317:     do_updateScore = 1;
  1957  0006' 8000'              	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1958  0008' 0012               	return		;funcret
  1959  000A'                    __end_of_UnewScore:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _motorJoc *****************
  1963 ;; Defined at:
  1964 ;;		line 44 in file "Joc.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1
  1978 ;;      Params:         0       0       0
  1979 ;;      Locals:         0       0       0
  1980 ;;      Temps:          2       0       0
  1981 ;;      Totals:         2       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 5
  1985 ;; This function calls:
  1986 ;;		_HClearNouSegon
  1987 ;;		_HGetTime
  1988 ;;		_HJugant
  1989 ;;		_HNouSegon
  1990 ;;		_HnoJugant
  1991 ;;		_LcGotoXY
  1992 ;;		_LcLliure
  1993 ;;		_LcNewString
  1994 ;;		_SIOEnviaHora
  1995 ;;		_SIONovaDireccio
  1996 ;;		_SIONovaTecla
  1997 ;;		_SIOStartGame
  1998 ;;		_SIOcheckKrebut
  1999 ;;		_SIOendGame
  2000 ;;		_conversorJoystick
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text3
  2007  0000'                    __ptext3:
  2008                           	callstack 0
  2009  0000'                    _motorJoc:
  2010                           	callstack 25
  2011                           
  2012                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  2013                           
  2014                           ;incstack = 0
  2015  0000' D048               	goto	l5134
  2016  0002'                    l5088:
  2017                           
  2018                           ;Joc.c: 49:    if (usuariJoc != -1) {
  2019  0002' 2800'              	incf	_usuariJoc^0,w,c
  2020  0004' B4D8               	btfsc	status,2,c
  2021  0006' 0012               	return	
  2022                           
  2023                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  2024  0008' 5000'              	movf	_usuariJoc^0,w,c
  2025  000A' EC00' F000'        	call	_SIOStartGame
  2026                           
  2027                           ;Joc.c: 51:     jugantJoc = 1;
  2028  000E' 8000'              	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2029                           
  2030                           ;Joc.c: 52:     state = 2;
  2031  0010' 0E02               	movlw	2
  2032  0012' 6E00'              	movwf	motorJoc@state^0,c
  2033                           
  2034                           ;Joc.c: 54:   break;
  2035                           
  2036                           ;Joc.c: 53:    }
  2037  0014' 0012               	return	
  2038  0016'                    l1170:
  2039                           
  2040                           ;Joc.c: 56:    if (!jugantJoc) {
  2041  0016' B000'              	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2042  0018' D007               	goto	l5102
  2043                           
  2044                           ;Joc.c: 57:     usuariJoc = -1;
  2045  001A' 6800'              	setf	_usuariJoc^0,c
  2046                           
  2047                           ;Joc.c: 58:     HnoJugant();
  2048  001C' EC00' F000'        	call	_HnoJugant	;wreg free
  2049                           
  2050                           ;Joc.c: 59:     SIOendGame();
  2051  0020' EC00' F000'        	call	_SIOendGame	;wreg free
  2052  0024'                    l5100:
  2053                           
  2054                           ;Joc.c: 61:     state--;
  2055  0024' 0600'              	decf	motorJoc@state^0,f,c
  2056                           
  2057                           ;Joc.c: 62:    }
  2058  0026' 0012               	return	
  2059  0028'                    l5102:
  2060  0028' BE00'              	btfsc	_direccioJoc^0,7,c
  2061  002A' D007               	goto	l5108
  2062                           
  2063                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2064  002C' 5000'              	movf	_direccioJoc^0,w,c
  2065  002E' EC00' F000'        	call	_conversorJoystick
  2066  0032' EC00' F000'        	call	_SIONovaDireccio
  2067                           
  2068                           ;Joc.c: 65:     direccioJoc = -1;
  2069  0036' 6800'              	setf	_direccioJoc^0,c
  2070                           
  2071                           ;Joc.c: 66:    }
  2072  0038' 0012               	return	
  2073  003A'                    l5108:
  2074  003A' EC00' F000'        	call	_HNouSegon	;wreg free
  2075  003E' A0D8               	btfss	status,0,c
  2076  0040' D016               	goto	l5120
  2077  0042' EC00' F000'        	call	_LcLliure	;wreg free
  2078  0046' A0D8               	btfss	status,0,c
  2079  0048' D012               	goto	l5120
  2080                           
  2081                           ;Joc.c: 68:     HClearNouSegon();
  2082  004A' EC00' F000'        	call	_HClearNouSegon	;wreg free
  2083                           
  2084                           ;Joc.c: 69:     LcGotoXY(0,1);
  2085  004E' 0E01               	movlw	1
  2086  0050' 6E00'              	movwf	LcGotoXY@Row^0,c
  2087  0052' 0E00               	movlw	0
  2088  0054' EC00' F000'        	call	_LcGotoXY
  2089                           
  2090                           ;Joc.c: 70:     LcNewString(HGetTime());
  2091  0058' EC00' F000'        	call	_HGetTime	;wreg free
  2092  005C' 6E00'              	movwf	??_motorJoc^0,c
  2093  005E' C013' F009'        	movff	??_motorJoc,LcNewString@new_s
  2094  0062' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  2095  0064' EC00' F000'        	call	_LcNewString	;wreg free
  2096                           
  2097                           ;Joc.c: 71:                 SIOEnviaHora();
  2098  0068' EC00' F000'        	call	_SIOEnviaHora	;wreg free
  2099                           
  2100                           ;Joc.c: 73:    }
  2101  006C' 0012               	return	
  2102  006E'                    l5120:
  2103  006E' 5000'              	movf	_novaTeclaJOC^0,w,c
  2104  0070' 0A80               	xorlw	128
  2105  0072' 0F7F               	addlw	-129
  2106  0074' A0D8               	btfss	status,0,c
  2107  0076' 0012               	return	
  2108                           
  2109                           ;Joc.c: 75:     SIONovaTecla(novaTeclaJOC+48);
  2110  0078' 5000'              	movf	_novaTeclaJOC^0,w,c
  2111  007A' 0F30               	addlw	48
  2112  007C' EC00' F000'        	call	_SIONovaTecla
  2113                           
  2114                           ;Joc.c: 76:     novaTeclaJOC = -1;
  2115  0080' 6800'              	setf	_novaTeclaJOC^0,c
  2116  0082' 0012               	return	
  2117  0084'                    l5126:
  2118                           
  2119                           ;Joc.c: 80:    if (SIOcheckKrebut()) {
  2120  0084' EC00' F000'        	call	_SIOcheckKrebut	;wreg free
  2121  0088' A0D8               	btfss	status,0,c
  2122  008A' 0012               	return	
  2123                           
  2124                           ;Joc.c: 81:     HJugant();
  2125  008C' EC00' F000'        	call	_HJugant	;wreg free
  2126  0090' D7C9               	goto	l5100
  2127  0092'                    l5134:
  2128  0092' 5000'              	movf	motorJoc@state^0,w,c
  2129  0094' 6E00'              	movwf	??_motorJoc^0,c
  2130  0096' 6A00'              	clrf	(??_motorJoc+1)^0,c
  2131                           
  2132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 1, Range of values is 0 to 0
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte            4     3 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139  0098' 5000'              	movf	(??_motorJoc+1)^0,w,c
  2140  009A' 0A00               	xorlw	0	; case 0
  2141  009C' A4D8               	btfss	status,2,c
  2142  009E' 0012               	return	
  2143                           
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 3, Range of values is 0 to 2
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte           10     6 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  00A0' 5000'              	movf	??_motorJoc^0,w,c
  2151  00A2' 0A00               	xorlw	0	; case 0
  2152  00A4' B4D8               	btfsc	status,2,c
  2153  00A6' D7AD               	goto	l5088
  2154  00A8' 0A01               	xorlw	1	; case 1
  2155  00AA' B4D8               	btfsc	status,2,c
  2156  00AC' D7B4               	goto	l1170
  2157  00AE' 0A03               	xorlw	3	; case 2
  2158  00B0' A4D8               	btfss	status,2,c
  2159  00B2' 0012               	return	
  2160  00B4' D7E7               	goto	l5126
  2161  00B6'                    __end_of_motorJoc:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _conversorJoystick *****************
  2165 ;; Defined at:
  2166 ;;		line 27 in file "Joc.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  direc           1    wreg     unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  direc           1    5[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      unsigned char 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1
  2180 ;;      Params:         0       0       0
  2181 ;;      Locals:         1       0       0
  2182 ;;      Temps:          0       0       0
  2183 ;;      Totals:         1       0       0
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 2
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_motorJoc
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text4
  2195  0000'                    __ptext4:
  2196                           	callstack 0
  2197  0000'                    _conversorJoystick:
  2198                           	callstack 27
  2199                           
  2200                           ;incstack = 0
  2201                           ;conversorJoystick@direc stored from wreg
  2202  0000' 6E00'              	movwf	conversorJoystick@direc^0,c
  2203                           
  2204                           ;Joc.c: 29:     if (direc==2) {
  2205  0002' 0E02               	movlw	2
  2206  0004' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2207  0006' A4D8               	btfss	status,2,c
  2208  0008' D002               	goto	l2388
  2209                           
  2210                           ;Joc.c: 30:         return 'W';
  2211  000A' 0E57               	movlw	87
  2212  000C' 0012               	return	
  2213  000E'                    l2388:
  2214                           
  2215                           ;Joc.c: 32:     if (direc==6) {
  2216  000E' 0E06               	movlw	6
  2217  0010' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2218  0012' A4D8               	btfss	status,2,c
  2219  0014' D002               	goto	l2394
  2220                           
  2221                           ;Joc.c: 33:         return 'D';
  2222  0016' 0E44               	movlw	68
  2223  0018' 0012               	return	
  2224  001A'                    l2394:
  2225                           
  2226                           ;Joc.c: 35:     if (direc==8) {
  2227  001A' 0E08               	movlw	8
  2228  001C' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2229  001E' A4D8               	btfss	status,2,c
  2230  0020' D002               	goto	l2400
  2231                           
  2232                           ;Joc.c: 36:         return 'S';
  2233  0022' 0E53               	movlw	83
  2234  0024' 0012               	return	
  2235  0026'                    l2400:
  2236                           
  2237                           ;Joc.c: 38:     if (direc==4) {
  2238  0026' 0E04               	movlw	4
  2239  0028' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2240  002A' A4D8               	btfss	status,2,c
  2241  002C' D002               	goto	l2406
  2242                           
  2243                           ;Joc.c: 39:         return 'A';
  2244  002E' 0E41               	movlw	65
  2245  0030' 0012               	return	
  2246  0032'                    l2406:
  2247                           
  2248                           ;Joc.c: 41:     return 0;
  2249  0032' 0E00               	movlw	0
  2250  0034' 0012               	return		;funcret
  2251  0036'                    __end_of_conversorJoystick:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _SIOendGame *****************
  2255 ;; Defined at:
  2256 ;;		line 28 in file "SIO.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		None
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1
  2270 ;;      Params:         0       0       0
  2271 ;;      Locals:         0       0       0
  2272 ;;      Temps:          0       0       0
  2273 ;;      Totals:         0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 2
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_motorJoc
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text5
  2285  0000'                    __ptext5:
  2286                           	callstack 0
  2287  0000'                    _SIOendGame:
  2288                           	callstack 27
  2289                           
  2290                           ;SIO.c: 29:     jugantSIO = 0;
  2291                           
  2292                           ;incstack = 0
  2293  0000' 9000'              	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2294  0002' 0012               	return		;funcret
  2295  0004'                    __end_of_SIOendGame:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _SIOcheckKrebut *****************
  2299 ;; Defined at:
  2300 ;;		line 31 in file "SIO.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;		None               void
  2307 ;; Registers used:
  2308 ;;		status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1
  2314 ;;      Params:         0       0       0
  2315 ;;      Locals:         0       0       0
  2316 ;;      Temps:          0       0       0
  2317 ;;      Totals:         0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 2
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_motorJoc
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text6
  2329  0000'                    __ptext6:
  2330                           	callstack 0
  2331  0000'                    _SIOcheckKrebut:
  2332                           	callstack 27
  2333                           
  2334                           ;SIO.c: 32:     return Krebut;
  2335                           
  2336                           ;incstack = 0
  2337  0000' B000'              	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2338  0002' D002               	goto	l2424
  2339  0004' 90D8               	bcf	status,0,c
  2340  0006' 0012               	return	
  2341  0008'                    l2424:
  2342  0008' 80D8               	bsf	status,0,c
  2343  000A' 0012               	return		;funcret
  2344  000C'                    __end_of_SIOcheckKrebut:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _SIOStartGame *****************
  2348 ;; Defined at:
  2349 ;;		line 38 in file "SIO.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  usuari          1    wreg     unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  usuari          1    5[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1
  2363 ;;      Params:         0       0       0
  2364 ;;      Locals:         1       0       0
  2365 ;;      Temps:          0       0       0
  2366 ;;      Totals:         1       0       0
  2367 ;;Total ram usage:        1 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 2
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_motorJoc
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text7
  2378  0000'                    __ptext7:
  2379                           	callstack 0
  2380  0000'                    _SIOStartGame:
  2381                           	callstack 27
  2382                           
  2383                           ;incstack = 0
  2384                           ;SIOStartGame@usuari stored from wreg
  2385  0000' 6E00'              	movwf	SIOStartGame@usuari^0,c
  2386                           
  2387                           ;SIO.c: 39:     usuariActualSIO = usuari;
  2388  0002' C005' F005'        	movff	SIOStartGame@usuari,_usuariActualSIO
  2389  0006' 0012               	return		;funcret
  2390  0008'                    __end_of_SIOStartGame:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _SIONovaTecla *****************
  2394 ;; Defined at:
  2395 ;;		line 47 in file "SIO.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  tecla           1    wreg     char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  tecla           1    5[COMRAM] char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1
  2409 ;;      Params:         0       0       0
  2410 ;;      Locals:         1       0       0
  2411 ;;      Temps:          0       0       0
  2412 ;;      Totals:         1       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 2
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_motorJoc
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text8
  2424  0000'                    __ptext8:
  2425                           	callstack 0
  2426  0000'                    _SIONovaTecla:
  2427                           	callstack 27
  2428                           
  2429                           ;incstack = 0
  2430                           ;SIONovaTecla@tecla stored from wreg
  2431  0000' 6E00'              	movwf	SIONovaTecla@tecla^0,c
  2432                           
  2433                           ;SIO.c: 48:     novaTeclaSIO = tecla;
  2434  0002' C005' F003'        	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2435  0006' 0012               	return		;funcret
  2436  0008'                    __end_of_SIONovaTecla:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _SIONovaDireccio *****************
  2440 ;; Defined at:
  2441 ;;		line 34 in file "SIO.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  num             1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  num             1    5[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1
  2455 ;;      Params:         0       0       0
  2456 ;;      Locals:         1       0       0
  2457 ;;      Temps:          0       0       0
  2458 ;;      Totals:         1       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_motorJoc
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text9
  2470  0000'                    __ptext9:
  2471                           	callstack 0
  2472  0000'                    _SIONovaDireccio:
  2473                           	callstack 27
  2474                           
  2475                           ;incstack = 0
  2476                           ;SIONovaDireccio@num stored from wreg
  2477  0000' 6E00'              	movwf	SIONovaDireccio@num^0,c
  2478                           
  2479                           ;SIO.c: 35:     direccioSIO = num;
  2480  0002' C005' F004'        	movff	SIONovaDireccio@num,_direccioSIO
  2481  0006' 0012               	return		;funcret
  2482  0008'                    __end_of_SIONovaDireccio:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _SIOEnviaHora *****************
  2486 ;; Defined at:
  2487 ;;		line 41 in file "SIO.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		None
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1
  2501 ;;      Params:         0       0       0
  2502 ;;      Locals:         0       0       0
  2503 ;;      Temps:          0       0       0
  2504 ;;      Totals:         0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 2
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_motorJoc
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text10
  2516  0000'                    __ptext10:
  2517                           	callstack 0
  2518  0000'                    _SIOEnviaHora:
  2519                           	callstack 27
  2520                           
  2521                           ;SIO.c: 42:     hi_ha_hora_sio2 = 1;
  2522                           
  2523                           ;incstack = 0
  2524  0000' 8000'              	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2525  0002' 0012               	return		;funcret
  2526  0004'                    __end_of_SIOEnviaHora:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _HnoJugant *****************
  2530 ;; Defined at:
  2531 ;;		line 35 in file "Hora.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		None
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1
  2545 ;;      Params:         0       0       0
  2546 ;;      Locals:         0       0       0
  2547 ;;      Temps:          0       0       0
  2548 ;;      Totals:         0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_motorJoc
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text11
  2560  0000'                    __ptext11:
  2561                           	callstack 0
  2562  0000'                    _HnoJugant:
  2563                           	callstack 27
  2564                           
  2565                           ;Hora.c: 36:     jugant = 0;
  2566                           
  2567                           ;incstack = 0
  2568  0000' 9000'              	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2569  0002' 0012               	return		;funcret
  2570  0004'                    __end_of_HnoJugant:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _HNouSegon *****************
  2574 ;; Defined at:
  2575 ;;		line 23 in file "Hora.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1
  2589 ;;      Params:         0       0       0
  2590 ;;      Locals:         0       0       0
  2591 ;;      Temps:          0       0       0
  2592 ;;      Totals:         0       0       0
  2593 ;;Total ram usage:        0 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_motorJoc
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text12
  2604  0000'                    __ptext12:
  2605                           	callstack 0
  2606  0000'                    _HNouSegon:
  2607                           	callstack 27
  2608                           
  2609                           ;Hora.c: 24:     return nouSegon;
  2610                           
  2611                           ;incstack = 0
  2612  0000' B000'              	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2613  0002' D002               	goto	l2368
  2614  0004' 90D8               	bcf	status,0,c
  2615  0006' 0012               	return	
  2616  0008'                    l2368:
  2617  0008' 80D8               	bsf	status,0,c
  2618  000A' 0012               	return		;funcret
  2619  000C'                    __end_of_HNouSegon:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _HJugant *****************
  2623 ;; Defined at:
  2624 ;;		line 38 in file "Hora.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		None
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1
  2638 ;;      Params:         0       0       0
  2639 ;;      Locals:         0       0       0
  2640 ;;      Temps:          0       0       0
  2641 ;;      Totals:         0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 2
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_motorJoc
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text13
  2653  0000'                    __ptext13:
  2654                           	callstack 0
  2655  0000'                    _HJugant:
  2656                           	callstack 27
  2657                           
  2658                           ;Hora.c: 39:     jugant = 1;
  2659                           
  2660                           ;incstack = 0
  2661  0000' 8000'              	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2662                           
  2663                           ;Hora.c: 40:     tempsAcabat = 0;
  2664  0002' 9000'              	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2665  0004' 0012               	return		;funcret
  2666  0006'                    __end_of_HJugant:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _HGetTime *****************
  2670 ;; Defined at:
  2671 ;;		line 31 in file "Hora.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      PTR unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1
  2685 ;;      Params:         2       0       0
  2686 ;;      Locals:         0       0       0
  2687 ;;      Temps:          0       0       0
  2688 ;;      Totals:         2       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 2
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_motorJoc
  2696 ;;		_motorSIO
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text14
  2701  0000'                    __ptext14:
  2702                           	callstack 0
  2703  0000'                    _HGetTime:
  2704                           	callstack 27
  2705                           
  2706                           ;Hora.c: 32:     return hora;
  2707                           
  2708                           ;incstack = 0
  2709  0000' 0E00'              	movlw	_hora& (0+255)
  2710  0002' 0012               	return		;funcret
  2711  0004'                    __end_of_HGetTime:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _HClearNouSegon *****************
  2715 ;; Defined at:
  2716 ;;		line 27 in file "Hora.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		None
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1
  2730 ;;      Params:         0       0       0
  2731 ;;      Locals:         0       0       0
  2732 ;;      Temps:          0       0       0
  2733 ;;      Totals:         0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 2
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_motorJoc
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text15
  2745  0000'                    __ptext15:
  2746                           	callstack 0
  2747  0000'                    _HClearNouSegon:
  2748                           	callstack 27
  2749                           
  2750                           ;Hora.c: 28:     nouSegon = 0;
  2751                           
  2752                           ;incstack = 0
  2753  0000' 9000'              	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2754  0002' 0012               	return		;funcret
  2755  0004'                    __end_of_HClearNouSegon:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _motorHora *****************
  2759 ;; Defined at:
  2760 ;;		line 46 in file "Hora.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1
  2774 ;;      Params:         0       0       0
  2775 ;;      Locals:         0       0       0
  2776 ;;      Temps:          2       0       0
  2777 ;;      Totals:         2       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 3
  2781 ;; This function calls:
  2782 ;;		_TiGetTics
  2783 ;;		_TiResetTics
  2784 ;;		_playAltaveu
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text16
  2791  0000'                    __ptext16:
  2792                           	callstack 0
  2793  0000'                    _motorHora:
  2794                           	callstack 27
  2795                           
  2796                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2797                           
  2798                           ;incstack = 0
  2799  0000' D042               	goto	l5378
  2800  0002'                    l5328:
  2801                           
  2802                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2803  0002' 5000'              	movf	_timerHora^0,w,c
  2804  0004' EC00' F000'        	call	_TiGetTics
  2805  0008' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  2806  000A' 0012               	return	
  2807  000C' 0EB5               	movlw	181
  2808  000E' 5C00'              	subwf	?_TiGetTics^0,w,c
  2809  0010' 0E04               	movlw	4
  2810  0012' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  2811  0014' A0D8               	btfss	status,0,c
  2812  0016' 0012               	return	
  2813                           
  2814                           ;Hora.c: 52:     TiResetTics(timerHora);
  2815  0018' 5000'              	movf	_timerHora^0,w,c
  2816  001A' EC00' F000'        	call	_TiResetTics
  2817                           
  2818                           ;Hora.c: 53:     if(jugant){
  2819  001E' A000'              	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2820  0020' D02F               	goto	l5374
  2821                           
  2822                           ;Hora.c: 54:       nouSegon = 1;
  2823  0022' 8000'              	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2824                           
  2825                           ;Hora.c: 56:      hora[4]--;
  2826  0024' 0600'              	decf	(_hora+4)^0,f,c
  2827                           
  2828                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2829  0026' 0E2F               	movlw	47
  2830  0028' 1800'              	xorwf	(_hora+4)^0,w,c
  2831  002A' A4D8               	btfss	status,2,c
  2832  002C' D003               	goto	l5344
  2833                           
  2834                           ;Hora.c: 58:       hora[4] = '9';
  2835  002E' 0E39               	movlw	57
  2836  0030' 6E00'              	movwf	(_hora+4)^0,c
  2837                           
  2838                           ;Hora.c: 59:       hora[3]--;
  2839  0032' 0600'              	decf	(_hora+3)^0,f,c
  2840  0034'                    l5344:
  2841                           
  2842                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2843  0034' 0E2F               	movlw	47
  2844  0036' 1800'              	xorwf	(_hora+3)^0,w,c
  2845  0038' A4D8               	btfss	status,2,c
  2846  003A' D003               	goto	l5350
  2847                           
  2848                           ;Hora.c: 63:       hora[3] = '5';
  2849  003C' 0E35               	movlw	53
  2850  003E' 6E00'              	movwf	(_hora+3)^0,c
  2851                           
  2852                           ;Hora.c: 64:       hora[1]--;
  2853  0040' 0600'              	decf	(_hora+1)^0,f,c
  2854  0042'                    l5350:
  2855                           
  2856                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2857  0042' 0E2F               	movlw	47
  2858  0044' 1800'              	xorwf	(_hora+1)^0,w,c
  2859  0046' A4D8               	btfss	status,2,c
  2860  0048' D003               	goto	l5356
  2861                           
  2862                           ;Hora.c: 68:       hora[1] = '9';
  2863  004A' 0E39               	movlw	57
  2864  004C' 6E00'              	movwf	(_hora+1)^0,c
  2865                           
  2866                           ;Hora.c: 69:       hora[0]--;
  2867  004E' 0600'              	decf	_hora^0,f,c
  2868  0050'                    l5356:
  2869                           
  2870                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2871  0050' 0E30               	movlw	48
  2872  0052' 1800'              	xorwf	_hora^0,w,c
  2873  0054' A4D8               	btfss	status,2,c
  2874  0056' D00C               	goto	l5366
  2875  0058' 0E30               	movlw	48
  2876  005A' 1800'              	xorwf	(_hora+1)^0,w,c
  2877  005C' A4D8               	btfss	status,2,c
  2878  005E' D008               	goto	l5366
  2879  0060' 0E30               	movlw	48
  2880  0062' 1800'              	xorwf	(_hora+3)^0,w,c
  2881  0064' A4D8               	btfss	status,2,c
  2882  0066' D004               	goto	l5366
  2883  0068' 0E30               	movlw	48
  2884  006A' 1800'              	xorwf	(_hora+4)^0,w,c
  2885  006C' B4D8               	btfsc	status,2,c
  2886                           
  2887                           ;Hora.c: 73:       tempsAcabat = 1;
  2888  006E' 8000'              	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2889  0070'                    l5366:
  2890                           
  2891                           ;Hora.c: 76:      segons++;
  2892  0070' 2A00'              	incf	_segons^0,f,c
  2893                           
  2894                           ;Hora.c: 77:      if(segons > 59){
  2895  0072' 0E3B               	movlw	59
  2896  0074' 6400'              	cpfsgt	_segons^0,c
  2897  0076' D004               	goto	l5374
  2898                           
  2899                           ;Hora.c: 78:       playAltaveu();
  2900  0078' EC00' F000'        	call	_playAltaveu	;wreg free
  2901                           
  2902                           ;Hora.c: 79:       segons = 0;
  2903  007C' 0E00               	movlw	0
  2904  007E' 6E00'              	movwf	_segons^0,c
  2905  0080'                    l5374:
  2906                           
  2907                           ;Hora.c: 82:     state = 0;
  2908  0080' 0E00               	movlw	0
  2909  0082' 6E00'              	movwf	motorHora@state^0,c
  2910  0084' 0012               	return	
  2911  0086'                    l5378:
  2912  0086' 5000'              	movf	motorHora@state^0,w,c
  2913  0088' 6E00'              	movwf	??_motorHora^0,c
  2914  008A' 6A00'              	clrf	(??_motorHora+1)^0,c
  2915                           
  2916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2917                           ; Switch size 1, requested type "simple"
  2918                           ; Number of cases is 1, Range of values is 0 to 0
  2919                           ; switch strategies available:
  2920                           ; Name         Instructions Cycles
  2921                           ; simple_byte            4     3 (average)
  2922                           ;	Chosen strategy is simple_byte
  2923  008C' 5000'              	movf	(??_motorHora+1)^0,w,c
  2924  008E' 0A00               	xorlw	0	; case 0
  2925  0090' A4D8               	btfss	status,2,c
  2926  0092' 0012               	return	
  2927                           
  2928                           ; Switch size 1, requested type "simple"
  2929                           ; Number of cases is 1, Range of values is 0 to 0
  2930                           ; switch strategies available:
  2931                           ; Name         Instructions Cycles
  2932                           ; simple_byte            4     3 (average)
  2933                           ;	Chosen strategy is simple_byte
  2934  0094' 5000'              	movf	??_motorHora^0,w,c
  2935  0096' 0A00               	xorlw	0	; case 0
  2936  0098' A4D8               	btfss	status,2,c
  2937  009A' 0012               	return	
  2938  009C' D7B2               	goto	l5328
  2939  009E'                    __end_of_motorHora:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _playAltaveu *****************
  2943 ;; Defined at:
  2944 ;;		line 13 in file "Altaveu.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		None
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1
  2958 ;;      Params:         0       0       0
  2959 ;;      Locals:         0       0       0
  2960 ;;      Temps:          0       0       0
  2961 ;;      Totals:         0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 2
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_motorHora
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text17
  2973  0000'                    __ptext17:
  2974                           	callstack 0
  2975  0000'                    _playAltaveu:
  2976                           	callstack 27
  2977                           
  2978                           ;Altaveu.c: 14:     reproduir = 1;
  2979                           
  2980                           ;incstack = 0
  2981  0000' 8000'              	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2982  0002' 0012               	return		;funcret
  2983  0004'                    __end_of_playAltaveu:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _motorAltaveu *****************
  2987 ;; Defined at:
  2988 ;;		line 16 in file "Altaveu.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1
  3002 ;;      Params:         0       0       0
  3003 ;;      Locals:         0       0       0
  3004 ;;      Temps:          3       0       0
  3005 ;;      Totals:         3       0       0
  3006 ;;Total ram usage:        3 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 3
  3009 ;; This function calls:
  3010 ;;		_TiGetTics
  3011 ;;		_TiResetTics
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text18
  3018  0000'                    __ptext18:
  3019                           	callstack 0
  3020  0000'                    _motorAltaveu:
  3021                           	callstack 27
  3022                           
  3023                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  3024                           
  3025                           ;incstack = 0
  3026  0000' D046               	goto	l5976
  3027  0002'                    l871:
  3028                           
  3029                           ;Altaveu.c: 21:    if (reproduir) {
  3030  0002' A000'              	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3031  0004' 0012               	return	
  3032                           
  3033                           ;Altaveu.c: 22:     nota = 1;
  3034  0006' 0E01               	movlw	1
  3035  0008' 6E00'              	movwf	_nota^0,c
  3036                           
  3037                           ;Altaveu.c: 23:     copsNota = 0;
  3038  000A' 0E00               	movlw	0
  3039  000C' 6E00'              	movwf	_copsNota^0,c
  3040                           
  3041                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  3042  000E' 5000'              	movf	_timerAltaveu^0,w,c
  3043  0010' EC00' F000'        	call	_TiResetTics
  3044                           
  3045                           ;Altaveu.c: 25:     state = 1;
  3046  0014' 0E01               	movlw	1
  3047  0016' 6E00'              	movwf	motorAltaveu@state^0,c
  3048  0018' 0012               	return	
  3049  001A'                    l5944:
  3050                           
  3051                           ;Altaveu.c: 29:    if (nota > 5) {
  3052  001A' 0E05               	movlw	5
  3053  001C' 6400'              	cpfsgt	_nota^0,c
  3054  001E' D003               	goto	l5950
  3055                           
  3056                           ;Altaveu.c: 30:     reproduir = 0;
  3057  0020' 9000'              	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3058  0022'                    l5948:
  3059                           
  3060                           ;Altaveu.c: 31:     state--;
  3061  0022' 0600'              	decf	motorAltaveu@state^0,f,c
  3062                           
  3063                           ;Altaveu.c: 32:    }
  3064  0024' 0012               	return	
  3065  0026'                    l5950:
  3066  0026' 0EA8               	movlw	168
  3067  0028' 1800'              	xorwf	_copsNota^0,w,c
  3068  002A' A4D8               	btfss	status,2,c
  3069  002C' D004               	goto	l5956
  3070                           
  3071                           ;Altaveu.c: 34:     nota++;
  3072  002E' 2A00'              	incf	_nota^0,f,c
  3073                           
  3074                           ;Altaveu.c: 35:     copsNota = 0;
  3075  0030' 0E00               	movlw	0
  3076  0032' 6E00'              	movwf	_copsNota^0,c
  3077                           
  3078                           ;Altaveu.c: 36:    }
  3079  0034' 0012               	return	
  3080  0036'                    l5956:
  3081  0036' 5000'              	movf	_timerAltaveu^0,w,c
  3082  0038' EC00' F000'        	call	_TiGetTics
  3083  003C' 5000'              	movf	_nota^0,w,c
  3084  003E' 6E00'              	movwf	??_motorAltaveu^0,c
  3085  0040' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  3086  0042' 5000'              	movf	?_TiGetTics^0,w,c
  3087  0044' 5C00'              	subwf	??_motorAltaveu^0,w,c
  3088  0046' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  3089  0048' 0A80               	xorlw	128
  3090  004A' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
  3091  004C' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  3092  004E' 0A80               	xorlw	128
  3093  0050' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
  3094  0052' B0D8               	btfsc	status,0,c
  3095  0054' 0012               	return	
  3096                           
  3097                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3098  0056' 808A               	bsf	138,0,c	;volatile
  3099                           
  3100                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3101  0058' 5000'              	movf	_timerAltaveu^0,w,c
  3102  005A' EC00' F000'        	call	_TiResetTics
  3103                           
  3104                           ;Altaveu.c: 40:     state++;
  3105  005E' 2A00'              	incf	motorAltaveu@state^0,f,c
  3106  0060' 0012               	return	
  3107  0062'                    l5964:
  3108                           
  3109                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3110  0062' 5000'              	movf	_timerAltaveu^0,w,c
  3111  0064' EC00' F000'        	call	_TiGetTics
  3112  0068' 5000'              	movf	_nota^0,w,c
  3113  006A' 6E00'              	movwf	??_motorAltaveu^0,c
  3114  006C' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  3115  006E' 5000'              	movf	?_TiGetTics^0,w,c
  3116  0070' 5C00'              	subwf	??_motorAltaveu^0,w,c
  3117  0072' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  3118  0074' 0A80               	xorlw	128
  3119  0076' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
  3120  0078' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  3121  007A' 0A80               	xorlw	128
  3122  007C' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
  3123  007E' B0D8               	btfsc	status,0,c
  3124  0080' 0012               	return	
  3125                           
  3126                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3127  0082' 908A               	bcf	138,0,c	;volatile
  3128                           
  3129                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3130  0084' 5000'              	movf	_timerAltaveu^0,w,c
  3131  0086' EC00' F000'        	call	_TiResetTics
  3132                           
  3133                           ;Altaveu.c: 47:     copsNota++;
  3134  008A' 2A00'              	incf	_copsNota^0,f,c
  3135  008C' D7CA               	goto	l5948
  3136  008E'                    l5976:
  3137  008E' 5000'              	movf	motorAltaveu@state^0,w,c
  3138  0090' 6E00'              	movwf	??_motorAltaveu^0,c
  3139  0092' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  3140                           
  3141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3142                           ; Switch size 1, requested type "simple"
  3143                           ; Number of cases is 1, Range of values is 0 to 0
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte            4     3 (average)
  3147                           ;	Chosen strategy is simple_byte
  3148  0094' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  3149  0096' 0A00               	xorlw	0	; case 0
  3150  0098' A4D8               	btfss	status,2,c
  3151  009A' 0012               	return	
  3152                           
  3153                           ; Switch size 1, requested type "simple"
  3154                           ; Number of cases is 3, Range of values is 0 to 2
  3155                           ; switch strategies available:
  3156                           ; Name         Instructions Cycles
  3157                           ; simple_byte           10     6 (average)
  3158                           ;	Chosen strategy is simple_byte
  3159  009C' 5000'              	movf	??_motorAltaveu^0,w,c
  3160  009E' 0A00               	xorlw	0	; case 0
  3161  00A0' B4D8               	btfsc	status,2,c
  3162  00A2' D7AF               	goto	l871
  3163  00A4' 0A01               	xorlw	1	; case 1
  3164  00A6' B4D8               	btfsc	status,2,c
  3165  00A8' D7B8               	goto	l5944
  3166  00AA' 0A03               	xorlw	3	; case 2
  3167  00AC' A4D8               	btfss	status,2,c
  3168  00AE' 0012               	return	
  3169  00B0' D7D8               	goto	l5964
  3170  00B2'                    __end_of_motorAltaveu:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _menu *****************
  3174 ;; Defined at:
  3175 ;;		line 42 in file "Menu.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1
  3189 ;;      Params:         0       0       0
  3190 ;;      Locals:         0       0       0
  3191 ;;      Temps:          0       5       0
  3192 ;;      Totals:         0       5       0
  3193 ;;Total ram usage:        5 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 6
  3196 ;; This function calls:
  3197 ;;		_CToAConverteix
  3198 ;;		_CToAHaAcabat
  3199 ;;		_CToAobtenir
  3200 ;;		_GLCDMostraMenu
  3201 ;;		_HActualitzaHora
  3202 ;;		_JJuguem
  3203 ;;		_JendGame
  3204 ;;		_JnovaDireccio
  3205 ;;		_JnovaTecla
  3206 ;;		_LcClear
  3207 ;;		_LcGotoXY
  3208 ;;		_LcLliure
  3209 ;;		_LcNewString
  3210 ;;		_LcPutChar
  3211 ;;		_LcScroll
  3212 ;;		_NoFerMenu
  3213 ;;		_SIOHaAcabatPuntuacions
  3214 ;;		_SMSoff
  3215 ;;		_SMSon
  3216 ;;		_SiFerMenu
  3217 ;;		_TiGetTics
  3218 ;;		_TiResetTics
  3219 ;;		_URegister
  3220 ;;		_UcheckExists
  3221 ;;		_UcheckExistsGetError
  3222 ;;		_UcheckExistsNotFinished
  3223 ;;		_UenviaChar
  3224 ;;		_UenviaPas
  3225 ;;		_UgetNumUsuaris
  3226 ;;		_UgetScore
  3227 ;;		_UgetTop5
  3228 ;;		_UgetUserName
  3229 ;;		_UshowUsersCalculat
  3230 ;;		_calculateShowUsers
  3231 ;;		_checkHoraAcabat
  3232 ;;		_getArrayShowUsers
  3233 ;;		_miraPassword
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text19
  3240  0000'                    __ptext19:
  3241                           	callstack 0
  3242  0000'                    _menu:
  3243                           	callstack 24
  3244                           
  3245                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3246                           
  3247                           ;incstack = 0
  3248  0000' D3AB               	goto	l7194
  3249  0002'                    l6650:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;Menu.c: 46:    LcClear();
  3253  0002' EC00' F000'        	call	_LcClear	;wreg free
  3254                           
  3255                           ;Menu.c: 47:    LcNewString(loginText);
  3256  0006' 0E00'              	movlw	low _loginText
  3257  0008' 6E00'              	movwf	LcNewString@new_s^0,c
  3258  000A' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  3259  000C' EC00' F000'        	call	_LcNewString	;wreg free
  3260                           
  3261                           ;Menu.c: 48:    state = 1;
  3262  0010' 0E01               	movlw	1
  3263  0012' 6E00'              	movwf	menu@state^0,c
  3264                           
  3265                           ;Menu.c: 49:   break;
  3266  0014' 0012               	return	
  3267  0016'                    l6656:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;Menu.c: 51:    if (LcLliure()) {
  3271  0016' EC00' F000'        	call	_LcLliure	;wreg free
  3272  001A' A0D8               	btfss	status,0,c
  3273  001C' 0012               	return	
  3274                           
  3275                           ;Menu.c: 52:     LcGotoXY(0,1);
  3276  001E' 0E01               	movlw	1
  3277  0020' 6E00'              	movwf	LcGotoXY@Row^0,c
  3278  0022' 0E00               	movlw	0
  3279  0024' EC00' F000'        	call	_LcGotoXY
  3280                           
  3281                           ;Menu.c: 53:     LcNewString(registerText);
  3282  0028' 0E00'              	movlw	low _registerText
  3283  002A' 6E00'              	movwf	LcNewString@new_s^0,c
  3284  002C' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  3285  002E' EC00' F000'        	call	_LcNewString	;wreg free
  3286                           
  3287                           ;Menu.c: 54:     NovaTecla = -1;
  3288  0032' 6800'              	setf	_NovaTecla^0,c
  3289                           
  3290                           ;Menu.c: 55:     state = 2;
  3291  0034' 0E02               	movlw	2
  3292  0036' 6E00'              	movwf	menu@state^0,c
  3293                           
  3294                           ;Menu.c: 57:   break;
  3295                           
  3296                           ;Menu.c: 56:    }
  3297  0038' 0012               	return	
  3298  003A'                    l6666:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3302  003A' 0400'              	decf	_NovaTecla^0,w,c
  3303  003C' A4D8               	btfss	status,2,c
  3304  003E' D004               	goto	l6672
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;Menu.c: 60:     loginNOTRegister = 1;
  3308  0040' 8000'              	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3309  0042'                    l6670:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;Menu.c: 61:     state = 3;
  3313  0042' 0E03               	movlw	3
  3314  0044' 6E00'              	movwf	menu@state^0,c
  3315                           
  3316                           ;Menu.c: 62:    }
  3317  0046' 0012               	return	
  3318  0048'                    l6672:
  3319                           
  3320                           ; BSR set to: 0
  3321  0048' 0E02               	movlw	2
  3322  004A' 1800'              	xorwf	_NovaTecla^0,w,c
  3323  004C' A4D8               	btfss	status,2,c
  3324  004E' 0012               	return	
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;Menu.c: 64:     loginNOTRegister = 0;
  3328  0050' 9000'              	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3329  0052' D7F7               	goto	l6670
  3330  0054'                    l511:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;Menu.c: 69:    NovaTecla = -1;
  3334  0054' 6800'              	setf	_NovaTecla^0,c
  3335                           
  3336                           ;Menu.c: 70:    novaLletra = -1;
  3337  0056' 6800'              	setf	_novaLletra^0,c
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;Menu.c: 71:    LcClear();
  3341  0058' EC00' F000'        	call	_LcClear	;wreg free
  3342                           
  3343                           ;Menu.c: 72:    LcNewString("USER: ");
  3344  005C' 0E00'              	movlw	low STR_1
  3345  005E' 6E00'              	movwf	LcNewString@new_s^0,c
  3346  0060' 5000'              	movf	LcNewString@new_s^0,w,c
  3347  0062' A4D8               	btfss	status,2,c
  3348  0064' 0E00'              	movlw	high __smallconst
  3349  0066' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3350  0068' EC00' F000'        	call	_LcNewString	;wreg free
  3351                           
  3352                           ;Menu.c: 73:    state = 4;
  3353  006C' 0E04               	movlw	4
  3354  006E' 6E00'              	movwf	menu@state^0,c
  3355                           
  3356                           ;Menu.c: 74:   break;
  3357  0070' 0012               	return	
  3358  0072'                    l6684:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;Menu.c: 76:    if (LcLliure()) {
  3362  0072' EC00' F000'        	call	_LcLliure	;wreg free
  3363  0076' A0D8               	btfss	status,0,c
  3364  0078' 0012               	return	
  3365                           
  3366                           ;Menu.c: 77:     LcGotoXY(0,1);
  3367  007A' 0E01               	movlw	1
  3368  007C' 6E00'              	movwf	LcGotoXY@Row^0,c
  3369  007E' 0E00               	movlw	0
  3370  0080' EC00' F000'        	call	_LcGotoXY
  3371                           
  3372                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3373  0084' 0E00'              	movlw	low STR_2
  3374  0086' 6E00'              	movwf	LcNewString@new_s^0,c
  3375  0088' 5000'              	movf	LcNewString@new_s^0,w,c
  3376  008A' A4D8               	btfss	status,2,c
  3377  008C' 0E00'              	movlw	high __smallconst
  3378  008E' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3379  0090' EC00' F000'        	call	_LcNewString	;wreg free
  3380                           
  3381                           ;Menu.c: 79:     state = 5;
  3382  0094' 0E05               	movlw	5
  3383  0096' 6E00'              	movwf	menu@state^0,c
  3384  0098' 0012               	return	
  3385  009A'                    l6692:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;Menu.c: 83:    if (LcLliure()) {
  3389  009A' EC00' F000'        	call	_LcLliure	;wreg free
  3390  009E' A0D8               	btfss	status,0,c
  3391  00A0' 0012               	return	
  3392                           
  3393                           ;Menu.c: 84:     LcGotoXY(6,0);
  3394  00A2' 0E00               	movlw	0
  3395  00A4' 6E00'              	movwf	LcGotoXY@Row^0,c
  3396  00A6' 0E06               	movlw	6
  3397  00A8' EC00' F000'        	call	_LcGotoXY
  3398                           
  3399                           ;Menu.c: 85:     SMSon();
  3400  00AC' EC00' F000'        	call	_SMSon	;wreg free
  3401                           
  3402                           ;Menu.c: 86:     tmp =0;
  3403  00B0' 0E00               	movlw	0
  3404  00B2' 6E00'              	movwf	_tmp^0,c
  3405  00B4'                    l6700:
  3406                           
  3407                           ;Menu.c: 87:     state = 6;
  3408  00B4' 0E06               	movlw	6
  3409  00B6' 6E00'              	movwf	menu@state^0,c
  3410  00B8' 0012               	return	
  3411  00BA'                    l6702:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3415  00BA' 5000'              	movf	_novaLletra^0,w,c
  3416  00BC' 0A80               	xorlw	128
  3417  00BE' 0F60               	addlw	-160
  3418  00C0' A0D8               	btfss	status,0,c
  3419  00C2' D00F               	goto	l6712
  3420                           
  3421                           ; BSR set to: 0
  3422  00C4' 0E0A               	movlw	10
  3423  00C6' 1800'              	xorwf	_NovaTecla^0,w,c
  3424  00C8' B4D8               	btfsc	status,2,c
  3425  00CA' D00B               	goto	l6712
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3429  00CC' 5000'              	movf	_novaLletra^0,w,c
  3430  00CE' EC00' F000'        	call	_LcPutChar
  3431                           
  3432                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3433  00D2' C032' F005'        	movff	_tmp,UenviaChar@pos
  3434  00D6' 5000'              	movf	_novaLletra^0,w,c
  3435  00D8' EC00' F000'        	call	_UenviaChar
  3436  00DC'                    l6710:
  3437                           
  3438                           ;Menu.c: 94:     state = 7;
  3439  00DC' 0E07               	movlw	7
  3440  00DE' 6E00'              	movwf	menu@state^0,c
  3441                           
  3442                           ;Menu.c: 95:    }
  3443  00E0' 0012               	return	
  3444  00E2'                    l6712:
  3445                           
  3446                           ; BSR set to: 0
  3447  00E2' 0E0B               	movlw	11
  3448  00E4' 1800'              	xorwf	_NovaTecla^0,w,c
  3449  00E6' A4D8               	btfss	status,2,c
  3450  00E8' 0012               	return	
  3451  00EA' D7F8               	goto	l6710
  3452  00EC'                    l6716:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3456  00EC' 0E07               	movlw	7
  3457  00EE' 1800'              	xorwf	_tmp^0,w,c
  3458  00F0' B4D8               	btfsc	status,2,c
  3459  00F2' D008               	goto	l6728
  3460                           
  3461                           ; BSR set to: 0
  3462  00F4' 0E0B               	movlw	11
  3463  00F6' 1800'              	xorwf	_NovaTecla^0,w,c
  3464  00F8' B4D8               	btfsc	status,2,c
  3465  00FA' D004               	goto	l6728
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;Menu.c: 102:     tmp++;
  3469  00FC' 2A00'              	incf	_tmp^0,f,c
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;Menu.c: 103:     NovaTecla = -1;
  3473  00FE' 6800'              	setf	_NovaTecla^0,c
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;Menu.c: 104:     novaLletra = -1;
  3477  0100' 6800'              	setf	_novaLletra^0,c
  3478  0102' D7D8               	goto	l6700
  3479  0104'                    l6728:
  3480                           
  3481                           ; BSR set to: 0
  3482  0104' 0E07               	movlw	7
  3483  0106' 1800'              	xorwf	_tmp^0,w,c
  3484  0108' B4D8               	btfsc	status,2,c
  3485  010A' D004               	goto	u7160
  3486                           
  3487                           ; BSR set to: 0
  3488  010C' 0E0B               	movlw	11
  3489  010E' 1800'              	xorwf	_NovaTecla^0,w,c
  3490  0110' A4D8               	btfss	status,2,c
  3491  0112' 0012               	return	
  3492  0114'                    u7160:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;Menu.c: 108:     LcGotoXY(6,1);
  3496  0114' 0E01               	movlw	1
  3497  0116' 6E00'              	movwf	LcGotoXY@Row^0,c
  3498  0118' 0E06               	movlw	6
  3499  011A' EC00' F000'        	call	_LcGotoXY
  3500                           
  3501                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3502  011E' C032' F005'        	movff	_tmp,UenviaChar@pos
  3503  0122' 0E00               	movlw	0
  3504  0124' EC00' F000'        	call	_UenviaChar
  3505                           
  3506                           ;Menu.c: 110:     NovaTecla = -1;
  3507  0128' 6800'              	setf	_NovaTecla^0,c
  3508                           
  3509                           ;Menu.c: 111:     novaLletra = -1;
  3510  012A' 6800'              	setf	_novaLletra^0,c
  3511                           
  3512                           ;Menu.c: 112:     tmp = 0;
  3513  012C' 0E00               	movlw	0
  3514  012E' 6E00'              	movwf	_tmp^0,c
  3515  0130'                    l6742:
  3516                           
  3517                           ;Menu.c: 113:     state = 8;
  3518  0130' 0E08               	movlw	8
  3519  0132' 6E00'              	movwf	menu@state^0,c
  3520  0134' 0012               	return	
  3521  0136'                    l6744:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3525  0136' 5000'              	movf	_novaLletra^0,w,c
  3526  0138' 0A80               	xorlw	128
  3527  013A' 0F60               	addlw	-160
  3528  013C' A0D8               	btfss	status,0,c
  3529  013E' D00F               	goto	l6754
  3530                           
  3531                           ; BSR set to: 0
  3532  0140' 0E0A               	movlw	10
  3533  0142' 1800'              	xorwf	_NovaTecla^0,w,c
  3534  0144' B4D8               	btfsc	status,2,c
  3535  0146' D00B               	goto	l6754
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3539  0148' 5000'              	movf	_novaLletra^0,w,c
  3540  014A' EC00' F000'        	call	_LcPutChar
  3541                           
  3542                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3543  014E' C032' F005'        	movff	_tmp,UenviaPas@pos
  3544  0152' 5000'              	movf	_novaLletra^0,w,c
  3545  0154' EC00' F000'        	call	_UenviaPas
  3546  0158'                    l6752:
  3547                           
  3548                           ;Menu.c: 120:     state = 9;
  3549  0158' 0E09               	movlw	9
  3550  015A' 6E00'              	movwf	menu@state^0,c
  3551                           
  3552                           ;Menu.c: 121:    }
  3553  015C' 0012               	return	
  3554  015E'                    l6754:
  3555                           
  3556                           ; BSR set to: 0
  3557  015E' 0E0B               	movlw	11
  3558  0160' 1800'              	xorwf	_NovaTecla^0,w,c
  3559  0162' A4D8               	btfss	status,2,c
  3560  0164' 0012               	return	
  3561  0166' D7F8               	goto	l6752
  3562  0168'                    l6758:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3566  0168' 0E07               	movlw	7
  3567  016A' 1800'              	xorwf	_tmp^0,w,c
  3568  016C' B4D8               	btfsc	status,2,c
  3569  016E' D008               	goto	l6770
  3570                           
  3571                           ; BSR set to: 0
  3572  0170' 0E0B               	movlw	11
  3573  0172' 1800'              	xorwf	_NovaTecla^0,w,c
  3574  0174' B4D8               	btfsc	status,2,c
  3575  0176' D004               	goto	l6770
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;Menu.c: 128:     tmp++;
  3579  0178' 2A00'              	incf	_tmp^0,f,c
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;Menu.c: 129:     NovaTecla = -1;
  3583  017A' 6800'              	setf	_NovaTecla^0,c
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;Menu.c: 130:     novaLletra = -1;
  3587  017C' 6800'              	setf	_novaLletra^0,c
  3588  017E' D7D8               	goto	l6742
  3589  0180'                    l6770:
  3590                           
  3591                           ; BSR set to: 0
  3592  0180' 0E07               	movlw	7
  3593  0182' 1800'              	xorwf	_tmp^0,w,c
  3594  0184' B4D8               	btfsc	status,2,c
  3595  0186' D004               	goto	u7230
  3596                           
  3597                           ; BSR set to: 0
  3598  0188' 0E0B               	movlw	11
  3599  018A' 1800'              	xorwf	_NovaTecla^0,w,c
  3600  018C' A4D8               	btfss	status,2,c
  3601  018E' 0012               	return	
  3602  0190'                    u7230:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3606  0190' C032' F005'        	movff	_tmp,UenviaPas@pos
  3607  0194' 0E00               	movlw	0
  3608  0196' EC00' F000'        	call	_UenviaPas
  3609                           
  3610                           ;Menu.c: 135:     NovaTecla = -1;
  3611  019A' 6800'              	setf	_NovaTecla^0,c
  3612                           
  3613                           ;Menu.c: 136:     novaLletra = -1;
  3614  019C' 6800'              	setf	_novaLletra^0,c
  3615                           
  3616                           ;Menu.c: 137:     tmp = 0;
  3617  019E' 0E00               	movlw	0
  3618  01A0' 6E00'              	movwf	_tmp^0,c
  3619                           
  3620                           ;Menu.c: 138:     UcheckExists();
  3621  01A2' EC00' F000'        	call	_UcheckExists	;wreg free
  3622                           
  3623                           ;Menu.c: 139:     SMSoff();
  3624  01A6' EC00' F000'        	call	_SMSoff	;wreg free
  3625                           
  3626                           ;Menu.c: 140:     state = 10;
  3627  01AA' 0E0A               	movlw	10
  3628  01AC' 6E00'              	movwf	menu@state^0,c
  3629  01AE' 0012               	return	
  3630  01B0'                    l6788:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3634  01B0' EC00' F000'        	call	_UcheckExistsNotFinished	;wreg free
  3635  01B4' B0D8               	btfsc	status,0,c
  3636  01B6' 0012               	return	
  3637                           
  3638                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3639  01B8' EC00' F000'        	call	_UcheckExistsGetError	;wreg free
  3640  01BC' 6E00'              	movwf	_indexUsuari^0,c
  3641                           
  3642                           ;Menu.c: 146:     state = 11;
  3643  01BE' 0E0B               	movlw	11
  3644  01C0' 6E00'              	movwf	menu@state^0,c
  3645  01C2' 0012               	return	
  3646  01C4'                    l538:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3650  01C4' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3651  01C6' D008               	goto	l539
  3652                           
  3653                           ; BSR set to: 0
  3654  01C8' 2800'              	incf	_indexUsuari^0,w,c
  3655  01CA' A4D8               	btfss	status,2,c
  3656  01CC' D005               	goto	l539
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;Menu.c: 151:     URegister();
  3660  01CE' EC00' F000'        	call	_URegister	;wreg free
  3661  01D2'                    l6798:
  3662                           
  3663                           ;Menu.c: 152:     state = 0;
  3664  01D2' 0E00               	movlw	0
  3665  01D4' 6E00'              	movwf	menu@state^0,c
  3666                           
  3667                           ;Menu.c: 153:    }
  3668  01D6' 0012               	return	
  3669  01D8'                    l539:
  3670                           
  3671                           ; BSR set to: 0
  3672  01D8' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3673                           
  3674                           ; BSR set to: 0
  3675  01DA' BE00'              	btfsc	_indexUsuari^0,7,c
  3676  01DC' D007               	goto	l541
  3677                           
  3678                           ; BSR set to: 0
  3679  01DE' EC00' F000'        	call	_miraPassword	;wreg free
  3680  01E2' A0D8               	btfss	status,0,c
  3681  01E4' D003               	goto	l541
  3682  01E6'                    u7290:
  3683                           
  3684                           ;Menu.c: 155:     state = 12;
  3685  01E6' 0E0C               	movlw	12
  3686  01E8' 6E00'              	movwf	menu@state^0,c
  3687                           
  3688                           ;Menu.c: 156:    }
  3689  01EA' 0012               	return	
  3690  01EC'                    l541:
  3691  01EC' A000'              	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3692  01EE' D003               	goto	u7310
  3693  01F0' 2800'              	incf	_indexUsuari^0,w,c
  3694  01F2' B4D8               	btfsc	status,2,c
  3695  01F4' D7EE               	goto	l6798
  3696  01F6'                    u7310:
  3697  01F6' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3698  01F8' D002               	goto	u7330
  3699  01FA' AE00'              	btfss	_indexUsuari^0,7,c
  3700  01FC' D7EA               	goto	l6798
  3701  01FE'                    u7330:
  3702  01FE' EC00' F000'        	call	_miraPassword	;wreg free
  3703  0202' B0D8               	btfsc	status,0,c
  3704  0204' 0012               	return	
  3705  0206' D7E5               	goto	l6798
  3706  0208'                    l6814:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;Menu.c: 162:    LcClear();
  3710  0208' EC00' F000'        	call	_LcClear	;wreg free
  3711                           
  3712                           ;Menu.c: 163:    SiFerMenu();
  3713  020C' EC00' F000'        	call	_SiFerMenu	;wreg free
  3714                           
  3715                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3716  0210' 5000'              	movf	_menuDalt^0,w,c
  3717  0212' EC00' F000'        	call	_GLCDMostraMenu
  3718                           
  3719                           ;Menu.c: 165:    novaDireccio = -1;
  3720  0216' 6800'              	setf	_novaDireccio^0,c
  3721                           
  3722                           ;Menu.c: 166:    NovaTecla = -1;
  3723  0218' 6800'              	setf	_NovaTecla^0,c
  3724                           
  3725                           ;Menu.c: 167:    state = 13;
  3726  021A' 0E0D               	movlw	13
  3727  021C' 6E00'              	movwf	menu@state^0,c
  3728                           
  3729                           ;Menu.c: 168:   break;
  3730  021E' 0012               	return	
  3731  0220'                    l6826:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3735  0220' 0E08               	movlw	8
  3736  0222' 1800'              	xorwf	_novaDireccio^0,w,c
  3737  0224' A4D8               	btfss	status,2,c
  3738  0226' D005               	goto	l6834
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3742  0228' 0E04               	movlw	4
  3743  022A' 6000'              	cpfslt	_menuDalt^0,c
  3744  022C' D7DC               	goto	u7290
  3745                           
  3746                           ; BSR set to: 0
  3747  022E' 2A00'              	incf	_menuDalt^0,f,c
  3748  0230' D7DA               	goto	u7290
  3749  0232'                    l6834:
  3750                           
  3751                           ; BSR set to: 0
  3752  0232' 0E02               	movlw	2
  3753  0234' 1800'              	xorwf	_novaDireccio^0,w,c
  3754  0236' A4D8               	btfss	status,2,c
  3755  0238' D005               	goto	l6842
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3759  023A' 5000'              	movf	_menuDalt^0,w,c
  3760  023C' B4D8               	btfsc	status,2,c
  3761  023E' D7D3               	goto	u7290
  3762                           
  3763                           ; BSR set to: 0
  3764  0240' 0600'              	decf	_menuDalt^0,f,c
  3765  0242' D7D1               	goto	u7290
  3766  0244'                    l6842:
  3767                           
  3768                           ; BSR set to: 0
  3769  0244' 0E0B               	movlw	11
  3770  0246' 1800'              	xorwf	_NovaTecla^0,w,c
  3771  0248' A4D8               	btfss	status,2,c
  3772  024A' D013               	goto	l6854
  3773                           
  3774                           ; BSR set to: 0
  3775  024C' 0E03               	movlw	3
  3776  024E' 1800'              	xorwf	_menuDalt^0,w,c
  3777  0250' A4D8               	btfss	status,2,c
  3778  0252' D00F               	goto	l6854
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;Menu.c: 179:     NoFerMenu();
  3782  0254' EC00' F000'        	call	_NoFerMenu	;wreg free
  3783                           
  3784                           ;Menu.c: 180:     LcClear();
  3785  0258' EC00' F000'        	call	_LcClear	;wreg free
  3786                           
  3787                           ;Menu.c: 181:     LcNewString("BYE BYE ");
  3788  025C' 0E00'              	movlw	low STR_3
  3789  025E' 6E00'              	movwf	LcNewString@new_s^0,c
  3790  0260' 5000'              	movf	LcNewString@new_s^0,w,c
  3791  0262' A4D8               	btfss	status,2,c
  3792  0264' 0E00'              	movlw	high __smallconst
  3793  0266' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3794  0268' EC00' F000'        	call	_LcNewString	;wreg free
  3795                           
  3796                           ;Menu.c: 182:     state = 14;
  3797  026C' 0E0E               	movlw	14
  3798  026E' 6E00'              	movwf	menu@state^0,c
  3799                           
  3800                           ;Menu.c: 183:    }
  3801  0270' 0012               	return	
  3802  0272'                    l6854:
  3803                           
  3804                           ; BSR set to: 0
  3805  0272' 0E0B               	movlw	11
  3806  0274' 1800'              	xorwf	_NovaTecla^0,w,c
  3807  0276' A4D8               	btfss	status,2,c
  3808  0278' D013               	goto	l6868
  3809                           
  3810                           ; BSR set to: 0
  3811  027A' 0400'              	decf	_menuDalt^0,w,c
  3812  027C' A4D8               	btfss	status,2,c
  3813  027E' D010               	goto	l6868
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;Menu.c: 185:     LcClear();
  3817  0280' EC00' F000'        	call	_LcClear	;wreg free
  3818                           
  3819                           ;Menu.c: 186:     NoFerMenu();
  3820  0284' EC00' F000'        	call	_NoFerMenu	;wreg free
  3821                           
  3822                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3823  0288' 0E00'              	movlw	low STR_4
  3824  028A' 6E00'              	movwf	LcNewString@new_s^0,c
  3825  028C' 5000'              	movf	LcNewString@new_s^0,w,c
  3826  028E' A4D8               	btfss	status,2,c
  3827  0290' 0E00'              	movlw	high __smallconst
  3828  0292' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3829  0294' EC00' F000'        	call	_LcNewString	;wreg free
  3830                           
  3831                           ;Menu.c: 188:     NovaTecla = -1;
  3832  0298' 6800'              	setf	_NovaTecla^0,c
  3833                           
  3834                           ;Menu.c: 189:     state = 16;
  3835  029A' 0E10               	movlw	16
  3836  029C' 6E00'              	movwf	menu@state^0,c
  3837                           
  3838                           ;Menu.c: 190:    }
  3839  029E' 0012               	return	
  3840  02A0'                    l6868:
  3841                           
  3842                           ; BSR set to: 0
  3843  02A0' 5000'              	movf	_menuDalt^0,w,c
  3844  02A2' A4D8               	btfss	status,2,c
  3845  02A4' D017               	goto	l6884
  3846                           
  3847                           ; BSR set to: 0
  3848  02A6' 0E0B               	movlw	11
  3849  02A8' 1800'              	xorwf	_NovaTecla^0,w,c
  3850  02AA' A4D8               	btfss	status,2,c
  3851  02AC' D013               	goto	l6884
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;Menu.c: 192:     NoFerMenu();
  3855  02AE' EC00' F000'        	call	_NoFerMenu	;wreg free
  3856                           
  3857                           ;Menu.c: 193:     NovaTecla = -1;
  3858  02B2' 6800'              	setf	_NovaTecla^0,c
  3859                           
  3860                           ;Menu.c: 194:     LcClear();
  3861  02B4' EC00' F000'        	call	_LcClear	;wreg free
  3862                           
  3863                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3864  02B8' 0E00'              	movlw	low STR_5
  3865  02BA' 6E00'              	movwf	LcNewString@new_s^0,c
  3866  02BC' 5000'              	movf	LcNewString@new_s^0,w,c
  3867  02BE' A4D8               	btfss	status,2,c
  3868  02C0' 0E00'              	movlw	high __smallconst
  3869  02C2' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3870  02C4' EC00' F000'        	call	_LcNewString	;wreg free
  3871                           
  3872                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3873  02C8' 5000'              	movf	_indexUsuari^0,w,c
  3874  02CA' EC00' F000'        	call	_JJuguem
  3875  02CE'                    l6882:
  3876                           
  3877                           ;Menu.c: 197:     state = 21;
  3878  02CE' 0E15               	movlw	21
  3879  02D0' 6E00'              	movwf	menu@state^0,c
  3880                           
  3881                           ;Menu.c: 198:    }
  3882  02D2' 0012               	return	
  3883  02D4'                    l6884:
  3884                           
  3885                           ; BSR set to: 0
  3886  02D4' 0E0B               	movlw	11
  3887  02D6' 1800'              	xorwf	_NovaTecla^0,w,c
  3888  02D8' A4D8               	btfss	status,2,c
  3889  02DA' D010               	goto	l6900
  3890                           
  3891                           ; BSR set to: 0
  3892  02DC' 0E04               	movlw	4
  3893  02DE' 1800'              	xorwf	_menuDalt^0,w,c
  3894  02E0' A4D8               	btfss	status,2,c
  3895  02E2' D00C               	goto	l6900
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;Menu.c: 200:     NoFerMenu();
  3899  02E4' EC00' F000'        	call	_NoFerMenu	;wreg free
  3900                           
  3901                           ;Menu.c: 201:     LcClear();
  3902  02E8' EC00' F000'        	call	_LcClear	;wreg free
  3903                           
  3904                           ;Menu.c: 202:     menuDalt = 0;
  3905  02EC' 0E00               	movlw	0
  3906  02EE' 6E00'              	movwf	_menuDalt^0,c
  3907                           
  3908                           ;Menu.c: 203:     NovaTecla = -1;
  3909  02F0' 6800'              	setf	_NovaTecla^0,c
  3910                           
  3911                           ;Menu.c: 204:     calculateShowUsers();
  3912  02F2' EC00' F000'        	call	_calculateShowUsers	;wreg free
  3913                           
  3914                           ;Menu.c: 205:     state = 30;
  3915  02F6' 0E1E               	movlw	30
  3916  02F8' 6E00'              	movwf	menu@state^0,c
  3917                           
  3918                           ;Menu.c: 206:    }
  3919  02FA' 0012               	return	
  3920  02FC'                    l6900:
  3921                           
  3922                           ; BSR set to: 0
  3923  02FC' 0E0B               	movlw	11
  3924  02FE' 1800'              	xorwf	_NovaTecla^0,w,c
  3925  0300' A4D8               	btfss	status,2,c
  3926  0302' 0012               	return	
  3927                           
  3928                           ; BSR set to: 0
  3929  0304' 0E02               	movlw	2
  3930  0306' 1800'              	xorwf	_menuDalt^0,w,c
  3931  0308' A4D8               	btfss	status,2,c
  3932  030A' 0012               	return	
  3933                           
  3934                           ; BSR set to: 0
  3935  030C' 0E00               	movlw	0
  3936  030E' EC00' F000'        	call	_UgetTop5
  3937  0312' 0AFF               	xorlw	255
  3938  0314' B4D8               	btfsc	status,2,c
  3939  0316' 0012               	return	
  3940                           
  3941                           ;Menu.c: 208:     NoFerMenu();
  3942  0318' EC00' F000'        	call	_NoFerMenu	;wreg free
  3943                           
  3944                           ;Menu.c: 209:     LcClear();
  3945  031C' EC00' F000'        	call	_LcClear	;wreg free
  3946                           
  3947                           ;Menu.c: 210:     menuDalt = 0;
  3948  0320' 0E00               	movlw	0
  3949  0322' 6E00'              	movwf	_menuDalt^0,c
  3950                           
  3951                           ;Menu.c: 211:     NovaTecla = -1;
  3952  0324' 6800'              	setf	_NovaTecla^0,c
  3953  0326'                    l6914:
  3954                           
  3955                           ;Menu.c: 212:     state = 31;
  3956  0326' 0E1F               	movlw	31
  3957  0328' 6E00'              	movwf	menu@state^0,c
  3958  032A' 0012               	return	
  3959  032C'                    l6916:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;Menu.c: 216:    if (LcLliure()) {
  3963  032C' EC00' F000'        	call	_LcLliure	;wreg free
  3964  0330' A0D8               	btfss	status,0,c
  3965  0332' 0012               	return	
  3966                           
  3967                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3968  0334' 5000'              	movf	_indexUsuari^0,w,c
  3969  0336' EC00' F000'        	call	_UgetUserName
  3970  033A' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  3971  033E' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  3972  0342' EC00' F000'        	call	_LcNewString	;wreg free
  3973                           
  3974                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3975  0346' 5000'              	movf	_timerMenu^0,w,c
  3976  0348' EC00' F000'        	call	_TiResetTics
  3977                           
  3978                           ;Menu.c: 219:     state = 15;
  3979  034C' 0E0F               	movlw	15
  3980  034E' 6E00'              	movwf	menu@state^0,c
  3981  0350' 0012               	return	
  3982  0352'                    l6924:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3986  0352' 5000'              	movf	_timerMenu^0,w,c
  3987  0354' EC00' F000'        	call	_TiGetTics
  3988  0358' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  3989  035A' 0012               	return	
  3990  035C' 0E6B               	movlw	107
  3991  035E' 5C00'              	subwf	?_TiGetTics^0,w,c
  3992  0360' 0E09               	movlw	9
  3993  0362' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  3994  0364' A0D8               	btfss	status,0,c
  3995  0366' 0012               	return	
  3996  0368' D734               	goto	l6798
  3997  036A'                    l6928:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  4001  036A' EC00' F000'        	call	_LcLliure	;wreg free
  4002  036E' B0D8               	btfsc	status,0,c
  4003  0370' BE00'              	btfsc	_NovaTecla^0,7,c
  4004  0372' D04B               	goto	l6994
  4005  0374' 5000'              	movf	_NovaTecla^0,w,c
  4006  0376' 0A80               	xorlw	128
  4007  0378' 0F76               	addlw	-138
  4008  037A' B0D8               	btfsc	status,0,c
  4009  037C' D046               	goto	l6994
  4010                           
  4011                           ;Menu.c: 229:     LcGotoXY(0,1);
  4012  037E' 0E01               	movlw	1
  4013  0380' 6E00'              	movwf	LcGotoXY@Row^0,c
  4014  0382' 0E00               	movlw	0
  4015  0384' EC00' F000'        	call	_LcGotoXY
  4016                           
  4017                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  4018  0388' 5000'              	movf	_NovaTecla^0,w,c
  4019  038A' 0F30               	addlw	48
  4020  038C' 6E00'              	movwf	_horaTmp^0,c
  4021                           
  4022                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  4023  038E' 5000'              	movf	_horaTmp^0,w,c
  4024  0390' EC00' F000'        	call	_LcPutChar
  4025                           
  4026                           ;Menu.c: 232:     NovaTecla = -1;
  4027  0394' 6800'              	setf	_NovaTecla^0,c
  4028                           
  4029                           ;Menu.c: 233:     state = 17;
  4030  0396' 0E11               	movlw	17
  4031  0398'                    L2:
  4032  0398' 6E00'              	movwf	menu@state^0,c
  4033                           
  4034                           ;Menu.c: 234:    }
  4035  039A' 0012               	return	
  4036  039C'                    L3:
  4037  039C' 1800'              	xorwf	_NovaTecla^0,w,c
  4038  039E' A4D8               	btfss	status,2,c
  4039  03A0' 0012               	return	
  4040  03A2' D721               	goto	u7290
  4041  03A4'                    l6948:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  4045  03A4' BE00'              	btfsc	_NovaTecla^0,7,c
  4046  03A6' D031               	goto	l6994
  4047                           
  4048                           ; BSR set to: 0
  4049  03A8' 5000'              	movf	_NovaTecla^0,w,c
  4050  03AA' 0A80               	xorlw	128
  4051  03AC' 0F76               	addlw	-138
  4052  03AE' B0D8               	btfsc	status,0,c
  4053  03B0' D02C               	goto	l6994
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  4057  03B2' 5000'              	movf	_NovaTecla^0,w,c
  4058  03B4' 0F30               	addlw	48
  4059  03B6' 6E00'              	movwf	(_horaTmp+1)^0,c
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  4063  03B8' 5000'              	movf	(_horaTmp+1)^0,w,c
  4064  03BA' EC00' F000'        	call	_LcPutChar
  4065                           
  4066                           ;Menu.c: 243:     NovaTecla = -1;
  4067  03BE' 6800'              	setf	_NovaTecla^0,c
  4068                           
  4069                           ;Menu.c: 244:     LcPutChar(':');
  4070  03C0' 0E3A               	movlw	58
  4071  03C2' EC00' F000'        	call	_LcPutChar
  4072                           
  4073                           ;Menu.c: 245:     state = 18;
  4074  03C6' 0E12               	movlw	18
  4075  03C8' D7E7               	goto	L2
  4076  03CA'                    l6966:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  4080  03CA' BE00'              	btfsc	_NovaTecla^0,7,c
  4081  03CC' D01E               	goto	l6994
  4082                           
  4083                           ; BSR set to: 0
  4084  03CE' 5000'              	movf	_NovaTecla^0,w,c
  4085  03D0' 0A80               	xorlw	128
  4086  03D2' 0F76               	addlw	-138
  4087  03D4' B0D8               	btfsc	status,0,c
  4088  03D6' D019               	goto	l6994
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  4092  03D8' 5000'              	movf	_NovaTecla^0,w,c
  4093  03DA' 0F30               	addlw	48
  4094  03DC' 6E00'              	movwf	(_horaTmp+2)^0,c
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  4098  03DE' 5000'              	movf	(_horaTmp+2)^0,w,c
  4099  03E0' EC00' F000'        	call	_LcPutChar
  4100                           
  4101                           ;Menu.c: 255:     NovaTecla = -1;
  4102  03E4' 6800'              	setf	_NovaTecla^0,c
  4103                           
  4104                           ;Menu.c: 256:     state = 19;
  4105  03E6' 0E13               	movlw	19
  4106  03E8' D7D7               	goto	L2
  4107  03EA'                    l6982:
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  4111  03EA' BE00'              	btfsc	_NovaTecla^0,7,c
  4112  03EC' D00E               	goto	l6994
  4113                           
  4114                           ; BSR set to: 0
  4115  03EE' 5000'              	movf	_NovaTecla^0,w,c
  4116  03F0' 0A80               	xorlw	128
  4117  03F2' 0F76               	addlw	-138
  4118  03F4' B0D8               	btfsc	status,0,c
  4119  03F6' D009               	goto	l6994
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  4123  03F8' 5000'              	movf	_NovaTecla^0,w,c
  4124  03FA' 0F30               	addlw	48
  4125  03FC' 6E00'              	movwf	(_horaTmp+3)^0,c
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  4129  03FE' 5000'              	movf	(_horaTmp+3)^0,w,c
  4130  0400' EC00' F000'        	call	_LcPutChar
  4131                           
  4132                           ;Menu.c: 266:     NovaTecla = -1;
  4133  0404' 6800'              	setf	_NovaTecla^0,c
  4134                           
  4135                           ;Menu.c: 267:     state = 20;
  4136  0406' 0E14               	movlw	20
  4137  0408' D7C7               	goto	L2
  4138  040A'                    l6994:
  4139                           
  4140                           ; BSR set to: 0
  4141  040A' 0E0A               	movlw	10
  4142  040C' D7C7               	goto	L3
  4143  040E'                    l6998:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;Menu.c: 274:    if (NovaTecla == 11) {
  4147  040E' 0E0B               	movlw	11
  4148  0410' 1800'              	xorwf	_NovaTecla^0,w,c
  4149  0412' A4D8               	btfss	status,2,c
  4150  0414' D7FA               	goto	l6994
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  4154  0416' 0E00'              	movlw	low _horaTmp
  4155  0418' 6E00'              	movwf	HActualitzaHora@nova^0,c
  4156  041A' EC00' F000'        	call	_HActualitzaHora	;wreg free
  4157                           
  4158                           ;Menu.c: 276:     NovaTecla = -1;
  4159  041E' 6800'              	setf	_NovaTecla^0,c
  4160  0420' D6E2               	goto	u7290
  4161  0422'                    l7010:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  4165  0422' 0E0A               	movlw	10
  4166  0424' 1800'              	xorwf	_NovaTecla^0,w,c
  4167  0426' A4D8               	btfss	status,2,c
  4168  0428' D004               	goto	u7680
  4169                           
  4170                           ; BSR set to: 0
  4171  042A' EC00' F000'        	call	_LcLliure	;wreg free
  4172  042E' B0D8               	btfsc	status,0,c
  4173  0430' D004               	goto	u7690
  4174  0432'                    u7680:
  4175  0432' EC00' F000'        	call	_checkHoraAcabat	;wreg free
  4176  0436' A0D8               	btfss	status,0,c
  4177  0438' D007               	goto	l7022
  4178  043A'                    u7690:
  4179                           
  4180                           ;Menu.c: 285:     LcClear();
  4181  043A' EC00' F000'        	call	_LcClear	;wreg free
  4182                           
  4183                           ;Menu.c: 286:     JendGame();
  4184  043E' EC00' F000'        	call	_JendGame	;wreg free
  4185                           
  4186                           ;Menu.c: 287:     state = 22;
  4187  0442' 0E16               	movlw	22
  4188  0444' 6E00'              	movwf	menu@state^0,c
  4189                           
  4190                           ;Menu.c: 288:    }
  4191  0446' 0012               	return	
  4192  0448'                    l7022:
  4193  0448' 5000'              	movf	_NovaTecla^0,w,c
  4194  044A' 0A80               	xorlw	128
  4195  044C' 0F7F               	addlw	-129
  4196  044E' A0D8               	btfss	status,0,c
  4197  0450' D00A               	goto	l7032
  4198  0452' 5000'              	movf	_NovaTecla^0,w,c
  4199  0454' 0A80               	xorlw	128
  4200  0456' 0F76               	addlw	-138
  4201  0458' B0D8               	btfsc	status,0,c
  4202  045A' D005               	goto	l7032
  4203                           
  4204                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  4205  045C' 5000'              	movf	_NovaTecla^0,w,c
  4206  045E' EC00' F000'        	call	_JnovaTecla
  4207                           
  4208                           ;Menu.c: 291:     NovaTecla = -1;
  4209  0462' 6800'              	setf	_NovaTecla^0,c
  4210  0464' D734               	goto	l6882
  4211  0466'                    l7032:
  4212  0466' BE00'              	btfsc	_novaDireccio^0,7,c
  4213  0468' 0012               	return	
  4214                           
  4215                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  4216  046A' 5000'              	movf	_novaDireccio^0,w,c
  4217  046C' EC00' F000'        	call	_JnovaDireccio
  4218                           
  4219                           ;Menu.c: 296:     novaDireccio = -1;
  4220  0470' 6800'              	setf	_novaDireccio^0,c
  4221  0472' D72D               	goto	l6882
  4222  0474'                    l7040:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4226  0474' EC00' F000'        	call	_SIOHaAcabatPuntuacions	;wreg free
  4227  0478' 0900               	iorlw	0
  4228  047A' B4D8               	btfsc	status,2,c
  4229  047C' 0012               	return	
  4230  047E' 0E0B               	movlw	11
  4231  0480' D78D               	goto	L3
  4232  0482'                    l7046:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;Menu.c: 306:    if (LcLliure()) {
  4236  0482' EC00' F000'        	call	_LcLliure	;wreg free
  4237  0486' A0D8               	btfss	status,0,c
  4238  0488' 0012               	return	
  4239                           
  4240                           ;Menu.c: 307:     LcGotoXY(0,0);
  4241  048A' 0E00               	movlw	0
  4242  048C' 6E00'              	movwf	LcGotoXY@Row^0,c
  4243  048E' 0E00               	movlw	0
  4244  0490' EC00' F000'        	call	_LcGotoXY
  4245                           
  4246                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  4247  0494' 5000'              	movf	_menuDalt^0,w,c
  4248  0496' EC00' F000'        	call	_getArrayShowUsers
  4249  049A' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4250  049E' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4251  04A2' EC00' F000'        	call	_LcNewString	;wreg free
  4252                           
  4253                           ;Menu.c: 309:     menuDalt++;
  4254  04A6' 2A00'              	incf	_menuDalt^0,f,c
  4255                           
  4256                           ;Menu.c: 310:     state = 24;
  4257  04A8' 0E18               	movlw	24
  4258  04AA' 6E00'              	movwf	menu@state^0,c
  4259  04AC' 0012               	return	
  4260  04AE'                    l7054:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;Menu.c: 314:    if (LcLliure()) {
  4264  04AE' EC00' F000'        	call	_LcLliure	;wreg free
  4265  04B2' A0D8               	btfss	status,0,c
  4266  04B4' 0012               	return	
  4267                           
  4268                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4269  04B6' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4270  04BA' 6000'              	cpfslt	_menuDalt^0,c
  4271  04BC' D010               	goto	l7062
  4272                           
  4273                           ;Menu.c: 316:       LcGotoXY(0,1);
  4274  04BE' 0E01               	movlw	1
  4275  04C0' 6E00'              	movwf	LcGotoXY@Row^0,c
  4276  04C2' 0E00               	movlw	0
  4277  04C4' EC00' F000'        	call	_LcGotoXY
  4278                           
  4279                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4280  04C8' 5000'              	movf	_menuDalt^0,w,c
  4281  04CA' EC00' F000'        	call	_getArrayShowUsers
  4282  04CE' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4283  04D2' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4284  04D6' EC00' F000'        	call	_LcNewString	;wreg free
  4285                           
  4286                           ;Menu.c: 318:       menuDalt++;
  4287  04DA' 2A00'              	incf	_menuDalt^0,f,c
  4288                           
  4289                           ;Menu.c: 319:     } else {
  4290  04DC' D002               	goto	l608
  4291  04DE'                    l7062:
  4292                           
  4293                           ;Menu.c: 320:       menuDalt = 0;
  4294  04DE' 0E00               	movlw	0
  4295  04E0' 6E00'              	movwf	_menuDalt^0,c
  4296  04E2'                    l608:
  4297                           
  4298                           ;Menu.c: 322:     state = 25;
  4299  04E2' 0E19               	movlw	25
  4300  04E4' 6E00'              	movwf	menu@state^0,c
  4301  04E6' 0012               	return	
  4302  04E8'                    l7064:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;Menu.c: 326:    if (LcLliure()) {
  4306  04E8' EC00' F000'        	call	_LcLliure	;wreg free
  4307  04EC' A0D8               	btfss	status,0,c
  4308  04EE' 0012               	return	
  4309                           
  4310                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4311  04F0' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4312  04F4' 1800'              	xorwf	_menuDalt^0,w,c
  4313  04F6' A4D8               	btfss	status,2,c
  4314  04F8' D002               	goto	l7070
  4315                           
  4316                           ;Menu.c: 328:       menuDalt = 0;
  4317  04FA' 0E00               	movlw	0
  4318  04FC' 6E00'              	movwf	_menuDalt^0,c
  4319  04FE'                    l7070:
  4320                           
  4321                           ;Menu.c: 330:     LcGotoXY(16,0);
  4322  04FE' 0E00               	movlw	0
  4323  0500' 6E00'              	movwf	LcGotoXY@Row^0,c
  4324  0502' 0E10               	movlw	16
  4325  0504' EC00' F000'        	call	_LcGotoXY
  4326                           
  4327                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4328  0508' 5000'              	movf	_menuDalt^0,w,c
  4329  050A' EC00' F000'        	call	_getArrayShowUsers
  4330  050E' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4331  0512' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4332  0516' EC00' F000'        	call	_LcNewString	;wreg free
  4333                           
  4334                           ;Menu.c: 332:     state = 26;
  4335  051A' 0E1A               	movlw	26
  4336  051C' 6E00'              	movwf	menu@state^0,c
  4337  051E' 0012               	return	
  4338  0520'                    l7074:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;Menu.c: 336:    if (LcLliure()) {
  4342  0520' EC00' F000'        	call	_LcLliure	;wreg free
  4343  0524' A0D8               	btfss	status,0,c
  4344  0526' 0012               	return	
  4345                           
  4346                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4347  0528' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4348  052C' 0100               	movlb	0	; () banked
  4349  052E' 6F00'              	movwf	??_menu& (0+255),b
  4350  0530' 6B00'              	clrf	(??_menu+1)& (0+255),b
  4351  0532' 5000'              	movf	_menuDalt^0,w,c
  4352  0534' 6F00'              	movwf	(??_menu+2)& (0+255),b
  4353  0536' 6B00'              	clrf	(??_menu+3)& (0+255),b
  4354  0538' 0E01               	movlw	1
  4355  053A' 2700'              	addwf	(??_menu+2)& (0+255),f,b
  4356  053C' 0E00               	movlw	0
  4357  053E' 2300'              	addwfc	(??_menu+3)& (0+255),f,b
  4358  0540' 5100'              	movf	??_menu& (0+255),w,b
  4359  0542' 5D00'              	subwf	(??_menu+2)& (0+255),w,b
  4360  0544' 5100'              	movf	(??_menu+3)& (0+255),w,b
  4361  0546' 0A80               	xorlw	128
  4362  0548' 6F00'              	movwf	(??_menu+4)& (0+255),b
  4363  054A' 5100'              	movf	(??_menu+1)& (0+255),w,b
  4364  054C' 0A80               	xorlw	128
  4365  054E' 5900'              	subwfb	(??_menu+4)& (0+255),w,b
  4366  0550' B0D8               	btfsc	status,0,c
  4367  0552' D00E               	goto	l7080
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;Menu.c: 338:       LcGotoXY(16,1);
  4371  0554' 0E01               	movlw	1
  4372  0556' 6E00'              	movwf	LcGotoXY@Row^0,c
  4373  0558' 0E10               	movlw	16
  4374  055A' EC00' F000'        	call	_LcGotoXY
  4375                           
  4376                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4377  055E' 2800'              	incf	_menuDalt^0,w,c
  4378  0560' EC00' F000'        	call	_getArrayShowUsers
  4379  0564' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4380  0568' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4381  056C' EC00' F000'        	call	_LcNewString	;wreg free
  4382  0570'                    l7080:
  4383                           
  4384                           ;Menu.c: 341:     state = 27;
  4385  0570' 0E1B               	movlw	27
  4386  0572' 6E00'              	movwf	menu@state^0,c
  4387  0574' 0012               	return	
  4388  0576'                    l7082:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4392  0576' 5000'              	movf	_timerMenu^0,w,c
  4393  0578' EC00' F000'        	call	_TiGetTics
  4394  057C' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  4395  057E' D009               	goto	l7086
  4396  0580' 0EB6               	movlw	182
  4397  0582' 5C00'              	subwf	?_TiGetTics^0,w,c
  4398  0584' 0E04               	movlw	4
  4399  0586' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  4400  0588' A0D8               	btfss	status,0,c
  4401  058A' D003               	goto	l7086
  4402                           
  4403                           ;Menu.c: 346:     state = 29;
  4404  058C' 0E1D               	movlw	29
  4405  058E' 6E00'              	movwf	menu@state^0,c
  4406                           
  4407                           ;Menu.c: 347:    }
  4408  0590' 0012               	return	
  4409  0592'                    l7086:
  4410  0592' 0E0B               	movlw	11
  4411  0594' 1800'              	xorwf	_NovaTecla^0,w,c
  4412  0596' A4D8               	btfss	status,2,c
  4413  0598' 0012               	return	
  4414  059A'                    u7830:
  4415                           
  4416                           ;Menu.c: 349:     menuDalt = 0;
  4417  059A' 0E00               	movlw	0
  4418  059C' 6E00'              	movwf	_menuDalt^0,c
  4419                           
  4420                           ;Menu.c: 350:     state = 12;
  4421  059E' 0E0C               	movlw	12
  4422  05A0' 6E00'              	movwf	menu@state^0,c
  4423  05A2' 0012               	return	
  4424  05A4'                    l7090:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;Menu.c: 354:    if (pos > 15) {
  4428  05A4' 0E0F               	movlw	15
  4429  05A6' 6400'              	cpfsgt	_pos^0,c
  4430  05A8' D005               	goto	l7096
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;Menu.c: 355:     LcClear();
  4434  05AA' EC00' F000'        	call	_LcClear	;wreg free
  4435  05AE'                    l7094:
  4436                           
  4437                           ;Menu.c: 356:     state = 23;
  4438  05AE' 0E17               	movlw	23
  4439  05B0' 6E00'              	movwf	menu@state^0,c
  4440                           
  4441                           ;Menu.c: 357:    }
  4442  05B2' 0012               	return	
  4443  05B4'                    l7096:
  4444                           
  4445                           ; BSR set to: 0
  4446  05B4' 0E10               	movlw	16
  4447  05B6' 6000'              	cpfslt	_pos^0,c
  4448  05B8' 0012               	return	
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4452  05BA' 5000'              	movf	_timerMenu^0,w,c
  4453  05BC' EC00' F000'        	call	_TiResetTics
  4454                           
  4455                           ;Menu.c: 360:     LcScroll();
  4456  05C0' EC00' F000'        	call	_LcScroll	;wreg free
  4457                           
  4458                           ;Menu.c: 361:     pos++;
  4459  05C4' 2A00'              	incf	_pos^0,f,c
  4460  05C6'                    l7104:
  4461                           
  4462                           ;Menu.c: 362:     state = 28;
  4463  05C6' 0E1C               	movlw	28
  4464  05C8' 6E00'              	movwf	menu@state^0,c
  4465  05CA' 0012               	return	
  4466  05CC'                    l7106:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;Menu.c: 366:    if (LcLliure()) {
  4470  05CC' EC00' F000'        	call	_LcLliure	;wreg free
  4471  05D0' A0D8               	btfss	status,0,c
  4472  05D2' 0012               	return	
  4473                           
  4474                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4475  05D4' 5000'              	movf	_timerMenu^0,w,c
  4476  05D6' EC00' F000'        	call	_TiResetTics
  4477                           
  4478                           ;Menu.c: 368:     pos = 0;
  4479  05DA' 0E00               	movlw	0
  4480  05DC' 6E00'              	movwf	_pos^0,c
  4481  05DE' D7F3               	goto	l7104
  4482  05E0'                    l7114:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4486  05E0' EC00' F000'        	call	_UshowUsersCalculat	;wreg free
  4487  05E4' A0D8               	btfss	status,0,c
  4488  05E6' 0012               	return	
  4489  05E8' D7E2               	goto	l7094
  4490  05EA'                    l7118:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;Menu.c: 378:    if (LcLliure()) {
  4494  05EA' EC00' F000'        	call	_LcLliure	;wreg free
  4495  05EE' A0D8               	btfss	status,0,c
  4496  05F0' 0012               	return	
  4497                           
  4498                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4499  05F2' 5000'              	movf	_menuDalt^0,w,c
  4500  05F4' EC00' F000'        	call	_UgetTop5
  4501  05F8' EC00' F000'        	call	_UgetUserName
  4502  05FC' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  4503  0600' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  4504  0604' EC00' F000'        	call	_LcNewString	;wreg free
  4505                           
  4506                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4507  0608' 5000'              	movf	_menuDalt^0,w,c
  4508  060A' EC00' F000'        	call	_UgetTop5
  4509  060E' EC00' F000'        	call	_UgetScore
  4510  0612' EC00' F000'        	call	_CToAConverteix
  4511                           
  4512                           ;Menu.c: 381:     state = 32;
  4513  0616' 0E20               	movlw	32
  4514  0618' 6E00'              	movwf	menu@state^0,c
  4515  061A' 0012               	return	
  4516  061C'                    l7124:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4520  061C' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  4521  0620' 0AFA               	xorlw	250
  4522  0622' A4D8               	btfss	status,2,c
  4523  0624' 0012               	return	
  4524  0626' EC00' F000'        	call	_LcLliure	;wreg free
  4525  062A' A0D8               	btfss	status,0,c
  4526  062C' 0012               	return	
  4527                           
  4528                           ;Menu.c: 386:     LcPutChar(':');
  4529  062E' 0E3A               	movlw	58
  4530  0630' EC00' F000'        	call	_LcPutChar
  4531                           
  4532                           ;Menu.c: 387:     LcGotoXY(0,1);
  4533  0634' 0E01               	movlw	1
  4534  0636' 6E00'              	movwf	LcGotoXY@Row^0,c
  4535  0638' 0E00               	movlw	0
  4536  063A' EC00' F000'        	call	_LcGotoXY
  4537                           
  4538                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4539  063E' EC00' F000'        	call	_CToAobtenir	;wreg free
  4540  0642' 0100               	movlb	0	; () banked
  4541  0644' 6F00'              	movwf	??_menu& (0+255),b
  4542  0646' C000' F009'        	movff	??_menu,LcNewString@new_s
  4543  064A' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  4544  064C' EC00' F000'        	call	_LcNewString	;wreg free
  4545                           
  4546                           ;Menu.c: 389:     menuDalt++;
  4547  0650' 2A00'              	incf	_menuDalt^0,f,c
  4548                           
  4549                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4550  0652' 0E05               	movlw	5
  4551  0654' 1800'              	xorwf	_menuDalt^0,w,c
  4552  0656' B4D8               	btfsc	status,2,c
  4553  0658' D006               	goto	u7920
  4554  065A' 5000'              	movf	_menuDalt^0,w,c
  4555  065C' EC00' F000'        	call	_UgetTop5
  4556  0660' 0AFF               	xorlw	255
  4557  0662' A4D8               	btfss	status,2,c
  4558  0664' D002               	goto	l631
  4559  0666'                    u7920:
  4560  0666' 0E00               	movlw	0
  4561  0668' 6E00'              	movwf	_menuDalt^0,c
  4562  066A'                    l631:
  4563                           
  4564                           ;Menu.c: 391:     state = 34;
  4565  066A' 0E22               	movlw	34
  4566  066C' 6E00'              	movwf	menu@state^0,c
  4567  066E' 0012               	return	
  4568  0670'                    l7140:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4572  0670' 5000'              	movf	_menuDalt^0,w,c
  4573  0672' EC00' F000'        	call	_UgetTop5
  4574  0676' 0AFF               	xorlw	255
  4575  0678' A4D8               	btfss	status,2,c
  4576  067A' D004               	goto	u7940
  4577  067C' 0E05               	movlw	5
  4578  067E' 1800'              	xorwf	_menuDalt^0,w,c
  4579  0680' B4D8               	btfsc	status,2,c
  4580  0682' 0012               	return	
  4581  0684'                    u7940:
  4582  0684' EC00' F000'        	call	_LcLliure	;wreg free
  4583  0688' A0D8               	btfss	status,0,c
  4584  068A' 0012               	return	
  4585                           
  4586                           ;Menu.c: 396:     LcGotoXY(16,0);
  4587  068C' 0E00               	movlw	0
  4588  068E' 6E00'              	movwf	LcGotoXY@Row^0,c
  4589  0690' 0E10               	movlw	16
  4590  0692' EC00' F000'        	call	_LcGotoXY
  4591                           
  4592                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4593  0696' 5000'              	movf	_menuDalt^0,w,c
  4594  0698' EC00' F000'        	call	_UgetTop5
  4595  069C' EC00' F000'        	call	_UgetUserName
  4596  06A0' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  4597  06A4' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  4598  06A8' EC00' F000'        	call	_LcNewString	;wreg free
  4599                           
  4600                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4601  06AC' 5000'              	movf	_menuDalt^0,w,c
  4602  06AE' EC00' F000'        	call	_UgetTop5
  4603  06B2' EC00' F000'        	call	_UgetScore
  4604  06B6' EC00' F000'        	call	_CToAConverteix
  4605                           
  4606                           ;Menu.c: 399:     state = 35;
  4607  06BA' 0E23               	movlw	35
  4608  06BC' 6E00'              	movwf	menu@state^0,c
  4609  06BE' 0012               	return	
  4610  06C0'                    l7150:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4614  06C0' EC00' F000'        	call	_LcLliure	;wreg free
  4615  06C4' A0D8               	btfss	status,0,c
  4616  06C6' 0012               	return	
  4617  06C8' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  4618  06CC' 0AFA               	xorlw	250
  4619  06CE' A4D8               	btfss	status,2,c
  4620  06D0' 0012               	return	
  4621                           
  4622                           ;Menu.c: 404:     LcPutChar(':');
  4623  06D2' 0E3A               	movlw	58
  4624  06D4' EC00' F000'        	call	_LcPutChar
  4625                           
  4626                           ;Menu.c: 405:     LcGotoXY(16,1);
  4627  06D8' 0E01               	movlw	1
  4628  06DA' 6E00'              	movwf	LcGotoXY@Row^0,c
  4629  06DC' 0E10               	movlw	16
  4630  06DE' EC00' F000'        	call	_LcGotoXY
  4631                           
  4632                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4633  06E2' EC00' F000'        	call	_CToAobtenir	;wreg free
  4634  06E6' 0100               	movlb	0	; () banked
  4635  06E8' 6F00'              	movwf	??_menu& (0+255),b
  4636  06EA' C000' F009'        	movff	??_menu,LcNewString@new_s
  4637  06EE' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  4638  06F0' EC00' F000'        	call	_LcNewString	;wreg free
  4639                           
  4640                           ;Menu.c: 407:     pos = 0;
  4641  06F4' 0E00               	movlw	0
  4642  06F6' 6E00'              	movwf	_pos^0,c
  4643                           
  4644                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4645  06F8' 5000'              	movf	_timerMenu^0,w,c
  4646  06FA' EC00' F000'        	call	_TiResetTics
  4647  06FE'                    l7162:
  4648                           
  4649                           ;Menu.c: 409:     state = 37;
  4650  06FE' 0E25               	movlw	37
  4651  0700' 6E00'              	movwf	menu@state^0,c
  4652  0702' 0012               	return	
  4653  0704'                    l7164:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4657  0704' 0E0B               	movlw	11
  4658  0706' 1800'              	xorwf	_NovaTecla^0,w,c
  4659  0708' A4D8               	btfss	status,2,c
  4660  070A' D004               	goto	l7170
  4661                           
  4662                           ; BSR set to: 0
  4663  070C' EC00' F000'        	call	_LcLliure	;wreg free
  4664  0710' B0D8               	btfsc	status,0,c
  4665  0712' D743               	goto	u7830
  4666  0714'                    l7170:
  4667  0714' 5000'              	movf	_timerMenu^0,w,c
  4668  0716' EC00' F000'        	call	_TiGetTics
  4669  071A' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  4670  071C' 0012               	return	
  4671  071E' 0E91               	movlw	145
  4672  0720' 5C00'              	subwf	?_TiGetTics^0,w,c
  4673  0722' 0E01               	movlw	1
  4674  0724' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  4675  0726' A0D8               	btfss	status,0,c
  4676  0728' 0012               	return	
  4677  072A' EC00' F000'        	call	_LcLliure	;wreg free
  4678  072E' A0D8               	btfss	status,0,c
  4679  0730' 0012               	return	
  4680                           
  4681                           ;Menu.c: 418:     state = 38;
  4682  0732' 0E26               	movlw	38
  4683  0734' 6E00'              	movwf	menu@state^0,c
  4684  0736' 0012               	return	
  4685  0738'                    l7176:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;Menu.c: 422:    if (pos < 16) {
  4689  0738' 0E10               	movlw	16
  4690  073A' 6000'              	cpfslt	_pos^0,c
  4691  073C' D007               	goto	l7186
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4695  073E' 5000'              	movf	_timerMenu^0,w,c
  4696  0740' EC00' F000'        	call	_TiResetTics
  4697                           
  4698                           ;Menu.c: 424:     LcScroll();
  4699  0744' EC00' F000'        	call	_LcScroll	;wreg free
  4700                           
  4701                           ;Menu.c: 425:     pos++;
  4702  0748' 2A00'              	incf	_pos^0,f,c
  4703  074A' D7D9               	goto	l7162
  4704  074C'                    l7186:
  4705                           
  4706                           ; BSR set to: 0
  4707  074C' 0E0F               	movlw	15
  4708  074E' 6400'              	cpfsgt	_pos^0,c
  4709  0750' 0012               	return	
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;Menu.c: 429:     LcClear();
  4713  0752' EC00' F000'        	call	_LcClear	;wreg free
  4714  0756' D5E7               	goto	l6914
  4715  0758'                    l7194:
  4716  0758' 5000'              	movf	menu@state^0,w,c
  4717  075A' 0100               	movlb	0	; () banked
  4718  075C' 6F00'              	movwf	??_menu& (0+255),b
  4719  075E' 6B00'              	clrf	(??_menu+1)& (0+255),b
  4720                           
  4721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4722                           ; Switch size 1, requested type "simple"
  4723                           ; Number of cases is 1, Range of values is 0 to 0
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte            4     3 (average)
  4727                           ;	Chosen strategy is simple_byte
  4728  0760' 5100'              	movf	(??_menu+1)& (0+255),w,b
  4729  0762' 0A00               	xorlw	0	; case 0
  4730  0764' A4D8               	btfss	status,2,c
  4731  0766' 0012               	return	
  4732                           
  4733                           ; BSR set to: 0
  4734                           ; Switch size 1, requested type "simple"
  4735                           ; Number of cases is 37, Range of values is 0 to 38
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte          112    57 (average)
  4739                           ;	Chosen strategy is simple_byte
  4740  0768' 5100'              	movf	??_menu& (0+255),w,b
  4741  076A' 0A00               	xorlw	0	; case 0
  4742  076C' B4D8               	btfsc	status,2,c
  4743  076E' D449               	goto	l6650
  4744  0770' 0A01               	xorlw	1	; case 1
  4745  0772' B4D8               	btfsc	status,2,c
  4746  0774' D450               	goto	l6656
  4747  0776' 0A03               	xorlw	3	; case 2
  4748  0778' B4D8               	btfsc	status,2,c
  4749  077A' D45F               	goto	l6666
  4750  077C' 0A01               	xorlw	1	; case 3
  4751  077E' B4D8               	btfsc	status,2,c
  4752  0780' D469               	goto	l511
  4753  0782' 0A07               	xorlw	7	; case 4
  4754  0784' B4D8               	btfsc	status,2,c
  4755  0786' D475               	goto	l6684
  4756  0788' 0A01               	xorlw	1	; case 5
  4757  078A' B4D8               	btfsc	status,2,c
  4758  078C' D486               	goto	l6692
  4759  078E' 0A03               	xorlw	3	; case 6
  4760  0790' B4D8               	btfsc	status,2,c
  4761  0792' D493               	goto	l6702
  4762  0794' 0A01               	xorlw	1	; case 7
  4763  0796' B4D8               	btfsc	status,2,c
  4764  0798' D4A9               	goto	l6716
  4765  079A' 0A0F               	xorlw	15	; case 8
  4766  079C' B4D8               	btfsc	status,2,c
  4767  079E' D4CB               	goto	l6744
  4768  07A0' 0A01               	xorlw	1	; case 9
  4769  07A2' B4D8               	btfsc	status,2,c
  4770  07A4' D4E1               	goto	l6758
  4771  07A6' 0A03               	xorlw	3	; case 10
  4772  07A8' B4D8               	btfsc	status,2,c
  4773  07AA' D502               	goto	l6788
  4774  07AC' 0A01               	xorlw	1	; case 11
  4775  07AE' B4D8               	btfsc	status,2,c
  4776  07B0' D509               	goto	l538
  4777  07B2' 0A07               	xorlw	7	; case 12
  4778  07B4' B4D8               	btfsc	status,2,c
  4779  07B6' D528               	goto	l6814
  4780  07B8' 0A01               	xorlw	1	; case 13
  4781  07BA' B4D8               	btfsc	status,2,c
  4782  07BC' D531               	goto	l6826
  4783  07BE' 0A03               	xorlw	3	; case 14
  4784  07C0' B4D8               	btfsc	status,2,c
  4785  07C2' D5B4               	goto	l6916
  4786  07C4' 0A01               	xorlw	1	; case 15
  4787  07C6' B4D8               	btfsc	status,2,c
  4788  07C8' D5C4               	goto	l6924
  4789  07CA' 0A1F               	xorlw	31	; case 16
  4790  07CC' B4D8               	btfsc	status,2,c
  4791  07CE' D5CD               	goto	l6928
  4792  07D0' 0A01               	xorlw	1	; case 17
  4793  07D2' B4D8               	btfsc	status,2,c
  4794  07D4' D5E7               	goto	l6948
  4795  07D6' 0A03               	xorlw	3	; case 18
  4796  07D8' B4D8               	btfsc	status,2,c
  4797  07DA' D5F7               	goto	l6966
  4798  07DC' 0A01               	xorlw	1	; case 19
  4799  07DE' B4D8               	btfsc	status,2,c
  4800  07E0' D604               	goto	l6982
  4801  07E2' 0A07               	xorlw	7	; case 20
  4802  07E4' B4D8               	btfsc	status,2,c
  4803  07E6' D613               	goto	l6998
  4804  07E8' 0A01               	xorlw	1	; case 21
  4805  07EA' B4D8               	btfsc	status,2,c
  4806  07EC' D61A               	goto	l7010
  4807  07EE' 0A03               	xorlw	3	; case 22
  4808  07F0' B4D8               	btfsc	status,2,c
  4809  07F2' D640               	goto	l7040
  4810  07F4' 0A01               	xorlw	1	; case 23
  4811  07F6' B4D8               	btfsc	status,2,c
  4812  07F8' D644               	goto	l7046
  4813  07FA' 0A0F               	xorlw	15	; case 24
  4814  07FC' B4D8               	btfsc	status,2,c
  4815  07FE' D657               	goto	l7054
  4816  0800' 0A01               	xorlw	1	; case 25
  4817  0802' B4D8               	btfsc	status,2,c
  4818  0804' D671               	goto	l7064
  4819  0806' 0A03               	xorlw	3	; case 26
  4820  0808' B4D8               	btfsc	status,2,c
  4821  080A' D68A               	goto	l7074
  4822  080C' 0A01               	xorlw	1	; case 27
  4823  080E' B4D8               	btfsc	status,2,c
  4824  0810' D6DD               	goto	l7106
  4825  0812' 0A07               	xorlw	7	; case 28
  4826  0814' B4D8               	btfsc	status,2,c
  4827  0816' D6AF               	goto	l7082
  4828  0818' 0A01               	xorlw	1	; case 29
  4829  081A' B4D8               	btfsc	status,2,c
  4830  081C' D6C3               	goto	l7090
  4831  081E' 0A03               	xorlw	3	; case 30
  4832  0820' B4D8               	btfsc	status,2,c
  4833  0822' D6DE               	goto	l7114
  4834  0824' 0A01               	xorlw	1	; case 31
  4835  0826' B4D8               	btfsc	status,2,c
  4836  0828' D6E0               	goto	l7118
  4837  082A' 0A3F               	xorlw	63	; case 32
  4838  082C' B4D8               	btfsc	status,2,c
  4839  082E' D6F6               	goto	l7124
  4840  0830' 0A02               	xorlw	2	; case 34
  4841  0832' B4D8               	btfsc	status,2,c
  4842  0834' D71D               	goto	l7140
  4843  0836' 0A01               	xorlw	1	; case 35
  4844  0838' B4D8               	btfsc	status,2,c
  4845  083A' D742               	goto	l7150
  4846  083C' 0A06               	xorlw	6	; case 37
  4847  083E' B4D8               	btfsc	status,2,c
  4848  0840' D761               	goto	l7164
  4849  0842' 0A03               	xorlw	3	; case 38
  4850  0844' A4D8               	btfss	status,2,c
  4851  0846' 0012               	return	
  4852  0848' D777               	goto	l7176
  4853  084A'                    __end_of_menu:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _miraPassword *****************
  4857 ;; Defined at:
  4858 ;;		line 320 in file "Usuaris.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1
  4872 ;;      Params:         0       0       0
  4873 ;;      Locals:         0       0       0
  4874 ;;      Temps:          0       0       0
  4875 ;;      Totals:         0       0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 3
  4879 ;; This function calls:
  4880 ;;		_compareStrings
  4881 ;; This function is called by:
  4882 ;;		_menu
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text20
  4887  0000'                    __ptext20:
  4888                           	callstack 0
  4889  0000'                    _miraPassword:
  4890                           	callstack 26
  4891                           
  4892                           ;Usuaris.c: 321:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4893                           
  4894                           ;incstack = 0
  4895  0000' 0E00'              	movlw	low _tmpPassword
  4896  0002' 6E00'              	movwf	compareStrings@a^0,c
  4897  0004' 5000'              	movf	_usuariLoguejat^0,w,c
  4898  0006' 0D12               	mullw	18
  4899  0008' 0E00'              	movlw	low (_usuaris+9)
  4900  000A' 24F3               	addwf	243,w,c
  4901  000C' 6E00'              	movwf	compareStrings@b^0,c
  4902  000E' 0E00'              	movlw	high (_usuaris+9)
  4903  0010' 20F4               	addwfc	prodh,w,c
  4904  0012' 6E00'              	movwf	(compareStrings@b+1)^0,c
  4905  0014' EC00' F000'        	call	_compareStrings	;wreg free
  4906  0018' 0900               	iorlw	0
  4907  001A' B4D8               	btfsc	status,2,c
  4908  001C' D002               	goto	l4566
  4909  001E' 90D8               	bcf	status,0,c
  4910  0020' 0012               	return	
  4911  0022'                    l4566:
  4912  0022' 80D8               	bsf	status,0,c
  4913  0024' 0012               	return		;funcret
  4914  0026'                    __end_of_miraPassword:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function _getArrayShowUsers *****************
  4918 ;; Defined at:
  4919 ;;		line 69 in file "Usuaris.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  quin            1    wreg     unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  quin            1    8[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  2    5[COMRAM] PTR unsigned char 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1
  4933 ;;      Params:         2       0       0
  4934 ;;      Locals:         1       0       0
  4935 ;;      Temps:          1       0       0
  4936 ;;      Totals:         4       0       0
  4937 ;;Total ram usage:        4 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 2
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_menu
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text21
  4948  0000'                    __ptext21:
  4949                           	callstack 0
  4950  0000'                    _getArrayShowUsers:
  4951                           	callstack 27
  4952                           
  4953                           ;incstack = 0
  4954                           ;getArrayShowUsers@quin stored from wreg
  4955  0000' 6E00'              	movwf	getArrayShowUsers@quin^0,c
  4956                           
  4957                           ;Usuaris.c: 70:     return usuaris[arrayShowUsers[quin]].username;
  4958  0002' 5000'              	movf	getArrayShowUsers@quin^0,w,c
  4959  0004' 0F00'              	addlw	low _arrayShowUsers
  4960  0006' 6ED9               	movwf	fsr2l,c
  4961  0008' 6ADA               	clrf	fsr2h,c
  4962  000A' 50DF               	movf	indf2,w,c
  4963  000C' 6E00'              	movwf	??_getArrayShowUsers^0,c
  4964  000E' 5000'              	movf	??_getArrayShowUsers^0,w,c
  4965  0010' 0D12               	mullw	18
  4966  0012' 0E00'              	movlw	low _usuaris
  4967  0014' 24F3               	addwf	243,w,c
  4968  0016' 6E00'              	movwf	?_getArrayShowUsers^0,c
  4969  0018' 0E00'              	movlw	high _usuaris
  4970  001A' 20F4               	addwfc	prodh,w,c
  4971  001C' 6E00'              	movwf	(?_getArrayShowUsers+1)^0,c
  4972  001E' 0012               	return		;funcret
  4973  0020'                    __end_of_getArrayShowUsers:
  4974                           	callstack 0
  4975                           
  4976 ;; *************** function _checkHoraAcabat *****************
  4977 ;; Defined at:
  4978 ;;		line 42 in file "Hora.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;		None
  4983 ;; Return value:  Size  Location     Type
  4984 ;;		None               void
  4985 ;; Registers used:
  4986 ;;		status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1
  4992 ;;      Params:         0       0       0
  4993 ;;      Locals:         0       0       0
  4994 ;;      Temps:          0       0       0
  4995 ;;      Totals:         0       0       0
  4996 ;;Total ram usage:        0 bytes
  4997 ;; Hardware stack levels used: 1
  4998 ;; Hardware stack levels required when called: 2
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_menu
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text22
  5007  0000'                    __ptext22:
  5008                           	callstack 0
  5009  0000'                    _checkHoraAcabat:
  5010                           	callstack 27
  5011                           
  5012                           ;Hora.c: 43:     return tempsAcabat;
  5013                           
  5014                           ;incstack = 0
  5015  0000' B000'              	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  5016  0002' D002               	goto	l4604
  5017  0004' 90D8               	bcf	status,0,c
  5018  0006' 0012               	return	
  5019  0008'                    l4604:
  5020  0008' 80D8               	bsf	status,0,c
  5021  000A' 0012               	return		;funcret
  5022  000C'                    __end_of_checkHoraAcabat:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function _calculateShowUsers *****************
  5026 ;; Defined at:
  5027 ;;		line 145 in file "Usuaris.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		None
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1
  5041 ;;      Params:         0       0       0
  5042 ;;      Locals:         0       0       0
  5043 ;;      Temps:          0       0       0
  5044 ;;      Totals:         0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 2
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_menu
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text23
  5056  0000'                    __ptext23:
  5057                           	callstack 0
  5058  0000'                    _calculateShowUsers:
  5059                           	callstack 27
  5060                           
  5061                           ;Usuaris.c: 146:     do_showUsers = 1;
  5062                           
  5063                           ;incstack = 0
  5064  0000' 8000'              	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5065  0002' 0012               	return		;funcret
  5066  0004'                    __end_of_calculateShowUsers:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _UshowUsersCalculat *****************
  5070 ;; Defined at:
  5071 ;;		line 148 in file "Usuaris.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1
  5085 ;;      Params:         0       0       0
  5086 ;;      Locals:         0       0       0
  5087 ;;      Temps:          0       0       0
  5088 ;;      Totals:         0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 2
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_menu
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text24
  5100  0000'                    __ptext24:
  5101                           	callstack 0
  5102  0000'                    _UshowUsersCalculat:
  5103                           	callstack 27
  5104                           
  5105                           ;Usuaris.c: 149:     return !do_showUsers;
  5106                           
  5107                           ;incstack = 0
  5108  0000' A000'              	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5109  0002' D002               	goto	l4630
  5110  0004' 90D8               	bcf	status,0,c
  5111  0006' 0012               	return	
  5112  0008'                    l4630:
  5113  0008' 80D8               	bsf	status,0,c
  5114  000A' 0012               	return		;funcret
  5115  000C'                    __end_of_UshowUsersCalculat:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _UgetUserName *****************
  5119 ;; Defined at:
  5120 ;;		line 65 in file "Usuaris.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  quin            1    wreg     unsigned char 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  quin            1    7[COMRAM] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    5[COMRAM] PTR unsigned char 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, prodl, prodh
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1
  5134 ;;      Params:         2       0       0
  5135 ;;      Locals:         1       0       0
  5136 ;;      Temps:          0       0       0
  5137 ;;      Totals:         3       0       0
  5138 ;;Total ram usage:        3 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 2
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_menu
  5145 ;;		_motorSIO
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text25
  5150  0000'                    __ptext25:
  5151                           	callstack 0
  5152  0000'                    _UgetUserName:
  5153                           	callstack 27
  5154                           
  5155                           ;incstack = 0
  5156                           ;UgetUserName@quin stored from wreg
  5157  0000' 6E00'              	movwf	UgetUserName@quin^0,c
  5158                           
  5159                           ;Usuaris.c: 66:     return usuaris[quin].username;
  5160  0002' 5000'              	movf	UgetUserName@quin^0,w,c
  5161  0004' 0D12               	mullw	18
  5162  0006' 0E00'              	movlw	low _usuaris
  5163  0008' 24F3               	addwf	243,w,c
  5164  000A' 6E00'              	movwf	?_UgetUserName^0,c
  5165  000C' 0E00'              	movlw	high _usuaris
  5166  000E' 20F4               	addwfc	prodh,w,c
  5167  0010' 6E00'              	movwf	(?_UgetUserName+1)^0,c
  5168  0012' 0012               	return		;funcret
  5169  0014'                    __end_of_UgetUserName:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _UgetTop5 *****************
  5173 ;; Defined at:
  5174 ;;		line 312 in file "Usuaris.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  quin            1    wreg     unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  quin            1    5[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      char 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1
  5188 ;;      Params:         0       0       0
  5189 ;;      Locals:         1       0       0
  5190 ;;      Temps:          0       0       0
  5191 ;;      Totals:         1       0       0
  5192 ;;Total ram usage:        1 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; Hardware stack levels required when called: 2
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_menu
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text26
  5203  0000'                    __ptext26:
  5204                           	callstack 0
  5205  0000'                    _UgetTop5:
  5206                           	callstack 27
  5207                           
  5208                           ;incstack = 0
  5209                           ;UgetTop5@quin stored from wreg
  5210  0000' 6E00'              	movwf	UgetTop5@quin^0,c
  5211                           
  5212                           ;Usuaris.c: 313:     return puntuacions[quin].indexStruct;
  5213  0002' 5000'              	movf	UgetTop5@quin^0,w,c
  5214  0004' 0D02               	mullw	2
  5215  0006' 50F3               	movf	243,w,c
  5216  0008' 0F00'              	addlw	low _puntuacions
  5217  000A' 6ED9               	movwf	fsr2l,c
  5218  000C' 6ADA               	clrf	fsr2h,c
  5219  000E' 50DF               	movf	indf2,w,c
  5220  0010' 0012               	return		;funcret
  5221  0012'                    __end_of_UgetTop5:
  5222                           	callstack 0
  5223                           
  5224 ;; *************** function _UgetScore *****************
  5225 ;; Defined at:
  5226 ;;		line 309 in file "Usuaris.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  quin            1    wreg     unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  quin            1    5[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      unsigned char 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1
  5240 ;;      Params:         0       0       0
  5241 ;;      Locals:         1       0       0
  5242 ;;      Temps:          0       0       0
  5243 ;;      Totals:         1       0       0
  5244 ;;Total ram usage:        1 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; Hardware stack levels required when called: 2
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_menu
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text27
  5255  0000'                    __ptext27:
  5256                           	callstack 0
  5257  0000'                    _UgetScore:
  5258                           	callstack 27
  5259                           
  5260                           ;incstack = 0
  5261                           ;UgetScore@quin stored from wreg
  5262  0000' 6E00'              	movwf	UgetScore@quin^0,c
  5263                           
  5264                           ;Usuaris.c: 310:     return puntuacions[quin].score;
  5265  0002' 5000'              	movf	UgetScore@quin^0,w,c
  5266  0004' 0D02               	mullw	2
  5267  0006' 50F3               	movf	243,w,c
  5268  0008' 0F00'              	addlw	low (_puntuacions+1)
  5269  000A' 6ED9               	movwf	fsr2l,c
  5270  000C' 6ADA               	clrf	fsr2h,c
  5271  000E' 50DF               	movf	indf2,w,c
  5272  0010' 0012               	return		;funcret
  5273  0012'                    __end_of_UgetScore:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _UgetNumUsuaris *****************
  5277 ;; Defined at:
  5278 ;;		line 41 in file "Usuaris.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      unsigned char 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1
  5292 ;;      Params:         0       0       0
  5293 ;;      Locals:         0       0       0
  5294 ;;      Temps:          0       0       0
  5295 ;;      Totals:         0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 2
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_menu
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text28
  5307  0000'                    __ptext28:
  5308                           	callstack 0
  5309  0000'                    _UgetNumUsuaris:
  5310                           	callstack 27
  5311                           
  5312                           ;Usuaris.c: 42:     return numUsuaris;
  5313                           
  5314                           ;incstack = 0
  5315  0000' 5000'              	movf	_numUsuaris^0,w,c
  5316  0002' 0012               	return		;funcret
  5317  0004'                    __end_of_UgetNumUsuaris:
  5318                           	callstack 0
  5319                           
  5320 ;; *************** function _UenviaPas *****************
  5321 ;; Defined at:
  5322 ;;		line 57 in file "Usuaris.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  c               1    wreg     unsigned char 
  5325 ;;  pos             1    5[COMRAM] unsigned char 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  c               1    6[COMRAM] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1
  5337 ;;      Params:         1       0       0
  5338 ;;      Locals:         1       0       0
  5339 ;;      Temps:          0       0       0
  5340 ;;      Totals:         2       0       0
  5341 ;;Total ram usage:        2 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 2
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_menu
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text29
  5352  0000'                    __ptext29:
  5353                           	callstack 0
  5354  0000'                    _UenviaPas:
  5355                           	callstack 27
  5356                           
  5357                           ;incstack = 0
  5358                           ;UenviaPas@c stored from wreg
  5359  0000' 6E00'              	movwf	UenviaPas@c^0,c
  5360                           
  5361                           ;Usuaris.c: 58:     tmpPassword[pos] = c;
  5362  0002' 5000'              	movf	UenviaPas@pos^0,w,c
  5363  0004' 0F00'              	addlw	low _tmpPassword
  5364  0006' 6ED9               	movwf	fsr2l,c
  5365  0008' 6ADA               	clrf	fsr2h,c
  5366  000A' C006' FFDF         	movff	UenviaPas@c,indf2
  5367  000E' 0012               	return		;funcret
  5368  0010'                    __end_of_UenviaPas:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _UenviaChar *****************
  5372 ;; Defined at:
  5373 ;;		line 54 in file "Usuaris.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  c               1    wreg     unsigned char 
  5376 ;;  pos             1    5[COMRAM] unsigned char 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  c               1    6[COMRAM] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1
  5388 ;;      Params:         1       0       0
  5389 ;;      Locals:         1       0       0
  5390 ;;      Temps:          0       0       0
  5391 ;;      Totals:         2       0       0
  5392 ;;Total ram usage:        2 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 2
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_menu
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text30
  5403  0000'                    __ptext30:
  5404                           	callstack 0
  5405  0000'                    _UenviaChar:
  5406                           	callstack 27
  5407                           
  5408                           ;incstack = 0
  5409                           ;UenviaChar@c stored from wreg
  5410  0000' 6E00'              	movwf	UenviaChar@c^0,c
  5411                           
  5412                           ;Usuaris.c: 55:     tmpUsername[pos] = c;
  5413  0002' 5000'              	movf	UenviaChar@pos^0,w,c
  5414  0004' 0F00'              	addlw	low _tmpUsername
  5415  0006' 6ED9               	movwf	fsr2l,c
  5416  0008' 6ADA               	clrf	fsr2h,c
  5417  000A' C006' FFDF         	movff	UenviaChar@c,indf2
  5418  000E' 0012               	return		;funcret
  5419  0010'                    __end_of_UenviaChar:
  5420                           	callstack 0
  5421                           
  5422 ;; *************** function _UcheckExistsNotFinished *****************
  5423 ;; Defined at:
  5424 ;;		line 48 in file "Usuaris.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1
  5438 ;;      Params:         0       0       0
  5439 ;;      Locals:         0       0       0
  5440 ;;      Temps:          0       0       0
  5441 ;;      Totals:         0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 2
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_menu
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text31
  5453  0000'                    __ptext31:
  5454                           	callstack 0
  5455  0000'                    _UcheckExistsNotFinished:
  5456                           	callstack 27
  5457                           
  5458                           ;Usuaris.c: 49:     return do_check_exists;
  5459                           
  5460                           ;incstack = 0
  5461  0000' B000'              	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5462  0002' D002               	goto	l4552
  5463  0004' 90D8               	bcf	status,0,c
  5464  0006' 0012               	return	
  5465  0008'                    l4552:
  5466  0008' 80D8               	bsf	status,0,c
  5467  000A' 0012               	return		;funcret
  5468  000C'                    __end_of_UcheckExistsNotFinished:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _UcheckExistsGetError *****************
  5472 ;; Defined at:
  5473 ;;		line 51 in file "Usuaris.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      char 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1
  5487 ;;      Params:         0       0       0
  5488 ;;      Locals:         0       0       0
  5489 ;;      Temps:          0       0       0
  5490 ;;      Totals:         0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 2
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_menu
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text32
  5502  0000'                    __ptext32:
  5503                           	callstack 0
  5504  0000'                    _UcheckExistsGetError:
  5505                           	callstack 27
  5506                           
  5507                           ;Usuaris.c: 52:     return usuariLoguejat;
  5508                           
  5509                           ;incstack = 0
  5510  0000' 5000'              	movf	_usuariLoguejat^0,w,c
  5511  0002' 0012               	return		;funcret
  5512  0004'                    __end_of_UcheckExistsGetError:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _UcheckExists *****************
  5516 ;; Defined at:
  5517 ;;		line 45 in file "Usuaris.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		None
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1
  5531 ;;      Params:         0       0       0
  5532 ;;      Locals:         0       0       0
  5533 ;;      Temps:          0       0       0
  5534 ;;      Totals:         0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used: 1
  5537 ;; Hardware stack levels required when called: 2
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_menu
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text33
  5546  0000'                    __ptext33:
  5547                           	callstack 0
  5548  0000'                    _UcheckExists:
  5549                           	callstack 27
  5550                           
  5551                           ;Usuaris.c: 46:     do_check_exists = 1;
  5552                           
  5553                           ;incstack = 0
  5554  0000' 8000'              	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5555  0002' 0012               	return		;funcret
  5556  0004'                    __end_of_UcheckExists:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _URegister *****************
  5560 ;; Defined at:
  5561 ;;		line 61 in file "Usuaris.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		None
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1
  5575 ;;      Params:         0       0       0
  5576 ;;      Locals:         0       0       0
  5577 ;;      Temps:          0       0       0
  5578 ;;      Totals:         0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 2
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_menu
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text34
  5590  0000'                    __ptext34:
  5591                           	callstack 0
  5592  0000'                    _URegister:
  5593                           	callstack 27
  5594                           
  5595                           ;Usuaris.c: 62:     do_register = 1;
  5596                           
  5597                           ;incstack = 0
  5598  0000' 8000'              	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5599  0002' 0012               	return		;funcret
  5600  0004'                    __end_of_URegister:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function _SiFerMenu *****************
  5604 ;; Defined at:
  5605 ;;		line 19 in file "GestioLCD.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		None
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1
  5619 ;;      Params:         0       0       0
  5620 ;;      Locals:         0       0       0
  5621 ;;      Temps:          0       0       0
  5622 ;;      Totals:         0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 2
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_menu
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text35
  5634  0000'                    __ptext35:
  5635                           	callstack 0
  5636  0000'                    _SiFerMenu:
  5637                           	callstack 27
  5638                           
  5639                           ;GestioLCD.c: 20:     ferMenu = 1;
  5640                           
  5641                           ;incstack = 0
  5642  0000' 8000'              	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5643  0002' 0012               	return		;funcret
  5644  0004'                    __end_of_SiFerMenu:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _SMSon *****************
  5648 ;; Defined at:
  5649 ;;		line 128 in file "Ssms.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		None
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1
  5663 ;;      Params:         0       0       0
  5664 ;;      Locals:         0       0       0
  5665 ;;      Temps:          0       0       0
  5666 ;;      Totals:         0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; Hardware stack levels required when called: 2
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_menu
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text36
  5678  0000'                    __ptext36:
  5679                           	callstack 0
  5680  0000'                    _SMSon:
  5681                           	callstack 27
  5682                           
  5683                           ;Ssms.c: 129:     setSMSon = 1;
  5684                           
  5685                           ;incstack = 0
  5686  0000' 8000'              	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5687                           
  5688                           ;Ssms.c: 130:     novaTecla = -1;
  5689  0002' 6800'              	setf	_novaTecla^0,c
  5690  0004' 0012               	return		;funcret
  5691  0006'                    __end_of_SMSon:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _SMSoff *****************
  5695 ;; Defined at:
  5696 ;;		line 133 in file "Ssms.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		None
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1
  5710 ;;      Params:         0       0       0
  5711 ;;      Locals:         0       0       0
  5712 ;;      Temps:          0       0       0
  5713 ;;      Totals:         0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 2
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_menu
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text37
  5725  0000'                    __ptext37:
  5726                           	callstack 0
  5727  0000'                    _SMSoff:
  5728                           	callstack 27
  5729                           
  5730                           ;Ssms.c: 134:     setSMSon = 0;
  5731                           
  5732                           ;incstack = 0
  5733  0000' 9000'              	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5734                           
  5735                           ;Ssms.c: 135:     novaTecla = -1;
  5736  0002' 6800'              	setf	_novaTecla^0,c
  5737  0004' 0012               	return		;funcret
  5738  0006'                    __end_of_SMSoff:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5742 ;; Defined at:
  5743 ;;		line 44 in file "SIO.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1
  5757 ;;      Params:         0       0       0
  5758 ;;      Locals:         0       0       0
  5759 ;;      Temps:          0       0       0
  5760 ;;      Totals:         0       0       0
  5761 ;;Total ram usage:        0 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 2
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_menu
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text38
  5772  0000'                    __ptext38:
  5773                           	callstack 0
  5774  0000'                    _SIOHaAcabatPuntuacions:
  5775                           	callstack 27
  5776                           
  5777                           ;SIO.c: 45:     return usuariActualSIO;
  5778                           
  5779                           ;incstack = 0
  5780  0000' 5000'              	movf	_usuariActualSIO^0,w,c
  5781  0002' 0012               	return		;funcret
  5782  0004'                    __end_of_SIOHaAcabatPuntuacions:
  5783                           	callstack 0
  5784                           
  5785 ;; *************** function _NoFerMenu *****************
  5786 ;; Defined at:
  5787 ;;		line 22 in file "GestioLCD.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		None
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1
  5801 ;;      Params:         0       0       0
  5802 ;;      Locals:         0       0       0
  5803 ;;      Temps:          0       0       0
  5804 ;;      Totals:         0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 2
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_menu
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text39
  5816  0000'                    __ptext39:
  5817                           	callstack 0
  5818  0000'                    _NoFerMenu:
  5819                           	callstack 27
  5820                           
  5821                           ;GestioLCD.c: 23:     ferMenu = 0;
  5822                           
  5823                           ;incstack = 0
  5824  0000' 9000'              	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5825  0002' 0012               	return		;funcret
  5826  0004'                    __end_of_NoFerMenu:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function _LcScroll *****************
  5830 ;; Defined at:
  5831 ;;		line 37 in file "LcTLCD.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1
  5845 ;;      Params:         0       0       0
  5846 ;;      Locals:         0       0       0
  5847 ;;      Temps:          0       0       0
  5848 ;;      Totals:         0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 4
  5852 ;; This function calls:
  5853 ;;		_CantaIR
  5854 ;; This function is called by:
  5855 ;;		_menu
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text40
  5860  0000'                    __ptext40:
  5861                           	callstack 0
  5862  0000'                    _LcScroll:
  5863                           	callstack 25
  5864                           
  5865                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5866                           
  5867                           ;incstack = 0
  5868  0000' 0E18               	movlw	24
  5869  0002' EC00' F000'        	call	_CantaIR
  5870  0006' 0012               	return		;funcret
  5871  0008'                    __end_of_LcScroll:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _JnovaTecla *****************
  5875 ;; Defined at:
  5876 ;;		line 16 in file "Joc.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  tecla           1    wreg     char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  tecla           1    5[COMRAM] char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1
  5890 ;;      Params:         0       0       0
  5891 ;;      Locals:         1       0       0
  5892 ;;      Temps:          0       0       0
  5893 ;;      Totals:         1       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 2
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_menu
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text41
  5905  0000'                    __ptext41:
  5906                           	callstack 0
  5907  0000'                    _JnovaTecla:
  5908                           	callstack 27
  5909                           
  5910                           ;incstack = 0
  5911                           ;JnovaTecla@tecla stored from wreg
  5912  0000' 6E00'              	movwf	JnovaTecla@tecla^0,c
  5913                           
  5914                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5915  0002' C005' F006'        	movff	JnovaTecla@tecla,_novaTeclaJOC
  5916  0006' 0012               	return		;funcret
  5917  0008'                    __end_of_JnovaTecla:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _JnovaDireccio *****************
  5921 ;; Defined at:
  5922 ;;		line 19 in file "Joc.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  dir             1    wreg     unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  dir             1    5[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1
  5936 ;;      Params:         0       0       0
  5937 ;;      Locals:         1       0       0
  5938 ;;      Temps:          0       0       0
  5939 ;;      Totals:         1       0       0
  5940 ;;Total ram usage:        1 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 2
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_menu
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text42
  5951  0000'                    __ptext42:
  5952                           	callstack 0
  5953  0000'                    _JnovaDireccio:
  5954                           	callstack 27
  5955                           
  5956                           ;incstack = 0
  5957                           ;JnovaDireccio@dir stored from wreg
  5958  0000' 6E00'              	movwf	JnovaDireccio@dir^0,c
  5959                           
  5960                           ;Joc.c: 20:     direccioJoc = dir;
  5961  0002' C005' F012'        	movff	JnovaDireccio@dir,_direccioJoc
  5962  0006' 0012               	return		;funcret
  5963  0008'                    __end_of_JnovaDireccio:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function _JendGame *****************
  5967 ;; Defined at:
  5968 ;;		line 23 in file "Joc.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		None
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1
  5982 ;;      Params:         0       0       0
  5983 ;;      Locals:         0       0       0
  5984 ;;      Temps:          0       0       0
  5985 ;;      Totals:         0       0       0
  5986 ;;Total ram usage:        0 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 2
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_menu
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text43
  5997  0000'                    __ptext43:
  5998                           	callstack 0
  5999  0000'                    _JendGame:
  6000                           	callstack 27
  6001                           
  6002                           ;Joc.c: 24:     jugantJoc = 0;
  6003                           
  6004                           ;incstack = 0
  6005  0000' 9000'              	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  6006  0002' 0012               	return		;funcret
  6007  0004'                    __end_of_JendGame:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _JJuguem *****************
  6011 ;; Defined at:
  6012 ;;		line 13 in file "Joc.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  usuari          1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  usuari          1    5[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1
  6026 ;;      Params:         0       0       0
  6027 ;;      Locals:         1       0       0
  6028 ;;      Temps:          0       0       0
  6029 ;;      Totals:         1       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 2
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_menu
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text44
  6041  0000'                    __ptext44:
  6042                           	callstack 0
  6043  0000'                    _JJuguem:
  6044                           	callstack 27
  6045                           
  6046                           ;incstack = 0
  6047                           ;JJuguem@usuari stored from wreg
  6048  0000' 6E00'              	movwf	JJuguem@usuari^0,c
  6049                           
  6050                           ;Joc.c: 14:     usuariJoc = usuari;
  6051  0002' C005' F007'        	movff	JJuguem@usuari,_usuariJoc
  6052  0006' 0012               	return		;funcret
  6053  0008'                    __end_of_JJuguem:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _HActualitzaHora *****************
  6057 ;; Defined at:
  6058 ;;		line 16 in file "Hora.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  nova            1    5[COMRAM] PTR unsigned char 
  6061 ;;		 -> horaTmp(4), 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1
  6073 ;;      Params:         1       0       0
  6074 ;;      Locals:         0       0       0
  6075 ;;      Temps:          0       0       0
  6076 ;;      Totals:         1       0       0
  6077 ;;Total ram usage:        1 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 2
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_menu
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text45
  6088  0000'                    __ptext45:
  6089                           	callstack 0
  6090  0000'                    _HActualitzaHora:
  6091                           	callstack 27
  6092                           
  6093                           ;Hora.c: 17:     hora[0] = nova[0];
  6094                           
  6095                           ;incstack = 0
  6096  0000' 5000'              	movf	HActualitzaHora@nova^0,w,c
  6097  0002' 6ED9               	movwf	fsr2l,c
  6098  0004' 6ADA               	clrf	fsr2h,c
  6099  0006' 50DF               	movf	indf2,w,c
  6100  0008' 6E00'              	movwf	_hora^0,c
  6101                           
  6102                           ;Hora.c: 18:     hora[1] = nova[1];
  6103  000A' 5000'              	movf	HActualitzaHora@nova^0,w,c
  6104  000C' 6ED9               	movwf	fsr2l,c
  6105  000E' 6ADA               	clrf	fsr2h,c
  6106  0010' 0E01               	movlw	1
  6107  0012' 26D9               	addwf	fsr2l,f,c
  6108  0014' 50DF               	movf	indf2,w,c
  6109  0016' 6E00'              	movwf	(_hora+1)^0,c
  6110                           
  6111                           ;Hora.c: 19:     hora[3] = nova[2];
  6112  0018' 5000'              	movf	HActualitzaHora@nova^0,w,c
  6113  001A' 6ED9               	movwf	fsr2l,c
  6114  001C' 6ADA               	clrf	fsr2h,c
  6115  001E' 0E02               	movlw	2
  6116  0020' 26D9               	addwf	fsr2l,f,c
  6117  0022' 50DF               	movf	indf2,w,c
  6118  0024' 6E00'              	movwf	(_hora+3)^0,c
  6119                           
  6120                           ;Hora.c: 20:     hora[4] = nova[3];
  6121  0026' 5000'              	movf	HActualitzaHora@nova^0,w,c
  6122  0028' 6ED9               	movwf	fsr2l,c
  6123  002A' 6ADA               	clrf	fsr2h,c
  6124  002C' 0E03               	movlw	3
  6125  002E' 26D9               	addwf	fsr2l,f,c
  6126  0030' 50DF               	movf	indf2,w,c
  6127  0032' 6E00'              	movwf	(_hora+4)^0,c
  6128  0034' 0012               	return		;funcret
  6129  0036'                    __end_of_HActualitzaHora:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _GLCDMostraMenu *****************
  6133 ;; Defined at:
  6134 ;;		line 30 in file "GestioLCD.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  num             1    wreg     unsigned char 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  num             1    5[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1
  6148 ;;      Params:         0       0       0
  6149 ;;      Locals:         1       0       0
  6150 ;;      Temps:          0       0       0
  6151 ;;      Totals:         1       0       0
  6152 ;;Total ram usage:        1 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 2
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_menu
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text46
  6163  0000'                    __ptext46:
  6164                           	callstack 0
  6165  0000'                    _GLCDMostraMenu:
  6166                           	callstack 27
  6167                           
  6168                           ;incstack = 0
  6169                           ;GLCDMostraMenu@num stored from wreg
  6170  0000' 6E00'              	movwf	GLCDMostraMenu@num^0,c
  6171                           
  6172                           ;GestioLCD.c: 31:     newString = 1;
  6173  0002' 8000'              	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  6174                           
  6175                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  6176  0004' C005' F020'        	movff	GLCDMostraMenu@num,_menuDaltGLCD
  6177                           
  6178                           ;GestioLCD.c: 33:     ferMenu = 1;
  6179  0008' 8000'              	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6180  000A' 0012               	return		;funcret
  6181  000C'                    __end_of_GLCDMostraMenu:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function _CToAobtenir *****************
  6185 ;; Defined at:
  6186 ;;		line 7 in file "CtoA.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;		None
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      PTR unsigned char 
  6193 ;; Registers used:
  6194 ;;		wreg
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1
  6200 ;;      Params:         2       0       0
  6201 ;;      Locals:         0       0       0
  6202 ;;      Temps:          0       0       0
  6203 ;;      Totals:         2       0       0
  6204 ;;Total ram usage:        2 bytes
  6205 ;; Hardware stack levels used: 1
  6206 ;; Hardware stack levels required when called: 2
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_menu
  6211 ;;		_motorSIO
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text47
  6216  0000'                    __ptext47:
  6217                           	callstack 0
  6218  0000'                    _CToAobtenir:
  6219                           	callstack 27
  6220                           
  6221                           ;CtoA.c: 8:     return stringScore;
  6222                           
  6223                           ;incstack = 0
  6224  0000' 0E00'              	movlw	_stringScore& (0+255)
  6225  0002' 0012               	return		;funcret
  6226  0004'                    __end_of_CToAobtenir:
  6227                           	callstack 0
  6228                           
  6229 ;; *************** function _CToAHaAcabat *****************
  6230 ;; Defined at:
  6231 ;;		line 10 in file "CtoA.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1
  6245 ;;      Params:         0       0       0
  6246 ;;      Locals:         0       0       0
  6247 ;;      Temps:          0       0       0
  6248 ;;      Totals:         0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 2
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_menu
  6256 ;;		_motorSIO
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text48
  6261  0000'                    __ptext48:
  6262                           	callstack 0
  6263  0000'                    _CToAHaAcabat:
  6264                           	callstack 27
  6265                           
  6266                           ;CtoA.c: 11:     return convertir;
  6267                           
  6268                           ;incstack = 0
  6269  0000' 5000'              	movf	_convertir^0,w,c
  6270  0002' 0012               	return		;funcret
  6271  0004'                    __end_of_CToAHaAcabat:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _CToAConverteix *****************
  6275 ;; Defined at:
  6276 ;;		line 14 in file "CtoA.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  numero          1    wreg     unsigned char 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  numero          1    5[COMRAM] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1
  6290 ;;      Params:         0       0       0
  6291 ;;      Locals:         1       0       0
  6292 ;;      Temps:          0       0       0
  6293 ;;      Totals:         1       0       0
  6294 ;;Total ram usage:        1 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 3
  6297 ;; This function calls:
  6298 ;;		_CToAReset
  6299 ;; This function is called by:
  6300 ;;		_menu
  6301 ;;		_motorSIO
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text49
  6306  0000'                    __ptext49:
  6307                           	callstack 0
  6308  0000'                    _CToAConverteix:
  6309                           	callstack 26
  6310                           
  6311                           ;incstack = 0
  6312                           ;CToAConverteix@numero stored from wreg
  6313  0000' 6E00'              	movwf	CToAConverteix@numero^0,c
  6314                           
  6315                           ;CtoA.c: 15:     CToAReset();
  6316  0002' EC00' F000'        	call	_CToAReset	;wreg free
  6317                           
  6318                           ;CtoA.c: 16:     convertir = numero;
  6319  0006' C005' F002'        	movff	CToAConverteix@numero,_convertir
  6320  000A' 0012               	return		;funcret
  6321  000C'                    __end_of_CToAConverteix:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function _CToAReset *****************
  6325 ;; Defined at:
  6326 ;;		line 18 in file "CtoA.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1
  6340 ;;      Params:         0       0       0
  6341 ;;      Locals:         0       0       0
  6342 ;;      Temps:          0       0       0
  6343 ;;      Totals:         0       0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 2
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_CToAConverteix
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text50
  6355  0000'                    __ptext50:
  6356                           	callstack 0
  6357  0000'                    _CToAReset:
  6358                           	callstack 26
  6359                           
  6360                           ;CtoA.c: 19:     stringScore[0] = '0';
  6361                           
  6362                           ;incstack = 0
  6363  0000' 0E30               	movlw	48
  6364  0002' 6E00'              	movwf	_stringScore^0,c
  6365                           
  6366                           ;CtoA.c: 20:     stringScore[1] = '0';
  6367  0004' 0E30               	movlw	48
  6368  0006' 6E00'              	movwf	(_stringScore+1)^0,c
  6369  0008' 0012               	return		;funcret
  6370  000A'                    __end_of_CToAReset:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _init_ports *****************
  6374 ;; Defined at:
  6375 ;;		line 24 in file "main.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1
  6389 ;;      Params:         0       0       0
  6390 ;;      Locals:         0       0       0
  6391 ;;      Temps:          0       0       0
  6392 ;;      Totals:         0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 2
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_main
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text51
  6404  0000'                    __ptext51:
  6405                           	callstack 0
  6406  0000'                    _init_ports:
  6407                           	callstack 28
  6408                           
  6409                           ;incstack = 0
  6410  0000' 0E03               	movlw	3
  6411  0002' 6E92               	movwf	146,c	;volatile
  6412  0004' 0EE0               	movlw	224
  6413  0006' 6E93               	movwf	147,c	;volatile
  6414  0008' 968A               	bcf	138,3,c	;volatile
  6415  000A' 908A               	bcf	138,0,c	;volatile
  6416  000C' 828A               	bsf	138,1,c	;volatile
  6417                           
  6418                           ;main.c: 48:     TRISC = 0xC0;
  6419  000E' 0EC0               	movlw	192
  6420  0010' 6E94               	movwf	148,c	;volatile
  6421                           
  6422                           ;main.c: 58:     TRISD = 0x8F;
  6423  0012' 0E8F               	movlw	143
  6424  0014' 6E95               	movwf	149,c	;volatile
  6425                           
  6426                           ;main.c: 59:     LATD = 0x00;
  6427  0016' 0E00               	movlw	0
  6428  0018' 6E8C               	movwf	140,c	;volatile
  6429                           
  6430                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6431  001A' 8EA6               	bsf	166,7,c	;volsfr
  6432                           
  6433                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6434  001C' 9CA6               	bcf	166,6,c	;volsfr
  6435  001E' 0012               	return		;funcret
  6436  0020'                    __end_of_init_ports:
  6437                           	callstack 0
  6438                           
  6439 ;; *************** function _init_eusart *****************
  6440 ;; Defined at:
  6441 ;;		line 66 in file "main.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1
  6455 ;;      Params:         0       0       0
  6456 ;;      Locals:         0       0       0
  6457 ;;      Temps:          0       0       0
  6458 ;;      Totals:         0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 2
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_main
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text52
  6470  0000'                    __ptext52:
  6471                           	callstack 0
  6472  0000'                    _init_eusart:
  6473                           	callstack 28
  6474                           
  6475                           ;main.c: 67:     TXSTA = 0x24;
  6476                           
  6477                           ;incstack = 0
  6478  0000' 0E24               	movlw	36
  6479  0002' 6EAC               	movwf	172,c	;volatile
  6480                           
  6481                           ;main.c: 68:     RCSTA = 0x90;
  6482  0004' 0E90               	movlw	144
  6483  0006' 6EAB               	movwf	171,c	;volatile
  6484                           
  6485                           ;main.c: 69:     BAUDCON = 0x08;
  6486  0008' 0E08               	movlw	8
  6487  000A' 6EB8               	movwf	184,c	;volatile
  6488                           
  6489                           ;main.c: 70:     SPBRGH = 0x04;
  6490  000C' 0E04               	movlw	4
  6491  000E' 6EB0               	movwf	176,c	;volatile
  6492                           
  6493                           ;main.c: 71:     SPBRG = 0x10;
  6494  0010' 0E10               	movlw	16
  6495  0012' 6EAF               	movwf	175,c	;volatile
  6496  0014' 0012               	return		;funcret
  6497  0016'                    __end_of_init_eusart:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _initSIO *****************
  6501 ;; Defined at:
  6502 ;;		line 24 in file "SIO.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1
  6516 ;;      Params:         0       0       0
  6517 ;;      Locals:         0       0       0
  6518 ;;      Temps:          0       0       0
  6519 ;;      Totals:         0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 3
  6523 ;; This function calls:
  6524 ;;		_TiGetTimer
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text53
  6531  0000'                    __ptext53:
  6532                           	callstack 0
  6533  0000'                    _initSIO:
  6534                           	callstack 27
  6535                           
  6536                           ;SIO.c: 25:     timerSIO = TiGetTimer();
  6537                           
  6538                           ;incstack = 0
  6539  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6540  0004' 6E00'              	movwf	_timerSIO^0,c
  6541  0006' 0012               	return		;funcret
  6542  0008'                    __end_of_initSIO:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _initHora *****************
  6546 ;; Defined at:
  6547 ;;		line 12 in file "Hora.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1
  6561 ;;      Params:         0       0       0
  6562 ;;      Locals:         0       0       0
  6563 ;;      Temps:          0       0       0
  6564 ;;      Totals:         0       0       0
  6565 ;;Total ram usage:        0 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 3
  6568 ;; This function calls:
  6569 ;;		_TiGetTimer
  6570 ;; This function is called by:
  6571 ;;		_main
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text54
  6576  0000'                    __ptext54:
  6577                           	callstack 0
  6578  0000'                    _initHora:
  6579                           	callstack 27
  6580                           
  6581                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6582                           
  6583                           ;incstack = 0
  6584  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6585  0004' 6E00'              	movwf	_timerHora^0,c
  6586  0006' 0012               	return		;funcret
  6587  0008'                    __end_of_initHora:
  6588                           	callstack 0
  6589                           
  6590 ;; *************** function _initAltaveu *****************
  6591 ;; Defined at:
  6592 ;;		line 10 in file "Altaveu.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1
  6606 ;;      Params:         0       0       0
  6607 ;;      Locals:         0       0       0
  6608 ;;      Temps:          0       0       0
  6609 ;;      Totals:         0       0       0
  6610 ;;Total ram usage:        0 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 3
  6613 ;; This function calls:
  6614 ;;		_TiGetTimer
  6615 ;; This function is called by:
  6616 ;;		_main
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text55
  6621  0000'                    __ptext55:
  6622                           	callstack 0
  6623  0000'                    _initAltaveu:
  6624                           	callstack 27
  6625                           
  6626                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6627                           
  6628                           ;incstack = 0
  6629  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6630  0004' 6E00'              	movwf	_timerAltaveu^0,c
  6631  0006' 0012               	return		;funcret
  6632  0008'                    __end_of_initAltaveu:
  6633                           	callstack 0
  6634                           
  6635 ;; *************** function _UmotorUsers *****************
  6636 ;; Defined at:
  6637 ;;		line 152 in file "Usuaris.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1
  6651 ;;      Params:         0       0       0
  6652 ;;      Locals:         0       0       0
  6653 ;;      Temps:          4       0       0
  6654 ;;      Totals:         4       0       0
  6655 ;;Total ram usage:        4 bytes
  6656 ;; Hardware stack levels used: 1
  6657 ;; Hardware stack levels required when called: 3
  6658 ;; This function calls:
  6659 ;;		_compareStrings
  6660 ;;		_escriureCharEEPROM
  6661 ;; This function is called by:
  6662 ;;		_main
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text56
  6667  0000'                    __ptext56:
  6668                           	callstack 0
  6669  0000'                    _UmotorUsers:
  6670                           	callstack 27
  6671                           
  6672                           ;Usuaris.c: 153:     static char state = 0;;Usuaris.c: 155:  switch(state) {
  6673                           
  6674                           ;incstack = 0
  6675  0000' D172               	goto	l6162
  6676  0002'                    l769:
  6677                           
  6678                           ;Usuaris.c: 157:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6679  0002' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6680  0004' B000'              	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6681  0006' D008               	goto	l770
  6682  0008' A000'              	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6683  000A' B000'              	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6684  000C' D005               	goto	l770
  6685                           
  6686                           ;Usuaris.c: 158:     i = 0;
  6687  000E' 0E00               	movlw	0
  6688  0010' 6E00'              	movwf	_i^0,c
  6689                           
  6690                           ;Usuaris.c: 159:     j = 0;
  6691  0012' 0E00               	movlw	0
  6692  0014' 6E00'              	movwf	_j^0,c
  6693                           
  6694                           ;Usuaris.c: 160:    }
  6695  0016' 0012               	return	
  6696  0018'                    l770:
  6697  0018' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6698  001A' D003               	goto	l772
  6699                           
  6700                           ;Usuaris.c: 162:     usuariLoguejat = -1;
  6701  001C' 6800'              	setf	_usuariLoguejat^0,c
  6702  001E'                    l5994:
  6703                           
  6704                           ;Usuaris.c: 163:     state++;
  6705  001E' 2A00'              	incf	UmotorUsers@state^0,f,c
  6706                           
  6707                           ;Usuaris.c: 164:    }
  6708  0020' 0012               	return	
  6709  0022'                    l772:
  6710  0022' A000'              	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6711  0024' D00C               	goto	l774
  6712                           
  6713                           ;Usuaris.c: 166:     if(numUsuaris != 8) numUsuaris++;
  6714  0026' 0E08               	movlw	8
  6715  0028' 1800'              	xorwf	_numUsuaris^0,w,c
  6716  002A' A4D8               	btfss	status,2,c
  6717  002C' 2A00'              	incf	_numUsuaris^0,f,c
  6718                           
  6719                           ;Usuaris.c: 167:     escriureCharEEPROM(numUsuaris,0);
  6720  002E' 0E00               	movlw	0
  6721  0030' 6E00'              	movwf	escriureCharEEPROM@pos^0,c
  6722  0032' 5000'              	movf	_numUsuaris^0,w,c
  6723  0034' EC00' F000'        	call	_escriureCharEEPROM
  6724                           
  6725                           ;Usuaris.c: 168:     state = 2;
  6726  0038' 0E02               	movlw	2
  6727  003A' 6E00'              	movwf	UmotorUsers@state^0,c
  6728                           
  6729                           ;Usuaris.c: 169:    }
  6730  003C' 0012               	return	
  6731  003E'                    l774:
  6732  003E' A000'              	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6733  0040' D017               	goto	l777
  6734                           
  6735                           ;Usuaris.c: 171:     arrayShowUsers[0] = usuariLoguejat;
  6736  0042' C00B' F022'        	movff	_usuariLoguejat,_arrayShowUsers
  6737                           
  6738                           ;Usuaris.c: 172:     arrayShowUsers[1] = -1;
  6739  0046' 0100               	movlb	0	; () banked
  6740  0048' 6900'              	setf	(_arrayShowUsers+1)& (0+255),b
  6741                           
  6742                           ;Usuaris.c: 173:     arrayShowUsers[2] = -1;
  6743  004A' 6900'              	setf	(_arrayShowUsers+2)& (0+255),b
  6744                           
  6745                           ;Usuaris.c: 174:     arrayShowUsers[3] = -1;
  6746  004C' 6900'              	setf	(_arrayShowUsers+3)& (0+255),b
  6747                           
  6748                           ;Usuaris.c: 175:     arrayShowUsers[4] = -1;
  6749  004E' 6900'              	setf	(_arrayShowUsers+4)& (0+255),b
  6750                           
  6751                           ;Usuaris.c: 176:     arrayShowUsers[5] = -1;
  6752  0050' 6900'              	setf	(_arrayShowUsers+5)& (0+255),b
  6753                           
  6754                           ;Usuaris.c: 177:     arrayShowUsers[6] = -1;
  6755  0052' 6900'              	setf	(_arrayShowUsers+6)& (0+255),b
  6756                           
  6757                           ;Usuaris.c: 178:     arrayShowUsers[7] = -1;
  6758  0054' 6900'              	setf	(_arrayShowUsers+7)& (0+255),b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;Usuaris.c: 179:     i = 1;
  6762  0056' 0E01               	movlw	1
  6763  0058' 6E00'              	movwf	_i^0,c
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;Usuaris.c: 180:     if(numUsuaris < 7) {
  6767  005A' 0E07               	movlw	7
  6768  005C' 6000'              	cpfslt	_numUsuaris^0,c
  6769  005E' D003               	goto	l778
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;Usuaris.c: 181:       j = 0;
  6773  0060' 0E00               	movlw	0
  6774  0062' 6E00'              	movwf	_j^0,c
  6775                           
  6776                           ;Usuaris.c: 182:     }
  6777  0064' D002               	goto	l6012
  6778  0066'                    l778:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;Usuaris.c: 184:       j = indexNextUserStruct;
  6782  0066' C02A' F028'        	movff	_indexNextUserStruct,_j
  6783  006A'                    l6012:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;Usuaris.c: 186:     state = 5;
  6787  006A' 0E05               	movlw	5
  6788  006C' 6E00'              	movwf	UmotorUsers@state^0,c
  6789                           
  6790                           ;Usuaris.c: 187:    }
  6791  006E' 0012               	return	
  6792  0070'                    l777:
  6793  0070' A000'              	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6794  0072' 0012               	return	
  6795                           
  6796                           ;Usuaris.c: 189:     do_updateScore = 0;
  6797  0074' 9000'              	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6798                           
  6799                           ;Usuaris.c: 190:     state = 6;
  6800  0076' 0E06               	movlw	6
  6801  0078' 6E00'              	movwf	UmotorUsers@state^0,c
  6802  007A' 0012               	return	
  6803  007C'                    l6018:
  6804                           
  6805                           ;Usuaris.c: 194:    if (i < numUsuaris) {
  6806  007C' 5000'              	movf	_numUsuaris^0,w,c
  6807  007E' 5C00'              	subwf	_i^0,w,c
  6808  0080' B0D8               	btfsc	status,0,c
  6809  0082' D012               	goto	l784
  6810                           
  6811                           ;Usuaris.c: 195:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6812  0084' 0E00'              	movlw	low _tmpUsername
  6813  0086' 6E00'              	movwf	compareStrings@a^0,c
  6814  0088' 5000'              	movf	_i^0,w,c
  6815  008A' 0D12               	mullw	18
  6816  008C' 0E00'              	movlw	low _usuaris
  6817  008E' 24F3               	addwf	243,w,c
  6818  0090' 6E00'              	movwf	compareStrings@b^0,c
  6819  0092' 0E00'              	movlw	high _usuaris
  6820  0094' 20F4               	addwfc	prodh,w,c
  6821  0096' 6E00'              	movwf	(compareStrings@b+1)^0,c
  6822  0098' EC00' F000'        	call	_compareStrings	;wreg free
  6823  009C' 0900               	iorlw	0
  6824  009E' B4D8               	btfsc	status,2,c
  6825                           
  6826                           ;Usuaris.c: 196:      usuariLoguejat = i;
  6827  00A0' C029' F00B'        	movff	_i,_usuariLoguejat
  6828  00A4'                    l6024:
  6829                           
  6830                           ;Usuaris.c: 199:     i++;
  6831  00A4' 2A00'              	incf	_i^0,f,c
  6832                           
  6833                           ;Usuaris.c: 201:    }
  6834  00A6' 0012               	return	
  6835  00A8'                    l784:
  6836                           
  6837                           ;Usuaris.c: 203:     do_check_exists = 0;
  6838  00A8' 9000'              	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6839  00AA'                    l6026:
  6840                           
  6841                           ;Usuaris.c: 204:     state--;
  6842  00AA' 0600'              	decf	UmotorUsers@state^0,f,c
  6843  00AC' 0012               	return	
  6844  00AE'                    l6028:
  6845                           
  6846                           ;Usuaris.c: 208:    if (i < 9) {
  6847  00AE' 0E09               	movlw	9
  6848  00B0' 6000'              	cpfslt	_i^0,c
  6849  00B2' D015               	goto	l6038
  6850                           
  6851                           ;Usuaris.c: 209:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6852  00B4' C02B' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  6853  00B8' 5000'              	movf	_i^0,w,c
  6854  00BA' 0F00'              	addlw	low _tmpUsername
  6855  00BC' 6ED9               	movwf	fsr2l,c
  6856  00BE' 6ADA               	clrf	fsr2h,c
  6857  00C0' 50DF               	movf	indf2,w,c
  6858  00C2' EC00' F000'        	call	_escriureCharEEPROM
  6859                           
  6860                           ;Usuaris.c: 210:     indexNextUser++;
  6861  00C6' 2A00'              	incf	_indexNextUser^0,f,c
  6862                           
  6863                           ;Usuaris.c: 211:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6864  00C8' 5000'              	movf	_i^0,w,c
  6865  00CA' 0F00'              	addlw	low _tmpUsername
  6866  00CC' 6ED9               	movwf	fsr2l,c
  6867  00CE' 6ADA               	clrf	fsr2h,c
  6868  00D0' 5000'              	movf	_indexNextUserStruct^0,w,c
  6869  00D2' 0D12               	mullw	18
  6870  00D4' 0E00'              	movlw	low _usuaris
  6871  00D6' 6E00'              	movwf	??_UmotorUsers^0,c
  6872  00D8' 0E00'              	movlw	high _usuaris
  6873  00DA' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  6874  00DC' D01E               	goto	L4
  6875  00DE'                    l6038:
  6876                           
  6877                           ;Usuaris.c: 216:     i = 0;
  6878  00DE' 0E00               	movlw	0
  6879  00E0' 6E00'              	movwf	_i^0,c
  6880  00E2' D79D               	goto	l5994
  6881  00E4'                    l6042:
  6882                           
  6883                           ;Usuaris.c: 221:    if (i < 9) {
  6884  00E4' 0E09               	movlw	9
  6885  00E6' 6000'              	cpfslt	_i^0,c
  6886  00E8' D025               	goto	l6052
  6887                           
  6888                           ;Usuaris.c: 222:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6889  00EA' C02B' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  6890  00EE' 5000'              	movf	_i^0,w,c
  6891  00F0' 0F00'              	addlw	low _tmpPassword
  6892  00F2' 6ED9               	movwf	fsr2l,c
  6893  00F4' 6ADA               	clrf	fsr2h,c
  6894  00F6' 50DF               	movf	indf2,w,c
  6895  00F8' EC00' F000'        	call	_escriureCharEEPROM
  6896                           
  6897                           ;Usuaris.c: 223:     indexNextUser++;
  6898  00FC' 2A00'              	incf	_indexNextUser^0,f,c
  6899                           
  6900                           ;Usuaris.c: 224:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6901  00FE' 5000'              	movf	_i^0,w,c
  6902  0100' 0F00'              	addlw	low _tmpPassword
  6903  0102' 6ED9               	movwf	fsr2l,c
  6904  0104' 6ADA               	clrf	fsr2h,c
  6905  0106' 5000'              	movf	_indexNextUserStruct^0,w,c
  6906  0108' 0D12               	mullw	18
  6907  010A' 0E00'              	movlw	low _usuaris
  6908  010C' 6E00'              	movwf	??_UmotorUsers^0,c
  6909  010E' 0E00'              	movlw	high _usuaris
  6910  0110' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  6911  0112' 0E09               	movlw	9
  6912  0114' 2600'              	addwf	??_UmotorUsers^0,f,c
  6913  0116' 0E00               	movlw	0
  6914  0118' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  6915  011A'                    L4:
  6916  011A' 50F3               	movf	243,w,c
  6917  011C' 2600'              	addwf	??_UmotorUsers^0,f,c
  6918  011E' 50F4               	movf	244,w,c
  6919  0120' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  6920  0122' 5000'              	movf	_i^0,w,c
  6921  0124' 2400'              	addwf	??_UmotorUsers^0,w,c
  6922  0126' 6EE1               	movwf	fsr1l,c
  6923  0128' 0E00               	movlw	0
  6924  012A' 2000'              	addwfc	(??_UmotorUsers+1)^0,w,c
  6925  012C' 6EE2               	movwf	fsr1h,c
  6926  012E' CFDF FFE7          	movff	indf2,indf1
  6927  0132' D7B8               	goto	l6024
  6928  0134'                    l6052:
  6929  0134' 0E08               	movlw	8
  6930  0136' 6400'              	cpfsgt	_i^0,c
  6931  0138' 0012               	return	
  6932                           
  6933                           ;Usuaris.c: 229:     do_register = 0;
  6934  013A' 9000'              	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6935                           
  6936                           ;Usuaris.c: 230:     if(indexNextUser > 140) indexNextUser = 2;
  6937  013C' 0E8C               	movlw	140
  6938  013E' 6400'              	cpfsgt	_indexNextUser^0,c
  6939  0140' D002               	goto	l6060
  6940  0142' 0E02               	movlw	2
  6941  0144' 6E00'              	movwf	_indexNextUser^0,c
  6942  0146'                    l6060:
  6943                           
  6944                           ;Usuaris.c: 231:     indexNextUserStruct++;
  6945  0146' 2A00'              	incf	_indexNextUserStruct^0,f,c
  6946                           
  6947                           ;Usuaris.c: 232:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6948  0148' 0E08               	movlw	8
  6949  014A' 1800'              	xorwf	_indexNextUserStruct^0,w,c
  6950  014C' A4D8               	btfss	status,2,c
  6951  014E' D002               	goto	l6066
  6952  0150' 0E00               	movlw	0
  6953  0152' 6E00'              	movwf	_indexNextUserStruct^0,c
  6954  0154'                    l6066:
  6955                           
  6956                           ;Usuaris.c: 233:     escriureCharEEPROM(indexNextUser,1);
  6957  0154' 0E01               	movlw	1
  6958  0156' 6E00'              	movwf	escriureCharEEPROM@pos^0,c
  6959  0158' 5000'              	movf	_indexNextUser^0,w,c
  6960  015A' EC00' F000'        	call	_escriureCharEEPROM
  6961                           
  6962                           ;Usuaris.c: 234:     i = 0;
  6963  015E' 0E00               	movlw	0
  6964  0160' 6E00'              	movwf	_i^0,c
  6965                           
  6966                           ;Usuaris.c: 235:     state = 9;
  6967  0162' 0E09               	movlw	9
  6968  0164' 6E00'              	movwf	UmotorUsers@state^0,c
  6969  0166' 0012               	return	
  6970  0168'                    l6072:
  6971                           
  6972                           ;Usuaris.c: 239:    if (i < numUsuaris) {
  6973  0168' 5000'              	movf	_numUsuaris^0,w,c
  6974  016A' 5C00'              	subwf	_i^0,w,c
  6975  016C' B0D8               	btfsc	status,0,c
  6976  016E' D01D               	goto	l6088
  6977                           
  6978                           ;Usuaris.c: 240:     if(j != usuariLoguejat){
  6979  0170' C00B' F00A'        	movff	_usuariLoguejat,??_UmotorUsers
  6980  0174' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  6981  0176' BE00'              	btfsc	??_UmotorUsers^0,7,c
  6982  0178' 0600'              	decf	(??_UmotorUsers+1)^0,f,c
  6983  017A' 5000'              	movf	_j^0,w,c
  6984  017C' 6E00'              	movwf	(??_UmotorUsers+2)^0,c
  6985  017E' 6A00'              	clrf	(??_UmotorUsers+3)^0,c
  6986  0180' 5000'              	movf	??_UmotorUsers^0,w,c
  6987  0182' 1800'              	xorwf	(??_UmotorUsers+2)^0,w,c
  6988  0184' E104               	bnz	u6360
  6989  0186' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  6990  0188' 1800'              	xorwf	(??_UmotorUsers+3)^0,w,c
  6991  018A' B4D8               	btfsc	status,2,c
  6992  018C' D007               	goto	l6080
  6993  018E'                    u6360:
  6994                           
  6995                           ;Usuaris.c: 241:       arrayShowUsers[i] = j;
  6996  018E' 5000'              	movf	_i^0,w,c
  6997  0190' 0F00'              	addlw	low _arrayShowUsers
  6998  0192' 6ED9               	movwf	fsr2l,c
  6999  0194' 6ADA               	clrf	fsr2h,c
  7000  0196' C028' FFDF         	movff	_j,indf2
  7001                           
  7002                           ;Usuaris.c: 242:      i++;
  7003  019A' 2A00'              	incf	_i^0,f,c
  7004  019C'                    l6080:
  7005                           
  7006                           ;Usuaris.c: 243:       j++;
  7007  019C' 2A00'              	incf	_j^0,f,c
  7008                           
  7009                           ;Usuaris.c: 247:     if(j > 7) j=0;
  7010                           
  7011                           ;Usuaris.c: 244:     }else{
  7012  019E' 0E07               	movlw	7
  7013  01A0' 6400'              	cpfsgt	_j^0,c
  7014  01A2' 0012               	return	
  7015  01A4' 0E00               	movlw	0
  7016  01A6' 6E00'              	movwf	_j^0,c
  7017  01A8' 0012               	return	
  7018  01AA'                    l6088:
  7019  01AA' 5000'              	movf	_numUsuaris^0,w,c
  7020  01AC' 1800'              	xorwf	_i^0,w,c
  7021  01AE' A4D8               	btfss	status,2,c
  7022  01B0' 0012               	return	
  7023                           
  7024                           ;Usuaris.c: 251:     do_showUsers = 0;
  7025  01B2' 9000'              	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  7026  01B4'                    l6092:
  7027                           
  7028                           ;Usuaris.c: 252:     state = 0;
  7029  01B4' 0E00               	movlw	0
  7030  01B6' 6E00'              	movwf	UmotorUsers@state^0,c
  7031  01B8' 0012               	return	
  7032  01BA'                    l6094:
  7033                           
  7034                           ;Usuaris.c: 256:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  7035  01BA' 0E05               	movlw	5
  7036  01BC' 6000'              	cpfslt	_i^0,c
  7037  01BE' D009               	goto	l6100
  7038  01C0' 5000'              	movf	_i^0,w,c
  7039  01C2' 0D02               	mullw	2
  7040  01C4' 50F3               	movf	243,w,c
  7041  01C6' 0F00'              	addlw	low _puntuacions
  7042  01C8' 6ED9               	movwf	fsr2l,c
  7043  01CA' 6ADA               	clrf	fsr2h,c
  7044  01CC' 28DE               	incf	postinc2,w,c
  7045  01CE' A4D8               	btfss	status,2,c
  7046  01D0' D769               	goto	l6024
  7047  01D2'                    l6100:
  7048  01D2' 0E05               	movlw	5
  7049  01D4' 6000'              	cpfslt	_i^0,c
  7050  01D6' D009               	goto	l6106
  7051  01D8' 5000'              	movf	_i^0,w,c
  7052  01DA' 0D02               	mullw	2
  7053  01DC' 50F3               	movf	243,w,c
  7054  01DE' 0F00'              	addlw	low _puntuacions
  7055  01E0' 6ED9               	movwf	fsr2l,c
  7056  01E2' 6ADA               	clrf	fsr2h,c
  7057  01E4' 28DE               	incf	postinc2,w,c
  7058  01E6' B4D8               	btfsc	status,2,c
  7059  01E8' D71A               	goto	l5994
  7060  01EA'                    l6106:
  7061  01EA' 0E04               	movlw	4
  7062  01EC' 6400'              	cpfsgt	_i^0,c
  7063  01EE' 0012               	return	
  7064                           
  7065                           ;Usuaris.c: 264:     i = 0;
  7066  01F0' 0E00               	movlw	0
  7067  01F2' 6E00'              	movwf	_i^0,c
  7068                           
  7069                           ;Usuaris.c: 265:     state = 8;
  7070  01F4' 0E08               	movlw	8
  7071  01F6' 6E00'              	movwf	UmotorUsers@state^0,c
  7072  01F8' 0012               	return	
  7073  01FA'                    l6110:
  7074                           
  7075                           ;Usuaris.c: 269:    puntuacions[i].score = scoreUsr;
  7076  01FA' 5000'              	movf	_i^0,w,c
  7077  01FC' 0D02               	mullw	2
  7078  01FE' 50F3               	movf	243,w,c
  7079  0200' 0F00'              	addlw	low (_puntuacions+1)
  7080  0202' 6ED9               	movwf	fsr2l,c
  7081  0204' 6ADA               	clrf	fsr2h,c
  7082  0206' C027' FFDF         	movff	_scoreUsr,indf2
  7083                           
  7084                           ;Usuaris.c: 270:    puntuacions[i].indexStruct = usuariLoguejat;
  7085  020A' 5000'              	movf	_i^0,w,c
  7086  020C' 0D02               	mullw	2
  7087  020E' 50F3               	movf	243,w,c
  7088  0210' 0F00'              	addlw	low _puntuacions
  7089  0212' 6ED9               	movwf	fsr2l,c
  7090  0214' 6ADA               	clrf	fsr2h,c
  7091  0216' C00B' FFDF         	movff	_usuariLoguejat,indf2
  7092                           
  7093                           ;Usuaris.c: 271:    i = i+i;
  7094  021A' 5000'              	movf	_i^0,w,c
  7095  021C' 0D02               	mullw	2
  7096  021E' CFF3 F029'         	movff	prodl,_i
  7097                           
  7098                           ;Usuaris.c: 272:    escriureCharEEPROM(usuariLoguejat,200+i);
  7099  0222' 5000'              	movf	_i^0,w,c
  7100  0224' 0FC8               	addlw	200
  7101  0226' 6E00'              	movwf	escriureCharEEPROM@pos^0,c
  7102  0228' 5000'              	movf	_usuariLoguejat^0,w,c
  7103  022A' EC00' F000'        	call	_escriureCharEEPROM
  7104                           
  7105                           ;Usuaris.c: 273:    i++;
  7106  022E' 2A00'              	incf	_i^0,f,c
  7107                           
  7108                           ;Usuaris.c: 274:    escriureCharEEPROM(scoreUsr,200+i);
  7109  0230' 5000'              	movf	_i^0,w,c
  7110  0232' 0FC8               	addlw	200
  7111  0234' 6E00'              	movwf	escriureCharEEPROM@pos^0,c
  7112  0236' 5000'              	movf	_scoreUsr^0,w,c
  7113  0238' EC00' F000'        	call	_escriureCharEEPROM
  7114  023C' D7BB               	goto	l6092
  7115  023E'                    l6122:
  7116                           
  7117                           ;Usuaris.c: 278:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  7118  023E' 5000'              	movf	_i^0,w,c
  7119  0240' 0D02               	mullw	2
  7120  0242' 50F3               	movf	243,w,c
  7121  0244' 0F00'              	addlw	low (_puntuacions+1)
  7122  0246' 6ED9               	movwf	fsr2l,c
  7123  0248' 6ADA               	clrf	fsr2h,c
  7124  024A' 5000'              	movf	_scoreUsr^0,w,c
  7125  024C' 5CDE               	subwf	postinc2,w,c
  7126  024E' A0D8               	btfss	status,0,c
  7127  0250' D004               	goto	l6128
  7128  0252' 0E05               	movlw	5
  7129  0254' 6000'              	cpfslt	_i^0,c
  7130  0256' D001               	goto	l6128
  7131  0258' D725               	goto	l6024
  7132  025A'                    l6128:
  7133  025A' 0E04               	movlw	4
  7134  025C' 6400'              	cpfsgt	_i^0,c
  7135  025E' D001               	goto	l6132
  7136  0260' D7A9               	goto	l6092
  7137  0262'                    l6132:
  7138  0262' 5000'              	movf	_i^0,w,c
  7139  0264' 0D02               	mullw	2
  7140  0266' 50F3               	movf	243,w,c
  7141  0268' 0F00'              	addlw	low (_puntuacions+1)
  7142  026A' 6ED9               	movwf	fsr2l,c
  7143  026C' 6ADA               	clrf	fsr2h,c
  7144  026E' 5000'              	movf	_scoreUsr^0,w,c
  7145  0270' 5CDE               	subwf	postinc2,w,c
  7146  0272' B0D8               	btfsc	status,0,c
  7147  0274' 0012               	return	
  7148  0276' 0E05               	movlw	5
  7149  0278' 6000'              	cpfslt	_i^0,c
  7150  027A' 0012               	return	
  7151  027C' D716               	goto	l6026
  7152  027E'                    l6138:
  7153                           
  7154                           ;Usuaris.c: 290:    if (indexNextUser != 2 || i > 4) {
  7155  027E' 0E02               	movlw	2
  7156  0280' 1800'              	xorwf	_indexNextUser^0,w,c
  7157  0282' A4D8               	btfss	status,2,c
  7158  0284' D797               	goto	l6092
  7159  0286' 0E04               	movlw	4
  7160  0288' 6400'              	cpfsgt	_i^0,c
  7161  028A' D001               	goto	l6144
  7162  028C' D793               	goto	l6092
  7163  028E'                    l6144:
  7164  028E' 0E02               	movlw	2
  7165  0290' 1800'              	xorwf	_indexNextUser^0,w,c
  7166  0292' A4D8               	btfss	status,2,c
  7167  0294' 0012               	return	
  7168  0296' 0E05               	movlw	5
  7169  0298' 6000'              	cpfslt	_i^0,c
  7170  029A' 0012               	return	
  7171                           
  7172                           ;Usuaris.c: 295:     if(indexNextUserStruct == 0){
  7173  029C' 5000'              	movf	_indexNextUserStruct^0,w,c
  7174  029E' A4D8               	btfss	status,2,c
  7175  02A0' D002               	goto	l6152
  7176                           
  7177                           ;Usuaris.c: 296:       tmp = 7;
  7178  02A2' 0E07               	movlw	7
  7179  02A4' D001               	goto	L5
  7180  02A6'                    l6152:
  7181                           
  7182                           ;Usuaris.c: 298:      tmp = indexNextUserStruct-1;
  7183  02A6' 0400'              	decf	_indexNextUserStruct^0,w,c
  7184  02A8'                    L5:
  7185  02A8' 6E00'              	movwf	_tmp^0,c
  7186                           
  7187                           ;Usuaris.c: 300:     if(puntuacions[i].indexStruct == tmp){
  7188  02AA' 5000'              	movf	_tmp^0,w,c
  7189  02AC' 6E00'              	movwf	??_UmotorUsers^0,c
  7190  02AE' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  7191  02B0' 5000'              	movf	_i^0,w,c
  7192  02B2' 0D02               	mullw	2
  7193  02B4' 50F3               	movf	243,w,c
  7194  02B6' 0F00'              	addlw	low _puntuacions
  7195  02B8' 6ED9               	movwf	fsr2l,c
  7196  02BA' 6ADA               	clrf	fsr2h,c
  7197  02BC' 50DF               	movf	indf2,w,c
  7198  02BE' 6E00'              	movwf	(??_UmotorUsers+2)^0,c
  7199  02C0' 6A00'              	clrf	(??_UmotorUsers+3)^0,c
  7200  02C2' BE00'              	btfsc	(??_UmotorUsers+2)^0,7,c
  7201  02C4' 0600'              	decf	(??_UmotorUsers+3)^0,f,c
  7202  02C6' 5000'              	movf	??_UmotorUsers^0,w,c
  7203  02C8' 1800'              	xorwf	(??_UmotorUsers+2)^0,w,c
  7204  02CA' E103               	bnz	u6541
  7205  02CC' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  7206  02CE' 1800'              	xorwf	(??_UmotorUsers+3)^0,w,c
  7207  02D0' A4D8               	btfss	status,2,c
  7208  02D2'                    u6541:
  7209  02D2' D6E8               	goto	l6024
  7210                           
  7211                           ;Usuaris.c: 301:       puntuacions[i].indexStruct = -1;
  7212  02D4' 5000'              	movf	_i^0,w,c
  7213  02D6' 0D02               	mullw	2
  7214  02D8' 50F3               	movf	243,w,c
  7215  02DA' 0F00'              	addlw	low _puntuacions
  7216  02DC' 6ED9               	movwf	fsr2l,c
  7217  02DE' 6ADA               	clrf	fsr2h,c
  7218  02E0' 0EFF               	movlw	255
  7219  02E2' 6EDF               	movwf	indf2,c
  7220  02E4' D6DF               	goto	l6024
  7221  02E6'                    l6162:
  7222  02E6' 5000'              	movf	UmotorUsers@state^0,w,c
  7223  02E8' 6E00'              	movwf	??_UmotorUsers^0,c
  7224  02EA' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  7225                           
  7226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 1, Range of values is 0 to 0
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            4     3 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233  02EC' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  7234  02EE' 0A00               	xorlw	0	; case 0
  7235  02F0' A4D8               	btfss	status,2,c
  7236  02F2' 0012               	return	
  7237                           
  7238                           ; Switch size 1, requested type "simple"
  7239                           ; Number of cases is 9, Range of values is 0 to 9
  7240                           ; switch strategies available:
  7241                           ; Name         Instructions Cycles
  7242                           ; simple_byte           28    15 (average)
  7243                           ;	Chosen strategy is simple_byte
  7244  02F4' 5000'              	movf	??_UmotorUsers^0,w,c
  7245  02F6' 0A00               	xorlw	0	; case 0
  7246  02F8' B4D8               	btfsc	status,2,c
  7247  02FA' D683               	goto	l769
  7248  02FC' 0A01               	xorlw	1	; case 1
  7249  02FE' B4D8               	btfsc	status,2,c
  7250  0300' D6BD               	goto	l6018
  7251  0302' 0A03               	xorlw	3	; case 2
  7252  0304' B4D8               	btfsc	status,2,c
  7253  0306' D6D3               	goto	l6028
  7254  0308' 0A01               	xorlw	1	; case 3
  7255  030A' B4D8               	btfsc	status,2,c
  7256  030C' D6EB               	goto	l6042
  7257  030E' 0A06               	xorlw	6	; case 5
  7258  0310' B4D8               	btfsc	status,2,c
  7259  0312' D72A               	goto	l6072
  7260  0314' 0A03               	xorlw	3	; case 6
  7261  0316' B4D8               	btfsc	status,2,c
  7262  0318' D750               	goto	l6094
  7263  031A' 0A01               	xorlw	1	; case 7
  7264  031C' B4D8               	btfsc	status,2,c
  7265  031E' D76D               	goto	l6110
  7266  0320' 0A0F               	xorlw	15	; case 8
  7267  0322' B4D8               	btfsc	status,2,c
  7268  0324' D78C               	goto	l6122
  7269  0326' 0A01               	xorlw	1	; case 9
  7270  0328' A4D8               	btfss	status,2,c
  7271  032A' 0012               	return	
  7272  032C' D7A8               	goto	l6138
  7273  032E'                    __end_of_UmotorUsers:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _escriureCharEEPROM *****************
  7277 ;; Defined at:
  7278 ;;		line 72 in file "Usuaris.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  c               1    wreg     unsigned char 
  7281 ;;  pos             1    5[COMRAM] unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  c               1    6[COMRAM] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1
  7293 ;;      Params:         1       0       0
  7294 ;;      Locals:         1       0       0
  7295 ;;      Temps:          0       0       0
  7296 ;;      Totals:         2       0       0
  7297 ;;Total ram usage:        2 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 2
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_UmotorUsers
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text57
  7308  0000'                    __ptext57:
  7309                           	callstack 0
  7310  0000'                    _escriureCharEEPROM:
  7311                           	callstack 27
  7312                           
  7313                           ;incstack = 0
  7314                           ;escriureCharEEPROM@c stored from wreg
  7315  0000' 6E00'              	movwf	escriureCharEEPROM@c^0,c
  7316                           
  7317                           ;Usuaris.c: 73:     EEADR = pos;
  7318  0002' C005' FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7319                           
  7320                           ;Usuaris.c: 74:     EEDATA = c;
  7321  0006' C006' FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7322                           
  7323                           ;Usuaris.c: 75:     EECON1bits.EEPGD = 0;
  7324  000A' 9EA6               	bcf	166,7,c	;volsfr
  7325                           
  7326                           ;Usuaris.c: 76:     EECON1bits.CFGS = 0;
  7327  000C' 9CA6               	bcf	166,6,c	;volsfr
  7328                           
  7329                           ;Usuaris.c: 77:     EECON1bits.WREN = 1;
  7330  000E' 84A6               	bsf	166,2,c	;volsfr
  7331                           
  7332                           ;Usuaris.c: 78:     INTCONbits.GIE = 0;
  7333  0010' 9EF2               	bcf	242,7,c	;volatile
  7334                           
  7335                           ;Usuaris.c: 79:     EECON2 = 85;
  7336  0012' 0E55               	movlw	85
  7337  0014' 6EA7               	movwf	167,c	;volsfr
  7338                           
  7339                           ;Usuaris.c: 80:     EECON2 = 170;
  7340  0016' 0EAA               	movlw	170
  7341  0018' 6EA7               	movwf	167,c	;volsfr
  7342                           
  7343                           ;Usuaris.c: 81:     EECON1bits.WR = 1;
  7344  001A' 82A6               	bsf	166,1,c	;volsfr
  7345  001C'                    l726:
  7346  001C' B2A6               	btfsc	166,1,c	;volsfr
  7347  001E' D7FE               	goto	l726
  7348                           
  7349                           ;Usuaris.c: 83:     INTCONbits.GIE = 1;
  7350  0020' 8EF2               	bsf	242,7,c	;volatile
  7351                           
  7352                           ;Usuaris.c: 84:     EECON1bits.WREN = 0;
  7353  0022' 94A6               	bcf	166,2,c	;volsfr
  7354  0024' 0012               	return		;funcret
  7355  0026'                    __end_of_escriureCharEEPROM:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _compareStrings *****************
  7359 ;; Defined at:
  7360 ;;		line 136 in file "Usuaris.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  a               1    5[COMRAM] PTR const unsigned char 
  7363 ;;		 -> tmpPassword(9), tmpUsername(9), 
  7364 ;;  b               2    6[COMRAM] PTR const unsigned char 
  7365 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      unsigned char 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1
  7377 ;;      Params:         3       0       0
  7378 ;;      Locals:         0       0       0
  7379 ;;      Temps:          2       0       0
  7380 ;;      Totals:         5       0       0
  7381 ;;Total ram usage:        5 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_UmotorUsers
  7388 ;;		_miraPassword
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text58
  7393  0000'                    __ptext58:
  7394                           	callstack 0
  7395  0000'                    _compareStrings:
  7396                           	callstack 26
  7397                           
  7398                           ;Usuaris.c: 137:     while (*a){
  7399                           
  7400                           ;incstack = 0
  7401  0000' D00E               	goto	l4462
  7402  0002'                    l4456:
  7403                           
  7404                           ;Usuaris.c: 138:         if (*a != *b)break;
  7405  0002' C006' FFD9         	movff	compareStrings@b,fsr2l
  7406  0006' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  7407  000A' 5000'              	movf	compareStrings@a^0,w,c
  7408  000C' 6EE1               	movwf	fsr1l,c
  7409  000E' 6AE2               	clrf	fsr1h,c
  7410  0010' 50DE               	movf	postinc2,w,c
  7411  0012' 18E6               	xorwf	postinc1,w,c
  7412  0014' A4D8               	btfss	status,2,c
  7413  0016' D009               	goto	u3930
  7414                           
  7415                           ;Usuaris.c: 139:         a++;
  7416  0018' 2A00'              	incf	compareStrings@a^0,f,c
  7417                           
  7418                           ;Usuaris.c: 140:         b++;
  7419  001A' 4A00'              	infsnz	compareStrings@b^0,f,c
  7420  001C' 2A00'              	incf	(compareStrings@b+1)^0,f,c
  7421  001E'                    l4462:
  7422                           
  7423                           ;Usuaris.c: 137:     while (*a){
  7424  001E' 5000'              	movf	compareStrings@a^0,w,c
  7425  0020' 6ED9               	movwf	fsr2l,c
  7426  0022' 6ADA               	clrf	fsr2h,c
  7427  0024' 50DF               	movf	indf2,w,c
  7428  0026' A4D8               	btfss	status,2,c
  7429  0028' D7EC               	goto	l4456
  7430  002A'                    u3930:
  7431                           
  7432                           ;Usuaris.c: 142:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7433  002A' C006' FFD9         	movff	compareStrings@b,fsr2l
  7434  002E' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  7435  0032' 50DF               	movf	indf2,w,c
  7436  0034' 6E00'              	movwf	??_compareStrings^0,c
  7437  0036' 5000'              	movf	compareStrings@a^0,w,c
  7438  0038' 6ED9               	movwf	fsr2l,c
  7439  003A' 6ADA               	clrf	fsr2h,c
  7440  003C' 50DF               	movf	indf2,w,c
  7441  003E' 6E00'              	movwf	(??_compareStrings+1)^0,c
  7442  0040' 5000'              	movf	??_compareStrings^0,w,c
  7443  0042' 5C00'              	subwf	(??_compareStrings+1)^0,w,c
  7444  0044' 0012               	return		;funcret
  7445  0046'                    __end_of_compareStrings:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function _Uinit *****************
  7449 ;; Defined at:
  7450 ;;		line 93 in file "Usuaris.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  k               1   12[COMRAM] unsigned char 
  7455 ;;  k               1   11[COMRAM] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1
  7465 ;;      Params:         0       0       0
  7466 ;;      Locals:         2       0       0
  7467 ;;      Temps:          2       0       0
  7468 ;;      Totals:         4       0       0
  7469 ;;Total ram usage:        4 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 3
  7472 ;; This function calls:
  7473 ;;		___lbdiv
  7474 ;;		_llegirCharEEPROM
  7475 ;; This function is called by:
  7476 ;;		_main
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text59
  7481  0000'                    __ptext59:
  7482                           	callstack 0
  7483  0000'                    _Uinit:
  7484                           	callstack 27
  7485                           
  7486                           ;Usuaris.c: 97:     i = 0;
  7487                           
  7488                           ;incstack = 0
  7489  0000' 0E00               	movlw	0
  7490  0002' 6E00'              	movwf	_i^0,c
  7491                           
  7492                           ;Usuaris.c: 102:     numUsuaris = llegirCharEEPROM(0);
  7493  0004' 0E00               	movlw	0
  7494  0006' EC00' F000'        	call	_llegirCharEEPROM
  7495  000A' 6E00'              	movwf	_numUsuaris^0,c
  7496                           
  7497                           ;Usuaris.c: 104:     if(numUsuaris > 8) numUsuaris = 0;
  7498  000C' 0E08               	movlw	8
  7499  000E' 6400'              	cpfsgt	_numUsuaris^0,c
  7500  0010' D002               	goto	l4832
  7501  0012' 0E00               	movlw	0
  7502  0014' 6E00'              	movwf	_numUsuaris^0,c
  7503  0016'                    l4832:
  7504                           
  7505                           ;Usuaris.c: 108:     i++;
  7506  0016' 2A00'              	incf	_i^0,f,c
  7507                           
  7508                           ;Usuaris.c: 109:     indexNextUser = llegirCharEEPROM(1);
  7509  0018' 0E01               	movlw	1
  7510  001A' EC00' F000'        	call	_llegirCharEEPROM
  7511  001E' 6E00'              	movwf	_indexNextUser^0,c
  7512                           
  7513                           ;Usuaris.c: 110:     if(indexNextUser == 255) indexNextUser = 2;
  7514  0020' 2800'              	incf	_indexNextUser^0,w,c
  7515  0022' A4D8               	btfss	status,2,c
  7516  0024' D002               	goto	l4840
  7517  0026' 0E02               	movlw	2
  7518  0028' 6E00'              	movwf	_indexNextUser^0,c
  7519  002A'                    l4840:
  7520                           
  7521                           ;Usuaris.c: 111:     indexNextUserStruct = indexNextUser/18;
  7522  002A' 0E12               	movlw	18
  7523  002C' 6E00'              	movwf	___lbdiv@divisor^0,c
  7524  002E' 5000'              	movf	_indexNextUser^0,w,c
  7525  0030' EC00' F000'        	call	___lbdiv
  7526  0034' 6E00'              	movwf	_indexNextUserStruct^0,c
  7527                           
  7528                           ;Usuaris.c: 112:     i++;
  7529  0036' 2A00'              	incf	_i^0,f,c
  7530                           
  7531                           ;Usuaris.c: 113:     for(j = 0;j<numUsuaris;j++){
  7532  0038' 0E00               	movlw	0
  7533  003A' 6E00'              	movwf	_j^0,c
  7534  003C' D03B               	goto	l4876
  7535  003E'                    l4846:
  7536                           
  7537                           ;Usuaris.c: 114:         for(unsigned char k = 0; k<9; k++){
  7538  003E' 0E00               	movlw	0
  7539  0040' 6E00'              	movwf	Uinit@k^0,c
  7540  0042'                    l4852:
  7541                           
  7542                           ;Usuaris.c: 115:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7543  0042' 5000'              	movf	_j^0,w,c
  7544  0044' 0D12               	mullw	18
  7545  0046' 0E00'              	movlw	low _usuaris
  7546  0048' 6E00'              	movwf	??_Uinit^0,c
  7547  004A' 0E00'              	movlw	high _usuaris
  7548  004C' 6E00'              	movwf	(??_Uinit+1)^0,c
  7549  004E' 50F3               	movf	243,w,c
  7550  0050' 2600'              	addwf	??_Uinit^0,f,c
  7551  0052' 50F4               	movf	244,w,c
  7552  0054' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7553  0056' 5000'              	movf	Uinit@k^0,w,c
  7554  0058' 2400'              	addwf	??_Uinit^0,w,c
  7555  005A' 6ED9               	movwf	fsr2l,c
  7556  005C' 0E00               	movlw	0
  7557  005E' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  7558  0060' 6EDA               	movwf	fsr2h,c
  7559  0062' 5000'              	movf	_i^0,w,c
  7560  0064' EC00' F000'        	call	_llegirCharEEPROM
  7561  0068' 6EDF               	movwf	indf2,c
  7562                           
  7563                           ;Usuaris.c: 116:             i++;
  7564  006A' 2A00'              	incf	_i^0,f,c
  7565                           
  7566                           ;Usuaris.c: 117:         }
  7567  006C' 2A00'              	incf	Uinit@k^0,f,c
  7568  006E' 0E08               	movlw	8
  7569  0070' 6400'              	cpfsgt	Uinit@k^0,c
  7570  0072' D7E7               	goto	l4852
  7571                           
  7572                           ;Usuaris.c: 118:         for(unsigned char k = 0; k<9;k++){
  7573  0074' 0E00               	movlw	0
  7574  0076' 6E00'              	movwf	Uinit@k_1176^0,c
  7575  0078'                    l4866:
  7576                           
  7577                           ;Usuaris.c: 119:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7578  0078' 5000'              	movf	_j^0,w,c
  7579  007A' 0D12               	mullw	18
  7580  007C' 0E00'              	movlw	low _usuaris
  7581  007E' 6E00'              	movwf	??_Uinit^0,c
  7582  0080' 0E00'              	movlw	high _usuaris
  7583  0082' 6E00'              	movwf	(??_Uinit+1)^0,c
  7584  0084' 0E09               	movlw	9
  7585  0086' 2600'              	addwf	??_Uinit^0,f,c
  7586  0088' 0E00               	movlw	0
  7587  008A' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7588  008C' 50F3               	movf	243,w,c
  7589  008E' 2600'              	addwf	??_Uinit^0,f,c
  7590  0090' 50F4               	movf	244,w,c
  7591  0092' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7592  0094' 5000'              	movf	Uinit@k_1176^0,w,c
  7593  0096' 2400'              	addwf	??_Uinit^0,w,c
  7594  0098' 6ED9               	movwf	fsr2l,c
  7595  009A' 0E00               	movlw	0
  7596  009C' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  7597  009E' 6EDA               	movwf	fsr2h,c
  7598  00A0' 5000'              	movf	_i^0,w,c
  7599  00A2' EC00' F000'        	call	_llegirCharEEPROM
  7600  00A6' 6EDF               	movwf	indf2,c
  7601                           
  7602                           ;Usuaris.c: 120:             i++;
  7603  00A8' 2A00'              	incf	_i^0,f,c
  7604                           
  7605                           ;Usuaris.c: 121:         }
  7606  00AA' 2A00'              	incf	Uinit@k_1176^0,f,c
  7607  00AC' 0E08               	movlw	8
  7608  00AE' 6400'              	cpfsgt	Uinit@k_1176^0,c
  7609  00B0' D7E3               	goto	l4866
  7610                           
  7611                           ;Usuaris.c: 122:     }
  7612  00B2' 2A00'              	incf	_j^0,f,c
  7613  00B4'                    l4876:
  7614  00B4' 5000'              	movf	_numUsuaris^0,w,c
  7615  00B6' 5C00'              	subwf	_j^0,w,c
  7616  00B8' A0D8               	btfss	status,0,c
  7617  00BA' D7C1               	goto	l4846
  7618                           
  7619                           ;Usuaris.c: 128:     puntuacions[0].indexStruct = -1;
  7620  00BC' 0100               	movlb	0	; () banked
  7621  00BE' 6900'              	setf	_puntuacions& (0+255),b
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;Usuaris.c: 129:     for(i = 0; i<5; i++){
  7625  00C0' 0E00               	movlw	0
  7626  00C2' 6E00'              	movwf	_i^0,c
  7627  00C4'                    l4880:
  7628  00C4' 0E04               	movlw	4
  7629  00C6' 6400'              	cpfsgt	_i^0,c
  7630  00C8' D001               	goto	l4884
  7631  00CA' 0012               	return	
  7632  00CC'                    l4884:
  7633                           
  7634                           ;Usuaris.c: 130:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7635  00CC' 5000'              	movf	_i^0,w,c
  7636  00CE' 0D02               	mullw	2
  7637  00D0' 50F3               	movf	243,w,c
  7638  00D2' 0F00'              	addlw	low _puntuacions
  7639  00D4' 6ED9               	movwf	fsr2l,c
  7640  00D6' 6ADA               	clrf	fsr2h,c
  7641  00D8' 5000'              	movf	_i^0,w,c
  7642  00DA' 0D02               	mullw	2
  7643  00DC' 50F3               	movf	243,w,c
  7644  00DE' 0FC8               	addlw	200
  7645  00E0' EC00' F000'        	call	_llegirCharEEPROM
  7646  00E4' 6EDF               	movwf	indf2,c
  7647                           
  7648                           ;Usuaris.c: 131:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7649  00E6' 5000'              	movf	_i^0,w,c
  7650  00E8' 0D02               	mullw	2
  7651  00EA' 50F3               	movf	243,w,c
  7652  00EC' 0F00'              	addlw	low (_puntuacions+1)
  7653  00EE' 6ED9               	movwf	fsr2l,c
  7654  00F0' 6ADA               	clrf	fsr2h,c
  7655  00F2' 5000'              	movf	_i^0,w,c
  7656  00F4' 0D02               	mullw	2
  7657  00F6' 50F3               	movf	243,w,c
  7658  00F8' 0FC9               	addlw	201
  7659  00FA' EC00' F000'        	call	_llegirCharEEPROM
  7660  00FE' 6EDF               	movwf	indf2,c
  7661                           
  7662                           ;Usuaris.c: 132:     }
  7663  0100' 2A00'              	incf	_i^0,f,c
  7664  0102' D7E0               	goto	l4880
  7665  0104'                    __end_of_Uinit:
  7666                           	callstack 0
  7667                           
  7668 ;; *************** function _llegirCharEEPROM *****************
  7669 ;; Defined at:
  7670 ;;		line 86 in file "Usuaris.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  pos             1    wreg     unsigned char 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  pos             1    5[COMRAM] unsigned char 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      unsigned char 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1
  7684 ;;      Params:         0       0       0
  7685 ;;      Locals:         1       0       0
  7686 ;;      Temps:          0       0       0
  7687 ;;      Totals:         1       0       0
  7688 ;;Total ram usage:        1 bytes
  7689 ;; Hardware stack levels used: 1
  7690 ;; Hardware stack levels required when called: 2
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_Uinit
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text60
  7699  0000'                    __ptext60:
  7700                           	callstack 0
  7701  0000'                    _llegirCharEEPROM:
  7702                           	callstack 27
  7703                           
  7704                           ;incstack = 0
  7705                           ;llegirCharEEPROM@pos stored from wreg
  7706  0000' 6E00'              	movwf	llegirCharEEPROM@pos^0,c
  7707                           
  7708                           ;Usuaris.c: 87:     EEADR = pos;
  7709  0002' C005' FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7710                           
  7711                           ;Usuaris.c: 88:     EECON1bits.EEPGD = 0;
  7712  0006' 9EA6               	bcf	166,7,c	;volsfr
  7713                           
  7714                           ;Usuaris.c: 89:     EECON1bits.CFGS = 0;
  7715  0008' 9CA6               	bcf	166,6,c	;volsfr
  7716                           
  7717                           ;Usuaris.c: 90:     EECON1bits.RD = 1;
  7718  000A' 80A6               	bsf	166,0,c	;volsfr
  7719                           
  7720                           ;Usuaris.c: 91:     return EEDATA;
  7721  000C' 50A8               	movf	168,w,c	;volatile
  7722  000E' 0012               	return		;funcret
  7723  0010'                    __end_of_llegirCharEEPROM:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function ___lbdiv *****************
  7727 ;; Defined at:
  7728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  dividend        1    wreg     unsigned char 
  7731 ;;  divisor         1    5[COMRAM] unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  dividend        1    6[COMRAM] unsigned char 
  7734 ;;  quotient        1    8[COMRAM] unsigned char 
  7735 ;;  counter         1    7[COMRAM] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      unsigned char 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1
  7745 ;;      Params:         1       0       0
  7746 ;;      Locals:         3       0       0
  7747 ;;      Temps:          0       0       0
  7748 ;;      Totals:         4       0       0
  7749 ;;Total ram usage:        4 bytes
  7750 ;; Hardware stack levels used: 1
  7751 ;; Hardware stack levels required when called: 2
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_Uinit
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text61
  7760  0000'                    __ptext61:
  7761                           	callstack 0
  7762  0000'                    ___lbdiv:
  7763                           	callstack 27
  7764                           
  7765                           ;incstack = 0
  7766                           ;___lbdiv@dividend stored from wreg
  7767  0000' 6E00'              	movwf	___lbdiv@dividend^0,c
  7768  0002' 0E00               	movlw	0
  7769  0004' 6E00'              	movwf	___lbdiv@quotient^0,c
  7770  0006' 5000'              	movf	___lbdiv@divisor^0,w,c
  7771  0008' B4D8               	btfsc	status,2,c
  7772  000A' D015               	goto	l4706
  7773  000C' 0E01               	movlw	1
  7774  000E' 6E00'              	movwf	___lbdiv@counter^0,c
  7775  0010' D003               	goto	l4694
  7776  0012'                    l4690:
  7777  0012' 90D8               	bcf	status,0,c
  7778  0014' 3600'              	rlcf	___lbdiv@divisor^0,f,c
  7779  0016' 2A00'              	incf	___lbdiv@counter^0,f,c
  7780  0018'                    l4694:
  7781  0018' AE00'              	btfss	___lbdiv@divisor^0,7,c
  7782  001A' D7FB               	goto	l4690
  7783  001C'                    u4080:
  7784  001C' 90D8               	bcf	status,0,c
  7785  001E' 3600'              	rlcf	___lbdiv@quotient^0,f,c
  7786  0020' 5000'              	movf	___lbdiv@divisor^0,w,c
  7787  0022' 5C00'              	subwf	___lbdiv@dividend^0,w,c
  7788  0024' A0D8               	btfss	status,0,c
  7789  0026' D003               	goto	l4702
  7790  0028' 5000'              	movf	___lbdiv@divisor^0,w,c
  7791  002A' 5E00'              	subwf	___lbdiv@dividend^0,f,c
  7792  002C' 8000'              	bsf	___lbdiv@quotient^0,0,c
  7793  002E'                    l4702:
  7794  002E' 90D8               	bcf	status,0,c
  7795  0030' 3200'              	rrcf	___lbdiv@divisor^0,f,c
  7796  0032' 2E00'              	decfsz	___lbdiv@counter^0,f,c
  7797  0034' D7F3               	goto	u4080
  7798  0036'                    l4706:
  7799  0036' 5000'              	movf	___lbdiv@quotient^0,w,c
  7800  0038' 0012               	return		;funcret
  7801  003A'                    __end_of___lbdiv:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _TiInitTimer *****************
  7805 ;; Defined at:
  7806 ;;		line 18 in file "TiTTimer.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1
  7820 ;;      Params:         0       0       0
  7821 ;;      Locals:         0       0       0
  7822 ;;      Temps:          0       0       0
  7823 ;;      Totals:         0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 2
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_main
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text62
  7835  0000'                    __ptext62:
  7836                           	callstack 0
  7837  0000'                    _TiInitTimer:
  7838                           	callstack 28
  7839                           
  7840                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7841                           
  7842                           ;incstack = 0
  7843  0000' 9ED0               	bcf	208,7,c	;volatile
  7844                           
  7845                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7846  0002' 8EF2               	bsf	242,7,c	;volatile
  7847                           
  7848                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7849  0004' 8CF2               	bsf	242,6,c	;volatile
  7850                           
  7851                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7852  0006' 8AF2               	bsf	242,5,c	;volatile
  7853                           
  7854                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7855  0008' 94F2               	bcf	242,2,c	;volatile
  7856                           
  7857                           ;TiTTimer.c: 25:     T0CON = 136;
  7858  000A' 0E88               	movlw	136
  7859  000C' 6ED5               	movwf	213,c	;volatile
  7860                           
  7861                           ;TiTTimer.c: 27:     TMR0H = 223;
  7862  000E' 0EDF               	movlw	223
  7863  0010' 6ED7               	movwf	215,c	;volatile
  7864                           
  7865                           ;TiTTimer.c: 28:     TMR0L = 148;
  7866  0012' 0E94               	movlw	148
  7867  0014' 6ED6               	movwf	214,c	;volatile
  7868                           
  7869                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7870  0016' 8ED5               	bsf	213,7,c	;volatile
  7871                           
  7872                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7873  0018' 0E00               	movlw	0
  7874  001A' 6E00'              	movwf	_counter^0,c
  7875  001C'                    l4802:
  7876  001C' 0E07               	movlw	7
  7877  001E' 6400'              	cpfsgt	_counter^0,c
  7878  0020' D001               	goto	l4806
  7879  0022' 0012               	return	
  7880  0024'                    l4806:
  7881                           
  7882                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7883  0024' 5000'              	movf	_counter^0,w,c
  7884  0026' 0D03               	mullw	3
  7885  0028' 50F3               	movf	243,w,c
  7886  002A' 0F00'              	addlw	low (_s_Timers+2)
  7887  002C' 6ED9               	movwf	fsr2l,c
  7888  002E' 6ADA               	clrf	fsr2h,c
  7889  0030' 0E00               	movlw	0
  7890  0032' 6EDF               	movwf	indf2,c
  7891                           
  7892                           ;TiTTimer.c: 33:     }
  7893  0034' 2A00'              	incf	_counter^0,f,c
  7894  0036' D7F2               	goto	l4802
  7895  0038'                    __end_of_TiInitTimer:
  7896                           	callstack 0
  7897                           
  7898 ;; *************** function _TeTeclat *****************
  7899 ;; Defined at:
  7900 ;;		line 21 in file "TeTeclat.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;		None
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1
  7914 ;;      Params:         0       0       0
  7915 ;;      Locals:         0       0       0
  7916 ;;      Temps:          3       0       0
  7917 ;;      Totals:         3       0       0
  7918 ;;Total ram usage:        3 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 3
  7921 ;; This function calls:
  7922 ;;		_MsetNovaTecla
  7923 ;;		_SsetNovaTecla
  7924 ;;		_TiGetTics
  7925 ;;		_TiResetTics
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text63
  7932  0000'                    __ptext63:
  7933                           	callstack 0
  7934  0000'                    _TeTeclat:
  7935                           	callstack 27
  7936                           
  7937                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7938                           
  7939                           ;incstack = 0
  7940  0000' A083               	btfss	131,0,c	;volatile
  7941  0002' D003               	goto	u6550
  7942  0004' 6A00'              	clrf	??_TeTeclat^0,c
  7943  0006' 2A00'              	incf	??_TeTeclat^0,f,c
  7944  0008' D001               	goto	u6558
  7945  000A'                    u6550:
  7946  000A' 6A00'              	clrf	??_TeTeclat^0,c
  7947  000C'                    u6558:
  7948  000C' A283               	btfss	131,1,c	;volatile
  7949  000E' D002               	goto	u6560
  7950  0010' 0E01               	movlw	1
  7951  0012' D001               	goto	u6566
  7952  0014'                    u6560:
  7953  0014' 0E00               	movlw	0
  7954  0016'                    u6566:
  7955  0016' 0D02               	mullw	2
  7956  0018' CFF3 F00D'         	movff	prodl,??_TeTeclat+1
  7957  001C' A483               	btfss	131,2,c	;volatile
  7958  001E' D002               	goto	u6570
  7959  0020' 0E01               	movlw	1
  7960  0022' D001               	goto	u6576
  7961  0024'                    u6570:
  7962  0024' 0E00               	movlw	0
  7963  0026'                    u6576:
  7964  0026' 0D03               	mullw	3
  7965  0028' CFF3 F00E'         	movff	prodl,??_TeTeclat+2
  7966  002C' A683               	btfss	131,3,c	;volatile
  7967  002E' D002               	goto	u6580
  7968  0030' 0E01               	movlw	1
  7969  0032' D001               	goto	u6586
  7970  0034'                    u6580:
  7971  0034' 0E00               	movlw	0
  7972  0036'                    u6586:
  7973  0036' 0D04               	mullw	4
  7974  0038' 50F3               	movf	243,w,c
  7975  003A' 2400'              	addwf	(??_TeTeclat+2)^0,w,c
  7976  003C' 2400'              	addwf	(??_TeTeclat+1)^0,w,c
  7977  003E' 2400'              	addwf	??_TeTeclat^0,w,c
  7978  0040' 6E00'              	movwf	TeTeclat@files^0,c
  7979                           
  7980                           ;TeTeclat.c: 26:  switch(state) {
  7981  0042' D07B               	goto	l6244
  7982  0044'                    l6170:
  7983                           
  7984                           ;TeTeclat.c: 28:    if (files==0) {
  7985  0044' 5000'              	movf	TeTeclat@files^0,w,c
  7986  0046' A4D8               	btfss	status,2,c
  7987  0048' D007               	goto	l6178
  7988                           
  7989                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7990  004A' 888C               	bsf	140,4,c	;volatile
  7991                           
  7992                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7993  004C' 9A8C               	bcf	140,5,c	;volatile
  7994                           
  7995                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7996  004E' 9C8C               	bcf	140,6,c	;volatile
  7997                           
  7998                           ;TeTeclat.c: 32:     cols=0;
  7999  0050' 0E00               	movlw	0
  8000  0052' 6E00'              	movwf	TeTeclat@cols^0,c
  8001  0054'                    l6176:
  8002                           
  8003                           ;TeTeclat.c: 33:     state++;
  8004  0054' 2A00'              	incf	TeTeclat@state^0,f,c
  8005                           
  8006                           ;TeTeclat.c: 34:    }
  8007  0056' 0012               	return	
  8008  0058'                    l6178:
  8009  0058' 5000'              	movf	TeTeclat@files^0,w,c
  8010  005A' B4D8               	btfsc	status,2,c
  8011  005C' 0012               	return	
  8012                           
  8013                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  8014  005E' 5000'              	movf	_tiTeclat^0,w,c
  8015  0060' EC00' F000'        	call	_TiResetTics
  8016  0064'                    l6182:
  8017                           
  8018                           ;TeTeclat.c: 37:     state = 3;
  8019  0064' 0E03               	movlw	3
  8020  0066' 6E00'              	movwf	TeTeclat@state^0,c
  8021  0068' 0012               	return	
  8022  006A'                    l6184:
  8023                           
  8024                           ;TeTeclat.c: 41:    if (files==0) {
  8025  006A' 5000'              	movf	TeTeclat@files^0,w,c
  8026  006C' A4D8               	btfss	status,2,c
  8027  006E' D005               	goto	l6192
  8028                           
  8029                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  8030  0070' 988C               	bcf	140,4,c	;volatile
  8031                           
  8032                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  8033  0072' 8A8C               	bsf	140,5,c	;volatile
  8034                           
  8035                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  8036  0074' 9C8C               	bcf	140,6,c	;volatile
  8037                           
  8038                           ;TeTeclat.c: 45:     cols=1;
  8039  0076' 0E01               	movlw	1
  8040  0078' D7EC               	goto	L6
  8041  007A'                    l6192:
  8042  007A' 5000'              	movf	TeTeclat@files^0,w,c
  8043  007C' B4D8               	btfsc	status,2,c
  8044  007E' 0012               	return	
  8045                           
  8046                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  8047  0080' 5000'              	movf	_tiTeclat^0,w,c
  8048  0082' EC00' F000'        	call	_TiResetTics
  8049  0086' D7EE               	goto	l6182
  8050  0088'                    l6198:
  8051                           
  8052                           ;TeTeclat.c: 54:    if (files==0) {
  8053  0088' 5000'              	movf	TeTeclat@files^0,w,c
  8054  008A' A4D8               	btfss	status,2,c
  8055  008C' D008               	goto	l6204
  8056                           
  8057                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  8058  008E' 988C               	bcf	140,4,c	;volatile
  8059                           
  8060                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  8061  0090' 9A8C               	bcf	140,5,c	;volatile
  8062                           
  8063                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  8064  0092' 8C8C               	bsf	140,6,c	;volatile
  8065                           
  8066                           ;TeTeclat.c: 58:     cols=2;
  8067  0094' 0E02               	movlw	2
  8068  0096' 6E00'              	movwf	TeTeclat@cols^0,c
  8069                           
  8070                           ;TeTeclat.c: 59:     state = 0;
  8071  0098' 0E00               	movlw	0
  8072  009A' 6E00'              	movwf	TeTeclat@state^0,c
  8073                           
  8074                           ;TeTeclat.c: 60:    }
  8075  009C' 0012               	return	
  8076  009E'                    l6204:
  8077  009E' 5000'              	movf	TeTeclat@files^0,w,c
  8078  00A0' B4D8               	btfsc	status,2,c
  8079  00A2' 0012               	return	
  8080                           
  8081                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  8082  00A4' 5000'              	movf	_tiTeclat^0,w,c
  8083  00A6' EC00' F000'        	call	_TiResetTics
  8084  00AA' D7D4               	goto	l6176
  8085  00AC'                    l6210:
  8086                           
  8087                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  8088  00AC' 5000'              	movf	_tiTeclat^0,w,c
  8089  00AE' EC00' F000'        	call	_TiGetTics
  8090  00B2' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  8091  00B4' 0012               	return	
  8092  00B6' D7CE               	goto	l6176
  8093  00B8'                    l6214:
  8094                           
  8095                           ;TeTeclat.c: 72:    if (files==0) {
  8096  00B8' 5000'              	movf	TeTeclat@files^0,w,c
  8097  00BA' A4D8               	btfss	status,2,c
  8098  00BC' D003               	goto	l6218
  8099                           
  8100                           ;TeTeclat.c: 73:     state = 1;
  8101  00BE' 0E01               	movlw	1
  8102  00C0' 6E00'              	movwf	TeTeclat@state^0,c
  8103                           
  8104                           ;TeTeclat.c: 74:    }
  8105  00C2' 0012               	return	
  8106  00C4'                    l6218:
  8107  00C4' 5000'              	movf	TeTeclat@files^0,w,c
  8108  00C6' B4D8               	btfsc	status,2,c
  8109  00C8' 0012               	return	
  8110                           
  8111                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  8112  00CA' 5000'              	movf	TeTeclat@files^0,w,c
  8113  00CC' 0D03               	mullw	3
  8114  00CE' 50F3               	movf	243,w,c
  8115  00D0' 0F00'              	addlw	low _teclaPremuda
  8116  00D2' 2400'              	addwf	TeTeclat@cols^0,w,c
  8117  00D4' 6E00'              	movwf	??_TeTeclat^0,c
  8118  00D6' 0EFD               	movlw	253
  8119  00D8' 2600'              	addwf	??_TeTeclat^0,f,c
  8120  00DA' C00C' FFF6         	movff	??_TeTeclat,tblptrl
  8121  00DE'                    	if	1	;There is more than 1 active tblptr byte
  8122  00DE' 0E00'              	movlw	high __smallconst
  8123  00E0' 6EF7               	movwf	tblptrh,c
  8124  00E2'                    	endif
  8125  00E2'                    	if	0	;tblptru may be non-zero
  8126  00E2'                    	endif
  8127  00E2'                    	if	0	;tblptru may be non-zero
  8128  00E2'                    	endif
  8129  00E2' 0008               	tblrd		*
  8130  00E4' 50F5               	movf	tablat,w,c
  8131  00E6' EC00' F000'        	call	_MsetNovaTecla
  8132                           
  8133                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  8134  00EA' 5000'              	movf	TeTeclat@files^0,w,c
  8135  00EC' 0D03               	mullw	3
  8136  00EE' 50F3               	movf	243,w,c
  8137  00F0' 0F00'              	addlw	low _teclaPremuda
  8138  00F2' 2400'              	addwf	TeTeclat@cols^0,w,c
  8139  00F4' 6E00'              	movwf	??_TeTeclat^0,c
  8140  00F6' 0EFD               	movlw	253
  8141  00F8' 2600'              	addwf	??_TeTeclat^0,f,c
  8142  00FA' C00C' FFF6         	movff	??_TeTeclat,tblptrl
  8143  00FE'                    	if	1	;There is more than 1 active tblptr byte
  8144  00FE' 0E00'              	movlw	high __smallconst
  8145  0100' 6EF7               	movwf	tblptrh,c
  8146  0102'                    	endif
  8147  0102'                    	if	0	;tblptru may be non-zero
  8148  0102'                    	endif
  8149  0102'                    	if	0	;tblptru may be non-zero
  8150  0102'                    	endif
  8151  0102' 0008               	tblrd		*
  8152  0104' 50F5               	movf	tablat,w,c
  8153  0106' EC00' F000'        	call	_SsetNovaTecla
  8154  010A' D7A4               	goto	l6176
  8155  010C'                    l6224:
  8156                           
  8157                           ;TeTeclat.c: 82:    if (files==0) {
  8158  010C' 5000'              	movf	TeTeclat@files^0,w,c
  8159  010E' A4D8               	btfss	status,2,c
  8160  0110' 0012               	return	
  8161                           
  8162                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  8163  0112' 5000'              	movf	_tiTeclat^0,w,c
  8164  0114' EC00' F000'        	call	_TiResetTics
  8165  0118' D79D               	goto	l6176
  8166  011A'                    l6230:
  8167                           
  8168                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  8169  011A' 5000'              	movf	_tiTeclat^0,w,c
  8170  011C' EC00' F000'        	call	_TiGetTics
  8171  0120' D7C8               	goto	L7
  8172  0122'                    l6234:
  8173                           
  8174                           ;TeTeclat.c: 93:    if (files!=0) {
  8175  0122' 5000'              	movf	TeTeclat@files^0,w,c
  8176  0124' B4D8               	btfsc	status,2,c
  8177  0126' D003               	goto	l6238
  8178                           
  8179                           ;TeTeclat.c: 94:     state = 5;
  8180  0128' 0E05               	movlw	5
  8181  012A' 6E00'              	movwf	TeTeclat@state^0,c
  8182                           
  8183                           ;TeTeclat.c: 95:    }
  8184  012C' 0012               	return	
  8185  012E'                    l6238:
  8186  012E' 5000'              	movf	TeTeclat@files^0,w,c
  8187  0130' A4D8               	btfss	status,2,c
  8188  0132' 0012               	return	
  8189                           
  8190                           ;TeTeclat.c: 97:     state = 0;
  8191  0134' 0E00               	movlw	0
  8192  0136' 6E00'              	movwf	TeTeclat@state^0,c
  8193  0138' 0012               	return	
  8194  013A'                    l6244:
  8195  013A' 5000'              	movf	TeTeclat@state^0,w,c
  8196  013C' 6E00'              	movwf	??_TeTeclat^0,c
  8197  013E' 6A00'              	clrf	(??_TeTeclat+1)^0,c
  8198                           
  8199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8200                           ; Switch size 1, requested type "simple"
  8201                           ; Number of cases is 1, Range of values is 0 to 0
  8202                           ; switch strategies available:
  8203                           ; Name         Instructions Cycles
  8204                           ; simple_byte            4     3 (average)
  8205                           ;	Chosen strategy is simple_byte
  8206  0140' 5000'              	movf	(??_TeTeclat+1)^0,w,c
  8207  0142' 0A00               	xorlw	0	; case 0
  8208  0144' A4D8               	btfss	status,2,c
  8209  0146' 0012               	return	
  8210                           
  8211                           ; Switch size 1, requested type "simple"
  8212                           ; Number of cases is 8, Range of values is 0 to 7
  8213                           ; switch strategies available:
  8214                           ; Name         Instructions Cycles
  8215                           ; simple_byte           25    13 (average)
  8216                           ;	Chosen strategy is simple_byte
  8217  0148' 5000'              	movf	??_TeTeclat^0,w,c
  8218  014A' 0A00               	xorlw	0	; case 0
  8219  014C' B4D8               	btfsc	status,2,c
  8220  014E' D77A               	goto	l6170
  8221  0150' 0A01               	xorlw	1	; case 1
  8222  0152' B4D8               	btfsc	status,2,c
  8223  0154' D78A               	goto	l6184
  8224  0156' 0A03               	xorlw	3	; case 2
  8225  0158' B4D8               	btfsc	status,2,c
  8226  015A' D796               	goto	l6198
  8227  015C' 0A01               	xorlw	1	; case 3
  8228  015E' B4D8               	btfsc	status,2,c
  8229  0160' D7A5               	goto	l6210
  8230  0162' 0A07               	xorlw	7	; case 4
  8231  0164' B4D8               	btfsc	status,2,c
  8232  0166' D7A8               	goto	l6214
  8233  0168' 0A01               	xorlw	1	; case 5
  8234  016A' B4D8               	btfsc	status,2,c
  8235  016C' D7CF               	goto	l6224
  8236  016E' 0A03               	xorlw	3	; case 6
  8237  0170' B4D8               	btfsc	status,2,c
  8238  0172' D7D3               	goto	l6230
  8239  0174' 0A01               	xorlw	1	; case 7
  8240  0176' A4D8               	btfss	status,2,c
  8241  0178' 0012               	return	
  8242  017A' D7D3               	goto	l6234
  8243  017C'                    __end_of_TeTeclat:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _SsetNovaTecla *****************
  8247 ;; Defined at:
  8248 ;;		line 124 in file "Ssms.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  tecla           1    wreg     unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  tecla           1    5[COMRAM] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1
  8262 ;;      Params:         0       0       0
  8263 ;;      Locals:         1       0       0
  8264 ;;      Temps:          0       0       0
  8265 ;;      Totals:         1       0       0
  8266 ;;Total ram usage:        1 bytes
  8267 ;; Hardware stack levels used: 1
  8268 ;; Hardware stack levels required when called: 2
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_TeTeclat
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text64
  8277  0000'                    __ptext64:
  8278                           	callstack 0
  8279  0000'                    _SsetNovaTecla:
  8280                           	callstack 27
  8281                           
  8282                           ;incstack = 0
  8283                           ;SsetNovaTecla@tecla stored from wreg
  8284  0000' 6E00'              	movwf	SsetNovaTecla@tecla^0,c
  8285                           
  8286                           ;Ssms.c: 125:     novaTecla = tecla;
  8287  0002' C005' F010'        	movff	SsetNovaTecla@tecla,_novaTecla
  8288  0006' 0012               	return		;funcret
  8289  0008'                    __end_of_SsetNovaTecla:
  8290                           	callstack 0
  8291                           
  8292 ;; *************** function _MsetNovaTecla *****************
  8293 ;; Defined at:
  8294 ;;		line 31 in file "Menu.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  tecla           1    wreg     unsigned char 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;  tecla           1    5[COMRAM] unsigned char 
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1
  8308 ;;      Params:         0       0       0
  8309 ;;      Locals:         1       0       0
  8310 ;;      Temps:          0       0       0
  8311 ;;      Totals:         1       0       0
  8312 ;;Total ram usage:        1 bytes
  8313 ;; Hardware stack levels used: 1
  8314 ;; Hardware stack levels required when called: 2
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_TeTeclat
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text65
  8323  0000'                    __ptext65:
  8324                           	callstack 0
  8325  0000'                    _MsetNovaTecla:
  8326                           	callstack 27
  8327                           
  8328                           ;incstack = 0
  8329                           ;MsetNovaTecla@tecla stored from wreg
  8330  0000' 6E00'              	movwf	MsetNovaTecla@tecla^0,c
  8331                           
  8332                           ;Menu.c: 32:     NovaTecla = tecla;
  8333  0002' C005' F00E'        	movff	MsetNovaTecla@tecla,_NovaTecla
  8334  0006' 0012               	return		;funcret
  8335  0008'                    __end_of_MsetNovaTecla:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _TeInit *****************
  8339 ;; Defined at:
  8340 ;;		line 17 in file "TeTeclat.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1
  8354 ;;      Params:         0       0       0
  8355 ;;      Locals:         0       0       0
  8356 ;;      Temps:          0       0       0
  8357 ;;      Totals:         0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 3
  8361 ;; This function calls:
  8362 ;;		_TiGetTimer
  8363 ;; This function is called by:
  8364 ;;		_main
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text66
  8369  0000'                    __ptext66:
  8370                           	callstack 0
  8371  0000'                    _TeInit:
  8372                           	callstack 27
  8373                           
  8374                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  8375                           
  8376                           ;incstack = 0
  8377  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8378  0004' 6E00'              	movwf	_tiTeclat^0,c
  8379  0006' 0012               	return		;funcret
  8380  0008'                    __end_of_TeInit:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _Sinit *****************
  8384 ;; Defined at:
  8385 ;;		line 18 in file "Ssms.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1
  8399 ;;      Params:         0       0       0
  8400 ;;      Locals:         0       0       0
  8401 ;;      Temps:          0       0       0
  8402 ;;      Totals:         0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; Hardware stack levels required when called: 3
  8406 ;; This function calls:
  8407 ;;		_TiGetTimer
  8408 ;; This function is called by:
  8409 ;;		_main
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text67
  8414  0000'                    __ptext67:
  8415                           	callstack 0
  8416  0000'                    _Sinit:
  8417                           	callstack 27
  8418                           
  8419                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  8420                           
  8421                           ;incstack = 0
  8422  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8423  0004' 6E00'              	movwf	_timerSMS^0,c
  8424  0006' 0012               	return		;funcret
  8425  0008'                    __end_of_Sinit:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function _SMotor *****************
  8429 ;; Defined at:
  8430 ;;		line 22 in file "Ssms.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1
  8444 ;;      Params:         0       0       0
  8445 ;;      Locals:         0       0       0
  8446 ;;      Temps:          2       0       0
  8447 ;;      Totals:         2       0       0
  8448 ;;Total ram usage:        2 bytes
  8449 ;; Hardware stack levels used: 1
  8450 ;; Hardware stack levels required when called: 3
  8451 ;; This function calls:
  8452 ;;		_MNovaLletra
  8453 ;;		_TiGetTics
  8454 ;;		_TiResetTics
  8455 ;; This function is called by:
  8456 ;;		_main
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text68
  8461  0000'                    __ptext68:
  8462                           	callstack 0
  8463  0000'                    _SMotor:
  8464                           	callstack 27
  8465                           
  8466                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8467                           
  8468                           ;incstack = 0
  8469  0000' D0DC               	goto	l6404
  8470  0002'                    l6252:
  8471                           
  8472                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8473  0002' 2800'              	incf	_novaTecla^0,w,c
  8474  0004' A4D8               	btfss	status,2,c
  8475  0006' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8476  0008' D006               	goto	l6260
  8477                           
  8478                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8479  000A' 5000'              	movf	_timerSMS^0,w,c
  8480  000C' EC00' F000'        	call	_TiResetTics
  8481                           
  8482                           ;Ssms.c: 29:     state = 3;
  8483  0010' 0E03               	movlw	3
  8484  0012' 6E00'              	movwf	SMotor@state^0,c
  8485                           
  8486                           ;Ssms.c: 30:    }
  8487  0014' 0012               	return	
  8488  0016'                    l6260:
  8489  0016' 2800'              	incf	_novaTecla^0,w,c
  8490  0018' A4D8               	btfss	status,2,c
  8491  001A' 0012               	return	
  8492  001C' 5000'              	movf	_timerSMS^0,w,c
  8493  001E' EC00' F000'        	call	_TiGetTics
  8494  0022' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  8495  0024' 0012               	return	
  8496  0026' 0E5A               	movlw	90
  8497  0028' 5C00'              	subwf	?_TiGetTics^0,w,c
  8498  002A' 0E02               	movlw	2
  8499  002C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  8500  002E' A0D8               	btfss	status,0,c
  8501  0030' 0012               	return	
  8502  0032' 2800'              	incf	_lletraASCII^0,w,c
  8503  0034' B4D8               	btfsc	status,2,c
  8504  0036' 0012               	return	
  8505  0038' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8506  003A' 0012               	return	
  8507                           
  8508                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8509  003C' 5000'              	movf	_lletraASCII^0,w,c
  8510  003E' EC00' F000'        	call	_MNovaLletra
  8511                           
  8512                           ;Ssms.c: 33:     lletraASCII = -1;
  8513  0042' 6800'              	setf	_lletraASCII^0,c
  8514                           
  8515                           ;Ssms.c: 34:     ultimaTecla = -1;
  8516  0044' 6800'              	setf	_ultimaTecla^0,c
  8517                           
  8518                           ;Ssms.c: 35:     zeroTecla = 0;
  8519  0046' 0E00               	movlw	0
  8520  0048' 6E00'              	movwf	_zeroTecla^0,c
  8521  004A' 0012               	return	
  8522  004C'                    l6276:
  8523                           
  8524                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8525  004C' 5000'              	movf	_ultimaTecla^0,w,c
  8526  004E' 1800'              	xorwf	_novaTecla^0,w,c
  8527  0050' A4D8               	btfss	status,2,c
  8528  0052' D010               	goto	l6284
  8529  0054' 5000'              	movf	_timerSMS^0,w,c
  8530  0056' EC00' F000'        	call	_TiGetTics
  8531  005A' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  8532  005C' D006               	goto	u6790
  8533  005E' 0E5A               	movlw	90
  8534  0060' 5C00'              	subwf	?_TiGetTics^0,w,c
  8535  0062' 0E02               	movlw	2
  8536  0064' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  8537  0066' B0D8               	btfsc	status,0,c
  8538  0068' D005               	goto	l6284
  8539  006A'                    u6790:
  8540                           
  8541                           ;Ssms.c: 40:     novaTecla = -1;
  8542  006A' 6800'              	setf	_novaTecla^0,c
  8543                           
  8544                           ;Ssms.c: 41:     sumaPulsacions++;
  8545  006C' 2A00'              	incf	_sumaPulsacions^0,f,c
  8546                           
  8547                           ;Ssms.c: 42:     lletraASCII++;
  8548  006E' 2A00'              	incf	_lletraASCII^0,f,c
  8549                           
  8550                           ;Ssms.c: 43:     state++;
  8551  0070' 2A00'              	incf	SMotor@state^0,f,c
  8552                           
  8553                           ;Ssms.c: 44:    }
  8554  0072' 0012               	return	
  8555  0074'                    l6284:
  8556  0074' 2800'              	incf	_novaTecla^0,w,c
  8557  0076' B4D8               	btfsc	status,2,c
  8558  0078' 0012               	return	
  8559  007A' 5000'              	movf	_ultimaTecla^0,w,c
  8560  007C' 1800'              	xorwf	_novaTecla^0,w,c
  8561  007E' B4D8               	btfsc	status,2,c
  8562  0080' 0012               	return	
  8563                           
  8564                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8565  0082' 5000'              	movf	_lletraASCII^0,w,c
  8566  0084' EC00' F000'        	call	_MNovaLletra
  8567                           
  8568                           ;Ssms.c: 47:     if(novaTecla != 0){
  8569  0088' 5000'              	movf	_novaTecla^0,w,c
  8570  008A' B4D8               	btfsc	status,2,c
  8571  008C' D006               	goto	l6294
  8572                           
  8573                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8574  008E' 5000'              	movf	_novaTecla^0,w,c
  8575  0090' 0F00'              	addlw	low (_lletraInici+254)
  8576  0092' 6ED9               	movwf	fsr2l,c
  8577  0094' 6ADA               	clrf	fsr2h,c
  8578  0096' 50DF               	movf	indf2,w,c
  8579  0098' D001               	goto	L8
  8580  009A'                    l6294:
  8581                           
  8582                           ;Ssms.c: 50:       lletraASCII = '0';
  8583  009A' 0E30               	movlw	48
  8584  009C'                    L8:
  8585  009C' 6E00'              	movwf	_lletraASCII^0,c
  8586                           
  8587                           ;Ssms.c: 52:     zeroTecla=0;
  8588                           
  8589                           ;Ssms.c: 51:     }
  8590  009E' 0E00               	movlw	0
  8591  00A0' 6E00'              	movwf	_zeroTecla^0,c
  8592                           
  8593                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8594  00A2' C010' F00F'        	movff	_novaTecla,_ultimaTecla
  8595                           
  8596                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8597  00A6' 0E00               	movlw	0
  8598  00A8' 6E00'              	movwf	_sumaPulsacions^0,c
  8599                           
  8600                           ;Ssms.c: 55:     novaTecla = -1;
  8601  00AA' 6800'              	setf	_novaTecla^0,c
  8602                           
  8603                           ;Ssms.c: 56:     state--;
  8604  00AC' 0600'              	decf	SMotor@state^0,f,c
  8605  00AE' 0012               	return	
  8606  00B0'                    l6302:
  8607                           
  8608                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8609  00B0' 0E07               	movlw	7
  8610  00B2' 1800'              	xorwf	_ultimaTecla^0,w,c
  8611  00B4' B4D8               	btfsc	status,2,c
  8612  00B6' D00A               	goto	l6310
  8613  00B8' 0E09               	movlw	9
  8614  00BA' 1800'              	xorwf	_ultimaTecla^0,w,c
  8615  00BC' B4D8               	btfsc	status,2,c
  8616  00BE' D006               	goto	l6310
  8617  00C0' 5000'              	movf	_ultimaTecla^0,w,c
  8618  00C2' B4D8               	btfsc	status,2,c
  8619  00C4' D003               	goto	l6310
  8620                           
  8621                           ;Ssms.c: 61:     state = 5;
  8622  00C6' 0E05               	movlw	5
  8623  00C8' 6E00'              	movwf	SMotor@state^0,c
  8624                           
  8625                           ;Ssms.c: 62:    }
  8626  00CA' 0012               	return	
  8627  00CC'                    l6310:
  8628  00CC' 0E07               	movlw	7
  8629  00CE' 1800'              	xorwf	_ultimaTecla^0,w,c
  8630  00D0' B4D8               	btfsc	status,2,c
  8631  00D2' D004               	goto	u6870
  8632  00D4' 0E09               	movlw	9
  8633  00D6' 1800'              	xorwf	_ultimaTecla^0,w,c
  8634  00D8' A4D8               	btfss	status,2,c
  8635  00DA' D003               	goto	l6316
  8636  00DC'                    u6870:
  8637                           
  8638                           ;Ssms.c: 64:     state = 6;
  8639  00DC' 0E06               	movlw	6
  8640  00DE' 6E00'              	movwf	SMotor@state^0,c
  8641                           
  8642                           ;Ssms.c: 65:    }
  8643  00E0' 0012               	return	
  8644  00E2'                    l6316:
  8645  00E2' 5000'              	movf	_ultimaTecla^0,w,c
  8646  00E4' A4D8               	btfss	status,2,c
  8647  00E6' 0012               	return	
  8648                           
  8649                           ;Ssms.c: 67:     zeroTecla++;
  8650  00E8' 2A00'              	incf	_zeroTecla^0,f,c
  8651                           
  8652                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8653  00EA' 0E02               	movlw	2
  8654  00EC' 1800'              	xorwf	_zeroTecla^0,w,c
  8655  00EE' A4D8               	btfss	status,2,c
  8656  00F0' D002               	goto	l6324
  8657  00F2' 0E00               	movlw	0
  8658  00F4' 6E00'              	movwf	_zeroTecla^0,c
  8659  00F6'                    l6324:
  8660                           
  8661                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8662  00F6' 5000'              	movf	_zeroTecla^0,w,c
  8663  00F8' 0F00'              	addlw	low _arrayZero
  8664  00FA' 6ED9               	movwf	fsr2l,c
  8665  00FC' 6ADA               	clrf	fsr2h,c
  8666  00FE' 50DF               	movf	indf2,w,c
  8667  0100' 6E00'              	movwf	_lletraASCII^0,c
  8668  0102'                    l6326:
  8669                           
  8670                           ;Ssms.c: 70:     state = 0;
  8671  0102' 0E00               	movlw	0
  8672  0104' 6E00'              	movwf	SMotor@state^0,c
  8673  0106' 0012               	return	
  8674  0108'                    l6328:
  8675                           
  8676                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8677  0108' 5000'              	movf	_novaTecla^0,w,c
  8678  010A' 0A80               	xorlw	128
  8679  010C' 0F7E               	addlw	-130
  8680  010E' B0D8               	btfsc	status,0,c
  8681  0110' D003               	goto	u6910
  8682  0112' 5000'              	movf	_novaTecla^0,w,c
  8683  0114' A4D8               	btfss	status,2,c
  8684  0116' D008               	goto	l6336
  8685  0118'                    u6910:
  8686  0118' 5000'              	movf	_novaTecla^0,w,c
  8687  011A' 0A80               	xorlw	128
  8688  011C' 0F76               	addlw	-138
  8689  011E' B0D8               	btfsc	status,0,c
  8690  0120' D003               	goto	l6336
  8691                           
  8692                           ;Ssms.c: 75:     state = 1;
  8693  0122' 0E01               	movlw	1
  8694  0124' 6E00'              	movwf	SMotor@state^0,c
  8695                           
  8696                           ;Ssms.c: 76:    }
  8697  0126' 0012               	return	
  8698  0128'                    l6336:
  8699  0128' 5000'              	movf	_novaTecla^0,w,c
  8700  012A' B4D8               	btfsc	status,2,c
  8701  012C' D00E               	goto	l6348
  8702  012E' 5000'              	movf	_novaTecla^0,w,c
  8703  0130' 0A80               	xorlw	128
  8704  0132' 0F7E               	addlw	-130
  8705  0134' B0D8               	btfsc	status,0,c
  8706  0136' D009               	goto	l6348
  8707  0138' 2800'              	incf	_lletraASCII^0,w,c
  8708  013A' A4D8               	btfss	status,2,c
  8709  013C' D006               	goto	l6348
  8710                           
  8711                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8712  013E' 5000'              	movf	_novaTecla^0,w,c
  8713  0140' 0F30               	addlw	48
  8714  0142' EC00' F000'        	call	_MNovaLletra
  8715  0146'                    l6344:
  8716                           
  8717                           ;Ssms.c: 79:     novaTecla = -1;
  8718  0146' 6800'              	setf	_novaTecla^0,c
  8719  0148' D7DC               	goto	l6326
  8720  014A'                    l6348:
  8721  014A' 5000'              	movf	_novaTecla^0,w,c
  8722  014C' B4D8               	btfsc	status,2,c
  8723  014E' 0012               	return	
  8724  0150' 5000'              	movf	_novaTecla^0,w,c
  8725  0152' 0A80               	xorlw	128
  8726  0154' 0F7E               	addlw	-130
  8727  0156' B0D8               	btfsc	status,0,c
  8728  0158' 0012               	return	
  8729  015A' 2800'              	incf	_lletraASCII^0,w,c
  8730  015C' B4D8               	btfsc	status,2,c
  8731  015E' 0012               	return	
  8732                           
  8733                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8734  0160' 5000'              	movf	_lletraASCII^0,w,c
  8735  0162' EC00' F000'        	call	_MNovaLletra
  8736                           
  8737                           ;Ssms.c: 84:     lletraASCII = -1;
  8738  0166' 6800'              	setf	_lletraASCII^0,c
  8739                           
  8740                           ;Ssms.c: 85:     state++;
  8741  0168' 2A00'              	incf	SMotor@state^0,f,c
  8742  016A' 0012               	return	
  8743  016C'                    l6360:
  8744                           
  8745                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8746  016C' 5000'              	movf	_novaTecla^0,w,c
  8747  016E' 0F30               	addlw	48
  8748  0170' EC00' F000'        	call	_MNovaLletra
  8749  0174' D7E8               	goto	l6344
  8750  0176'                    l6366:
  8751                           
  8752                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8753  0176' 0E04               	movlw	4
  8754  0178' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8755  017A' A4D8               	btfss	status,2,c
  8756  017C' D009               	goto	l6374
  8757  017E'                    u6990:
  8758                           
  8759                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8760  017E' 5000'              	movf	_ultimaTecla^0,w,c
  8761  0180' 0F00'              	addlw	low (_lletraInici+254)
  8762  0182' 6ED9               	movwf	fsr2l,c
  8763  0184' 6ADA               	clrf	fsr2h,c
  8764  0186' 50DF               	movf	indf2,w,c
  8765  0188' 6E00'              	movwf	_lletraASCII^0,c
  8766                           
  8767                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8768  018A' 0E00               	movlw	0
  8769  018C' 6E00'              	movwf	_sumaPulsacions^0,c
  8770  018E' D7B9               	goto	l6326
  8771  0190'                    l6374:
  8772  0190' 0E03               	movlw	3
  8773  0192' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8774  0194' A4D8               	btfss	status,2,c
  8775  0196' D003               	goto	l6380
  8776  0198'                    u7000:
  8777                           
  8778                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8779  0198' 5000'              	movf	_ultimaTecla^0,w,c
  8780  019A' 0F30               	addlw	48
  8781  019C' D7B1               	goto	L9
  8782  019E'                    l6380:
  8783  019E' 0E03               	movlw	3
  8784  01A0' 6000'              	cpfslt	_sumaPulsacions^0,c
  8785  01A2' 0012               	return	
  8786  01A4' D7AE               	goto	l6326
  8787  01A6'                    l6384:
  8788                           
  8789                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8790  01A6' 0E04               	movlw	4
  8791  01A8' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8792  01AA' B4D8               	btfsc	status,2,c
  8793  01AC' D7F5               	goto	u7000
  8794  01AE' 0E05               	movlw	5
  8795  01B0' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8796  01B2' B4D8               	btfsc	status,2,c
  8797  01B4' D7E4               	goto	u6990
  8798  01B6' 0E04               	movlw	4
  8799  01B8' D7F3               	goto	L10
  8800  01BA'                    l6404:
  8801  01BA' 5000'              	movf	SMotor@state^0,w,c
  8802  01BC' 6E00'              	movwf	??_SMotor^0,c
  8803  01BE' 6A00'              	clrf	(??_SMotor+1)^0,c
  8804                           
  8805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8806                           ; Switch size 1, requested type "simple"
  8807                           ; Number of cases is 1, Range of values is 0 to 0
  8808                           ; switch strategies available:
  8809                           ; Name         Instructions Cycles
  8810                           ; simple_byte            4     3 (average)
  8811                           ;	Chosen strategy is simple_byte
  8812  01C0' 5000'              	movf	(??_SMotor+1)^0,w,c
  8813  01C2' 0A00               	xorlw	0	; case 0
  8814  01C4' A4D8               	btfss	status,2,c
  8815  01C6' 0012               	return	
  8816                           
  8817                           ; Switch size 1, requested type "simple"
  8818                           ; Number of cases is 7, Range of values is 0 to 6
  8819                           ; switch strategies available:
  8820                           ; Name         Instructions Cycles
  8821                           ; simple_byte           22    12 (average)
  8822                           ;	Chosen strategy is simple_byte
  8823  01C8' 5000'              	movf	??_SMotor^0,w,c
  8824  01CA' 0A00               	xorlw	0	; case 0
  8825  01CC' B4D8               	btfsc	status,2,c
  8826  01CE' D719               	goto	l6252
  8827  01D0' 0A01               	xorlw	1	; case 1
  8828  01D2' B4D8               	btfsc	status,2,c
  8829  01D4' D73B               	goto	l6276
  8830  01D6' 0A03               	xorlw	3	; case 2
  8831  01D8' B4D8               	btfsc	status,2,c
  8832  01DA' D76A               	goto	l6302
  8833  01DC' 0A01               	xorlw	1	; case 3
  8834  01DE' B4D8               	btfsc	status,2,c
  8835  01E0' D793               	goto	l6328
  8836  01E2' 0A07               	xorlw	7	; case 4
  8837  01E4' B4D8               	btfsc	status,2,c
  8838  01E6' D7C2               	goto	l6360
  8839  01E8' 0A01               	xorlw	1	; case 5
  8840  01EA' B4D8               	btfsc	status,2,c
  8841  01EC' D7C4               	goto	l6366
  8842  01EE' 0A03               	xorlw	3	; case 6
  8843  01F0' A4D8               	btfss	status,2,c
  8844  01F2' 0012               	return	
  8845  01F4' D7D8               	goto	l6384
  8846  01F6'                    __end_of_SMotor:
  8847                           	callstack 0
  8848                           
  8849 ;; *************** function _MNovaLletra *****************
  8850 ;; Defined at:
  8851 ;;		line 35 in file "Menu.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  lletra          1    wreg     unsigned char 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;  lletra          1    5[COMRAM] unsigned char 
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1
  8865 ;;      Params:         0       0       0
  8866 ;;      Locals:         1       0       0
  8867 ;;      Temps:          0       0       0
  8868 ;;      Totals:         1       0       0
  8869 ;;Total ram usage:        1 bytes
  8870 ;; Hardware stack levels used: 1
  8871 ;; Hardware stack levels required when called: 2
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_SMotor
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text69
  8880  0000'                    __ptext69:
  8881                           	callstack 0
  8882  0000'                    _MNovaLletra:
  8883                           	callstack 27
  8884                           
  8885                           ;incstack = 0
  8886                           ;MNovaLletra@lletra stored from wreg
  8887  0000' 6E00'              	movwf	MNovaLletra@lletra^0,c
  8888                           
  8889                           ;Menu.c: 36:     novaLletra = lletra;
  8890  0002' C005' F00D'        	movff	MNovaLletra@lletra,_novaLletra
  8891  0006' 0012               	return		;funcret
  8892  0008'                    __end_of_MNovaLletra:
  8893                           	callstack 0
  8894                           
  8895 ;; *************** function _Minit *****************
  8896 ;; Defined at:
  8897 ;;		line 28 in file "Menu.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;		None
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;		None
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1
  8911 ;;      Params:         0       0       0
  8912 ;;      Locals:         0       0       0
  8913 ;;      Temps:          0       0       0
  8914 ;;      Totals:         0       0       0
  8915 ;;Total ram usage:        0 bytes
  8916 ;; Hardware stack levels used: 1
  8917 ;; Hardware stack levels required when called: 3
  8918 ;; This function calls:
  8919 ;;		_TiGetTimer
  8920 ;; This function is called by:
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text70
  8926  0000'                    __ptext70:
  8927                           	callstack 0
  8928  0000'                    _Minit:
  8929                           	callstack 27
  8930                           
  8931                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8932                           
  8933                           ;incstack = 0
  8934  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8935  0004' 6E00'              	movwf	_timerMenu^0,c
  8936  0006' 0012               	return		;funcret
  8937  0008'                    __end_of_Minit:
  8938                           	callstack 0
  8939                           
  8940 ;; *************** function _LcLCD *****************
  8941 ;; Defined at:
  8942 ;;		line 232 in file "LcTLCD.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1
  8956 ;;      Params:         0       0       0
  8957 ;;      Locals:         0       0       0
  8958 ;;      Temps:          0       0       0
  8959 ;;      Totals:         0       0       0
  8960 ;;Total ram usage:        0 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; Hardware stack levels required when called: 6
  8963 ;; This function calls:
  8964 ;;		_LcPutChar
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text71
  8971  0000'                    __ptext71:
  8972                           	callstack 0
  8973  0000'                    _LcLCD:
  8974                           	callstack 24
  8975                           
  8976                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8977                           
  8978                           ;incstack = 0
  8979  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8980  0002' 0012               	return	
  8981                           
  8982                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8983  0004' C00A' FFF6         	movff	_s_ptr,tblptrl
  8984  0008' C00B' FFF7         	movff	_s_ptr+1,tblptrh
  8985  000C' 6AF8               	clrf	tblptru,c
  8986  000E' 0EFF'              	movlw	(high __ramtop+-1)
  8987  0010' 64F7               	cpfsgt	tblptrh,c
  8988  0012' D003               	bra	u4127
  8989  0014' 0008               	tblrd		*
  8990  0016' 50F5               	movf	tablat,w,c
  8991  0018' D005               	bra	u4120
  8992  001A'                    u4127:
  8993  001A' CFF6 FFE1          	movff	tblptrl,fsr1l
  8994  001E' CFF7 FFE2          	movff	tblptrh,fsr1h
  8995  0022' 50E7               	movf	indf1,w,c
  8996  0024'                    u4120:
  8997  0024' EC00' F000'        	call	_LcPutChar
  8998                           
  8999                           ;LcTLCD.c: 235:         s_ptr++;
  9000  0028' 4A00'              	infsnz	_s_ptr^0,f,c
  9001  002A' 2A00'              	incf	(_s_ptr+1)^0,f,c
  9002                           
  9003                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  9004  002C' C00A' FFF6         	movff	_s_ptr,tblptrl
  9005  0030' C00B' FFF7         	movff	_s_ptr+1,tblptrh
  9006  0034' 6AF8               	clrf	tblptru,c
  9007  0036' 0EFF'              	movlw	(high __ramtop+-1)
  9008  0038' 64F7               	cpfsgt	tblptrh,c
  9009  003A' D003               	bra	u4137
  9010  003C' 0008               	tblrd		*
  9011  003E' 50F5               	movf	tablat,w,c
  9012  0040' D005               	bra	u4130
  9013  0042'                    u4137:
  9014  0042' CFF6 FFE1          	movff	tblptrl,fsr1l
  9015  0046' CFF7 FFE2          	movff	tblptrh,fsr1h
  9016  004A' 50E7               	movf	indf1,w,c
  9017  004C'                    u4130:
  9018  004C' 0900               	iorlw	0
  9019  004E' A4D8               	btfss	status,2,c
  9020  0050' 0012               	return	
  9021                           
  9022                           ;LcTLCD.c: 237:             nou_s = 0;
  9023  0052' 9000'              	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9024                           
  9025                           ;LcTLCD.c: 238:             s_ptr=0;
  9026  0054' 0E00               	movlw	0
  9027  0056' 6E00'              	movwf	_s_ptr^0,c
  9028  0058' 0E00               	movlw	0
  9029  005A' 6E00'              	movwf	(_s_ptr+1)^0,c
  9030  005C' 0012               	return		;funcret
  9031  005E'                    __end_of_LcLCD:
  9032                           	callstack 0
  9033                           
  9034 ;; *************** function _LcInit *****************
  9035 ;; Defined at:
  9036 ;;		line 41 in file "LcTLCD.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  rows            1    wreg     unsigned char 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  rows            1   16[COMRAM] unsigned char 
  9041 ;;  i               2   17[COMRAM] int 
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      void 
  9044 ;; Registers used:
  9045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1
  9051 ;;      Params:         0       0       0
  9052 ;;      Locals:         3       0       0
  9053 ;;      Temps:          0       0       0
  9054 ;;      Totals:         3       0       0
  9055 ;;Total ram usage:        3 bytes
  9056 ;; Hardware stack levels used: 1
  9057 ;; Hardware stack levels required when called: 4
  9058 ;; This function calls:
  9059 ;;		_CantaIR
  9060 ;;		_EscriuPrimeraOrdre
  9061 ;;		_Espera
  9062 ;;		_TiGetTimer
  9063 ;;		_WaitForBusy
  9064 ;; This function is called by:
  9065 ;;		_main
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text72
  9070  0000'                    __ptext72:
  9071                           	callstack 0
  9072  0000'                    _LcInit:
  9073                           	callstack 26
  9074                           
  9075                           ;incstack = 0
  9076                           ;LcInit@rows stored from wreg
  9077  0000' 6E00'              	movwf	LcInit@rows^0,c
  9078                           
  9079                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  9080  0002' EC00' F000'        	call	_TiGetTimer	;wreg free
  9081  0006' 6E00'              	movwf	_Timer^0,c
  9082                           
  9083                           ;LcTLCD.c: 49:  Rows = rows;
  9084  0008' C010' F03F'        	movff	LcInit@rows,_Rows
  9085                           
  9086                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  9087  000C' 0E00               	movlw	0
  9088  000E' 6E00'              	movwf	_ColumnAct^0,c
  9089  0010' C03D' F03E'        	movff	_ColumnAct,_RowAct
  9090                           
  9091                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  9092  0014' 9894               	bcf	148,4,c	;volatile
  9093  0016' 9E95               	bcf	149,7,c	;volatile
  9094  0018' 9A94               	bcf	148,5,c	;volatile
  9095                           
  9096                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  9097  001A' 0E00               	movlw	0
  9098  001C' 6E00'              	movwf	(LcInit@i+1)^0,c
  9099  001E' 0E00               	movlw	0
  9100  0020' 6E00'              	movwf	LcInit@i^0,c
  9101  0022'                    l4724:
  9102                           
  9103                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  9104  0022' 0E00               	movlw	0
  9105  0024' 6E00'              	movwf	(Espera@ms+1)^0,c
  9106  0026' 0E64               	movlw	100
  9107  0028' 6E00'              	movwf	Espera@ms^0,c
  9108  002A' 5000'              	movf	_Timer^0,w,c
  9109  002C' EC00' F000'        	call	_Espera
  9110                           
  9111                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  9112  0030' 0E03               	movlw	3
  9113  0032' EC00' F000'        	call	_EscriuPrimeraOrdre
  9114                           
  9115                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  9116  0036' 0E00               	movlw	0
  9117  0038' 6E00'              	movwf	(Espera@ms+1)^0,c
  9118  003A' 0E05               	movlw	5
  9119  003C' 6E00'              	movwf	Espera@ms^0,c
  9120  003E' 5000'              	movf	_Timer^0,w,c
  9121  0040' EC00' F000'        	call	_Espera
  9122                           
  9123                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  9124  0044' 0E03               	movlw	3
  9125  0046' EC00' F000'        	call	_EscriuPrimeraOrdre
  9126                           
  9127                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  9128  004A' 0E00               	movlw	0
  9129  004C' 6E00'              	movwf	(Espera@ms+1)^0,c
  9130  004E' 0E01               	movlw	1
  9131  0050' 6E00'              	movwf	Espera@ms^0,c
  9132  0052' 5000'              	movf	_Timer^0,w,c
  9133  0054' EC00' F000'        	call	_Espera
  9134                           
  9135                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  9136  0058' 0E03               	movlw	3
  9137  005A' EC00' F000'        	call	_EscriuPrimeraOrdre
  9138                           
  9139                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  9140  005E' 0E00               	movlw	0
  9141  0060' 6E00'              	movwf	(Espera@ms+1)^0,c
  9142  0062' 0E01               	movlw	1
  9143  0064' 6E00'              	movwf	Espera@ms^0,c
  9144  0066' 5000'              	movf	_Timer^0,w,c
  9145  0068' EC00' F000'        	call	_Espera
  9146                           
  9147                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  9148  006C' 0E02               	movlw	2
  9149  006E' EC00' F000'        	call	_EscriuPrimeraOrdre
  9150                           
  9151                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  9152  0072' 0E00               	movlw	0
  9153  0074' 6E00'              	movwf	(Espera@ms+1)^0,c
  9154  0076' 0E04               	movlw	4
  9155  0078' 6E00'              	movwf	Espera@ms^0,c
  9156  007A' 5000'              	movf	_Timer^0,w,c
  9157  007C' EC00' F000'        	call	_Espera
  9158                           
  9159                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  9160  0080' 0E28               	movlw	40
  9161  0082' EC00' F000'        	call	_CantaIR
  9162                           
  9163                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  9164  0086' EC00' F000'        	call	_WaitForBusy	;wreg free
  9165  008A' 0E08               	movlw	8
  9166  008C' EC00' F000'        	call	_CantaIR
  9167                           
  9168                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  9169  0090' EC00' F000'        	call	_WaitForBusy	;wreg free
  9170  0094' 0E01               	movlw	1
  9171  0096' EC00' F000'        	call	_CantaIR
  9172                           
  9173                           ;LcTLCD.c: 71:   Espera(Timer,3);
  9174  009A' 0E00               	movlw	0
  9175  009C' 6E00'              	movwf	(Espera@ms+1)^0,c
  9176  009E' 0E03               	movlw	3
  9177  00A0' 6E00'              	movwf	Espera@ms^0,c
  9178  00A2' 5000'              	movf	_Timer^0,w,c
  9179  00A4' EC00' F000'        	call	_Espera
  9180                           
  9181                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  9182  00A8' EC00' F000'        	call	_WaitForBusy	;wreg free
  9183  00AC' 0E06               	movlw	6
  9184  00AE' EC00' F000'        	call	_CantaIR
  9185                           
  9186                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  9187  00B2' EC00' F000'        	call	_WaitForBusy	;wreg free
  9188  00B6' 0E0F               	movlw	15
  9189  00B8' EC00' F000'        	call	_CantaIR
  9190                           
  9191                           ;LcTLCD.c: 74:  }
  9192  00BC' 4A00'              	infsnz	LcInit@i^0,f,c
  9193  00BE' 2A00'              	incf	(LcInit@i+1)^0,f,c
  9194  00C0' BE00'              	btfsc	(LcInit@i+1)^0,7,c
  9195  00C2' D7AF               	goto	l4724
  9196  00C4' 5000'              	movf	(LcInit@i+1)^0,w,c
  9197  00C6' E104               	bnz	u4100
  9198  00C8' 0E02               	movlw	2
  9199  00CA' 5C00'              	subwf	LcInit@i^0,w,c
  9200  00CC' A0D8               	btfss	status,0,c
  9201  00CE' D7A9               	goto	l4724
  9202  00D0'                    u4100:
  9203                           
  9204                           ;LcTLCD.c: 80:     WaitForBusy();
  9205  00D0' EC00' F000'        	call	_WaitForBusy	;wreg free
  9206                           
  9207                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  9208  00D4' 0E0C               	movlw	12
  9209  00D6' EC00' F000'        	call	_CantaIR
  9210  00DA' 0012               	return		;funcret
  9211  00DC'                    __end_of_LcInit:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _EscriuPrimeraOrdre *****************
  9215 ;; Defined at:
  9216 ;;		line 216 in file "LcTLCD.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  ordre           1    wreg     unsigned char 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  ordre           1    6[COMRAM] unsigned char 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1
  9230 ;;      Params:         0       0       0
  9231 ;;      Locals:         1       0       0
  9232 ;;      Temps:          1       0       0
  9233 ;;      Totals:         2       0       0
  9234 ;;Total ram usage:        2 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 2
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_LcInit
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text73
  9245  0000'                    __ptext73:
  9246                           	callstack 0
  9247  0000'                    _EscriuPrimeraOrdre:
  9248                           	callstack 27
  9249                           
  9250                           ;incstack = 0
  9251                           ;EscriuPrimeraOrdre@ordre stored from wreg
  9252  0000' 6E00'              	movwf	EscriuPrimeraOrdre@ordre^0,c
  9253                           
  9254                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  9255  0002' 9694               	bcf	148,3,c	;volatile
  9256  0004' 9494               	bcf	148,2,c	;volatile
  9257  0006' 9294               	bcf	148,1,c	;volatile
  9258  0008' 9094               	bcf	148,0,c	;volatile
  9259  000A' 9A8B               	bcf	139,5,c	;volatile
  9260  000C' 9E8C               	bcf	140,7,c	;volatile
  9261                           
  9262                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  9263  000E' 888B               	bsf	139,4,c	;volatile
  9264  0010' 888B               	bsf	139,4,c	;volatile
  9265                           
  9266                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  9267  0012' A600'              	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  9268  0014' D003               	goto	u250
  9269  0016' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9270  0018' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  9271  001A' D001               	goto	u268
  9272  001C'                    u250:
  9273  001C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9274  001E'                    u268:
  9275  001E' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9276  0020' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9277  0022' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9278  0024' 508B               	movf	139,w,c	;volatile
  9279  0026' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9280  0028' 0BF7               	andlw	-9
  9281  002A' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9282  002C' 6E8B               	movwf	139,c	;volatile
  9283                           
  9284                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  9285  002E' A400'              	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  9286  0030' D003               	goto	u270
  9287  0032' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9288  0034' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  9289  0036' D001               	goto	u288
  9290  0038'                    u270:
  9291  0038' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9292  003A'                    u288:
  9293  003A' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9294  003C' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9295  003E' 508B               	movf	139,w,c	;volatile
  9296  0040' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9297  0042' 0BFB               	andlw	-5
  9298  0044' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9299  0046' 6E8B               	movwf	139,c	;volatile
  9300                           
  9301                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  9302  0048' A200'              	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  9303  004A' D003               	goto	u290
  9304  004C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9305  004E' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  9306  0050' D001               	goto	u308
  9307  0052'                    u290:
  9308  0052' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9309  0054'                    u308:
  9310  0054' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9311  0056' 508B               	movf	139,w,c	;volatile
  9312  0058' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9313  005A' 0BFD               	andlw	-3
  9314  005C' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9315  005E' 6E8B               	movwf	139,c	;volatile
  9316                           
  9317                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  9318  0060' A000'              	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  9319  0062' D003               	goto	u310
  9320  0064' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9321  0066' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  9322  0068' D001               	goto	u328
  9323  006A'                    u310:
  9324  006A' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  9325  006C'                    u328:
  9326  006C' 508B               	movf	139,w,c	;volatile
  9327  006E' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9328  0070' 0BFE               	andlw	-2
  9329  0072' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9330  0074' 6E8B               	movwf	139,c	;volatile
  9331                           
  9332                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  9333  0076' 988B               	bcf	139,4,c	;volatile
  9334  0078' 0012               	return		;funcret
  9335  007A'                    __end_of_EscriuPrimeraOrdre:
  9336                           	callstack 0
  9337                           
  9338 ;; *************** function _JoystickMotor *****************
  9339 ;; Defined at:
  9340 ;;		line 18 in file "Joystick.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;		None
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, status,2, status,0, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1
  9354 ;;      Params:         0       0       0
  9355 ;;      Locals:         0       0       0
  9356 ;;      Temps:          2       0       0
  9357 ;;      Totals:         2       0       0
  9358 ;;Total ram usage:        2 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 3
  9361 ;; This function calls:
  9362 ;;		_MNouJoystick
  9363 ;; This function is called by:
  9364 ;;		_main
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text74
  9369  0000'                    __ptext74:
  9370                           	callstack 0
  9371  0000'                    _JoystickMotor:
  9372                           	callstack 27
  9373                           
  9374                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  9375                           
  9376                           ;incstack = 0
  9377  0000' D05A               	goto	l3224
  9378  0002'                    l1021:
  9379                           
  9380                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9381  0002' B2C2               	btfsc	194,1,c	;volatile
  9382  0004' D00B               	goto	l1022
  9383  0006' 0EC8               	movlw	200
  9384  0008' 60C4               	cpfslt	196,c	;volatile
  9385  000A' D008               	goto	l1022
  9386  000C' 0E32               	movlw	50
  9387  000E' 64C4               	cpfsgt	196,c	;volatile
  9388  0010' D005               	goto	l1022
  9389                           
  9390                           ;Joystick.c: 23:     ADCON0 = 0x07;
  9391  0012' 0E07               	movlw	7
  9392  0014' 6EC2               	movwf	194,c	;volatile
  9393                           
  9394                           ;Joystick.c: 24:                 cap1 = 1;
  9395  0016' 8000'              	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9396  0018'                    l3154:
  9397                           
  9398                           ;Joystick.c: 25:     state++;
  9399  0018' 2A00'              	incf	JoystickMotor@state^0,f,c
  9400                           
  9401                           ;Joystick.c: 26:    }
  9402  001A' D05B               	goto	l1029
  9403  001C'                    l1022:
  9404  001C' B2C2               	btfsc	194,1,c	;volatile
  9405  001E' D010               	goto	l1024
  9406  0020' 0EC7               	movlw	199
  9407  0022' 64C4               	cpfsgt	196,c	;volatile
  9408  0024' D00D               	goto	l1024
  9409                           
  9410                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  9411  0026' 0E02               	movlw	2
  9412  0028' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9413  002A' B4D8               	btfsc	status,2,c
  9414  002C' D003               	goto	l3162
  9415  002E' 0E02               	movlw	2
  9416  0030' EC00' F000'        	call	_MNouJoystick
  9417  0034'                    l3162:
  9418                           
  9419                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  9420  0034' 0E02               	movlw	2
  9421  0036' 6E00'              	movwf	_ultimaTeclaAD^0,c
  9422                           
  9423                           ;Joystick.c: 30:     ADCON0 = 0x07;
  9424  0038' 0E07               	movlw	7
  9425  003A' 6EC2               	movwf	194,c	;volatile
  9426                           
  9427                           ;Joystick.c: 31:                 cap1 = 0;
  9428  003C' 9000'              	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9429  003E' D7EC               	goto	l3154
  9430  0040'                    l1024:
  9431  0040' B2C2               	btfsc	194,1,c	;volatile
  9432  0042' D047               	goto	l1029
  9433  0044' 0E33               	movlw	51
  9434  0046' 60C4               	cpfslt	196,c	;volatile
  9435  0048' D044               	goto	l1029
  9436                           
  9437                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  9438  004A' 0E08               	movlw	8
  9439  004C' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9440  004E' B4D8               	btfsc	status,2,c
  9441  0050' D003               	goto	l3176
  9442  0052' 0E08               	movlw	8
  9443  0054' EC00' F000'        	call	_MNouJoystick
  9444  0058'                    l3176:
  9445                           
  9446                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  9447  0058' 0E08               	movlw	8
  9448  005A' D7ED               	goto	L11
  9449  005C'                    l1030:
  9450                           
  9451                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9452  005C' B2C2               	btfsc	194,1,c	;volatile
  9453  005E' D00B               	goto	l1031
  9454  0060' 0EC8               	movlw	200
  9455  0062' 60C4               	cpfslt	196,c	;volatile
  9456  0064' D008               	goto	l1031
  9457  0066' 0E32               	movlw	50
  9458  0068' 64C4               	cpfsgt	196,c	;volatile
  9459  006A' D005               	goto	l1031
  9460                           
  9461                           ;Joystick.c: 44:     ADCON0 = 0x03;
  9462  006C' 0E03               	movlw	3
  9463  006E' 6EC2               	movwf	194,c	;volatile
  9464                           
  9465                           ;Joystick.c: 45:                 cap2 = 1;
  9466  0070' 8000'              	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9467  0072'                    l3192:
  9468                           
  9469                           ;Joystick.c: 46:     state--;
  9470  0072' 0600'              	decf	JoystickMotor@state^0,f,c
  9471                           
  9472                           ;Joystick.c: 47:    }
  9473  0074' D02E               	goto	l1029
  9474  0076'                    l1031:
  9475  0076' B2C2               	btfsc	194,1,c	;volatile
  9476  0078' D010               	goto	l1033
  9477  007A' 0EC7               	movlw	199
  9478  007C' 64C4               	cpfsgt	196,c	;volatile
  9479  007E' D00D               	goto	l1033
  9480                           
  9481                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  9482  0080' 0E06               	movlw	6
  9483  0082' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9484  0084' B4D8               	btfsc	status,2,c
  9485  0086' D003               	goto	l3200
  9486  0088' 0E06               	movlw	6
  9487  008A' EC00' F000'        	call	_MNouJoystick
  9488  008E'                    l3200:
  9489                           
  9490                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  9491  008E' 0E06               	movlw	6
  9492  0090' 6E00'              	movwf	_ultimaTeclaAD^0,c
  9493                           
  9494                           ;Joystick.c: 51:     ADCON0 = 0x03;
  9495  0092' 0E03               	movlw	3
  9496  0094' 6EC2               	movwf	194,c	;volatile
  9497                           
  9498                           ;Joystick.c: 52:                 cap2 = 0;
  9499  0096' 9000'              	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9500  0098' D7EC               	goto	l3192
  9501  009A'                    l1033:
  9502  009A' B2C2               	btfsc	194,1,c	;volatile
  9503  009C' D01A               	goto	l1029
  9504  009E' 0E33               	movlw	51
  9505  00A0' 60C4               	cpfslt	196,c	;volatile
  9506  00A2' D017               	goto	l1029
  9507                           
  9508                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9509  00A4' 0E04               	movlw	4
  9510  00A6' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9511  00A8' B4D8               	btfsc	status,2,c
  9512  00AA' D003               	goto	l3214
  9513  00AC' 0E04               	movlw	4
  9514  00AE' EC00' F000'        	call	_MNouJoystick
  9515  00B2'                    l3214:
  9516                           
  9517                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9518  00B2' 0E04               	movlw	4
  9519  00B4' D7ED               	goto	L12
  9520  00B6'                    l3224:
  9521  00B6' 5000'              	movf	JoystickMotor@state^0,w,c
  9522  00B8' 6E00'              	movwf	??_JoystickMotor^0,c
  9523  00BA' 6A00'              	clrf	(??_JoystickMotor+1)^0,c
  9524                           
  9525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9526                           ; Switch size 1, requested type "simple"
  9527                           ; Number of cases is 1, Range of values is 0 to 0
  9528                           ; switch strategies available:
  9529                           ; Name         Instructions Cycles
  9530                           ; simple_byte            4     3 (average)
  9531                           ;	Chosen strategy is simple_byte
  9532  00BC' 5000'              	movf	(??_JoystickMotor+1)^0,w,c
  9533  00BE' 0A00               	xorlw	0	; case 0
  9534  00C0' A4D8               	btfss	status,2,c
  9535  00C2' D007               	goto	l1029
  9536                           
  9537                           ; Switch size 1, requested type "simple"
  9538                           ; Number of cases is 2, Range of values is 0 to 1
  9539                           ; switch strategies available:
  9540                           ; Name         Instructions Cycles
  9541                           ; simple_byte            7     4 (average)
  9542                           ;	Chosen strategy is simple_byte
  9543  00C4' 5000'              	movf	??_JoystickMotor^0,w,c
  9544  00C6' 0A00               	xorlw	0	; case 0
  9545  00C8' B4D8               	btfsc	status,2,c
  9546  00CA' D79B               	goto	l1021
  9547  00CC' 0A01               	xorlw	1	; case 1
  9548  00CE' B4D8               	btfsc	status,2,c
  9549  00D0' D7C5               	goto	l1030
  9550  00D2'                    l1029:
  9551                           
  9552                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9553  00D2' A000'              	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  9554  00D4' 0012               	return	
  9555  00D6' A000'              	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9556  00D8' 0012               	return	
  9557  00DA' 5000'              	movf	_ultimaTeclaAD^0,w,c
  9558  00DC' B4D8               	btfsc	status,2,c
  9559  00DE' 0012               	return	
  9560                           
  9561                           ;Joystick.c: 66:         MNouJoystick(-1);
  9562  00E0' 0EFF               	movlw	255
  9563  00E2' EC00' F000'        	call	_MNouJoystick
  9564                           
  9565                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9566  00E6' 6800'              	setf	_ultimaTeclaAD^0,c
  9567  00E8' 0012               	return		;funcret
  9568  00EA'                    __end_of_JoystickMotor:
  9569                           	callstack 0
  9570                           
  9571 ;; *************** function _MNouJoystick *****************
  9572 ;; Defined at:
  9573 ;;		line 38 in file "Menu.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  posicio         1    wreg     char 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  posicio         1    5[COMRAM] char 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      void 
  9580 ;; Registers used:
  9581 ;;		wreg
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1
  9587 ;;      Params:         0       0       0
  9588 ;;      Locals:         1       0       0
  9589 ;;      Temps:          0       0       0
  9590 ;;      Totals:         1       0       0
  9591 ;;Total ram usage:        1 bytes
  9592 ;; Hardware stack levels used: 1
  9593 ;; Hardware stack levels required when called: 2
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_JoystickMotor
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text75
  9602  0000'                    __ptext75:
  9603                           	callstack 0
  9604  0000'                    _MNouJoystick:
  9605                           	callstack 27
  9606                           
  9607                           ;incstack = 0
  9608                           ;MNouJoystick@posicio stored from wreg
  9609  0000' 6E00'              	movwf	MNouJoystick@posicio^0,c
  9610                           
  9611                           ;Menu.c: 39:     novaDireccio = posicio;
  9612  0002' C005' F00C'        	movff	MNouJoystick@posicio,_novaDireccio
  9613  0006' 0012               	return		;funcret
  9614  0008'                    __end_of_MNouJoystick:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function _JoystickInit *****************
  9618 ;; Defined at:
  9619 ;;		line 12 in file "Joystick.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, status,2
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1
  9633 ;;      Params:         0       0       0
  9634 ;;      Locals:         0       0       0
  9635 ;;      Temps:          0       0       0
  9636 ;;      Totals:         0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 2
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text76
  9648  0000'                    __ptext76:
  9649                           	callstack 0
  9650  0000'                    _JoystickInit:
  9651                           	callstack 28
  9652                           
  9653                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9654                           
  9655                           ;incstack = 0
  9656  0000' 0E01               	movlw	1
  9657  0002' 6EC2               	movwf	194,c	;volatile
  9658                           
  9659                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9660  0004' 0E0D               	movlw	13
  9661  0006' 6EC1               	movwf	193,c	;volatile
  9662                           
  9663                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9664  0008' 0E09               	movlw	9
  9665  000A' 6EC0               	movwf	192,c	;volatile
  9666                           
  9667                           ;Joystick.c: 16:     ADRESH = 127;
  9668  000C' 0E7F               	movlw	127
  9669  000E' 6EC4               	movwf	196,c	;volatile
  9670  0010' 0012               	return		;funcret
  9671  0012'                    __end_of_JoystickInit:
  9672                           	callstack 0
  9673                           
  9674 ;; *************** function _GLCDMotor *****************
  9675 ;; Defined at:
  9676 ;;		line 36 in file "GestioLCD.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1
  9690 ;;      Params:         0       0       0
  9691 ;;      Locals:         0       0       0
  9692 ;;      Temps:          2       0       0
  9693 ;;      Totals:         2       0       0
  9694 ;;Total ram usage:        2 bytes
  9695 ;; Hardware stack levels used: 1
  9696 ;; Hardware stack levels required when called: 6
  9697 ;; This function calls:
  9698 ;;		_LcClear
  9699 ;;		_LcGotoXY
  9700 ;;		_LcLliure
  9701 ;;		_LcNewString
  9702 ;;		_LcPutChar
  9703 ;;		_TiGetTics
  9704 ;;		_TiResetTics
  9705 ;; This function is called by:
  9706 ;;		_main
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text77
  9711  0000'                    __ptext77:
  9712                           	callstack 0
  9713  0000'                    _GLCDMotor:
  9714                           	callstack 24
  9715                           
  9716                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9717                           
  9718                           ;incstack = 0
  9719  0000' D1B7               	goto	l5080
  9720  0002'                    l4894:
  9721                           
  9722                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9723  0002' 0E11               	movlw	17
  9724  0004' 6000'              	cpfslt	GLCDMotor@length1^0,c
  9725  0006' D017               	goto	l4904
  9726  0008' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9727  000A' D015               	goto	l4904
  9728                           
  9729                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9730  000C' 0E00               	movlw	0
  9731  000E' 6E00'              	movwf	LcGotoXY@Row^0,c
  9732  0010' 0E00               	movlw	0
  9733  0012' EC00' F000'        	call	_LcGotoXY
  9734                           
  9735                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9736  0016' 5000'              	movf	_menuDaltGLCD^0,w,c
  9737  0018' 0D1D               	mullw	29
  9738  001A' 50F3               	movf	243,w,c
  9739  001C' 0F00'              	addlw	low _menuList
  9740  001E' 6E00'              	movwf	??_GLCDMotor^0,c
  9741  0020' C014' F009'        	movff	??_GLCDMotor,LcNewString@new_s
  9742  0024' 5000'              	movf	LcNewString@new_s^0,w,c
  9743  0026' A4D8               	btfss	status,2,c
  9744  0028' 0E00'              	movlw	high __smallconst
  9745  002A' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  9746  002C' EC00' F000'        	call	_LcNewString	;wreg free
  9747                           
  9748                           ;GestioLCD.c: 53:     state = 5;
  9749  0030' 0E05               	movlw	5
  9750  0032' 6E00'              	movwf	GLCDMotor@state^0,c
  9751                           
  9752                           ;GestioLCD.c: 54:    }
  9753  0034' 0012               	return	
  9754  0036'                    l4904:
  9755  0036' 0E10               	movlw	16
  9756  0038' 6400'              	cpfsgt	GLCDMotor@length1^0,c
  9757  003A' 0012               	return	
  9758  003C' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9759  003E' 0012               	return	
  9760  0040'                    u4280:
  9761                           
  9762                           ;GestioLCD.c: 56:     state++;
  9763  0040' 2A00'              	incf	GLCDMotor@state^0,f,c
  9764  0042' 0012               	return	
  9765  0044'                    l4910:
  9766                           
  9767                           ;GestioLCD.c: 60:    if (j>=16) {
  9768  0044' 0E0F               	movlw	15
  9769  0046' 6400'              	cpfsgt	GLCDMotor@j^0,c
  9770  0048' D02B               	goto	l4924
  9771                           
  9772                           ;GestioLCD.c: 61:     min1++;
  9773  004A' 2A00'              	incf	GLCDMotor@min1^0,f,c
  9774                           
  9775                           ;GestioLCD.c: 62:     max1++;
  9776  004C' 2A00'              	incf	GLCDMotor@max1^0,f,c
  9777                           
  9778                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9779  004E' 5000'              	movf	_menuDaltGLCD^0,w,c
  9780  0050' 0D1D               	mullw	29
  9781  0052' 50F3               	movf	243,w,c
  9782  0054' 0F00'              	addlw	low _menuList
  9783  0056' 2400'              	addwf	GLCDMotor@max1^0,w,c
  9784  0058' 6E00'              	movwf	??_GLCDMotor^0,c
  9785  005A' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9786  005E'                    	if	1	;There is more than 1 active tblptr byte
  9787  005E' 0E00'              	movlw	high __smallconst
  9788  0060' 6EF7               	movwf	tblptrh,c
  9789  0062'                    	endif
  9790  0062'                    	if	0	;tblptru may be non-zero
  9791  0062'                    	endif
  9792  0062'                    	if	0	;tblptru may be non-zero
  9793  0062'                    	endif
  9794  0062' 0008               	tblrd		*
  9795  0064' 50F5               	movf	tablat,w,c
  9796  0066' 0900               	iorlw	0
  9797  0068' A4D8               	btfss	status,2,c
  9798  006A' D002               	goto	l4918
  9799  006C' 0E00               	movlw	0
  9800  006E' 6E00'              	movwf	GLCDMotor@max1^0,c
  9801  0070'                    l4918:
  9802                           
  9803                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9804  0070' 5000'              	movf	_menuDaltGLCD^0,w,c
  9805  0072' 0D1D               	mullw	29
  9806  0074' 50F3               	movf	243,w,c
  9807  0076' 0F00'              	addlw	low _menuList
  9808  0078' 2400'              	addwf	GLCDMotor@min1^0,w,c
  9809  007A' 6E00'              	movwf	??_GLCDMotor^0,c
  9810  007C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9811  0080'                    	if	1	;There is more than 1 active tblptr byte
  9812  0080' 0E00'              	movlw	high __smallconst
  9813  0082' 6EF7               	movwf	tblptrh,c
  9814  0084'                    	endif
  9815  0084'                    	if	0	;tblptru may be non-zero
  9816  0084'                    	endif
  9817  0084'                    	if	0	;tblptru may be non-zero
  9818  0084'                    	endif
  9819  0084' 0008               	tblrd		*
  9820  0086' 50F5               	movf	tablat,w,c
  9821  0088' 0900               	iorlw	0
  9822  008A' A4D8               	btfss	status,2,c
  9823  008C' D002               	goto	l952
  9824  008E' 0E00               	movlw	0
  9825  0090' 6E00'              	movwf	GLCDMotor@min1^0,c
  9826  0092'                    l952:
  9827                           
  9828                           ;GestioLCD.c: 65:     j=0;
  9829  0092' 0E00               	movlw	0
  9830  0094' 6E00'              	movwf	GLCDMotor@j^0,c
  9831                           
  9832                           ;GestioLCD.c: 66:     k1=min1;
  9833  0096' C01D' F01B'        	movff	GLCDMotor@min1,GLCDMotor@k1
  9834                           
  9835                           ;GestioLCD.c: 67:     state = 6;
  9836  009A' 0E06               	movlw	6
  9837  009C' 6E00'              	movwf	GLCDMotor@state^0,c
  9838                           
  9839                           ;GestioLCD.c: 68:    }
  9840  009E' 0012               	return	
  9841  00A0'                    l4924:
  9842  00A0' 0E10               	movlw	16
  9843  00A2' 6000'              	cpfslt	GLCDMotor@j^0,c
  9844  00A4' 0012               	return	
  9845                           
  9846                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9847  00A6' 0E00               	movlw	0
  9848  00A8' 6E00'              	movwf	LcGotoXY@Row^0,c
  9849  00AA' 5000'              	movf	GLCDMotor@j^0,w,c
  9850  00AC' EC00' F000'        	call	_LcGotoXY
  9851                           
  9852                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9853  00B0' 5000'              	movf	_menuDaltGLCD^0,w,c
  9854  00B2' 0D1D               	mullw	29
  9855  00B4' 50F3               	movf	243,w,c
  9856  00B6' 0F00'              	addlw	low _menuList
  9857  00B8' 2400'              	addwf	GLCDMotor@k1^0,w,c
  9858  00BA' 6E00'              	movwf	??_GLCDMotor^0,c
  9859  00BC' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9860  00C0'                    	if	1	;There is more than 1 active tblptr byte
  9861  00C0' 0E00'              	movlw	high __smallconst
  9862  00C2' 6EF7               	movwf	tblptrh,c
  9863  00C4'                    	endif
  9864  00C4'                    	if	0	;tblptru may be non-zero
  9865  00C4'                    	endif
  9866  00C4'                    	if	0	;tblptru may be non-zero
  9867  00C4'                    	endif
  9868  00C4' 0008               	tblrd		*
  9869  00C6' 50F5               	movf	tablat,w,c
  9870  00C8' EC00' F000'        	call	_LcPutChar
  9871                           
  9872                           ;GestioLCD.c: 72:     j++;
  9873  00CC' 2A00'              	incf	GLCDMotor@j^0,f,c
  9874                           
  9875                           ;GestioLCD.c: 73:     k1++;
  9876  00CE' 2A00'              	incf	GLCDMotor@k1^0,f,c
  9877                           
  9878                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9879  00D0' 5000'              	movf	_menuDaltGLCD^0,w,c
  9880  00D2' 0D1D               	mullw	29
  9881  00D4' 50F3               	movf	243,w,c
  9882  00D6' 0F00'              	addlw	low _menuList
  9883  00D8' 2400'              	addwf	GLCDMotor@k1^0,w,c
  9884  00DA' 6E00'              	movwf	??_GLCDMotor^0,c
  9885  00DC' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9886  00E0'                    	if	1	;There is more than 1 active tblptr byte
  9887  00E0' 0E00'              	movlw	high __smallconst
  9888  00E2' 6EF7               	movwf	tblptrh,c
  9889  00E4'                    	endif
  9890  00E4'                    	if	0	;tblptru may be non-zero
  9891  00E4'                    	endif
  9892  00E4'                    	if	0	;tblptru may be non-zero
  9893  00E4'                    	endif
  9894  00E4' 0008               	tblrd		*
  9895  00E6' 50F5               	movf	tablat,w,c
  9896  00E8' 0900               	iorlw	0
  9897  00EA' A4D8               	btfss	status,2,c
  9898  00EC' 0012               	return	
  9899  00EE' 0E00               	movlw	0
  9900  00F0' 6E00'              	movwf	GLCDMotor@k1^0,c
  9901  00F2' 0012               	return	
  9902  00F4'                    l4938:
  9903                           
  9904                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9905  00F4' 0E04               	movlw	4
  9906  00F6' 6000'              	cpfslt	_menuDaltGLCD^0,c
  9907  00F8' D012               	goto	u4380
  9908  00FA' D7A2               	goto	u4280
  9909  00FC'                    u4350:
  9910                           
  9911                           ;GestioLCD.c: 82:     state = 0;
  9912  00FC' 0E00               	movlw	0
  9913  00FE' 6E00'              	movwf	GLCDMotor@state^0,c
  9914  0100' 0012               	return	
  9915  0102'                    l4946:
  9916                           
  9917                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9918  0102' EC00' F000'        	call	_LcLliure	;wreg free
  9919  0106' A0D8               	btfss	status,0,c
  9920  0108' D006               	goto	l4952
  9921  010A' 0E04               	movlw	4
  9922  010C' 6000'              	cpfslt	_menuDaltGLCD^0,c
  9923  010E' D003               	goto	l4952
  9924                           
  9925                           ;GestioLCD.c: 87:     state = 7;
  9926  0110' 0E07               	movlw	7
  9927  0112' 6E00'              	movwf	GLCDMotor@state^0,c
  9928                           
  9929                           ;GestioLCD.c: 88:    }
  9930  0114' 0012               	return	
  9931  0116'                    l4952:
  9932  0116' EC00' F000'        	call	_LcLliure	;wreg free
  9933  011A' A0D8               	btfss	status,0,c
  9934  011C' 0012               	return	
  9935  011E'                    u4380:
  9936  011E' 0E03               	movlw	3
  9937  0120' 6400'              	cpfsgt	_menuDaltGLCD^0,c
  9938  0122' 0012               	return	
  9939  0124' D7EB               	goto	u4350
  9940  0126'                    l964:
  9941                           
  9942                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9943  0126' A000'              	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9944  0128' 0012               	return	
  9945  012A' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9946  012C' 0012               	return	
  9947                           
  9948                           ;GestioLCD.c: 95:     length1 = 0;
  9949  012E' 0E00               	movlw	0
  9950  0130' 6E00'              	movwf	GLCDMotor@length1^0,c
  9951                           
  9952                           ;GestioLCD.c: 96:     length2 = 0;
  9953  0132' 0E00               	movlw	0
  9954  0134' 6E00'              	movwf	GLCDMotor@length2^0,c
  9955                           
  9956                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9957  0136' 0E00               	movlw	0
  9958  0138' 6E00'              	movwf	LcGotoXY@Row^0,c
  9959  013A' 0E00               	movlw	0
  9960  013C' EC00' F000'        	call	_LcGotoXY
  9961                           
  9962                           ;GestioLCD.c: 98:     min1 = 0;
  9963  0140' 0E00               	movlw	0
  9964  0142' 6E00'              	movwf	GLCDMotor@min1^0,c
  9965                           
  9966                           ;GestioLCD.c: 99:     max1 = 15;
  9967  0144' 0E0F               	movlw	15
  9968  0146' 6E00'              	movwf	GLCDMotor@max1^0,c
  9969                           
  9970                           ;GestioLCD.c: 100:     min2 = 0;
  9971  0148' 0E00               	movlw	0
  9972  014A' 6E00'              	movwf	GLCDMotor@min2^0,c
  9973                           
  9974                           ;GestioLCD.c: 101:     max2 = 15;
  9975  014C' 0E0F               	movlw	15
  9976  014E' 6E00'              	movwf	GLCDMotor@max2^0,c
  9977                           
  9978                           ;GestioLCD.c: 102:     j = 0;
  9979  0150' 0E00               	movlw	0
  9980  0152' 6E00'              	movwf	GLCDMotor@j^0,c
  9981                           
  9982                           ;GestioLCD.c: 103:     k1 = 0;
  9983  0154' 0E00               	movlw	0
  9984  0156' 6E00'              	movwf	GLCDMotor@k1^0,c
  9985                           
  9986                           ;GestioLCD.c: 104:     k2 = 0;
  9987  0158' 0E00               	movlw	0
  9988  015A' 6E00'              	movwf	GLCDMotor@k2^0,c
  9989                           
  9990                           ;GestioLCD.c: 105:     newString = 0;
  9991  015C' 9000'              	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9992  015E' D770               	goto	u4280
  9993  0160'                    l4982:
  9994                           
  9995                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9996  0160' 5000'              	movf	_menuDaltGLCD^0,w,c
  9997  0162' 0D1D               	mullw	29
  9998  0164' 50F3               	movf	243,w,c
  9999  0166' 0F00'              	addlw	low _menuList
 10000  0168' 2400'              	addwf	GLCDMotor@length1^0,w,c
 10001  016A' 6E00'              	movwf	??_GLCDMotor^0,c
 10002  016C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10003  0170'                    	if	1	;There is more than 1 active tblptr byte
 10004  0170' 0E00'              	movlw	high __smallconst
 10005  0172' 6EF7               	movwf	tblptrh,c
 10006  0174'                    	endif
 10007  0174'                    	if	0	;tblptru may be non-zero
 10008  0174'                    	endif
 10009  0174'                    	if	0	;tblptru may be non-zero
 10010  0174'                    	endif
 10011  0174' 0008               	tblrd		*
 10012  0176' 50F5               	movf	tablat,w,c
 10013  0178' 0900               	iorlw	0
 10014  017A' A4D8               	btfss	status,2,c
 10015  017C' D004               	goto	l4988
 10016  017E' 0E03               	movlw	3
 10017  0180' 6400'              	cpfsgt	_menuDaltGLCD^0,c
 10018  0182' D001               	goto	l4988
 10019  0184' D75D               	goto	u4280
 10020  0186'                    l4988:
 10021  0186' 5000'              	movf	_menuDaltGLCD^0,w,c
 10022  0188' 0D1D               	mullw	29
 10023  018A' 50F3               	movf	243,w,c
 10024  018C' 0F00'              	addlw	low _menuList
 10025  018E' 2400'              	addwf	GLCDMotor@length1^0,w,c
 10026  0190' 6E00'              	movwf	??_GLCDMotor^0,c
 10027  0192' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10028  0196'                    	if	1	;There is more than 1 active tblptr byte
 10029  0196' 0E00'              	movlw	high __smallconst
 10030  0198' 6EF7               	movwf	tblptrh,c
 10031  019A'                    	endif
 10032  019A'                    	if	0	;tblptru may be non-zero
 10033  019A'                    	endif
 10034  019A'                    	if	0	;tblptru may be non-zero
 10035  019A'                    	endif
 10036  019A' 0008               	tblrd		*
 10037  019C' 50F5               	movf	tablat,w,c
 10038  019E' 0900               	iorlw	0
 10039  01A0' B4D8               	btfsc	status,2,c
 10040  01A2' D002               	goto	l4992
 10041                           
 10042                           ;GestioLCD.c: 114:     length1++;
 10043  01A4' 2A00'              	incf	GLCDMotor@length1^0,f,c
 10044                           
 10045                           ;GestioLCD.c: 115:    }
 10046  01A6' 0012               	return	
 10047  01A8'                    l4992:
 10048  01A8' 0E04               	movlw	4
 10049  01AA' 6000'              	cpfslt	_menuDaltGLCD^0,c
 10050  01AC' 0012               	return	
 10051  01AE' 5000'              	movf	_menuDaltGLCD^0,w,c
 10052  01B0' 0D1D               	mullw	29
 10053  01B2' 50F3               	movf	243,w,c
 10054  01B4' 0F00'              	addlw	low _menuList
 10055  01B6' 2400'              	addwf	GLCDMotor@length1^0,w,c
 10056  01B8' 6E00'              	movwf	??_GLCDMotor^0,c
 10057  01BA' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10058  01BE'                    	if	1	;There is more than 1 active tblptr byte
 10059  01BE' 0E00'              	movlw	high __smallconst
 10060  01C0' 6EF7               	movwf	tblptrh,c
 10061  01C2'                    	endif
 10062  01C2'                    	if	0	;tblptru may be non-zero
 10063  01C2'                    	endif
 10064  01C2'                    	if	0	;tblptru may be non-zero
 10065  01C2'                    	endif
 10066  01C2' 0008               	tblrd		*
 10067  01C4' 50F5               	movf	tablat,w,c
 10068  01C6' 0900               	iorlw	0
 10069  01C8' A4D8               	btfss	status,2,c
 10070  01CA' 0012               	return	
 10071                           
 10072                           ;GestioLCD.c: 117:     state = 13;
 10073  01CC' 0E0D               	movlw	13
 10074  01CE' 6E00'              	movwf	GLCDMotor@state^0,c
 10075  01D0' 0012               	return	
 10076  01D2'                    l4998:
 10077                           
 10078                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
 10079  01D2' 0E11               	movlw	17
 10080  01D4' 6000'              	cpfslt	GLCDMotor@length2^0,c
 10081  01D6' D019               	goto	l5008
 10082  01D8' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
 10083  01DA' D017               	goto	l5008
 10084                           
 10085                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
 10086  01DC' 0E01               	movlw	1
 10087  01DE' 6E00'              	movwf	LcGotoXY@Row^0,c
 10088  01E0' 0E00               	movlw	0
 10089  01E2' EC00' F000'        	call	_LcGotoXY
 10090                           
 10091                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
 10092  01E6' 5000'              	movf	_menuDaltGLCD^0,w,c
 10093  01E8' 0D1D               	mullw	29
 10094  01EA' CFF3 F014'         	movff	prodl,??_GLCDMotor
 10095  01EE' 0E1D               	movlw	29
 10096  01F0' 2600'              	addwf	??_GLCDMotor^0,f,c
 10097  01F2' 5000'              	movf	??_GLCDMotor^0,w,c
 10098  01F4' 0F00'              	addlw	low _menuList
 10099  01F6' 6E00'              	movwf	(??_GLCDMotor+1)^0,c
 10100  01F8' C015' F009'        	movff	??_GLCDMotor+1,LcNewString@new_s
 10101  01FC' 5000'              	movf	LcNewString@new_s^0,w,c
 10102  01FE' A4D8               	btfss	status,2,c
 10103  0200' 0E00'              	movlw	high __smallconst
 10104  0202' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
 10105  0204' EC00' F000'        	call	_LcNewString	;wreg free
 10106  0208' D71B               	goto	u4280
 10107  020A'                    l5008:
 10108  020A' 0E10               	movlw	16
 10109  020C' 6400'              	cpfsgt	GLCDMotor@length2^0,c
 10110  020E' 0012               	return	
 10111  0210' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
 10112  0212' 0012               	return	
 10113                           
 10114                           ;GestioLCD.c: 127:     state = 9;
 10115  0214' 0E09               	movlw	9
 10116  0216' 6E00'              	movwf	GLCDMotor@state^0,c
 10117  0218' 0012               	return	
 10118  021A'                    l5014:
 10119                           
 10120                           ;GestioLCD.c: 131:    if (j<16) {
 10121  021A' 0E10               	movlw	16
 10122  021C' 6000'              	cpfslt	GLCDMotor@j^0,c
 10123  021E' D02B               	goto	l5028
 10124                           
 10125                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
 10126  0220' 0E01               	movlw	1
 10127  0222' 6E00'              	movwf	LcGotoXY@Row^0,c
 10128  0224' 5000'              	movf	GLCDMotor@j^0,w,c
 10129  0226' EC00' F000'        	call	_LcGotoXY
 10130                           
 10131                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
 10132  022A' 5000'              	movf	_menuDaltGLCD^0,w,c
 10133  022C' 0D1D               	mullw	29
 10134  022E' 50F3               	movf	243,w,c
 10135  0230' 0F00'              	addlw	low _menuList
 10136  0232' 2400'              	addwf	GLCDMotor@k2^0,w,c
 10137  0234' 6E00'              	movwf	??_GLCDMotor^0,c
 10138  0236' 0E1D               	movlw	29
 10139  0238' 2600'              	addwf	??_GLCDMotor^0,f,c
 10140  023A' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10141  023E'                    	if	1	;There is more than 1 active tblptr byte
 10142  023E' 0E00'              	movlw	high __smallconst
 10143  0240' 6EF7               	movwf	tblptrh,c
 10144  0242'                    	endif
 10145  0242'                    	if	0	;tblptru may be non-zero
 10146  0242'                    	endif
 10147  0242'                    	if	0	;tblptru may be non-zero
 10148  0242'                    	endif
 10149  0242' 0008               	tblrd		*
 10150  0244' 50F5               	movf	tablat,w,c
 10151  0246' EC00' F000'        	call	_LcPutChar
 10152                           
 10153                           ;GestioLCD.c: 134:     j++;
 10154  024A' 2A00'              	incf	GLCDMotor@j^0,f,c
 10155                           
 10156                           ;GestioLCD.c: 135:     k2++;
 10157  024C' 2A00'              	incf	GLCDMotor@k2^0,f,c
 10158                           
 10159                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
 10160  024E' 5000'              	movf	_menuDaltGLCD^0,w,c
 10161  0250' 0D1D               	mullw	29
 10162  0252' 50F3               	movf	243,w,c
 10163  0254' 0F00'              	addlw	low _menuList
 10164  0256' 2400'              	addwf	GLCDMotor@k2^0,w,c
 10165  0258' 6E00'              	movwf	??_GLCDMotor^0,c
 10166  025A' 0E1D               	movlw	29
 10167  025C' 2600'              	addwf	??_GLCDMotor^0,f,c
 10168  025E' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10169  0262'                    	if	1	;There is more than 1 active tblptr byte
 10170  0262' 0E00'              	movlw	high __smallconst
 10171  0264' 6EF7               	movwf	tblptrh,c
 10172  0266'                    	endif
 10173  0266'                    	if	0	;tblptru may be non-zero
 10174  0266'                    	endif
 10175  0266'                    	if	0	;tblptru may be non-zero
 10176  0266'                    	endif
 10177  0266' 0008               	tblrd		*
 10178  0268' 50F5               	movf	tablat,w,c
 10179  026A' 0900               	iorlw	0
 10180  026C' A4D8               	btfss	status,2,c
 10181  026E' 0012               	return	
 10182  0270' 0E00               	movlw	0
 10183  0272' 6E00'              	movwf	GLCDMotor@k2^0,c
 10184  0274' 0012               	return	
 10185  0276'                    l5028:
 10186  0276' 0E0F               	movlw	15
 10187  0278' 6400'              	cpfsgt	GLCDMotor@j^0,c
 10188  027A' 0012               	return	
 10189                           
 10190                           ;GestioLCD.c: 139:     min2++;
 10191  027C' 2A00'              	incf	GLCDMotor@min2^0,f,c
 10192                           
 10193                           ;GestioLCD.c: 140:     max2++;
 10194  027E' 2A00'              	incf	GLCDMotor@max2^0,f,c
 10195                           
 10196                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
 10197  0280' 5000'              	movf	_menuDaltGLCD^0,w,c
 10198  0282' 0D1D               	mullw	29
 10199  0284' 50F3               	movf	243,w,c
 10200  0286' 0F00'              	addlw	low _menuList
 10201  0288' 2400'              	addwf	GLCDMotor@max2^0,w,c
 10202  028A' 6E00'              	movwf	??_GLCDMotor^0,c
 10203  028C' 0E1D               	movlw	29
 10204  028E' 2600'              	addwf	??_GLCDMotor^0,f,c
 10205  0290' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10206  0294'                    	if	1	;There is more than 1 active tblptr byte
 10207  0294' 0E00'              	movlw	high __smallconst
 10208  0296' 6EF7               	movwf	tblptrh,c
 10209  0298'                    	endif
 10210  0298'                    	if	0	;tblptru may be non-zero
 10211  0298'                    	endif
 10212  0298'                    	if	0	;tblptru may be non-zero
 10213  0298'                    	endif
 10214  0298' 0008               	tblrd		*
 10215  029A' 50F5               	movf	tablat,w,c
 10216  029C' 0900               	iorlw	0
 10217  029E' A4D8               	btfss	status,2,c
 10218  02A0' D002               	goto	l5036
 10219  02A2' 0E00               	movlw	0
 10220  02A4' 6E00'              	movwf	GLCDMotor@max2^0,c
 10221  02A6'                    l5036:
 10222                           
 10223                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
 10224  02A6' 5000'              	movf	_menuDaltGLCD^0,w,c
 10225  02A8' 0D1D               	mullw	29
 10226  02AA' 50F3               	movf	243,w,c
 10227  02AC' 0F00'              	addlw	low _menuList
 10228  02AE' 2400'              	addwf	GLCDMotor@min2^0,w,c
 10229  02B0' 6E00'              	movwf	??_GLCDMotor^0,c
 10230  02B2' 0E1D               	movlw	29
 10231  02B4' 2600'              	addwf	??_GLCDMotor^0,f,c
 10232  02B6' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10233  02BA'                    	if	1	;There is more than 1 active tblptr byte
 10234  02BA' 0E00'              	movlw	high __smallconst
 10235  02BC' 6EF7               	movwf	tblptrh,c
 10236  02BE'                    	endif
 10237  02BE'                    	if	0	;tblptru may be non-zero
 10238  02BE'                    	endif
 10239  02BE'                    	if	0	;tblptru may be non-zero
 10240  02BE'                    	endif
 10241  02BE' 0008               	tblrd		*
 10242  02C0' 50F5               	movf	tablat,w,c
 10243  02C2' 0900               	iorlw	0
 10244  02C4' A4D8               	btfss	status,2,c
 10245  02C6' D002               	goto	l982
 10246  02C8' 0E00               	movlw	0
 10247  02CA' 6E00'              	movwf	GLCDMotor@min2^0,c
 10248  02CC'                    l982:
 10249                           
 10250                           ;GestioLCD.c: 143:     j=0;
 10251  02CC' 0E00               	movlw	0
 10252  02CE' 6E00'              	movwf	GLCDMotor@j^0,c
 10253                           
 10254                           ;GestioLCD.c: 144:     k2=min2;
 10255  02D0' C01C' F01A'        	movff	GLCDMotor@min2,GLCDMotor@k2
 10256  02D4' D6B5               	goto	u4280
 10257  02D6'                    l5044:
 10258                           
 10259                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
 10260  02D6' 5000'              	movf	_timerGLCD^0,w,c
 10261  02D8' EC00' F000'        	call	_TiGetTics
 10262  02DC' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
 10263  02DE' D00E               	goto	l984
 10264  02E0' 0EB5               	movlw	181
 10265  02E2' 5C00'              	subwf	?_TiGetTics^0,w,c
 10266  02E4' 0E04               	movlw	4
 10267  02E6' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
 10268  02E8' B0D8               	btfsc	status,0,c
 10269  02EA' B000'              	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
 10270  02EC' D007               	goto	l984
 10271  02EE' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
 10272  02F0' D005               	goto	l984
 10273                           
 10274                           ;GestioLCD.c: 150:     LcClear();
 10275  02F2' EC00' F000'        	call	_LcClear	;wreg free
 10276  02F6'                    l5052:
 10277                           
 10278                           ;GestioLCD.c: 151:     state = 2;
 10279  02F6' 0E02               	movlw	2
 10280  02F8' 6E00'              	movwf	GLCDMotor@state^0,c
 10281                           
 10282                           ;GestioLCD.c: 152:    }
 10283  02FA' 0012               	return	
 10284  02FC'                    l984:
 10285  02FC' A000'              	btfss	(_newString/(0+8))^0,_newString& (0+7),c
 10286  02FE' 0012               	return	
 10287  0300' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
 10288  0302' 0012               	return	
 10289                           
 10290                           ;GestioLCD.c: 154:     LcClear();
 10291  0304' EC00' F000'        	call	_LcClear	;wreg free
 10292  0308' D6F9               	goto	u4350
 10293  030A'                    l5060:
 10294                           
 10295                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
 10296  030A' 5000'              	movf	_timerGLCD^0,w,c
 10297  030C' EC00' F000'        	call	_TiResetTics
 10298  0310' D697               	goto	u4280
 10299  0312'                    l5064:
 10300                           
 10301                           ;GestioLCD.c: 163:    if (LcLliure()) {
 10302  0312' EC00' F000'        	call	_LcLliure	;wreg free
 10303  0316' A0D8               	btfss	status,0,c
 10304  0318' 0012               	return	
 10305                           
 10306                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
 10307  031A' 5000'              	movf	_timerGLCD^0,w,c
 10308  031C' EC00' F000'        	call	_TiResetTics
 10309                           
 10310                           ;GestioLCD.c: 165:     state = 11;
 10311  0320' 0E0B               	movlw	11
 10312  0322' 6E00'              	movwf	GLCDMotor@state^0,c
 10313  0324' 0012               	return	
 10314  0326'                    l5070:
 10315                           
 10316                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
 10317  0326' 5000'              	movf	_menuDaltGLCD^0,w,c
 10318  0328' 0D1D               	mullw	29
 10319  032A' 50F3               	movf	243,w,c
 10320  032C' 0F00'              	addlw	low _menuList
 10321  032E' 2400'              	addwf	GLCDMotor@length2^0,w,c
 10322  0330' 6E00'              	movwf	??_GLCDMotor^0,c
 10323  0332' 0E1D               	movlw	29
 10324  0334' 2600'              	addwf	??_GLCDMotor^0,f,c
 10325  0336' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10326  033A'                    	if	1	;There is more than 1 active tblptr byte
 10327  033A' 0E00'              	movlw	high __smallconst
 10328  033C' 6EF7               	movwf	tblptrh,c
 10329  033E'                    	endif
 10330  033E'                    	if	0	;tblptru may be non-zero
 10331  033E'                    	endif
 10332  033E'                    	if	0	;tblptru may be non-zero
 10333  033E'                    	endif
 10334  033E' 0008               	tblrd		*
 10335  0340' 50F5               	movf	tablat,w,c
 10336  0342' 0900               	iorlw	0
 10337  0344' B4D8               	btfsc	status,2,c
 10338  0346' D002               	goto	l5074
 10339                           
 10340                           ;GestioLCD.c: 170:     length2++;
 10341  0348' 2A00'              	incf	GLCDMotor@length2^0,f,c
 10342                           
 10343                           ;GestioLCD.c: 171:    }
 10344  034A' 0012               	return	
 10345  034C'                    l5074:
 10346  034C' 5000'              	movf	_menuDaltGLCD^0,w,c
 10347  034E' 0D1D               	mullw	29
 10348  0350' 50F3               	movf	243,w,c
 10349  0352' 0F00'              	addlw	low _menuList
 10350  0354' 2400'              	addwf	GLCDMotor@length2^0,w,c
 10351  0356' 6E00'              	movwf	??_GLCDMotor^0,c
 10352  0358' 0E1D               	movlw	29
 10353  035A' 2600'              	addwf	??_GLCDMotor^0,f,c
 10354  035C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
 10355  0360'                    	if	1	;There is more than 1 active tblptr byte
 10356  0360' 0E00'              	movlw	high __smallconst
 10357  0362' 6EF7               	movwf	tblptrh,c
 10358  0364'                    	endif
 10359  0364'                    	if	0	;tblptru may be non-zero
 10360  0364'                    	endif
 10361  0364'                    	if	0	;tblptru may be non-zero
 10362  0364'                    	endif
 10363  0364' 0008               	tblrd		*
 10364  0366' 50F5               	movf	tablat,w,c
 10365  0368' 0900               	iorlw	0
 10366  036A' A4D8               	btfss	status,2,c
 10367  036C' 0012               	return	
 10368  036E' D7C3               	goto	l5052
 10369  0370'                    l5080:
 10370  0370' 5000'              	movf	GLCDMotor@state^0,w,c
 10371  0372' 6E00'              	movwf	??_GLCDMotor^0,c
 10372  0374' 6A00'              	clrf	(??_GLCDMotor+1)^0,c
 10373                           
 10374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10375                           ; Switch size 1, requested type "simple"
 10376                           ; Number of cases is 1, Range of values is 0 to 0
 10377                           ; switch strategies available:
 10378                           ; Name         Instructions Cycles
 10379                           ; simple_byte            4     3 (average)
 10380                           ;	Chosen strategy is simple_byte
 10381  0376' 5000'              	movf	(??_GLCDMotor+1)^0,w,c
 10382  0378' 0A00               	xorlw	0	; case 0
 10383  037A' A4D8               	btfss	status,2,c
 10384  037C' 0012               	return	
 10385                           
 10386                           ; Switch size 1, requested type "simple"
 10387                           ; Number of cases is 12, Range of values is 0 to 13
 10388                           ; switch strategies available:
 10389                           ; Name         Instructions Cycles
 10390                           ; simple_byte           37    19 (average)
 10391                           ;	Chosen strategy is simple_byte
 10392  037E' 5000'              	movf	??_GLCDMotor^0,w,c
 10393  0380' 0A00               	xorlw	0	; case 0
 10394  0382' B4D8               	btfsc	status,2,c
 10395  0384' D6D0               	goto	l964
 10396  0386' 0A01               	xorlw	1	; case 1
 10397  0388' B4D8               	btfsc	status,2,c
 10398  038A' D6EA               	goto	l4982
 10399  038C' 0A03               	xorlw	3	; case 2
 10400  038E' B4D8               	btfsc	status,2,c
 10401  0390' D638               	goto	l4894
 10402  0392' 0A01               	xorlw	1	; case 3
 10403  0394' B4D8               	btfsc	status,2,c
 10404  0396' D656               	goto	l4910
 10405  0398' 0A06               	xorlw	6	; case 5
 10406  039A' B4D8               	btfsc	status,2,c
 10407  039C' D6B2               	goto	l4946
 10408  039E' 0A03               	xorlw	3	; case 6
 10409  03A0' B4D8               	btfsc	status,2,c
 10410  03A2' D6A8               	goto	l4938
 10411  03A4' 0A01               	xorlw	1	; case 7
 10412  03A6' B4D8               	btfsc	status,2,c
 10413  03A8' D714               	goto	l4998
 10414  03AA' 0A0F               	xorlw	15	; case 8
 10415  03AC' B4D8               	btfsc	status,2,c
 10416  03AE' D7B1               	goto	l5064
 10417  03B0' 0A01               	xorlw	1	; case 9
 10418  03B2' B4D8               	btfsc	status,2,c
 10419  03B4' D732               	goto	l5014
 10420  03B6' 0A03               	xorlw	3	; case 10
 10421  03B8' B4D8               	btfsc	status,2,c
 10422  03BA' D7A7               	goto	l5060
 10423  03BC' 0A01               	xorlw	1	; case 11
 10424  03BE' B4D8               	btfsc	status,2,c
 10425  03C0' D78A               	goto	l5044
 10426  03C2' 0A06               	xorlw	6	; case 13
 10427  03C4' A4D8               	btfss	status,2,c
 10428  03C6' 0012               	return	
 10429  03C8' D7AE               	goto	l5070
 10430  03CA'                    __end_of_GLCDMotor:
 10431                           	callstack 0
 10432                           
 10433 ;; *************** function _LcPutChar *****************
 10434 ;; Defined at:
 10435 ;;		line 120 in file "LcTLCD.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  c               1    wreg     unsigned char 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  c               1   19[COMRAM] unsigned char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1
 10449 ;;      Params:         0       0       0
 10450 ;;      Locals:         1       0       0
 10451 ;;      Temps:          0       0       0
 10452 ;;      Totals:         1       0       0
 10453 ;;Total ram usage:        1 bytes
 10454 ;; Hardware stack levels used: 1
 10455 ;; Hardware stack levels required when called: 5
 10456 ;; This function calls:
 10457 ;;		_CantaData
 10458 ;;		_LcGotoXY
 10459 ;;		_WaitForBusy
 10460 ;; This function is called by:
 10461 ;;		_LcLCD
 10462 ;;		_menu
 10463 ;;		_GLCDMotor
 10464 ;;		_motorSIO
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468                           	psect	text78
 10469  0000'                    __ptext78:
 10470                           	callstack 0
 10471  0000'                    _LcPutChar:
 10472                           	callstack 24
 10473                           
 10474                           ;incstack = 0
 10475                           ;LcPutChar@c stored from wreg
 10476  0000' 6E00'              	movwf	LcPutChar@c^0,c
 10477                           
 10478                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
 10479  0002' EC00' F000'        	call	_WaitForBusy	;wreg free
 10480  0006' 5000'              	movf	LcPutChar@c^0,w,c
 10481  0008' EC00' F000'        	call	_CantaData
 10482                           
 10483                           ;LcTLCD.c: 124:  ++ColumnAct;
 10484  000C' 2A00'              	incf	_ColumnAct^0,f,c
 10485                           
 10486                           ;LcTLCD.c: 126:  if (Rows == 2) {
 10487  000E' 0E02               	movlw	2
 10488  0010' 1800'              	xorwf	_Rows^0,w,c
 10489  0012' A4D8               	btfss	status,2,c
 10490  0014' D010               	goto	l4516
 10491                           
 10492                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
 10493  0016' 0E27               	movlw	39
 10494  0018' 6400'              	cpfsgt	_ColumnAct^0,c
 10495  001A' D00D               	goto	l4516
 10496                           
 10497                           ;LcTLCD.c: 128:    ColumnAct = 0;
 10498  001C' 0E00               	movlw	0
 10499  001E' 6E00'              	movwf	_ColumnAct^0,c
 10500                           
 10501                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
 10502  0020' 2A00'              	incf	_RowAct^0,f,c
 10503  0022' 0E01               	movlw	1
 10504  0024' 6400'              	cpfsgt	_RowAct^0,c
 10505  0026' D002               	goto	l4514
 10506  0028' 0E00               	movlw	0
 10507  002A' 6E00'              	movwf	_RowAct^0,c
 10508  002C'                    l4514:
 10509                           
 10510                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
 10511  002C' C03E' F00D'        	movff	_RowAct,LcGotoXY@Row
 10512  0030' 5000'              	movf	_ColumnAct^0,w,c
 10513  0032' EC00' F000'        	call	_LcGotoXY
 10514  0036'                    l4516:
 10515                           
 10516                           ;LcTLCD.c: 141:  if (RowAct == 1) {
 10517  0036' 0400'              	decf	_RowAct^0,w,c
 10518  0038' A4D8               	btfss	status,2,c
 10519  003A' 0012               	return	
 10520                           
 10521                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
 10522  003C' 0E27               	movlw	39
 10523  003E' 6400'              	cpfsgt	_ColumnAct^0,c
 10524  0040' D002               	goto	l4522
 10525  0042' 0E00               	movlw	0
 10526  0044' 6E00'              	movwf	_ColumnAct^0,c
 10527  0046'                    l4522:
 10528                           
 10529                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
 10530  0046' C03E' F00D'        	movff	_RowAct,LcGotoXY@Row
 10531  004A' 5000'              	movf	_ColumnAct^0,w,c
 10532  004C' EC00' F000'        	call	_LcGotoXY
 10533  0050' 0012               	return		;funcret
 10534  0052'                    __end_of_LcPutChar:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function _CantaData *****************
 10538 ;; Defined at:
 10539 ;;		line 182 in file "LcTLCD.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  Data            1    wreg     unsigned char 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;  Data            1    7[COMRAM] unsigned char 
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1
 10553 ;;      Params:         0       0       0
 10554 ;;      Locals:         1       0       0
 10555 ;;      Temps:          0       0       0
 10556 ;;      Totals:         1       0       0
 10557 ;;Total ram usage:        1 bytes
 10558 ;; Hardware stack levels used: 1
 10559 ;; Hardware stack levels required when called: 3
 10560 ;; This function calls:
 10561 ;;		_CantaPartAlta
 10562 ;;		_CantaPartBaixa
 10563 ;; This function is called by:
 10564 ;;		_LcPutChar
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text79
 10569  0000'                    __ptext79:
 10570                           	callstack 0
 10571  0000'                    _CantaData:
 10572                           	callstack 25
 10573                           
 10574                           ;incstack = 0
 10575                           ;CantaData@Data stored from wreg
 10576  0000' 6E00'              	movwf	CantaData@Data^0,c
 10577                           
 10578                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10579  0002' 9694               	bcf	148,3,c	;volatile
 10580  0004' 9494               	bcf	148,2,c	;volatile
 10581  0006' 9294               	bcf	148,1,c	;volatile
 10582  0008' 9094               	bcf	148,0,c	;volatile
 10583                           
 10584                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
 10585  000A' 8A8B               	bsf	139,5,c	;volatile
 10586                           
 10587                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
 10588  000C' 9E8C               	bcf	140,7,c	;volatile
 10589                           
 10590                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
 10591  000E' 888B               	bsf	139,4,c	;volatile
 10592                           
 10593                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
 10594  0010' 5000'              	movf	CantaData@Data^0,w,c
 10595  0012' EC00' F000'        	call	_CantaPartAlta
 10596                           
 10597                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
 10598  0016' 888B               	bsf	139,4,c	;volatile
 10599                           
 10600                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
 10601  0018' 988B               	bcf	139,4,c	;volatile
 10602                           
 10603                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
 10604  001A' 988B               	bcf	139,4,c	;volatile
 10605                           
 10606                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10607  001C' 888B               	bsf	139,4,c	;volatile
 10608                           
 10609                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
 10610  001E' 5000'              	movf	CantaData@Data^0,w,c
 10611  0020' EC00' F000'        	call	_CantaPartBaixa
 10612                           
 10613                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
 10614  0024' 888B               	bsf	139,4,c	;volatile
 10615                           
 10616                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
 10617  0026' 988B               	bcf	139,4,c	;volatile
 10618                           
 10619                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10620  0028' 8694               	bsf	148,3,c	;volatile
 10621  002A' 8494               	bsf	148,2,c	;volatile
 10622  002C' 8294               	bsf	148,1,c	;volatile
 10623  002E' 8094               	bsf	148,0,c	;volatile
 10624  0030' 0012               	return		;funcret
 10625  0032'                    __end_of_CantaData:
 10626                           	callstack 0
 10627                           
 10628 ;; *************** function _LcNewString *****************
 10629 ;; Defined at:
 10630 ;;		line 227 in file "LcTLCD.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  new_s           2    9[COMRAM] PTR unsigned char 
 10633 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
 10634 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
 10635 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
 10636 ;;		 -> STR_1(7), registerText(11), loginText(8), 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;		None
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, status,2, status,0
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMRAM   BANK0   BANK1
 10648 ;;      Params:         2       0       0
 10649 ;;      Locals:         0       0       0
 10650 ;;      Temps:          0       0       0
 10651 ;;      Totals:         2       0       0
 10652 ;;Total ram usage:        2 bytes
 10653 ;; Hardware stack levels used: 1
 10654 ;; Hardware stack levels required when called: 2
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_menu
 10659 ;;		_GLCDMotor
 10660 ;;		_motorJoc
 10661 ;;		_motorSIO
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text80
 10666  0000'                    __ptext80:
 10667                           	callstack 0
 10668  0000'                    _LcNewString:
 10669                           	callstack 27
 10670                           
 10671                           ;LcTLCD.c: 228:     s_ptr = new_s;
 10672                           
 10673                           ;incstack = 0
 10674  0000' C009' F00A'        	movff	LcNewString@new_s,_s_ptr
 10675  0004' C00A' F00B'        	movff	LcNewString@new_s+1,_s_ptr+1
 10676                           
 10677                           ;LcTLCD.c: 229:     nou_s = 1;
 10678  0008' 8000'              	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10679  000A' 0012               	return		;funcret
 10680  000C'                    __end_of_LcNewString:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function _LcLliure *****************
 10684 ;; Defined at:
 10685 ;;		line 243 in file "LcTLCD.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;		None               void
 10692 ;; Registers used:
 10693 ;;		status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1
 10699 ;;      Params:         0       0       0
 10700 ;;      Locals:         0       0       0
 10701 ;;      Temps:          0       0       0
 10702 ;;      Totals:         0       0       0
 10703 ;;Total ram usage:        0 bytes
 10704 ;; Hardware stack levels used: 1
 10705 ;; Hardware stack levels required when called: 2
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_menu
 10710 ;;		_GLCDMotor
 10711 ;;		_motorJoc
 10712 ;;		_motorSIO
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text81
 10717  0000'                    __ptext81:
 10718                           	callstack 0
 10719  0000'                    _LcLliure:
 10720                           	callstack 27
 10721                           
 10722                           ;LcTLCD.c: 244:     return !nou_s;
 10723                           
 10724                           ;incstack = 0
 10725  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10726  0002' D002               	goto	l4532
 10727  0004' 90D8               	bcf	status,0,c
 10728  0006' 0012               	return	
 10729  0008'                    l4532:
 10730  0008' 80D8               	bsf	status,0,c
 10731  000A' 0012               	return		;funcret
 10732  000C'                    __end_of_LcLliure:
 10733                           	callstack 0
 10734                           
 10735 ;; *************** function _LcClear *****************
 10736 ;; Defined at:
 10737 ;;		line 84 in file "LcTLCD.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;		None
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1
 10751 ;;      Params:         0       0       0
 10752 ;;      Locals:         0       0       0
 10753 ;;      Temps:          0       0       0
 10754 ;;      Totals:         0       0       0
 10755 ;;Total ram usage:        0 bytes
 10756 ;; Hardware stack levels used: 1
 10757 ;; Hardware stack levels required when called: 5
 10758 ;; This function calls:
 10759 ;;		_CantaIR
 10760 ;;		_Espera
 10761 ;;		_LcGotoXY
 10762 ;;		_WaitForBusy
 10763 ;; This function is called by:
 10764 ;;		_menu
 10765 ;;		_GLCDMotor
 10766 ;;		_motorSIO
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text82
 10771  0000'                    __ptext82:
 10772                           	callstack 0
 10773  0000'                    _LcClear:
 10774                           	callstack 24
 10775                           
 10776                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10777                           
 10778                           ;incstack = 0
 10779  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
 10780  0004' 0E01               	movlw	1
 10781  0006' EC00' F000'        	call	_CantaIR
 10782                           
 10783                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10784  000A' 0E00               	movlw	0
 10785  000C' 6E00'              	movwf	(Espera@ms+1)^0,c
 10786  000E' 0E03               	movlw	3
 10787  0010' 6E00'              	movwf	Espera@ms^0,c
 10788  0012' 5000'              	movf	_Timer^0,w,c
 10789  0014' EC00' F000'        	call	_Espera
 10790                           
 10791                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10792  0018' 0E00               	movlw	0
 10793  001A' 6E00'              	movwf	LcGotoXY@Row^0,c
 10794  001C' 0E00               	movlw	0
 10795  001E' EC00' F000'        	call	_LcGotoXY
 10796  0022' 0012               	return		;funcret
 10797  0024'                    __end_of_LcClear:
 10798                           	callstack 0
 10799                           
 10800 ;; *************** function _LcGotoXY *****************
 10801 ;; Defined at:
 10802 ;;		line 106 in file "LcTLCD.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  Column          1    wreg     unsigned char 
 10805 ;;  Row             1   13[COMRAM] unsigned char 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  Column          1   18[COMRAM] unsigned char 
 10808 ;;  Fisics          2   14[COMRAM] int 
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1
 10818 ;;      Params:         1       0       0
 10819 ;;      Locals:         5       0       0
 10820 ;;      Temps:          0       0       0
 10821 ;;      Totals:         6       0       0
 10822 ;;Total ram usage:        6 bytes
 10823 ;; Hardware stack levels used: 1
 10824 ;; Hardware stack levels required when called: 4
 10825 ;; This function calls:
 10826 ;;		_CantaIR
 10827 ;;		_WaitForBusy
 10828 ;; This function is called by:
 10829 ;;		_LcClear
 10830 ;;		_LcPutChar
 10831 ;;		_menu
 10832 ;;		_GLCDMotor
 10833 ;;		_motorJoc
 10834 ;;		_motorSIO
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text83
 10839  0000'                    __ptext83:
 10840                           	callstack 0
 10841  0000'                    _LcGotoXY:
 10842                           	callstack 24
 10843                           
 10844                           ;incstack = 0
 10845                           ;LcGotoXY@Column stored from wreg
 10846  0000' 6E00'              	movwf	LcGotoXY@Column^0,c
 10847                           
 10848                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
 10849  0002' 5000'              	movf	LcGotoXY@Row^0,w,c
 10850  0004' B4D8               	btfsc	status,2,c
 10851  0006' D004               	goto	l4424
 10852  0008' 0E00               	movlw	0
 10853  000A' 6E00'              	movwf	(_LcGotoXY$334+1)^0,c
 10854  000C' 0E40               	movlw	64
 10855  000E' D003               	goto	L13
 10856  0010'                    l4424:
 10857  0010' 0E00               	movlw	0
 10858  0012' 6E00'              	movwf	(_LcGotoXY$334+1)^0,c
 10859  0014' 0E00               	movlw	0
 10860  0016'                    L13:
 10861  0016' 6E00'              	movwf	_LcGotoXY$334^0,c
 10862  0018' 5000'              	movf	LcGotoXY@Column^0,w,c
 10863  001A' 2400'              	addwf	_LcGotoXY$334^0,w,c
 10864  001C' 6E00'              	movwf	LcGotoXY@Fisics^0,c
 10865  001E' 0E00               	movlw	0
 10866  0020' 2000'              	addwfc	(_LcGotoXY$334+1)^0,w,c
 10867  0022' 6E00'              	movwf	(LcGotoXY@Fisics+1)^0,c
 10868                           
 10869                           ;LcTLCD.c: 113:  WaitForBusy();
 10870  0024' EC00' F000'        	call	_WaitForBusy	;wreg free
 10871                           
 10872                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
 10873  0028' 5000'              	movf	LcGotoXY@Fisics^0,w,c
 10874  002A' 0980               	iorlw	128
 10875  002C' EC00' F000'        	call	_CantaIR
 10876                           
 10877                           ;LcTLCD.c: 116:  RowAct = Row;
 10878  0030' C00D' F03E'        	movff	LcGotoXY@Row,_RowAct
 10879                           
 10880                           ;LcTLCD.c: 117:  ColumnAct = Column;
 10881  0034' C012' F03D'        	movff	LcGotoXY@Column,_ColumnAct
 10882  0038' 0012               	return		;funcret
 10883  003A'                    __end_of_LcGotoXY:
 10884                           	callstack 0
 10885                           
 10886 ;; *************** function _WaitForBusy *****************
 10887 ;; Defined at:
 10888 ;;		line 198 in file "LcTLCD.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;		None
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;  Busy            1   12[COMRAM] unsigned char 
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      void 
 10895 ;; Registers used:
 10896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMRAM   BANK0   BANK1
 10902 ;;      Params:         0       0       0
 10903 ;;      Locals:         1       0       0
 10904 ;;      Temps:          0       0       0
 10905 ;;      Totals:         1       0       0
 10906 ;;Total ram usage:        1 bytes
 10907 ;; Hardware stack levels used: 1
 10908 ;; Hardware stack levels required when called: 3
 10909 ;; This function calls:
 10910 ;;		_TiGetTics
 10911 ;;		_TiResetTics
 10912 ;; This function is called by:
 10913 ;;		_LcInit
 10914 ;;		_LcClear
 10915 ;;		_LcGotoXY
 10916 ;;		_LcPutChar
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text84
 10921  0000'                    __ptext84:
 10922                           	callstack 0
 10923  0000'                    _WaitForBusy:
 10924                           	callstack 25
 10925                           
 10926                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10927                           
 10928                           ;incstack = 0
 10929  0000' 8694               	bsf	148,3,c	;volatile
 10930  0002' 8494               	bsf	148,2,c	;volatile
 10931  0004' 8294               	bsf	148,1,c	;volatile
 10932  0006' 8094               	bsf	148,0,c	;volatile
 10933                           
 10934                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
 10935  0008' 9A8B               	bcf	139,5,c	;volatile
 10936                           
 10937                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
 10938  000A' 8E8C               	bsf	140,7,c	;volatile
 10939                           
 10940                           ;LcTLCD.c: 202:  TiResetTics(Timer);
 10941  000C' 5000'              	movf	_Timer^0,w,c
 10942  000E' EC00' F000'        	call	_TiResetTics
 10943  0012'                    l4392:
 10944                           
 10945                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10946  0012' 888B               	bsf	139,4,c	;volatile
 10947  0014' 888B               	bsf	139,4,c	;volatile
 10948                           
 10949                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
 10950  0016' 0E00               	movlw	0
 10951  0018' B682               	btfsc	130,3,c	;volatile
 10952  001A' 0E01               	movlw	1
 10953  001C' 6E00'              	movwf	WaitForBusy@Busy^0,c
 10954                           
 10955                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
 10956  001E' 988B               	bcf	139,4,c	;volatile
 10957                           
 10958                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
 10959  0020' 988B               	bcf	139,4,c	;volatile
 10960                           
 10961                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10962  0022' 888B               	bsf	139,4,c	;volatile
 10963  0024' 888B               	bsf	139,4,c	;volatile
 10964                           
 10965                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
 10966  0026' 988B               	bcf	139,4,c	;volatile
 10967                           
 10968                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
 10969  0028' 988B               	bcf	139,4,c	;volatile
 10970                           
 10971                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10972  002A' 5000'              	movf	_Timer^0,w,c
 10973  002C' EC00' F000'        	call	_TiGetTics
 10974  0030' 5000'              	movf	?_TiGetTics^0,w,c
 10975  0032' 1000'              	iorwf	(?_TiGetTics+1)^0,w,c
 10976  0034' A4D8               	btfss	status,2,c
 10977  0036' 0012               	return	
 10978                           
 10979                           ;LcTLCD.c: 213:  } while(Busy);
 10980  0038' 5000'              	movf	WaitForBusy@Busy^0,w,c
 10981  003A' B4D8               	btfsc	status,2,c
 10982  003C' 0012               	return	
 10983  003E' D7E9               	goto	l4392
 10984  0040'                    __end_of_WaitForBusy:
 10985                           	callstack 0
 10986                           
 10987 ;; *************** function _CantaIR *****************
 10988 ;; Defined at:
 10989 ;;		line 166 in file "LcTLCD.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  IR              1    wreg     unsigned char 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  IR              1    7[COMRAM] unsigned char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2, status,0, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1
 11003 ;;      Params:         0       0       0
 11004 ;;      Locals:         1       0       0
 11005 ;;      Temps:          0       0       0
 11006 ;;      Totals:         1       0       0
 11007 ;;Total ram usage:        1 bytes
 11008 ;; Hardware stack levels used: 1
 11009 ;; Hardware stack levels required when called: 3
 11010 ;; This function calls:
 11011 ;;		_CantaPartAlta
 11012 ;;		_CantaPartBaixa
 11013 ;; This function is called by:
 11014 ;;		_LcScroll
 11015 ;;		_LcInit
 11016 ;;		_LcClear
 11017 ;;		_LcGotoXY
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text85
 11022  0000'                    __ptext85:
 11023                           	callstack 0
 11024  0000'                    _CantaIR:
 11025                           	callstack 24
 11026                           
 11027                           ;incstack = 0
 11028                           ;CantaIR@IR stored from wreg
 11029  0000' 6E00'              	movwf	CantaIR@IR^0,c
 11030                           
 11031                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 11032  0002' 9694               	bcf	148,3,c	;volatile
 11033  0004' 9494               	bcf	148,2,c	;volatile
 11034  0006' 9294               	bcf	148,1,c	;volatile
 11035  0008' 9094               	bcf	148,0,c	;volatile
 11036                           
 11037                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 11038  000A' 9A8B               	bcf	139,5,c	;volatile
 11039                           
 11040                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 11041  000C' 9E8C               	bcf	140,7,c	;volatile
 11042                           
 11043                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 11044  000E' 888B               	bsf	139,4,c	;volatile
 11045                           
 11046                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 11047  0010' 5000'              	movf	CantaIR@IR^0,w,c
 11048  0012' EC00' F000'        	call	_CantaPartAlta
 11049                           
 11050                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 11051  0016' 888B               	bsf	139,4,c	;volatile
 11052                           
 11053                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 11054  0018' 988B               	bcf	139,4,c	;volatile
 11055                           
 11056                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 11057  001A' 988B               	bcf	139,4,c	;volatile
 11058                           
 11059                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 11060  001C' 888B               	bsf	139,4,c	;volatile
 11061                           
 11062                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 11063  001E' 5000'              	movf	CantaIR@IR^0,w,c
 11064  0020' EC00' F000'        	call	_CantaPartBaixa
 11065                           
 11066                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 11067  0024' 888B               	bsf	139,4,c	;volatile
 11068                           
 11069                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 11070  0026' 988B               	bcf	139,4,c	;volatile
 11071                           
 11072                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 11073  0028' 8694               	bsf	148,3,c	;volatile
 11074  002A' 8494               	bsf	148,2,c	;volatile
 11075  002C' 8294               	bsf	148,1,c	;volatile
 11076  002E' 8094               	bsf	148,0,c	;volatile
 11077  0030' 0012               	return		;funcret
 11078  0032'                    __end_of_CantaIR:
 11079                           	callstack 0
 11080                           
 11081 ;; *************** function _CantaPartBaixa *****************
 11082 ;; Defined at:
 11083 ;;		line 159 in file "LcTLCD.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  c               1    wreg     unsigned char 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  c               1    6[COMRAM] unsigned char 
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, status,2, status,0
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1
 11097 ;;      Params:         0       0       0
 11098 ;;      Locals:         1       0       0
 11099 ;;      Temps:          1       0       0
 11100 ;;      Totals:         2       0       0
 11101 ;;Total ram usage:        2 bytes
 11102 ;; Hardware stack levels used: 1
 11103 ;; Hardware stack levels required when called: 2
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_CantaIR
 11108 ;;		_CantaData
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text86
 11113  0000'                    __ptext86:
 11114                           	callstack 0
 11115  0000'                    _CantaPartBaixa:
 11116                           	callstack 24
 11117                           
 11118                           ;incstack = 0
 11119                           ;CantaPartBaixa@c stored from wreg
 11120  0000' 6E00'              	movwf	CantaPartBaixa@c^0,c
 11121                           
 11122                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 11123  0002' A600'              	btfss	CantaPartBaixa@c^0,3,c
 11124  0004' D003               	goto	u3800
 11125  0006' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11126  0008' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 11127  000A' D001               	goto	u3818
 11128  000C'                    u3800:
 11129  000C' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11130  000E'                    u3818:
 11131  000E' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11132  0010' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11133  0012' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11134  0014' 508B               	movf	139,w,c	;volatile
 11135  0016' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11136  0018' 0BF7               	andlw	-9
 11137  001A' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11138  001C' 6E8B               	movwf	139,c	;volatile
 11139                           
 11140                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 11141  001E' A400'              	btfss	CantaPartBaixa@c^0,2,c
 11142  0020' D003               	goto	u3820
 11143  0022' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11144  0024' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 11145  0026' D001               	goto	u3838
 11146  0028'                    u3820:
 11147  0028' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11148  002A'                    u3838:
 11149  002A' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11150  002C' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11151  002E' 508B               	movf	139,w,c	;volatile
 11152  0030' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11153  0032' 0BFB               	andlw	-5
 11154  0034' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11155  0036' 6E8B               	movwf	139,c	;volatile
 11156                           
 11157                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 11158  0038' A200'              	btfss	CantaPartBaixa@c^0,1,c
 11159  003A' D003               	goto	u3840
 11160  003C' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11161  003E' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 11162  0040' D001               	goto	u3858
 11163  0042'                    u3840:
 11164  0042' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11165  0044'                    u3858:
 11166  0044' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 11167  0046' 508B               	movf	139,w,c	;volatile
 11168  0048' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11169  004A' 0BFD               	andlw	-3
 11170  004C' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11171  004E' 6E8B               	movwf	139,c	;volatile
 11172                           
 11173                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 11174  0050' A000'              	btfss	CantaPartBaixa@c^0,0,c
 11175  0052' D003               	goto	u3860
 11176  0054' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11177  0056' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 11178  0058' D001               	goto	u3878
 11179  005A'                    u3860:
 11180  005A' 6A00'              	clrf	??_CantaPartBaixa^0,c
 11181  005C'                    u3878:
 11182  005C' 508B               	movf	139,w,c	;volatile
 11183  005E' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11184  0060' 0BFE               	andlw	-2
 11185  0062' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 11186  0064' 6E8B               	movwf	139,c	;volatile
 11187  0066' 0012               	return		;funcret
 11188  0068'                    __end_of_CantaPartBaixa:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _CantaPartAlta *****************
 11192 ;; Defined at:
 11193 ;;		line 152 in file "LcTLCD.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  c               1    wreg     unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  c               1    6[COMRAM] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1
 11207 ;;      Params:         0       0       0
 11208 ;;      Locals:         1       0       0
 11209 ;;      Temps:          1       0       0
 11210 ;;      Totals:         2       0       0
 11211 ;;Total ram usage:        2 bytes
 11212 ;; Hardware stack levels used: 1
 11213 ;; Hardware stack levels required when called: 2
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		_CantaIR
 11218 ;;		_CantaData
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text87
 11223  0000'                    __ptext87:
 11224                           	callstack 0
 11225  0000'                    _CantaPartAlta:
 11226                           	callstack 24
 11227                           
 11228                           ;incstack = 0
 11229                           ;CantaPartAlta@c stored from wreg
 11230  0000' 6E00'              	movwf	CantaPartAlta@c^0,c
 11231                           
 11232                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 11233  0002' AE00'              	btfss	CantaPartAlta@c^0,7,c
 11234  0004' D003               	goto	u3720
 11235  0006' 6A00'              	clrf	??_CantaPartAlta^0,c
 11236  0008' 2A00'              	incf	??_CantaPartAlta^0,f,c
 11237  000A' D001               	goto	u3738
 11238  000C'                    u3720:
 11239  000C' 6A00'              	clrf	??_CantaPartAlta^0,c
 11240  000E'                    u3738:
 11241  000E' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11242  0010' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11243  0012' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11244  0014' 508B               	movf	139,w,c	;volatile
 11245  0016' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11246  0018' 0BF7               	andlw	-9
 11247  001A' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11248  001C' 6E8B               	movwf	139,c	;volatile
 11249                           
 11250                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 11251  001E' AC00'              	btfss	CantaPartAlta@c^0,6,c
 11252  0020' D003               	goto	u3740
 11253  0022' 6A00'              	clrf	??_CantaPartAlta^0,c
 11254  0024' 2A00'              	incf	??_CantaPartAlta^0,f,c
 11255  0026' D001               	goto	u3758
 11256  0028'                    u3740:
 11257  0028' 6A00'              	clrf	??_CantaPartAlta^0,c
 11258  002A'                    u3758:
 11259  002A' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11260  002C' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11261  002E' 508B               	movf	139,w,c	;volatile
 11262  0030' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11263  0032' 0BFB               	andlw	-5
 11264  0034' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11265  0036' 6E8B               	movwf	139,c	;volatile
 11266                           
 11267                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 11268  0038' AA00'              	btfss	CantaPartAlta@c^0,5,c
 11269  003A' D003               	goto	u3760
 11270  003C' 6A00'              	clrf	??_CantaPartAlta^0,c
 11271  003E' 2A00'              	incf	??_CantaPartAlta^0,f,c
 11272  0040' D001               	goto	u3778
 11273  0042'                    u3760:
 11274  0042' 6A00'              	clrf	??_CantaPartAlta^0,c
 11275  0044'                    u3778:
 11276  0044' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 11277  0046' 508B               	movf	139,w,c	;volatile
 11278  0048' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11279  004A' 0BFD               	andlw	-3
 11280  004C' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11281  004E' 6E8B               	movwf	139,c	;volatile
 11282                           
 11283                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 11284  0050' A800'              	btfss	CantaPartAlta@c^0,4,c
 11285  0052' D003               	goto	u3780
 11286  0054' 6A00'              	clrf	??_CantaPartAlta^0,c
 11287  0056' 2A00'              	incf	??_CantaPartAlta^0,f,c
 11288  0058' D001               	goto	u3798
 11289  005A'                    u3780:
 11290  005A' 6A00'              	clrf	??_CantaPartAlta^0,c
 11291  005C'                    u3798:
 11292  005C' 508B               	movf	139,w,c	;volatile
 11293  005E' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11294  0060' 0BFE               	andlw	-2
 11295  0062' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 11296  0064' 6E8B               	movwf	139,c	;volatile
 11297  0066' 0012               	return		;funcret
 11298  0068'                    __end_of_CantaPartAlta:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function _Espera *****************
 11302 ;; Defined at:
 11303 ;;		line 147 in file "LcTLCD.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  Timer           1    wreg     unsigned char 
 11306 ;;  ms              2   12[COMRAM] int 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;  Timer           1   15[COMRAM] unsigned char 
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1
 11318 ;;      Params:         2       0       0
 11319 ;;      Locals:         1       0       0
 11320 ;;      Temps:          1       0       0
 11321 ;;      Totals:         4       0       0
 11322 ;;Total ram usage:        4 bytes
 11323 ;; Hardware stack levels used: 1
 11324 ;; Hardware stack levels required when called: 3
 11325 ;; This function calls:
 11326 ;;		_TiGetTics
 11327 ;;		_TiResetTics
 11328 ;; This function is called by:
 11329 ;;		_LcInit
 11330 ;;		_LcClear
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text88
 11335  0000'                    __ptext88:
 11336                           	callstack 0
 11337  0000'                    _Espera:
 11338                           	callstack 25
 11339                           
 11340                           ;incstack = 0
 11341                           ;Espera@Timer stored from wreg
 11342  0000' 6E00'              	movwf	Espera@Timer^0,c
 11343                           
 11344                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 11345  0002' 5000'              	movf	Espera@Timer^0,w,c
 11346  0004' EC00' F000'        	call	_TiResetTics
 11347  0008'                    l4418:
 11348  0008' 5000'              	movf	Espera@Timer^0,w,c
 11349  000A' EC00' F000'        	call	_TiGetTics
 11350  000E' 5000'              	movf	Espera@ms^0,w,c
 11351  0010' 5C00'              	subwf	?_TiGetTics^0,w,c
 11352  0012' 5000'              	movf	(?_TiGetTics+1)^0,w,c
 11353  0014' 0A80               	xorlw	128
 11354  0016' 6E00'              	movwf	??_Espera^0,c
 11355  0018' 5000'              	movf	(Espera@ms+1)^0,w,c
 11356  001A' 0A80               	xorlw	128
 11357  001C' 5800'              	subwfb	??_Espera^0,w,c
 11358  001E' B0D8               	btfsc	status,0,c
 11359  0020' 0012               	return	
 11360  0022' D7F2               	goto	l4418
 11361  0024'                    __end_of_Espera:
 11362                           	callstack 0
 11363                           
 11364 ;; *************** function _TiResetTics *****************
 11365 ;; Defined at:
 11366 ;;		line 55 in file "TiTTimer.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;  Handle          1    wreg     unsigned char 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  Handle          1    5[COMRAM] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1
 11380 ;;      Params:         0       0       0
 11381 ;;      Locals:         1       0       0
 11382 ;;      Temps:          0       0       0
 11383 ;;      Totals:         1       0       0
 11384 ;;Total ram usage:        1 bytes
 11385 ;; Hardware stack levels used: 1
 11386 ;; Hardware stack levels required when called: 2
 11387 ;; This function calls:
 11388 ;;		Nothing
 11389 ;; This function is called by:
 11390 ;;		_Espera
 11391 ;;		_WaitForBusy
 11392 ;;		_SMotor
 11393 ;;		_TeTeclat
 11394 ;;		_menu
 11395 ;;		_motorAltaveu
 11396 ;;		_GLCDMotor
 11397 ;;		_motorHora
 11398 ;;		_motorSIO
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text89
 11403  0000'                    __ptext89:
 11404                           	callstack 0
 11405  0000'                    _TiResetTics:
 11406                           	callstack 27
 11407                           
 11408                           ;incstack = 0
 11409                           ;TiResetTics@Handle stored from wreg
 11410  0000' 6E00'              	movwf	TiResetTics@Handle^0,c
 11411                           
 11412                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 11413  0002' 5000'              	movf	TiResetTics@Handle^0,w,c
 11414  0004' 0D03               	mullw	3
 11415  0006' 50F3               	movf	243,w,c
 11416  0008' 0F00'              	addlw	low _s_Timers
 11417  000A' 6ED9               	movwf	fsr2l,c
 11418  000C' 6ADA               	clrf	fsr2h,c
 11419  000E' C008' FFDE         	movff	_h_Tics,postinc2
 11420  0012' C009' FFDD         	movff	_h_Tics+1,postdec2
 11421  0016' 0012               	return		;funcret
 11422  0018'                    __end_of_TiResetTics:
 11423                           	callstack 0
 11424                           
 11425 ;; *************** function _TiGetTics *****************
 11426 ;; Defined at:
 11427 ;;		line 61 in file "TiTTimer.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  Handle          1    wreg     unsigned char 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;  Handle          1    9[COMRAM] unsigned char 
 11432 ;;  actual          2   10[COMRAM] volatile unsigned int 
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  2    5[COMRAM] int 
 11435 ;; Registers used:
 11436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMRAM   BANK0   BANK1
 11442 ;;      Params:         2       0       0
 11443 ;;      Locals:         3       0       0
 11444 ;;      Temps:          2       0       0
 11445 ;;      Totals:         7       0       0
 11446 ;;Total ram usage:        7 bytes
 11447 ;; Hardware stack levels used: 1
 11448 ;; Hardware stack levels required when called: 2
 11449 ;; This function calls:
 11450 ;;		Nothing
 11451 ;; This function is called by:
 11452 ;;		_Espera
 11453 ;;		_WaitForBusy
 11454 ;;		_SMotor
 11455 ;;		_TeTeclat
 11456 ;;		_menu
 11457 ;;		_motorAltaveu
 11458 ;;		_GLCDMotor
 11459 ;;		_motorHora
 11460 ;;		_motorSIO
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text90
 11465  0000'                    __ptext90:
 11466                           	callstack 0
 11467  0000'                    _TiGetTics:
 11468                           	callstack 27
 11469                           
 11470                           ;incstack = 0
 11471                           ;TiGetTics@Handle stored from wreg
 11472  0000' 6E00'              	movwf	TiGetTics@Handle^0,c
 11473                           
 11474                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 11475  0002' C008' F00A'        	movff	_h_Tics,TiGetTics@actual	;volatile
 11476  0006' C009' F00B'        	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 11477                           
 11478                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 11479  000A' 5000'              	movf	TiGetTics@Handle^0,w,c
 11480  000C' 0D03               	mullw	3
 11481  000E' 50F3               	movf	243,w,c
 11482  0010' 0F00'              	addlw	low _s_Timers
 11483  0012' 6ED9               	movwf	fsr2l,c
 11484  0014' 6ADA               	clrf	fsr2h,c
 11485  0016' CFDE F007'         	movff	postinc2,??_TiGetTics
 11486  001A' CFDD F008'         	movff	postdec2,??_TiGetTics+1
 11487  001E' 5000'              	movf	??_TiGetTics^0,w,c
 11488  0020' 5C00'              	subwf	TiGetTics@actual^0,w,c	;volatile
 11489  0022' 6E00'              	movwf	?_TiGetTics^0,c
 11490  0024' 5000'              	movf	(??_TiGetTics+1)^0,w,c
 11491  0026' 5800'              	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 11492  0028' 6E00'              	movwf	(?_TiGetTics+1)^0,c
 11493  002A' 0012               	return		;funcret
 11494  002C'                    __end_of_TiGetTics:
 11495                           	callstack 0
 11496                           
 11497 ;; *************** function _GLCDInit *****************
 11498 ;; Defined at:
 11499 ;;		line 26 in file "GestioLCD.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;		None
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1    wreg      void 
 11506 ;; Registers used:
 11507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1
 11513 ;;      Params:         0       0       0
 11514 ;;      Locals:         0       0       0
 11515 ;;      Temps:          0       0       0
 11516 ;;      Totals:         0       0       0
 11517 ;;Total ram usage:        0 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 3
 11520 ;; This function calls:
 11521 ;;		_TiGetTimer
 11522 ;; This function is called by:
 11523 ;;		_main
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text91
 11528  0000'                    __ptext91:
 11529                           	callstack 0
 11530  0000'                    _GLCDInit:
 11531                           	callstack 27
 11532                           
 11533                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 11534                           
 11535                           ;incstack = 0
 11536  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
 11537  0004' 6E00'              	movwf	_timerGLCD^0,c
 11538  0006' 0012               	return		;funcret
 11539  0008'                    __end_of_GLCDInit:
 11540                           	callstack 0
 11541                           
 11542 ;; *************** function _TiGetTimer *****************
 11543 ;; Defined at:
 11544 ;;		line 70 in file "TiTTimer.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      unsigned char 
 11551 ;; Registers used:
 11552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1
 11558 ;;      Params:         0       0       0
 11559 ;;      Locals:         0       0       0
 11560 ;;      Temps:          1       0       0
 11561 ;;      Totals:         1       0       0
 11562 ;;Total ram usage:        1 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; Hardware stack levels required when called: 2
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_LcInit
 11569 ;;		_Sinit
 11570 ;;		_TeInit
 11571 ;;		_Minit
 11572 ;;		_initAltaveu
 11573 ;;		_GLCDInit
 11574 ;;		_initHora
 11575 ;;		_initSIO
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           	psect	text92
 11580  0000'                    __ptext92:
 11581                           	callstack 0
 11582  0000'                    _TiGetTimer:
 11583                           	callstack 27
 11584                           
 11585                           ;TiTTimer.c: 74:     counter=0;
 11586                           
 11587                           ;incstack = 0
 11588  0000' 0E00               	movlw	0
 11589  0002' 6E00'              	movwf	_counter^0,c
 11590                           
 11591                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11592  0004' D007               	goto	l4482
 11593  0006'                    l4474:
 11594                           
 11595                           ;TiTTimer.c: 76:         counter++;
 11596  0006' 2A00'              	incf	_counter^0,f,c
 11597                           
 11598                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 11599  0008' 0E08               	movlw	8
 11600  000A' 1800'              	xorwf	_counter^0,w,c
 11601  000C' A4D8               	btfss	status,2,c
 11602  000E' D002               	goto	l4482
 11603  0010' 0EFF               	movlw	255
 11604  0012' 0012               	return	
 11605  0014'                    l4482:
 11606                           
 11607                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11608  0014' 5000'              	movf	_counter^0,w,c
 11609  0016' 0D03               	mullw	3
 11610  0018' 50F3               	movf	243,w,c
 11611  001A' 0F00'              	addlw	low (_s_Timers+2)
 11612  001C' 6ED9               	movwf	fsr2l,c
 11613  001E' 6ADA               	clrf	fsr2h,c
 11614  0020' 04DE               	decf	postinc2,w,c
 11615  0022' B4D8               	btfsc	status,2,c
 11616  0024' D7F0               	goto	l4474
 11617                           
 11618                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 11619  0026' 5000'              	movf	_counter^0,w,c
 11620  0028' 0D03               	mullw	3
 11621  002A' 50F3               	movf	243,w,c
 11622  002C' 0F00'              	addlw	low (_s_Timers+2)
 11623  002E' 6ED9               	movwf	fsr2l,c
 11624  0030' 6ADA               	clrf	fsr2h,c
 11625  0032' 0E01               	movlw	1
 11626  0034' 6EDF               	movwf	indf2,c
 11627                           
 11628                           ;TiTTimer.c: 80:     return (counter);
 11629  0036' 5000'              	movf	_counter^0,w,c
 11630  0038' 0012               	return		;funcret
 11631  003A'                    __end_of_TiGetTimer:
 11632                           	callstack 0
 11633                           
 11634 ;; *************** function _CtoA *****************
 11635 ;; Defined at:
 11636 ;;		line 22 in file "CtoA.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;		None
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;		None
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  1    wreg      void 
 11643 ;; Registers used:
 11644 ;;		wreg, status,2, status,0
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1
 11650 ;;      Params:         0       0       0
 11651 ;;      Locals:         0       0       0
 11652 ;;      Temps:          0       0       0
 11653 ;;      Totals:         0       0       0
 11654 ;;Total ram usage:        0 bytes
 11655 ;; Hardware stack levels used: 1
 11656 ;; Hardware stack levels required when called: 2
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_main
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text93
 11665  0000'                    __ptext93:
 11666                           	callstack 0
 11667  0000'                    _CtoA:
 11668                           	callstack 28
 11669                           
 11670                           ;CtoA.c: 23:     if (convertir != 250) {
 11671                           
 11672                           ;incstack = 0
 11673  0000' 0EFA               	movlw	250
 11674  0002' 1800'              	xorwf	_convertir^0,w,c
 11675  0004' B4D8               	btfsc	status,2,c
 11676  0006' 0012               	return	
 11677                           
 11678                           ;CtoA.c: 24:         if (convertir != 0){
 11679  0008' 5000'              	movf	_convertir^0,w,c
 11680  000A' B4D8               	btfsc	status,2,c
 11681  000C' D00A               	goto	l3804
 11682                           
 11683                           ;CtoA.c: 25:             stringScore[1]++;
 11684  000E' 2A00'              	incf	(_stringScore+1)^0,f,c
 11685                           
 11686                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 11687  0010' 0E3A               	movlw	58
 11688  0012' 1800'              	xorwf	(_stringScore+1)^0,w,c
 11689  0014' A4D8               	btfss	status,2,c
 11690  0016' D003               	goto	l3802
 11691                           
 11692                           ;CtoA.c: 27:                 stringScore[1] = '0';
 11693  0018' 0E30               	movlw	48
 11694  001A' 6E00'              	movwf	(_stringScore+1)^0,c
 11695                           
 11696                           ;CtoA.c: 28:                 stringScore[0]++;
 11697  001C' 2A00'              	incf	_stringScore^0,f,c
 11698  001E'                    l3802:
 11699                           
 11700                           ;CtoA.c: 30:             convertir--;
 11701  001E' 0600'              	decf	_convertir^0,f,c
 11702                           
 11703                           ;CtoA.c: 31:         } else {
 11704  0020' 0012               	return	
 11705  0022'                    l3804:
 11706                           
 11707                           ;CtoA.c: 32:             convertir = 250;
 11708  0022' 0EFA               	movlw	250
 11709  0024' 6E00'              	movwf	_convertir^0,c
 11710  0026' 0012               	return		;funcret
 11711  0028'                    __end_of_CtoA:
 11712                           	callstack 0
 11713                           
 11714 ;; *************** function _high_rsi *****************
 11715 ;; Defined at:
 11716 ;;		line 20 in file "main.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;		None
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;		None
 11721 ;; Return value:  Size  Location     Type
 11722 ;;                  1    wreg      void 
 11723 ;; Registers used:
 11724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11725 ;; Tracked objects:
 11726 ;;		On entry : 0/0
 11727 ;;		On exit  : 0/0
 11728 ;;		Unchanged: 0/0
 11729 ;; Data sizes:     COMRAM   BANK0   BANK1
 11730 ;;      Params:         0       0       0
 11731 ;;      Locals:         0       0       0
 11732 ;;      Temps:          4       0       0
 11733 ;;      Totals:         4       0       0
 11734 ;;Total ram usage:        4 bytes
 11735 ;; Hardware stack levels used: 1
 11736 ;; Hardware stack levels required when called: 1
 11737 ;; This function calls:
 11738 ;;		__TiRSITimer
 11739 ;; This function is called by:
 11740 ;;		Interrupt level 2
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           	psect	intcode
 11745  0000'                    __pintcode:
 11746                           	callstack 0
 11747  0000'                    _high_rsi:
 11748                           	callstack 24
 11749                           
 11750                           ;incstack = 0
 11751  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11752  0002' CFD9 F001'         	movff	fsr2l,??_high_rsi
 11753  0006' CFDA F002'         	movff	fsr2h,??_high_rsi+1
 11754  000A' CFF3 F003'         	movff	prodl,??_high_rsi+2
 11755  000E' CFF4 F004'         	movff	prodh,??_high_rsi+3
 11756  0012' EC00' F000'        	call	__TiRSITimer	;wreg free
 11757  0016' C004' FFF4         	movff	??_high_rsi+3,prodh
 11758  001A' C003' FFF3         	movff	??_high_rsi+2,prodl
 11759  001E' C002' FFDA         	movff	??_high_rsi+1,fsr2h
 11760  0022' C001' FFD9         	movff	??_high_rsi,fsr2l
 11761  0026' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11762  0028' 0011               	retfie		f
 11763  002A'                    __end_of_high_rsi:
 11764                           	callstack 0
 11765                           
 11766 ;; *************** function __TiRSITimer *****************
 11767 ;; Defined at:
 11768 ;;		line 37 in file "TiTTimer.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1
 11782 ;;      Params:         0       0       0
 11783 ;;      Locals:         0       0       0
 11784 ;;      Temps:          1       0       0
 11785 ;;      Totals:         1       0       0
 11786 ;;Total ram usage:        1 bytes
 11787 ;; Hardware stack levels used: 1
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_high_rsi
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text95
 11796  0000'                    __ptext95:
 11797                           	callstack 0
 11798  0000'                    __TiRSITimer:
 11799                           	callstack 24
 11800                           
 11801                           ;TiTTimer.c: 39:     TMR0H = 223;
 11802                           
 11803                           ;incstack = 0
 11804  0000' 0EDF               	movlw	223
 11805  0002' 6ED7               	movwf	215,c	;volatile
 11806                           
 11807                           ;TiTTimer.c: 40:     TMR0L = 148;
 11808  0004' 0E94               	movlw	148
 11809  0006' 6ED6               	movwf	214,c	;volatile
 11810                           
 11811                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11812  0008' 94F2               	bcf	242,2,c	;volatile
 11813                           
 11814                           ;TiTTimer.c: 42:     h_Tics++;
 11815  000A' 4A00'              	infsnz	_h_Tics^0,f,c
 11816  000C' 2A00'              	incf	(_h_Tics+1)^0,f,c
 11817                           
 11818                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11819  000E' 0E48               	movlw	72
 11820  0010' 5C00'              	subwf	_h_Tics^0,w,c
 11821  0012' 0EEE               	movlw	238
 11822  0014' 5800'              	subwfb	(_h_Tics+1)^0,w,c
 11823  0016' A0D8               	btfss	status,0,c
 11824  0018' 0012               	return	
 11825                           
 11826                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11827  001A' 0E00               	movlw	0
 11828  001C' 6E00'              	movwf	_counter^0,c
 11829  001E'                    i2l4782:
 11830  001E' 0E07               	movlw	7
 11831  0020' 6400'              	cpfsgt	_counter^0,c
 11832  0022' D001               	goto	i2l4786
 11833  0024' D015               	goto	i2l4794
 11834  0026'                    i2l4786:
 11835                           
 11836                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11837  0026' 5000'              	movf	_counter^0,w,c
 11838  0028' 0D03               	mullw	3
 11839  002A' 50F3               	movf	243,w,c
 11840  002C' 0F00'              	addlw	low (_s_Timers+2)
 11841  002E' 6ED9               	movwf	fsr2l,c
 11842  0030' 6ADA               	clrf	fsr2h,c
 11843  0032' 04DE               	decf	postinc2,w,c
 11844  0034' A4D8               	btfss	status,2,c
 11845  0036' D00A               	goto	i2l4790
 11846                           
 11847                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11848  0038' 5000'              	movf	_counter^0,w,c
 11849  003A' 0D03               	mullw	3
 11850  003C' 50F3               	movf	243,w,c
 11851  003E' 0F00'              	addlw	low _s_Timers
 11852  0040' 6ED9               	movwf	fsr2l,c
 11853  0042' 6ADA               	clrf	fsr2h,c
 11854  0044' 5000'              	movf	_h_Tics^0,w,c
 11855  0046' 5EDE               	subwf	postinc2,f,c
 11856  0048' 5000'              	movf	(_h_Tics+1)^0,w,c
 11857  004A' 5ADD               	subwfb	postdec2,f,c
 11858  004C'                    i2l4790:
 11859                           
 11860                           ;TiTTimer.c: 50:         }
 11861  004C' 2A00'              	incf	_counter^0,f,c
 11862  004E' D7E7               	goto	i2l4782
 11863  0050'                    i2l4794:
 11864                           
 11865                           ;TiTTimer.c: 51:         h_Tics=0;
 11866  0050' 0E00               	movlw	0
 11867  0052' 6E00'              	movwf	(_h_Tics+1)^0,c
 11868  0054' 0E00               	movlw	0
 11869  0056' 6E00'              	movwf	_h_Tics^0,c
 11870  0058' 0012               	return		;funcret
 11871  005A'                    __end_of__TiRSITimer:
 11872                           	callstack 0
 11873                           
 11874                           	psect	rparam
 11875  0000                     
 11876                           	psect	temp
 11877  0000'                    btemp:
 11878                           	callstack 0
 11879  0000'                    	ds	1
 11880  0000                     int$flags	set	btemp
 11881  0000                     wtemp8	set	btemp+1
 11882  0000                     ttemp5	set	btemp+1
 11883  0000                     ttemp6	set	btemp+4
 11884  0000                     ttemp7	set	btemp+8
 11885                           
 11886                           	psect	idloc
 11887                           
 11888                           ;Config register IDLOC0 @ 0x200000
 11889                           ;	unspecified, using default values
 11890  200000                     	org	2097152
 11891  200000  FF                 	db	255
 11892                           
 11893                           ;Config register IDLOC1 @ 0x200001
 11894                           ;	unspecified, using default values
 11895  200001                     	org	2097153
 11896  200001  FF                 	db	255
 11897                           
 11898                           ;Config register IDLOC2 @ 0x200002
 11899                           ;	unspecified, using default values
 11900  200002                     	org	2097154
 11901  200002  FF                 	db	255
 11902                           
 11903                           ;Config register IDLOC3 @ 0x200003
 11904                           ;	unspecified, using default values
 11905  200003                     	org	2097155
 11906  200003  FF                 	db	255
 11907                           
 11908                           ;Config register IDLOC4 @ 0x200004
 11909                           ;	unspecified, using default values
 11910  200004                     	org	2097156
 11911  200004  FF                 	db	255
 11912                           
 11913                           ;Config register IDLOC5 @ 0x200005
 11914                           ;	unspecified, using default values
 11915  200005                     	org	2097157
 11916  200005  FF                 	db	255
 11917                           
 11918                           ;Config register IDLOC6 @ 0x200006
 11919                           ;	unspecified, using default values
 11920  200006                     	org	2097158
 11921  200006  FF                 	db	255
 11922                           
 11923                           ;Config register IDLOC7 @ 0x200007
 11924                           ;	unspecified, using default values
 11925  200007                     	org	2097159
 11926  200007  FF                 	db	255
 11927                           
 11928                           	psect	config
 11929                           
 11930                           ; Padding undefined space
 11931  300000                     	org	3145728
 11932  300000  FF                 	db	255
 11933                           
 11934                           ;Config register CONFIG1H @ 0x300001
 11935                           ;	Oscillator
 11936                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11937                           ;	Fail-Safe Clock Monitor Enable bit
 11938                           ;	FCMEN = 0x0, unprogrammed default
 11939                           ;	Internal/External Oscillator Switchover bit
 11940                           ;	IESO = 0x0, unprogrammed default
 11941  300001                     	org	3145729
 11942  300001  06                 	db	6
 11943                           
 11944                           ;Config register CONFIG2L @ 0x300002
 11945                           ;	unspecified, using default values
 11946                           ;	Power-up Timer Enable bit
 11947                           ;	PWRT = 0x1, unprogrammed default
 11948                           ;	Brown-out Reset Enable bits
 11949                           ;	BOR = 0x3, unprogrammed default
 11950                           ;	Brown-out Reset Voltage bits
 11951                           ;	BORV = 0x3, unprogrammed default
 11952  300002                     	org	3145730
 11953  300002  1F                 	db	31
 11954                           
 11955                           ;Config register CONFIG2H @ 0x300003
 11956                           ;	Watchdog Timer Enable bit
 11957                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11958                           ;	Watchdog Timer Postscale Select bits
 11959                           ;	WDTPS = 0xF, unprogrammed default
 11960  300003                     	org	3145731
 11961  300003  1E                 	db	30
 11962                           
 11963                           ; Padding undefined space
 11964  300004                     	org	3145732
 11965  300004  FF                 	db	255
 11966                           
 11967                           ;Config register CONFIG3H @ 0x300005
 11968                           ;	CCP2 MUX bit
 11969                           ;	CCP2MX = 0x1, unprogrammed default
 11970                           ;	PORTB A/D Enable bit
 11971                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11972                           ;	Low-Power Timer1 Oscillator Enable bit
 11973                           ;	LPT1OSC = 0x0, unprogrammed default
 11974                           ;	MCLR Pin Enable bit
 11975                           ;	MCLRE = 0x1, unprogrammed default
 11976  300005                     	org	3145733
 11977  300005  81                 	db	129
 11978                           
 11979                           ;Config register CONFIG4L @ 0x300006
 11980                           ;	Stack Full/Underflow Reset Enable bit
 11981                           ;	STVREN = 0x1, unprogrammed default
 11982                           ;	Single-Supply ICSP Enable bit
 11983                           ;	LVP = OFF, Single-Supply ICSP disabled
 11984                           ;	Boot Block Size Select bits
 11985                           ;	BBSIZ = 0x0, unprogrammed default
 11986                           ;	Extended Instruction Set Enable bit
 11987                           ;	XINST = 0x0, unprogrammed default
 11988                           ;	Background Debugger Enable bit
 11989                           ;	DEBUG = 0x1, unprogrammed default
 11990  300006                     	org	3145734
 11991  300006  81                 	db	129
 11992                           
 11993                           ; Padding undefined space
 11994  300007                     	org	3145735
 11995  300007  FF                 	db	255
 11996                           
 11997                           ;Config register CONFIG5L @ 0x300008
 11998                           ;	unspecified, using default values
 11999                           ;	Code Protection bit
 12000                           ;	CP0 = 0x1, unprogrammed default
 12001                           ;	Code Protection bit
 12002                           ;	CP1 = 0x1, unprogrammed default
 12003  300008                     	org	3145736
 12004  300008  03                 	db	3
 12005                           
 12006                           ;Config register CONFIG5H @ 0x300009
 12007                           ;	unspecified, using default values
 12008                           ;	Boot Block Code Protection bitProtect Boot
 12009                           ;	CPB = 0x1, unprogrammed default
 12010                           ;	Data EEPROM Code Protection bit
 12011                           ;	CPD = 0x1, unprogrammed default
 12012  300009                     	org	3145737
 12013  300009  C0                 	db	192
 12014                           
 12015                           ;Config register CONFIG6L @ 0x30000A
 12016                           ;	unspecified, using default values
 12017                           ;	Write Protection bit
 12018                           ;	WRT0 = 0x1, unprogrammed default
 12019                           ;	Write Protection bit
 12020                           ;	WRT1 = 0x1, unprogrammed default
 12021  30000A                     	org	3145738
 12022  30000A  03                 	db	3
 12023                           
 12024                           ;Config register CONFIG6H @ 0x30000B
 12025                           ;	unspecified, using default values
 12026                           ;	Configuration Register Write Protection bit
 12027                           ;	WRTC = 0x1, unprogrammed default
 12028                           ;	Boot Block Write Protection bit
 12029                           ;	WRTB = 0x1, unprogrammed default
 12030                           ;	Data EEPROM Write Protection bit
 12031                           ;	WRTD = 0x1, unprogrammed default
 12032  30000B                     	org	3145739
 12033  30000B  E0                 	db	224
 12034                           
 12035                           ;Config register CONFIG7L @ 0x30000C
 12036                           ;	unspecified, using default values
 12037                           ;	Table Read Protection bit
 12038                           ;	EBTR0 = 0x1, unprogrammed default
 12039                           ;	Table Read Protection bit
 12040                           ;	EBTR1 = 0x1, unprogrammed default
 12041  30000C                     	org	3145740
 12042  30000C  03                 	db	3
 12043                           
 12044                           ;Config register CONFIG7H @ 0x30000D
 12045                           ;	unspecified, using default values
 12046                           ;	Boot Block Table Read Protection bit
 12047                           ;	EBTRB = 0x1, unprogrammed default
 12048  30000D                     	org	3145741
 12049  30000D  40                 	db	64
 12050                           tosu	equ	0xFFF
 12051                           tosh	equ	0xFFE
 12052                           tosl	equ	0xFFD
 12053                           stkptr	equ	0xFFC
 12054                           pclatu	equ	0xFFB
 12055                           pclath	equ	0xFFA
 12056                           pcl	equ	0xFF9
 12057                           tblptru	equ	0xFF8
 12058                           tblptrh	equ	0xFF7
 12059                           tblptrl	equ	0xFF6
 12060                           tablat	equ	0xFF5
 12061                           prodh	equ	0xFF4
 12062                           prodl	equ	0xFF3
 12063                           indf0	equ	0xFEF
 12064                           postinc0	equ	0xFEE
 12065                           postdec0	equ	0xFED
 12066                           preinc0	equ	0xFEC
 12067                           plusw0	equ	0xFEB
 12068                           fsr0h	equ	0xFEA
 12069                           fsr0l	equ	0xFE9
 12070                           wreg	equ	0xFE8
 12071                           indf1	equ	0xFE7
 12072                           postinc1	equ	0xFE6
 12073                           postdec1	equ	0xFE5
 12074                           preinc1	equ	0xFE4
 12075                           plusw1	equ	0xFE3
 12076                           fsr1h	equ	0xFE2
 12077                           fsr1l	equ	0xFE1
 12078                           bsr	equ	0xFE0
 12079                           indf2	equ	0xFDF
 12080                           postinc2	equ	0xFDE
 12081                           postdec2	equ	0xFDD
 12082                           preinc2	equ	0xFDC
 12083                           plusw2	equ	0xFDB
 12084                           fsr2h	equ	0xFDA
 12085                           fsr2l	equ	0xFD9
 12086                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    158
    Data        54
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     120
    BANK0           128      5      92
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40265
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    4     2      2      22
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          4     4      0     916
                                             10 COMRAM     4     4      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              9 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      5C       4       71.9%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     164       7        0.0%
DATA                 0      0     164       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 10 13:01:13 2022

               TiResetTics@Handle 000005                  _loginNOTRegister 000010  
                               _i 000029                                 _j 000028  
                UgetUserName@quin 000007         ??_UcheckExistsNotFinished 000005  
       __size_of_llegirCharEEPROM 000000            __end_of_compareStrings 000046  
                             l511 000054                               l541 0001EC  
                             l631 00066A                               l608 0004E2  
                             l538 0001C4                               l539 0001D8  
                             l726 00001C                               l770 000018  
                             l772 000022                               l774 00003E  
                             l871 000002                               l952 000092  
                             l784 0000A8                               l777 000070  
                             l769 000002                               l778 000066  
                             l964 000126                               l982 0002CC  
                             l984 0002FC                               u310 00006A  
                             u250 00001C                               u308 000054  
                             u270 000038                               u328 00006C  
                             u290 000052                               u268 00001E  
                             u288 00003A                               _pos 00002E  
                             _tmp 000032                  ??_CantaPartBaixa 000005  
                             prod 000FF3                               wreg 000FE8  
     __size_of_calculateShowUsers 000000                       _ultimaTecla 00000F  
              __size_of_GLCDMotor 000000                              l1021 000002  
                            l1030 00005C                              l1022 00001C  
                            l1031 000076                              l1024 000040  
                            l1033 00009A                              l1029 0000D2  
                            l1321 0002A6                              l1170 000016  
                            l1307 0001B6                              l3200 00008E  
                            l2400 000026                              l1290 00008A  
                            l1292 0000B4                              l3214 0000B2  
                            l2406 000032                              l3224 0000B6  
                            l2424 000008                              l3162 000034  
                            l3154 000018                              l1299 00011C  
                            l5100 000024                              l5014 00021A  
                            l5102 000028                              l5008 00020A  
                            l3192 000072                              l3176 000058  
                            l2368 000008                              l5120 00006E  
                            l2394 00001A                              l5060 00030A  
                            l5052 0002F6                              l5044 0002D6  
                            l5036 0002A6                              l5028 000276  
                            l6100 0001D2                              l6012 00006A  
                            l2388 00000E                              l5108 00003A  
                            l5070 000326                              l6110 0001FA  
                            l5126 000084                              l5134 000092  
                            l5230 000138                              l5150 000018  
                            l5142 000002                              l4424 000010  
                            l5064 000312                              l5080 000370  
                            l6024 0000A4                              l5160 000030  
                            l5152 00001C                              l5320 0002B6  
                     _puntuacions 000018                              l3802 00001E  
                            l4418 000008                              l4522 000046  
                            l4514 00002C                              l5074 00034C  
                            l6210 0000AC                              l6122 00023E  
                            l6106 0001EA                              l6042 0000E4  
                            l6026 0000AA                              l6018 00007C  
                            l7010 000422                              l5314 0002A8  
                            l5306 000276                              l3804 000022  
                            l4532 000008                              l4516 000036  
                            l6204 00009E                              l6132 000262  
                            l6060 000146                              l6052 000134  
                            l6028 0000AE                              l4604 000008  
                            l5180 000070                              l6310 0000CC  
                            l6302 0000B0                              l6230 00011A  
                            l6214 0000B8                              l4702 00002E  
                            l4462 00001E                              l6038 0000DE  
                            l4630 000008                              l7022 000448  
                            l5350 000042                              l5238 000168  
                            l5174 000060                              l4392 000012  
                            l6224 00010C                              l4456 000002  
                            l6152 0002A6                              l6144 00028E  
                            l6128 00025A                              l6080 00019C  
                            l6072 000168                              l4552 000008  
                            l7104 0005C6                              l7040 000474  
                            l7032 000466                              l5344 000034  
                            l5328 000002                              l5088 000002  
                            l5256 0001C6                              l5248 00019C  
                            l5168 000054                              l4474 000006  
                            l4482 000014                              l6234 000122  
                            l6218 0000C4                              l6170 000044  
                            l4802 00001C                              l4706 000036  
                            l6138 00027E                              l6066 000154  
                            l6162 0002E6                              l7114 0005E0  
                            l7106 0005CC                              l5282 000228  
                            l5266 0001EE                              l5258 0001CA  
                            l4724 000022                              l6324 0000F6  
                            l6316 0000E2                              l6260 000016  
                            l6252 000002                              l6404 0001BA  
                            l6244 00013A                              l6092 0001B4  
                            l7140 000670                              l7124 00061C  
                            l5356 000050                              l5292 00024C  
                            l5276 000218                              l4910 000044  
                            l6326 000102                              l6238 00012E  
                            l6182 000064                              l4806 000024  
                            l6094 0001BA                              l4566 000022  
                            l7150 0006C0                              l7118 0005EA  
                            l7070 0004FE                              l7062 0004DE  
                            l7054 0004AE                              l7046 000482  
                            l5366 000070                              l5374 000080  
                            l4904 000036                              l6360 00016C  
                            l6344 000146                              l6336 000128  
                            l6328 000108                              l6192 00007A  
                            l6184 00006A                              l6176 000054  
                            l4840 00002A                              l4832 000016  
                            l6088 0001AA                              l7080 000570  
                            l7064 0004E8                              l6178 000058  
                            l4690 000012                              l7170 000714  
                            l7162 0006FE                              l7090 0005A4  
                            l7082 000576                              l7074 000520  
                            l5378 000086                              l7218 000036  
                            l4924 0000A0                              l6380 00019E  
                            l6348 00014A                              l6284 000074  
                            l6276 00004C                              l4852 000042  
                            l7164 000704                              l6700 0000B4  
                            l4918 000070                              l6374 000190  
                            l6366 000176                              l6294 00009A  
                            l6198 000088                              l4694 000018  
                            l4846 00003E                              l7094 0005AE  
                            l7086 000592                              l6710 0000DC  
                            l6702 0000BA                              l4952 000116  
                            l6384 0001A6                              l4880 0000C4  
                            l7176 000738                              l7096 0005B4  
                            l6712 0000E2                              l4946 000102  
                            l4938 0000F4                              l4866 000078  
                            l7186 00074C                              l6650 000002  
                            l7194 000758                              l4884 0000CC  
                            l4876 0000B4                              l6900 0002FC  
                            l6716 0000EC                              l4982 000160  
                            l4894 000002                              l6814 000208  
                            l6742 000130                              l6670 000042  
                            l5950 000026                              l4992 0001A8  
                            l6752 000158                              l6744 000136  
                            l6728 000104                              l6672 000048  
                            l6656 000016                              l5944 00001A  
                            l6914 000326                              l6842 000244  
                            l6834 000232                              l6826 000220  
                            l6770 000180                              l6754 00015E  
                            l6666 00003A                              l4988 000186  
                            l6924 000352                              l6916 00032C  
                            l6692 00009A                              l6684 000072  
                            l5964 000062                              l5956 000036  
                            l5948 000022                              l4998 0001D2  
                            l6854 000272                              l6758 000168  
                            l6928 00036A                              l5976 00008E  
                            l5994 00001E                              l6882 0002CE  
                            l6948 0003A4                              l6884 0002D4  
                            l6868 0002A0                              l6788 0001B0  
                            l6982 0003EA                              l6966 0003CA  
                            l6798 0001D2                              l6994 00040A  
                            l6998 00040E                              STR_1 0000E8  
                            STR_2 0000E1                              STR_3 0000C8  
                            STR_4 0000AF                              STR_5 00009F  
                            STR_6 0000D9                              STR_7 0000BC  
                            STR_8 0000D1                              _LATD 000F8C  
                            u4100 0000D0                              u4120 000024  
                            u5000 000266                              u4130 00004C  
                            u5010 00028A                              u4127 00001A  
                            u4080 00001C                              u4137 000042  
                            u4350 0000FC                              u3720 00000C  
                            u3800 00000C                              u4280 000040  
                            u7000 000198                              u3740 000028  
                            u3820 000028                              u4380 00011E  
                            u3760 000042                              u3840 000042  
                            u3738 00000E                              u3818 00000E  
                            u3930 00002A                              u3780 00005A  
                            u3860 00005A                              u3758 00002A  
                            u3838 00002A                              u7310 0001F6  
                            u7230 000190                              u4830 000092  
                            u6360 00018E                              u7160 000114  
                            u4840 000096                              u3778 000044  
                            u3858 000044                              u7330 0001FE  
                            u6541 0002D2                              u3798 00005C  
                            u3878 00005C                              u6550 00000A  
                            u6560 000014                              u4880 00017E  
                            u6570 000024                              u7290 0001E6  
                            u6580 000034                              u4980 000242  
                            u6910 000118                              u6566 000016  
                            u6558 00000C                              u6576 000026  
                            u6586 000036                              u6870 0000DC  
                            u6790 00006A                              u7830 00059A  
                            u7920 000666                              u7680 000432  
                            u7690 00043A                              u7940 000684  
                            u6990 00017E                              _CtoA 000000  
                 ??_SsetNovaTecla 000005            __end_of_SIOcheckKrebut 00000C  
                            _cap1 000008                              _Rows 00003F  
                            _cap2 000007                              _main 000000  
                            _mask 00000D                              _hora 000012  
                            _menu 000000                              _nota 000025  
           getArrayShowUsers@quin 000008                   __end_of_HJugant 000006  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 000000                   __end_of_JJuguem 000008  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 000024                              start 000000* 
                 __end_of_CantaIR 000032                      ?_initAltaveu 000000  
                    ___param_bank 000000                       _stringScore 000018  
                __end_of_GLCDInit 000008          __size_of_SIONovaDireccio 000000  
                  _HClearNouSegon 000000                             ?_CtoA 000000  
              __size_of_CToAReset 000000                       Espera@Timer 00000F  
                           ?_main 000000                             ?_menu 000000  
                 __end_of___lbdiv 00003A                             _EEADR 000FA9  
                   ??_TiInitTimer 000005                             _T0CON 000FD5  
                 ?_compareStrings 000005                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 000000                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 000000  
                           _TXREG 000FAD                             _SMSon 000000  
                           _TXSTA 000FAC                       _MNovaLletra 000000  
                           _Minit 000000                  __end_of_HGetTime 000004  
                           _Sinit 000000                             _Timer 00003C  
                           _Uinit 000000                   __end_of_initSIO 000008  
                           _s_ptr 00000A                             _score 00000F  
                           _nou_s 000012             __end_of_JoystickMotor 0000EA  
                 _HActualitzaHora 000000       __size_of_escriureCharEEPROM 000000  
                  __pbitbssCOMRAM 000000                             tablat 000FF5  
                     _LcNewString 000000                     ??_TiResetTics 000005  
                 ?_SIOcheckKrebut 000000                _UshowUsersCalculat 000000  
                           ttemp5 000001                             ttemp6 000004  
                           ttemp7 000008                             status 000FD8  
                ?_checkHoraAcabat 000000                             wtemp8 000001  
   __size_of_UcheckExistsGetError 000000                __size_of_HNouSegon 000000  
                 ___lbdiv@divisor 000005                  __end_of_LcGotoXY 00003A  
            CToAConverteix@numero 000005                   ___lbdiv@counter 000007  
                __end_of_LcLliure 00000C                     ??__TiRSITimer 000000  
                __end_of_LcScroll 000008                        _TiGetTimer 000000  
         EscriuPrimeraOrdre@ordre 000006                      __end_of_CtoA 000028  
                __end_of_JendGame 000004                       ?_SIOendGame 000000  
                 __initialization 000000               ?_UshowUsersCalculat 000000  
              __size_of_CantaData 000000                      __end_of_main 000068  
          __end_of_HClearNouSegon 000004                      __end_of_menu 00084A  
         ?_SIOHaAcabatPuntuacions 000000             __size_of_MNouJoystick 000000  
                    ?_playAltaveu 000000                 __end_of_GLCDMotor 0003CA  
                __end_of_TeTeclat 00017C                     _indexNextUser 00002B  
                 _hi_ha_hora_sio2 000000                            ??_CtoA 000005  
                          ??_main 000016                            ??_menu 000000  
              __size_of_LcPutChar 000000                     __activetblptr 000002  
                   _ultimaTeclaAD 000017            __size_of_JnovaDireccio 000000  
                GLCDMotor@length1 000019                  GLCDMotor@length2 000018  
                      _JnovaTecla 000000                  __end_of_UgetTop5 000012  
                          ?_LcLCD 000000                            ?_SMSon 000000  
                    ?_CToAobtenir 000005                            ?_Minit 000000  
            ??_UshowUsersCalculat 000005                            ?_Sinit 000000  
                          ?_Uinit 000000                __size_of_NoFerMenu 000000  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 000038  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 000005                            _EECON2 000FA7  
              __size_of_URegister 000000                __size_of_HnoJugant 000000  
                       ??_JJuguem 000005                __size_of_SiFerMenu 000000  
                       ??_LcClear 000013                         ??_CantaIR 000007  
                          i2l4790 00004C                            i2l4782 00001E  
                          i2l4794 000050                            i2l4786 000026  
                  LcGotoXY@Fisics 00000E                    LcGotoXY@Column 000012  
                   ??_WaitForBusy 00000C                __size_of_TiGetTics 000000  
                          _SPBRGH 000FB0                    _sumaPulsacions 00003B  
               __end_of_CToAReset 00000A                            _SMSoff 000000  
              SIONovaDireccio@num 000005                            _LcInit 000000  
                    _MNouJoystick 000000                    _UgetNumUsuaris 000000  
                          _SMotor 000000               escriureCharEEPROM@c 000006  
                          _TeInit 000000                            _Espera 000000  
                    _LcGotoXY$334 000010                            _Krebut 000001  
  __end_of_SIOHaAcabatPuntuacions 000004                            _RowAct 00003E  
                   ?_miraPassword 000000               __end_of_TiResetTics 000018  
                          Uinit@k 00000B                  __end_of_high_rsi 00002A  
                          _h_Tics 000008                   ?_HClearNouSegon 000000  
                       ??___lbdiv 000006                     ?_CToAHaAcabat 000000  
                __end_of_initHora 000008               __end_of__TiRSITimer 00005A  
                          _horaTX 000000                  __end_of_menuList 000093  
                          clear_0 000046                            clear_1 000052  
                          clear_2 000064                            _jugant 000006  
                          _segons 000014                        _UenviaChar 000000  
                          isa$std 000001                  _llegirCharEEPROM 000000  
              __size_of_UgetScore 000000                        UenviaPas@c 000006  
     __size_of_EscriuPrimeraOrdre 000000                 __end_of_HNouSegon 00000C  
                       ??_initSIO 000006                      __pdataCOMRAM 000000  
          __size_of_CantaPartAlta 000000                  __end_of_motorSIO 000310  
              __size_of_UenviaPas 000000           __end_of_HActualitzaHora 000036  
               ??_SIONovaDireccio 000005                  __end_of_motorJoc 0000B6  
                    __mediumconst 000000*                           tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 000005                __size_of_UnewScore 000000  
             __size_of_SIOendGame 000000                 __end_of_CantaData 000032  
                    TeTeclat@cols 000035                  ___lbdiv@dividend 000006  
                       ?_GLCDInit 000000                     ?_UcheckExists 000000  
                      __accesstop 000000*          __end_of__initialization 00006A  
          __end_of_UgetNumUsuaris 000004                 __end_of_LcPutChar 000052  
                   _JnovaDireccio 000000                  JnovaDireccio@dir 000005  
                   ___rparam_used 000001                    ??_miraPassword 00000A  
                   __end_of_LcLCD 00005E                       ?_TiGetTimer 000000  
                   __end_of_SMSon 000006                 SIONovaTecla@tecla 000005  
                  __pcstackCOMRAM 000000                     __end_of_Minit 000008  
             __end_of_WaitForBusy 000040                     __end_of_Sinit 000008  
                   __end_of_Uinit 000104                 __end_of_NoFerMenu 000004  
                       ?_HGetTime 000005                      __pidataBANK0 000000  
                  ??_CToAHaAcabat 000005              __size_of_initAltaveu 000000  
               __end_of_URegister 000004                 __end_of_HnoJugant 000004  
               __end_of_SiFerMenu 000004                  ___lbdiv@quotient 000008  
               __end_of_TiGetTics 00002C                       _TiInitTimer 000000  
                     ?_JnovaTecla 000000                           ??_LcLCD 000014  
                         ??_SMSon 000005                         ?_LcGotoXY 00000D  
                       ?_LcLliure 000000                           ??_Minit 000006  
                       ?_LcScroll 000000                           ??_Sinit 000006  
                 JnovaTecla@tecla 000005                           ??_Uinit 000009  
            __size_of_init_eusart 000000                         ?_JendGame 000000  
                  ??_UcheckExists 000005               MNouJoystick@posicio 000005  
                      ??_GLCDInit 000006           __size_of_GLCDMostraMenu 000000  
                      __pbssBANK0 000000                        __pbssBANK1 000000  
                       ?_TeTeclat 000000                       _TiResetTics 000000  
                 ?_UgetNumUsuaris 000000                    ?_JnovaDireccio 000000  
                   ??_UmotorUsers 00000A                 __end_of_UgetScore 000012  
                   ?_JoystickInit 000000                           ?_SMSoff 000000  
                         ?_LcInit 000000                     _CantaPartAlta 000000  
                         ?_SMotor 000000                           ?_TeInit 000000  
                         ?_Espera 00000C                 __end_of_UenviaPas 000010  
                     __TiRSITimer 000000               _indexNextUserStruct 00002A  
                       ?_UgetTop5 000000                 __end_of_UnewScore 00000A  
                      ??_HGetTime 000007                     ?_UgetUserName 000005  
                ??_compareStrings 000008                           _BAUDCON 000FB8  
                     ?_UenviaChar 000005              __size_of_playAltaveu 000000  
              __size_of_motorHora 000000            __size_of_MsetNovaTecla 000000  
      __end_of_calculateShowUsers 000004                           LcInit@i 000011  
                ?_HActualitzaHora 000005                        ??_LcGotoXY 00000E  
                    ?_MNovaLletra 000000                        ??_LcLliure 000005  
                      ??_LcScroll 000008                  ??_SIOcheckKrebut 000005  
             __size_of_TiGetTimer 000000              __size_of_CToAobtenir 000000  
                      ??_JendGame 000005                           _HJugant 000000  
                       ?_high_rsi 000000                           _JJuguem 000000  
                         _LcClear 000000                           _CantaIR 000000  
                    ?_LcNewString 000009                    ??_JoystickInit 000005  
                       ?_initHora 000000                        ??_TeTeclat 00000C  
                     _WaitForBusy 000000                    ?_CantaPartAlta 000000  
           __end_of_SsetNovaTecla 000008                   __size_of_SMSoff 000000  
                 __size_of_LcInit 000000                           __Hparam 000000  
                 __size_of_SMotor 000000               __size_of_JnovaTecla 000000  
                 __size_of_TeInit 000000                   __size_of_Espera 000000  
                         __Lparam 000000                        ??_UgetTop5 000005  
                    ??_SIOendGame 000005                         ?_motorSIO 000000  
                       ?_motorJoc 000000                    ??_UgetUserName 000007  
               _getArrayShowUsers 000000               __end_of_UmotorUsers 00032E  
        ?_UcheckExistsNotFinished 000000                           ___lbdiv 000000  
                   ?_motorAltaveu 000000                      __psmallconst 000000  
              ?_getArrayShowUsers 000005                           __pcinit 000000  
    __end_of_UcheckExistsGetError 000004                           _ferMenu 00000A  
                      _init_ports 000000                           __ramtop 000000* 
                         __ptext0 000000                           __ptext1 000000  
                         __ptext2 000000                           __ptext3 000000  
                         __ptext4 000000                           __ptext5 000000  
                         __ptext6 000000                           __ptext7 000000  
                         __ptext8 000000                           __ptext9 000000  
                       _T0CONbits 000FD5                         _GLCDMotor 000000  
                       CantaIR@IR 000007                           _initSIO 000000  
                         _counter 000033                           _horaTmp 000040  
          conversorJoystick@direc 000005               ??_getArrayShowUsers 000007  
                     UenviaChar@c 000006                     ?_SIOEnviaHora 000000  
            __end_of_miraPassword 000026        __end_of_escriureCharEEPROM 000026  
                LcNewString@new_s 000009                   WaitForBusy@Busy 00000C  
                     Uinit@k_1176 00000C                      _do_showUsers 00000D  
                         _userPtr 000006                 GLCDMostraMenu@num 000005  
              __end_of_SIOendGame 000004                        ??_high_rsi 000001  
            __end_of_CToAHaAcabat 000004              end_of_initialization 00006A  
                         _usuaris 000000                     UgetScore@quin 000005  
                 ??_JnovaDireccio 000005                        ??_initHora 000006  
        __end_of_llegirCharEEPROM 000010           __size_of_CantaPartBaixa 000000  
                   __Lmediumconst 000000*                  TiGetTics@Handle 000009  
                   _MsetNovaTecla 000000               __size_of_UenviaChar 000000  
               _conversorJoystick 000000                 __end_of_motorHora 00009E  
                ??_HClearNouSegon 000005                        _novaLletra 00000D  
       __end_of_getArrayShowUsers 000020                ?_conversorJoystick 000000  
                 _usuariActualSIO 000005                        ??_motorSIO 000014  
                       _CToAReset 000000                        ??_motorJoc 000013  
                 TiGetTics@actual 00000A                     ?_SIONovaTecla 000000  
                      GLCDMotor@j 00001E                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 000000  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 00000C  
        __size_of_checkHoraAcabat 000000                        _numUsuaris 00002C  
            __end_of_UcheckExists 000004                     TeTeclat@files 000034  
             ??_conversorJoystick 000005                SIOStartGame@usuari 000005  
          __size_of_JoystickMotor 000000                     TeTeclat@state 000036  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 000000                     ?_SIOStartGame 000000  
                  ??_SIOEnviaHora 000005                         _TRISCbits 000F94  
                       _TRISDbits 000F95       __size_of_UshowUsersCalculat 000000  
                       _HNouSegon 000000                 UnewScore@scoretmp 000005  
                  _GLCDMostraMenu 000000         __end_of_conversorJoystick 000036  
                 ??_CantaPartAlta 000005                    ?_MsetNovaTecla 000000  
                       _CantaData 000000                 __size_of_GLCDInit 000000  
                     _UmotorUsers 000000                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 00000C                    __end_of_SMSoff 000006  
                    ??_TiGetTimer 000005                    __end_of_LcInit 0000DC  
                  ??_SIONovaTecla 000005                        ?_CToAReset 000000  
                  __end_of_SMotor 0001F6              __end_of_teclaPremuda 00009F  
                       _LcPutChar 000000                    __end_of_TeInit 000008  
               motorAltaveu@state 000022                    __end_of_Espera 000024  
                  GLCDMotor@state 00001F        __end_of_EscriuPrimeraOrdre 00007A  
               __size_of_HGetTime 000000                     __pidataCOMRAM 000000  
                     ?_init_ports 000000                         _NoFerMenu 000000  
                       _ColumnAct 00003D              __end_of_JoystickInit 000012  
                  ??_SIOStartGame 000005                         _URegister 000000  
                       _HnoJugant 000000                      ?_TiInitTimer 000000  
                    ??_JnovaTecla 000005                         _SiFerMenu 000000  
             start_initialization 000000                         _TiGetTics 000000  
          __end_of_GLCDMostraMenu 00000C                        ?_HNouSegon 000000  
                ??_UgetNumUsuaris 000005                  UmotorUsers@state 000026  
               __size_of_LcGotoXY 000000              __end_of_UgetUserName 000014  
              __end_of_TiGetTimer 00003A                     JJuguem@usuari 000005  
            __size_of_MNovaLletra 000000                 __size_of_LcLliure 000000  
               __size_of_LcScroll 000000                     _JoystickMotor 000000  
               __size_of_JendGame 000000                      ?_TiResetTics 000000  
                      ?_CantaData 000000              _UcheckExistsGetError 000000  
         __end_of_SIONovaDireccio 000008              __size_of_LcNewString 000000  
                        ??_SMSoff 000005                          ??_LcInit 000010  
                       _NovaTecla 00000E                 __size_of_TeTeclat 000000  
                        ??_SMotor 00000C        __size_of_getArrayShowUsers 000000  
                        ??_TeInit 000006                      ?__TiRSITimer 000000  
                   ??_initAltaveu 000006                          ??_Espera 00000E  
                       _UgetScore 000000                __end_of_JnovaTecla 000008  
                      ?_LcPutChar 000000                         _UenviaPas 000000  
               __size_of_UgetTop5 000000                       __pdataBANK0 000000  
                  motorHora@state 000013                      _menuDaltGLCD 000020  
                    ??_UenviaChar 000006                         _UnewScore 000000  
                      ?_NoFerMenu 000000             __size_of_miraPassword 000000  
                     ??_GLCDMotor 000014                        ?_URegister 000000  
                      ?_HnoJugant 000000                 ??_checkHoraAcabat 000005  
                   ??_init_eusart 000005                        ?_SiFerMenu 000000  
                     __pbssCOMRAM 000000             __size_of_CToAHaAcabat 000000  
                   __pcstackBANK0 000000                        ?_TiGetTics 000005  
                 ?_GLCDMostraMenu 000000                          ?_HJugant 000000  
                  ?_JoystickMotor 000000                   ??_MsetNovaTecla 000005  
            __end_of_motorAltaveu 0000B2                          ?_JJuguem 000000  
                        ?_LcClear 000000                          ?_CantaIR 000000  
      __size_of_conversorJoystick 000000                _calculateShowUsers 000000  
                  _CantaPartBaixa 000000          ??_SIOHaAcabatPuntuacions 000005  
           ?_UcheckExistsGetError 000000                 __size_of_high_rsi 000000  
                    ?_WaitForBusy 000000               __size_of_init_ports 000000  
              MsetNovaTecla@tecla 000005                SsetNovaTecla@tecla 000005  
              __end_of_UenviaChar 000010           __size_of_CToAConverteix 000000  
               __size_of_initHora 000000             __size_of_UcheckExists 000000  
             ?_calculateShowUsers 000000                        ?_UgetScore 000000  
                     ??_CToAReset 000005              __end_of_SIOEnviaHora 000004  
                    _miraPassword 000000                         __pintcode 000000  
                        ?___lbdiv 000005                     ??_playAltaveu 000005  
                      ?_UenviaPas 000005                 __size_of_motorSIO 000000  
               __size_of_motorJoc 000000                   CantaPartBaixa@c 000006  
                    _CToAHaAcabat 000000               __end_of_initAltaveu 000008  
                      ?_UnewScore 000000                         _arrayZero 000000  
                        ?_initSIO 000000                       __smallconst 000000* 
                       _convertir 000002                     ??_CToAobtenir 000007  
                  __size_of_LcLCD 000000                    __size_of_SMSon 000000  
            ??_calculateShowUsers 000005               __end_of_newLineChar 000002  
__size_of_UcheckExistsNotFinished 000000                    __size_of_Minit 000000  
            __end_of_SIONovaTecla 000008                    __size_of_Sinit 000000  
                     ??_HNouSegon 000005                    __size_of_Uinit 000000  
                     _direccioSIO 000004                       _direccioJoc 000012  
          __end_of_CantaPartBaixa 000068                JoystickMotor@state 000016  
                        _GLCDInit 000000                       _do_register 00000E  
             __end_of_init_eusart 000016                         _newString 000009  
                    _UcheckExists 000000                         _loginText 000013  
                       _jugantSIO 000002          __size_of_HActualitzaHora 000000  
                       _jugantJoc 000003                      UgetTop5@quin 000005  
                     ??_CantaData 000007                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 000000                     ?_MNouJoystick 000000  
                ?_SIONovaDireccio 000000              __end_of_SIOStartGame 000008  
                   UenviaChar@pos 000005                _escriureCharEEPROM 000000  
                       _novaTecla 000010                ??_llegirCharEEPROM 000005  
                   motorSIO@state 00000C                          _PIR1bits 000F9E  
                     ??_LcPutChar 000013                         _timerGLCD 000021  
                       _motorHora 000000                          _RCONbits 000FD0  
                       _reproduir 00000B                          _HGetTime 000000  
           __size_of_JoystickInit 000000                         _timerHora 000015  
                       _timerMenu 000031               ?_escriureCharEEPROM 000005  
                     ??_NoFerMenu 000005                        _ADCON0bits 000FC2  
                     ??_URegister 000005                       ??_HnoJugant 000005  
                     ??_SiFerMenu 000005             __size_of_UgetUserName 000000  
             __end_of_playAltaveu 000004            __size_of_SsetNovaTecla 000000  
                        Espera@ms 00000C                         _zeroTecla 000039  
                        _LcGotoXY 000000                    _usuariLoguejat 00000B  
                        _LcLliure 000000                       ??_TiGetTics 000007  
         __size_of_compareStrings 000000               llegirCharEEPROM@pos 000005  
            __size_of_TiInitTimer 000000                          _LcScroll 000000  
                 ??_JoystickMotor 000006                     GLCDMotor@max1 000009  
                   GLCDMotor@max2 000008                     GLCDMotor@min1 00001D  
                   GLCDMotor@min2 00001C                      _teclaPremuda 000093  
                        _JendGame 000000                         _usuariJoc 000007  
                     LcGotoXY@Row 00000D                         copy_data0 000014  
                       copy_data1 000034              ??_escriureCharEEPROM 000006  
                 ?_CantaPartBaixa 000000               __end_of_CToAobtenir 000004  
                __size_of_HJugant 000000            ??_UcheckExistsGetError 000005  
           escriureCharEEPROM@pos 000005                  __size_of_JJuguem 000000  
                __size_of_LcClear 000000                  __size_of_CantaIR 000000  
                        _TeTeclat 000000             __end_of_JnovaDireccio 000008  
                  ??_MNouJoystick 000005                    _do_updateScore 00000C  
 __size_of_SIOHaAcabatPuntuacions 000000                      ?_UmotorUsers 000000  
                    _JoystickInit 000000                        _EECON1bits 000FA6  
                    _registerText 000008                       _indexUsuari 00002F  
         __size_of_SIOcheckKrebut 000000              __size_of_TiResetTics 000000  
                   motorJoc@state 000011                       _duradaNotes 00000A  
                        __Hrparam 000000*                      _initAltaveu 000000  
                     ??_UgetScore 000005                          _UgetTop5 000000  
                       menu@state 00002D                          __Lrparam 000000* 
                      ?_motorHora 000000              __size_of__TiRSITimer 000000  
                    _UgetUserName 000000                       ??_UenviaPas 000006  
                __size_of___lbdiv 000000                      _novaDireccio 00000C  
                     ??_UnewScore 000005                      ??_init_ports 000005  
                     _newLineChar 000001               HActualitzaHora@nova 000005  
      __end_of_UshowUsersCalculat 00000C                          _charActu 00000E  
                     _init_eusart 000000                  __size_of_initSIO 000000  
           __size_of_motorAltaveu 000000                      _novaTeclaJOC 000006  
                    _novaTeclaSIO 000003                   _do_check_exists 00000F  
                        __ptext10 000000                          __ptext11 000000  
              _EscriuPrimeraOrdre 000000                          __ptext20 000000  
                        __ptext12 000000                          __ptext21 000000  
                        __ptext13 000000                          __ptext30 000000  
                        __ptext22 000000                          __ptext14 000000  
                        __ptext31 000000                          __ptext23 000000  
                        __ptext15 000000                          __ptext40 000000  
                        __ptext32 000000                          __ptext24 000000  
                        __ptext16 000000                          __ptext41 000000  
                        __ptext33 000000                          __ptext25 000000  
                        __ptext17 000000                          __ptext50 000000  
                        __ptext42 000000                          __ptext34 000000  
                        __ptext26 000000                          __ptext18 000000  
                        __ptext51 000000                          __ptext43 000000  
                        __ptext35 000000                          __ptext27 000000  
                        __ptext19 000000                          __ptext60 000000  
                        __ptext52 000000                          __ptext44 000000  
                        __ptext36 000000                          __ptext28 000000  
                        __ptext61 000000                          __ptext53 000000  
                        __ptext45 000000                          __ptext37 000000  
                        __ptext29 000000                          __ptext70 000000  
                        __ptext62 000000                          __ptext54 000000  
                        __ptext46 000000                          __ptext38 000000  
                        __ptext71 000000                          __ptext63 000000  
                        __ptext55 000000                          __ptext47 000000  
                        __ptext39 000000                          __ptext80 000000  
                        __ptext72 000000                          __ptext64 000000  
                        __ptext56 000000                          __ptext48 000000  
                        __ptext81 000000                          __ptext73 000000  
                        __ptext65 000000                          __ptext57 000000  
                        __ptext49 000000                          __ptext90 000000  
                        __ptext82 000000                          __ptext74 000000  
                        __ptext66 000000                          __ptext58 000000  
                        __ptext91 000000                          __ptext83 000000  
                        __ptext75 000000                          __ptext67 000000  
                        __ptext59 000000                          __ptext92 000000  
                        __ptext84 000000                          __ptext76 000000  
                        __ptext68 000000                          __ptext93 000000  
                        __ptext85 000000                          __ptext77 000000  
                        __ptext69 000000                          __ptext86 000000  
                        __ptext78 000000                          __ptext95 000000  
                        __ptext87 000000                          __ptext79 000000  
                        __ptext88 000000                          __ptext89 000000  
                  CantaPartAlta@c 000006                       _lletraASCII 000011  
                        _high_rsi 000000                          _copsNota 000023  
                        _s_Timers 000000                     __size_of_CtoA 000000  
                        _initHora 000000                       _lletraInici 000000  
                        _menuDalt 000030             __size_of_SIOEnviaHora 000000  
                        _menuList 000002               ?_EscriuPrimeraOrdre 000000  
                   __size_of_main 000000                     __size_of_menu 000000  
           __end_of_CantaPartAlta 000068                    _CToAConverteix 000000  
                   CantaData@Data 000007                          _tiTeclat 000037  
              __end_of_init_ports 000020                          _setSMSon 000011  
                   _SsetNovaTecla 000000              __size_of_WaitForBusy 000000  
                        _nouSegon 000005                          _scoreUsr 000027  
                        _motorSIO 000000                 ??_HActualitzaHora 000006  
                        _motorJoc 000000                   _checkHoraAcabat 000000  
                        _timerSIO 000010                          _timerSMS 00003A  
                        isa$xinst 000000                          int$flags 000000  
                    UenviaPas@pos 000005                       _playAltaveu 000000  
                    _motorAltaveu 000000           __size_of_HClearNouSegon 000000  
          _SIOHaAcabatPuntuacions 000000              ??_EscriuPrimeraOrdre 000005  
                      LcInit@rows 000010                  ??_GLCDMostraMenu 000005  
           __size_of_SIONovaTecla 000000           _UcheckExistsNotFinished 000000  
                      _INTCONbits 000FF2                     ??_MNovaLletra 000005  
                     _CToAobtenir 000000                      _SIOEnviaHora 000000  
           __size_of_SIOStartGame 000000                     ??_LcNewString 00000B  
                        intlevel2 000000*                     _timerAltaveu 000024  
                  _arrayShowUsers 000022            __end_of_CToAConverteix 00000C  
                      LcPutChar@c 000013                    ?_SsetNovaTecla 000000  
               MNovaLletra@lletra 000005                   compareStrings@a 000005  
                 compareStrings@b 000006                       ??_motorHora 00000C  
                    _SIONovaTecla 000000                       _tempsAcabat 000004  
                     GLCDMotor@k1 00001B                       GLCDMotor@k2 00001A  
            __end_of_MNouJoystick 000008                      _SIOStartGame 000000  
                  _compareStrings 000000                       _tmpPassword 00002A  
             __end_of_MNovaLletra 000008                   ?_CToAConverteix 000000  
           __end_of_MsetNovaTecla 000008           __end_of_checkHoraAcabat 00000C  
                     _tmpUsername 000033                    _SIOcheckKrebut 000000  
                     SMotor@state 000038           __size_of_UgetNumUsuaris 000000  
             __end_of_LcNewString 00000C              __size_of_UmotorUsers 000000  
                      _SIOendGame 000000  
