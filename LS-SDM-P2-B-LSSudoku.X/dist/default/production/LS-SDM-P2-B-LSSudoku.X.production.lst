

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 29 18:43:07 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.32
    75                           ; Generated 02/02/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4321 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataCOMRAM
   111  001576                     __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _lletraInici
   115  001576  41                 	db	65
   116  001577  44                 	db	68
   117  001578  47                 	db	71
   118  001579  4A                 	db	74
   119  00157A  4D                 	db	77
   120  00157B  50                 	db	80
   121  00157C  54                 	db	84
   122  00157D  57                 	db	87
   123  00157E  00                 	db	0
   124                           
   125                           ;initializer for GLCDMotor@max2
   126  00157F  0F                 	db	15
   127                           
   128                           ;initializer for GLCDMotor@max1
   129  001580  0F                 	db	15
   130                           
   131                           ;initializer for _usuariLoguejat
   132  001581  FF                 	db	255
   133                           
   134                           ;initializer for _novaLletra
   135  001582  FF                 	db	255
   136                           
   137                           ;initializer for _NovaTecla
   138  001583  FF                 	db	255
   139                           
   140                           ;initializer for _ultimaTecla
   141  001584  FF                 	db	255
   142                           
   143                           ;initializer for _timerSMS
   144  001585  FF                 	db	255
   145                           
   146                           ;initializer for _novaTecla
   147  001586  FF                 	db	255
   148                           
   149                           ;initializer for _lletraASCII
   150  001587  FF                 	db	255
   151                           
   152                           	psect	idataBANK0
   153  0015A8                     __pidataBANK0:
   154                           	callstack 0
   155                           
   156                           ;initializer for _teclaPremuda
   157  0015A8  01                 	db	1
   158  0015A9  02                 	db	2
   159  0015AA  03                 	db	3
   160  0015AB  04                 	db	4
   161  0015AC  05                 	db	5
   162  0015AD  06                 	db	6
   163  0015AE  07                 	db	7
   164  0015AF  08                 	db	8
   165  0015B0  09                 	db	9
   166  0015B1  0A                 	db	10
   167  0015B2  00                 	db	0
   168  0015B3  0B                 	db	11
   169                           
   170                           	psect	smallconst
   171  000200                     __psmallconst:
   172                           	callstack 0
   173  000200  00                 	db	0
   174  000201                     _menuList:
   175                           	callstack 0
   176  000201  31                 	db	49
   177  000202  2E                 	db	46
   178  000203  50                 	db	80
   179  000204  6C                 	db	108
   180  000205  61                 	db	97
   181  000206  79                 	db	121
   182  000207  20                 	db	32
   183  000208  61                 	db	97
   184  000209  20                 	db	32
   185  00020A  47                 	db	71
   186  00020B  61                 	db	97
   187  00020C  6D                 	db	109
   188  00020D  65                 	db	101
   189  00020E  00                 	db	0
   190  00020F  00                 	db	0
   191  000210  00                 	db	0
   192  000211  00                 	db	0
   193  000212  00                 	db	0
   194  000213  00                 	db	0
   195  000214  00                 	db	0
   196  000215  00                 	db	0
   197  000216  00                 	db	0
   198  000217  00                 	db	0
   199  000218  00                 	db	0
   200  000219  00                 	db	0
   201  00021A  00                 	db	0
   202  00021B  00                 	db	0
   203  00021C  00                 	db	0
   204  00021D  00                 	db	0
   205  00021E  32                 	db	50
   206  00021F  2E                 	db	46
   207  000220  4D                 	db	77
   208  000221  6F                 	db	111
   209  000222  64                 	db	100
   210  000223  69                 	db	105
   211  000224  66                 	db	102
   212  000225  79                 	db	121
   213  000226  20                 	db	32
   214  000227  54                 	db	84
   215  000228  69                 	db	105
   216  000229  6D                 	db	109
   217  00022A  65                 	db	101
   218  00022B  00                 	db	0
   219  00022C  00                 	db	0
   220  00022D  00                 	db	0
   221  00022E  00                 	db	0
   222  00022F  00                 	db	0
   223  000230  00                 	db	0
   224  000231  00                 	db	0
   225  000232  00                 	db	0
   226  000233  00                 	db	0
   227  000234  00                 	db	0
   228  000235  00                 	db	0
   229  000236  00                 	db	0
   230  000237  00                 	db	0
   231  000238  00                 	db	0
   232  000239  00                 	db	0
   233  00023A  00                 	db	0
   234  00023B  33                 	db	51
   235  00023C  2E                 	db	46
   236  00023D  53                 	db	83
   237  00023E  68                 	db	104
   238  00023F  6F                 	db	111
   239  000240  77                 	db	119
   240  000241  20                 	db	32
   241  000242  47                 	db	71
   242  000243  65                 	db	101
   243  000244  6E                 	db	110
   244  000245  65                 	db	101
   245  000246  72                 	db	114
   246  000247  61                 	db	97
   247  000248  6C                 	db	108
   248  000249  20                 	db	32
   249  00024A  54                 	db	84
   250  00024B  6F                 	db	111
   251  00024C  70                 	db	112
   252  00024D  20                 	db	32
   253  00024E  35                 	db	53
   254  00024F  20                 	db	32
   255  000250  53                 	db	83
   256  000251  63                 	db	99
   257  000252  6F                 	db	111
   258  000253  72                 	db	114
   259  000254  65                 	db	101
   260  000255  73                 	db	115
   261  000256  20                 	db	32
   262  000257  00                 	db	0
   263  000258  34                 	db	52
   264  000259  2E                 	db	46
   265  00025A  4C                 	db	76
   266  00025B  6F                 	db	111
   267  00025C  67                 	db	103
   268  00025D  6F                 	db	111
   269  00025E  75                 	db	117
   270  00025F  74                 	db	116
   271  000260  00                 	db	0
   272  000261  00                 	db	0
   273  000262  00                 	db	0
   274  000263  00                 	db	0
   275  000264  00                 	db	0
   276  000265  00                 	db	0
   277  000266  00                 	db	0
   278  000267  00                 	db	0
   279  000268  00                 	db	0
   280  000269  00                 	db	0
   281  00026A  00                 	db	0
   282  00026B  00                 	db	0
   283  00026C  00                 	db	0
   284  00026D  00                 	db	0
   285  00026E  00                 	db	0
   286  00026F  00                 	db	0
   287  000270  00                 	db	0
   288  000271  00                 	db	0
   289  000272  00                 	db	0
   290  000273  00                 	db	0
   291  000274  00                 	db	0
   292  000275  35                 	db	53
   293  000276  2E                 	db	46
   294  000277  53                 	db	83
   295  000278  68                 	db	104
   296  000279  6F                 	db	111
   297  00027A  77                 	db	119
   298  00027B  20                 	db	32
   299  00027C  41                 	db	65
   300  00027D  6C                 	db	108
   301  00027E  6C                 	db	108
   302  00027F  20                 	db	32
   303  000280  55                 	db	85
   304  000281  73                 	db	115
   305  000282  65                 	db	101
   306  000283  72                 	db	114
   307  000284  73                 	db	115
   308  000285  00                 	db	0
   309  000286  00                 	db	0
   310  000287  00                 	db	0
   311  000288  00                 	db	0
   312  000289  00                 	db	0
   313  00028A  00                 	db	0
   314  00028B  00                 	db	0
   315  00028C  00                 	db	0
   316  00028D  00                 	db	0
   317  00028E  00                 	db	0
   318  00028F  00                 	db	0
   319  000290  00                 	db	0
   320  000291  00                 	db	0
   321  000292                     __end_of_menuList:
   322                           	callstack 0
   323  0000                     _EECON2	set	4007
   324  0000                     _EEDATA	set	4008
   325  0000                     _EEADR	set	4009
   326  0000                     _T0CONbits	set	4053
   327  0000                     _TMR0L	set	4054
   328  0000                     _TMR0H	set	4055
   329  0000                     _T0CON	set	4053
   330  0000                     _INTCONbits	set	4082
   331  0000                     _RCONbits	set	4048
   332  0000                     _PORTDbits	set	3971
   333  0000                     _EECON1bits	set	4006
   334  0000                     _LATD	set	3980
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISC	set	3988
   337  0000                     _LATBbits	set	3978
   338  0000                     _TRISB	set	3987
   339  0000                     _TRISA	set	3986
   340  0000                     _PORTCbits	set	3970
   341  0000                     _LATDbits	set	3980
   342  0000                     _LATCbits	set	3979
   343  0000                     _TRISDbits	set	3989
   344  0000                     _TRISCbits	set	3988
   345  000292                     STR_2:
   346  000292  32                 	db	50	;'2'
   347  000293  2E                 	db	46
   348  000294  52                 	db	82	;'R'
   349  000295  45                 	db	69	;'E'
   350  000296  47                 	db	71	;'G'
   351  000297  49                 	db	73	;'I'
   352  000298  53                 	db	83	;'S'
   353  000299  54                 	db	84	;'T'
   354  00029A  45                 	db	69	;'E'
   355  00029B  52                 	db	82	;'R'
   356  00029C  00                 	db	0
   357  00029D                     STR_1:
   358  00029D  31                 	db	49	;'1'
   359  00029E  2E                 	db	46
   360  00029F  4C                 	db	76	;'L'
   361  0002A0  4F                 	db	79	;'O'
   362  0002A1  47                 	db	71	;'G'
   363  0002A2  49                 	db	73	;'I'
   364  0002A3  4E                 	db	78	;'N'
   365  0002A4  00                 	db	0
   366  0002A5                     STR_4:
   367  0002A5  50                 	db	80	;'P'
   368  0002A6  53                 	db	83	;'S'
   369  0002A7  57                 	db	87	;'W'
   370  0002A8  44                 	db	68	;'D'
   371  0002A9  3A                 	db	58	;':'
   372  0002AA  20                 	db	32
   373  0002AB  00                 	db	0
   374  0002AC                     STR_3:
   375  0002AC  55                 	db	85	;'U'
   376  0002AD  53                 	db	83	;'S'
   377  0002AE  45                 	db	69	;'E'
   378  0002AF  52                 	db	82	;'R'
   379  0002B0  3A                 	db	58	;':'
   380  0002B1  20                 	db	32
   381  0002B2  00                 	db	0
   382  0002B3  00                 	db	0	; dummy byte at the end
   383  0000                     
   384                           ; #config settings
   385                           
   386                           	psect	cinit
   387  00107E                     __pcinit:
   388                           	callstack 0
   389  00107E                     start_initialization:
   390                           	callstack 0
   391  00107E                     __initialization:
   392                           	callstack 0
   393                           
   394                           ; Initialize objects allocated to BANK0 (12 bytes)
   395                           ; load TBLPTR registers with __pidataBANK0
   396  00107E  0EA8               	movlw	low __pidataBANK0
   397  001080  6EF6               	movwf	tblptrl,c
   398  001082  0E15               	movlw	high __pidataBANK0
   399  001084  6EF7               	movwf	tblptrh,c
   400  001086  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   401  001088  6EF8               	movwf	tblptru,c
   402  00108A  EE00  F080         	lfsr	0,__pdataBANK0
   403  00108E  EE10 F00C          	lfsr	1,12
   404  001092                     copy_data0:
   405  001092  0009               	tblrd		*+
   406  001094  CFF5 FFEE          	movff	tablat,postinc0
   407  001098  50E5               	movf	postdec1,w,c
   408  00109A  50E1               	movf	fsr1l,w,c
   409  00109C  E1FA               	bnz	copy_data0
   410                           
   411                           ; Initialize objects allocated to COMRAM (18 bytes)
   412                           ; load TBLPTR registers with __pidataCOMRAM
   413  00109E  0E76               	movlw	low __pidataCOMRAM
   414  0010A0  6EF6               	movwf	tblptrl,c
   415  0010A2  0E15               	movlw	high __pidataCOMRAM
   416  0010A4  6EF7               	movwf	tblptrh,c
   417  0010A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   418  0010A8  6EF8               	movwf	tblptru,c
   419  0010AA  EE00  F067         	lfsr	0,__pdataCOMRAM
   420  0010AE  EE10 F012          	lfsr	1,18
   421  0010B2                     copy_data1:
   422  0010B2  0009               	tblrd		*+
   423  0010B4  CFF5 FFEE          	movff	tablat,postinc0
   424  0010B8  50E5               	movf	postdec1,w,c
   425  0010BA  50E1               	movf	fsr1l,w,c
   426  0010BC  E1FA               	bnz	copy_data1
   427                           
   428                           ; Clear objects allocated to BANK1 (184 bytes)
   429  0010BE  EE01  F000         	lfsr	0,__pbssBANK1
   430  0010C2  0EB8               	movlw	184
   431  0010C4                     clear_0:
   432  0010C4  6AEE               	clrf	postinc0,c
   433  0010C6  06E8               	decf	wreg,f,c
   434  0010C8  E1FD               	bnz	clear_0
   435                           
   436                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   437  0010CA  6A79               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   438                           
   439                           ; Clear objects allocated to COMRAM (82 bytes)
   440  0010CC  EE00  F001         	lfsr	0,__pbssCOMRAM
   441  0010D0  0E52               	movlw	82
   442  0010D2                     clear_1:
   443  0010D2  6AEE               	clrf	postinc0,c
   444  0010D4  06E8               	decf	wreg,f,c
   445  0010D6  E1FD               	bnz	clear_1
   446  0010D8                     end_of_initialization:
   447                           	callstack 0
   448  0010D8                     __end_of__initialization:
   449                           	callstack 0
   450  0010D8  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451  0010DA  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452  0010DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   453  0010DE  6EF8               	movwf	tblptru,c
   454  0010E0  0100               	movlb	0
   455  0010E2  EF31  F009         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bitbssCOMRAM
   458  0003C8                     __pbitbssCOMRAM:
   459                           	callstack 0
   460  0003C8                     _newString:
   461                           	callstack 0
   462  0003C8                     	ds	1
   463  0003C9                     _ferMenu:
   464                           	callstack 0
   465  0003C9                     	ds	1
   466  0003CA                     _reproduir:
   467                           	callstack 0
   468  0003CA                     	ds	1
   469  0003CB                     _do_register:
   470                           	callstack 0
   471  0003CB                     	ds	1
   472  0003CC                     _do_check_exists:
   473                           	callstack 0
   474  0003CC                     	ds	1
   475  0003CD                     _loginNOTRegister:
   476                           	callstack 0
   477  0003CD                     	ds	1
   478  0003CE                     _setSMSon:
   479                           	callstack 0
   480  0003CE                     	ds	1
   481  0003CF                     _nou_s:
   482                           	callstack 0
   483  0003CF                     	ds	1
   484                           
   485                           	psect	bssCOMRAM
   486  000001                     __pbssCOMRAM:
   487                           	callstack 0
   488  000001                     _s_Timers:
   489                           	callstack 0
   490  000001                     	ds	24
   491  000019                     _tmpPassword:
   492                           	callstack 0
   493  000019                     	ds	9
   494  000022                     _h_Tics:
   495                           	callstack 0
   496  000022                     	ds	2
   497  000024                     GLCDMotor@length2:
   498                           	callstack 0
   499  000024                     	ds	1
   500  000025                     GLCDMotor@length1:
   501                           	callstack 0
   502  000025                     	ds	1
   503  000026                     GLCDMotor@k2:
   504                           	callstack 0
   505  000026                     	ds	1
   506  000027                     GLCDMotor@k1:
   507                           	callstack 0
   508  000027                     	ds	1
   509  000028                     GLCDMotor@min2:
   510                           	callstack 0
   511  000028                     	ds	1
   512  000029                     GLCDMotor@min1:
   513                           	callstack 0
   514  000029                     	ds	1
   515  00002A                     GLCDMotor@j:
   516                           	callstack 0
   517  00002A                     	ds	1
   518  00002B                     GLCDMotor@state:
   519                           	callstack 0
   520  00002B                     	ds	1
   521  00002C                     _menuDaltGLCD:
   522                           	callstack 0
   523  00002C                     	ds	1
   524  00002D                     _timerGLCD:
   525                           	callstack 0
   526  00002D                     	ds	1
   527  00002E                     motorAltaveu@state:
   528                           	callstack 0
   529  00002E                     	ds	1
   530  00002F                     _copsNota:
   531                           	callstack 0
   532  00002F                     	ds	1
   533  000030                     _timerAltaveu:
   534                           	callstack 0
   535  000030                     	ds	1
   536  000031                     _nota:
   537                           	callstack 0
   538  000031                     	ds	1
   539  000032                     UmotorUsers@state:
   540                           	callstack 0
   541  000032                     	ds	1
   542  000033                     _j:
   543                           	callstack 0
   544  000033                     	ds	1
   545  000034                     _i:
   546                           	callstack 0
   547  000034                     	ds	1
   548  000035                     _indexNextUserStruct:
   549                           	callstack 0
   550  000035                     	ds	1
   551  000036                     _indexNextUser:
   552                           	callstack 0
   553  000036                     	ds	1
   554  000037                     _numUsuaris:
   555                           	callstack 0
   556  000037                     	ds	1
   557  000038                     _currentUsrIndex:
   558                           	callstack 0
   559  000038                     	ds	1
   560  000039                     menu@state:
   561                           	callstack 0
   562  000039                     	ds	1
   563  00003A                     _menuDalt:
   564                           	callstack 0
   565  00003A                     	ds	1
   566  00003B                     _timerMenu:
   567                           	callstack 0
   568  00003B                     	ds	1
   569  00003C                     _tmp:
   570                           	callstack 0
   571  00003C                     	ds	1
   572  00003D                     _counter:
   573                           	callstack 0
   574  00003D                     	ds	1
   575  00003E                     TeTeclat@files:
   576                           	callstack 0
   577  00003E                     	ds	1
   578  00003F                     TeTeclat@cols:
   579                           	callstack 0
   580  00003F                     	ds	1
   581  000040                     TeTeclat@state:
   582                           	callstack 0
   583  000040                     	ds	1
   584  000041                     _tiTeclat:
   585                           	callstack 0
   586  000041                     	ds	1
   587  000042                     SMotor@state:
   588                           	callstack 0
   589  000042                     	ds	1
   590  000043                     _sumaPulsacions:
   591                           	callstack 0
   592  000043                     	ds	1
   593  000044                     _s_ptr:
   594                           	callstack 0
   595  000044                     	ds	1
   596  000045                     _Timer:
   597                           	callstack 0
   598  000045                     	ds	1
   599  000046                     _ColumnAct:
   600                           	callstack 0
   601  000046                     	ds	1
   602  000047                     _RowAct:
   603                           	callstack 0
   604  000047                     	ds	1
   605  000048                     _Columns:
   606                           	callstack 0
   607  000048                     	ds	1
   608  000049                     _Rows:
   609                           	callstack 0
   610  000049                     	ds	1
   611  00004A                     _tmpUsername:
   612                           	callstack 0
   613  00004A                     	ds	9
   614                           
   615                           	psect	dataCOMRAM
   616  000067                     __pdataCOMRAM:
   617                           	callstack 0
   618  000067                     _lletraInici:
   619                           	callstack 0
   620  000067                     	ds	9
   621  000070                     GLCDMotor@max2:
   622                           	callstack 0
   623  000070                     	ds	1
   624  000071                     GLCDMotor@max1:
   625                           	callstack 0
   626  000071                     	ds	1
   627  000072                     _usuariLoguejat:
   628                           	callstack 0
   629  000072                     	ds	1
   630  000073                     _novaLletra:
   631                           	callstack 0
   632  000073                     	ds	1
   633  000074                     _NovaTecla:
   634                           	callstack 0
   635  000074                     	ds	1
   636  000075                     _ultimaTecla:
   637                           	callstack 0
   638  000075                     	ds	1
   639  000076                     _timerSMS:
   640                           	callstack 0
   641  000076                     	ds	1
   642  000077                     _novaTecla:
   643                           	callstack 0
   644  000077                     	ds	1
   645  000078                     _lletraASCII:
   646                           	callstack 0
   647  000078                     	ds	1
   648                           
   649                           	psect	dataBANK0
   650  000080                     __pdataBANK0:
   651                           	callstack 0
   652  000080                     _teclaPremuda:
   653                           	callstack 0
   654  000080                     	ds	12
   655                           
   656                           	psect	bssBANK1
   657  000100                     __pbssBANK1:
   658                           	callstack 0
   659  000100                     _usuaris:
   660                           	callstack 0
   661  000100                     	ds	184
   662                           
   663                           	psect	cstackBANK0
   664  00008C                     __pcstackBANK0:
   665                           	callstack 0
   666  00008C                     ??_menu:
   667  00008C                     ??_GLCDMotor:
   668                           
   669                           ; 1 bytes @ 0x0
   670  00008C                     	ds	2
   671                           
   672                           	psect	cstackCOMRAM
   673  000053                     __pcstackCOMRAM:
   674                           	callstack 0
   675  000053                     
   676                           ; 1 bytes @ 0x0
   677  000053                     	ds	1
   678  000054                     ??_high_rsi:
   679                           
   680                           ; 1 bytes @ 0x1
   681  000054                     	ds	4
   682  000058                     ??_EscriuPrimeraOrdre:
   683  000058                     ??_Uinit:
   684  000058                     ??_UcheckExistsGetError:
   685  000058                     ??_CantaPartAlta:
   686  000058                     ??_CantaPartBaixa:
   687  000058                     ?_TiGetTics:
   688                           	callstack 0
   689  000058                     LcNewString@new_s:
   690                           	callstack 0
   691  000058                     SsetNovaTecla@tecla:
   692                           	callstack 0
   693  000058                     TiResetTics@Handle:
   694                           	callstack 0
   695  000058                     MsetNovaTecla@tecla:
   696                           	callstack 0
   697  000058                     MNovaLletra@lletra:
   698                           	callstack 0
   699  000058                     UenviaChar@pos:
   700                           	callstack 0
   701  000058                     UenviaPas@pos:
   702                           	callstack 0
   703  000058                     escriureCharEEPROM@pos:
   704                           	callstack 0
   705  000058                     compareStrings@a:
   706                           	callstack 0
   707  000058                     escriureEEPROM@caca:
   708                           	callstack 0
   709  000058                     GLCDMostraMenu@num:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x5
   713  000058                     	ds	1
   714  000059                     CantaPartAlta@c:
   715                           	callstack 0
   716  000059                     CantaPartBaixa@c:
   717                           	callstack 0
   718  000059                     EscriuPrimeraOrdre@ordre:
   719                           	callstack 0
   720  000059                     UenviaChar@c:
   721                           	callstack 0
   722  000059                     UenviaPas@c:
   723                           	callstack 0
   724  000059                     escriureCharEEPROM@c:
   725                           	callstack 0
   726  000059                     compareStrings@b:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x6
   730  000059                     	ds	1
   731  00005A                     ??_TiGetTics:
   732  00005A                     CantaIR@IR:
   733                           	callstack 0
   734  00005A                     CantaData@Data:
   735                           	callstack 0
   736  00005A                     Uinit@i:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x7
   740  00005A                     	ds	1
   741  00005B                     ??_compareStrings:
   742  00005B                     Uinit@j:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x8
   746  00005B                     	ds	1
   747  00005C                     TiGetTics@Handle:
   748                           	callstack 0
   749  00005C                     Uinit@j_1041:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x9
   753  00005C                     	ds	1
   754  00005D                     ??_UmotorUsers:
   755  00005D                     TiGetTics@actual:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xA
   759  00005D                     	ds	2
   760  00005F                     ??_SMotor:
   761  00005F                     ??_motorAltaveu:
   762  00005F                     ??_TeTeclat:
   763  00005F                     WaitForBusy@Busy:
   764                           	callstack 0
   765  00005F                     Espera@ms:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xC
   769  00005F                     	ds	1
   770  000060                     LcGotoXY@Row:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0xD
   774  000060                     	ds	1
   775  000061                     ??_Espera:
   776  000061                     LcGotoXY@Fisics:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0xE
   780  000061                     	ds	1
   781  000062                     Espera@Timer:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0xF
   785  000062                     	ds	1
   786  000063                     LcInit@columns:
   787                           	callstack 0
   788  000063                     _LcGotoXY$342:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x10
   792  000063                     	ds	1
   793  000064                     LcInit@rows:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x11
   797  000064                     	ds	1
   798  000065                     LcGotoXY@Column:
   799                           	callstack 0
   800  000065                     LcInit@i:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x12
   804  000065                     	ds	1
   805  000066                     LcPutChar@c:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x13
   809  000066                     	ds	1
   810  000067                     
   811                           ; 1 bytes @ 0x14
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 71 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1
   831 ;;      Params:         0       0       0
   832 ;;      Locals:         0       0       0
   833 ;;      Temps:          0       0       0
   834 ;;      Totals:         0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels required when called: 7
   837 ;; This function calls:
   838 ;;		_GLCDInit
   839 ;;		_GLCDMotor
   840 ;;		_LcInit
   841 ;;		_LcLCD
   842 ;;		_Minit
   843 ;;		_SMotor
   844 ;;		_Sinit
   845 ;;		_TeInit
   846 ;;		_TeTeclat
   847 ;;		_TiInitTimer
   848 ;;		_Uinit
   849 ;;		_UmotorUsers
   850 ;;		_escriureEEPROM
   851 ;;		_initAltaveu
   852 ;;		_init_ports
   853 ;;		_menu
   854 ;;		_motorAltaveu
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text0
   861  001262                     __ptext0:
   862                           	callstack 0
   863  001262                     _main:
   864                           	callstack 24
   865                           
   866                           ;main.c: 72:     init_ports();
   867                           
   868                           ;incstack = 0
   869  001262  EC9F  F00A         	call	_init_ports	;wreg free
   870                           
   871                           ;main.c: 73:     escriureEEPROM();
   872  001266  EC3C  F00A         	call	_escriureEEPROM	;wreg free
   873                           
   874                           ;main.c: 74:     TiInitTimer();
   875  00126A  ECD6  F009         	call	_TiInitTimer	;wreg free
   876                           
   877                           ;main.c: 75:     TeInit();
   878  00126E  EC02  F00B         	call	_TeInit	;wreg free
   879                           
   880                           ;main.c: 76:     Sinit();
   881  001272  EC06  F00B         	call	_Sinit	;wreg free
   882                           
   883                           ;main.c: 77:     SMotor();
   884  001276  EC67  F004         	call	_SMotor	;wreg free
   885                           
   886                           ;main.c: 78:     Uinit();
   887  00127A  ECA8  F007         	call	_Uinit	;wreg free
   888                           
   889                           ;main.c: 79:     initAltaveu();
   890  00127E  ECF6  F00A         	call	_initAltaveu	;wreg free
   891                           
   892                           ;main.c: 80:     GLCDInit();
   893  001282  EC16  F00B         	call	_GLCDInit	;wreg free
   894                           
   895                           ;main.c: 82:     LcInit(2,16);
   896  001286  0E10               	movlw	16
   897  001288  6E63               	movwf	LcInit@columns^0,c
   898  00128A  0E02               	movlw	2
   899  00128C  ECE0  F006         	call	_LcInit
   900                           
   901                           ;main.c: 83:     Minit();
   902  001290  EC0E  F00B         	call	_Minit	;wreg free
   903  001294                     l4231:
   904                           
   905                           ;main.c: 88:         menu();
   906  001294  EC39  F003         	call	_menu	;wreg free
   907                           
   908                           ;main.c: 89:         motorAltaveu();
   909  001298  EC4D  F007         	call	_motorAltaveu	;wreg free
   910                           
   911                           ;main.c: 90:         UmotorUsers();
   912  00129C  EC73  F005         	call	_UmotorUsers	;wreg free
   913                           
   914                           ;main.c: 91:         GLCDMotor();
   915  0012A0  EC5A  F001         	call	_GLCDMotor	;wreg free
   916                           
   917                           ;main.c: 92:         TeTeclat();
   918  0012A4  EC2E  F006         	call	_TeTeclat	;wreg free
   919                           
   920                           ;main.c: 93:         SMotor();
   921  0012A8  EC67  F004         	call	_SMotor	;wreg free
   922                           
   923                           ;main.c: 94:         LcLCD();
   924  0012AC  EC24  F00A         	call	_LcLCD	;wreg free
   925  0012B0  D7F1               	goto	l4231
   926  0012B2                     __end_of_main:
   927                           	callstack 0
   928                           
   929 ;; *************** function _motorAltaveu *****************
   930 ;; Defined at:
   931 ;;		line 17 in file "Altaveu.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1
   945 ;;      Params:         0       0       0
   946 ;;      Locals:         0       0       0
   947 ;;      Temps:          3       0       0
   948 ;;      Totals:         3       0       0
   949 ;;Total ram usage:        3 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 3
   952 ;; This function calls:
   953 ;;		_TiGetTics
   954 ;;		_TiResetTics
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text1
   961  000E9A                     __ptext1:
   962                           	callstack 0
   963  000E9A                     _motorAltaveu:
   964                           	callstack 27
   965                           
   966                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
   967                           
   968                           ;incstack = 0
   969  000E9A  D048               	goto	l3383
   970  000E9C                     l646:
   971                           
   972                           ;Altaveu.c: 22:    if (reproduir) {
   973  000E9C  A479               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   974  000E9E  0012               	return	
   975                           
   976                           ;Altaveu.c: 23:     nota = 1;
   977  000EA0  0E01               	movlw	1
   978  000EA2  6E31               	movwf	_nota^0,c
   979                           
   980                           ;Altaveu.c: 24:     copsNota = 0;
   981  000EA4  0E00               	movlw	0
   982  000EA6  6E2F               	movwf	_copsNota^0,c
   983                           
   984                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
   985  000EA8  5030               	movf	_timerAltaveu^0,w,c
   986  000EAA  ECAF  F00A         	call	_TiResetTics
   987  000EAE                     l3347:
   988                           
   989                           ;Altaveu.c: 26:     state = 1;
   990  000EAE  0E01               	movlw	1
   991  000EB0  6E2E               	movwf	motorAltaveu@state^0,c
   992  000EB2  0012               	return	
   993  000EB4                     l3349:
   994                           
   995                           ;Altaveu.c: 30:    if (nota > 5) {
   996  000EB4  0E05               	movlw	5
   997  000EB6  6431               	cpfsgt	_nota^0,c
   998  000EB8  D004               	goto	l3355
   999                           
  1000                           ;Altaveu.c: 31:     reproduir = 0;
  1001  000EBA  9479               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1002                           
  1003                           ;Altaveu.c: 32:     state = 0;
  1004  000EBC  0E00               	movlw	0
  1005  000EBE  6E2E               	movwf	motorAltaveu@state^0,c
  1006                           
  1007                           ;Altaveu.c: 33:    }
  1008  000EC0  0012               	return	
  1009  000EC2                     l3355:
  1010  000EC2  0EA8               	movlw	168
  1011  000EC4  182F               	xorwf	_copsNota^0,w,c
  1012  000EC6  A4D8               	btfss	status,2,c
  1013  000EC8  D004               	goto	l3363
  1014                           
  1015                           ;Altaveu.c: 35:     nota++;
  1016  000ECA  2A31               	incf	_nota^0,f,c
  1017                           
  1018                           ;Altaveu.c: 36:     copsNota = 0;
  1019  000ECC  0E00               	movlw	0
  1020  000ECE  6E2F               	movwf	_copsNota^0,c
  1021  000ED0  D7EE               	goto	l3347
  1022  000ED2                     l3363:
  1023  000ED2  5030               	movf	_timerAltaveu^0,w,c
  1024  000ED4  EC53  F00A         	call	_TiGetTics
  1025  000ED8  5031               	movf	_nota^0,w,c
  1026  000EDA  6E5F               	movwf	??_motorAltaveu^0,c
  1027  000EDC  6A60               	clrf	(??_motorAltaveu+1)^0,c
  1028  000EDE  5058               	movf	?_TiGetTics^0,w,c
  1029  000EE0  5C5F               	subwf	??_motorAltaveu^0,w,c
  1030  000EE2  5060               	movf	(??_motorAltaveu+1)^0,w,c
  1031  000EE4  0A80               	xorlw	128
  1032  000EE6  6E61               	movwf	(??_motorAltaveu+2)^0,c
  1033  000EE8  5059               	movf	(?_TiGetTics+1)^0,w,c
  1034  000EEA  0A80               	xorlw	128
  1035  000EEC  5861               	subwfb	(??_motorAltaveu+2)^0,w,c
  1036  000EEE  B0D8               	btfsc	status,0,c
  1037  000EF0  0012               	return	
  1038                           
  1039                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1040  000EF2  808A               	bsf	138,0,c	;volatile
  1041                           
  1042                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1043  000EF4  5030               	movf	_timerAltaveu^0,w,c
  1044  000EF6  ECAF  F00A         	call	_TiResetTics
  1045                           
  1046                           ;Altaveu.c: 42:     state = 2;
  1047  000EFA  0E02               	movlw	2
  1048  000EFC  6E2E               	movwf	motorAltaveu@state^0,c
  1049  000EFE  0012               	return	
  1050  000F00                     l3371:
  1051                           
  1052                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1053  000F00  5030               	movf	_timerAltaveu^0,w,c
  1054  000F02  EC53  F00A         	call	_TiGetTics
  1055  000F06  5031               	movf	_nota^0,w,c
  1056  000F08  6E5F               	movwf	??_motorAltaveu^0,c
  1057  000F0A  6A60               	clrf	(??_motorAltaveu+1)^0,c
  1058  000F0C  5058               	movf	?_TiGetTics^0,w,c
  1059  000F0E  5C5F               	subwf	??_motorAltaveu^0,w,c
  1060  000F10  5060               	movf	(??_motorAltaveu+1)^0,w,c
  1061  000F12  0A80               	xorlw	128
  1062  000F14  6E61               	movwf	(??_motorAltaveu+2)^0,c
  1063  000F16  5059               	movf	(?_TiGetTics+1)^0,w,c
  1064  000F18  0A80               	xorlw	128
  1065  000F1A  5861               	subwfb	(??_motorAltaveu+2)^0,w,c
  1066  000F1C  B0D8               	btfsc	status,0,c
  1067  000F1E  0012               	return	
  1068                           
  1069                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1070  000F20  908A               	bcf	138,0,c	;volatile
  1071                           
  1072                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1073  000F22  5030               	movf	_timerAltaveu^0,w,c
  1074  000F24  ECAF  F00A         	call	_TiResetTics
  1075                           
  1076                           ;Altaveu.c: 49:     copsNota++;
  1077  000F28  2A2F               	incf	_copsNota^0,f,c
  1078  000F2A  D7C1               	goto	l3347
  1079  000F2C                     l3383:
  1080  000F2C  502E               	movf	motorAltaveu@state^0,w,c
  1081  000F2E  6E5F               	movwf	??_motorAltaveu^0,c
  1082  000F30  6A60               	clrf	(??_motorAltaveu+1)^0,c
  1083                           
  1084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1085                           ; Switch size 1, requested type "simple"
  1086                           ; Number of cases is 1, Range of values is 0 to 0
  1087                           ; switch strategies available:
  1088                           ; Name         Instructions Cycles
  1089                           ; simple_byte            4     3 (average)
  1090                           ;	Chosen strategy is simple_byte
  1091  000F32  5060               	movf	(??_motorAltaveu+1)^0,w,c
  1092  000F34  0A00               	xorlw	0	; case 0
  1093  000F36  A4D8               	btfss	status,2,c
  1094  000F38  0012               	return	
  1095                           
  1096                           ; Switch size 1, requested type "simple"
  1097                           ; Number of cases is 3, Range of values is 0 to 2
  1098                           ; switch strategies available:
  1099                           ; Name         Instructions Cycles
  1100                           ; simple_byte           10     6 (average)
  1101                           ;	Chosen strategy is simple_byte
  1102  000F3A  505F               	movf	??_motorAltaveu^0,w,c
  1103  000F3C  0A00               	xorlw	0	; case 0
  1104  000F3E  B4D8               	btfsc	status,2,c
  1105  000F40  D7AD               	goto	l646
  1106  000F42  0A01               	xorlw	1	; case 1
  1107  000F44  B4D8               	btfsc	status,2,c
  1108  000F46  D7B6               	goto	l3349
  1109  000F48  0A03               	xorlw	3	; case 2
  1110  000F4A  A4D8               	btfss	status,2,c
  1111  000F4C  0012               	return	
  1112  000F4E  D7D8               	goto	l3371
  1113  000F50                     __end_of_motorAltaveu:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _menu *****************
  1117 ;; Defined at:
  1118 ;;		line 27 in file "Menu.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1
  1132 ;;      Params:         0       0       0
  1133 ;;      Locals:         0       0       0
  1134 ;;      Temps:          0       2       0
  1135 ;;      Totals:         0       2       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 6
  1139 ;; This function calls:
  1140 ;;		_GLCDMostraMenu
  1141 ;;		_LcClear
  1142 ;;		_LcGotoXY
  1143 ;;		_LcLliure
  1144 ;;		_LcNewString
  1145 ;;		_LcPutChar
  1146 ;;		_SMSoff
  1147 ;;		_SMSon
  1148 ;;		_SiFerMenu
  1149 ;;		_URegister
  1150 ;;		_UcheckExists
  1151 ;;		_UcheckExistsGetError
  1152 ;;		_UcheckExistsNotFinished
  1153 ;;		_UenviaChar
  1154 ;;		_UenviaPas
  1155 ;;		_UgetNumUsuaris
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text2
  1162  000672                     __ptext2:
  1163                           	callstack 0
  1164  000672                     _menu:
  1165                           	callstack 24
  1166                           
  1167                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
  1168                           
  1169                           ;incstack = 0
  1170  000672  D0F9               	goto	l4003
  1171  000674                     l3813:
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;Menu.c: 32:    LcClear();
  1175  000674  EC7B  F00A         	call	_LcClear	;wreg free
  1176                           
  1177                           ;Menu.c: 33:    LcNewString("1.LOGIN");
  1178  000678  0E9D               	movlw	low STR_1
  1179  00067A  6E58               	movwf	LcNewString@new_s^0,c
  1180  00067C  EC12  F00B         	call	_LcNewString	;wreg free
  1181                           
  1182                           ;Menu.c: 34:    state = 1;
  1183  000680  0E01               	movlw	1
  1184  000682  6E39               	movwf	menu@state^0,c
  1185                           
  1186                           ;Menu.c: 35:   break;
  1187  000684  0012               	return	
  1188  000686                     l3819:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;Menu.c: 37:    if (LcLliure()) {
  1192  000686  ECEC  F00A         	call	_LcLliure	;wreg free
  1193  00068A  A0D8               	btfss	status,0,c
  1194  00068C  0012               	return	
  1195                           
  1196                           ;Menu.c: 38:     LcGotoXY(0,1);
  1197  00068E  0E01               	movlw	1
  1198  000690  6E60               	movwf	LcGotoXY@Row^0,c
  1199  000692  0E00               	movlw	0
  1200  000694  EC9C  F009         	call	_LcGotoXY
  1201                           
  1202                           ;Menu.c: 39:     LcNewString("2.REGISTER");
  1203  000698  0E92               	movlw	low STR_2
  1204  00069A  6E58               	movwf	LcNewString@new_s^0,c
  1205  00069C  EC12  F00B         	call	_LcNewString	;wreg free
  1206                           
  1207                           ;Menu.c: 40:     NovaTecla = -1;
  1208  0006A0  6874               	setf	_NovaTecla^0,c
  1209                           
  1210                           ;Menu.c: 41:     state = 2;
  1211  0006A2  0E02               	movlw	2
  1212  0006A4  6E39               	movwf	menu@state^0,c
  1213  0006A6  0012               	return	
  1214  0006A8                     l3829:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1218  0006A8  0474               	decf	_NovaTecla^0,w,c
  1219  0006AA  A4D8               	btfss	status,2,c
  1220  0006AC  D009               	goto	l3837
  1221                           
  1222                           ; BSR set to: 0
  1223  0006AE  EC20  F00B         	call	_UgetNumUsuaris	;wreg free
  1224  0006B2  0900               	iorlw	0
  1225  0006B4  B4D8               	btfsc	status,2,c
  1226  0006B6  D004               	goto	l3837
  1227                           
  1228                           ;Menu.c: 46:     loginNOTRegister = 1;
  1229  0006B8  8A79               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1230  0006BA                     l3835:
  1231                           
  1232                           ;Menu.c: 47:     state = 3;
  1233  0006BA  0E03               	movlw	3
  1234  0006BC  6E39               	movwf	menu@state^0,c
  1235                           
  1236                           ;Menu.c: 48:    }
  1237  0006BE  0012               	return	
  1238  0006C0                     l3837:
  1239  0006C0  0E02               	movlw	2
  1240  0006C2  1874               	xorwf	_NovaTecla^0,w,c
  1241  0006C4  A4D8               	btfss	status,2,c
  1242  0006C6  0012               	return	
  1243                           
  1244                           ;Menu.c: 50:     loginNOTRegister = 0;
  1245  0006C8  9A79               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1246  0006CA  D7F7               	goto	l3835
  1247  0006CC                     l441:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;Menu.c: 55:    NovaTecla = -1;
  1251  0006CC  6874               	setf	_NovaTecla^0,c
  1252                           
  1253                           ;Menu.c: 56:    novaLletra = -1;
  1254  0006CE  6873               	setf	_novaLletra^0,c
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;Menu.c: 57:    LcClear();
  1258  0006D0  EC7B  F00A         	call	_LcClear	;wreg free
  1259                           
  1260                           ;Menu.c: 58:    LcNewString("USER: ");
  1261  0006D4  0EAC               	movlw	low STR_3
  1262  0006D6  6E58               	movwf	LcNewString@new_s^0,c
  1263  0006D8  EC12  F00B         	call	_LcNewString	;wreg free
  1264                           
  1265                           ;Menu.c: 59:    state = 4;
  1266  0006DC  0E04               	movlw	4
  1267  0006DE  6E39               	movwf	menu@state^0,c
  1268                           
  1269                           ;Menu.c: 60:   break;
  1270  0006E0  0012               	return	
  1271  0006E2                     l3849:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;Menu.c: 62:    if (LcLliure()) {
  1275  0006E2  ECEC  F00A         	call	_LcLliure	;wreg free
  1276  0006E6  A0D8               	btfss	status,0,c
  1277  0006E8  0012               	return	
  1278                           
  1279                           ;Menu.c: 63:     LcGotoXY(0,1);
  1280  0006EA  0E01               	movlw	1
  1281  0006EC  6E60               	movwf	LcGotoXY@Row^0,c
  1282  0006EE  0E00               	movlw	0
  1283  0006F0  EC9C  F009         	call	_LcGotoXY
  1284                           
  1285                           ;Menu.c: 64:     LcNewString("PSWD: ");
  1286  0006F4  0EA5               	movlw	low STR_4
  1287  0006F6  6E58               	movwf	LcNewString@new_s^0,c
  1288  0006F8  EC12  F00B         	call	_LcNewString	;wreg free
  1289                           
  1290                           ;Menu.c: 65:     state = 5;
  1291  0006FC  0E05               	movlw	5
  1292  0006FE  6E39               	movwf	menu@state^0,c
  1293  000700  0012               	return	
  1294  000702                     l3857:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;Menu.c: 69:    if (LcLliure()) {
  1298  000702  ECEC  F00A         	call	_LcLliure	;wreg free
  1299  000706  A0D8               	btfss	status,0,c
  1300  000708  0012               	return	
  1301                           
  1302                           ;Menu.c: 70:     LcGotoXY(6,0);
  1303  00070A  0E00               	movlw	0
  1304  00070C  6E60               	movwf	LcGotoXY@Row^0,c
  1305  00070E  0E06               	movlw	6
  1306  000710  EC9C  F009         	call	_LcGotoXY
  1307                           
  1308                           ;Menu.c: 71:     SMSon();
  1309  000714  EC1A  F00B         	call	_SMSon	;wreg free
  1310                           
  1311                           ;Menu.c: 72:     tmp =0;
  1312  000718  0E00               	movlw	0
  1313  00071A  6E3C               	movwf	_tmp^0,c
  1314  00071C                     l3865:
  1315                           
  1316                           ;Menu.c: 73:     state = 6;
  1317  00071C  0E06               	movlw	6
  1318  00071E  6E39               	movwf	menu@state^0,c
  1319  000720  0012               	return	
  1320  000722                     l3867:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;Menu.c: 77:    if (novaLletra > 47 && NovaTecla != 10) {
  1324  000722  5073               	movf	_novaLletra^0,w,c
  1325  000724  0A80               	xorlw	128
  1326  000726  0F50               	addlw	-176
  1327  000728  A0D8               	btfss	status,0,c
  1328  00072A  D00F               	goto	l3877
  1329                           
  1330                           ; BSR set to: 0
  1331  00072C  0E0A               	movlw	10
  1332  00072E  1874               	xorwf	_NovaTecla^0,w,c
  1333  000730  B4D8               	btfsc	status,2,c
  1334  000732  D00B               	goto	l3877
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;Menu.c: 78:     LcPutChar(novaLletra);
  1338  000734  5073               	movf	_novaLletra^0,w,c
  1339  000736  EC08  F009         	call	_LcPutChar
  1340                           
  1341                           ;Menu.c: 79:     UenviaChar(novaLletra,tmp);
  1342  00073A  C03C  F058         	movff	_tmp,UenviaChar@pos
  1343  00073E  5073               	movf	_novaLletra^0,w,c
  1344  000740  ECCC  F00A         	call	_UenviaChar
  1345  000744                     l3875:
  1346                           
  1347                           ;Menu.c: 80:     state = 7;
  1348  000744  0E07               	movlw	7
  1349  000746  6E39               	movwf	menu@state^0,c
  1350                           
  1351                           ;Menu.c: 81:    }
  1352  000748  0012               	return	
  1353  00074A                     l3877:
  1354                           
  1355                           ; BSR set to: 0
  1356  00074A  0E0B               	movlw	11
  1357  00074C  1874               	xorwf	_NovaTecla^0,w,c
  1358  00074E  A4D8               	btfss	status,2,c
  1359  000750  0012               	return	
  1360  000752  D7F8               	goto	l3875
  1361  000754                     l3881:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;Menu.c: 87:    if (tmp != 7 && NovaTecla != 11) {
  1365  000754  0E07               	movlw	7
  1366  000756  183C               	xorwf	_tmp^0,w,c
  1367  000758  B4D8               	btfsc	status,2,c
  1368  00075A  D008               	goto	l3893
  1369                           
  1370                           ; BSR set to: 0
  1371  00075C  0E0B               	movlw	11
  1372  00075E  1874               	xorwf	_NovaTecla^0,w,c
  1373  000760  B4D8               	btfsc	status,2,c
  1374  000762  D004               	goto	l3893
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;Menu.c: 88:     tmp++;
  1378  000764  2A3C               	incf	_tmp^0,f,c
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;Menu.c: 89:     NovaTecla = -1;
  1382  000766  6874               	setf	_NovaTecla^0,c
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;Menu.c: 90:     novaLletra = -1;
  1386  000768  6873               	setf	_novaLletra^0,c
  1387  00076A  D7D8               	goto	l3865
  1388  00076C                     l3893:
  1389                           
  1390                           ; BSR set to: 0
  1391  00076C  0E07               	movlw	7
  1392  00076E  183C               	xorwf	_tmp^0,w,c
  1393  000770  B4D8               	btfsc	status,2,c
  1394  000772  D004               	goto	u3720
  1395                           
  1396                           ; BSR set to: 0
  1397  000774  0E0B               	movlw	11
  1398  000776  1874               	xorwf	_NovaTecla^0,w,c
  1399  000778  A4D8               	btfss	status,2,c
  1400  00077A  0012               	return	
  1401  00077C                     u3720:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;Menu.c: 94:     LcGotoXY(6,1);
  1405  00077C  0E01               	movlw	1
  1406  00077E  6E60               	movwf	LcGotoXY@Row^0,c
  1407  000780  0E06               	movlw	6
  1408  000782  EC9C  F009         	call	_LcGotoXY
  1409                           
  1410                           ;Menu.c: 95:     UenviaChar('\0',tmp);
  1411  000786  C03C  F058         	movff	_tmp,UenviaChar@pos
  1412  00078A  0E00               	movlw	0
  1413  00078C  ECCC  F00A         	call	_UenviaChar
  1414                           
  1415                           ;Menu.c: 96:     NovaTecla = -1;
  1416  000790  6874               	setf	_NovaTecla^0,c
  1417                           
  1418                           ;Menu.c: 97:     novaLletra = -1;
  1419  000792  6873               	setf	_novaLletra^0,c
  1420                           
  1421                           ;Menu.c: 98:     tmp = 0;
  1422  000794  0E00               	movlw	0
  1423  000796  6E3C               	movwf	_tmp^0,c
  1424  000798                     l3907:
  1425                           
  1426                           ;Menu.c: 99:     state = 8;
  1427  000798  0E08               	movlw	8
  1428  00079A  6E39               	movwf	menu@state^0,c
  1429  00079C  0012               	return	
  1430  00079E                     l3909:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla != 10) {
  1434  00079E  5073               	movf	_novaLletra^0,w,c
  1435  0007A0  0A80               	xorlw	128
  1436  0007A2  0F50               	addlw	-176
  1437  0007A4  A0D8               	btfss	status,0,c
  1438  0007A6  D00F               	goto	l3919
  1439                           
  1440                           ; BSR set to: 0
  1441  0007A8  0E0A               	movlw	10
  1442  0007AA  1874               	xorwf	_NovaTecla^0,w,c
  1443  0007AC  B4D8               	btfsc	status,2,c
  1444  0007AE  D00B               	goto	l3919
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;Menu.c: 104:     LcPutChar(novaLletra);
  1448  0007B0  5073               	movf	_novaLletra^0,w,c
  1449  0007B2  EC08  F009         	call	_LcPutChar
  1450                           
  1451                           ;Menu.c: 105:     UenviaPas(novaLletra,tmp);
  1452  0007B6  C03C  F058         	movff	_tmp,UenviaPas@pos
  1453  0007BA  5073               	movf	_novaLletra^0,w,c
  1454  0007BC  ECC4  F00A         	call	_UenviaPas
  1455  0007C0                     l3917:
  1456                           
  1457                           ;Menu.c: 106:     state = 9;
  1458  0007C0  0E09               	movlw	9
  1459  0007C2  6E39               	movwf	menu@state^0,c
  1460                           
  1461                           ;Menu.c: 107:    }
  1462  0007C4  0012               	return	
  1463  0007C6                     l3919:
  1464                           
  1465                           ; BSR set to: 0
  1466  0007C6  0E0B               	movlw	11
  1467  0007C8  1874               	xorwf	_NovaTecla^0,w,c
  1468  0007CA  A4D8               	btfss	status,2,c
  1469  0007CC  0012               	return	
  1470  0007CE  D7F8               	goto	l3917
  1471  0007D0                     l3923:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;Menu.c: 113:    if (tmp != 7 && NovaTecla != 11) {
  1475  0007D0  0E07               	movlw	7
  1476  0007D2  183C               	xorwf	_tmp^0,w,c
  1477  0007D4  B4D8               	btfsc	status,2,c
  1478  0007D6  D008               	goto	l3935
  1479                           
  1480                           ; BSR set to: 0
  1481  0007D8  0E0B               	movlw	11
  1482  0007DA  1874               	xorwf	_NovaTecla^0,w,c
  1483  0007DC  B4D8               	btfsc	status,2,c
  1484  0007DE  D004               	goto	l3935
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;Menu.c: 114:     tmp++;
  1488  0007E0  2A3C               	incf	_tmp^0,f,c
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;Menu.c: 115:     NovaTecla = -1;
  1492  0007E2  6874               	setf	_NovaTecla^0,c
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;Menu.c: 116:     novaLletra = -1;
  1496  0007E4  6873               	setf	_novaLletra^0,c
  1497  0007E6  D7D8               	goto	l3907
  1498  0007E8                     l3935:
  1499                           
  1500                           ; BSR set to: 0
  1501  0007E8  0E07               	movlw	7
  1502  0007EA  183C               	xorwf	_tmp^0,w,c
  1503  0007EC  B4D8               	btfsc	status,2,c
  1504  0007EE  D004               	goto	u3790
  1505                           
  1506                           ; BSR set to: 0
  1507  0007F0  0E0B               	movlw	11
  1508  0007F2  1874               	xorwf	_NovaTecla^0,w,c
  1509  0007F4  A4D8               	btfss	status,2,c
  1510  0007F6  0012               	return	
  1511  0007F8                     u3790:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;Menu.c: 120:     UenviaPas('\0',tmp);
  1515  0007F8  C03C  F058         	movff	_tmp,UenviaPas@pos
  1516  0007FC  0E00               	movlw	0
  1517  0007FE  ECC4  F00A         	call	_UenviaPas
  1518                           
  1519                           ;Menu.c: 121:     NovaTecla = -1;
  1520  000802  6874               	setf	_NovaTecla^0,c
  1521                           
  1522                           ;Menu.c: 122:     novaLletra = -1;
  1523  000804  6873               	setf	_novaLletra^0,c
  1524                           
  1525                           ;Menu.c: 123:     tmp = 0;
  1526  000806  0E00               	movlw	0
  1527  000808  6E3C               	movwf	_tmp^0,c
  1528                           
  1529                           ;Menu.c: 124:     UcheckExists();
  1530  00080A  EC22  F00B         	call	_UcheckExists	;wreg free
  1531                           
  1532                           ;Menu.c: 125:     SMSoff();
  1533  00080E  EC1D  F00B         	call	_SMSoff	;wreg free
  1534                           
  1535                           ;Menu.c: 126:     state = 10;
  1536  000812  0E0A               	movlw	10
  1537  000814  6E39               	movwf	menu@state^0,c
  1538  000816  0012               	return	
  1539  000818                     l3953:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;Menu.c: 130:    if (!UcheckExistsNotFinished()) {
  1543  000818  ECDA  F00A         	call	_UcheckExistsNotFinished	;wreg free
  1544  00081C  B0D8               	btfsc	status,0,c
  1545  00081E  0012               	return	
  1546                           
  1547                           ;Menu.c: 131:     state = 11;
  1548  000820  0E0B               	movlw	11
  1549  000822  6E39               	movwf	menu@state^0,c
  1550  000824  0012               	return	
  1551  000826                     l3957:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;Menu.c: 136:                 state = 12;
  1555  000826  0E0C               	movlw	12
  1556  000828  6E39               	movwf	menu@state^0,c
  1557                           
  1558                           ;Menu.c: 137:             }
  1559  00082A  0012               	return	
  1560  00082C                     l3975:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;Menu.c: 151:    LcClear();
  1564  00082C  EC7B  F00A         	call	_LcClear	;wreg free
  1565                           
  1566                           ;Menu.c: 152:    SiFerMenu();
  1567  000830  EC26  F00B         	call	_SiFerMenu	;wreg free
  1568                           
  1569                           ;Menu.c: 153:    GLCDMostraMenu(menuDalt);
  1570  000834  503A               	movf	_menuDalt^0,w,c
  1571  000836  ECE0  F00A         	call	_GLCDMostraMenu
  1572                           
  1573                           ;Menu.c: 154:    NovaTecla = -1;
  1574  00083A  6874               	setf	_NovaTecla^0,c
  1575                           
  1576                           ;Menu.c: 155:    state = 13;
  1577  00083C  0E0D               	movlw	13
  1578  00083E  6E39               	movwf	menu@state^0,c
  1579                           
  1580                           ;Menu.c: 156:   break;
  1581  000840  0012               	return	
  1582  000842                     l3985:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;Menu.c: 158:    if (NovaTecla == 8) {
  1586  000842  0E08               	movlw	8
  1587  000844  1874               	xorwf	_NovaTecla^0,w,c
  1588  000846  A4D8               	btfss	status,2,c
  1589  000848  D005               	goto	l3993
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;Menu.c: 159:     if(menuDalt < 4) menuDalt++;
  1593  00084A  0E04               	movlw	4
  1594  00084C  603A               	cpfslt	_menuDalt^0,c
  1595  00084E  D7EB               	goto	l3957
  1596                           
  1597                           ; BSR set to: 0
  1598  000850  2A3A               	incf	_menuDalt^0,f,c
  1599  000852  D7E9               	goto	l3957
  1600  000854                     l3993:
  1601                           
  1602                           ; BSR set to: 0
  1603  000854  0E02               	movlw	2
  1604  000856  1874               	xorwf	_NovaTecla^0,w,c
  1605  000858  A4D8               	btfss	status,2,c
  1606  00085A  0012               	return	
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;Menu.c: 163:     if(menuDalt > 0) menuDalt--;
  1610  00085C  503A               	movf	_menuDalt^0,w,c
  1611  00085E  B4D8               	btfsc	status,2,c
  1612  000860  D7E2               	goto	l3957
  1613                           
  1614                           ; BSR set to: 0
  1615  000862  063A               	decf	_menuDalt^0,f,c
  1616  000864  D7E0               	goto	l3957
  1617  000866                     l4003:
  1618  000866  5039               	movf	menu@state^0,w,c
  1619  000868  0100               	movlb	0	; () banked
  1620  00086A  6F8C               	movwf	??_menu& (0+255),b
  1621  00086C  6B8D               	clrf	(??_menu+1)& (0+255),b
  1622                           
  1623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1624                           ; Switch size 1, requested type "simple"
  1625                           ; Number of cases is 1, Range of values is 0 to 0
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte            4     3 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630  00086E  518D               	movf	(??_menu+1)& (0+255),w,b
  1631  000870  0A00               	xorlw	0	; case 0
  1632  000872  A4D8               	btfss	status,2,c
  1633  000874  0012               	return	
  1634                           
  1635                           ; BSR set to: 0
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 14, Range of values is 0 to 13
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte           43    22 (average)
  1641                           ;	Chosen strategy is simple_byte
  1642  000876  518C               	movf	??_menu& (0+255),w,b
  1643  000878  0A00               	xorlw	0	; case 0
  1644  00087A  B4D8               	btfsc	status,2,c
  1645  00087C  D6FB               	goto	l3813
  1646  00087E  0A01               	xorlw	1	; case 1
  1647  000880  B4D8               	btfsc	status,2,c
  1648  000882  D701               	goto	l3819
  1649  000884  0A03               	xorlw	3	; case 2
  1650  000886  B4D8               	btfsc	status,2,c
  1651  000888  D70F               	goto	l3829
  1652  00088A  0A01               	xorlw	1	; case 3
  1653  00088C  B4D8               	btfsc	status,2,c
  1654  00088E  D71E               	goto	l441
  1655  000890  0A07               	xorlw	7	; case 4
  1656  000892  B4D8               	btfsc	status,2,c
  1657  000894  D726               	goto	l3849
  1658  000896  0A01               	xorlw	1	; case 5
  1659  000898  B4D8               	btfsc	status,2,c
  1660  00089A  D733               	goto	l3857
  1661  00089C  0A03               	xorlw	3	; case 6
  1662  00089E  B4D8               	btfsc	status,2,c
  1663  0008A0  D740               	goto	l3867
  1664  0008A2  0A01               	xorlw	1	; case 7
  1665  0008A4  B4D8               	btfsc	status,2,c
  1666  0008A6  D756               	goto	l3881
  1667  0008A8  0A0F               	xorlw	15	; case 8
  1668  0008AA  B4D8               	btfsc	status,2,c
  1669  0008AC  D778               	goto	l3909
  1670  0008AE  0A01               	xorlw	1	; case 9
  1671  0008B0  B4D8               	btfsc	status,2,c
  1672  0008B2  D78E               	goto	l3923
  1673  0008B4  0A03               	xorlw	3	; case 10
  1674  0008B6  B4D8               	btfsc	status,2,c
  1675  0008B8  D7AF               	goto	l3953
  1676  0008BA  0A01               	xorlw	1	; case 11
  1677  0008BC  B4D8               	btfsc	status,2,c
  1678  0008BE  D7B3               	goto	l3957
  1679  0008C0  0A07               	xorlw	7	; case 12
  1680  0008C2  B4D8               	btfsc	status,2,c
  1681  0008C4  D7B3               	goto	l3975
  1682  0008C6  0A01               	xorlw	1	; case 13
  1683  0008C8  A4D8               	btfss	status,2,c
  1684  0008CA  0012               	return	
  1685  0008CC  D7BA               	goto	l3985
  1686  0008CE                     __end_of_menu:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _UgetNumUsuaris *****************
  1690 ;; Defined at:
  1691 ;;		line 26 in file "Usuaris.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1
  1705 ;;      Params:         0       0       0
  1706 ;;      Locals:         0       0       0
  1707 ;;      Temps:          0       0       0
  1708 ;;      Totals:         0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 2
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_menu
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text3
  1720  001640                     __ptext3:
  1721                           	callstack 0
  1722  001640                     _UgetNumUsuaris:
  1723                           	callstack 27
  1724                           
  1725                           ;Usuaris.c: 27:     return numUsuaris;
  1726                           
  1727                           ;incstack = 0
  1728  001640  5037               	movf	_numUsuaris^0,w,c
  1729  001642  0012               	return		;funcret
  1730  001644                     __end_of_UgetNumUsuaris:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _UenviaPas *****************
  1734 ;; Defined at:
  1735 ;;		line 42 in file "Usuaris.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  c               1    wreg     unsigned char 
  1738 ;;  pos             1    5[COMRAM] unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  c               1    6[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1
  1750 ;;      Params:         1       0       0
  1751 ;;      Locals:         1       0       0
  1752 ;;      Temps:          0       0       0
  1753 ;;      Totals:         2       0       0
  1754 ;;Total ram usage:        2 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_menu
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text4
  1765  001588                     __ptext4:
  1766                           	callstack 0
  1767  001588                     _UenviaPas:
  1768                           	callstack 27
  1769                           
  1770                           ;incstack = 0
  1771                           ;UenviaPas@c stored from wreg
  1772  001588  6E59               	movwf	UenviaPas@c^0,c
  1773                           
  1774                           ;Usuaris.c: 43:     tmpPassword[pos] = c;
  1775  00158A  5058               	movf	UenviaPas@pos^0,w,c
  1776  00158C  0F19               	addlw	low _tmpPassword
  1777  00158E  6ED9               	movwf	fsr2l,c
  1778  001590  6ADA               	clrf	fsr2h,c
  1779  001592  C059  FFDF         	movff	UenviaPas@c,indf2
  1780  001596  0012               	return		;funcret
  1781  001598                     __end_of_UenviaPas:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _UenviaChar *****************
  1785 ;; Defined at:
  1786 ;;		line 39 in file "Usuaris.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  c               1    wreg     unsigned char 
  1789 ;;  pos             1    5[COMRAM] unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  c               1    6[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1
  1801 ;;      Params:         1       0       0
  1802 ;;      Locals:         1       0       0
  1803 ;;      Temps:          0       0       0
  1804 ;;      Totals:         2       0       0
  1805 ;;Total ram usage:        2 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_menu
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text5
  1816  001598                     __ptext5:
  1817                           	callstack 0
  1818  001598                     _UenviaChar:
  1819                           	callstack 27
  1820                           
  1821                           ;incstack = 0
  1822                           ;UenviaChar@c stored from wreg
  1823  001598  6E59               	movwf	UenviaChar@c^0,c
  1824                           
  1825                           ;Usuaris.c: 40:     tmpUsername[pos] = c;
  1826  00159A  5058               	movf	UenviaChar@pos^0,w,c
  1827  00159C  0F4A               	addlw	low _tmpUsername
  1828  00159E  6ED9               	movwf	fsr2l,c
  1829  0015A0  6ADA               	clrf	fsr2h,c
  1830  0015A2  C059  FFDF         	movff	UenviaChar@c,indf2
  1831  0015A6  0012               	return		;funcret
  1832  0015A8                     __end_of_UenviaChar:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _UcheckExistsNotFinished *****************
  1836 ;; Defined at:
  1837 ;;		line 33 in file "Usuaris.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1
  1851 ;;      Params:         0       0       0
  1852 ;;      Locals:         0       0       0
  1853 ;;      Temps:          0       0       0
  1854 ;;      Totals:         0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 2
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_menu
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866  0015B4                     __ptext6:
  1867                           	callstack 0
  1868  0015B4                     _UcheckExistsNotFinished:
  1869                           	callstack 27
  1870                           
  1871                           ;Usuaris.c: 34:     return do_check_exists;
  1872                           
  1873                           ;incstack = 0
  1874  0015B4  B879               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1875  0015B6  D002               	goto	l1639
  1876  0015B8  90D8               	bcf	status,0,c
  1877  0015BA  0012               	return	
  1878  0015BC                     l1639:
  1879  0015BC  80D8               	bsf	status,0,c
  1880  0015BE  0012               	return		;funcret
  1881  0015C0                     __end_of_UcheckExistsNotFinished:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _UcheckExistsGetError *****************
  1885 ;; Defined at:
  1886 ;;		line 36 in file "Usuaris.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;		None               void
  1893 ;; Registers used:
  1894 ;;		wreg, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         0       0       0
  1902 ;;      Temps:          1       0       0
  1903 ;;      Totals:         1       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_menu
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text7
  1915  0015E4                     __ptext7:
  1916                           	callstack 0
  1917  0015E4                     _UcheckExistsGetError:
  1918                           	callstack 27
  1919                           
  1920                           ;Usuaris.c: 37:     return usuariLoguejat;
  1921                           
  1922                           ;incstack = 0
  1923  0015E4  C072  F058         	movff	_usuariLoguejat,??_UcheckExistsGetError
  1924  0015E8  3058               	rrcf	??_UcheckExistsGetError^0,w,c
  1925  0015EA  0012               	return		;funcret
  1926  0015EC                     __end_of_UcheckExistsGetError:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _UcheckExists *****************
  1930 ;; Defined at:
  1931 ;;		line 30 in file "Usuaris.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1
  1945 ;;      Params:         0       0       0
  1946 ;;      Locals:         0       0       0
  1947 ;;      Temps:          0       0       0
  1948 ;;      Totals:         0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_menu
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text8
  1960  001644                     __ptext8:
  1961                           	callstack 0
  1962  001644                     _UcheckExists:
  1963                           	callstack 27
  1964                           
  1965                           ;Usuaris.c: 31:     do_check_exists = 1;
  1966                           
  1967                           ;incstack = 0
  1968  001644  8879               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1969  001646  0012               	return		;funcret
  1970  001648                     __end_of_UcheckExists:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _URegister *****************
  1974 ;; Defined at:
  1975 ;;		line 50 in file "Usuaris.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1
  1989 ;;      Params:         0       0       0
  1990 ;;      Locals:         0       0       0
  1991 ;;      Temps:          0       0       0
  1992 ;;      Totals:         0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 2
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_menu
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004  001648                     __ptext9:
  2005                           	callstack 0
  2006  001648                     _URegister:
  2007                           	callstack 27
  2008                           
  2009                           ;Usuaris.c: 51:     do_register = 1;
  2010                           
  2011                           ;incstack = 0
  2012  001648  8679               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2013  00164A  0012               	return		;funcret
  2014  00164C                     __end_of_URegister:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _SiFerMenu *****************
  2018 ;; Defined at:
  2019 ;;		line 19 in file "GestioLCD.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		None
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1
  2033 ;;      Params:         0       0       0
  2034 ;;      Locals:         0       0       0
  2035 ;;      Temps:          0       0       0
  2036 ;;      Totals:         0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 2
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_menu
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text10
  2048  00164C                     __ptext10:
  2049                           	callstack 0
  2050  00164C                     _SiFerMenu:
  2051                           	callstack 27
  2052                           
  2053                           ;GestioLCD.c: 20:     ferMenu = 1;
  2054                           
  2055                           ;incstack = 0
  2056  00164C  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2057  00164E  0012               	return		;funcret
  2058  001650                     __end_of_SiFerMenu:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _SMSon *****************
  2062 ;; Defined at:
  2063 ;;		line 139 in file "Ssms.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		None
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1
  2077 ;;      Params:         0       0       0
  2078 ;;      Locals:         0       0       0
  2079 ;;      Temps:          0       0       0
  2080 ;;      Totals:         0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_menu
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text11
  2092  001634                     __ptext11:
  2093                           	callstack 0
  2094  001634                     _SMSon:
  2095                           	callstack 27
  2096                           
  2097                           ;Ssms.c: 140:     setSMSon = 1;
  2098                           
  2099                           ;incstack = 0
  2100  001634  8C79               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2101                           
  2102                           ;Ssms.c: 141:     novaTecla = -1;
  2103  001636  6877               	setf	_novaTecla^0,c
  2104  001638  0012               	return		;funcret
  2105  00163A                     __end_of_SMSon:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _SMSoff *****************
  2109 ;; Defined at:
  2110 ;;		line 144 in file "Ssms.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		None
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1
  2124 ;;      Params:         0       0       0
  2125 ;;      Locals:         0       0       0
  2126 ;;      Temps:          0       0       0
  2127 ;;      Totals:         0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_menu
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text12
  2139  00163A                     __ptext12:
  2140                           	callstack 0
  2141  00163A                     _SMSoff:
  2142                           	callstack 27
  2143                           
  2144                           ;Ssms.c: 145:     setSMSon = 0;
  2145                           
  2146                           ;incstack = 0
  2147  00163A  9C79               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2148                           
  2149                           ;Ssms.c: 146:     novaTecla = -1;
  2150  00163C  6877               	setf	_novaTecla^0,c
  2151  00163E  0012               	return		;funcret
  2152  001640                     __end_of_SMSoff:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _GLCDMostraMenu *****************
  2156 ;; Defined at:
  2157 ;;		line 30 in file "GestioLCD.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  num             1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  num             1    5[COMRAM] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1
  2171 ;;      Params:         0       0       0
  2172 ;;      Locals:         1       0       0
  2173 ;;      Temps:          0       0       0
  2174 ;;      Totals:         1       0       0
  2175 ;;Total ram usage:        1 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_menu
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text13
  2186  0015C0                     __ptext13:
  2187                           	callstack 0
  2188  0015C0                     _GLCDMostraMenu:
  2189                           	callstack 27
  2190                           
  2191                           ;incstack = 0
  2192                           ;GLCDMostraMenu@num stored from wreg
  2193  0015C0  6E58               	movwf	GLCDMostraMenu@num^0,c
  2194                           
  2195                           ;GestioLCD.c: 31:     newString = 1;
  2196  0015C2  8079               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  2197                           
  2198                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  2199  0015C4  C058  F02C         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  2200                           
  2201                           ;GestioLCD.c: 33:     ferMenu = 1;
  2202  0015C8  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2203  0015CA  0012               	return		;funcret
  2204  0015CC                     __end_of_GLCDMostraMenu:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _init_ports *****************
  2208 ;; Defined at:
  2209 ;;		line 21 in file "main.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1
  2223 ;;      Params:         0       0       0
  2224 ;;      Locals:         0       0       0
  2225 ;;      Temps:          0       0       0
  2226 ;;      Totals:         0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text14
  2238  00153E                     __ptext14:
  2239                           	callstack 0
  2240  00153E                     _init_ports:
  2241                           	callstack 28
  2242                           
  2243                           ;incstack = 0
  2244  00153E  0E03               	movlw	3
  2245  001540  6E92               	movwf	146,c	;volatile
  2246  001542  0EE0               	movlw	224
  2247  001544  6E93               	movwf	147,c	;volatile
  2248  001546  968A               	bcf	138,3,c	;volatile
  2249  001548  908A               	bcf	138,0,c	;volatile
  2250  00154A  928A               	bcf	138,1,c	;volatile
  2251                           
  2252                           ;main.c: 44:     TRISC = 0xC0;
  2253  00154C  0EC0               	movlw	192
  2254  00154E  6E94               	movwf	148,c	;volatile
  2255                           
  2256                           ;main.c: 54:     TRISD = 0x8F;
  2257  001550  0E8F               	movlw	143
  2258  001552  6E95               	movwf	149,c	;volatile
  2259                           
  2260                           ;main.c: 55:     LATD = 0x00;
  2261  001554  0E00               	movlw	0
  2262  001556  6E8C               	movwf	140,c	;volatile
  2263                           
  2264                           ;main.c: 58:     EECON1bits.EEPGD = 1;
  2265  001558  8EA6               	bsf	166,7,c	;volsfr
  2266                           
  2267                           ;main.c: 59:     EECON1bits.CFGS = 0;
  2268  00155A  9CA6               	bcf	166,6,c	;volsfr
  2269  00155C  0012               	return		;funcret
  2270  00155E                     __end_of_init_ports:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _initAltaveu *****************
  2274 ;; Defined at:
  2275 ;;		line 10 in file "Altaveu.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1
  2289 ;;      Params:         0       0       0
  2290 ;;      Locals:         0       0       0
  2291 ;;      Temps:          0       0       0
  2292 ;;      Totals:         0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 3
  2296 ;; This function calls:
  2297 ;;		_TiGetTimer
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text15
  2304  0015EC                     __ptext15:
  2305                           	callstack 0
  2306  0015EC                     _initAltaveu:
  2307                           	callstack 27
  2308                           
  2309                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2310                           
  2311                           ;incstack = 0
  2312  0015EC  ECB9  F009         	call	_TiGetTimer	;wreg free
  2313  0015F0  6E30               	movwf	_timerAltaveu^0,c
  2314  0015F2  0012               	return		;funcret
  2315  0015F4                     __end_of_initAltaveu:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _escriureEEPROM *****************
  2319 ;; Defined at:
  2320 ;;		line 183 in file "Usuaris.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  caca            1    5[COMRAM] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1
  2334 ;;      Params:         0       0       0
  2335 ;;      Locals:         1       0       0
  2336 ;;      Temps:          0       0       0
  2337 ;;      Totals:         1       0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 2
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text16
  2349  001478                     __ptext16:
  2350                           	callstack 0
  2351  001478                     _escriureEEPROM:
  2352                           	callstack 28
  2353                           
  2354                           ;Usuaris.c: 184:     for(unsigned char caca = 0; caca < 160; caca++){
  2355                           
  2356                           ;incstack = 0
  2357  001478  0E00               	movlw	0
  2358  00147A  6E58               	movwf	escriureEEPROM@caca^0,c
  2359  00147C                     l1793:
  2360                           
  2361                           ;Usuaris.c: 185:         EEADR = 0;
  2362  00147C  0E00               	movlw	0
  2363  00147E  6EA9               	movwf	169,c	;volatile
  2364                           
  2365                           ;Usuaris.c: 186:         EEDATA = 0;
  2366  001480  0E00               	movlw	0
  2367  001482  6EA8               	movwf	168,c	;volatile
  2368                           
  2369                           ;Usuaris.c: 187:         EECON1bits.EEPGD = 0;
  2370  001484  9EA6               	bcf	166,7,c	;volsfr
  2371                           
  2372                           ;Usuaris.c: 188:         EECON1bits.CFGS = 0;
  2373  001486  9CA6               	bcf	166,6,c	;volsfr
  2374                           
  2375                           ;Usuaris.c: 189:         EECON1bits.WREN = 1;
  2376  001488  84A6               	bsf	166,2,c	;volsfr
  2377                           
  2378                           ;Usuaris.c: 190:         INTCONbits.GIE = 0;
  2379  00148A  9EF2               	bcf	242,7,c	;volatile
  2380                           
  2381                           ;Usuaris.c: 191:         EECON2 = 85;
  2382  00148C  0E55               	movlw	85
  2383  00148E  6EA7               	movwf	167,c	;volsfr
  2384                           
  2385                           ;Usuaris.c: 192:         EECON2 = 170;
  2386  001490  0EAA               	movlw	170
  2387  001492  6EA7               	movwf	167,c	;volsfr
  2388                           
  2389                           ;Usuaris.c: 193:          EECON1bits.WR = 1;
  2390  001494  82A6               	bsf	166,1,c	;volsfr
  2391  001496                     l615:
  2392                           
  2393                           ;Usuaris.c: 194:         while(EECON1bits.WR){
  2394  001496  B2A6               	btfsc	166,1,c	;volsfr
  2395  001498  D7FE               	goto	l615
  2396                           
  2397                           ;Usuaris.c: 199:     }
  2398  00149A  2A58               	incf	escriureEEPROM@caca^0,f,c
  2399  00149C  0E9F               	movlw	159
  2400  00149E  6458               	cpfsgt	escriureEEPROM@caca^0,c
  2401  0014A0  D7ED               	goto	l1793
  2402                           
  2403                           ;Usuaris.c: 200:    INTCONbits.GIE = 1;
  2404  0014A2  8EF2               	bsf	242,7,c	;volatile
  2405  0014A4  0012               	return		;funcret
  2406  0014A6                     __end_of_escriureEEPROM:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _UmotorUsers *****************
  2410 ;; Defined at:
  2411 ;;		line 119 in file "Usuaris.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1
  2425 ;;      Params:         0       0       0
  2426 ;;      Locals:         0       0       0
  2427 ;;      Temps:          2       0       0
  2428 ;;      Totals:         2       0       0
  2429 ;;Total ram usage:        2 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 3
  2432 ;; This function calls:
  2433 ;;		_compareStrings
  2434 ;;		_escriureCharEEPROM
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text17
  2441  000AE6                     __ptext17:
  2442                           	callstack 0
  2443  000AE6                     _UmotorUsers:
  2444                           	callstack 27
  2445                           
  2446                           ;Usuaris.c: 120: static char state = 0;;Usuaris.c: 122:  switch(state) {
  2447                           
  2448                           ;incstack = 0
  2449  000AE6  D0A5               	goto	l3469
  2450  000AE8                     l587:
  2451                           
  2452                           ;Usuaris.c: 124:    if (!do_check_exists && !do_register) {
  2453  000AE8  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2454  000AEA  B679               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2455  000AEC  D005               	goto	l588
  2456                           
  2457                           ;Usuaris.c: 125:     i = 0;
  2458  000AEE  0E00               	movlw	0
  2459  000AF0  6E34               	movwf	_i^0,c
  2460                           
  2461                           ;Usuaris.c: 126:     j = 0;
  2462  000AF2  0E00               	movlw	0
  2463  000AF4  6E33               	movwf	_j^0,c
  2464                           
  2465                           ;Usuaris.c: 127:    }
  2466  000AF6  0012               	return	
  2467  000AF8                     l588:
  2468  000AF8  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2469  000AFA  D004               	goto	l590
  2470                           
  2471                           ;Usuaris.c: 129:     usuariLoguejat = -1;
  2472  000AFC  6872               	setf	_usuariLoguejat^0,c
  2473  000AFE                     l3397:
  2474                           
  2475                           ;Usuaris.c: 130:     state = 1;
  2476  000AFE  0E01               	movlw	1
  2477  000B00  6E32               	movwf	UmotorUsers@state^0,c
  2478                           
  2479                           ;Usuaris.c: 131:    }
  2480  000B02  0012               	return	
  2481  000B04                     l590:
  2482  000B04  A679               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2483  000B06  0012               	return	
  2484  000B08                     u2930:
  2485                           
  2486                           ;Usuaris.c: 133:     state = 2;
  2487  000B08  0E02               	movlw	2
  2488  000B0A  6E32               	movwf	UmotorUsers@state^0,c
  2489                           
  2490                           ;Usuaris.c: 135:   break;
  2491  000B0C  0012               	return	
  2492  000B0E                     l3401:
  2493                           
  2494                           ;Usuaris.c: 137:    if (i < numUsuaris) {
  2495  000B0E  5037               	movf	_numUsuaris^0,w,c
  2496  000B10  5C34               	subwf	_i^0,w,c
  2497  000B12  B0D8               	btfsc	status,0,c
  2498  000B14  D012               	goto	l3411
  2499                           
  2500                           ;Usuaris.c: 138:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2501  000B16  0E4A               	movlw	low _tmpUsername
  2502  000B18  6E58               	movwf	compareStrings@a^0,c
  2503  000B1A  5034               	movf	_i^0,w,c
  2504  000B1C  0D17               	mullw	23
  2505  000B1E  0E00               	movlw	low _usuaris
  2506  000B20  24F3               	addwf	243,w,c
  2507  000B22  6E59               	movwf	compareStrings@b^0,c
  2508  000B24  0E01               	movlw	high _usuaris
  2509  000B26  20F4               	addwfc	prodh,w,c
  2510  000B28  6E5A               	movwf	(compareStrings@b+1)^0,c
  2511  000B2A  EC59  F009         	call	_compareStrings	;wreg free
  2512  000B2E  0900               	iorlw	0
  2513  000B30  B4D8               	btfsc	status,2,c
  2514                           
  2515                           ;Usuaris.c: 139:      usuariLoguejat = i;
  2516  000B32  C034  F072         	movff	_i,_usuariLoguejat
  2517                           
  2518                           ;Usuaris.c: 142:     i++;
  2519  000B36  2A34               	incf	_i^0,f,c
  2520  000B38  D7E2               	goto	l3397
  2521  000B3A                     l3411:
  2522  000B3A  5037               	movf	_numUsuaris^0,w,c
  2523  000B3C  1834               	xorwf	_i^0,w,c
  2524  000B3E  A4D8               	btfss	status,2,c
  2525  000B40  0012               	return	
  2526                           
  2527                           ;Usuaris.c: 146:     do_check_exists = 0;
  2528  000B42  9879               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2529  000B44                     l3415:
  2530                           
  2531                           ;Usuaris.c: 147:     state = 0;
  2532  000B44  0E00               	movlw	0
  2533  000B46  6E32               	movwf	UmotorUsers@state^0,c
  2534  000B48  0012               	return	
  2535  000B4A                     l3417:
  2536                           
  2537                           ;Usuaris.c: 151:    if (i != 8) {
  2538  000B4A  0E08               	movlw	8
  2539  000B4C  1834               	xorwf	_i^0,w,c
  2540  000B4E  B4D8               	btfsc	status,2,c
  2541  000B50  D022               	goto	l3429
  2542                           
  2543                           ;Usuaris.c: 152:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2544  000B52  C036  F058         	movff	_indexNextUser,escriureCharEEPROM@pos
  2545  000B56  5034               	movf	_i^0,w,c
  2546  000B58  0F4A               	addlw	low _tmpUsername
  2547  000B5A  6ED9               	movwf	fsr2l,c
  2548  000B5C  6ADA               	clrf	fsr2h,c
  2549  000B5E  50DF               	movf	indf2,w,c
  2550  000B60  EC69  F00A         	call	_escriureCharEEPROM
  2551  000B64  2A36               	incf	_indexNextUser^0,f,c
  2552                           
  2553                           ;Usuaris.c: 153:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  2554  000B66  5034               	movf	_i^0,w,c
  2555  000B68  0F4A               	addlw	low _tmpUsername
  2556  000B6A  6ED9               	movwf	fsr2l,c
  2557  000B6C  6ADA               	clrf	fsr2h,c
  2558  000B6E  5035               	movf	_indexNextUserStruct^0,w,c
  2559  000B70  0D17               	mullw	23
  2560  000B72  0E00               	movlw	low _usuaris
  2561  000B74  6E5D               	movwf	??_UmotorUsers^0,c
  2562  000B76  0E01               	movlw	high _usuaris
  2563  000B78  6E5E               	movwf	(??_UmotorUsers+1)^0,c
  2564  000B7A  50F3               	movf	243,w,c
  2565  000B7C  265D               	addwf	??_UmotorUsers^0,f,c
  2566  000B7E  50F4               	movf	244,w,c
  2567  000B80  225E               	addwfc	(??_UmotorUsers+1)^0,f,c
  2568  000B82  5034               	movf	_i^0,w,c
  2569  000B84  245D               	addwf	??_UmotorUsers^0,w,c
  2570  000B86  6EE1               	movwf	fsr1l,c
  2571  000B88  0E00               	movlw	0
  2572  000B8A  205E               	addwfc	(??_UmotorUsers+1)^0,w,c
  2573  000B8C  6EE2               	movwf	fsr1h,c
  2574  000B8E  CFDF FFE7          	movff	indf2,indf1
  2575                           
  2576                           ;Usuaris.c: 154:     i++;
  2577  000B92  2A34               	incf	_i^0,f,c
  2578  000B94  D7B9               	goto	u2930
  2579  000B96                     l3429:
  2580  000B96  0E08               	movlw	8
  2581  000B98  1834               	xorwf	_i^0,w,c
  2582  000B9A  A4D8               	btfss	status,2,c
  2583  000B9C  0012               	return	
  2584                           
  2585                           ;Usuaris.c: 158:     i = 0;
  2586  000B9E  0E00               	movlw	0
  2587  000BA0  6E34               	movwf	_i^0,c
  2588                           
  2589                           ;Usuaris.c: 159:     state = 3;
  2590  000BA2  0E03               	movlw	3
  2591  000BA4  6E32               	movwf	UmotorUsers@state^0,c
  2592  000BA6  0012               	return	
  2593  000BA8                     l3433:
  2594                           
  2595                           ;Usuaris.c: 163:    if (i != 8) {
  2596  000BA8  0E08               	movlw	8
  2597  000BAA  1834               	xorwf	_i^0,w,c
  2598  000BAC  B4D8               	btfsc	status,2,c
  2599  000BAE  D028               	goto	l3445
  2600                           
  2601                           ;Usuaris.c: 164:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2602  000BB0  C036  F058         	movff	_indexNextUser,escriureCharEEPROM@pos
  2603  000BB4  5034               	movf	_i^0,w,c
  2604  000BB6  0F19               	addlw	low _tmpPassword
  2605  000BB8  6ED9               	movwf	fsr2l,c
  2606  000BBA  6ADA               	clrf	fsr2h,c
  2607  000BBC  50DF               	movf	indf2,w,c
  2608  000BBE  EC69  F00A         	call	_escriureCharEEPROM
  2609  000BC2  2A36               	incf	_indexNextUser^0,f,c
  2610                           
  2611                           ;Usuaris.c: 165:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  2612  000BC4  5034               	movf	_i^0,w,c
  2613  000BC6  0F19               	addlw	low _tmpPassword
  2614  000BC8  6ED9               	movwf	fsr2l,c
  2615  000BCA  6ADA               	clrf	fsr2h,c
  2616  000BCC  5035               	movf	_indexNextUserStruct^0,w,c
  2617  000BCE  0D17               	mullw	23
  2618  000BD0  0E00               	movlw	low _usuaris
  2619  000BD2  6E5D               	movwf	??_UmotorUsers^0,c
  2620  000BD4  0E01               	movlw	high _usuaris
  2621  000BD6  6E5E               	movwf	(??_UmotorUsers+1)^0,c
  2622  000BD8  0E09               	movlw	9
  2623  000BDA  265D               	addwf	??_UmotorUsers^0,f,c
  2624  000BDC  0E00               	movlw	0
  2625  000BDE  225E               	addwfc	(??_UmotorUsers+1)^0,f,c
  2626  000BE0  50F3               	movf	243,w,c
  2627  000BE2  265D               	addwf	??_UmotorUsers^0,f,c
  2628  000BE4  50F4               	movf	244,w,c
  2629  000BE6  225E               	addwfc	(??_UmotorUsers+1)^0,f,c
  2630  000BE8  5034               	movf	_i^0,w,c
  2631  000BEA  245D               	addwf	??_UmotorUsers^0,w,c
  2632  000BEC  6EE1               	movwf	fsr1l,c
  2633  000BEE  0E00               	movlw	0
  2634  000BF0  205E               	addwfc	(??_UmotorUsers+1)^0,w,c
  2635  000BF2  6EE2               	movwf	fsr1h,c
  2636  000BF4  CFDF FFE7          	movff	indf2,indf1
  2637                           
  2638                           ;Usuaris.c: 166:     i++;
  2639  000BF8  2A34               	incf	_i^0,f,c
  2640                           
  2641                           ;Usuaris.c: 167:     state = 3;
  2642  000BFA  0E03               	movlw	3
  2643  000BFC  6E32               	movwf	UmotorUsers@state^0,c
  2644                           
  2645                           ;Usuaris.c: 168:    }
  2646  000BFE  0012               	return	
  2647  000C00                     l3445:
  2648  000C00  0E08               	movlw	8
  2649  000C02  1834               	xorwf	_i^0,w,c
  2650  000C04  A4D8               	btfss	status,2,c
  2651  000C06  0012               	return	
  2652                           
  2653                           ;Usuaris.c: 170:     do_register = 0;
  2654  000C08  9679               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2655                           
  2656                           ;Usuaris.c: 171:     indexNextUser++;
  2657  000C0A  2A36               	incf	_indexNextUser^0,f,c
  2658                           
  2659                           ;Usuaris.c: 172:     if(indexNextUser == 159) indexNextUser = 16;
  2660  000C0C  0E9F               	movlw	159
  2661  000C0E  1836               	xorwf	_indexNextUser^0,w,c
  2662  000C10  A4D8               	btfss	status,2,c
  2663  000C12  D002               	goto	l3455
  2664  000C14  0E10               	movlw	16
  2665  000C16  6E36               	movwf	_indexNextUser^0,c
  2666  000C18                     l3455:
  2667                           
  2668                           ;Usuaris.c: 173:     indexNextUserStruct++;
  2669  000C18  2A35               	incf	_indexNextUserStruct^0,f,c
  2670                           
  2671                           ;Usuaris.c: 174:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  2672  000C1A  0E08               	movlw	8
  2673  000C1C  1835               	xorwf	_indexNextUserStruct^0,w,c
  2674  000C1E  A4D8               	btfss	status,2,c
  2675  000C20  D002               	goto	l3461
  2676  000C22  0E00               	movlw	0
  2677  000C24  6E35               	movwf	_indexNextUserStruct^0,c
  2678  000C26                     l3461:
  2679                           
  2680                           ;Usuaris.c: 175:     if(numUsuaris != 8) numUsuaris++;
  2681  000C26  0E08               	movlw	8
  2682  000C28  1837               	xorwf	_numUsuaris^0,w,c
  2683  000C2A  B4D8               	btfsc	status,2,c
  2684  000C2C  D78B               	goto	l3415
  2685  000C2E  2A37               	incf	_numUsuaris^0,f,c
  2686  000C30  D789               	goto	l3415
  2687  000C32                     l3469:
  2688  000C32  5032               	movf	UmotorUsers@state^0,w,c
  2689  000C34  6E5D               	movwf	??_UmotorUsers^0,c
  2690  000C36  6A5E               	clrf	(??_UmotorUsers+1)^0,c
  2691                           
  2692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2693                           ; Switch size 1, requested type "simple"
  2694                           ; Number of cases is 1, Range of values is 0 to 0
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte            4     3 (average)
  2698                           ;	Chosen strategy is simple_byte
  2699  000C38  505E               	movf	(??_UmotorUsers+1)^0,w,c
  2700  000C3A  0A00               	xorlw	0	; case 0
  2701  000C3C  A4D8               	btfss	status,2,c
  2702  000C3E  0012               	return	
  2703                           
  2704                           ; Switch size 1, requested type "simple"
  2705                           ; Number of cases is 4, Range of values is 0 to 3
  2706                           ; switch strategies available:
  2707                           ; Name         Instructions Cycles
  2708                           ; simple_byte           13     7 (average)
  2709                           ;	Chosen strategy is simple_byte
  2710  000C40  505D               	movf	??_UmotorUsers^0,w,c
  2711  000C42  0A00               	xorlw	0	; case 0
  2712  000C44  B4D8               	btfsc	status,2,c
  2713  000C46  D750               	goto	l587
  2714  000C48  0A01               	xorlw	1	; case 1
  2715  000C4A  B4D8               	btfsc	status,2,c
  2716  000C4C  D760               	goto	l3401
  2717  000C4E  0A03               	xorlw	3	; case 2
  2718  000C50  B4D8               	btfsc	status,2,c
  2719  000C52  D77B               	goto	l3417
  2720  000C54  0A01               	xorlw	1	; case 3
  2721  000C56  A4D8               	btfss	status,2,c
  2722  000C58  0012               	return	
  2723  000C5A  D7A6               	goto	l3433
  2724  000C5C                     __end_of_UmotorUsers:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _escriureCharEEPROM *****************
  2728 ;; Defined at:
  2729 ;;		line 53 in file "Usuaris.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  c               1    wreg     unsigned char 
  2732 ;;  pos             1    5[COMRAM] unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  c               1    6[COMRAM] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1
  2744 ;;      Params:         1       0       0
  2745 ;;      Locals:         1       0       0
  2746 ;;      Temps:          0       0       0
  2747 ;;      Totals:         2       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 2
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_UmotorUsers
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text18
  2759  0014D2                     __ptext18:
  2760                           	callstack 0
  2761  0014D2                     _escriureCharEEPROM:
  2762                           	callstack 27
  2763                           
  2764                           ;incstack = 0
  2765                           ;escriureCharEEPROM@c stored from wreg
  2766  0014D2  6E59               	movwf	escriureCharEEPROM@c^0,c
  2767                           
  2768                           ;Usuaris.c: 54:     EEADR = c;
  2769  0014D4  C059  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2770                           
  2771                           ;Usuaris.c: 55:     EEDATA = pos;
  2772  0014D8  C058  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2773                           
  2774                           ;Usuaris.c: 56:     EECON1bits.EEPGD = 0;
  2775  0014DC  9EA6               	bcf	166,7,c	;volsfr
  2776                           
  2777                           ;Usuaris.c: 57:     EECON1bits.CFGS = 0;
  2778  0014DE  9CA6               	bcf	166,6,c	;volsfr
  2779                           
  2780                           ;Usuaris.c: 58:     EECON1bits.WREN = 1;
  2781  0014E0  84A6               	bsf	166,2,c	;volsfr
  2782                           
  2783                           ;Usuaris.c: 59:     INTCONbits.GIE = 0;
  2784  0014E2  9EF2               	bcf	242,7,c	;volatile
  2785                           
  2786                           ;Usuaris.c: 60:     EECON2 = 85;
  2787  0014E4  0E55               	movlw	85
  2788  0014E6  6EA7               	movwf	167,c	;volsfr
  2789                           
  2790                           ;Usuaris.c: 61:     EECON2 = 170;
  2791  0014E8  0EAA               	movlw	170
  2792  0014EA  6EA7               	movwf	167,c	;volsfr
  2793                           
  2794                           ;Usuaris.c: 62:      EECON1bits.WR = 1;
  2795  0014EC  82A6               	bsf	166,1,c	;volsfr
  2796  0014EE                     l549:
  2797  0014EE  B2A6               	btfsc	166,1,c	;volsfr
  2798  0014F0  D7FE               	goto	l549
  2799                           
  2800                           ;Usuaris.c: 64:    INTCONbits.GIE = 1;
  2801  0014F2  8EF2               	bsf	242,7,c	;volatile
  2802  0014F4  0012               	return		;funcret
  2803  0014F6                     __end_of_escriureCharEEPROM:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _compareStrings *****************
  2807 ;; Defined at:
  2808 ;;		line 109 in file "Usuaris.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2811 ;;		 -> tmpUsername(9), 
  2812 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2813 ;;		 -> usuaris.username(9), usuaris(184), 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      unsigned char 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1
  2825 ;;      Params:         3       0       0
  2826 ;;      Locals:         0       0       0
  2827 ;;      Temps:          2       0       0
  2828 ;;      Totals:         5       0       0
  2829 ;;Total ram usage:        5 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 2
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_UmotorUsers
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text19
  2840  0012B2                     __ptext19:
  2841                           	callstack 0
  2842  0012B2                     _compareStrings:
  2843                           	callstack 27
  2844                           
  2845                           ;Usuaris.c: 110:     while (*a){
  2846                           
  2847                           ;incstack = 0
  2848  0012B2  D00E               	goto	l2901
  2849  0012B4                     l2895:
  2850                           
  2851                           ;Usuaris.c: 111:         if (*a != *b)break;
  2852  0012B4  C059  FFD9         	movff	compareStrings@b,fsr2l
  2853  0012B8  C05A  FFDA         	movff	compareStrings@b+1,fsr2h
  2854  0012BC  5058               	movf	compareStrings@a^0,w,c
  2855  0012BE  6EE1               	movwf	fsr1l,c
  2856  0012C0  6AE2               	clrf	fsr1h,c
  2857  0012C2  50DE               	movf	postinc2,w,c
  2858  0012C4  18E6               	xorwf	postinc1,w,c
  2859  0012C6  A4D8               	btfss	status,2,c
  2860  0012C8  D009               	goto	u2200
  2861                           
  2862                           ;Usuaris.c: 112:         a++;
  2863  0012CA  2A58               	incf	compareStrings@a^0,f,c
  2864                           
  2865                           ;Usuaris.c: 113:         b++;
  2866  0012CC  4A59               	infsnz	compareStrings@b^0,f,c
  2867  0012CE  2A5A               	incf	(compareStrings@b+1)^0,f,c
  2868  0012D0                     l2901:
  2869                           
  2870                           ;Usuaris.c: 110:     while (*a){
  2871  0012D0  5058               	movf	compareStrings@a^0,w,c
  2872  0012D2  6ED9               	movwf	fsr2l,c
  2873  0012D4  6ADA               	clrf	fsr2h,c
  2874  0012D6  50DF               	movf	indf2,w,c
  2875  0012D8  A4D8               	btfss	status,2,c
  2876  0012DA  D7EC               	goto	l2895
  2877  0012DC                     u2200:
  2878                           
  2879                           ;Usuaris.c: 115:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2880  0012DC  C059  FFD9         	movff	compareStrings@b,fsr2l
  2881  0012E0  C05A  FFDA         	movff	compareStrings@b+1,fsr2h
  2882  0012E4  50DF               	movf	indf2,w,c
  2883  0012E6  6E5B               	movwf	??_compareStrings^0,c
  2884  0012E8  5058               	movf	compareStrings@a^0,w,c
  2885  0012EA  6ED9               	movwf	fsr2l,c
  2886  0012EC  6ADA               	clrf	fsr2h,c
  2887  0012EE  50DF               	movf	indf2,w,c
  2888  0012F0  6E5C               	movwf	(??_compareStrings+1)^0,c
  2889  0012F2  505B               	movf	??_compareStrings^0,w,c
  2890  0012F4  5C5C               	subwf	(??_compareStrings+1)^0,w,c
  2891  0012F6  0012               	return		;funcret
  2892  0012F8                     __end_of_compareStrings:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _Uinit *****************
  2896 ;; Defined at:
  2897 ;;		line 66 in file "Usuaris.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  j               1    9[COMRAM] unsigned char 
  2902 ;;  j               1    8[COMRAM] unsigned char 
  2903 ;;  i               1    7[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1
  2913 ;;      Params:         0       0       0
  2914 ;;      Locals:         3       0       0
  2915 ;;      Temps:          2       0       0
  2916 ;;      Totals:         5       0       0
  2917 ;;Total ram usage:        5 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text20
  2928  000F50                     __ptext20:
  2929                           	callstack 0
  2930  000F50                     _Uinit:
  2931                           	callstack 28
  2932                           
  2933                           ;Usuaris.c: 71:     EEADR = 0;
  2934                           
  2935                           ;incstack = 0
  2936  000F50  0E00               	movlw	0
  2937  000F52  6EA9               	movwf	169,c	;volatile
  2938                           
  2939                           ;Usuaris.c: 72:     EECON1bits.EEPGD = 0;
  2940  000F54  9EA6               	bcf	166,7,c	;volsfr
  2941                           
  2942                           ;Usuaris.c: 73:     EECON1bits.CFGS = 0;
  2943  000F56  9CA6               	bcf	166,6,c	;volsfr
  2944                           
  2945                           ;Usuaris.c: 74:     EECON1bits.RD = 1;
  2946  000F58  80A6               	bsf	166,0,c	;volsfr
  2947  000F5A                     l555:
  2948  000F5A  B0A6               	btfsc	166,0,c	;volsfr
  2949  000F5C  D7FE               	goto	l555
  2950                           
  2951                           ;Usuaris.c: 76:     numUsuaris = EEDATA;
  2952  000F5E  CFA8 F037          	movff	4008,_numUsuaris	;volatile
  2953                           
  2954                           ;Usuaris.c: 80:     EEADR++;
  2955  000F62  2AA9               	incf	169,f,c	;volatile
  2956                           
  2957                           ;Usuaris.c: 81:     EECON1bits.EEPGD = 0;
  2958  000F64  9EA6               	bcf	166,7,c	;volsfr
  2959                           
  2960                           ;Usuaris.c: 82:     EECON1bits.CFGS = 0;
  2961  000F66  9CA6               	bcf	166,6,c	;volsfr
  2962  000F68                     l558:
  2963  000F68  B0A6               	btfsc	166,0,c	;volsfr
  2964  000F6A  D7FE               	goto	l558
  2965                           
  2966                           ;Usuaris.c: 85:     indexNextUser = EEDATA;
  2967  000F6C  CFA8 F036          	movff	4008,_indexNextUser	;volatile
  2968                           
  2969                           ;Usuaris.c: 86:     EEADR++;
  2970  000F70  2AA9               	incf	169,f,c	;volatile
  2971                           
  2972                           ;Usuaris.c: 88:     for(char i = 0; i< numUsuaris; i++){
  2973  000F72  0E00               	movlw	0
  2974  000F74  6E5A               	movwf	Uinit@i^0,c
  2975  000F76  D041               	goto	l2051
  2976  000F78                     l2021:
  2977                           
  2978                           ;Usuaris.c: 89:         for(char j = 0; j<9; j++){
  2979  000F78  0E00               	movlw	0
  2980  000F7A  6E5B               	movwf	Uinit@j^0,c
  2981  000F7C                     l563:
  2982                           
  2983                           ;Usuaris.c: 90:             EECON1bits.EEPGD = 0;
  2984  000F7C  9EA6               	bcf	166,7,c	;volsfr
  2985                           
  2986                           ;Usuaris.c: 91:             EECON1bits.CFGS = 0;
  2987  000F7E  9CA6               	bcf	166,6,c	;volsfr
  2988                           
  2989                           ;Usuaris.c: 92:             EECON1bits.RD = 1;
  2990  000F80  80A6               	bsf	166,0,c	;volsfr
  2991  000F82                     l565:
  2992  000F82  B0A6               	btfsc	166,0,c	;volsfr
  2993  000F84  D7FE               	goto	l565
  2994                           
  2995                           ;Usuaris.c: 94:             usuaris[i].username[j] = EEDATA;
  2996  000F86  505A               	movf	Uinit@i^0,w,c
  2997  000F88  0D17               	mullw	23
  2998  000F8A  0E00               	movlw	low _usuaris
  2999  000F8C  6E58               	movwf	??_Uinit^0,c
  3000  000F8E  0E01               	movlw	high _usuaris
  3001  000F90  6E59               	movwf	(??_Uinit+1)^0,c
  3002  000F92  50F3               	movf	243,w,c
  3003  000F94  2658               	addwf	??_Uinit^0,f,c
  3004  000F96  50F4               	movf	244,w,c
  3005  000F98  2259               	addwfc	(??_Uinit+1)^0,f,c
  3006  000F9A  505B               	movf	Uinit@j^0,w,c
  3007  000F9C  2458               	addwf	??_Uinit^0,w,c
  3008  000F9E  6ED9               	movwf	fsr2l,c
  3009  000FA0  0E00               	movlw	0
  3010  000FA2  2059               	addwfc	(??_Uinit+1)^0,w,c
  3011  000FA4  6EDA               	movwf	fsr2h,c
  3012  000FA6  CFA8 FFDF          	movff	4008,indf2	;volatile
  3013                           
  3014                           ;Usuaris.c: 95:             EEADR++;
  3015  000FAA  2AA9               	incf	169,f,c	;volatile
  3016                           
  3017                           ;Usuaris.c: 96:         }
  3018  000FAC  2A5B               	incf	Uinit@j^0,f,c
  3019  000FAE  0E08               	movlw	8
  3020  000FB0  645B               	cpfsgt	Uinit@j^0,c
  3021  000FB2  D7E4               	goto	l563
  3022                           
  3023                           ;Usuaris.c: 97:         for(char j = 0; j<9; j++){
  3024  000FB4  0E00               	movlw	0
  3025  000FB6  6E5C               	movwf	Uinit@j_1041^0,c
  3026  000FB8                     l568:
  3027                           
  3028                           ;Usuaris.c: 98:             EECON1bits.EEPGD = 0;
  3029  000FB8  9EA6               	bcf	166,7,c	;volsfr
  3030                           
  3031                           ;Usuaris.c: 99:             EECON1bits.CFGS = 0;
  3032  000FBA  9CA6               	bcf	166,6,c	;volsfr
  3033                           
  3034                           ;Usuaris.c: 100:             EECON1bits.RD = 1;
  3035  000FBC  80A6               	bsf	166,0,c	;volsfr
  3036  000FBE                     l570:
  3037  000FBE  B0A6               	btfsc	166,0,c	;volsfr
  3038  000FC0  D7FE               	goto	l570
  3039                           
  3040                           ;Usuaris.c: 102:             usuaris[i].password[j] = EEDATA;
  3041  000FC2  505A               	movf	Uinit@i^0,w,c
  3042  000FC4  0D17               	mullw	23
  3043  000FC6  0E00               	movlw	low _usuaris
  3044  000FC8  6E58               	movwf	??_Uinit^0,c
  3045  000FCA  0E01               	movlw	high _usuaris
  3046  000FCC  6E59               	movwf	(??_Uinit+1)^0,c
  3047  000FCE  0E09               	movlw	9
  3048  000FD0  2658               	addwf	??_Uinit^0,f,c
  3049  000FD2  0E00               	movlw	0
  3050  000FD4  2259               	addwfc	(??_Uinit+1)^0,f,c
  3051  000FD6  50F3               	movf	243,w,c
  3052  000FD8  2658               	addwf	??_Uinit^0,f,c
  3053  000FDA  50F4               	movf	244,w,c
  3054  000FDC  2259               	addwfc	(??_Uinit+1)^0,f,c
  3055  000FDE  505C               	movf	Uinit@j_1041^0,w,c
  3056  000FE0  2458               	addwf	??_Uinit^0,w,c
  3057  000FE2  6ED9               	movwf	fsr2l,c
  3058  000FE4  0E00               	movlw	0
  3059  000FE6  2059               	addwfc	(??_Uinit+1)^0,w,c
  3060  000FE8  6EDA               	movwf	fsr2h,c
  3061  000FEA  CFA8 FFDF          	movff	4008,indf2	;volatile
  3062                           
  3063                           ;Usuaris.c: 103:             EEADR++;
  3064  000FEE  2AA9               	incf	169,f,c	;volatile
  3065                           
  3066                           ;Usuaris.c: 104:         }
  3067  000FF0  2A5C               	incf	Uinit@j_1041^0,f,c
  3068  000FF2  0E08               	movlw	8
  3069  000FF4  645C               	cpfsgt	Uinit@j_1041^0,c
  3070  000FF6  D7E0               	goto	l568
  3071                           
  3072                           ;Usuaris.c: 105:     }
  3073  000FF8  2A5A               	incf	Uinit@i^0,f,c
  3074  000FFA                     l2051:
  3075  000FFA  5037               	movf	_numUsuaris^0,w,c
  3076  000FFC  5C5A               	subwf	Uinit@i^0,w,c
  3077  000FFE  B0D8               	btfsc	status,0,c
  3078  001000  0012               	return	
  3079  001002  D7BA               	goto	l2021
  3080  001004                     __end_of_Uinit:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _TiInitTimer *****************
  3084 ;; Defined at:
  3085 ;;		line 18 in file "TiTTimer.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1
  3099 ;;      Params:         0       0       0
  3100 ;;      Locals:         0       0       0
  3101 ;;      Temps:          0       0       0
  3102 ;;      Totals:         0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 2
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text21
  3114  0013AC                     __ptext21:
  3115                           	callstack 0
  3116  0013AC                     _TiInitTimer:
  3117                           	callstack 28
  3118                           
  3119                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  3120                           
  3121                           ;incstack = 0
  3122  0013AC  9ED0               	bcf	208,7,c	;volatile
  3123                           
  3124                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  3125  0013AE  8EF2               	bsf	242,7,c	;volatile
  3126                           
  3127                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  3128  0013B0  8CF2               	bsf	242,6,c	;volatile
  3129                           
  3130                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  3131  0013B2  8AF2               	bsf	242,5,c	;volatile
  3132                           
  3133                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3134  0013B4  94F2               	bcf	242,2,c	;volatile
  3135                           
  3136                           ;TiTTimer.c: 25:     T0CON = 136;
  3137  0013B6  0E88               	movlw	136
  3138  0013B8  6ED5               	movwf	213,c	;volatile
  3139                           
  3140                           ;TiTTimer.c: 27:     TMR0H = 223;
  3141  0013BA  0EDF               	movlw	223
  3142  0013BC  6ED7               	movwf	215,c	;volatile
  3143                           
  3144                           ;TiTTimer.c: 28:     TMR0L = 148;
  3145  0013BE  0E94               	movlw	148
  3146  0013C0  6ED6               	movwf	214,c	;volatile
  3147                           
  3148                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  3149  0013C2  8ED5               	bsf	213,7,c	;volatile
  3150                           
  3151                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  3152  0013C4  0E00               	movlw	0
  3153  0013C6  6E3D               	movwf	_counter^0,c
  3154  0013C8                     l1815:
  3155  0013C8  0E07               	movlw	7
  3156  0013CA  643D               	cpfsgt	_counter^0,c
  3157  0013CC  D001               	goto	l1819
  3158  0013CE  0012               	return	
  3159  0013D0                     l1819:
  3160                           
  3161                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  3162  0013D0  503D               	movf	_counter^0,w,c
  3163  0013D2  0D03               	mullw	3
  3164  0013D4  50F3               	movf	243,w,c
  3165  0013D6  0F03               	addlw	low (_s_Timers+2)
  3166  0013D8  6ED9               	movwf	fsr2l,c
  3167  0013DA  6ADA               	clrf	fsr2h,c
  3168  0013DC  0E00               	movlw	0
  3169  0013DE  6EDF               	movwf	indf2,c
  3170                           
  3171                           ;TiTTimer.c: 33:     }
  3172  0013E0  2A3D               	incf	_counter^0,f,c
  3173  0013E2  D7F2               	goto	l1815
  3174  0013E4                     __end_of_TiInitTimer:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _TeTeclat *****************
  3178 ;; Defined at:
  3179 ;;		line 22 in file "TeTeclat.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1
  3193 ;;      Params:         0       0       0
  3194 ;;      Locals:         0       0       0
  3195 ;;      Temps:          3       0       0
  3196 ;;      Totals:         3       0       0
  3197 ;;Total ram usage:        3 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 3
  3200 ;; This function calls:
  3201 ;;		_MsetNovaTecla
  3202 ;;		_SsetNovaTecla
  3203 ;;		_TiGetTics
  3204 ;;		_TiResetTics
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text22
  3211  000C5C                     __ptext22:
  3212                           	callstack 0
  3213  000C5C                     _TeTeclat:
  3214                           	callstack 27
  3215                           
  3216                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  3217                           
  3218                           ;incstack = 0
  3219  000C5C  A083               	btfss	131,0,c	;volatile
  3220  000C5E  D003               	goto	u3430
  3221  000C60  6A5F               	clrf	??_TeTeclat^0,c
  3222  000C62  2A5F               	incf	??_TeTeclat^0,f,c
  3223  000C64  D001               	goto	u3438
  3224  000C66                     u3430:
  3225  000C66  6A5F               	clrf	??_TeTeclat^0,c
  3226  000C68                     u3438:
  3227  000C68  A283               	btfss	131,1,c	;volatile
  3228  000C6A  D002               	goto	u3440
  3229  000C6C  0E01               	movlw	1
  3230  000C6E  D001               	goto	u3446
  3231  000C70                     u3440:
  3232  000C70  0E00               	movlw	0
  3233  000C72                     u3446:
  3234  000C72  0D02               	mullw	2
  3235  000C74  CFF3 F060          	movff	prodl,??_TeTeclat+1
  3236  000C78  A483               	btfss	131,2,c	;volatile
  3237  000C7A  D002               	goto	u3450
  3238  000C7C  0E01               	movlw	1
  3239  000C7E  D001               	goto	u3456
  3240  000C80                     u3450:
  3241  000C80  0E00               	movlw	0
  3242  000C82                     u3456:
  3243  000C82  0D03               	mullw	3
  3244  000C84  CFF3 F061          	movff	prodl,??_TeTeclat+2
  3245  000C88  A683               	btfss	131,3,c	;volatile
  3246  000C8A  D002               	goto	u3460
  3247  000C8C  0E01               	movlw	1
  3248  000C8E  D001               	goto	u3466
  3249  000C90                     u3460:
  3250  000C90  0E00               	movlw	0
  3251  000C92                     u3466:
  3252  000C92  0D04               	mullw	4
  3253  000C94  50F3               	movf	243,w,c
  3254  000C96  2461               	addwf	(??_TeTeclat+2)^0,w,c
  3255  000C98  2460               	addwf	(??_TeTeclat+1)^0,w,c
  3256  000C9A  245F               	addwf	??_TeTeclat^0,w,c
  3257  000C9C  6E3E               	movwf	TeTeclat@files^0,c
  3258                           
  3259                           ;TeTeclat.c: 27:  switch(state) {
  3260  000C9E  D06F               	goto	l3745
  3261  000CA0                     l3671:
  3262                           
  3263                           ;TeTeclat.c: 29:    if (files==0) {
  3264  000CA0  503E               	movf	TeTeclat@files^0,w,c
  3265  000CA2  A4D8               	btfss	status,2,c
  3266  000CA4  D007               	goto	l3679
  3267                           
  3268                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  3269  000CA6  888C               	bsf	140,4,c	;volatile
  3270                           
  3271                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  3272  000CA8  9A8C               	bcf	140,5,c	;volatile
  3273                           
  3274                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  3275  000CAA  9C8C               	bcf	140,6,c	;volatile
  3276                           
  3277                           ;TeTeclat.c: 33:     cols=0;
  3278  000CAC  0E00               	movlw	0
  3279  000CAE  6E3F               	movwf	TeTeclat@cols^0,c
  3280  000CB0                     l3677:
  3281                           
  3282                           ;TeTeclat.c: 34:     state++;
  3283  000CB0  2A40               	incf	TeTeclat@state^0,f,c
  3284                           
  3285                           ;TeTeclat.c: 35:    }
  3286  000CB2  0012               	return	
  3287  000CB4                     l3679:
  3288  000CB4  503E               	movf	TeTeclat@files^0,w,c
  3289  000CB6  B4D8               	btfsc	status,2,c
  3290  000CB8  0012               	return	
  3291                           
  3292                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  3293  000CBA  5041               	movf	_tiTeclat^0,w,c
  3294  000CBC  ECAF  F00A         	call	_TiResetTics
  3295  000CC0                     l3683:
  3296                           
  3297                           ;TeTeclat.c: 38:     state = 3;
  3298  000CC0  0E03               	movlw	3
  3299  000CC2  6E40               	movwf	TeTeclat@state^0,c
  3300  000CC4  0012               	return	
  3301  000CC6                     l3685:
  3302                           
  3303                           ;TeTeclat.c: 42:    if (files==0) {
  3304  000CC6  503E               	movf	TeTeclat@files^0,w,c
  3305  000CC8  A4D8               	btfss	status,2,c
  3306  000CCA  D005               	goto	l3693
  3307                           
  3308                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3309  000CCC  988C               	bcf	140,4,c	;volatile
  3310                           
  3311                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3312  000CCE  8A8C               	bsf	140,5,c	;volatile
  3313                           
  3314                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3315  000CD0  9C8C               	bcf	140,6,c	;volatile
  3316                           
  3317                           ;TeTeclat.c: 46:     cols=1;
  3318  000CD2  0E01               	movlw	1
  3319  000CD4  D7EC               	goto	L1
  3320  000CD6                     l3693:
  3321  000CD6  503E               	movf	TeTeclat@files^0,w,c
  3322  000CD8  B4D8               	btfsc	status,2,c
  3323  000CDA  0012               	return	
  3324                           
  3325                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3326  000CDC  5041               	movf	_tiTeclat^0,w,c
  3327  000CDE  ECAF  F00A         	call	_TiResetTics
  3328  000CE2  D7EE               	goto	l3683
  3329  000CE4                     l3699:
  3330                           
  3331                           ;TeTeclat.c: 55:    if (files==0) {
  3332  000CE4  503E               	movf	TeTeclat@files^0,w,c
  3333  000CE6  A4D8               	btfss	status,2,c
  3334  000CE8  D008               	goto	l3705
  3335                           
  3336                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3337  000CEA  988C               	bcf	140,4,c	;volatile
  3338                           
  3339                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3340  000CEC  9A8C               	bcf	140,5,c	;volatile
  3341                           
  3342                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3343  000CEE  8C8C               	bsf	140,6,c	;volatile
  3344                           
  3345                           ;TeTeclat.c: 59:     cols=2;
  3346  000CF0  0E02               	movlw	2
  3347  000CF2  6E3F               	movwf	TeTeclat@cols^0,c
  3348                           
  3349                           ;TeTeclat.c: 60:     state = 0;
  3350  000CF4  0E00               	movlw	0
  3351  000CF6  6E40               	movwf	TeTeclat@state^0,c
  3352                           
  3353                           ;TeTeclat.c: 61:    }
  3354  000CF8  0012               	return	
  3355  000CFA                     l3705:
  3356  000CFA  503E               	movf	TeTeclat@files^0,w,c
  3357  000CFC  B4D8               	btfsc	status,2,c
  3358  000CFE  0012               	return	
  3359                           
  3360                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3361  000D00  5041               	movf	_tiTeclat^0,w,c
  3362  000D02  ECAF  F00A         	call	_TiResetTics
  3363  000D06  D7D4               	goto	l3677
  3364  000D08                     l3711:
  3365                           
  3366                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3367  000D08  5041               	movf	_tiTeclat^0,w,c
  3368  000D0A  EC53  F00A         	call	_TiGetTics
  3369  000D0E  BE59               	btfsc	(?_TiGetTics+1)^0,7,c
  3370  000D10  0012               	return	
  3371  000D12  D7CE               	goto	l3677
  3372  000D14                     l3715:
  3373                           
  3374                           ;TeTeclat.c: 73:    if (files==0) {
  3375  000D14  503E               	movf	TeTeclat@files^0,w,c
  3376  000D16  A4D8               	btfss	status,2,c
  3377  000D18  D003               	goto	l3719
  3378                           
  3379                           ;TeTeclat.c: 74:     state = 1;
  3380  000D1A  0E01               	movlw	1
  3381  000D1C  6E40               	movwf	TeTeclat@state^0,c
  3382                           
  3383                           ;TeTeclat.c: 75:    }
  3384  000D1E  0012               	return	
  3385  000D20                     l3719:
  3386  000D20  503E               	movf	TeTeclat@files^0,w,c
  3387  000D22  B4D8               	btfsc	status,2,c
  3388  000D24  0012               	return	
  3389                           
  3390                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3391  000D26  503E               	movf	TeTeclat@files^0,w,c
  3392  000D28  0D03               	mullw	3
  3393  000D2A  50F3               	movf	243,w,c
  3394  000D2C  0F7D               	addlw	low (_teclaPremuda+253)
  3395  000D2E  243F               	addwf	TeTeclat@cols^0,w,c
  3396  000D30  6ED9               	movwf	fsr2l,c
  3397  000D32  6ADA               	clrf	fsr2h,c
  3398  000D34  50DF               	movf	indf2,w,c
  3399  000D36  ECFE  F00A         	call	_MsetNovaTecla
  3400                           
  3401                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3402  000D3A  503E               	movf	TeTeclat@files^0,w,c
  3403  000D3C  0D03               	mullw	3
  3404  000D3E  50F3               	movf	243,w,c
  3405  000D40  0F7D               	addlw	low (_teclaPremuda+253)
  3406  000D42  243F               	addwf	TeTeclat@cols^0,w,c
  3407  000D44  6ED9               	movwf	fsr2l,c
  3408  000D46  6ADA               	clrf	fsr2h,c
  3409  000D48  50DF               	movf	indf2,w,c
  3410  000D4A  ECFA  F00A         	call	_SsetNovaTecla
  3411  000D4E  D7B0               	goto	l3677
  3412  000D50                     l3725:
  3413                           
  3414                           ;TeTeclat.c: 84:    if (files==0) {
  3415  000D50  503E               	movf	TeTeclat@files^0,w,c
  3416  000D52  A4D8               	btfss	status,2,c
  3417  000D54  0012               	return	
  3418                           
  3419                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3420  000D56  5041               	movf	_tiTeclat^0,w,c
  3421  000D58  ECAF  F00A         	call	_TiResetTics
  3422  000D5C  D7A9               	goto	l3677
  3423  000D5E                     l3731:
  3424                           
  3425                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3426  000D5E  5041               	movf	_tiTeclat^0,w,c
  3427  000D60  EC53  F00A         	call	_TiGetTics
  3428  000D64  D7D4               	goto	L2
  3429  000D66                     l3735:
  3430                           
  3431                           ;TeTeclat.c: 95:    if (files!=0) {
  3432  000D66  503E               	movf	TeTeclat@files^0,w,c
  3433  000D68  B4D8               	btfsc	status,2,c
  3434  000D6A  D003               	goto	l3739
  3435                           
  3436                           ;TeTeclat.c: 96:     state = 5;
  3437  000D6C  0E05               	movlw	5
  3438  000D6E  6E40               	movwf	TeTeclat@state^0,c
  3439                           
  3440                           ;TeTeclat.c: 97:    }
  3441  000D70  0012               	return	
  3442  000D72                     l3739:
  3443  000D72  503E               	movf	TeTeclat@files^0,w,c
  3444  000D74  A4D8               	btfss	status,2,c
  3445  000D76  0012               	return	
  3446                           
  3447                           ;TeTeclat.c: 99:     state = 0;
  3448  000D78  0E00               	movlw	0
  3449  000D7A  6E40               	movwf	TeTeclat@state^0,c
  3450  000D7C  0012               	return	
  3451  000D7E                     l3745:
  3452  000D7E  5040               	movf	TeTeclat@state^0,w,c
  3453  000D80  6E5F               	movwf	??_TeTeclat^0,c
  3454  000D82  6A60               	clrf	(??_TeTeclat+1)^0,c
  3455                           
  3456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3457                           ; Switch size 1, requested type "simple"
  3458                           ; Number of cases is 1, Range of values is 0 to 0
  3459                           ; switch strategies available:
  3460                           ; Name         Instructions Cycles
  3461                           ; simple_byte            4     3 (average)
  3462                           ;	Chosen strategy is simple_byte
  3463  000D84  5060               	movf	(??_TeTeclat+1)^0,w,c
  3464  000D86  0A00               	xorlw	0	; case 0
  3465  000D88  A4D8               	btfss	status,2,c
  3466  000D8A  0012               	return	
  3467                           
  3468                           ; Switch size 1, requested type "simple"
  3469                           ; Number of cases is 8, Range of values is 0 to 7
  3470                           ; switch strategies available:
  3471                           ; Name         Instructions Cycles
  3472                           ; simple_byte           25    13 (average)
  3473                           ;	Chosen strategy is simple_byte
  3474  000D8C  505F               	movf	??_TeTeclat^0,w,c
  3475  000D8E  0A00               	xorlw	0	; case 0
  3476  000D90  B4D8               	btfsc	status,2,c
  3477  000D92  D786               	goto	l3671
  3478  000D94  0A01               	xorlw	1	; case 1
  3479  000D96  B4D8               	btfsc	status,2,c
  3480  000D98  D796               	goto	l3685
  3481  000D9A  0A03               	xorlw	3	; case 2
  3482  000D9C  B4D8               	btfsc	status,2,c
  3483  000D9E  D7A2               	goto	l3699
  3484  000DA0  0A01               	xorlw	1	; case 3
  3485  000DA2  B4D8               	btfsc	status,2,c
  3486  000DA4  D7B1               	goto	l3711
  3487  000DA6  0A07               	xorlw	7	; case 4
  3488  000DA8  B4D8               	btfsc	status,2,c
  3489  000DAA  D7B4               	goto	l3715
  3490  000DAC  0A01               	xorlw	1	; case 5
  3491  000DAE  B4D8               	btfsc	status,2,c
  3492  000DB0  D7CF               	goto	l3725
  3493  000DB2  0A03               	xorlw	3	; case 6
  3494  000DB4  B4D8               	btfsc	status,2,c
  3495  000DB6  D7D3               	goto	l3731
  3496  000DB8  0A01               	xorlw	1	; case 7
  3497  000DBA  A4D8               	btfss	status,2,c
  3498  000DBC  0012               	return	
  3499  000DBE  D7D3               	goto	l3735
  3500  000DC0                     __end_of_TeTeclat:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _SsetNovaTecla *****************
  3504 ;; Defined at:
  3505 ;;		line 135 in file "Ssms.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  tecla           1    wreg     unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  tecla           1    5[COMRAM] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1
  3519 ;;      Params:         0       0       0
  3520 ;;      Locals:         1       0       0
  3521 ;;      Temps:          0       0       0
  3522 ;;      Totals:         1       0       0
  3523 ;;Total ram usage:        1 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 2
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_TeTeclat
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text23
  3534  0015F4                     __ptext23:
  3535                           	callstack 0
  3536  0015F4                     _SsetNovaTecla:
  3537                           	callstack 27
  3538                           
  3539                           ;incstack = 0
  3540                           ;SsetNovaTecla@tecla stored from wreg
  3541  0015F4  6E58               	movwf	SsetNovaTecla@tecla^0,c
  3542                           
  3543                           ;Ssms.c: 136:     novaTecla = tecla;
  3544  0015F6  C058  F077         	movff	SsetNovaTecla@tecla,_novaTecla
  3545  0015FA  0012               	return		;funcret
  3546  0015FC                     __end_of_SsetNovaTecla:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _MsetNovaTecla *****************
  3550 ;; Defined at:
  3551 ;;		line 19 in file "Menu.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  tecla           1    wreg     unsigned char 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  tecla           1    5[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1
  3565 ;;      Params:         0       0       0
  3566 ;;      Locals:         1       0       0
  3567 ;;      Temps:          0       0       0
  3568 ;;      Totals:         1       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_TeTeclat
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text24
  3580  0015FC                     __ptext24:
  3581                           	callstack 0
  3582  0015FC                     _MsetNovaTecla:
  3583                           	callstack 27
  3584                           
  3585                           ;incstack = 0
  3586                           ;MsetNovaTecla@tecla stored from wreg
  3587  0015FC  6E58               	movwf	MsetNovaTecla@tecla^0,c
  3588                           
  3589                           ;Menu.c: 20:     NovaTecla = tecla;
  3590  0015FE  C058  F074         	movff	MsetNovaTecla@tecla,_NovaTecla
  3591  001602  0012               	return		;funcret
  3592  001604                     __end_of_MsetNovaTecla:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _TeInit *****************
  3596 ;; Defined at:
  3597 ;;		line 18 in file "TeTeclat.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1
  3611 ;;      Params:         0       0       0
  3612 ;;      Locals:         0       0       0
  3613 ;;      Temps:          0       0       0
  3614 ;;      Totals:         0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 3
  3618 ;; This function calls:
  3619 ;;		_TiGetTimer
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text25
  3626  001604                     __ptext25:
  3627                           	callstack 0
  3628  001604                     _TeInit:
  3629                           	callstack 27
  3630                           
  3631                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3632                           
  3633                           ;incstack = 0
  3634  001604  ECB9  F009         	call	_TiGetTimer	;wreg free
  3635  001608  6E41               	movwf	_tiTeclat^0,c
  3636  00160A  0012               	return		;funcret
  3637  00160C                     __end_of_TeInit:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _Sinit *****************
  3641 ;; Defined at:
  3642 ;;		line 16 in file "Ssms.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1
  3656 ;;      Params:         0       0       0
  3657 ;;      Locals:         0       0       0
  3658 ;;      Temps:          0       0       0
  3659 ;;      Totals:         0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 3
  3663 ;; This function calls:
  3664 ;;		_TiGetTimer
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text26
  3671  00160C                     __ptext26:
  3672                           	callstack 0
  3673  00160C                     _Sinit:
  3674                           	callstack 27
  3675                           
  3676                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3677                           
  3678                           ;incstack = 0
  3679  00160C  ECB9  F009         	call	_TiGetTimer	;wreg free
  3680  001610  6E76               	movwf	_timerSMS^0,c
  3681  001612  0012               	return		;funcret
  3682  001614                     __end_of_Sinit:
  3683                           	callstack 0
  3684                           
  3685 ;; *************** function _SMotor *****************
  3686 ;; Defined at:
  3687 ;;		line 20 in file "Ssms.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1
  3701 ;;      Params:         0       0       0
  3702 ;;      Locals:         0       0       0
  3703 ;;      Temps:          2       0       0
  3704 ;;      Totals:         2       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 3
  3708 ;; This function calls:
  3709 ;;		_MNovaLletra
  3710 ;;		_TiGetTics
  3711 ;;		_TiResetTics
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text27
  3718  0008CE                     __ptext27:
  3719                           	callstack 0
  3720  0008CE                     _SMotor:
  3721                           	callstack 27
  3722                           
  3723                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3724                           
  3725                           ;incstack = 0
  3726  0008CE  D0EA               	goto	l3137
  3727  0008D0                     l2971:
  3728                           
  3729                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3730  0008D0  2877               	incf	_novaTecla^0,w,c
  3731  0008D2  A4D8               	btfss	status,2,c
  3732  0008D4  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3733  0008D6  D006               	goto	l2979
  3734                           
  3735                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3736  0008D8  5076               	movf	_timerSMS^0,w,c
  3737  0008DA  ECAF  F00A         	call	_TiResetTics
  3738                           
  3739                           ;Ssms.c: 27:     state = 3;
  3740  0008DE  0E03               	movlw	3
  3741  0008E0  6E42               	movwf	SMotor@state^0,c
  3742                           
  3743                           ;Ssms.c: 28:    }
  3744  0008E2  0012               	return	
  3745  0008E4                     l2979:
  3746  0008E4  2877               	incf	_novaTecla^0,w,c
  3747  0008E6  A4D8               	btfss	status,2,c
  3748  0008E8  0012               	return	
  3749  0008EA  5076               	movf	_timerSMS^0,w,c
  3750  0008EC  EC53  F00A         	call	_TiGetTics
  3751  0008F0  BE59               	btfsc	(?_TiGetTics+1)^0,7,c
  3752  0008F2  0012               	return	
  3753  0008F4  0E5A               	movlw	90
  3754  0008F6  5C58               	subwf	?_TiGetTics^0,w,c
  3755  0008F8  0E02               	movlw	2
  3756  0008FA  5859               	subwfb	(?_TiGetTics+1)^0,w,c
  3757  0008FC  A0D8               	btfss	status,0,c
  3758  0008FE  0012               	return	
  3759  000900  2878               	incf	_lletraASCII^0,w,c
  3760  000902  B4D8               	btfsc	status,2,c
  3761  000904  0012               	return	
  3762  000906  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3763  000908  0012               	return	
  3764                           
  3765                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3766  00090A  5078               	movf	_lletraASCII^0,w,c
  3767  00090C  EC0A  F00B         	call	_MNovaLletra
  3768                           
  3769                           ;Ssms.c: 31:     lletraASCII = -1;
  3770  000910  6878               	setf	_lletraASCII^0,c
  3771                           
  3772                           ;Ssms.c: 32:     ultimaTecla = -1;
  3773  000912  6875               	setf	_ultimaTecla^0,c
  3774  000914                     l2993:
  3775                           
  3776                           ;Ssms.c: 33:     state = 0;
  3777  000914  0E00               	movlw	0
  3778  000916  6E42               	movwf	SMotor@state^0,c
  3779  000918  0012               	return	
  3780  00091A                     l2995:
  3781                           
  3782                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3783  00091A  5075               	movf	_ultimaTecla^0,w,c
  3784  00091C  1877               	xorwf	_novaTecla^0,w,c
  3785  00091E  A4D8               	btfss	status,2,c
  3786  000920  D018               	goto	l3011
  3787  000922  5076               	movf	_timerSMS^0,w,c
  3788  000924  EC53  F00A         	call	_TiGetTics
  3789  000928  BE59               	btfsc	(?_TiGetTics+1)^0,7,c
  3790  00092A  D006               	goto	u2310
  3791  00092C  0E5A               	movlw	90
  3792  00092E  5C58               	subwf	?_TiGetTics^0,w,c
  3793  000930  0E02               	movlw	2
  3794  000932  5859               	subwfb	(?_TiGetTics+1)^0,w,c
  3795  000934  B0D8               	btfsc	status,0,c
  3796  000936  D00D               	goto	l3011
  3797  000938                     u2310:
  3798                           
  3799                           ;Ssms.c: 38:     novaTecla = -1;
  3800  000938  6877               	setf	_novaTecla^0,c
  3801                           
  3802                           ;Ssms.c: 39:     sumaPulsacions++;
  3803  00093A  2A43               	incf	_sumaPulsacions^0,f,c
  3804                           
  3805                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  3806  00093C  0E30               	movlw	48
  3807  00093E  1878               	xorwf	_lletraASCII^0,w,c
  3808  000940  B4D8               	btfsc	status,2,c
  3809  000942  D004               	goto	l3009
  3810  000944  0E20               	movlw	32
  3811  000946  1878               	xorwf	_lletraASCII^0,w,c
  3812  000948  A4D8               	btfss	status,2,c
  3813                           
  3814                           ;Ssms.c: 41:       lletraASCII++;
  3815  00094A  2A78               	incf	_lletraASCII^0,f,c
  3816  00094C                     l3009:
  3817                           
  3818                           ;Ssms.c: 43:     state = 2;
  3819  00094C  0E02               	movlw	2
  3820  00094E  6E42               	movwf	SMotor@state^0,c
  3821                           
  3822                           ;Ssms.c: 44:    }
  3823  000950  0012               	return	
  3824  000952                     l3011:
  3825  000952  2877               	incf	_novaTecla^0,w,c
  3826  000954  B4D8               	btfsc	status,2,c
  3827  000956  0012               	return	
  3828  000958  5075               	movf	_ultimaTecla^0,w,c
  3829  00095A  1877               	xorwf	_novaTecla^0,w,c
  3830  00095C  B4D8               	btfsc	status,2,c
  3831  00095E  0012               	return	
  3832                           
  3833                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  3834  000960  5078               	movf	_lletraASCII^0,w,c
  3835  000962  EC0A  F00B         	call	_MNovaLletra
  3836                           
  3837                           ;Ssms.c: 47:     if(novaTecla == 0){
  3838  000966  5077               	movf	_novaTecla^0,w,c
  3839  000968  A4D8               	btfss	status,2,c
  3840  00096A  D007               	goto	l3025
  3841                           
  3842                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  3843  00096C  0443               	decf	_sumaPulsacions^0,w,c
  3844  00096E  A4D8               	btfss	status,2,c
  3845  000970  D002               	goto	l3023
  3846  000972  0E30               	movlw	48
  3847  000974  D007               	goto	L3
  3848  000976                     l3023:
  3849  000976  0E20               	movlw	32
  3850  000978  D005               	goto	L3
  3851  00097A                     l3025:
  3852                           
  3853                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  3854  00097A  5077               	movf	_novaTecla^0,w,c
  3855  00097C  0F65               	addlw	low (_lletraInici+254)
  3856  00097E  6ED9               	movwf	fsr2l,c
  3857  000980  6ADA               	clrf	fsr2h,c
  3858  000982  50DF               	movf	indf2,w,c
  3859  000984                     L3:
  3860  000984  6E78               	movwf	_lletraASCII^0,c
  3861                           
  3862                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  3863  000986  C077  F075         	movff	_novaTecla,_ultimaTecla
  3864                           
  3865                           ;Ssms.c: 54:     sumaPulsacions = 0;
  3866  00098A  0E00               	movlw	0
  3867  00098C  6E43               	movwf	_sumaPulsacions^0,c
  3868  00098E                     l3031:
  3869                           
  3870                           ;Ssms.c: 55:     novaTecla = -1;
  3871  00098E  6877               	setf	_novaTecla^0,c
  3872  000990  D7C1               	goto	l2993
  3873  000992                     l3035:
  3874                           
  3875                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  3876  000992  0E07               	movlw	7
  3877  000994  1875               	xorwf	_ultimaTecla^0,w,c
  3878  000996  B4D8               	btfsc	status,2,c
  3879  000998  D00A               	goto	l3043
  3880  00099A  0E09               	movlw	9
  3881  00099C  1875               	xorwf	_ultimaTecla^0,w,c
  3882  00099E  B4D8               	btfsc	status,2,c
  3883  0009A0  D006               	goto	l3043
  3884  0009A2  5075               	movf	_ultimaTecla^0,w,c
  3885  0009A4  B4D8               	btfsc	status,2,c
  3886  0009A6  D003               	goto	l3043
  3887                           
  3888                           ;Ssms.c: 61:     state = 5;
  3889  0009A8  0E05               	movlw	5
  3890  0009AA  6E42               	movwf	SMotor@state^0,c
  3891                           
  3892                           ;Ssms.c: 62:    }
  3893  0009AC  0012               	return	
  3894  0009AE                     l3043:
  3895  0009AE  0E07               	movlw	7
  3896  0009B0  1875               	xorwf	_ultimaTecla^0,w,c
  3897  0009B2  B4D8               	btfsc	status,2,c
  3898  0009B4  D004               	goto	u2420
  3899  0009B6  0E09               	movlw	9
  3900  0009B8  1875               	xorwf	_ultimaTecla^0,w,c
  3901  0009BA  A4D8               	btfss	status,2,c
  3902  0009BC  D003               	goto	l3049
  3903  0009BE                     u2420:
  3904                           
  3905                           ;Ssms.c: 64:     state = 6;
  3906  0009BE  0E06               	movlw	6
  3907  0009C0  6E42               	movwf	SMotor@state^0,c
  3908                           
  3909                           ;Ssms.c: 65:    }
  3910  0009C2  0012               	return	
  3911  0009C4                     l3049:
  3912  0009C4  5075               	movf	_ultimaTecla^0,w,c
  3913  0009C6  A4D8               	btfss	status,2,c
  3914  0009C8  0012               	return	
  3915                           
  3916                           ;Ssms.c: 67:     state = 7;
  3917  0009CA  0E07               	movlw	7
  3918  0009CC  6E42               	movwf	SMotor@state^0,c
  3919  0009CE  0012               	return	
  3920  0009D0                     l3053:
  3921                           
  3922                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  3923  0009D0  5077               	movf	_novaTecla^0,w,c
  3924  0009D2  0A80               	xorlw	128
  3925  0009D4  0F7E               	addlw	-130
  3926  0009D6  B0D8               	btfsc	status,0,c
  3927  0009D8  D003               	goto	u2450
  3928  0009DA  5077               	movf	_novaTecla^0,w,c
  3929  0009DC  A4D8               	btfss	status,2,c
  3930  0009DE  D008               	goto	l3061
  3931  0009E0                     u2450:
  3932  0009E0  5077               	movf	_novaTecla^0,w,c
  3933  0009E2  0A80               	xorlw	128
  3934  0009E4  0F76               	addlw	-138
  3935  0009E6  B0D8               	btfsc	status,0,c
  3936  0009E8  D003               	goto	l3061
  3937                           
  3938                           ;Ssms.c: 72:     state = 1;
  3939  0009EA  0E01               	movlw	1
  3940  0009EC  6E42               	movwf	SMotor@state^0,c
  3941                           
  3942                           ;Ssms.c: 73:    }
  3943  0009EE  0012               	return	
  3944  0009F0                     l3061:
  3945  0009F0  5077               	movf	_novaTecla^0,w,c
  3946  0009F2  0A80               	xorlw	128
  3947  0009F4  0F7E               	addlw	-130
  3948  0009F6  B0D8               	btfsc	status,0,c
  3949  0009F8  D008               	goto	l3071
  3950  0009FA  2878               	incf	_lletraASCII^0,w,c
  3951  0009FC  A4D8               	btfss	status,2,c
  3952  0009FE  D005               	goto	l3071
  3953                           
  3954                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  3955  000A00  5077               	movf	_novaTecla^0,w,c
  3956  000A02  0F30               	addlw	48
  3957  000A04  EC0A  F00B         	call	_MNovaLletra
  3958  000A08  D7C2               	goto	l3031
  3959  000A0A                     l3071:
  3960  000A0A  5077               	movf	_novaTecla^0,w,c
  3961  000A0C  0A80               	xorlw	128
  3962  000A0E  0F7E               	addlw	-130
  3963  000A10  B0D8               	btfsc	status,0,c
  3964  000A12  0012               	return	
  3965  000A14  2878               	incf	_lletraASCII^0,w,c
  3966  000A16  B4D8               	btfsc	status,2,c
  3967  000A18  0012               	return	
  3968                           
  3969                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  3970  000A1A  5078               	movf	_lletraASCII^0,w,c
  3971  000A1C  EC0A  F00B         	call	_MNovaLletra
  3972                           
  3973                           ;Ssms.c: 81:     lletraASCII = -1;
  3974  000A20  6878               	setf	_lletraASCII^0,c
  3975                           
  3976                           ;Ssms.c: 82:     state = 4;
  3977  000A22  0E04               	movlw	4
  3978  000A24  6E42               	movwf	SMotor@state^0,c
  3979  000A26  0012               	return	
  3980  000A28                     l3081:
  3981                           
  3982                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  3983  000A28  5077               	movf	_novaTecla^0,w,c
  3984  000A2A  0F30               	addlw	48
  3985  000A2C  EC0A  F00B         	call	_MNovaLletra
  3986  000A30  D7AE               	goto	l3031
  3987  000A32                     l3087:
  3988                           
  3989                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  3990  000A32  0E04               	movlw	4
  3991  000A34  1843               	xorwf	_sumaPulsacions^0,w,c
  3992  000A36  A4D8               	btfss	status,2,c
  3993  000A38  D009               	goto	l3095
  3994  000A3A                     u2510:
  3995                           
  3996                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  3997  000A3A  5075               	movf	_ultimaTecla^0,w,c
  3998  000A3C  0F65               	addlw	low (_lletraInici+254)
  3999  000A3E  6ED9               	movwf	fsr2l,c
  4000  000A40  6ADA               	clrf	fsr2h,c
  4001  000A42  50DF               	movf	indf2,w,c
  4002  000A44  6E78               	movwf	_lletraASCII^0,c
  4003                           
  4004                           ;Ssms.c: 93:     sumaPulsacions = 0;
  4005  000A46  0E00               	movlw	0
  4006  000A48  6E43               	movwf	_sumaPulsacions^0,c
  4007  000A4A  D764               	goto	l2993
  4008  000A4C                     l3095:
  4009  000A4C  0E03               	movlw	3
  4010  000A4E  1843               	xorwf	_sumaPulsacions^0,w,c
  4011  000A50  A4D8               	btfss	status,2,c
  4012  000A52  D004               	goto	l3101
  4013  000A54                     u2520:
  4014                           
  4015                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  4016  000A54  5075               	movf	_ultimaTecla^0,w,c
  4017  000A56  0F30               	addlw	48
  4018  000A58  6E78               	movwf	_lletraASCII^0,c
  4019  000A5A  D75C               	goto	l2993
  4020  000A5C                     l3101:
  4021  000A5C  0E03               	movlw	3
  4022  000A5E                     L4:
  4023  000A5E  6043               	cpfslt	_sumaPulsacions^0,c
  4024  000A60  0012               	return	
  4025  000A62  D758               	goto	l2993
  4026  000A64                     l3105:
  4027                           
  4028                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  4029  000A64  0E04               	movlw	4
  4030  000A66  1843               	xorwf	_sumaPulsacions^0,w,c
  4031  000A68  B4D8               	btfsc	status,2,c
  4032  000A6A  D7F4               	goto	u2520
  4033  000A6C  0E05               	movlw	5
  4034  000A6E  1843               	xorwf	_sumaPulsacions^0,w,c
  4035  000A70  B4D8               	btfsc	status,2,c
  4036  000A72  D7E3               	goto	u2510
  4037  000A74  0E04               	movlw	4
  4038  000A76  D7F3               	goto	L4
  4039  000A78                     l3123:
  4040                           
  4041                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  4042  000A78  0E02               	movlw	2
  4043  000A7A  1843               	xorwf	_sumaPulsacions^0,w,c
  4044  000A7C  A4D8               	btfss	status,2,c
  4045  000A7E  D005               	goto	l3127
  4046                           
  4047                           ;Ssms.c: 120:     lletraASCII = ' ';
  4048  000A80  0E20               	movlw	32
  4049  000A82  6E78               	movwf	_lletraASCII^0,c
  4050                           
  4051                           ;Ssms.c: 121:     state = 0;
  4052  000A84  0E00               	movlw	0
  4053  000A86  6E42               	movwf	SMotor@state^0,c
  4054                           
  4055                           ;Ssms.c: 122:    }
  4056  000A88  0012               	return	
  4057  000A8A                     l3127:
  4058  000A8A  0E03               	movlw	3
  4059  000A8C  1843               	xorwf	_sumaPulsacions^0,w,c
  4060  000A8E  A4D8               	btfss	status,2,c
  4061  000A90  D007               	goto	l3131
  4062                           
  4063                           ;Ssms.c: 124:     lletraASCII = '0';
  4064  000A92  0E30               	movlw	48
  4065  000A94  6E78               	movwf	_lletraASCII^0,c
  4066                           
  4067                           ;Ssms.c: 125:     sumaPulsacions = 0;
  4068  000A96  0E00               	movlw	0
  4069  000A98  6E43               	movwf	_sumaPulsacions^0,c
  4070                           
  4071                           ;Ssms.c: 126:     state = 0;
  4072  000A9A  0E00               	movlw	0
  4073  000A9C  6E42               	movwf	SMotor@state^0,c
  4074                           
  4075                           ;Ssms.c: 127:    }
  4076  000A9E  0012               	return	
  4077  000AA0                     l3131:
  4078  000AA0  0E02               	movlw	2
  4079  000AA2  D7DD               	goto	L4
  4080  000AA4                     l3137:
  4081  000AA4  5042               	movf	SMotor@state^0,w,c
  4082  000AA6  6E5F               	movwf	??_SMotor^0,c
  4083  000AA8  6A60               	clrf	(??_SMotor+1)^0,c
  4084                           
  4085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4086                           ; Switch size 1, requested type "simple"
  4087                           ; Number of cases is 1, Range of values is 0 to 0
  4088                           ; switch strategies available:
  4089                           ; Name         Instructions Cycles
  4090                           ; simple_byte            4     3 (average)
  4091                           ;	Chosen strategy is simple_byte
  4092  000AAA  5060               	movf	(??_SMotor+1)^0,w,c
  4093  000AAC  0A00               	xorlw	0	; case 0
  4094  000AAE  A4D8               	btfss	status,2,c
  4095  000AB0  0012               	return	
  4096                           
  4097                           ; Switch size 1, requested type "simple"
  4098                           ; Number of cases is 8, Range of values is 0 to 7
  4099                           ; switch strategies available:
  4100                           ; Name         Instructions Cycles
  4101                           ; simple_byte           25    13 (average)
  4102                           ;	Chosen strategy is simple_byte
  4103  000AB2  505F               	movf	??_SMotor^0,w,c
  4104  000AB4  0A00               	xorlw	0	; case 0
  4105  000AB6  B4D8               	btfsc	status,2,c
  4106  000AB8  D70B               	goto	l2971
  4107  000ABA  0A01               	xorlw	1	; case 1
  4108  000ABC  B4D8               	btfsc	status,2,c
  4109  000ABE  D72D               	goto	l2995
  4110  000AC0  0A03               	xorlw	3	; case 2
  4111  000AC2  B4D8               	btfsc	status,2,c
  4112  000AC4  D766               	goto	l3035
  4113  000AC6  0A01               	xorlw	1	; case 3
  4114  000AC8  B4D8               	btfsc	status,2,c
  4115  000ACA  D782               	goto	l3053
  4116  000ACC  0A07               	xorlw	7	; case 4
  4117  000ACE  B4D8               	btfsc	status,2,c
  4118  000AD0  D7AB               	goto	l3081
  4119  000AD2  0A01               	xorlw	1	; case 5
  4120  000AD4  B4D8               	btfsc	status,2,c
  4121  000AD6  D7AD               	goto	l3087
  4122  000AD8  0A03               	xorlw	3	; case 6
  4123  000ADA  B4D8               	btfsc	status,2,c
  4124  000ADC  D7C3               	goto	l3105
  4125  000ADE  0A01               	xorlw	1	; case 7
  4126  000AE0  A4D8               	btfss	status,2,c
  4127  000AE2  0012               	return	
  4128  000AE4  D7C9               	goto	l3123
  4129  000AE6                     __end_of_SMotor:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _MNovaLletra *****************
  4133 ;; Defined at:
  4134 ;;		line 23 in file "Menu.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  lletra          1    wreg     unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  lletra          1    5[COMRAM] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1
  4148 ;;      Params:         0       0       0
  4149 ;;      Locals:         1       0       0
  4150 ;;      Temps:          0       0       0
  4151 ;;      Totals:         1       0       0
  4152 ;;Total ram usage:        1 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 2
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_SMotor
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text28
  4163  001614                     __ptext28:
  4164                           	callstack 0
  4165  001614                     _MNovaLletra:
  4166                           	callstack 27
  4167                           
  4168                           ;incstack = 0
  4169                           ;MNovaLletra@lletra stored from wreg
  4170  001614  6E58               	movwf	MNovaLletra@lletra^0,c
  4171                           
  4172                           ;Menu.c: 24:     novaLletra = lletra;
  4173  001616  C058  F073         	movff	MNovaLletra@lletra,_novaLletra
  4174  00161A  0012               	return		;funcret
  4175  00161C                     __end_of_MNovaLletra:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _Minit *****************
  4179 ;; Defined at:
  4180 ;;		line 16 in file "Menu.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1
  4194 ;;      Params:         0       0       0
  4195 ;;      Locals:         0       0       0
  4196 ;;      Temps:          0       0       0
  4197 ;;      Totals:         0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 3
  4201 ;; This function calls:
  4202 ;;		_TiGetTimer
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text29
  4209  00161C                     __ptext29:
  4210                           	callstack 0
  4211  00161C                     _Minit:
  4212                           	callstack 27
  4213                           
  4214                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  4215                           
  4216                           ;incstack = 0
  4217  00161C  ECB9  F009         	call	_TiGetTimer	;wreg free
  4218  001620  6E3B               	movwf	_timerMenu^0,c
  4219  001622  0012               	return		;funcret
  4220  001624                     __end_of_Minit:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _LcLCD *****************
  4224 ;; Defined at:
  4225 ;;		line 244 in file "LcTLCD.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1
  4239 ;;      Params:         0       0       0
  4240 ;;      Locals:         0       0       0
  4241 ;;      Temps:          0       0       0
  4242 ;;      Totals:         0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 6
  4246 ;; This function calls:
  4247 ;;		_LcPutChar
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text30
  4254  001448                     __ptext30:
  4255                           	callstack 0
  4256  001448                     _LcLCD:
  4257                           	callstack 24
  4258                           
  4259                           ;LcTLCD.c: 245:     if(nou_s == 1){
  4260                           
  4261                           ;incstack = 0
  4262  001448  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4263  00144A  0012               	return	
  4264                           
  4265                           ;LcTLCD.c: 246:         LcPutChar(*s_ptr);
  4266  00144C  C044  FFF6         	movff	_s_ptr,tblptrl
  4267  001450                     	if	1	;There is more than 1 active tblptr byte
  4268  001450  0E02               	movlw	high __smallconst
  4269  001452  6EF7               	movwf	tblptrh,c
  4270  001454                     	endif
  4271  001454                     	if	0	;tblptru may be non-zero
  4272  001454                     	endif
  4273  001454                     	if	0	;tblptru may be non-zero
  4274  001454                     	endif
  4275  001454  0008               	tblrd		*
  4276  001456  50F5               	movf	tablat,w,c
  4277  001458  EC08  F009         	call	_LcPutChar
  4278                           
  4279                           ;LcTLCD.c: 247:         s_ptr++;
  4280  00145C  2A44               	incf	_s_ptr^0,f,c
  4281                           
  4282                           ;LcTLCD.c: 248:         if(*s_ptr == '\0'){
  4283  00145E  C044  FFF6         	movff	_s_ptr,tblptrl
  4284  001462                     	if	1	;There is more than 1 active tblptr byte
  4285  001462  0E02               	movlw	high __smallconst
  4286  001464  6EF7               	movwf	tblptrh,c
  4287  001466                     	endif
  4288  001466                     	if	0	;tblptru may be non-zero
  4289  001466                     	endif
  4290  001466                     	if	0	;tblptru may be non-zero
  4291  001466                     	endif
  4292  001466  0008               	tblrd		*
  4293  001468  50F5               	movf	tablat,w,c
  4294  00146A  0900               	iorlw	0
  4295  00146C  A4D8               	btfss	status,2,c
  4296  00146E  0012               	return	
  4297                           
  4298                           ;LcTLCD.c: 249:             nou_s = 0;
  4299  001470  9E79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4300                           
  4301                           ;LcTLCD.c: 250:             s_ptr=0;
  4302  001472  0E00               	movlw	0
  4303  001474  6E44               	movwf	_s_ptr^0,c
  4304  001476  0012               	return		;funcret
  4305  001478                     __end_of_LcLCD:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _LcInit *****************
  4309 ;; Defined at:
  4310 ;;		line 41 in file "LcTLCD.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  rows            1    wreg     unsigned char 
  4313 ;;  columns         1   16[COMRAM] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  rows            1   17[COMRAM] unsigned char 
  4316 ;;  i               2   18[COMRAM] int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1
  4326 ;;      Params:         1       0       0
  4327 ;;      Locals:         3       0       0
  4328 ;;      Temps:          0       0       0
  4329 ;;      Totals:         4       0       0
  4330 ;;Total ram usage:        4 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 5
  4333 ;; This function calls:
  4334 ;;		_CantaIR
  4335 ;;		_EscriuPrimeraOrdre
  4336 ;;		_Espera
  4337 ;;		_LcCursorOff
  4338 ;;		_TiGetTimer
  4339 ;;		_WaitForBusy
  4340 ;; This function is called by:
  4341 ;;		_main
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text31
  4346  000DC0                     __ptext31:
  4347                           	callstack 0
  4348  000DC0                     _LcInit:
  4349                           	callstack 25
  4350                           
  4351                           ;incstack = 0
  4352                           ;LcInit@rows stored from wreg
  4353  000DC0  6E64               	movwf	LcInit@rows^0,c
  4354                           
  4355                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4356  000DC2  ECB9  F009         	call	_TiGetTimer	;wreg free
  4357  000DC6  6E45               	movwf	_Timer^0,c
  4358                           
  4359                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4360  000DC8  C064  F049         	movff	LcInit@rows,_Rows
  4361  000DCC  C063  F048         	movff	LcInit@columns,_Columns
  4362                           
  4363                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4364  000DD0  0E00               	movlw	0
  4365  000DD2  6E46               	movwf	_ColumnAct^0,c
  4366  000DD4  C046  F047         	movff	_ColumnAct,_RowAct
  4367                           
  4368                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4369  000DD8  9894               	bcf	148,4,c	;volatile
  4370  000DDA  9E95               	bcf	149,7,c	;volatile
  4371  000DDC  9A94               	bcf	148,5,c	;volatile
  4372                           
  4373                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4374  000DDE  0E00               	movlw	0
  4375  000DE0  6E66               	movwf	(LcInit@i+1)^0,c
  4376  000DE2  0E00               	movlw	0
  4377  000DE4  6E65               	movwf	LcInit@i^0,c
  4378  000DE6                     l2923:
  4379                           
  4380                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4381  000DE6  0E00               	movlw	0
  4382  000DE8  6E60               	movwf	(Espera@ms+1)^0,c
  4383  000DEA  0E64               	movlw	100
  4384  000DEC  6E5F               	movwf	Espera@ms^0,c
  4385  000DEE  5045               	movf	_Timer^0,w,c
  4386  000DF0  EC8D  F00A         	call	_Espera
  4387                           
  4388                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4389  000DF4  0E03               	movlw	3
  4390  000DF6  EC02  F008         	call	_EscriuPrimeraOrdre
  4391                           
  4392                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4393  000DFA  0E00               	movlw	0
  4394  000DFC  6E60               	movwf	(Espera@ms+1)^0,c
  4395  000DFE  0E05               	movlw	5
  4396  000E00  6E5F               	movwf	Espera@ms^0,c
  4397  000E02  5045               	movf	_Timer^0,w,c
  4398  000E04  EC8D  F00A         	call	_Espera
  4399                           
  4400                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4401  000E08  0E03               	movlw	3
  4402  000E0A  EC02  F008         	call	_EscriuPrimeraOrdre
  4403                           
  4404                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4405  000E0E  0E00               	movlw	0
  4406  000E10  6E60               	movwf	(Espera@ms+1)^0,c
  4407  000E12  0E01               	movlw	1
  4408  000E14  6E5F               	movwf	Espera@ms^0,c
  4409  000E16  5045               	movf	_Timer^0,w,c
  4410  000E18  EC8D  F00A         	call	_Espera
  4411                           
  4412                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4413  000E1C  0E03               	movlw	3
  4414  000E1E  EC02  F008         	call	_EscriuPrimeraOrdre
  4415                           
  4416                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4417  000E22  0E00               	movlw	0
  4418  000E24  6E60               	movwf	(Espera@ms+1)^0,c
  4419  000E26  0E01               	movlw	1
  4420  000E28  6E5F               	movwf	Espera@ms^0,c
  4421  000E2A  5045               	movf	_Timer^0,w,c
  4422  000E2C  EC8D  F00A         	call	_Espera
  4423                           
  4424                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4425  000E30  0E02               	movlw	2
  4426  000E32  EC02  F008         	call	_EscriuPrimeraOrdre
  4427                           
  4428                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4429  000E36  0E00               	movlw	0
  4430  000E38  6E60               	movwf	(Espera@ms+1)^0,c
  4431  000E3A  0E04               	movlw	4
  4432  000E3C  6E5F               	movwf	Espera@ms^0,c
  4433  000E3E  5045               	movf	_Timer^0,w,c
  4434  000E40  EC8D  F00A         	call	_Espera
  4435                           
  4436                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4437  000E44  0E28               	movlw	40
  4438  000E46  EC0B  F00A         	call	_CantaIR
  4439                           
  4440                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4441  000E4A  EC7C  F009         	call	_WaitForBusy	;wreg free
  4442  000E4E  0E08               	movlw	8
  4443  000E50  EC0B  F00A         	call	_CantaIR
  4444                           
  4445                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4446  000E54  EC7C  F009         	call	_WaitForBusy	;wreg free
  4447  000E58  0E01               	movlw	1
  4448  000E5A  EC0B  F00A         	call	_CantaIR
  4449                           
  4450                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4451  000E5E  0E00               	movlw	0
  4452  000E60  6E60               	movwf	(Espera@ms+1)^0,c
  4453  000E62  0E03               	movlw	3
  4454  000E64  6E5F               	movwf	Espera@ms^0,c
  4455  000E66  5045               	movf	_Timer^0,w,c
  4456  000E68  EC8D  F00A         	call	_Espera
  4457                           
  4458                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4459  000E6C  EC7C  F009         	call	_WaitForBusy	;wreg free
  4460  000E70  0E06               	movlw	6
  4461  000E72  EC0B  F00A         	call	_CantaIR
  4462                           
  4463                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4464  000E76  EC7C  F009         	call	_WaitForBusy	;wreg free
  4465  000E7A  0E0F               	movlw	15
  4466  000E7C  EC0B  F00A         	call	_CantaIR
  4467                           
  4468                           ;LcTLCD.c: 74:  }
  4469  000E80  4A65               	infsnz	LcInit@i^0,f,c
  4470  000E82  2A66               	incf	(LcInit@i+1)^0,f,c
  4471  000E84  BE66               	btfsc	(LcInit@i+1)^0,7,c
  4472  000E86  D7AF               	goto	l2923
  4473  000E88  5066               	movf	(LcInit@i+1)^0,w,c
  4474  000E8A  E104               	bnz	u2210
  4475  000E8C  0E02               	movlw	2
  4476  000E8E  5C65               	subwf	LcInit@i^0,w,c
  4477  000E90  A0D8               	btfss	status,0,c
  4478  000E92  D7A9               	goto	l2923
  4479  000E94                     u2210:
  4480                           
  4481                           ;LcTLCD.c: 79:     LcCursorOff();
  4482  000E94  ECE6  F00A         	call	_LcCursorOff	;wreg free
  4483  000E98  0012               	return		;funcret
  4484  000E9A                     __end_of_LcInit:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _LcCursorOff *****************
  4488 ;; Defined at:
  4489 ;;		line 97 in file "LcTLCD.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1
  4503 ;;      Params:         0       0       0
  4504 ;;      Locals:         0       0       0
  4505 ;;      Temps:          0       0       0
  4506 ;;      Totals:         0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 4
  4510 ;; This function calls:
  4511 ;;		_CantaIR
  4512 ;;		_WaitForBusy
  4513 ;; This function is called by:
  4514 ;;		_LcInit
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text32
  4519  0015CC                     __ptext32:
  4520                           	callstack 0
  4521  0015CC                     _LcCursorOff:
  4522                           	callstack 25
  4523                           
  4524                           ;LcTLCD.c: 100:  WaitForBusy();
  4525                           
  4526                           ;incstack = 0
  4527  0015CC  EC7C  F009         	call	_WaitForBusy	;wreg free
  4528                           
  4529                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4530  0015D0  0E0C               	movlw	12
  4531  0015D2  EC0B  F00A         	call	_CantaIR
  4532  0015D6  0012               	return		;funcret
  4533  0015D8                     __end_of_LcCursorOff:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _EscriuPrimeraOrdre *****************
  4537 ;; Defined at:
  4538 ;;		line 228 in file "LcTLCD.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  ordre           1    wreg     unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  ordre           1    6[COMRAM] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1
  4552 ;;      Params:         0       0       0
  4553 ;;      Locals:         1       0       0
  4554 ;;      Temps:          1       0       0
  4555 ;;      Totals:         2       0       0
  4556 ;;Total ram usage:        2 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 2
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_LcInit
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text33
  4567  001004                     __ptext33:
  4568                           	callstack 0
  4569  001004                     _EscriuPrimeraOrdre:
  4570                           	callstack 27
  4571                           
  4572                           ;incstack = 0
  4573                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4574  001004  6E59               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4575                           
  4576                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4577  001006  9694               	bcf	148,3,c	;volatile
  4578  001008  9494               	bcf	148,2,c	;volatile
  4579  00100A  9294               	bcf	148,1,c	;volatile
  4580  00100C  9094               	bcf	148,0,c	;volatile
  4581  00100E  9A8B               	bcf	139,5,c	;volatile
  4582  001010  9E8C               	bcf	140,7,c	;volatile
  4583                           
  4584                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4585  001012  888B               	bsf	139,4,c	;volatile
  4586  001014  888B               	bsf	139,4,c	;volatile
  4587                           
  4588                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4589  001016  A659               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4590  001018  D003               	goto	u230
  4591  00101A  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4592  00101C  2A58               	incf	??_EscriuPrimeraOrdre^0,f,c
  4593  00101E  D001               	goto	u248
  4594  001020                     u230:
  4595  001020  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4596  001022                     u248:
  4597  001022  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4598  001024  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4599  001026  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4600  001028  508B               	movf	139,w,c	;volatile
  4601  00102A  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4602  00102C  0BF7               	andlw	-9
  4603  00102E  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4604  001030  6E8B               	movwf	139,c	;volatile
  4605                           
  4606                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4607  001032  A459               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4608  001034  D003               	goto	u250
  4609  001036  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4610  001038  2A58               	incf	??_EscriuPrimeraOrdre^0,f,c
  4611  00103A  D001               	goto	u268
  4612  00103C                     u250:
  4613  00103C  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4614  00103E                     u268:
  4615  00103E  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4616  001040  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4617  001042  508B               	movf	139,w,c	;volatile
  4618  001044  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4619  001046  0BFB               	andlw	-5
  4620  001048  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4621  00104A  6E8B               	movwf	139,c	;volatile
  4622                           
  4623                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4624  00104C  A259               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4625  00104E  D003               	goto	u270
  4626  001050  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4627  001052  2A58               	incf	??_EscriuPrimeraOrdre^0,f,c
  4628  001054  D001               	goto	u288
  4629  001056                     u270:
  4630  001056  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4631  001058                     u288:
  4632  001058  4658               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4633  00105A  508B               	movf	139,w,c	;volatile
  4634  00105C  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4635  00105E  0BFD               	andlw	-3
  4636  001060  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4637  001062  6E8B               	movwf	139,c	;volatile
  4638                           
  4639                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4640  001064  A059               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4641  001066  D003               	goto	u290
  4642  001068  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4643  00106A  2A58               	incf	??_EscriuPrimeraOrdre^0,f,c
  4644  00106C  D001               	goto	u308
  4645  00106E                     u290:
  4646  00106E  6A58               	clrf	??_EscriuPrimeraOrdre^0,c
  4647  001070                     u308:
  4648  001070  508B               	movf	139,w,c	;volatile
  4649  001072  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4650  001074  0BFE               	andlw	-2
  4651  001076  1858               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4652  001078  6E8B               	movwf	139,c	;volatile
  4653                           
  4654                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4655  00107A  988B               	bcf	139,4,c	;volatile
  4656  00107C  0012               	return		;funcret
  4657  00107E                     __end_of_EscriuPrimeraOrdre:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _GLCDMotor *****************
  4661 ;; Defined at:
  4662 ;;		line 36 in file "GestioLCD.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1
  4676 ;;      Params:         0       0       0
  4677 ;;      Locals:         0       0       0
  4678 ;;      Temps:          0       2       0
  4679 ;;      Totals:         0       2       0
  4680 ;;Total ram usage:        2 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 6
  4683 ;; This function calls:
  4684 ;;		_LcClear
  4685 ;;		_LcGotoXY
  4686 ;;		_LcLliure
  4687 ;;		_LcNewString
  4688 ;;		_LcPutChar
  4689 ;;		_TiGetTics
  4690 ;;		_TiResetTics
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text34
  4697  0002B4                     __ptext34:
  4698                           	callstack 0
  4699  0002B4                     _GLCDMotor:
  4700                           	callstack 24
  4701                           
  4702                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  4703                           
  4704                           ;incstack = 0
  4705  0002B4  D1B0               	goto	l4201
  4706  0002B6                     l4015:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  4710  0002B6  0E11               	movlw	17
  4711  0002B8  6025               	cpfslt	GLCDMotor@length1^0,c
  4712  0002BA  D011               	goto	l4025
  4713                           
  4714                           ; BSR set to: 0
  4715  0002BC  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4716  0002BE  D00F               	goto	l4025
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  4720  0002C0  0E00               	movlw	0
  4721  0002C2  6E60               	movwf	LcGotoXY@Row^0,c
  4722  0002C4  0E00               	movlw	0
  4723  0002C6  EC9C  F009         	call	_LcGotoXY
  4724                           
  4725                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  4726  0002CA  502C               	movf	_menuDaltGLCD^0,w,c
  4727  0002CC  0D1D               	mullw	29
  4728  0002CE  50F3               	movf	243,w,c
  4729  0002D0  0F01               	addlw	low _menuList
  4730  0002D2  6E58               	movwf	LcNewString@new_s^0,c
  4731  0002D4  EC12  F00B         	call	_LcNewString	;wreg free
  4732                           
  4733                           ;GestioLCD.c: 53:     state = 5;
  4734  0002D8  0E05               	movlw	5
  4735  0002DA  6E2B               	movwf	GLCDMotor@state^0,c
  4736                           
  4737                           ;GestioLCD.c: 54:    }
  4738  0002DC  0012               	return	
  4739  0002DE                     l4025:
  4740                           
  4741                           ; BSR set to: 0
  4742  0002DE  0E10               	movlw	16
  4743  0002E0  6425               	cpfsgt	GLCDMotor@length1^0,c
  4744  0002E2  0012               	return	
  4745                           
  4746                           ; BSR set to: 0
  4747  0002E4  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4748  0002E6  0012               	return	
  4749  0002E8                     u3880:
  4750                           
  4751                           ;GestioLCD.c: 56:     state++;
  4752  0002E8  2A2B               	incf	GLCDMotor@state^0,f,c
  4753  0002EA  0012               	return	
  4754  0002EC                     l4031:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;GestioLCD.c: 60:    if (j>=16) {
  4758  0002EC  0E0F               	movlw	15
  4759  0002EE  642A               	cpfsgt	GLCDMotor@j^0,c
  4760  0002F0  D02B               	goto	l4045
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;GestioLCD.c: 61:     min1++;
  4764  0002F2  2A29               	incf	GLCDMotor@min1^0,f,c
  4765                           
  4766                           ;GestioLCD.c: 62:     max1++;
  4767  0002F4  2A71               	incf	GLCDMotor@max1^0,f,c
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  4771  0002F6  502C               	movf	_menuDaltGLCD^0,w,c
  4772  0002F8  0D1D               	mullw	29
  4773  0002FA  50F3               	movf	243,w,c
  4774  0002FC  0F01               	addlw	low _menuList
  4775  0002FE  2471               	addwf	GLCDMotor@max1^0,w,c
  4776  000300  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4777  000302  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4778  000306                     	if	1	;There is more than 1 active tblptr byte
  4779  000306  0E02               	movlw	high __smallconst
  4780  000308  6EF7               	movwf	tblptrh,c
  4781  00030A                     	endif
  4782  00030A                     	if	0	;tblptru may be non-zero
  4783  00030A                     	endif
  4784  00030A                     	if	0	;tblptru may be non-zero
  4785  00030A                     	endif
  4786  00030A  0008               	tblrd		*
  4787  00030C  50F5               	movf	tablat,w,c
  4788  00030E  0900               	iorlw	0
  4789  000310  A4D8               	btfss	status,2,c
  4790  000312  D002               	goto	l4039
  4791                           
  4792                           ; BSR set to: 0
  4793  000314  0E00               	movlw	0
  4794  000316  6E71               	movwf	GLCDMotor@max1^0,c
  4795  000318                     l4039:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  4799  000318  502C               	movf	_menuDaltGLCD^0,w,c
  4800  00031A  0D1D               	mullw	29
  4801  00031C  50F3               	movf	243,w,c
  4802  00031E  0F01               	addlw	low _menuList
  4803  000320  2429               	addwf	GLCDMotor@min1^0,w,c
  4804  000322  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4805  000324  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4806  000328                     	if	1	;There is more than 1 active tblptr byte
  4807  000328  0E02               	movlw	high __smallconst
  4808  00032A  6EF7               	movwf	tblptrh,c
  4809  00032C                     	endif
  4810  00032C                     	if	0	;tblptru may be non-zero
  4811  00032C                     	endif
  4812  00032C                     	if	0	;tblptru may be non-zero
  4813  00032C                     	endif
  4814  00032C  0008               	tblrd		*
  4815  00032E  50F5               	movf	tablat,w,c
  4816  000330  0900               	iorlw	0
  4817  000332  A4D8               	btfss	status,2,c
  4818  000334  D002               	goto	l727
  4819                           
  4820                           ; BSR set to: 0
  4821  000336  0E00               	movlw	0
  4822  000338  6E29               	movwf	GLCDMotor@min1^0,c
  4823  00033A                     l727:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;GestioLCD.c: 65:     j=0;
  4827  00033A  0E00               	movlw	0
  4828  00033C  6E2A               	movwf	GLCDMotor@j^0,c
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;GestioLCD.c: 66:     k1=min1;
  4832  00033E  C029  F027         	movff	GLCDMotor@min1,GLCDMotor@k1
  4833                           
  4834                           ;GestioLCD.c: 67:     state = 6;
  4835  000342  0E06               	movlw	6
  4836  000344  6E2B               	movwf	GLCDMotor@state^0,c
  4837                           
  4838                           ;GestioLCD.c: 68:    }
  4839  000346  0012               	return	
  4840  000348                     l4045:
  4841                           
  4842                           ; BSR set to: 0
  4843  000348  0E10               	movlw	16
  4844  00034A  602A               	cpfslt	GLCDMotor@j^0,c
  4845  00034C  0012               	return	
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  4849  00034E  0E00               	movlw	0
  4850  000350  6E60               	movwf	LcGotoXY@Row^0,c
  4851  000352  502A               	movf	GLCDMotor@j^0,w,c
  4852  000354  EC9C  F009         	call	_LcGotoXY
  4853                           
  4854                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  4855  000358  502C               	movf	_menuDaltGLCD^0,w,c
  4856  00035A  0D1D               	mullw	29
  4857  00035C  50F3               	movf	243,w,c
  4858  00035E  0F01               	addlw	low _menuList
  4859  000360  2427               	addwf	GLCDMotor@k1^0,w,c
  4860  000362  0100               	movlb	0	; () banked
  4861  000364  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4862  000366  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4863  00036A                     	if	1	;There is more than 1 active tblptr byte
  4864  00036A  0E02               	movlw	high __smallconst
  4865  00036C  6EF7               	movwf	tblptrh,c
  4866  00036E                     	endif
  4867  00036E                     	if	0	;tblptru may be non-zero
  4868  00036E                     	endif
  4869  00036E                     	if	0	;tblptru may be non-zero
  4870  00036E                     	endif
  4871  00036E  0008               	tblrd		*
  4872  000370  50F5               	movf	tablat,w,c
  4873  000372  EC08  F009         	call	_LcPutChar
  4874                           
  4875                           ;GestioLCD.c: 72:     j++;
  4876  000376  2A2A               	incf	GLCDMotor@j^0,f,c
  4877                           
  4878                           ;GestioLCD.c: 73:     k1++;
  4879  000378  2A27               	incf	GLCDMotor@k1^0,f,c
  4880                           
  4881                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  4882  00037A  502C               	movf	_menuDaltGLCD^0,w,c
  4883  00037C  0D1D               	mullw	29
  4884  00037E  50F3               	movf	243,w,c
  4885  000380  0F01               	addlw	low _menuList
  4886  000382  2427               	addwf	GLCDMotor@k1^0,w,c
  4887  000384  0100               	movlb	0	; () banked
  4888  000386  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4889  000388  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4890  00038C                     	if	1	;There is more than 1 active tblptr byte
  4891  00038C  0E02               	movlw	high __smallconst
  4892  00038E  6EF7               	movwf	tblptrh,c
  4893  000390                     	endif
  4894  000390                     	if	0	;tblptru may be non-zero
  4895  000390                     	endif
  4896  000390                     	if	0	;tblptru may be non-zero
  4897  000390                     	endif
  4898  000390  0008               	tblrd		*
  4899  000392  50F5               	movf	tablat,w,c
  4900  000394  0900               	iorlw	0
  4901  000396  A4D8               	btfss	status,2,c
  4902  000398  0012               	return	
  4903                           
  4904                           ; BSR set to: 0
  4905  00039A  0E00               	movlw	0
  4906  00039C  6E27               	movwf	GLCDMotor@k1^0,c
  4907  00039E  0012               	return	
  4908  0003A0                     l4059:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  4912  0003A0  0E04               	movlw	4
  4913  0003A2  602C               	cpfslt	_menuDaltGLCD^0,c
  4914  0003A4  D012               	goto	u3980
  4915  0003A6  D7A0               	goto	u3880
  4916  0003A8                     u3950:
  4917                           
  4918                           ;GestioLCD.c: 82:     state = 0;
  4919  0003A8  0E00               	movlw	0
  4920  0003AA  6E2B               	movwf	GLCDMotor@state^0,c
  4921  0003AC  0012               	return	
  4922  0003AE                     l4067:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  4926  0003AE  ECEC  F00A         	call	_LcLliure	;wreg free
  4927  0003B2  A0D8               	btfss	status,0,c
  4928  0003B4  D006               	goto	l4073
  4929  0003B6  0E04               	movlw	4
  4930  0003B8  602C               	cpfslt	_menuDaltGLCD^0,c
  4931  0003BA  D003               	goto	l4073
  4932                           
  4933                           ;GestioLCD.c: 87:     state = 7;
  4934  0003BC  0E07               	movlw	7
  4935  0003BE  6E2B               	movwf	GLCDMotor@state^0,c
  4936                           
  4937                           ;GestioLCD.c: 88:    }
  4938  0003C0  0012               	return	
  4939  0003C2                     l4073:
  4940  0003C2  ECEC  F00A         	call	_LcLliure	;wreg free
  4941  0003C6  A0D8               	btfss	status,0,c
  4942  0003C8  0012               	return	
  4943  0003CA                     u3980:
  4944  0003CA  0E03               	movlw	3
  4945  0003CC  642C               	cpfsgt	_menuDaltGLCD^0,c
  4946  0003CE  0012               	return	
  4947  0003D0  D7EB               	goto	u3950
  4948  0003D2                     l739:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  4952  0003D2  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  4953  0003D4  0012               	return	
  4954                           
  4955                           ; BSR set to: 0
  4956  0003D6  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4957  0003D8  0012               	return	
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;GestioLCD.c: 95:     length1 = 0;
  4961  0003DA  0E00               	movlw	0
  4962  0003DC  6E25               	movwf	GLCDMotor@length1^0,c
  4963                           
  4964                           ;GestioLCD.c: 96:     length2 = 0;
  4965  0003DE  0E00               	movlw	0
  4966  0003E0  6E24               	movwf	GLCDMotor@length2^0,c
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  4970  0003E2  0E00               	movlw	0
  4971  0003E4  6E60               	movwf	LcGotoXY@Row^0,c
  4972  0003E6  0E00               	movlw	0
  4973  0003E8  EC9C  F009         	call	_LcGotoXY
  4974                           
  4975                           ;GestioLCD.c: 98:     min1 = 0;
  4976  0003EC  0E00               	movlw	0
  4977  0003EE  6E29               	movwf	GLCDMotor@min1^0,c
  4978                           
  4979                           ;GestioLCD.c: 99:     max1 = 15;
  4980  0003F0  0E0F               	movlw	15
  4981  0003F2  6E71               	movwf	GLCDMotor@max1^0,c
  4982                           
  4983                           ;GestioLCD.c: 100:     min2 = 0;
  4984  0003F4  0E00               	movlw	0
  4985  0003F6  6E28               	movwf	GLCDMotor@min2^0,c
  4986                           
  4987                           ;GestioLCD.c: 101:     max2 = 15;
  4988  0003F8  0E0F               	movlw	15
  4989  0003FA  6E70               	movwf	GLCDMotor@max2^0,c
  4990                           
  4991                           ;GestioLCD.c: 102:     j = 0;
  4992  0003FC  0E00               	movlw	0
  4993  0003FE  6E2A               	movwf	GLCDMotor@j^0,c
  4994                           
  4995                           ;GestioLCD.c: 103:     k1 = 0;
  4996  000400  0E00               	movlw	0
  4997  000402  6E27               	movwf	GLCDMotor@k1^0,c
  4998                           
  4999                           ;GestioLCD.c: 104:     k2 = 0;
  5000  000404  0E00               	movlw	0
  5001  000406  6E26               	movwf	GLCDMotor@k2^0,c
  5002                           
  5003                           ;GestioLCD.c: 105:     newString = 0;
  5004  000408  9079               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  5005  00040A  D76E               	goto	u3880
  5006  00040C                     l4103:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  5010  00040C  502C               	movf	_menuDaltGLCD^0,w,c
  5011  00040E  0D1D               	mullw	29
  5012  000410  50F3               	movf	243,w,c
  5013  000412  0F01               	addlw	low _menuList
  5014  000414  2425               	addwf	GLCDMotor@length1^0,w,c
  5015  000416  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5016  000418  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5017  00041C                     	if	1	;There is more than 1 active tblptr byte
  5018  00041C  0E02               	movlw	high __smallconst
  5019  00041E  6EF7               	movwf	tblptrh,c
  5020  000420                     	endif
  5021  000420                     	if	0	;tblptru may be non-zero
  5022  000420                     	endif
  5023  000420                     	if	0	;tblptru may be non-zero
  5024  000420                     	endif
  5025  000420  0008               	tblrd		*
  5026  000422  50F5               	movf	tablat,w,c
  5027  000424  0900               	iorlw	0
  5028  000426  A4D8               	btfss	status,2,c
  5029  000428  D004               	goto	l4109
  5030                           
  5031                           ; BSR set to: 0
  5032  00042A  0E03               	movlw	3
  5033  00042C  642C               	cpfsgt	_menuDaltGLCD^0,c
  5034  00042E  D001               	goto	l4109
  5035  000430  D75B               	goto	u3880
  5036  000432                     l4109:
  5037                           
  5038                           ; BSR set to: 0
  5039  000432  502C               	movf	_menuDaltGLCD^0,w,c
  5040  000434  0D1D               	mullw	29
  5041  000436  50F3               	movf	243,w,c
  5042  000438  0F01               	addlw	low _menuList
  5043  00043A  2425               	addwf	GLCDMotor@length1^0,w,c
  5044  00043C  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5045  00043E  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5046  000442                     	if	1	;There is more than 1 active tblptr byte
  5047  000442  0E02               	movlw	high __smallconst
  5048  000444  6EF7               	movwf	tblptrh,c
  5049  000446                     	endif
  5050  000446                     	if	0	;tblptru may be non-zero
  5051  000446                     	endif
  5052  000446                     	if	0	;tblptru may be non-zero
  5053  000446                     	endif
  5054  000446  0008               	tblrd		*
  5055  000448  50F5               	movf	tablat,w,c
  5056  00044A  0900               	iorlw	0
  5057  00044C  B4D8               	btfsc	status,2,c
  5058  00044E  D002               	goto	l4113
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;GestioLCD.c: 114:     length1++;
  5062  000450  2A25               	incf	GLCDMotor@length1^0,f,c
  5063                           
  5064                           ;GestioLCD.c: 115:    }
  5065  000452  0012               	return	
  5066  000454                     l4113:
  5067                           
  5068                           ; BSR set to: 0
  5069  000454  0E04               	movlw	4
  5070  000456  602C               	cpfslt	_menuDaltGLCD^0,c
  5071  000458  0012               	return	
  5072                           
  5073                           ; BSR set to: 0
  5074  00045A  502C               	movf	_menuDaltGLCD^0,w,c
  5075  00045C  0D1D               	mullw	29
  5076  00045E  50F3               	movf	243,w,c
  5077  000460  0F01               	addlw	low _menuList
  5078  000462  2425               	addwf	GLCDMotor@length1^0,w,c
  5079  000464  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5080  000466  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5081  00046A                     	if	1	;There is more than 1 active tblptr byte
  5082  00046A  0E02               	movlw	high __smallconst
  5083  00046C  6EF7               	movwf	tblptrh,c
  5084  00046E                     	endif
  5085  00046E                     	if	0	;tblptru may be non-zero
  5086  00046E                     	endif
  5087  00046E                     	if	0	;tblptru may be non-zero
  5088  00046E                     	endif
  5089  00046E  0008               	tblrd		*
  5090  000470  50F5               	movf	tablat,w,c
  5091  000472  0900               	iorlw	0
  5092  000474  A4D8               	btfss	status,2,c
  5093  000476  0012               	return	
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;GestioLCD.c: 117:     state = 13;
  5097  000478  0E0D               	movlw	13
  5098  00047A  6E2B               	movwf	GLCDMotor@state^0,c
  5099  00047C  0012               	return	
  5100  00047E                     l4119:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  5104  00047E  0E11               	movlw	17
  5105  000480  6024               	cpfslt	GLCDMotor@length2^0,c
  5106  000482  D014               	goto	l4129
  5107                           
  5108                           ; BSR set to: 0
  5109  000484  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5110  000486  D012               	goto	l4129
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  5114  000488  0E01               	movlw	1
  5115  00048A  6E60               	movwf	LcGotoXY@Row^0,c
  5116  00048C  0E00               	movlw	0
  5117  00048E  EC9C  F009         	call	_LcGotoXY
  5118                           
  5119                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  5120  000492  502C               	movf	_menuDaltGLCD^0,w,c
  5121  000494  0D1D               	mullw	29
  5122  000496  CFF3 F08C          	movff	prodl,??_GLCDMotor
  5123  00049A  0E1D               	movlw	29
  5124  00049C  0100               	movlb	0	; () banked
  5125  00049E  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5126  0004A0  518C               	movf	??_GLCDMotor& (0+255),w,b
  5127  0004A2  0F01               	addlw	low _menuList
  5128  0004A4  6E58               	movwf	LcNewString@new_s^0,c
  5129  0004A6  EC12  F00B         	call	_LcNewString	;wreg free
  5130  0004AA  D71E               	goto	u3880
  5131  0004AC                     l4129:
  5132                           
  5133                           ; BSR set to: 0
  5134  0004AC  0E10               	movlw	16
  5135  0004AE  6424               	cpfsgt	GLCDMotor@length2^0,c
  5136  0004B0  0012               	return	
  5137                           
  5138                           ; BSR set to: 0
  5139  0004B2  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5140  0004B4  0012               	return	
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;GestioLCD.c: 127:     state = 9;
  5144  0004B6  0E09               	movlw	9
  5145  0004B8  6E2B               	movwf	GLCDMotor@state^0,c
  5146  0004BA  0012               	return	
  5147  0004BC                     l4135:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;GestioLCD.c: 131:    if (j<16) {
  5151  0004BC  0E10               	movlw	16
  5152  0004BE  602A               	cpfslt	GLCDMotor@j^0,c
  5153  0004C0  D02D               	goto	l4149
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  5157  0004C2  0E01               	movlw	1
  5158  0004C4  6E60               	movwf	LcGotoXY@Row^0,c
  5159  0004C6  502A               	movf	GLCDMotor@j^0,w,c
  5160  0004C8  EC9C  F009         	call	_LcGotoXY
  5161                           
  5162                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  5163  0004CC  502C               	movf	_menuDaltGLCD^0,w,c
  5164  0004CE  0D1D               	mullw	29
  5165  0004D0  50F3               	movf	243,w,c
  5166  0004D2  0F01               	addlw	low _menuList
  5167  0004D4  2426               	addwf	GLCDMotor@k2^0,w,c
  5168  0004D6  0100               	movlb	0	; () banked
  5169  0004D8  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5170  0004DA  0E1D               	movlw	29
  5171  0004DC  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5172  0004DE  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5173  0004E2                     	if	1	;There is more than 1 active tblptr byte
  5174  0004E2  0E02               	movlw	high __smallconst
  5175  0004E4  6EF7               	movwf	tblptrh,c
  5176  0004E6                     	endif
  5177  0004E6                     	if	0	;tblptru may be non-zero
  5178  0004E6                     	endif
  5179  0004E6                     	if	0	;tblptru may be non-zero
  5180  0004E6                     	endif
  5181  0004E6  0008               	tblrd		*
  5182  0004E8  50F5               	movf	tablat,w,c
  5183  0004EA  EC08  F009         	call	_LcPutChar
  5184                           
  5185                           ;GestioLCD.c: 134:     j++;
  5186  0004EE  2A2A               	incf	GLCDMotor@j^0,f,c
  5187                           
  5188                           ;GestioLCD.c: 135:     k2++;
  5189  0004F0  2A26               	incf	GLCDMotor@k2^0,f,c
  5190                           
  5191                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  5192  0004F2  502C               	movf	_menuDaltGLCD^0,w,c
  5193  0004F4  0D1D               	mullw	29
  5194  0004F6  50F3               	movf	243,w,c
  5195  0004F8  0F01               	addlw	low _menuList
  5196  0004FA  2426               	addwf	GLCDMotor@k2^0,w,c
  5197  0004FC  0100               	movlb	0	; () banked
  5198  0004FE  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5199  000500  0E1D               	movlw	29
  5200  000502  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5201  000504  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5202  000508                     	if	1	;There is more than 1 active tblptr byte
  5203  000508  0E02               	movlw	high __smallconst
  5204  00050A  6EF7               	movwf	tblptrh,c
  5205  00050C                     	endif
  5206  00050C                     	if	0	;tblptru may be non-zero
  5207  00050C                     	endif
  5208  00050C                     	if	0	;tblptru may be non-zero
  5209  00050C                     	endif
  5210  00050C  0008               	tblrd		*
  5211  00050E  50F5               	movf	tablat,w,c
  5212  000510  0900               	iorlw	0
  5213  000512  A4D8               	btfss	status,2,c
  5214  000514  0012               	return	
  5215                           
  5216                           ; BSR set to: 0
  5217  000516  0E00               	movlw	0
  5218  000518  6E26               	movwf	GLCDMotor@k2^0,c
  5219  00051A  0012               	return	
  5220  00051C                     l4149:
  5221                           
  5222                           ; BSR set to: 0
  5223  00051C  0E0F               	movlw	15
  5224  00051E  642A               	cpfsgt	GLCDMotor@j^0,c
  5225  000520  0012               	return	
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;GestioLCD.c: 139:     min2++;
  5229  000522  2A28               	incf	GLCDMotor@min2^0,f,c
  5230                           
  5231                           ;GestioLCD.c: 140:     max2++;
  5232  000524  2A70               	incf	GLCDMotor@max2^0,f,c
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  5236  000526  502C               	movf	_menuDaltGLCD^0,w,c
  5237  000528  0D1D               	mullw	29
  5238  00052A  50F3               	movf	243,w,c
  5239  00052C  0F01               	addlw	low _menuList
  5240  00052E  2470               	addwf	GLCDMotor@max2^0,w,c
  5241  000530  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5242  000532  0E1D               	movlw	29
  5243  000534  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5244  000536  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5245  00053A                     	if	1	;There is more than 1 active tblptr byte
  5246  00053A  0E02               	movlw	high __smallconst
  5247  00053C  6EF7               	movwf	tblptrh,c
  5248  00053E                     	endif
  5249  00053E                     	if	0	;tblptru may be non-zero
  5250  00053E                     	endif
  5251  00053E                     	if	0	;tblptru may be non-zero
  5252  00053E                     	endif
  5253  00053E  0008               	tblrd		*
  5254  000540  50F5               	movf	tablat,w,c
  5255  000542  0900               	iorlw	0
  5256  000544  A4D8               	btfss	status,2,c
  5257  000546  D002               	goto	l4157
  5258                           
  5259                           ; BSR set to: 0
  5260  000548  0E00               	movlw	0
  5261  00054A  6E70               	movwf	GLCDMotor@max2^0,c
  5262  00054C                     l4157:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  5266  00054C  502C               	movf	_menuDaltGLCD^0,w,c
  5267  00054E  0D1D               	mullw	29
  5268  000550  50F3               	movf	243,w,c
  5269  000552  0F01               	addlw	low _menuList
  5270  000554  2428               	addwf	GLCDMotor@min2^0,w,c
  5271  000556  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5272  000558  0E1D               	movlw	29
  5273  00055A  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5274  00055C  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5275  000560                     	if	1	;There is more than 1 active tblptr byte
  5276  000560  0E02               	movlw	high __smallconst
  5277  000562  6EF7               	movwf	tblptrh,c
  5278  000564                     	endif
  5279  000564                     	if	0	;tblptru may be non-zero
  5280  000564                     	endif
  5281  000564                     	if	0	;tblptru may be non-zero
  5282  000564                     	endif
  5283  000564  0008               	tblrd		*
  5284  000566  50F5               	movf	tablat,w,c
  5285  000568  0900               	iorlw	0
  5286  00056A  A4D8               	btfss	status,2,c
  5287  00056C  D002               	goto	l757
  5288                           
  5289                           ; BSR set to: 0
  5290  00056E  0E00               	movlw	0
  5291  000570  6E28               	movwf	GLCDMotor@min2^0,c
  5292  000572                     l757:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;GestioLCD.c: 143:     j=0;
  5296  000572  0E00               	movlw	0
  5297  000574  6E2A               	movwf	GLCDMotor@j^0,c
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;GestioLCD.c: 144:     k2=min2;
  5301  000576  C028  F026         	movff	GLCDMotor@min2,GLCDMotor@k2
  5302  00057A  D6B6               	goto	u3880
  5303  00057C                     l4165:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  5307  00057C  502D               	movf	_timerGLCD^0,w,c
  5308  00057E  EC53  F00A         	call	_TiGetTics
  5309  000582  BE59               	btfsc	(?_TiGetTics+1)^0,7,c
  5310  000584  D00E               	goto	l759
  5311  000586  0EB5               	movlw	181
  5312  000588  5C58               	subwf	?_TiGetTics^0,w,c
  5313  00058A  0E04               	movlw	4
  5314  00058C  5859               	subwfb	(?_TiGetTics+1)^0,w,c
  5315  00058E  B0D8               	btfsc	status,0,c
  5316  000590  B079               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  5317  000592  D007               	goto	l759
  5318  000594  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5319  000596  D005               	goto	l759
  5320                           
  5321                           ;GestioLCD.c: 150:     LcClear();
  5322  000598  EC7B  F00A         	call	_LcClear	;wreg free
  5323  00059C                     l4173:
  5324                           
  5325                           ;GestioLCD.c: 151:     state = 2;
  5326  00059C  0E02               	movlw	2
  5327  00059E  6E2B               	movwf	GLCDMotor@state^0,c
  5328                           
  5329                           ;GestioLCD.c: 152:    }
  5330  0005A0  0012               	return	
  5331  0005A2                     l759:
  5332  0005A2  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5333  0005A4  0012               	return	
  5334  0005A6  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5335  0005A8  0012               	return	
  5336                           
  5337                           ;GestioLCD.c: 154:     LcClear();
  5338  0005AA  EC7B  F00A         	call	_LcClear	;wreg free
  5339  0005AE  D6FC               	goto	u3950
  5340  0005B0                     l4181:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  5344  0005B0  502D               	movf	_timerGLCD^0,w,c
  5345  0005B2  ECAF  F00A         	call	_TiResetTics
  5346  0005B6  D698               	goto	u3880
  5347  0005B8                     l4185:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;GestioLCD.c: 163:    if (LcLliure()) {
  5351  0005B8  ECEC  F00A         	call	_LcLliure	;wreg free
  5352  0005BC  A0D8               	btfss	status,0,c
  5353  0005BE  0012               	return	
  5354                           
  5355                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  5356  0005C0  502D               	movf	_timerGLCD^0,w,c
  5357  0005C2  ECAF  F00A         	call	_TiResetTics
  5358                           
  5359                           ;GestioLCD.c: 165:     state = 11;
  5360  0005C6  0E0B               	movlw	11
  5361  0005C8  6E2B               	movwf	GLCDMotor@state^0,c
  5362  0005CA  0012               	return	
  5363  0005CC                     l4191:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  5367  0005CC  502C               	movf	_menuDaltGLCD^0,w,c
  5368  0005CE  0D1D               	mullw	29
  5369  0005D0  50F3               	movf	243,w,c
  5370  0005D2  0F01               	addlw	low _menuList
  5371  0005D4  2424               	addwf	GLCDMotor@length2^0,w,c
  5372  0005D6  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5373  0005D8  0E1D               	movlw	29
  5374  0005DA  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5375  0005DC  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5376  0005E0                     	if	1	;There is more than 1 active tblptr byte
  5377  0005E0  0E02               	movlw	high __smallconst
  5378  0005E2  6EF7               	movwf	tblptrh,c
  5379  0005E4                     	endif
  5380  0005E4                     	if	0	;tblptru may be non-zero
  5381  0005E4                     	endif
  5382  0005E4                     	if	0	;tblptru may be non-zero
  5383  0005E4                     	endif
  5384  0005E4  0008               	tblrd		*
  5385  0005E6  50F5               	movf	tablat,w,c
  5386  0005E8  0900               	iorlw	0
  5387  0005EA  B4D8               	btfsc	status,2,c
  5388  0005EC  D002               	goto	l4195
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;GestioLCD.c: 170:     length2++;
  5392  0005EE  2A24               	incf	GLCDMotor@length2^0,f,c
  5393                           
  5394                           ;GestioLCD.c: 171:    }
  5395  0005F0  0012               	return	
  5396  0005F2                     l4195:
  5397                           
  5398                           ; BSR set to: 0
  5399  0005F2  502C               	movf	_menuDaltGLCD^0,w,c
  5400  0005F4  0D1D               	mullw	29
  5401  0005F6  50F3               	movf	243,w,c
  5402  0005F8  0F01               	addlw	low _menuList
  5403  0005FA  2424               	addwf	GLCDMotor@length2^0,w,c
  5404  0005FC  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5405  0005FE  0E1D               	movlw	29
  5406  000600  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5407  000602  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5408  000606                     	if	1	;There is more than 1 active tblptr byte
  5409  000606  0E02               	movlw	high __smallconst
  5410  000608  6EF7               	movwf	tblptrh,c
  5411  00060A                     	endif
  5412  00060A                     	if	0	;tblptru may be non-zero
  5413  00060A                     	endif
  5414  00060A                     	if	0	;tblptru may be non-zero
  5415  00060A                     	endif
  5416  00060A  0008               	tblrd		*
  5417  00060C  50F5               	movf	tablat,w,c
  5418  00060E  0900               	iorlw	0
  5419  000610  A4D8               	btfss	status,2,c
  5420  000612  0012               	return	
  5421  000614  D7C3               	goto	l4173
  5422  000616                     l4201:
  5423  000616  502B               	movf	GLCDMotor@state^0,w,c
  5424  000618  0100               	movlb	0	; () banked
  5425  00061A  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5426  00061C  6B8D               	clrf	(??_GLCDMotor+1)& (0+255),b
  5427                           
  5428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5429                           ; Switch size 1, requested type "simple"
  5430                           ; Number of cases is 1, Range of values is 0 to 0
  5431                           ; switch strategies available:
  5432                           ; Name         Instructions Cycles
  5433                           ; simple_byte            4     3 (average)
  5434                           ;	Chosen strategy is simple_byte
  5435  00061E  518D               	movf	(??_GLCDMotor+1)& (0+255),w,b
  5436  000620  0A00               	xorlw	0	; case 0
  5437  000622  A4D8               	btfss	status,2,c
  5438  000624  0012               	return	
  5439                           
  5440                           ; BSR set to: 0
  5441                           ; Switch size 1, requested type "simple"
  5442                           ; Number of cases is 12, Range of values is 0 to 13
  5443                           ; switch strategies available:
  5444                           ; Name         Instructions Cycles
  5445                           ; simple_byte           37    19 (average)
  5446                           ;	Chosen strategy is simple_byte
  5447  000626  518C               	movf	??_GLCDMotor& (0+255),w,b
  5448  000628  0A00               	xorlw	0	; case 0
  5449  00062A  B4D8               	btfsc	status,2,c
  5450  00062C  D6D2               	goto	l739
  5451  00062E  0A01               	xorlw	1	; case 1
  5452  000630  B4D8               	btfsc	status,2,c
  5453  000632  D6EC               	goto	l4103
  5454  000634  0A03               	xorlw	3	; case 2
  5455  000636  B4D8               	btfsc	status,2,c
  5456  000638  D63E               	goto	l4015
  5457  00063A  0A01               	xorlw	1	; case 3
  5458  00063C  B4D8               	btfsc	status,2,c
  5459  00063E  D656               	goto	l4031
  5460  000640  0A06               	xorlw	6	; case 5
  5461  000642  B4D8               	btfsc	status,2,c
  5462  000644  D6B4               	goto	l4067
  5463  000646  0A03               	xorlw	3	; case 6
  5464  000648  B4D8               	btfsc	status,2,c
  5465  00064A  D6AA               	goto	l4059
  5466  00064C  0A01               	xorlw	1	; case 7
  5467  00064E  B4D8               	btfsc	status,2,c
  5468  000650  D716               	goto	l4119
  5469  000652  0A0F               	xorlw	15	; case 8
  5470  000654  B4D8               	btfsc	status,2,c
  5471  000656  D7B0               	goto	l4185
  5472  000658  0A01               	xorlw	1	; case 9
  5473  00065A  B4D8               	btfsc	status,2,c
  5474  00065C  D72F               	goto	l4135
  5475  00065E  0A03               	xorlw	3	; case 10
  5476  000660  B4D8               	btfsc	status,2,c
  5477  000662  D7A6               	goto	l4181
  5478  000664  0A01               	xorlw	1	; case 11
  5479  000666  B4D8               	btfsc	status,2,c
  5480  000668  D789               	goto	l4165
  5481  00066A  0A06               	xorlw	6	; case 13
  5482  00066C  A4D8               	btfss	status,2,c
  5483  00066E  0012               	return	
  5484  000670  D7AD               	goto	l4191
  5485  000672                     __end_of_GLCDMotor:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function _LcPutChar *****************
  5489 ;; Defined at:
  5490 ;;		line 132 in file "LcTLCD.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  c               1    wreg     unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  c               1   19[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1
  5504 ;;      Params:         0       0       0
  5505 ;;      Locals:         1       0       0
  5506 ;;      Temps:          0       0       0
  5507 ;;      Totals:         1       0       0
  5508 ;;Total ram usage:        1 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 5
  5511 ;; This function calls:
  5512 ;;		_CantaData
  5513 ;;		_LcGotoXY
  5514 ;;		_WaitForBusy
  5515 ;; This function is called by:
  5516 ;;		_LcLCD
  5517 ;;		_menu
  5518 ;;		_GLCDMotor
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text35
  5523  001210                     __ptext35:
  5524                           	callstack 0
  5525  001210                     _LcPutChar:
  5526                           	callstack 24
  5527                           
  5528                           ;incstack = 0
  5529                           ;LcPutChar@c stored from wreg
  5530  001210  6E66               	movwf	LcPutChar@c^0,c
  5531                           
  5532                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  5533  001212  EC7C  F009         	call	_WaitForBusy	;wreg free
  5534  001216  5066               	movf	LcPutChar@c^0,w,c
  5535  001218  ECF2  F009         	call	_CantaData
  5536                           
  5537                           ;LcTLCD.c: 136:  ++ColumnAct;
  5538  00121C  2A46               	incf	_ColumnAct^0,f,c
  5539                           
  5540                           ;LcTLCD.c: 138:  if (Rows == 2) {
  5541  00121E  0E02               	movlw	2
  5542  001220  1849               	xorwf	_Rows^0,w,c
  5543  001222  A4D8               	btfss	status,2,c
  5544  001224  D010               	goto	l2855
  5545                           
  5546                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  5547  001226  0E27               	movlw	39
  5548  001228  6446               	cpfsgt	_ColumnAct^0,c
  5549  00122A  D00D               	goto	l2855
  5550                           
  5551                           ;LcTLCD.c: 140:    ColumnAct = 0;
  5552  00122C  0E00               	movlw	0
  5553  00122E  6E46               	movwf	_ColumnAct^0,c
  5554                           
  5555                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  5556  001230  2A47               	incf	_RowAct^0,f,c
  5557  001232  0E01               	movlw	1
  5558  001234  6447               	cpfsgt	_RowAct^0,c
  5559  001236  D002               	goto	l2853
  5560  001238  0E00               	movlw	0
  5561  00123A  6E47               	movwf	_RowAct^0,c
  5562  00123C                     l2853:
  5563                           
  5564                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  5565  00123C  C047  F060         	movff	_RowAct,LcGotoXY@Row
  5566  001240  5046               	movf	_ColumnAct^0,w,c
  5567  001242  EC9C  F009         	call	_LcGotoXY
  5568  001246                     l2855:
  5569                           
  5570                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  5571  001246  0447               	decf	_RowAct^0,w,c
  5572  001248  A4D8               	btfss	status,2,c
  5573  00124A  0012               	return	
  5574                           
  5575                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  5576  00124C  0E27               	movlw	39
  5577  00124E  6446               	cpfsgt	_ColumnAct^0,c
  5578  001250  D002               	goto	l2861
  5579  001252  0E00               	movlw	0
  5580  001254  6E46               	movwf	_ColumnAct^0,c
  5581  001256                     l2861:
  5582                           
  5583                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  5584  001256  C047  F060         	movff	_RowAct,LcGotoXY@Row
  5585  00125A  5046               	movf	_ColumnAct^0,w,c
  5586  00125C  EC9C  F009         	call	_LcGotoXY
  5587  001260  0012               	return		;funcret
  5588  001262                     __end_of_LcPutChar:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function _CantaData *****************
  5592 ;; Defined at:
  5593 ;;		line 194 in file "LcTLCD.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  Data            1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  Data            1    7[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1
  5607 ;;      Params:         0       0       0
  5608 ;;      Locals:         1       0       0
  5609 ;;      Temps:          0       0       0
  5610 ;;      Totals:         1       0       0
  5611 ;;Total ram usage:        1 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 3
  5614 ;; This function calls:
  5615 ;;		_CantaPartAlta
  5616 ;;		_CantaPartBaixa
  5617 ;; This function is called by:
  5618 ;;		_LcPutChar
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text36
  5623  0013E4                     __ptext36:
  5624                           	callstack 0
  5625  0013E4                     _CantaData:
  5626                           	callstack 25
  5627                           
  5628                           ;incstack = 0
  5629                           ;CantaData@Data stored from wreg
  5630  0013E4  6E5A               	movwf	CantaData@Data^0,c
  5631                           
  5632                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5633  0013E6  9694               	bcf	148,3,c	;volatile
  5634  0013E8  9494               	bcf	148,2,c	;volatile
  5635  0013EA  9294               	bcf	148,1,c	;volatile
  5636  0013EC  9094               	bcf	148,0,c	;volatile
  5637                           
  5638                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  5639  0013EE  8A8B               	bsf	139,5,c	;volatile
  5640                           
  5641                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  5642  0013F0  9E8C               	bcf	140,7,c	;volatile
  5643                           
  5644                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  5645  0013F2  888B               	bsf	139,4,c	;volatile
  5646                           
  5647                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  5648  0013F4  505A               	movf	CantaData@Data^0,w,c
  5649  0013F6  ECA7  F008         	call	_CantaPartAlta
  5650                           
  5651                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  5652  0013FA  888B               	bsf	139,4,c	;volatile
  5653                           
  5654                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  5655  0013FC  988B               	bcf	139,4,c	;volatile
  5656                           
  5657                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  5658  0013FE  988B               	bcf	139,4,c	;volatile
  5659                           
  5660                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  5661  001400  888B               	bsf	139,4,c	;volatile
  5662                           
  5663                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  5664  001402  505A               	movf	CantaData@Data^0,w,c
  5665  001404  EC73  F008         	call	_CantaPartBaixa
  5666                           
  5667                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  5668  001408  888B               	bsf	139,4,c	;volatile
  5669                           
  5670                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  5671  00140A  988B               	bcf	139,4,c	;volatile
  5672                           
  5673                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5674  00140C  8694               	bsf	148,3,c	;volatile
  5675  00140E  8494               	bsf	148,2,c	;volatile
  5676  001410  8294               	bsf	148,1,c	;volatile
  5677  001412  8094               	bsf	148,0,c	;volatile
  5678  001414  0012               	return		;funcret
  5679  001416                     __end_of_CantaData:
  5680                           	callstack 0
  5681                           
  5682 ;; *************** function _LcNewString *****************
  5683 ;; Defined at:
  5684 ;;		line 239 in file "LcTLCD.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  5687 ;;		 -> menuList(145), STR_4(7), STR_3(7), STR_2(11), 
  5688 ;;		 -> STR_1(8), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1
  5700 ;;      Params:         1       0       0
  5701 ;;      Locals:         0       0       0
  5702 ;;      Temps:          0       0       0
  5703 ;;      Totals:         1       0       0
  5704 ;;Total ram usage:        1 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 2
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_menu
  5711 ;;		_GLCDMotor
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text37
  5716  001624                     __ptext37:
  5717                           	callstack 0
  5718  001624                     _LcNewString:
  5719                           	callstack 27
  5720                           
  5721                           ;LcTLCD.c: 240:     s_ptr = new_s;
  5722                           
  5723                           ;incstack = 0
  5724  001624  C058  F044         	movff	LcNewString@new_s,_s_ptr
  5725                           
  5726                           ;LcTLCD.c: 241:     nou_s = 1;
  5727  001628  8E79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5728  00162A  0012               	return		;funcret
  5729  00162C                     __end_of_LcNewString:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _LcLliure *****************
  5733 ;; Defined at:
  5734 ;;		line 255 in file "LcTLCD.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;		None               void
  5741 ;; Registers used:
  5742 ;;		status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1
  5748 ;;      Params:         0       0       0
  5749 ;;      Locals:         0       0       0
  5750 ;;      Temps:          0       0       0
  5751 ;;      Totals:         0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 2
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_menu
  5759 ;;		_GLCDMotor
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text38
  5764  0015D8                     __ptext38:
  5765                           	callstack 0
  5766  0015D8                     _LcLliure:
  5767                           	callstack 27
  5768                           
  5769                           ;LcTLCD.c: 256:     return !nou_s;
  5770                           
  5771                           ;incstack = 0
  5772  0015D8  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5773  0015DA  D002               	goto	l1611
  5774  0015DC  90D8               	bcf	status,0,c
  5775  0015DE  0012               	return	
  5776  0015E0                     l1611:
  5777  0015E0  80D8               	bsf	status,0,c
  5778  0015E2  0012               	return		;funcret
  5779  0015E4                     __end_of_LcLliure:
  5780                           	callstack 0
  5781                           
  5782 ;; *************** function _LcClear *****************
  5783 ;; Defined at:
  5784 ;;		line 82 in file "LcTLCD.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1
  5798 ;;      Params:         0       0       0
  5799 ;;      Locals:         0       0       0
  5800 ;;      Temps:          0       0       0
  5801 ;;      Totals:         0       0       0
  5802 ;;Total ram usage:        0 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 5
  5805 ;; This function calls:
  5806 ;;		_CantaIR
  5807 ;;		_Espera
  5808 ;;		_LcGotoXY
  5809 ;;		_WaitForBusy
  5810 ;; This function is called by:
  5811 ;;		_menu
  5812 ;;		_GLCDMotor
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text39
  5817  0014F6                     __ptext39:
  5818                           	callstack 0
  5819  0014F6                     _LcClear:
  5820                           	callstack 24
  5821                           
  5822                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  5823                           
  5824                           ;incstack = 0
  5825  0014F6  EC7C  F009         	call	_WaitForBusy	;wreg free
  5826  0014FA  0E01               	movlw	1
  5827  0014FC  EC0B  F00A         	call	_CantaIR
  5828                           
  5829                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  5830  001500  0E00               	movlw	0
  5831  001502  6E60               	movwf	(Espera@ms+1)^0,c
  5832  001504  0E03               	movlw	3
  5833  001506  6E5F               	movwf	Espera@ms^0,c
  5834  001508  5045               	movf	_Timer^0,w,c
  5835  00150A  EC8D  F00A         	call	_Espera
  5836                           
  5837                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  5838  00150E  0E00               	movlw	0
  5839  001510  6E60               	movwf	LcGotoXY@Row^0,c
  5840  001512  0E00               	movlw	0
  5841  001514  EC9C  F009         	call	_LcGotoXY
  5842  001518  0012               	return		;funcret
  5843  00151A                     __end_of_LcClear:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _LcGotoXY *****************
  5847 ;; Defined at:
  5848 ;;		line 104 in file "LcTLCD.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  Column          1    wreg     unsigned char 
  5851 ;;  Row             1   13[COMRAM] unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  Column          1   18[COMRAM] unsigned char 
  5854 ;;  Fisics          2   14[COMRAM] int 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1
  5864 ;;      Params:         1       0       0
  5865 ;;      Locals:         5       0       0
  5866 ;;      Temps:          0       0       0
  5867 ;;      Totals:         6       0       0
  5868 ;;Total ram usage:        6 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 4
  5871 ;; This function calls:
  5872 ;;		_CantaIR
  5873 ;;		_WaitForBusy
  5874 ;; This function is called by:
  5875 ;;		_LcClear
  5876 ;;		_LcPutChar
  5877 ;;		_menu
  5878 ;;		_GLCDMotor
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text40
  5883  001338                     __ptext40:
  5884                           	callstack 0
  5885  001338                     _LcGotoXY:
  5886                           	callstack 24
  5887                           
  5888                           ;incstack = 0
  5889                           ;LcGotoXY@Column stored from wreg
  5890  001338  6E65               	movwf	LcGotoXY@Column^0,c
  5891                           
  5892                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  5893  00133A  5060               	movf	LcGotoXY@Row^0,w,c
  5894  00133C  B4D8               	btfsc	status,2,c
  5895  00133E  D004               	goto	l2795
  5896  001340  0E00               	movlw	0
  5897  001342  6E64               	movwf	(_LcGotoXY$342+1)^0,c
  5898  001344  0E40               	movlw	64
  5899  001346  D003               	goto	L5
  5900  001348                     l2795:
  5901  001348  0E00               	movlw	0
  5902  00134A  6E64               	movwf	(_LcGotoXY$342+1)^0,c
  5903  00134C  0E00               	movlw	0
  5904  00134E                     L5:
  5905  00134E  6E63               	movwf	_LcGotoXY$342^0,c
  5906  001350  5065               	movf	LcGotoXY@Column^0,w,c
  5907  001352  2463               	addwf	_LcGotoXY$342^0,w,c
  5908  001354  6E61               	movwf	LcGotoXY@Fisics^0,c
  5909  001356  0E00               	movlw	0
  5910  001358  2064               	addwfc	(_LcGotoXY$342+1)^0,w,c
  5911  00135A  6E62               	movwf	(LcGotoXY@Fisics+1)^0,c
  5912                           
  5913                           ;LcTLCD.c: 125:  WaitForBusy();
  5914  00135C  EC7C  F009         	call	_WaitForBusy	;wreg free
  5915                           
  5916                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  5917  001360  5061               	movf	LcGotoXY@Fisics^0,w,c
  5918  001362  0980               	iorlw	128
  5919  001364  EC0B  F00A         	call	_CantaIR
  5920                           
  5921                           ;LcTLCD.c: 128:  RowAct = Row;
  5922  001368  C060  F047         	movff	LcGotoXY@Row,_RowAct
  5923                           
  5924                           ;LcTLCD.c: 129:  ColumnAct = Column;
  5925  00136C  C065  F046         	movff	LcGotoXY@Column,_ColumnAct
  5926  001370  0012               	return		;funcret
  5927  001372                     __end_of_LcGotoXY:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _WaitForBusy *****************
  5931 ;; Defined at:
  5932 ;;		line 210 in file "LcTLCD.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  Busy            1   12[COMRAM] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1
  5946 ;;      Params:         0       0       0
  5947 ;;      Locals:         1       0       0
  5948 ;;      Temps:          0       0       0
  5949 ;;      Totals:         1       0       0
  5950 ;;Total ram usage:        1 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 3
  5953 ;; This function calls:
  5954 ;;		_TiGetTics
  5955 ;;		_TiResetTics
  5956 ;; This function is called by:
  5957 ;;		_LcInit
  5958 ;;		_LcClear
  5959 ;;		_LcCursorOff
  5960 ;;		_LcGotoXY
  5961 ;;		_LcPutChar
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text41
  5966  0012F8                     __ptext41:
  5967                           	callstack 0
  5968  0012F8                     _WaitForBusy:
  5969                           	callstack 25
  5970                           
  5971                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5972                           
  5973                           ;incstack = 0
  5974  0012F8  8694               	bsf	148,3,c	;volatile
  5975  0012FA  8494               	bsf	148,2,c	;volatile
  5976  0012FC  8294               	bsf	148,1,c	;volatile
  5977  0012FE  8094               	bsf	148,0,c	;volatile
  5978                           
  5979                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  5980  001300  9A8B               	bcf	139,5,c	;volatile
  5981                           
  5982                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  5983  001302  8E8C               	bsf	140,7,c	;volatile
  5984                           
  5985                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  5986  001304  5045               	movf	_Timer^0,w,c
  5987  001306  ECAF  F00A         	call	_TiResetTics
  5988  00130A                     l2763:
  5989                           
  5990                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  5991  00130A  888B               	bsf	139,4,c	;volatile
  5992  00130C  888B               	bsf	139,4,c	;volatile
  5993                           
  5994                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  5995  00130E  0E00               	movlw	0
  5996  001310  B682               	btfsc	130,3,c	;volatile
  5997  001312  0E01               	movlw	1
  5998  001314  6E5F               	movwf	WaitForBusy@Busy^0,c
  5999                           
  6000                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  6001  001316  988B               	bcf	139,4,c	;volatile
  6002                           
  6003                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  6004  001318  988B               	bcf	139,4,c	;volatile
  6005                           
  6006                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6007  00131A  888B               	bsf	139,4,c	;volatile
  6008  00131C  888B               	bsf	139,4,c	;volatile
  6009                           
  6010                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  6011  00131E  988B               	bcf	139,4,c	;volatile
  6012                           
  6013                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  6014  001320  988B               	bcf	139,4,c	;volatile
  6015                           
  6016                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  6017  001322  5045               	movf	_Timer^0,w,c
  6018  001324  EC53  F00A         	call	_TiGetTics
  6019  001328  5058               	movf	?_TiGetTics^0,w,c
  6020  00132A  1059               	iorwf	(?_TiGetTics+1)^0,w,c
  6021  00132C  A4D8               	btfss	status,2,c
  6022  00132E  0012               	return	
  6023                           
  6024                           ;LcTLCD.c: 225:  } while(Busy);
  6025  001330  505F               	movf	WaitForBusy@Busy^0,w,c
  6026  001332  B4D8               	btfsc	status,2,c
  6027  001334  0012               	return	
  6028  001336  D7E9               	goto	l2763
  6029  001338                     __end_of_WaitForBusy:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _CantaIR *****************
  6033 ;; Defined at:
  6034 ;;		line 178 in file "LcTLCD.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  IR              1    wreg     unsigned char 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  IR              1    7[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1
  6048 ;;      Params:         0       0       0
  6049 ;;      Locals:         1       0       0
  6050 ;;      Temps:          0       0       0
  6051 ;;      Totals:         1       0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 3
  6055 ;; This function calls:
  6056 ;;		_CantaPartAlta
  6057 ;;		_CantaPartBaixa
  6058 ;; This function is called by:
  6059 ;;		_LcInit
  6060 ;;		_LcClear
  6061 ;;		_LcCursorOff
  6062 ;;		_LcGotoXY
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text42
  6067  001416                     __ptext42:
  6068                           	callstack 0
  6069  001416                     _CantaIR:
  6070                           	callstack 24
  6071                           
  6072                           ;incstack = 0
  6073                           ;CantaIR@IR stored from wreg
  6074  001416  6E5A               	movwf	CantaIR@IR^0,c
  6075                           
  6076                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6077  001418  9694               	bcf	148,3,c	;volatile
  6078  00141A  9494               	bcf	148,2,c	;volatile
  6079  00141C  9294               	bcf	148,1,c	;volatile
  6080  00141E  9094               	bcf	148,0,c	;volatile
  6081                           
  6082                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  6083  001420  9A8B               	bcf	139,5,c	;volatile
  6084                           
  6085                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  6086  001422  9E8C               	bcf	140,7,c	;volatile
  6087                           
  6088                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  6089  001424  888B               	bsf	139,4,c	;volatile
  6090                           
  6091                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  6092  001426  505A               	movf	CantaIR@IR^0,w,c
  6093  001428  ECA7  F008         	call	_CantaPartAlta
  6094                           
  6095                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  6096  00142C  888B               	bsf	139,4,c	;volatile
  6097                           
  6098                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  6099  00142E  988B               	bcf	139,4,c	;volatile
  6100                           
  6101                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  6102  001430  988B               	bcf	139,4,c	;volatile
  6103                           
  6104                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  6105  001432  888B               	bsf	139,4,c	;volatile
  6106                           
  6107                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  6108  001434  505A               	movf	CantaIR@IR^0,w,c
  6109  001436  EC73  F008         	call	_CantaPartBaixa
  6110                           
  6111                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  6112  00143A  888B               	bsf	139,4,c	;volatile
  6113                           
  6114                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  6115  00143C  988B               	bcf	139,4,c	;volatile
  6116                           
  6117                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6118  00143E  8694               	bsf	148,3,c	;volatile
  6119  001440  8494               	bsf	148,2,c	;volatile
  6120  001442  8294               	bsf	148,1,c	;volatile
  6121  001444  8094               	bsf	148,0,c	;volatile
  6122  001446  0012               	return		;funcret
  6123  001448                     __end_of_CantaIR:
  6124                           	callstack 0
  6125                           
  6126 ;; *************** function _CantaPartBaixa *****************
  6127 ;; Defined at:
  6128 ;;		line 171 in file "LcTLCD.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  c               1    wreg     unsigned char 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  c               1    6[COMRAM] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1
  6142 ;;      Params:         0       0       0
  6143 ;;      Locals:         1       0       0
  6144 ;;      Temps:          1       0       0
  6145 ;;      Totals:         2       0       0
  6146 ;;Total ram usage:        2 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 2
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_CantaIR
  6153 ;;		_CantaData
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text43
  6158  0010E6                     __ptext43:
  6159                           	callstack 0
  6160  0010E6                     _CantaPartBaixa:
  6161                           	callstack 24
  6162                           
  6163                           ;incstack = 0
  6164                           ;CantaPartBaixa@c stored from wreg
  6165  0010E6  6E59               	movwf	CantaPartBaixa@c^0,c
  6166                           
  6167                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  6168  0010E8  A659               	btfss	CantaPartBaixa@c^0,3,c
  6169  0010EA  D003               	goto	u2010
  6170  0010EC  6A58               	clrf	??_CantaPartBaixa^0,c
  6171  0010EE  2A58               	incf	??_CantaPartBaixa^0,f,c
  6172  0010F0  D001               	goto	u2028
  6173  0010F2                     u2010:
  6174  0010F2  6A58               	clrf	??_CantaPartBaixa^0,c
  6175  0010F4                     u2028:
  6176  0010F4  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6177  0010F6  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6178  0010F8  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6179  0010FA  508B               	movf	139,w,c	;volatile
  6180  0010FC  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6181  0010FE  0BF7               	andlw	-9
  6182  001100  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6183  001102  6E8B               	movwf	139,c	;volatile
  6184                           
  6185                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  6186  001104  A459               	btfss	CantaPartBaixa@c^0,2,c
  6187  001106  D003               	goto	u2030
  6188  001108  6A58               	clrf	??_CantaPartBaixa^0,c
  6189  00110A  2A58               	incf	??_CantaPartBaixa^0,f,c
  6190  00110C  D001               	goto	u2048
  6191  00110E                     u2030:
  6192  00110E  6A58               	clrf	??_CantaPartBaixa^0,c
  6193  001110                     u2048:
  6194  001110  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6195  001112  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6196  001114  508B               	movf	139,w,c	;volatile
  6197  001116  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6198  001118  0BFB               	andlw	-5
  6199  00111A  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6200  00111C  6E8B               	movwf	139,c	;volatile
  6201                           
  6202                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  6203  00111E  A259               	btfss	CantaPartBaixa@c^0,1,c
  6204  001120  D003               	goto	u2050
  6205  001122  6A58               	clrf	??_CantaPartBaixa^0,c
  6206  001124  2A58               	incf	??_CantaPartBaixa^0,f,c
  6207  001126  D001               	goto	u2068
  6208  001128                     u2050:
  6209  001128  6A58               	clrf	??_CantaPartBaixa^0,c
  6210  00112A                     u2068:
  6211  00112A  4658               	rlncf	??_CantaPartBaixa^0,f,c
  6212  00112C  508B               	movf	139,w,c	;volatile
  6213  00112E  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6214  001130  0BFD               	andlw	-3
  6215  001132  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6216  001134  6E8B               	movwf	139,c	;volatile
  6217                           
  6218                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  6219  001136  A059               	btfss	CantaPartBaixa@c^0,0,c
  6220  001138  D003               	goto	u2070
  6221  00113A  6A58               	clrf	??_CantaPartBaixa^0,c
  6222  00113C  2A58               	incf	??_CantaPartBaixa^0,f,c
  6223  00113E  D001               	goto	u2088
  6224  001140                     u2070:
  6225  001140  6A58               	clrf	??_CantaPartBaixa^0,c
  6226  001142                     u2088:
  6227  001142  508B               	movf	139,w,c	;volatile
  6228  001144  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6229  001146  0BFE               	andlw	-2
  6230  001148  1858               	xorwf	??_CantaPartBaixa^0,w,c
  6231  00114A  6E8B               	movwf	139,c	;volatile
  6232  00114C  0012               	return		;funcret
  6233  00114E                     __end_of_CantaPartBaixa:
  6234                           	callstack 0
  6235                           
  6236 ;; *************** function _CantaPartAlta *****************
  6237 ;; Defined at:
  6238 ;;		line 164 in file "LcTLCD.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  c               1    wreg     unsigned char 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  c               1    6[COMRAM] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1
  6252 ;;      Params:         0       0       0
  6253 ;;      Locals:         1       0       0
  6254 ;;      Temps:          1       0       0
  6255 ;;      Totals:         2       0       0
  6256 ;;Total ram usage:        2 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 2
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_CantaIR
  6263 ;;		_CantaData
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text44
  6268  00114E                     __ptext44:
  6269                           	callstack 0
  6270  00114E                     _CantaPartAlta:
  6271                           	callstack 24
  6272                           
  6273                           ;incstack = 0
  6274                           ;CantaPartAlta@c stored from wreg
  6275  00114E  6E59               	movwf	CantaPartAlta@c^0,c
  6276                           
  6277                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  6278  001150  AE59               	btfss	CantaPartAlta@c^0,7,c
  6279  001152  D003               	goto	u1930
  6280  001154  6A58               	clrf	??_CantaPartAlta^0,c
  6281  001156  2A58               	incf	??_CantaPartAlta^0,f,c
  6282  001158  D001               	goto	u1948
  6283  00115A                     u1930:
  6284  00115A  6A58               	clrf	??_CantaPartAlta^0,c
  6285  00115C                     u1948:
  6286  00115C  4658               	rlncf	??_CantaPartAlta^0,f,c
  6287  00115E  4658               	rlncf	??_CantaPartAlta^0,f,c
  6288  001160  4658               	rlncf	??_CantaPartAlta^0,f,c
  6289  001162  508B               	movf	139,w,c	;volatile
  6290  001164  1858               	xorwf	??_CantaPartAlta^0,w,c
  6291  001166  0BF7               	andlw	-9
  6292  001168  1858               	xorwf	??_CantaPartAlta^0,w,c
  6293  00116A  6E8B               	movwf	139,c	;volatile
  6294                           
  6295                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6296  00116C  AC59               	btfss	CantaPartAlta@c^0,6,c
  6297  00116E  D003               	goto	u1950
  6298  001170  6A58               	clrf	??_CantaPartAlta^0,c
  6299  001172  2A58               	incf	??_CantaPartAlta^0,f,c
  6300  001174  D001               	goto	u1968
  6301  001176                     u1950:
  6302  001176  6A58               	clrf	??_CantaPartAlta^0,c
  6303  001178                     u1968:
  6304  001178  4658               	rlncf	??_CantaPartAlta^0,f,c
  6305  00117A  4658               	rlncf	??_CantaPartAlta^0,f,c
  6306  00117C  508B               	movf	139,w,c	;volatile
  6307  00117E  1858               	xorwf	??_CantaPartAlta^0,w,c
  6308  001180  0BFB               	andlw	-5
  6309  001182  1858               	xorwf	??_CantaPartAlta^0,w,c
  6310  001184  6E8B               	movwf	139,c	;volatile
  6311                           
  6312                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6313  001186  AA59               	btfss	CantaPartAlta@c^0,5,c
  6314  001188  D003               	goto	u1970
  6315  00118A  6A58               	clrf	??_CantaPartAlta^0,c
  6316  00118C  2A58               	incf	??_CantaPartAlta^0,f,c
  6317  00118E  D001               	goto	u1988
  6318  001190                     u1970:
  6319  001190  6A58               	clrf	??_CantaPartAlta^0,c
  6320  001192                     u1988:
  6321  001192  4658               	rlncf	??_CantaPartAlta^0,f,c
  6322  001194  508B               	movf	139,w,c	;volatile
  6323  001196  1858               	xorwf	??_CantaPartAlta^0,w,c
  6324  001198  0BFD               	andlw	-3
  6325  00119A  1858               	xorwf	??_CantaPartAlta^0,w,c
  6326  00119C  6E8B               	movwf	139,c	;volatile
  6327                           
  6328                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6329  00119E  A859               	btfss	CantaPartAlta@c^0,4,c
  6330  0011A0  D003               	goto	u1990
  6331  0011A2  6A58               	clrf	??_CantaPartAlta^0,c
  6332  0011A4  2A58               	incf	??_CantaPartAlta^0,f,c
  6333  0011A6  D001               	goto	u2008
  6334  0011A8                     u1990:
  6335  0011A8  6A58               	clrf	??_CantaPartAlta^0,c
  6336  0011AA                     u2008:
  6337  0011AA  508B               	movf	139,w,c	;volatile
  6338  0011AC  1858               	xorwf	??_CantaPartAlta^0,w,c
  6339  0011AE  0BFE               	andlw	-2
  6340  0011B0  1858               	xorwf	??_CantaPartAlta^0,w,c
  6341  0011B2  6E8B               	movwf	139,c	;volatile
  6342  0011B4  0012               	return		;funcret
  6343  0011B6                     __end_of_CantaPartAlta:
  6344                           	callstack 0
  6345                           
  6346 ;; *************** function _Espera *****************
  6347 ;; Defined at:
  6348 ;;		line 159 in file "LcTLCD.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  Timer           1    wreg     unsigned char 
  6351 ;;  ms              2   12[COMRAM] int 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  Timer           1   15[COMRAM] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1
  6363 ;;      Params:         2       0       0
  6364 ;;      Locals:         1       0       0
  6365 ;;      Temps:          1       0       0
  6366 ;;      Totals:         4       0       0
  6367 ;;Total ram usage:        4 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 3
  6370 ;; This function calls:
  6371 ;;		_TiGetTics
  6372 ;;		_TiResetTics
  6373 ;; This function is called by:
  6374 ;;		_LcInit
  6375 ;;		_LcClear
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text45
  6380  00151A                     __ptext45:
  6381                           	callstack 0
  6382  00151A                     _Espera:
  6383                           	callstack 25
  6384                           
  6385                           ;incstack = 0
  6386                           ;Espera@Timer stored from wreg
  6387  00151A  6E62               	movwf	Espera@Timer^0,c
  6388                           
  6389                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  6390  00151C  5062               	movf	Espera@Timer^0,w,c
  6391  00151E  ECAF  F00A         	call	_TiResetTics
  6392  001522                     l2789:
  6393  001522  5062               	movf	Espera@Timer^0,w,c
  6394  001524  EC53  F00A         	call	_TiGetTics
  6395  001528  505F               	movf	Espera@ms^0,w,c
  6396  00152A  5C58               	subwf	?_TiGetTics^0,w,c
  6397  00152C  5059               	movf	(?_TiGetTics+1)^0,w,c
  6398  00152E  0A80               	xorlw	128
  6399  001530  6E61               	movwf	??_Espera^0,c
  6400  001532  5060               	movf	(Espera@ms+1)^0,w,c
  6401  001534  0A80               	xorlw	128
  6402  001536  5861               	subwfb	??_Espera^0,w,c
  6403  001538  B0D8               	btfsc	status,0,c
  6404  00153A  0012               	return	
  6405  00153C  D7F2               	goto	l2789
  6406  00153E                     __end_of_Espera:
  6407                           	callstack 0
  6408                           
  6409 ;; *************** function _TiResetTics *****************
  6410 ;; Defined at:
  6411 ;;		line 55 in file "TiTTimer.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  Handle          1    wreg     unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  Handle          1    5[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1
  6425 ;;      Params:         0       0       0
  6426 ;;      Locals:         1       0       0
  6427 ;;      Temps:          0       0       0
  6428 ;;      Totals:         1       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 2
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_Espera
  6436 ;;		_WaitForBusy
  6437 ;;		_SMotor
  6438 ;;		_TeTeclat
  6439 ;;		_motorAltaveu
  6440 ;;		_GLCDMotor
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text46
  6445  00155E                     __ptext46:
  6446                           	callstack 0
  6447  00155E                     _TiResetTics:
  6448                           	callstack 27
  6449                           
  6450                           ;incstack = 0
  6451                           ;TiResetTics@Handle stored from wreg
  6452  00155E  6E58               	movwf	TiResetTics@Handle^0,c
  6453                           
  6454                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  6455  001560  5058               	movf	TiResetTics@Handle^0,w,c
  6456  001562  0D03               	mullw	3
  6457  001564  50F3               	movf	243,w,c
  6458  001566  0F01               	addlw	low _s_Timers
  6459  001568  6ED9               	movwf	fsr2l,c
  6460  00156A  6ADA               	clrf	fsr2h,c
  6461  00156C  C022  FFDE         	movff	_h_Tics,postinc2
  6462  001570  C023  FFDD         	movff	_h_Tics+1,postdec2
  6463  001574  0012               	return		;funcret
  6464  001576                     __end_of_TiResetTics:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _TiGetTics *****************
  6468 ;; Defined at:
  6469 ;;		line 61 in file "TiTTimer.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  Handle          1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  Handle          1    9[COMRAM] unsigned char 
  6474 ;;  actual          2   10[COMRAM] volatile unsigned int 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  2    5[COMRAM] int 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1
  6484 ;;      Params:         2       0       0
  6485 ;;      Locals:         3       0       0
  6486 ;;      Temps:          2       0       0
  6487 ;;      Totals:         7       0       0
  6488 ;;Total ram usage:        7 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 2
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_Espera
  6495 ;;		_WaitForBusy
  6496 ;;		_SMotor
  6497 ;;		_TeTeclat
  6498 ;;		_motorAltaveu
  6499 ;;		_GLCDMotor
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text47
  6504  0014A6                     __ptext47:
  6505                           	callstack 0
  6506  0014A6                     _TiGetTics:
  6507                           	callstack 27
  6508                           
  6509                           ;incstack = 0
  6510                           ;TiGetTics@Handle stored from wreg
  6511  0014A6  6E5C               	movwf	TiGetTics@Handle^0,c
  6512                           
  6513                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  6514  0014A8  C022  F05D         	movff	_h_Tics,TiGetTics@actual	;volatile
  6515  0014AC  C023  F05E         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  6516                           
  6517                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  6518  0014B0  505C               	movf	TiGetTics@Handle^0,w,c
  6519  0014B2  0D03               	mullw	3
  6520  0014B4  50F3               	movf	243,w,c
  6521  0014B6  0F01               	addlw	low _s_Timers
  6522  0014B8  6ED9               	movwf	fsr2l,c
  6523  0014BA  6ADA               	clrf	fsr2h,c
  6524  0014BC  CFDE F05A          	movff	postinc2,??_TiGetTics
  6525  0014C0  CFDD F05B          	movff	postdec2,??_TiGetTics+1
  6526  0014C4  505A               	movf	??_TiGetTics^0,w,c
  6527  0014C6  5C5D               	subwf	TiGetTics@actual^0,w,c	;volatile
  6528  0014C8  6E58               	movwf	?_TiGetTics^0,c
  6529  0014CA  505B               	movf	(??_TiGetTics+1)^0,w,c
  6530  0014CC  585E               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  6531  0014CE  6E59               	movwf	(?_TiGetTics+1)^0,c
  6532  0014D0  0012               	return		;funcret
  6533  0014D2                     __end_of_TiGetTics:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function _GLCDInit *****************
  6537 ;; Defined at:
  6538 ;;		line 26 in file "GestioLCD.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1
  6552 ;;      Params:         0       0       0
  6553 ;;      Locals:         0       0       0
  6554 ;;      Temps:          0       0       0
  6555 ;;      Totals:         0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 3
  6559 ;; This function calls:
  6560 ;;		_TiGetTimer
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text48
  6567  00162C                     __ptext48:
  6568                           	callstack 0
  6569  00162C                     _GLCDInit:
  6570                           	callstack 27
  6571                           
  6572                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  6573                           
  6574                           ;incstack = 0
  6575  00162C  ECB9  F009         	call	_TiGetTimer	;wreg free
  6576  001630  6E2D               	movwf	_timerGLCD^0,c
  6577  001632  0012               	return		;funcret
  6578  001634                     __end_of_GLCDInit:
  6579                           	callstack 0
  6580                           
  6581 ;; *************** function _TiGetTimer *****************
  6582 ;; Defined at:
  6583 ;;		line 70 in file "TiTTimer.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1
  6597 ;;      Params:         0       0       0
  6598 ;;      Locals:         0       0       0
  6599 ;;      Temps:          1       0       0
  6600 ;;      Totals:         1       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; Hardware stack levels required when called: 2
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_LcInit
  6608 ;;		_Sinit
  6609 ;;		_TeInit
  6610 ;;		_Minit
  6611 ;;		_initAltaveu
  6612 ;;		_GLCDInit
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text49
  6617  001372                     __ptext49:
  6618                           	callstack 0
  6619  001372                     _TiGetTimer:
  6620                           	callstack 27
  6621                           
  6622                           ;TiTTimer.c: 74:     counter=0;
  6623                           
  6624                           ;incstack = 0
  6625  001372  0E00               	movlw	0
  6626  001374  6E3D               	movwf	_counter^0,c
  6627                           
  6628                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6629  001376  D007               	goto	l1551
  6630  001378                     l1543:
  6631                           
  6632                           ;TiTTimer.c: 76:         counter++;
  6633  001378  2A3D               	incf	_counter^0,f,c
  6634                           
  6635                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  6636  00137A  0E08               	movlw	8
  6637  00137C  183D               	xorwf	_counter^0,w,c
  6638  00137E  A4D8               	btfss	status,2,c
  6639  001380  D002               	goto	l1551
  6640  001382  0EFF               	movlw	255
  6641  001384  0012               	return	
  6642  001386                     l1551:
  6643                           
  6644                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6645  001386  503D               	movf	_counter^0,w,c
  6646  001388  0D03               	mullw	3
  6647  00138A  50F3               	movf	243,w,c
  6648  00138C  0F03               	addlw	low (_s_Timers+2)
  6649  00138E  6ED9               	movwf	fsr2l,c
  6650  001390  6ADA               	clrf	fsr2h,c
  6651  001392  04DE               	decf	postinc2,w,c
  6652  001394  B4D8               	btfsc	status,2,c
  6653  001396  D7F0               	goto	l1543
  6654                           
  6655                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  6656  001398  503D               	movf	_counter^0,w,c
  6657  00139A  0D03               	mullw	3
  6658  00139C  50F3               	movf	243,w,c
  6659  00139E  0F03               	addlw	low (_s_Timers+2)
  6660  0013A0  6ED9               	movwf	fsr2l,c
  6661  0013A2  6ADA               	clrf	fsr2h,c
  6662  0013A4  0E01               	movlw	1
  6663  0013A6  6EDF               	movwf	indf2,c
  6664                           
  6665                           ;TiTTimer.c: 80:     return (counter);
  6666  0013A8  503D               	movf	_counter^0,w,c
  6667  0013AA  0012               	return		;funcret
  6668  0013AC                     __end_of_TiGetTimer:
  6669                           	callstack 0
  6670                           
  6671 ;; *************** function _high_rsi *****************
  6672 ;; Defined at:
  6673 ;;		line 17 in file "main.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1
  6687 ;;      Params:         0       0       0
  6688 ;;      Locals:         0       0       0
  6689 ;;      Temps:          4       0       0
  6690 ;;      Totals:         4       0       0
  6691 ;;Total ram usage:        4 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; Hardware stack levels required when called: 1
  6694 ;; This function calls:
  6695 ;;		__TiRSITimer
  6696 ;; This function is called by:
  6697 ;;		Interrupt level 2
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	intcode
  6702  000008                     __pintcode:
  6703                           	callstack 0
  6704  000008                     _high_rsi:
  6705                           	callstack 24
  6706                           
  6707                           ;incstack = 0
  6708  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6709  00000A  CFD9 F054          	movff	fsr2l,??_high_rsi
  6710  00000E  CFDA F055          	movff	fsr2h,??_high_rsi+1
  6711  000012  CFF3 F056          	movff	prodl,??_high_rsi+2
  6712  000016  CFF4 F057          	movff	prodh,??_high_rsi+3
  6713  00001A  ECDB  F008         	call	__TiRSITimer	;wreg free
  6714  00001E  C057  FFF4         	movff	??_high_rsi+3,prodh
  6715  000022  C056  FFF3         	movff	??_high_rsi+2,prodl
  6716  000026  C055  FFDA         	movff	??_high_rsi+1,fsr2h
  6717  00002A  C054  FFD9         	movff	??_high_rsi,fsr2l
  6718  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6719  000030  0011               	retfie		f
  6720  000032                     __end_of_high_rsi:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function __TiRSITimer *****************
  6724 ;; Defined at:
  6725 ;;		line 37 in file "TiTTimer.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1
  6739 ;;      Params:         0       0       0
  6740 ;;      Locals:         0       0       0
  6741 ;;      Temps:          1       0       0
  6742 ;;      Totals:         1       0       0
  6743 ;;Total ram usage:        1 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_high_rsi
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text51
  6753  0011B6                     __ptext51:
  6754                           	callstack 0
  6755  0011B6                     __TiRSITimer:
  6756                           	callstack 24
  6757                           
  6758                           ;TiTTimer.c: 39:     TMR0H = 223;
  6759                           
  6760                           ;incstack = 0
  6761  0011B6  0EDF               	movlw	223
  6762  0011B8  6ED7               	movwf	215,c	;volatile
  6763                           
  6764                           ;TiTTimer.c: 40:     TMR0L = 148;
  6765  0011BA  0E94               	movlw	148
  6766  0011BC  6ED6               	movwf	214,c	;volatile
  6767                           
  6768                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  6769  0011BE  94F2               	bcf	242,2,c	;volatile
  6770                           
  6771                           ;TiTTimer.c: 42:     h_Tics++;
  6772  0011C0  4A22               	infsnz	_h_Tics^0,f,c
  6773  0011C2  2A23               	incf	(_h_Tics+1)^0,f,c
  6774                           
  6775                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  6776  0011C4  0E48               	movlw	72
  6777  0011C6  5C22               	subwf	_h_Tics^0,w,c
  6778  0011C8  0EEE               	movlw	238
  6779  0011CA  5823               	subwfb	(_h_Tics+1)^0,w,c
  6780  0011CC  A0D8               	btfss	status,0,c
  6781  0011CE  0012               	return	
  6782                           
  6783                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  6784  0011D0  0E00               	movlw	0
  6785  0011D2  6E3D               	movwf	_counter^0,c
  6786  0011D4                     i2l1761:
  6787  0011D4  0E07               	movlw	7
  6788  0011D6  643D               	cpfsgt	_counter^0,c
  6789  0011D8  D001               	goto	i2l1765
  6790  0011DA  D015               	goto	i2l1773
  6791  0011DC                     i2l1765:
  6792                           
  6793                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  6794  0011DC  503D               	movf	_counter^0,w,c
  6795  0011DE  0D03               	mullw	3
  6796  0011E0  50F3               	movf	243,w,c
  6797  0011E2  0F03               	addlw	low (_s_Timers+2)
  6798  0011E4  6ED9               	movwf	fsr2l,c
  6799  0011E6  6ADA               	clrf	fsr2h,c
  6800  0011E8  04DE               	decf	postinc2,w,c
  6801  0011EA  A4D8               	btfss	status,2,c
  6802  0011EC  D00A               	goto	i2l1769
  6803                           
  6804                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  6805  0011EE  503D               	movf	_counter^0,w,c
  6806  0011F0  0D03               	mullw	3
  6807  0011F2  50F3               	movf	243,w,c
  6808  0011F4  0F01               	addlw	low _s_Timers
  6809  0011F6  6ED9               	movwf	fsr2l,c
  6810  0011F8  6ADA               	clrf	fsr2h,c
  6811  0011FA  5022               	movf	_h_Tics^0,w,c
  6812  0011FC  5EDE               	subwf	postinc2,f,c
  6813  0011FE  5023               	movf	(_h_Tics+1)^0,w,c
  6814  001200  5ADD               	subwfb	postdec2,f,c
  6815  001202                     i2l1769:
  6816                           
  6817                           ;TiTTimer.c: 50:         }
  6818  001202  2A3D               	incf	_counter^0,f,c
  6819  001204  D7E7               	goto	i2l1761
  6820  001206                     i2l1773:
  6821                           
  6822                           ;TiTTimer.c: 51:         h_Tics=0;
  6823  001206  0E00               	movlw	0
  6824  001208  6E23               	movwf	(_h_Tics+1)^0,c
  6825  00120A  0E00               	movlw	0
  6826  00120C  6E22               	movwf	_h_Tics^0,c
  6827  00120E  0012               	return		;funcret
  6828  001210                     __end_of__TiRSITimer:
  6829                           	callstack 0
  6830                           
  6831                           	psect	rparam
  6832  0000                     
  6833                           	psect	temp
  6834  00007A                     btemp:
  6835                           	callstack 0
  6836  00007A                     	ds	1
  6837  0000                     int$flags	set	btemp
  6838  0000                     wtemp8	set	btemp+1
  6839  0000                     ttemp5	set	btemp+1
  6840  0000                     ttemp6	set	btemp+4
  6841  0000                     ttemp7	set	btemp+8
  6842                           
  6843                           	psect	idloc
  6844                           
  6845                           ;Config register IDLOC0 @ 0x200000
  6846                           ;	unspecified, using default values
  6847  200000                     	org	2097152
  6848  200000  FF                 	db	255
  6849                           
  6850                           ;Config register IDLOC1 @ 0x200001
  6851                           ;	unspecified, using default values
  6852  200001                     	org	2097153
  6853  200001  FF                 	db	255
  6854                           
  6855                           ;Config register IDLOC2 @ 0x200002
  6856                           ;	unspecified, using default values
  6857  200002                     	org	2097154
  6858  200002  FF                 	db	255
  6859                           
  6860                           ;Config register IDLOC3 @ 0x200003
  6861                           ;	unspecified, using default values
  6862  200003                     	org	2097155
  6863  200003  FF                 	db	255
  6864                           
  6865                           ;Config register IDLOC4 @ 0x200004
  6866                           ;	unspecified, using default values
  6867  200004                     	org	2097156
  6868  200004  FF                 	db	255
  6869                           
  6870                           ;Config register IDLOC5 @ 0x200005
  6871                           ;	unspecified, using default values
  6872  200005                     	org	2097157
  6873  200005  FF                 	db	255
  6874                           
  6875                           ;Config register IDLOC6 @ 0x200006
  6876                           ;	unspecified, using default values
  6877  200006                     	org	2097158
  6878  200006  FF                 	db	255
  6879                           
  6880                           ;Config register IDLOC7 @ 0x200007
  6881                           ;	unspecified, using default values
  6882  200007                     	org	2097159
  6883  200007  FF                 	db	255
  6884                           
  6885                           	psect	config
  6886                           
  6887                           ; Padding undefined space
  6888  300000                     	org	3145728
  6889  300000  FF                 	db	255
  6890                           
  6891                           ;Config register CONFIG1H @ 0x300001
  6892                           ;	Oscillator
  6893                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  6894                           ;	Fail-Safe Clock Monitor Enable bit
  6895                           ;	FCMEN = 0x0, unprogrammed default
  6896                           ;	Internal/External Oscillator Switchover bit
  6897                           ;	IESO = 0x0, unprogrammed default
  6898  300001                     	org	3145729
  6899  300001  06                 	db	6
  6900                           
  6901                           ;Config register CONFIG2L @ 0x300002
  6902                           ;	unspecified, using default values
  6903                           ;	Power-up Timer Enable bit
  6904                           ;	PWRT = 0x1, unprogrammed default
  6905                           ;	Brown-out Reset Enable bits
  6906                           ;	BOR = 0x3, unprogrammed default
  6907                           ;	Brown-out Reset Voltage bits
  6908                           ;	BORV = 0x3, unprogrammed default
  6909  300002                     	org	3145730
  6910  300002  1F                 	db	31
  6911                           
  6912                           ;Config register CONFIG2H @ 0x300003
  6913                           ;	Watchdog Timer Enable bit
  6914                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6915                           ;	Watchdog Timer Postscale Select bits
  6916                           ;	WDTPS = 0xF, unprogrammed default
  6917  300003                     	org	3145731
  6918  300003  1E                 	db	30
  6919                           
  6920                           ; Padding undefined space
  6921  300004                     	org	3145732
  6922  300004  FF                 	db	255
  6923                           
  6924                           ;Config register CONFIG3H @ 0x300005
  6925                           ;	CCP2 MUX bit
  6926                           ;	CCP2MX = 0x1, unprogrammed default
  6927                           ;	PORTB A/D Enable bit
  6928                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6929                           ;	Low-Power Timer1 Oscillator Enable bit
  6930                           ;	LPT1OSC = 0x0, unprogrammed default
  6931                           ;	MCLR Pin Enable bit
  6932                           ;	MCLRE = 0x1, unprogrammed default
  6933  300005                     	org	3145733
  6934  300005  81                 	db	129
  6935                           
  6936                           ;Config register CONFIG4L @ 0x300006
  6937                           ;	Stack Full/Underflow Reset Enable bit
  6938                           ;	STVREN = 0x1, unprogrammed default
  6939                           ;	Single-Supply ICSP Enable bit
  6940                           ;	LVP = OFF, Single-Supply ICSP disabled
  6941                           ;	Boot Block Size Select bits
  6942                           ;	BBSIZ = 0x0, unprogrammed default
  6943                           ;	Extended Instruction Set Enable bit
  6944                           ;	XINST = 0x0, unprogrammed default
  6945                           ;	Background Debugger Enable bit
  6946                           ;	DEBUG = 0x1, unprogrammed default
  6947  300006                     	org	3145734
  6948  300006  81                 	db	129
  6949                           
  6950                           ; Padding undefined space
  6951  300007                     	org	3145735
  6952  300007  FF                 	db	255
  6953                           
  6954                           ;Config register CONFIG5L @ 0x300008
  6955                           ;	unspecified, using default values
  6956                           ;	Code Protection bit
  6957                           ;	CP0 = 0x1, unprogrammed default
  6958                           ;	Code Protection bit
  6959                           ;	CP1 = 0x1, unprogrammed default
  6960  300008                     	org	3145736
  6961  300008  03                 	db	3
  6962                           
  6963                           ;Config register CONFIG5H @ 0x300009
  6964                           ;	unspecified, using default values
  6965                           ;	Boot Block Code Protection bitProtect Boot
  6966                           ;	CPB = 0x1, unprogrammed default
  6967                           ;	Data EEPROM Code Protection bit
  6968                           ;	CPD = 0x1, unprogrammed default
  6969  300009                     	org	3145737
  6970  300009  C0                 	db	192
  6971                           
  6972                           ;Config register CONFIG6L @ 0x30000A
  6973                           ;	unspecified, using default values
  6974                           ;	Write Protection bit
  6975                           ;	WRT0 = 0x1, unprogrammed default
  6976                           ;	Write Protection bit
  6977                           ;	WRT1 = 0x1, unprogrammed default
  6978  30000A                     	org	3145738
  6979  30000A  03                 	db	3
  6980                           
  6981                           ;Config register CONFIG6H @ 0x30000B
  6982                           ;	unspecified, using default values
  6983                           ;	Configuration Register Write Protection bit
  6984                           ;	WRTC = 0x1, unprogrammed default
  6985                           ;	Boot Block Write Protection bit
  6986                           ;	WRTB = 0x1, unprogrammed default
  6987                           ;	Data EEPROM Write Protection bit
  6988                           ;	WRTD = 0x1, unprogrammed default
  6989  30000B                     	org	3145739
  6990  30000B  E0                 	db	224
  6991                           
  6992                           ;Config register CONFIG7L @ 0x30000C
  6993                           ;	unspecified, using default values
  6994                           ;	Table Read Protection bit
  6995                           ;	EBTR0 = 0x1, unprogrammed default
  6996                           ;	Table Read Protection bit
  6997                           ;	EBTR1 = 0x1, unprogrammed default
  6998  30000C                     	org	3145740
  6999  30000C  03                 	db	3
  7000                           
  7001                           ;Config register CONFIG7H @ 0x30000D
  7002                           ;	unspecified, using default values
  7003                           ;	Boot Block Table Read Protection bit
  7004                           ;	EBTRB = 0x1, unprogrammed default
  7005  30000D                     	org	3145741
  7006  30000D  40                 	db	64
  7007                           tosu	equ	0xFFF
  7008                           tosh	equ	0xFFE
  7009                           tosl	equ	0xFFD
  7010                           stkptr	equ	0xFFC
  7011                           pclatu	equ	0xFFB
  7012                           pclath	equ	0xFFA
  7013                           pcl	equ	0xFF9
  7014                           tblptru	equ	0xFF8
  7015                           tblptrh	equ	0xFF7
  7016                           tblptrl	equ	0xFF6
  7017                           tablat	equ	0xFF5
  7018                           prodh	equ	0xFF4
  7019                           prodl	equ	0xFF3
  7020                           indf0	equ	0xFEF
  7021                           postinc0	equ	0xFEE
  7022                           postdec0	equ	0xFED
  7023                           preinc0	equ	0xFEC
  7024                           plusw0	equ	0xFEB
  7025                           fsr0h	equ	0xFEA
  7026                           fsr0l	equ	0xFE9
  7027                           wreg	equ	0xFE8
  7028                           indf1	equ	0xFE7
  7029                           postinc1	equ	0xFE6
  7030                           postdec1	equ	0xFE5
  7031                           preinc1	equ	0xFE4
  7032                           plusw1	equ	0xFE3
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           bsr	equ	0xFE0
  7036                           indf2	equ	0xFDF
  7037                           postinc2	equ	0xFDE
  7038                           postdec2	equ	0xFDD
  7039                           preinc2	equ	0xFDC
  7040                           plusw2	equ	0xFDB
  7041                           fsr2h	equ	0xFDA
  7042                           fsr2l	equ	0xFD9
  7043                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    145
    Data        30
    BSS         266
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     121
    BANK0           128      2      14
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 145
		 -> menuList(CODE[145]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 145
		 -> menuList(CODE[145]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16271
                           _GLCDInit
                          _GLCDMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    6263
                                              0 BANK0      2     2      0
                     _GLCDMostraMenu
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1689
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    5923
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1689
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     478
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2332
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1357
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _GLCDMostraMenu
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _SiFerMenu
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
   _motorAltaveu
     _TiGetTics
     _TiResetTics

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2       E       4       10.9%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F       7        0.0%
DATA                 0      0     13F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 29 18:43:07 2022

               TiResetTics@Handle 0058                  _loginNOTRegister 03CD  
                               _i 0034                                 _j 0033  
       ??_UcheckExistsNotFinished 0058            __end_of_compareStrings 12F8  
                             l441 06CC                               l615 1496  
                             l570 0FBE                               l563 0F7C  
                             l555 0F5A                               l565 0F82  
                             l549 14EE                               l558 0F68  
                             l590 0B04                               l646 0E9C  
                             l727 033A                               l568 0FB8  
                             l739 03D2                               l587 0AE8  
                             l588 0AF8                               l757 0572  
                             l759 05A2                               u230 1020  
                             u250 103C                               u308 1070  
                             u270 1056                               u248 1022  
                             u290 106E                               u268 103E  
                             u288 1058                               _tmp 003C  
                ??_CantaPartBaixa 0058                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0075  
              __size_of_GLCDMotor 03BE                              l2021 0F78  
                            l3011 0952                              l2051 0FFA  
                            l3101 0A5C                              l3031 098E  
                            l3023 0976                              l3105 0A64  
                            l3025 097A                              l3009 094C  
                            l1611 15E0                              l3131 0AA0  
                            l3123 0A78                              l3043 09AE  
                            l3035 0992                              l4003 0866  
                            l3061 09F0                              l3053 09D0  
                            l1543 1378                              l1551 1386  
                            l4103 040C                              l4031 02EC  
                            l4015 02B6                              l3127 0A8A  
                            l3071 0A0A                              l4113 0454  
                            l4025 02DE                              l4201 0616  
                            l3081 0A28                              l3049 09C4  
                            l3137 0AA4                              l3401 0B0E  
                            l3411 0B3A                              l4109 0432  
                            l4045 0348                              l4135 04BC  
                            l4119 047E                              l4039 0318  
                            l3095 0A4C                              l3087 0A32  
                            l1815 13C8                              l3415 0B44  
                            l1639 15BC                              l4231 1294  
                            l4129 04AC                              l4073 03C2  
                            l3433 0BA8                              l3417 0B4A  
                            l4067 03AE                              l4059 03A0  
                            l1819 13D0                              l3371 0F00  
                            l3363 0ED2                              l3355 0EC2  
                            l3347 0EAE                              l4181 05B0  
                            l4173 059C                              l4165 057C  
                            l4157 054C                              l4149 051C  
                            l2901 12D0                              l3461 0C26  
                            l3445 0C00                              l3429 0B96  
                            l3349 0EB4                              l4191 05CC  
                            l3711 0D08                              l3455 0C18  
                            l3383 0F2C                              l4185 05B8  
                            l3705 0CFA                              l1793 147C  
                            l2763 130A                              l4195 05F2  
                            l2923 0DE6                              l3731 0D5E  
                            l3715 0D14                              l2861 1256  
                            l2853 123C                              l3725 0D50  
                            l3397 0AFE                              l3469 0C32  
                            l3813 0674                              l2855 1246  
                            l3735 0D66                              l3719 0D20  
                            l3671 0CA0                              l3745 0D7E  
                            l2795 1348                              l2971 08D0  
                            l3739 0D72                              l3683 0CC0  
                            l3923 07D0                              l3907 0798  
                            l3835 06BA                              l3819 0686  
                            l2789 1522                              l3693 0CD6  
                            l3685 0CC6                              l3677 0CB0  
                            l3917 07C0                              l3909 079E  
                            l3837 06C0                              l3829 06A8  
                            l3679 0CB4                              l2895 12B4  
                            l3935 07E8                              l3919 07C6  
                            l2993 0914                              l3953 0818  
                            l3881 0754                              l3865 071C  
                            l3857 0702                              l3849 06E2  
                            l2995 091A                              l2979 08E4  
                            l3699 0CE4                              l3875 0744  
                            l3867 0722                              l3957 0826  
                            l3893 076C                              l3877 074A  
                            l3975 082C                              l3993 0854  
                            l3985 0842                              STR_1 029D  
                            STR_2 0292                              STR_3 02AC  
                            STR_4 02A5                              u2010 10F2  
                            u2030 110E                              u2008 11AA  
                            u2200 12DC                              u2050 1128  
                            u2210 0E94                              u2028 10F4  
                            u2070 1140                              u2310 0938  
                            u2048 1110                              _LATD 000F8C  
                            u2068 112A                              u2420 09BE  
                            u2510 0A3A                              u2088 1142  
                            u2520 0A54                              u2450 09E0  
                            u3430 0C66                              u3440 0C70  
                            u1930 115A                              u3450 0C80  
                            u3460 0C90                              u1950 1176  
                            u3446 0C72                              u3438 0C68  
                            u3456 0C82                              u3720 077C  
                            u1970 1190                              u3466 0C92  
                            u2930 0B08                              u1948 115C  
                            u1990 11A8                              u1968 1178  
                            u1988 1192                              u3950 03A8  
                            u3790 07F8                              u3880 02E8  
                            u3980 03CA                   ??_SsetNovaTecla 0058  
                            _Rows 0049                              _main 1262  
                            _menu 0672                              _nota 0031  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 151A  
                            start 0032                   __end_of_CantaIR 1448  
                    ?_initAltaveu 0053                     LcInit@columns 0063  
                    ___param_bank 000000                  __end_of_GLCDInit 1634  
                     Espera@Timer 0062                             ?_main 0053  
         __size_of_escriureEEPROM 002E                             ?_menu 0053  
                           _EEADR 000FA9                     ??_TiInitTimer 0058  
                           _T0CON 000FD5                   ?_compareStrings 0058  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 1448                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 1634  
                     _MNovaLletra 1614                             _Minit 161C  
                           _Sinit 160C                             _Timer 0045  
                           _Uinit 0F50                             _s_ptr 0044  
                           _nou_s 03CF                       _LcCursorOff 15CC  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03C8  
                           tablat 000FF5                       _LcNewString 1624  
                   ??_TiResetTics 0058                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0008                  __end_of_LcGotoXY 1372  
                __end_of_LcLliure 15E4                     ??__TiRSITimer 0053  
                      _TiGetTimer 1372           EscriuPrimeraOrdre@ordre 0059  
                 __initialization 107E                __size_of_CantaData 0032  
                    __end_of_main 12B2                      __end_of_menu 08CE  
               __end_of_GLCDMotor 0672                  __end_of_TeTeclat 0DC0  
                   _indexNextUser 0036                            ??_main 0067  
                          ??_menu 008C                __size_of_LcPutChar 0052  
                   __activetblptr 000002                  GLCDMotor@length1 0025  
                GLCDMotor@length2 0024                            ?_LcLCD 0053  
                          ?_SMSon 0053                            ?_Minit 0053  
                          ?_Sinit 0053                            ?_Uinit 0053  
             __end_of_TiInitTimer 13E4                            _EEDATA 000FA8  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_SiFerMenu 0004                         ??_LcClear 0066  
                       ??_CantaIR 005A                            i2l1761 11D4  
                          i2l1773 1206                            i2l1765 11DC  
                          i2l1769 1202                    LcGotoXY@Fisics 0061  
                  LcGotoXY@Column 0065                     ??_WaitForBusy 005F  
              __size_of_TiGetTics 002C                    _sumaPulsacions 0043  
                          _SMSoff 163A                            _LcInit 0DC0  
                  _UgetNumUsuaris 1640                            _SMotor 08CE  
             escriureCharEEPROM@c 0059                            _TeInit 1604  
                          _Espera 151A                      _LcGotoXY$342 0063  
                          _RowAct 0047               __end_of_TiResetTics 1576  
                          Uinit@i 005A                            Uinit@j 005B  
                __end_of_high_rsi 0032                            _h_Tics 0022  
             __end_of__TiRSITimer 1210                  __end_of_menuList 0292  
                          clear_0 10C4                            clear_1 10D2  
                      _UenviaChar 1598                            isa$std 000001  
                      UenviaPas@c 0059       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 0067            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0038  
               __end_of_CantaData 1416                      TeTeclat@cols 003F  
                       ?_GLCDInit 0053                     ?_UcheckExists 0053  
                      __accesstop 0080           __end_of__initialization 10D8  
          __end_of_UgetNumUsuaris 1644                 __end_of_LcPutChar 1262  
                   ___rparam_used 000001                     __end_of_LcLCD 1478  
                     ?_TiGetTimer 0053                     __end_of_SMSon 163A  
                  __pcstackCOMRAM 0053                     __end_of_Minit 1624  
             __end_of_WaitForBusy 1338                     __end_of_Sinit 1614  
                   __end_of_Uinit 1004                      __pidataBANK0 15A8  
            __size_of_initAltaveu 0008                 __end_of_URegister 164C  
               __end_of_SiFerMenu 1650                    _escriureEEPROM 1478  
               __end_of_TiGetTics 14D2                       _TiInitTimer 13AC  
                         ??_LcLCD 0067                           ??_SMSon 0058  
                       ?_LcGotoXY 0060                         ?_LcLliure 0053  
                         ??_Minit 0059                           ??_Sinit 0059  
                         ??_Uinit 0058                    ??_UcheckExists 0058  
                      ??_GLCDInit 0059           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK1 0100                         ?_TeTeclat 0053  
                     _TiResetTics 155E                   ?_UgetNumUsuaris 0053  
                   ??_UmotorUsers 005D                           ?_SMSoff 0053  
                         ?_LcInit 0063                     _CantaPartAlta 114E  
                         ?_SMotor 0053                           ?_TeInit 0053  
                         ?_Espera 005F                 __end_of_UenviaPas 1598  
                     __TiRSITimer 11B6               _indexNextUserStruct 0035  
                ??_compareStrings 005B            __end_of_escriureEEPROM 14A6  
                     ?_UenviaChar 0058            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0065                        ??_LcGotoXY 0061  
                    ?_MNovaLletra 0053                        ??_LcLliure 0058  
             __size_of_TiGetTimer 003A                      ?_LcCursorOff 0053  
                       ?_high_rsi 0053                           _LcClear 14F6  
                         _CantaIR 1416                      ?_LcNewString 0058  
                      ??_TeTeclat 005F                       _WaitForBusy 12F8  
                  ?_CantaPartAlta 0053                           _Columns 0048  
           __end_of_SsetNovaTecla 15FC                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00DA                           __Hparam 0000  
                 __size_of_SMotor 0218                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
             __end_of_UmotorUsers 0C5C          ?_UcheckExistsNotFinished 0053  
                 ?_escriureEEPROM 0053                     ?_motorAltaveu 0053  
                    __psmallconst 0200                           __pcinit 107E  
    __end_of_UcheckExistsGetError 15EC                           _ferMenu 03C9  
                      _init_ports 153E                           __ramtop 0200  
                         __ptext0 1262                           __ptext1 0E9A  
                         __ptext2 0672                           __ptext3 1640  
                         __ptext4 1588                           __ptext5 1598  
                         __ptext6 15B4                           __ptext7 15E4  
                         __ptext8 1644                           __ptext9 1648  
                       _T0CONbits 000FD5                         _GLCDMotor 02B4  
                       CantaIR@IR 005A                           _counter 003D  
                     UenviaChar@c 0059        __end_of_escriureCharEEPROM 14F6  
                LcNewString@new_s 0058                   WaitForBusy@Busy 005F  
                     Uinit@j_1041 005C                 GLCDMostraMenu@num 0058  
                      ??_high_rsi 0054              end_of_initialization 10D8  
                         _usuaris 0100           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 005C  
                   _MsetNovaTecla 15FC               __size_of_UenviaChar 0010  
                      _novaLletra 0073                   TiGetTics@actual 005D  
                      GLCDMotor@j 002A                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 005F                        _numUsuaris 0037  
            __end_of_UcheckExists 1648                     TeTeclat@files 003E  
                   TeTeclat@state 0040                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0053  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                  _GLCDMostraMenu 15C0                   ??_CantaPartAlta 0058  
                  ?_MsetNovaTecla 0053                         _CantaData 13E4  
               __size_of_GLCDInit 0008                       _UmotorUsers 0AE6  
 __end_of_UcheckExistsNotFinished 15C0                    __end_of_SMSoff 1640  
                    ??_TiGetTimer 0058                    __end_of_LcInit 0E9A  
                  __end_of_SMotor 0AE6                         _LcPutChar 1210  
                  __end_of_TeInit 160C                 motorAltaveu@state 002E  
                  __end_of_Espera 153E                    GLCDMotor@state 002B  
      __end_of_EscriuPrimeraOrdre 107E                     __pidataCOMRAM 1576  
                     ?_init_ports 0053                         _ColumnAct 0046  
                       _URegister 1648                      ?_TiInitTimer 0053  
                       _SiFerMenu 164C               start_initialization 107E  
                       _TiGetTics 14A6            __end_of_GLCDMostraMenu 15CC  
                ??_UgetNumUsuaris 0058                  UmotorUsers@state 0032  
               __size_of_LcGotoXY 003A                __end_of_TiGetTimer 13AC  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                    ?_TiResetTics 0053              __size_of_LcCursorOff 000C  
                      ?_CantaData 0053              _UcheckExistsGetError 15E4  
            __size_of_LcNewString 0008                          ??_SMSoff 0058  
                        ??_LcInit 0064                         _NovaTecla 0074  
               __size_of_TeTeclat 0164                          ??_SMotor 005F  
                        ??_TeInit 0059                      ?__TiRSITimer 0053  
                   ??_initAltaveu 0059                          ??_Espera 0061  
                      ?_LcPutChar 0053                         _UenviaPas 1588  
                     __pdataBANK0 0080                      _menuDaltGLCD 002C  
                    ??_UenviaChar 0059                       ??_GLCDMotor 008C  
                      ?_URegister 0053                        ?_SiFerMenu 0053  
                     __pbssCOMRAM 0001                     __pcstackBANK0 008C  
                      ?_TiGetTics 0058                   ?_GLCDMostraMenu 0053  
                 ??_MsetNovaTecla 0058              __end_of_motorAltaveu 0F50  
                        ?_LcClear 0053                          ?_CantaIR 0053  
                  _CantaPartBaixa 10E6             ?_UcheckExistsGetError 0053  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0053  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 0058  
              SsetNovaTecla@tecla 0058                __end_of_UenviaChar 15A8  
                ??_escriureEEPROM 0058             __size_of_UcheckExists 0004  
                       __pintcode 0008                        ?_UenviaPas 0058  
                 CantaPartBaixa@c 0059               __end_of_initAltaveu 15F4  
                     __smallconst 0200                    __size_of_LcLCD 0030  
                  __size_of_SMSon 0006  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008                    __size_of_Sinit 0008  
                  __size_of_Uinit 00B4            __end_of_CantaPartBaixa 114E  
                        _GLCDInit 162C                escriureEEPROM@caca 0058  
                     _do_register 03CB                         _newString 03C8  
                    _UcheckExists 1644                       ??_CantaData 005A  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     UenviaChar@pos 0058  
              _escriureCharEEPROM 14D2                         _novaTecla 0077  
                     ??_LcPutChar 0066                         _timerGLCD 002D  
                        _RCONbits 000FD0                         _reproduir 03CA  
                       _timerMenu 003B               ?_escriureCharEEPROM 0058  
                     ??_URegister 0058                       ??_SiFerMenu 0058  
          __size_of_SsetNovaTecla 0008                          Espera@ms 005F  
                        _LcGotoXY 1338                    _usuariLoguejat 0072  
                        _LcLliure 15D8                       ??_TiGetTics 005A  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                   GLCDMotor@max1 0071                     GLCDMotor@max2 0070  
                   GLCDMotor@min1 0029                     GLCDMotor@min2 0028  
                    _teclaPremuda 0080                       LcGotoXY@Row 0060  
                       copy_data0 1092                         copy_data1 10B2  
            ??_escriureCharEEPROM 0059                   ?_CantaPartBaixa 0053  
          ??_UcheckExistsGetError 0058             escriureCharEEPROM@pos 0058  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0C5C                      ?_UmotorUsers 0053  
                      _EECON1bits 000FA6              __size_of_TiResetTics 0018  
                        __Hrparam 0000                       _initAltaveu 15EC  
                       menu@state 0039                          __Lrparam 0000  
            __size_of__TiRSITimer 005A                       ??_UenviaPas 0059  
                    ??_init_ports 0058             __size_of_motorAltaveu 00B6  
                 _do_check_exists 03CC                          __ptext10 164C  
                        __ptext11 1634                _EscriuPrimeraOrdre 1004  
                        __ptext20 0F50                          __ptext12 163A  
                        __ptext21 13AC                          __ptext13 15C0  
                        __ptext30 1448                          __ptext22 0C5C  
                        __ptext14 153E                          __ptext31 0DC0  
                        __ptext23 15F4                          __ptext15 15EC  
                        __ptext40 1338                          __ptext32 15CC  
                        __ptext24 15FC                          __ptext16 1478  
                        __ptext41 12F8                          __ptext33 1004  
                        __ptext25 1604                          __ptext17 0AE6  
                        __ptext42 1416                          __ptext34 02B4  
                        __ptext26 160C                          __ptext18 14D2  
                        __ptext51 11B6                          __ptext43 10E6  
                        __ptext35 1210                          __ptext27 08CE  
                        __ptext19 12B2                          __ptext44 114E  
                        __ptext36 13E4                          __ptext28 1614  
                        __ptext45 151A                          __ptext37 1624  
                        __ptext29 161C                          __ptext46 155E  
                        __ptext38 15D8                          __ptext47 14A6  
                        __ptext39 14F6                          __ptext48 162C  
                        __ptext49 1372                    CantaPartAlta@c 0059  
                     _lletraASCII 0078                          _high_rsi 0008  
                        _copsNota 002F                          _s_Timers 0001  
                     _lletraInici 0067                          _menuDalt 003A  
                        _menuList 0201               ?_EscriuPrimeraOrdre 0053  
                   __size_of_main 0050                     __size_of_menu 025C  
           __end_of_CantaPartAlta 11B6                     CantaData@Data 005A  
                        _tiTeclat 0041                __end_of_init_ports 155E  
                        _setSMSon 03CE                     _SsetNovaTecla 15F4  
            __size_of_WaitForBusy 0040                          _timerSMS 0076  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 0058                      _motorAltaveu 0E9A  
            ??_EscriuPrimeraOrdre 0058                        LcInit@rows 0064  
                ??_GLCDMostraMenu 0058           _UcheckExistsNotFinished 15B4  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0058  
                   ??_LcCursorOff 0060                     ??_LcNewString 0059  
                        intlevel2 0000                      _timerAltaveu 0030  
                      LcPutChar@c 0066                    ?_SsetNovaTecla 0053  
               MNovaLletra@lletra 0058                   compareStrings@a 0058  
                 compareStrings@b 0059                       GLCDMotor@k1 0027  
                     GLCDMotor@k2 0026                    _compareStrings 12B2  
                     _tmpPassword 0019               __end_of_MNovaLletra 161C  
           __end_of_MsetNovaTecla 1604                       _tmpUsername 004A  
             __end_of_LcCursorOff 15D8                       SMotor@state 0042  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 162C  
            __size_of_UmotorUsers 0176  
