

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 10 18:17:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Pro license) build 20220127204148 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118                           	psect	pa_nodes0,global,class=CODE,delta=1
   119  0000                     
   120                           ; Version 2.36
   121                           ; Generated 28/01/2022 GMT
   122                           ; 
   123                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4321 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  001F06                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _arrayZero
   161  001F06  30                 	db	48
   162  001F07  20                 	db	32
   163                           
   164                           ;initializer for _convertir
   165  001F08  FA                 	db	250
   166                           
   167                           ;initializer for _novaTeclaSIO
   168  001F09  FF                 	db	255
   169                           
   170                           ;initializer for _direccioSIO
   171  001F0A  FF                 	db	255
   172                           
   173                           ;initializer for _usuariActualSIO
   174  001F0B  FF                 	db	255
   175                           
   176                           ;initializer for _novaTeclaJOC
   177  001F0C  FF                 	db	255
   178                           
   179                           ;initializer for _usuariJoc
   180  001F0D  FF                 	db	255
   181                           
   182                           ;initializer for GLCDMotor@max2
   183  001F0E  0F                 	db	15
   184                           
   185                           ;initializer for GLCDMotor@max1
   186  001F0F  0F                 	db	15
   187                           
   188                           ;initializer for _usuariLoguejat
   189  001F10  FF                 	db	255
   190                           
   191                           ;initializer for _novaDireccio
   192  001F11  FF                 	db	255
   193                           
   194                           ;initializer for _novaLletra
   195  001F12  FF                 	db	255
   196                           
   197                           ;initializer for _NovaTecla
   198  001F13  FF                 	db	255
   199                           
   200                           ;initializer for _ultimaTecla
   201  001F14  FF                 	db	255
   202                           
   203                           ;initializer for _novaTecla
   204  001F15  FF                 	db	255
   205                           
   206                           ;initializer for _lletraASCII
   207  001F16  FF                 	db	255
   208                           
   209                           ;initializer for _hora
   210  001F17  33                 	db	51
   211  001F18  30                 	db	48
   212  001F19  3A                 	db	58
   213  001F1A  30                 	db	48
   214  001F1B  30                 	db	48
   215  001F1C  00                 	db	0
   216                           
   217                           ;initializer for _stringScore
   218  001F1D  30                 	db	48
   219  001F1E  30                 	db	48
   220  001F1F  00                 	db	0
   221                           
   222                           	psect	idataBANK0
   223  001D6A                     __pidataBANK0:
   224                           	callstack 0
   225                           
   226                           ;initializer for _lletraInici
   227  001D6A  41                 	db	65
   228  001D6B  44                 	db	68
   229  001D6C  47                 	db	71
   230  001D6D  4A                 	db	74
   231  001D6E  4D                 	db	77
   232  001D6F  50                 	db	80
   233  001D70  54                 	db	84
   234  001D71  57                 	db	87
   235                           
   236                           ;initializer for _teclaPremuda
   237  001D72  01                 	db	1
   238  001D73  02                 	db	2
   239  001D74  03                 	db	3
   240  001D75  04                 	db	4
   241  001D76  05                 	db	5
   242  001D77  06                 	db	6
   243  001D78  07                 	db	7
   244  001D79  08                 	db	8
   245  001D7A  09                 	db	9
   246  001D7B  0A                 	db	10
   247  001D7C  00                 	db	0
   248  001D7D  0B                 	db	11
   249                           
   250                           ;initializer for _registerText
   251  001D7E  32                 	db	50
   252  001D7F  2E                 	db	46
   253  001D80  52                 	db	82
   254  001D81  45                 	db	69
   255  001D82  47                 	db	71
   256  001D83  49                 	db	73
   257  001D84  53                 	db	83
   258  001D85  54                 	db	84
   259  001D86  45                 	db	69
   260  001D87  52                 	db	82
   261  001D88  00                 	db	0
   262                           
   263                           ;initializer for _loginText
   264  001D89  31                 	db	49
   265  001D8A  2E                 	db	46
   266  001D8B  4C                 	db	76
   267  001D8C  4F                 	db	79
   268  001D8D  47                 	db	71
   269  001D8E  49                 	db	73
   270  001D8F  4E                 	db	78
   271  001D90  00                 	db	0
   272                           
   273                           	psect	smallconst
   274  000200                     __psmallconst:
   275                           	callstack 0
   276  000200  00                 	db	0
   277  000201                     _menuList:
   278                           	callstack 0
   279  000201  31                 	db	49
   280  000202  2E                 	db	46
   281  000203  50                 	db	80
   282  000204  6C                 	db	108
   283  000205  61                 	db	97
   284  000206  79                 	db	121
   285  000207  20                 	db	32
   286  000208  61                 	db	97
   287  000209  20                 	db	32
   288  00020A  47                 	db	71
   289  00020B  61                 	db	97
   290  00020C  6D                 	db	109
   291  00020D  65                 	db	101
   292  00020E  00                 	db	0
   293  00020F  00                 	db	0
   294  000210  00                 	db	0
   295  000211  00                 	db	0
   296  000212  00                 	db	0
   297  000213  00                 	db	0
   298  000214  00                 	db	0
   299  000215  00                 	db	0
   300  000216  00                 	db	0
   301  000217  00                 	db	0
   302  000218  00                 	db	0
   303  000219  00                 	db	0
   304  00021A  00                 	db	0
   305  00021B  00                 	db	0
   306  00021C  00                 	db	0
   307  00021D  00                 	db	0
   308  00021E  32                 	db	50
   309  00021F  2E                 	db	46
   310  000220  4D                 	db	77
   311  000221  6F                 	db	111
   312  000222  64                 	db	100
   313  000223  69                 	db	105
   314  000224  66                 	db	102
   315  000225  79                 	db	121
   316  000226  20                 	db	32
   317  000227  54                 	db	84
   318  000228  69                 	db	105
   319  000229  6D                 	db	109
   320  00022A  65                 	db	101
   321  00022B  00                 	db	0
   322  00022C  00                 	db	0
   323  00022D  00                 	db	0
   324  00022E  00                 	db	0
   325  00022F  00                 	db	0
   326  000230  00                 	db	0
   327  000231  00                 	db	0
   328  000232  00                 	db	0
   329  000233  00                 	db	0
   330  000234  00                 	db	0
   331  000235  00                 	db	0
   332  000236  00                 	db	0
   333  000237  00                 	db	0
   334  000238  00                 	db	0
   335  000239  00                 	db	0
   336  00023A  00                 	db	0
   337  00023B  33                 	db	51
   338  00023C  2E                 	db	46
   339  00023D  53                 	db	83
   340  00023E  68                 	db	104
   341  00023F  6F                 	db	111
   342  000240  77                 	db	119
   343  000241  20                 	db	32
   344  000242  47                 	db	71
   345  000243  65                 	db	101
   346  000244  6E                 	db	110
   347  000245  65                 	db	101
   348  000246  72                 	db	114
   349  000247  61                 	db	97
   350  000248  6C                 	db	108
   351  000249  20                 	db	32
   352  00024A  54                 	db	84
   353  00024B  6F                 	db	111
   354  00024C  70                 	db	112
   355  00024D  20                 	db	32
   356  00024E  35                 	db	53
   357  00024F  20                 	db	32
   358  000250  53                 	db	83
   359  000251  63                 	db	99
   360  000252  6F                 	db	111
   361  000253  72                 	db	114
   362  000254  65                 	db	101
   363  000255  73                 	db	115
   364  000256  20                 	db	32
   365  000257  00                 	db	0
   366  000258  34                 	db	52
   367  000259  2E                 	db	46
   368  00025A  4C                 	db	76
   369  00025B  6F                 	db	111
   370  00025C  67                 	db	103
   371  00025D  6F                 	db	111
   372  00025E  75                 	db	117
   373  00025F  74                 	db	116
   374  000260  00                 	db	0
   375  000261  00                 	db	0
   376  000262  00                 	db	0
   377  000263  00                 	db	0
   378  000264  00                 	db	0
   379  000265  00                 	db	0
   380  000266  00                 	db	0
   381  000267  00                 	db	0
   382  000268  00                 	db	0
   383  000269  00                 	db	0
   384  00026A  00                 	db	0
   385  00026B  00                 	db	0
   386  00026C  00                 	db	0
   387  00026D  00                 	db	0
   388  00026E  00                 	db	0
   389  00026F  00                 	db	0
   390  000270  00                 	db	0
   391  000271  00                 	db	0
   392  000272  00                 	db	0
   393  000273  00                 	db	0
   394  000274  00                 	db	0
   395  000275  35                 	db	53
   396  000276  2E                 	db	46
   397  000277  53                 	db	83
   398  000278  68                 	db	104
   399  000279  6F                 	db	111
   400  00027A  77                 	db	119
   401  00027B  20                 	db	32
   402  00027C  41                 	db	65
   403  00027D  6C                 	db	108
   404  00027E  6C                 	db	108
   405  00027F  20                 	db	32
   406  000280  55                 	db	85
   407  000281  73                 	db	115
   408  000282  65                 	db	101
   409  000283  72                 	db	114
   410  000284  73                 	db	115
   411  000285  00                 	db	0
   412  000286  00                 	db	0
   413  000287  00                 	db	0
   414  000288  00                 	db	0
   415  000289  00                 	db	0
   416  00028A  00                 	db	0
   417  00028B  00                 	db	0
   418  00028C  00                 	db	0
   419  00028D  00                 	db	0
   420  00028E  00                 	db	0
   421  00028F  00                 	db	0
   422  000290  00                 	db	0
   423  000291  00                 	db	0
   424  000292                     __end_of_menuList:
   425                           	callstack 0
   426  0000                     _RCREG	set	4014
   427  0000                     _TXREG	set	4013
   428  0000                     _EECON2	set	4007
   429  0000                     _EEDATA	set	4008
   430  0000                     _EEADR	set	4009
   431  0000                     _TMR0L	set	4054
   432  0000                     _TMR0H	set	4055
   433  0000                     _SPBRG	set	4015
   434  0000                     _SPBRGH	set	4016
   435  0000                     _BAUDCON	set	4024
   436  0000                     _RCSTA	set	4011
   437  0000                     _TXSTA	set	4012
   438  0000                     _TRISB	set	3987
   439  0000                     _TXSTAbits	set	4012
   440  0000                     _ADCON0bits	set	4034
   441  0000                     _T0CONbits	set	4053
   442  0000                     _LATD	set	3980
   443  0000                     _TRISD	set	3989
   444  0000                     _TRISC	set	3988
   445  0000                     _PORTCbits	set	3970
   446  0000                     _LATCbits	set	3979
   447  0000                     _TRISCbits	set	3988
   448  0000                     _PIR1bits	set	3998
   449  0000                     _EECON1bits	set	4006
   450  0000                     _TRISDbits	set	3989
   451  0000                     _TRISA	set	3986
   452  0000                     _LATDbits	set	3980
   453  0000                     _PORTDbits	set	3971
   454  0000                     _LATBbits	set	3978
   455  0000                     _ADCON2	set	4032
   456  0000                     _ADCON1	set	4033
   457  0000                     _ADCON0	set	4034
   458  0000                     _RCONbits	set	4048
   459  0000                     _T0CON	set	4053
   460  0000                     _INTCONbits	set	4082
   461  0000                     _ADRESH	set	4036
   462  000292                     STR_5:
   463  000292  54                 	db	84	;'T'
   464  000293  49                 	db	73	;'I'
   465  000294  4D                 	db	77	;'M'
   466  000295  45                 	db	69	;'E'
   467  000296  20                 	db	32
   468  000297  52                 	db	82	;'R'
   469  000298  45                 	db	69	;'E'
   470  000299  4D                 	db	77	;'M'
   471  00029A  41                 	db	65	;'A'
   472  00029B  49                 	db	73	;'I'
   473  00029C  4E                 	db	78	;'N'
   474  00029D  49                 	db	73	;'I'
   475  00029E  4E                 	db	78	;'N'
   476  00029F  47                 	db	71	;'G'
   477  0002A0  3A                 	db	58	;':'
   478  0002A1  00                 	db	0
   479  0002A2                     STR_4:
   480  0002A2  4D                 	db	77	;'M'
   481  0002A3  6F                 	db	111	;'o'
   482  0002A4  64                 	db	100	;'d'
   483  0002A5  69                 	db	105	;'i'
   484  0002A6  66                 	db	102	;'f'
   485  0002A7  79                 	db	121	;'y'
   486  0002A8  20                 	db	32
   487  0002A9  54                 	db	84	;'T'
   488  0002AA  69                 	db	105	;'i'
   489  0002AB  6D                 	db	109	;'m'
   490  0002AC  65                 	db	101	;'e'
   491  0002AD  3A                 	db	58	;':'
   492  0002AE  00                 	db	0
   493  0002AF                     STR_7:
   494  0002AF  54                 	db	84	;'T'
   495  0002B0  49                 	db	73	;'I'
   496  0002B1  4D                 	db	77	;'M'
   497  0002B2  45                 	db	69	;'E'
   498  0002B3  20                 	db	32
   499  0002B4  4C                 	db	76	;'L'
   500  0002B5  45                 	db	69	;'E'
   501  0002B6  46                 	db	70	;'F'
   502  0002B7  54                 	db	84	;'T'
   503  0002B8  3A                 	db	58	;':'
   504  0002B9  20                 	db	32
   505  0002BA  00                 	db	0
   506  0002BB                     STR_8:
   507  0002BB  53                 	db	83	;'S'
   508  0002BC  43                 	db	67	;'C'
   509  0002BD  4F                 	db	79	;'O'
   510  0002BE  52                 	db	82	;'R'
   511  0002BF  45                 	db	69	;'E'
   512  0002C0  3A                 	db	58	;':'
   513  0002C1  20                 	db	32
   514  0002C2  00                 	db	0
   515  0002C3                     STR_6:
   516  0002C3  45                 	db	69	;'E'
   517  0002C4  52                 	db	82	;'R'
   518  0002C5  52                 	db	82	;'R'
   519  0002C6  4F                 	db	79	;'O'
   520  0002C7  52                 	db	82	;'R'
   521  0002C8  53                 	db	83	;'S'
   522  0002C9  3A                 	db	58	;':'
   523  0002CA  00                 	db	0
   524  0002CB                     STR_3:
   525  0002CB  42                 	db	66	;'B'
   526  0002CC  59                 	db	89	;'Y'
   527  0002CD  45                 	db	69	;'E'
   528  0002CE  20                 	db	32
   529  0002CF  42                 	db	66	;'B'
   530  0002D0  59                 	db	89	;'Y'
   531  0002D1  45                 	db	69	;'E'
   532  0002D2  00                 	db	0
   533  0002D3                     STR_2:
   534  0002D3  50                 	db	80	;'P'
   535  0002D4  53                 	db	83	;'S'
   536  0002D5  57                 	db	87	;'W'
   537  0002D6  44                 	db	68	;'D'
   538  0002D7  3A                 	db	58	;':'
   539  0002D8  20                 	db	32
   540  0002D9  00                 	db	0
   541  0002DA                     STR_1:
   542  0002DA  55                 	db	85	;'U'
   543  0002DB  53                 	db	83	;'S'
   544  0002DC  45                 	db	69	;'E'
   545  0002DD  52                 	db	82	;'R'
   546  0002DE  3A                 	db	58	;':'
   547  0002DF  20                 	db	32
   548  0002E0  00                 	db	0
   549  0002E1  00                 	db	0	; dummy byte at the end
   550  0000                     
   551                           ; #config settings
   552                           
   553                           	psect	cinit
   554  00196E                     __pcinit:
   555                           	callstack 0
   556  00196E                     start_initialization:
   557                           	callstack 0
   558  00196E                     __initialization:
   559                           	callstack 0
   560                           
   561                           ; Initialize objects allocated to BANK0 (39 bytes)
   562                           ; load TBLPTR registers with __pidataBANK0
   563  00196E  0E6A               	movlw	low __pidataBANK0
   564  001970  6EF6               	movwf	tblptrl,c
   565  001972  0E1D               	movlw	high __pidataBANK0
   566  001974  6EF7               	movwf	tblptrh,c
   567  001976  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   568  001978  6EF8               	movwf	tblptru,c
   569  00197A  EE00  F0BC         	lfsr	0,__pdataBANK0
   570  00197E  EE10 F027          	lfsr	1,39
   571  001982                     copy_data0:
   572  001982  0009               	tblrd		*+
   573  001984  CFF5 FFEE          	movff	tablat,postinc0
   574  001988  50E5               	movf	postdec1,w,c
   575  00198A  50E1               	movf	fsr1l,w,c
   576  00198C  E1FA               	bnz	copy_data0
   577                           
   578                           ; Initialize objects allocated to COMRAM (26 bytes)
   579                           ; load TBLPTR registers with __pidataCOMRAM
   580  00198E  0E06               	movlw	low __pidataCOMRAM
   581  001990  6EF6               	movwf	tblptrl,c
   582  001992  0E1F               	movlw	high __pidataCOMRAM
   583  001994  6EF7               	movwf	tblptrh,c
   584  001996  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   585  001998  6EF8               	movwf	tblptru,c
   586  00199A  EE00  F045         	lfsr	0,__pdataCOMRAM
   587  00199E  EE10 F01A          	lfsr	1,26
   588  0019A2                     copy_data1:
   589  0019A2  0009               	tblrd		*+
   590  0019A4  CFF5 FFEE          	movff	tablat,postinc0
   591  0019A8  50E5               	movf	postdec1,w,c
   592  0019AA  50E1               	movf	fsr1l,w,c
   593  0019AC  E1FA               	bnz	copy_data1
   594                           
   595                           ; Clear objects allocated to BANK1 (144 bytes)
   596  0019AE  EE01  F000         	lfsr	0,__pbssBANK1
   597  0019B2  0E90               	movlw	144
   598  0019B4                     clear_0:
   599  0019B4  6AEE               	clrf	postinc0,c
   600  0019B6  06E8               	decf	wreg,f,c
   601  0019B8  E1FD               	bnz	clear_0
   602                           
   603                           ; Clear objects allocated to BANK0 (60 bytes)
   604  0019BA  EE00  F080         	lfsr	0,__pbssBANK0
   605  0019BE  0E3C               	movlw	60
   606  0019C0                     clear_1:
   607  0019C0  6AEE               	clrf	postinc0,c
   608  0019C2  06E8               	decf	wreg,f,c
   609  0019C4  E1FD               	bnz	clear_1
   610                           
   611                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   612  0019C6  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   613  0019C8  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   614  0019CA  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   615                           
   616                           ; Clear objects allocated to COMRAM (68 bytes)
   617  0019CC  EE00  F001         	lfsr	0,__pbssCOMRAM
   618  0019D0  0E44               	movlw	68
   619  0019D2                     clear_2:
   620  0019D2  6AEE               	clrf	postinc0,c
   621  0019D4  06E8               	decf	wreg,f,c
   622  0019D6  E1FD               	bnz	clear_2
   623  0019D8                     end_of_initialization:
   624                           	callstack 0
   625  0019D8                     __end_of__initialization:
   626                           	callstack 0
   627  0019D8  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   628  0019DA  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   629  0019DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   630  0019DE  6EF8               	movwf	tblptru,c
   631  0019E0  0100               	movlb	0
   632  0019E2  EFF3  F00C         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bitbssCOMRAM
   635  0003A8                     __pbitbssCOMRAM:
   636                           	callstack 0
   637  0003A8                     _hi_ha_hora_sio2:
   638                           	callstack 0
   639  0003A8                     	ds	1
   640  0003A9                     _Krebut:
   641                           	callstack 0
   642  0003A9                     	ds	1
   643  0003AA                     _jugantSIO:
   644                           	callstack 0
   645  0003AA                     	ds	1
   646  0003AB                     _jugantJoc:
   647                           	callstack 0
   648  0003AB                     	ds	1
   649  0003AC                     _tempsAcabat:
   650                           	callstack 0
   651  0003AC                     	ds	1
   652  0003AD                     _nouSegon:
   653                           	callstack 0
   654  0003AD                     	ds	1
   655  0003AE                     _jugant:
   656                           	callstack 0
   657  0003AE                     	ds	1
   658  0003AF                     _cap2:
   659                           	callstack 0
   660  0003AF                     	ds	1
   661  0003B0                     _cap1:
   662                           	callstack 0
   663  0003B0                     	ds	1
   664  0003B1                     _newString:
   665                           	callstack 0
   666  0003B1                     	ds	1
   667  0003B2                     _ferMenu:
   668                           	callstack 0
   669  0003B2                     	ds	1
   670  0003B3                     _reproduir:
   671                           	callstack 0
   672  0003B3                     	ds	1
   673  0003B4                     _do_updateScore:
   674                           	callstack 0
   675  0003B4                     	ds	1
   676  0003B5                     _do_showUsers:
   677                           	callstack 0
   678  0003B5                     	ds	1
   679  0003B6                     _do_register:
   680                           	callstack 0
   681  0003B6                     	ds	1
   682  0003B7                     _do_check_exists:
   683                           	callstack 0
   684  0003B7                     	ds	1
   685  0003B8                     _loginNOTRegister:
   686                           	callstack 0
   687  0003B8                     	ds	1
   688  0003B9                     _setSMSon:
   689                           	callstack 0
   690  0003B9                     	ds	1
   691  0003BA                     _nou_s:
   692                           	callstack 0
   693  0003BA                     	ds	1
   694                           
   695                           	psect	bssCOMRAM
   696  000001                     __pbssCOMRAM:
   697                           	callstack 0
   698  000001                     _horaTX:
   699                           	callstack 0
   700  000001                     	ds	6
   701  000007                     _userPtr:
   702                           	callstack 0
   703  000007                     	ds	2
   704  000009                     _h_Tics:
   705                           	callstack 0
   706  000009                     	ds	2
   707  00000B                     _s_ptr:
   708                           	callstack 0
   709  00000B                     	ds	2
   710  00000D                     motorSIO@state:
   711                           	callstack 0
   712  00000D                     	ds	1
   713  00000E                     _mask:
   714                           	callstack 0
   715  00000E                     	ds	1
   716  00000F                     _charActu:
   717                           	callstack 0
   718  00000F                     	ds	1
   719  000010                     _score:
   720                           	callstack 0
   721  000010                     	ds	1
   722  000011                     _timerSIO:
   723                           	callstack 0
   724  000011                     	ds	1
   725  000012                     motorJoc@state:
   726                           	callstack 0
   727  000012                     	ds	1
   728  000013                     _direccioJoc:
   729                           	callstack 0
   730  000013                     	ds	1
   731  000014                     motorHora@state:
   732                           	callstack 0
   733  000014                     	ds	1
   734  000015                     _segons:
   735                           	callstack 0
   736  000015                     	ds	1
   737  000016                     _timerHora:
   738                           	callstack 0
   739  000016                     	ds	1
   740  000017                     JoystickMotor@state:
   741                           	callstack 0
   742  000017                     	ds	1
   743  000018                     _ultimaTeclaAD:
   744                           	callstack 0
   745  000018                     	ds	1
   746  000019                     GLCDMotor@length2:
   747                           	callstack 0
   748  000019                     	ds	1
   749  00001A                     GLCDMotor@length1:
   750                           	callstack 0
   751  00001A                     	ds	1
   752  00001B                     GLCDMotor@k2:
   753                           	callstack 0
   754  00001B                     	ds	1
   755  00001C                     GLCDMotor@k1:
   756                           	callstack 0
   757  00001C                     	ds	1
   758  00001D                     GLCDMotor@min2:
   759                           	callstack 0
   760  00001D                     	ds	1
   761  00001E                     GLCDMotor@min1:
   762                           	callstack 0
   763  00001E                     	ds	1
   764  00001F                     GLCDMotor@j:
   765                           	callstack 0
   766  00001F                     	ds	1
   767  000020                     GLCDMotor@state:
   768                           	callstack 0
   769  000020                     	ds	1
   770  000021                     _menuDaltGLCD:
   771                           	callstack 0
   772  000021                     	ds	1
   773  000022                     _timerGLCD:
   774                           	callstack 0
   775  000022                     	ds	1
   776  000023                     motorAltaveu@state:
   777                           	callstack 0
   778  000023                     	ds	1
   779  000024                     _copsNota:
   780                           	callstack 0
   781  000024                     	ds	1
   782  000025                     _timerAltaveu:
   783                           	callstack 0
   784  000025                     	ds	1
   785  000026                     _nota:
   786                           	callstack 0
   787  000026                     	ds	1
   788  000027                     UmotorUsers@state:
   789                           	callstack 0
   790  000027                     	ds	1
   791  000028                     _scoreUsr:
   792                           	callstack 0
   793  000028                     	ds	1
   794  000029                     _j:
   795                           	callstack 0
   796  000029                     	ds	1
   797  00002A                     _i:
   798                           	callstack 0
   799  00002A                     	ds	1
   800  00002B                     _indexNextUserStruct:
   801                           	callstack 0
   802  00002B                     	ds	1
   803  00002C                     _indexNextUser:
   804                           	callstack 0
   805  00002C                     	ds	1
   806  00002D                     _numUsuaris:
   807                           	callstack 0
   808  00002D                     	ds	1
   809  00002E                     menu@state:
   810                           	callstack 0
   811  00002E                     	ds	1
   812  00002F                     _pos:
   813                           	callstack 0
   814  00002F                     	ds	1
   815  000030                     _indexUsuari:
   816                           	callstack 0
   817  000030                     	ds	1
   818  000031                     _menuDalt:
   819                           	callstack 0
   820  000031                     	ds	1
   821  000032                     _timerMenu:
   822                           	callstack 0
   823  000032                     	ds	1
   824  000033                     _tmp:
   825                           	callstack 0
   826  000033                     	ds	1
   827  000034                     _counter:
   828                           	callstack 0
   829  000034                     	ds	1
   830  000035                     TeTeclat@files:
   831                           	callstack 0
   832  000035                     	ds	1
   833  000036                     TeTeclat@cols:
   834                           	callstack 0
   835  000036                     	ds	1
   836  000037                     TeTeclat@state:
   837                           	callstack 0
   838  000037                     	ds	1
   839  000038                     _tiTeclat:
   840                           	callstack 0
   841  000038                     	ds	1
   842  000039                     SMotor@state:
   843                           	callstack 0
   844  000039                     	ds	1
   845  00003A                     _zeroTecla:
   846                           	callstack 0
   847  00003A                     	ds	1
   848  00003B                     _timerSMS:
   849                           	callstack 0
   850  00003B                     	ds	1
   851  00003C                     _sumaPulsacions:
   852                           	callstack 0
   853  00003C                     	ds	1
   854  00003D                     _Timer:
   855                           	callstack 0
   856  00003D                     	ds	1
   857  00003E                     _ColumnAct:
   858                           	callstack 0
   859  00003E                     	ds	1
   860  00003F                     _RowAct:
   861                           	callstack 0
   862  00003F                     	ds	1
   863  000040                     _Rows:
   864                           	callstack 0
   865  000040                     	ds	1
   866  000041                     _horaTmp:
   867                           	callstack 0
   868  000041                     	ds	4
   869                           
   870                           	psect	dataCOMRAM
   871  000045                     __pdataCOMRAM:
   872                           	callstack 0
   873  000045                     _arrayZero:
   874                           	callstack 0
   875  000045                     	ds	2
   876  000047                     _convertir:
   877                           	callstack 0
   878  000047                     	ds	1
   879  000048                     _novaTeclaSIO:
   880                           	callstack 0
   881  000048                     	ds	1
   882  000049                     _direccioSIO:
   883                           	callstack 0
   884  000049                     	ds	1
   885  00004A                     _usuariActualSIO:
   886                           	callstack 0
   887  00004A                     	ds	1
   888  00004B                     _novaTeclaJOC:
   889                           	callstack 0
   890  00004B                     	ds	1
   891  00004C                     _usuariJoc:
   892                           	callstack 0
   893  00004C                     	ds	1
   894  00004D                     GLCDMotor@max2:
   895                           	callstack 0
   896  00004D                     	ds	1
   897  00004E                     GLCDMotor@max1:
   898                           	callstack 0
   899  00004E                     	ds	1
   900  00004F                     _usuariLoguejat:
   901                           	callstack 0
   902  00004F                     	ds	1
   903  000050                     _novaDireccio:
   904                           	callstack 0
   905  000050                     	ds	1
   906  000051                     _novaLletra:
   907                           	callstack 0
   908  000051                     	ds	1
   909  000052                     _NovaTecla:
   910                           	callstack 0
   911  000052                     	ds	1
   912  000053                     _ultimaTecla:
   913                           	callstack 0
   914  000053                     	ds	1
   915  000054                     _novaTecla:
   916                           	callstack 0
   917  000054                     	ds	1
   918  000055                     _lletraASCII:
   919                           	callstack 0
   920  000055                     	ds	1
   921  000056                     _hora:
   922                           	callstack 0
   923  000056                     	ds	6
   924  00005C                     _stringScore:
   925                           	callstack 0
   926  00005C                     	ds	3
   927                           
   928                           	psect	bssBANK0
   929  000080                     __pbssBANK0:
   930                           	callstack 0
   931  000080                     _s_Timers:
   932                           	callstack 0
   933  000080                     	ds	24
   934  000098                     _puntuacions:
   935                           	callstack 0
   936  000098                     	ds	10
   937  0000A2                     _arrayShowUsers:
   938                           	callstack 0
   939  0000A2                     	ds	8
   940  0000AA                     _tmpPassword:
   941                           	callstack 0
   942  0000AA                     	ds	9
   943  0000B3                     _tmpUsername:
   944                           	callstack 0
   945  0000B3                     	ds	9
   946                           
   947                           	psect	dataBANK0
   948  0000BC                     __pdataBANK0:
   949                           	callstack 0
   950  0000BC                     _lletraInici:
   951                           	callstack 0
   952  0000BC                     	ds	8
   953  0000C4                     _teclaPremuda:
   954                           	callstack 0
   955  0000C4                     	ds	12
   956  0000D0                     _registerText:
   957                           	callstack 0
   958  0000D0                     	ds	11
   959  0000DB                     _loginText:
   960                           	callstack 0
   961  0000DB                     	ds	8
   962                           
   963                           	psect	bssBANK1
   964  000100                     __pbssBANK1:
   965                           	callstack 0
   966  000100                     _usuaris:
   967                           	callstack 0
   968  000100                     	ds	144
   969                           
   970                           	psect	cstackBANK0
   971  0000E3                     __pcstackBANK0:
   972                           	callstack 0
   973  0000E3                     ??_menu:
   974                           
   975                           ; 1 bytes @ 0x0
   976  0000E3                     	ds	5
   977                           
   978                           	psect	cstackCOMRAM
   979  00005F                     __pcstackCOMRAM:
   980                           	callstack 0
   981  00005F                     
   982                           ; 1 bytes @ 0x0
   983  00005F                     	ds	1
   984  000060                     ??_high_rsi:
   985                           
   986                           ; 1 bytes @ 0x1
   987  000060                     	ds	4
   988  000064                     ??_EscriuPrimeraOrdre:
   989  000064                     ??_CantaPartAlta:
   990  000064                     ??_CantaPartBaixa:
   991  000064                     ?_TiGetTics:
   992                           	callstack 0
   993  000064                     ?_UgetUserName:
   994                           	callstack 0
   995  000064                     ?_getArrayShowUsers:
   996                           	callstack 0
   997  000064                     SsetNovaTecla@tecla:
   998                           	callstack 0
   999  000064                     TiResetTics@Handle:
  1000                           	callstack 0
  1001  000064                     MsetNovaTecla@tecla:
  1002                           	callstack 0
  1003  000064                     MNovaLletra@lletra:
  1004                           	callstack 0
  1005  000064                     MNouJoystick@posicio:
  1006                           	callstack 0
  1007  000064                     UenviaChar@pos:
  1008                           	callstack 0
  1009  000064                     UenviaPas@pos:
  1010                           	callstack 0
  1011  000064                     escriureCharEEPROM@pos:
  1012                           	callstack 0
  1013  000064                     llegirCharEEPROM@pos:
  1014                           	callstack 0
  1015  000064                     compareStrings@a:
  1016                           	callstack 0
  1017  000064                     UgetScore@quin:
  1018                           	callstack 0
  1019  000064                     UgetTop5@quin:
  1020                           	callstack 0
  1021  000064                     UnewScore@scoretmp:
  1022                           	callstack 0
  1023  000064                     GLCDMostraMenu@num:
  1024                           	callstack 0
  1025  000064                     HActualitzaHora@nova:
  1026                           	callstack 0
  1027  000064                     JJuguem@usuari:
  1028                           	callstack 0
  1029  000064                     JnovaTecla@tecla:
  1030                           	callstack 0
  1031  000064                     JnovaDireccio@dir:
  1032                           	callstack 0
  1033  000064                     conversorJoystick@direc:
  1034                           	callstack 0
  1035  000064                     SIONovaDireccio@num:
  1036                           	callstack 0
  1037  000064                     SIOStartGame@usuari:
  1038                           	callstack 0
  1039  000064                     SIONovaTecla@tecla:
  1040                           	callstack 0
  1041  000064                     CToAConverteix@numero:
  1042                           	callstack 0
  1043  000064                     ___lbdiv@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  000064                     	ds	1
  1048  000065                     ??_JoystickMotor:
  1049  000065                     CantaPartAlta@c:
  1050                           	callstack 0
  1051  000065                     CantaPartBaixa@c:
  1052                           	callstack 0
  1053  000065                     EscriuPrimeraOrdre@ordre:
  1054                           	callstack 0
  1055  000065                     UenviaChar@c:
  1056                           	callstack 0
  1057  000065                     UenviaPas@c:
  1058                           	callstack 0
  1059  000065                     escriureCharEEPROM@c:
  1060                           	callstack 0
  1061  000065                     ___lbdiv@dividend:
  1062                           	callstack 0
  1063  000065                     compareStrings@b:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x6
  1067  000065                     	ds	1
  1068  000066                     ??_TiGetTics:
  1069  000066                     CantaIR@IR:
  1070                           	callstack 0
  1071  000066                     CantaData@Data:
  1072                           	callstack 0
  1073  000066                     UgetUserName@quin:
  1074                           	callstack 0
  1075  000066                     getArrayShowUsers@quin:
  1076                           	callstack 0
  1077  000066                     ___lbdiv@counter:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081  000066                     	ds	1
  1082  000067                     ??_compareStrings:
  1083  000067                     ___lbdiv@quotient:
  1084                           	callstack 0
  1085  000067                     LcNewString@new_s:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x8
  1089  000067                     	ds	1
  1090  000068                     ??_Uinit:
  1091  000068                     TiGetTics@Handle:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095  000068                     	ds	1
  1096  000069                     ??_UmotorUsers:
  1097  000069                     TiGetTics@actual:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0xA
  1101  000069                     	ds	1
  1102  00006A                     Uinit@k:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  00006A                     	ds	1
  1107  00006B                     ??_motorHora:
  1108  00006B                     ??_motorAltaveu:
  1109  00006B                     ??_TeTeclat:
  1110  00006B                     ??_SMotor:
  1111  00006B                     WaitForBusy@Busy:
  1112                           	callstack 0
  1113  00006B                     Uinit@k_1194:
  1114                           	callstack 0
  1115  00006B                     Espera@ms:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xC
  1119  00006B                     	ds	1
  1120  00006C                     LcGotoXY@Row:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xD
  1124  00006C                     	ds	1
  1125  00006D                     ??_Espera:
  1126  00006D                     LcGotoXY@Fisics:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xE
  1130  00006D                     	ds	1
  1131  00006E                     Espera@Timer:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xF
  1135  00006E                     	ds	1
  1136  00006F                     LcInit@rows:
  1137                           	callstack 0
  1138  00006F                     _LcGotoXY$343:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x10
  1142  00006F                     	ds	1
  1143  000070                     LcInit@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x11
  1147  000070                     	ds	1
  1148  000071                     LcGotoXY@Column:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x12
  1152  000071                     	ds	1
  1153  000072                     ??_motorJoc:
  1154  000072                     LcPutChar@c:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x13
  1158  000072                     	ds	1
  1159  000073                     ??_GLCDMotor:
  1160  000073                     ??_motorSIO:
  1161  000073                     
  1162                           ; 1 bytes @ 0x14
  1163  000073                     	ds	2
  1164  000075                     
  1165                           ; 1 bytes @ 0x16
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 75 in file "main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1
  1185 ;;      Params:         0       0       0
  1186 ;;      Locals:         0       0       0
  1187 ;;      Temps:          0       0       0
  1188 ;;      Totals:         0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels required when called: 7
  1191 ;; This function calls:
  1192 ;;		_CtoA
  1193 ;;		_GLCDInit
  1194 ;;		_GLCDMotor
  1195 ;;		_JoystickInit
  1196 ;;		_JoystickMotor
  1197 ;;		_LcInit
  1198 ;;		_LcLCD
  1199 ;;		_Minit
  1200 ;;		_SMotor
  1201 ;;		_Sinit
  1202 ;;		_TeInit
  1203 ;;		_TeTeclat
  1204 ;;		_TiInitTimer
  1205 ;;		_Uinit
  1206 ;;		_UmotorUsers
  1207 ;;		_initAltaveu
  1208 ;;		_initHora
  1209 ;;		_initSIO
  1210 ;;		_init_eusart
  1211 ;;		_init_ports
  1212 ;;		_menu
  1213 ;;		_motorAltaveu
  1214 ;;		_motorHora
  1215 ;;		_motorJoc
  1216 ;;		_motorSIO
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text0
  1223  0019E6                     __ptext0:
  1224                           	callstack 0
  1225  0019E6                     _main:
  1226                           	callstack 24
  1227                           
  1228                           ;main.c: 76:     init_ports();
  1229                           
  1230                           ;incstack = 0
  1231  0019E6  EC90  F00F         	call	_init_ports	;wreg free
  1232                           
  1233                           ;main.c: 77:     init_eusart();
  1234  0019EA  EC9D  F00F         	call	_init_eusart	;wreg free
  1235                           
  1236                           ;main.c: 78:     TiInitTimer();
  1237  0019EE  ECA1  F00E         	call	_TiInitTimer	;wreg free
  1238                           
  1239                           ;main.c: 79:     TeInit();
  1240  0019F2  EC6A  F000         	call	_TeInit	;wreg free
  1241                           
  1242                           ;main.c: 80:     Sinit();
  1243  0019F6  EC6E  F000         	call	_Sinit	;wreg free
  1244                           
  1245                           ;main.c: 82:     initAltaveu();
  1246  0019FA  EC5E  F000         	call	_initAltaveu	;wreg free
  1247                           
  1248                           ;main.c: 83:     GLCDInit();
  1249  0019FE  EC7E  F000         	call	_GLCDInit	;wreg free
  1250                           
  1251                           ;main.c: 84:     JoystickInit();
  1252  001A02  ECBC  F00F         	call	_JoystickInit	;wreg free
  1253                           
  1254                           ;main.c: 85:     initHora();
  1255  001A06  EC5A  F000         	call	_initHora	;wreg free
  1256                           
  1257                           ;main.c: 86:     initSIO();
  1258  001A0A  EC56  F000         	call	_initSIO	;wreg free
  1259                           
  1260                           ;main.c: 88:     LcInit(2);
  1261  001A0E  0E02               	movlw	2
  1262  001A10  EC3D  F00B         	call	_LcInit
  1263                           
  1264                           ;main.c: 89:     Uinit();
  1265  001A14  EC67  F00A         	call	_Uinit	;wreg free
  1266                           
  1267                           ;main.c: 90:     Minit();
  1268  001A18  EC76  F000         	call	_Minit	;wreg free
  1269  001A1C                     l7137:
  1270                           
  1271                           ;main.c: 92:         GLCDMotor();
  1272  001A1C  ECB9  F007         	call	_GLCDMotor	;wreg free
  1273                           
  1274                           ;main.c: 93:         motorJoc();
  1275  001A20  EC9C  F00B         	call	_motorJoc	;wreg free
  1276                           
  1277                           ;main.c: 94:         motorSIO();
  1278  001A24  ECF6  F004         	call	_motorSIO	;wreg free
  1279                           
  1280                           ;main.c: 95:         motorHora();
  1281  001A28  EC37  F00C         	call	_motorHora	;wreg free
  1282                           
  1283                           ;main.c: 96:         JoystickMotor();
  1284  001A2C  ECD2  F00A         	call	_JoystickMotor	;wreg free
  1285                           
  1286                           ;main.c: 97:         menu();
  1287  001A30  EC71  F001         	call	_menu	;wreg free
  1288                           
  1289                           ;main.c: 98:         CtoA();
  1290  001A34  EC25  F00F         	call	_CtoA	;wreg free
  1291                           
  1292                           ;main.c: 99:         motorAltaveu();
  1293  001A38  ECEE  F00B         	call	_motorAltaveu	;wreg free
  1294                           
  1295                           ;main.c: 100:         UmotorUsers();
  1296  001A3C  EC5F  F006         	call	_UmotorUsers	;wreg free
  1297                           
  1298                           ;main.c: 102:         TeTeclat();
  1299  001A40  ECD6  F009         	call	_TeTeclat	;wreg free
  1300                           
  1301                           ;main.c: 103:         SMotor();
  1302  001A44  ECFF  F008         	call	_SMotor	;wreg free
  1303                           
  1304                           ;main.c: 104:         LcLCD();
  1305  001A48  EC8D  F00D         	call	_LcLCD	;wreg free
  1306  001A4C  D7E7               	goto	l7137
  1307  001A4E                     __end_of_main:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _motorSIO *****************
  1311 ;; Defined at:
  1312 ;;		line 50 in file "SIO.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1
  1326 ;;      Params:         0       0       0
  1327 ;;      Locals:         0       0       0
  1328 ;;      Temps:          2       0       0
  1329 ;;      Totals:         2       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 6
  1333 ;; This function calls:
  1334 ;;		_CToAConverteix
  1335 ;;		_CToAHaAcabat
  1336 ;;		_CToAobtenir
  1337 ;;		_HGetTime
  1338 ;;		_LcClear
  1339 ;;		_LcGotoXY
  1340 ;;		_LcLliure
  1341 ;;		_LcNewString
  1342 ;;		_LcPutChar
  1343 ;;		_TiGetTics
  1344 ;;		_TiResetTics
  1345 ;;		_UgetUserName
  1346 ;;		_UnewScore
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text1
  1353  0009EC                     __ptext1:
  1354                           	callstack 0
  1355  0009EC                     _motorSIO:
  1356                           	callstack 24
  1357                           
  1358                           ;SIO.c: 51:     static char state = 0;;SIO.c: 53:  switch(state) {
  1359                           
  1360                           ;incstack = 0
  1361  0009EC  D124               	goto	l5295
  1362  0009EE                     l5119:
  1363                           
  1364                           ;SIO.c: 55:    if (usuariActualSIO > -1) {
  1365  0009EE  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1366  0009F0  0012               	return	
  1367                           
  1368                           ;SIO.c: 56:     userPtr = UgetUserName(usuariActualSIO);
  1369  0009F2  504A               	movf	_usuariActualSIO^0,w,c
  1370  0009F4  ECA8  F00F         	call	_UgetUserName
  1371  0009F8  C064  F007         	movff	?_UgetUserName,_userPtr
  1372  0009FC  C065  F008         	movff	?_UgetUserName+1,_userPtr+1
  1373                           
  1374                           ;SIO.c: 57:     jugantSIO = 1;
  1375  000A00  8475               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1376                           
  1377                           ;SIO.c: 58:     Krebut = 0;
  1378  000A02  9275               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1379  000A04                     l5127:
  1380                           
  1381                           ;SIO.c: 59:     state++;
  1382  000A04  2A0D               	incf	motorSIO@state^0,f,c
  1383                           
  1384                           ;SIO.c: 61:   break;
  1385                           
  1386                           ;SIO.c: 60:    }
  1387  000A06  0012               	return	
  1388  000A08                     l5129:
  1389                           
  1390                           ;SIO.c: 63:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1391  000A08  D93E               	call	PL24	;call to abstracted procedure
  1392  000A0A  E104               	bnz	l5137
  1393  000A0C  A2AC               	btfss	172,1,c	;volatile
  1394  000A0E  D002               	goto	l5137
  1395                           
  1396                           ;SIO.c: 64:     TXREG = '\0';
  1397  000A10  6AAD               	clrf	173,c	;volatile
  1398  000A12  D032               	goto	l5173
  1399  000A14                     l5137:
  1400  000A14  D938               	call	PL24	;call to abstracted procedure
  1401  000A16  A4D8               	btfss	status,2,c
  1402  000A18  A2AC               	btfss	172,1,c	;volatile
  1403  000A1A  0012               	return	
  1404                           
  1405                           ;SIO.c: 69:     TXREG = *userPtr;
  1406  000A1C  D934               	call	PL24	;call to abstracted procedure
  1407  000A1E  6EAD               	movwf	173,c	;volatile
  1408                           
  1409                           ;SIO.c: 70:     userPtr++;
  1410  000A20  4A07               	infsnz	_userPtr^0,f,c
  1411  000A22  2A08               	incf	(_userPtr+1)^0,f,c
  1412  000A24  0012               	return	
  1413  000A26                     l5145:
  1414                           
  1415                           ;SIO.c: 74:    if (RCREG == 'K') {
  1416  000A26  0E4B               	movlw	75
  1417  000A28  18AE               	xorwf	174,w,c
  1418  000A2A  A4D8               	btfss	status,2,c
  1419  000A2C  0012               	return	
  1420                           
  1421                           ;SIO.c: 75:     Krebut = 1;
  1422  000A2E  8275               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1423  000A30  D7E9               	goto	l5127
  1424  000A32                     l5151:
  1425                           
  1426                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1427  000A32  2849               	incf	_direccioSIO^0,w,c
  1428  000A34  E006               	bz	l5157
  1429  000A36  A2AC               	btfss	172,1,c	;volatile
  1430  000A38  D004               	goto	l5157
  1431                           
  1432                           ;SIO.c: 81:     TXREG = direccioSIO;
  1433  000A3A  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1434                           
  1435                           ;SIO.c: 82:     direccioSIO = -1;
  1436  000A3E  6849               	setf	_direccioSIO^0,c
  1437                           
  1438                           ;SIO.c: 84:    }
  1439  000A40  0012               	return	
  1440  000A42                     l5157:
  1441  000A42  0E30               	movlw	48
  1442  000A44  6448               	cpfsgt	_novaTeclaSIO^0,c
  1443  000A46  D009               	goto	l1337
  1444  000A48  0E3A               	movlw	58
  1445  000A4A  6048               	cpfslt	_novaTeclaSIO^0,c
  1446  000A4C  D006               	goto	l1337
  1447  000A4E  A2AC               	btfss	172,1,c	;volatile
  1448  000A50  D004               	goto	l1337
  1449                           
  1450                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1451  000A52  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1452                           
  1453                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1454  000A56  6A48               	clrf	_novaTeclaSIO^0,c
  1455                           
  1456                           ;SIO.c: 89:    }
  1457  000A58  0012               	return	
  1458  000A5A                     l1337:
  1459  000A5A  B475               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1460  000A5C  D002               	goto	u4710
  1461  000A5E  B2AC               	btfsc	172,1,c	;volatile
  1462  000A60  D002               	goto	u4720
  1463  000A62                     u4710:
  1464  000A62  AA9E               	btfss	158,5,c	;volatile
  1465  000A64  D00B               	goto	l1339
  1466  000A66                     u4720:
  1467                           
  1468                           ;SIO.c: 91:     LcClear();
  1469  000A66  EC37  F00F         	call	_LcClear	;wreg free
  1470                           
  1471                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1472  000A6A  0EC3               	movlw	low STR_6
  1473  000A6C  ECD3  F004         	call	PL10	;call to abstracted procedure
  1474  000A70  EC2D  F000         	call	_LcNewString	;wreg free
  1475                           
  1476                           ;SIO.c: 93:     TXREG = 'F';
  1477  000A74  0E46               	movlw	70
  1478  000A76  6EAD               	movwf	173,c	;volatile
  1479  000A78                     l5173:
  1480                           
  1481                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1482  000A78  6A48               	clrf	_novaTeclaSIO^0,c
  1483  000A7A  D7C4               	goto	l5127
  1484  000A7C                     l1339:
  1485  000A7C  A075               	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1486  000A7E  0012               	return	
  1487                           
  1488                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1489  000A80  EC94  F000         	call	_HGetTime	;wreg free
  1490  000A84  6ED9               	movwf	fsr2l,c
  1491  000A86  6ADA               	clrf	fsr2h,c
  1492  000A88  50DF               	movf	indf2,w,c
  1493  000A8A  6E01               	movwf	_horaTX^0,c
  1494                           
  1495                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1496  000A8C  EC94  F000         	call	_HGetTime	;wreg free
  1497  000A90  D911               	call	PL70	;call to abstracted procedure
  1498  000A92  6E02               	movwf	(_horaTX+1)^0,c
  1499                           
  1500                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1501  000A94  EC94  F000         	call	_HGetTime	;wreg free
  1502  000A98  D8FC               	call	PL50	;call to abstracted procedure
  1503  000A9A  6E03               	movwf	(_horaTX+2)^0,c
  1504                           
  1505                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1506  000A9C  EC94  F000         	call	_HGetTime	;wreg free
  1507  000AA0  D8FE               	call	PL52	;call to abstracted procedure
  1508  000AA2  6E04               	movwf	(_horaTX+3)^0,c
  1509                           
  1510                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1511  000AA4  EC94  F000         	call	_HGetTime	;wreg free
  1512  000AA8  6ED9               	movwf	fsr2l,c
  1513  000AAA  6ADA               	clrf	fsr2h,c
  1514  000AAC  0E04               	movlw	4
  1515  000AAE  26D9               	addwf	fsr2l,f,c
  1516  000AB0  50DF               	movf	indf2,w,c
  1517  000AB2  6E05               	movwf	(_horaTX+4)^0,c
  1518                           
  1519                           ;SIO.c: 103:     horaTX[5] = newLineChar;
  1520  000AB4  0E0D               	movlw	13
  1521  000AB6  6E06               	movwf	(_horaTX+5)^0,c
  1522                           
  1523                           ;SIO.c: 104:     mask = 1;
  1524  000AB8  0E01               	movlw	1
  1525  000ABA  6E0E               	movwf	_mask^0,c
  1526                           
  1527                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1528  000ABC  5011               	movf	_timerSIO^0,w,c
  1529  000ABE  EC75  F00F         	call	_TiResetTics
  1530                           
  1531                           ;SIO.c: 106:     charActu = 0;
  1532  000AC2  6A0F               	clrf	_charActu^0,c
  1533                           
  1534                           ;SIO.c: 107:     state = 10;
  1535  000AC4  0E0A               	movlw	10
  1536  000AC6  6E0D               	movwf	motorSIO@state^0,c
  1537  000AC8  0C0A               	retlw	10
  1538  000ACA                     l1346:
  1539                           
  1540                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1541  000ACA  AA9E               	btfss	158,5,c	;volatile
  1542  000ACC  0012               	return	
  1543                           
  1544                           ;SIO.c: 112:     score = RCREG;
  1545  000ACE  CFAE F010          	movff	4014,_score	;volatile
  1546                           
  1547                           ;SIO.c: 113:     UnewScore(score);
  1548  000AD2  5010               	movf	_score^0,w,c
  1549  000AD4  EC39  F000         	call	_UnewScore
  1550                           
  1551                           ;SIO.c: 114:     CToAConverteix(score);
  1552  000AD8  5010               	movf	_score^0,w,c
  1553  000ADA  EC27  F000         	call	_CToAConverteix
  1554                           
  1555                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1556  000ADE  5011               	movf	_timerSIO^0,w,c
  1557  000AE0  EC75  F00F         	call	_TiResetTics
  1558  000AE4  D78F               	goto	l5127
  1559  000AE6                     l5205:
  1560                           
  1561                           ;SIO.c: 120:    if (TiGetTics(timerSIO) > 2490) {
  1562  000AE6  5011               	movf	_timerSIO^0,w,c
  1563  000AE8  ECDC  F00E         	call	_TiGetTics
  1564  000AEC  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1565  000AEE  D00F               	goto	l5213
  1566  000AF0  0EBB               	movlw	187
  1567  000AF2  5C64               	subwf	?_TiGetTics^0,w,c
  1568  000AF4  0E09               	movlw	9
  1569  000AF6  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1570  000AF8  E30A               	bnc	l5213
  1571                           
  1572                           ;SIO.c: 121:     LcClear();
  1573  000AFA  EC37  F00F         	call	_LcClear	;wreg free
  1574                           
  1575                           ;SIO.c: 122:     LcNewString("TIME LEFT: ");
  1576  000AFE  0EAF               	movlw	low STR_7
  1577  000B00  ECD3  F004         	call	PL10	;call to abstracted procedure
  1578  000B04  EC2D  F000         	call	_LcNewString	;wreg free
  1579                           
  1580                           ;SIO.c: 123:     state = 7;
  1581  000B08  0E07               	movlw	7
  1582  000B0A  6E0D               	movwf	motorSIO@state^0,c
  1583                           
  1584                           ;SIO.c: 124:    }
  1585  000B0C  0C07               	retlw	7
  1586  000B0E                     l5213:
  1587  000B0E  5011               	movf	_timerSIO^0,w,c
  1588  000B10  ECDC  F00E         	call	_TiGetTics
  1589  000B14  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1590  000B16  D006               	goto	u4760
  1591  000B18  0EBA               	movlw	186
  1592  000B1A  5C64               	subwf	?_TiGetTics^0,w,c
  1593  000B1C  0E09               	movlw	9
  1594  000B1E  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1595  000B20  B0D8               	btfsc	status,0,c
  1596  000B22  0012               	return	
  1597  000B24                     u4760:
  1598  000B24  AA9E               	btfss	158,5,c	;volatile
  1599  000B26  0012               	return	
  1600  000B28  EC33  F000         	call	_LcLliure	;wreg free
  1601  000B2C  A0D8               	btfss	status,0,c
  1602  000B2E  0012               	return	
  1603                           
  1604                           ;SIO.c: 126:     LcGotoXY(0,1);
  1605  000B30  ECDE  F004         	call	PL32	;call to abstracted procedure
  1606  000B34  EC71  F00E         	call	_LcGotoXY
  1607                           
  1608                           ;SIO.c: 127:     LcPutChar(RCREG);
  1609  000B38  50AE               	movf	174,w,c	;volatile
  1610  000B3A  ECB5  F00D         	call	_LcPutChar
  1611  000B3E  D762               	goto	l5127
  1612  000B40                     l5223:
  1613                           
  1614                           ;SIO.c: 132:    if (LcLliure()) {
  1615  000B40  EC33  F000         	call	_LcLliure	;wreg free
  1616  000B44  A0D8               	btfss	status,0,c
  1617  000B46  0012               	return	
  1618                           
  1619                           ;SIO.c: 133:     LcNewString(HGetTime());
  1620  000B48  EC94  F000         	call	_HGetTime	;wreg free
  1621  000B4C  D8AE               	call	PL56	;call to abstracted procedure
  1622  000B4E  EC2D  F000         	call	_LcNewString	;wreg free
  1623  000B52  D758               	goto	l5127
  1624  000B54                     l1354:
  1625                           
  1626                           ;SIO.c: 138:    if (PIR1bits.RCIF) {
  1627  000B54  AA9E               	btfss	158,5,c	;volatile
  1628  000B56  0012               	return	
  1629                           
  1630                           ;SIO.c: 139:     LcPutChar(RCREG);
  1631  000B58  50AE               	movf	174,w,c	;volatile
  1632  000B5A  ECB5  F00D         	call	_LcPutChar
  1633                           
  1634                           ;SIO.c: 140:     TiResetTics(timerSIO);
  1635  000B5E  5011               	movf	_timerSIO^0,w,c
  1636  000B60  EC75  F00F         	call	_TiResetTics
  1637  000B64                     l5231:
  1638                           
  1639                           ;SIO.c: 141:     state--;
  1640  000B64  060D               	decf	motorSIO@state^0,f,c
  1641  000B66  0012               	return	
  1642  000B68                     l5233:
  1643                           
  1644                           ;SIO.c: 145:    if (LcLliure()) {
  1645  000B68  EC33  F000         	call	_LcLliure	;wreg free
  1646  000B6C  A0D8               	btfss	status,0,c
  1647  000B6E  0012               	return	
  1648                           
  1649                           ;SIO.c: 146:     LcGotoXY(0,1);
  1650  000B70  ECDE  F004         	call	PL32	;call to abstracted procedure
  1651  000B74  EC71  F00E         	call	_LcGotoXY
  1652                           
  1653                           ;SIO.c: 147:     LcNewString("SCORE: ");
  1654  000B78  0EBB               	movlw	low STR_8
  1655  000B7A  ECD3  F004         	call	PL10	;call to abstracted procedure
  1656  000B7E  EC2D  F000         	call	_LcNewString	;wreg free
  1657  000B82  D740               	goto	l5127
  1658  000B84                     l5241:
  1659                           
  1660                           ;SIO.c: 152:    if (LcLliure() && CToAHaAcabat() == 250) {
  1661  000B84  EC33  F000         	call	_LcLliure	;wreg free
  1662  000B88  A0D8               	btfss	status,0,c
  1663  000B8A  0012               	return	
  1664  000B8C  ECAE  F000         	call	_CToAHaAcabat	;wreg free
  1665  000B90  0AFA               	xorlw	250
  1666  000B92  A4D8               	btfss	status,2,c
  1667  000B94  0012               	return	
  1668                           
  1669                           ;SIO.c: 153:     LcNewString(CToAobtenir());
  1670  000B96  ECAC  F000         	call	_CToAobtenir	;wreg free
  1671  000B9A  D887               	call	PL56	;call to abstracted procedure
  1672  000B9C  EC2D  F000         	call	_LcNewString	;wreg free
  1673                           
  1674                           ;SIO.c: 154:     usuariActualSIO = -1;
  1675  000BA0  684A               	setf	_usuariActualSIO^0,c
  1676                           
  1677                           ;SIO.c: 155:     state = 0;
  1678  000BA2  6A0D               	clrf	motorSIO@state^0,c
  1679  000BA4  0012               	return	
  1680  000BA6                     l5251:
  1681                           
  1682                           ;SIO.c: 159:    if (charActu == 6) {
  1683  000BA6  0E06               	movlw	6
  1684  000BA8  180F               	xorwf	_charActu^0,w,c
  1685  000BAA  E104               	bnz	l5257
  1686                           
  1687                           ;SIO.c: 160:     hi_ha_hora_sio2 = 0;
  1688  000BAC  9075               	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1689                           
  1690                           ;SIO.c: 161:     state = 3;
  1691  000BAE  0E03               	movlw	3
  1692  000BB0  6E0D               	movwf	motorSIO@state^0,c
  1693                           
  1694                           ;SIO.c: 162:    }
  1695  000BB2  0C03               	retlw	3
  1696  000BB4                     l5257:
  1697  000BB4  0E06               	movlw	6
  1698  000BB6  600F               	cpfslt	_charActu^0,c
  1699  000BB8  0C06               	retlw	6
  1700  000BBA  5011               	movf	_timerSIO^0,w,c
  1701  000BBC  ECDC  F00E         	call	_TiGetTics
  1702  000BC0  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1703  000BC2  0012               	return	
  1704  000BC4  5065               	movf	(?_TiGetTics+1)^0,w,c
  1705  000BC6  E103               	bnz	u4860
  1706  000BC8  0464               	decf	?_TiGetTics^0,w,c
  1707  000BCA  A0D8               	btfss	status,0,c
  1708  000BCC  0012               	return	
  1709  000BCE                     u4860:
  1710                           
  1711                           ;SIO.c: 164:     LATBbits.LATB1 = 0;
  1712  000BCE  928A               	bcf	138,1,c	;volatile
  1713                           
  1714                           ;SIO.c: 165:     TiResetTics(timerSIO);
  1715  000BD0  5011               	movf	_timerSIO^0,w,c
  1716  000BD2  EC75  F00F         	call	_TiResetTics
  1717  000BD6  D716               	goto	l5127
  1718  000BD8                     l5267:
  1719                           
  1720                           ;SIO.c: 171:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1721  000BD8  500E               	movf	_mask^0,w,c
  1722  000BDA  E111               	bnz	l5281
  1723  000BDC  5011               	movf	_timerSIO^0,w,c
  1724  000BDE  ECDC  F00E         	call	_TiGetTics
  1725  000BE2  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1726  000BE4  D00C               	goto	l5281
  1727  000BE6  5065               	movf	(?_TiGetTics+1)^0,w,c
  1728  000BE8  E102               	bnz	u4880
  1729  000BEA  0464               	decf	?_TiGetTics^0,w,c
  1730  000BEC  E308               	bnc	l5281
  1731  000BEE                     u4880:
  1732                           
  1733                           ;SIO.c: 172:     mask = 1;
  1734  000BEE  0E01               	movlw	1
  1735  000BF0  6E0E               	movwf	_mask^0,c
  1736                           
  1737                           ;SIO.c: 173:     charActu++;
  1738  000BF2  2A0F               	incf	_charActu^0,f,c
  1739                           
  1740                           ;SIO.c: 174:     LATBbits.LATB1 = 1;
  1741  000BF4  828A               	bsf	138,1,c	;volatile
  1742                           
  1743                           ;SIO.c: 175:     TiResetTics(timerSIO);
  1744  000BF6  5011               	movf	_timerSIO^0,w,c
  1745  000BF8  EC75  F00F         	call	_TiResetTics
  1746  000BFC  D7B3               	goto	l5231
  1747  000BFE                     l5281:
  1748  000BFE  5011               	movf	_timerSIO^0,w,c
  1749  000C00  ECDC  F00E         	call	_TiGetTics
  1750  000C04  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1751  000C06  0012               	return	
  1752  000C08  5065               	movf	(?_TiGetTics+1)^0,w,c
  1753  000C0A  E103               	bnz	u4890
  1754  000C0C  0464               	decf	?_TiGetTics^0,w,c
  1755  000C0E  A0D8               	btfss	status,0,c
  1756  000C10  0012               	return	
  1757  000C12                     u4890:
  1758  000C12  500E               	movf	_mask^0,w,c
  1759  000C14  B4D8               	btfsc	status,2,c
  1760  000C16  0012               	return	
  1761                           
  1762                           ;SIO.c: 179:     if(mask & horaTX[charActu]){
  1763  000C18  500F               	movf	_charActu^0,w,c
  1764  000C1A  0F01               	addlw	low _horaTX
  1765  000C1C  6ED9               	movwf	fsr2l,c
  1766  000C1E  6ADA               	clrf	fsr2h,c
  1767  000C20  50DF               	movf	indf2,w,c
  1768  000C22  140E               	andwf	_mask^0,w,c
  1769  000C24  E002               	bz	l1368
  1770                           
  1771                           ;SIO.c: 180:        LATBbits.LATB1 = 1;
  1772  000C26  828A               	bsf	138,1,c	;volatile
  1773                           
  1774                           ;SIO.c: 181:       }else{
  1775  000C28  D001               	goto	l5289
  1776  000C2A                     l1368:
  1777                           
  1778                           ;SIO.c: 182:        LATBbits.LATB1 = 0;
  1779  000C2A  928A               	bcf	138,1,c	;volatile
  1780  000C2C                     l5289:
  1781                           
  1782                           ;SIO.c: 184:       mask = mask<<1;
  1783  000C2C  90D8               	bcf	status,0,c
  1784  000C2E  360E               	rlcf	_mask^0,f,c
  1785                           
  1786                           ;SIO.c: 185:     TiResetTics(timerSIO);
  1787  000C30  5011               	movf	_timerSIO^0,w,c
  1788  000C32  EF75  F00F         	goto	_TiResetTics
  1789  000C36                     l5295:
  1790  000C36  500D               	movf	motorSIO@state^0,w,c
  1791  000C38  6E73               	movwf	??_motorSIO^0,c
  1792  000C3A  6A74               	clrf	(??_motorSIO+1)^0,c
  1793                           
  1794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1795                           ; Switch size 1, requested type "space"
  1796                           ; Number of cases is 1, Range of values is 0 to 0
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte            4     3 (average)
  1800                           ;	Chosen strategy is simple_byte
  1801  000C3C  5074               	movf	(??_motorSIO+1)^0,w,c
  1802  000C3E  A4D8               	btfss	status,2,c
  1803  000C40  0012               	return	
  1804                           
  1805                           ; Switch size 1, requested type "space"
  1806                           ; Number of cases is 12, Range of values is 0 to 11
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte           37    19 (average)
  1810                           ;	Chosen strategy is simple_byte
  1811  000C42  5073               	movf	??_motorSIO^0,w,c
  1812  000C44  E101 D6D3          	bz	l5119
  1813  000C48  0A01               	xorlw	1	; case 1
  1814  000C4A  E101 D6DD          	bz	l5129
  1815  000C4E  0A03               	xorlw	3	; case 2
  1816  000C50  E101 D6E9          	bz	l5145
  1817  000C54  0A01               	xorlw	1	; case 3
  1818  000C56  E101 D6EC          	bz	l5151
  1819  000C5A  0A07               	xorlw	7	; case 4
  1820  000C5C  E101 D735          	bz	l1346
  1821  000C60  0A01               	xorlw	1	; case 5
  1822  000C62  E101 D740          	bz	l5205
  1823  000C66  0A03               	xorlw	3	; case 6
  1824  000C68  E101 D774          	bz	l1354
  1825  000C6C  0A01               	xorlw	1	; case 7
  1826  000C6E  E101 D767          	bz	l5223
  1827  000C72  0A0F               	xorlw	15	; case 8
  1828  000C74  E101 D778          	bz	l5233
  1829  000C78  0A01               	xorlw	1	; case 9
  1830  000C7A  E084               	bz	l5241
  1831  000C7C  0A03               	xorlw	3	; case 10
  1832  000C7E  E093               	bz	l5251
  1833  000C80  0A01               	xorlw	1	; case 11
  1834  000C82  E0AA               	bz	l5267
  1835  000C84  0012               	return		;funcret
  1836  000C86                     __end_of_motorSIO:
  1837                           	callstack 0
  1838  000C86                     PL24:
  1839                           	callstack 24
  1840  000C86  C007  FFD9         	movff	_userPtr,fsr2l
  1841  000C8A  C008  FFDA         	movff	_userPtr+1,fsr2h
  1842  000C8E  50DF               	movf	indf2,w,c
  1843  000C90  0012               	return	
  1844  000C92                     __end_ofPL24:
  1845                           	callstack 0
  1846  000C92                     PL50:
  1847                           	callstack 27
  1848  000C92  6ED9               	movwf	fsr2l,c
  1849  000C94  6ADA               	clrf	fsr2h,c
  1850  000C96  0E02               	movlw	2
  1851  000C98  26D9               	addwf	fsr2l,f,c
  1852  000C9A  50DF               	movf	indf2,w,c
  1853  000C9C  0012               	return	
  1854  000C9E                     __end_ofPL50:
  1855                           	callstack 0
  1856  000C9E                     PL52:
  1857                           	callstack 27
  1858  000C9E  6ED9               	movwf	fsr2l,c
  1859  000CA0  6ADA               	clrf	fsr2h,c
  1860  000CA2  0E03               	movlw	3
  1861  000CA4  26D9               	addwf	fsr2l,f,c
  1862  000CA6  50DF               	movf	indf2,w,c
  1863  000CA8  0012               	return	
  1864  000CAA                     __end_ofPL52:
  1865                           	callstack 0
  1866  000CAA                     PL56:
  1867                           	callstack 24
  1868  000CAA  6E73               	movwf	??_motorSIO^0,c
  1869  000CAC  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1870  000CB0  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1871  000CB2  0012               	return	
  1872  000CB4                     __end_ofPL56:
  1873                           	callstack 0
  1874  000CB4                     PL70:
  1875                           	callstack 27
  1876  000CB4  6ED9               	movwf	fsr2l,c
  1877  000CB6  6ADA               	clrf	fsr2h,c
  1878  000CB8  2AD9               	incf	fsr2l,f,c
  1879  000CBA  50DF               	movf	indf2,w,c
  1880  000CBC  0012               	return	
  1881  000CBE                     __end_ofPL70:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _UnewScore *****************
  1885 ;; Defined at:
  1886 ;;		line 307 in file "Usuaris.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  scoretmp        1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         1       0       0
  1902 ;;      Temps:          0       0       0
  1903 ;;      Totals:         1       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_motorSIO
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text2
  1915  000072                     __ptext2:
  1916                           	callstack 0
  1917  000072                     _UnewScore:
  1918                           	callstack 27
  1919                           
  1920                           ;incstack = 0
  1921                           ;UnewScore@scoretmp stored from wreg
  1922  000072  6E64               	movwf	UnewScore@scoretmp^0,c
  1923                           
  1924                           ;Usuaris.c: 308:     scoreUsr = scoretmp;
  1925  000074  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1926                           
  1927                           ;Usuaris.c: 309:     do_updateScore = 1;
  1928  000078  8876               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1929  00007A  0012               	return		;funcret
  1930  00007C                     __end_of_UnewScore:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _motorJoc *****************
  1934 ;; Defined at:
  1935 ;;		line 44 in file "Joc.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1
  1949 ;;      Params:         0       0       0
  1950 ;;      Locals:         0       0       0
  1951 ;;      Temps:          2       0       0
  1952 ;;      Totals:         2       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 5
  1956 ;; This function calls:
  1957 ;;		_HClearNouSegon
  1958 ;;		_HGetTime
  1959 ;;		_HJugant
  1960 ;;		_HNouSegon
  1961 ;;		_HnoJugant
  1962 ;;		_LcGotoXY
  1963 ;;		_LcLliure
  1964 ;;		_LcNewString
  1965 ;;		_SIOEnviaHora
  1966 ;;		_SIONovaDireccio
  1967 ;;		_SIONovaTecla
  1968 ;;		_SIOStartGame
  1969 ;;		_SIOcheckKrebut
  1970 ;;		_SIOendGame
  1971 ;;		_conversorJoystick
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text3
  1978  001738                     __ptext3:
  1979                           	callstack 0
  1980  001738                     _motorJoc:
  1981                           	callstack 25
  1982                           
  1983                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1984                           
  1985                           ;incstack = 0
  1986  001738  D044               	goto	l5111
  1987  00173A                     l5065:
  1988                           
  1989                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1990  00173A  284C               	incf	_usuariJoc^0,w,c
  1991  00173C  B4D8               	btfsc	status,2,c
  1992  00173E  0012               	return	
  1993                           
  1994                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1995  001740  504C               	movf	_usuariJoc^0,w,c
  1996  001742  ECFC  F00F         	call	_SIOStartGame
  1997                           
  1998                           ;Joc.c: 51:     jugantJoc = 1;
  1999  001746  8675               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2000                           
  2001                           ;Joc.c: 52:     state = 2;
  2002  001748  0E02               	movlw	2
  2003  00174A  6E12               	movwf	motorJoc@state^0,c
  2004                           
  2005                           ;Joc.c: 54:   break;
  2006                           
  2007                           ;Joc.c: 53:    }
  2008  00174C  0C02               	retlw	2
  2009  00174E                     l1211:
  2010                           
  2011                           ;Joc.c: 56:    if (!jugantJoc) {
  2012  00174E  B675               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2013  001750  D007               	goto	l5079
  2014                           
  2015                           ;Joc.c: 57:     usuariJoc = -1;
  2016  001752  684C               	setf	_usuariJoc^0,c
  2017                           
  2018                           ;Joc.c: 58:     HnoJugant();
  2019  001754  EC92  F000         	call	_HnoJugant	;wreg free
  2020                           
  2021                           ;Joc.c: 59:     SIOendGame();
  2022  001758  EC8E  F000         	call	_SIOendGame	;wreg free
  2023  00175C                     l5077:
  2024                           
  2025                           ;Joc.c: 61:     state--;
  2026  00175C  0612               	decf	motorJoc@state^0,f,c
  2027                           
  2028                           ;Joc.c: 62:    }
  2029  00175E  0012               	return	
  2030  001760                     l5079:
  2031  001760  BE13               	btfsc	_direccioJoc^0,7,c
  2032  001762  D007               	goto	l5085
  2033                           
  2034                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2035  001764  5013               	movf	_direccioJoc^0,w,c
  2036  001766  ECEF  F00E         	call	_conversorJoystick
  2037  00176A  EC42  F000         	call	_SIONovaDireccio
  2038                           
  2039                           ;Joc.c: 65:     direccioJoc = -1;
  2040  00176E  6813               	setf	_direccioJoc^0,c
  2041                           
  2042                           ;Joc.c: 66:    }
  2043  001770  0012               	return	
  2044  001772                     l5085:
  2045  001772  ECEA  F00F         	call	_HNouSegon	;wreg free
  2046  001776  E313               	bnc	l5097
  2047  001778  EC33  F000         	call	_LcLliure	;wreg free
  2048  00177C  E310               	bnc	l5097
  2049                           
  2050                           ;Joc.c: 68:     HClearNouSegon();
  2051  00177E  EC96  F000         	call	_HClearNouSegon	;wreg free
  2052                           
  2053                           ;Joc.c: 69:     LcGotoXY(0,1);
  2054  001782  ECDE  F004         	call	PL32	;call to abstracted procedure
  2055  001786  EC71  F00E         	call	_LcGotoXY
  2056                           
  2057                           ;Joc.c: 70:     LcNewString(HGetTime());
  2058  00178A  EC94  F000         	call	_HGetTime	;wreg free
  2059  00178E  6E72               	movwf	??_motorJoc^0,c
  2060  001790  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  2061  001794  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2062  001796  EC2D  F000         	call	_LcNewString	;wreg free
  2063                           
  2064                           ;Joc.c: 71:                 SIOEnviaHora();
  2065  00179A  EF90  F000         	goto	_SIOEnviaHora	;wreg free
  2066  00179E                     l5097:
  2067  00179E  504B               	movf	_novaTeclaJOC^0,w,c
  2068  0017A0  0A80               	xorlw	128
  2069  0017A2  0F7F               	addlw	-129
  2070  0017A4  A0D8               	btfss	status,0,c
  2071  0017A6  0012               	return	
  2072                           
  2073                           ;Joc.c: 75:     SIONovaTecla(novaTeclaJOC+48);
  2074  0017A8  504B               	movf	_novaTeclaJOC^0,w,c
  2075  0017AA  0F30               	addlw	48
  2076  0017AC  EC3E  F000         	call	_SIONovaTecla
  2077                           
  2078                           ;Joc.c: 76:     novaTeclaJOC = -1;
  2079  0017B0  684B               	setf	_novaTeclaJOC^0,c
  2080  0017B2  0012               	return	
  2081  0017B4                     l5103:
  2082                           
  2083                           ;Joc.c: 80:    if (SIOcheckKrebut()) {
  2084  0017B4  ECE4  F00F         	call	_SIOcheckKrebut	;wreg free
  2085  0017B8  A0D8               	btfss	status,0,c
  2086  0017BA  0012               	return	
  2087                           
  2088                           ;Joc.c: 81:     HJugant();
  2089  0017BC  EC82  F000         	call	_HJugant	;wreg free
  2090  0017C0  D7CD               	goto	l5077
  2091  0017C2                     l5111:
  2092  0017C2  5012               	movf	motorJoc@state^0,w,c
  2093  0017C4  6E72               	movwf	??_motorJoc^0,c
  2094  0017C6  6A73               	clrf	(??_motorJoc+1)^0,c
  2095                           
  2096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 1, Range of values is 0 to 0
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            4     3 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  0017C8  5073               	movf	(??_motorJoc+1)^0,w,c
  2104  0017CA  A4D8               	btfss	status,2,c
  2105  0017CC  0012               	return	
  2106                           
  2107                           ; Switch size 1, requested type "space"
  2108                           ; Number of cases is 3, Range of values is 0 to 2
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; simple_byte           10     6 (average)
  2112                           ;	Chosen strategy is simple_byte
  2113  0017CE  5072               	movf	??_motorJoc^0,w,c
  2114  0017D0  E0B4               	bz	l5065
  2115  0017D2  0A01               	xorlw	1	; case 1
  2116  0017D4  E0BC               	bz	l1211
  2117  0017D6  0A03               	xorlw	3	; case 2
  2118  0017D8  E0ED               	bz	l5103
  2119  0017DA  0012               	return		;funcret
  2120  0017DC                     __end_of_motorJoc:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _conversorJoystick *****************
  2124 ;; Defined at:
  2125 ;;		line 27 in file "Joc.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  direc           1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  direc           1    5[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      unsigned char 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1
  2139 ;;      Params:         0       0       0
  2140 ;;      Locals:         1       0       0
  2141 ;;      Temps:          0       0       0
  2142 ;;      Totals:         1       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 2
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_motorJoc
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text4
  2154  001DDE                     __ptext4:
  2155                           	callstack 0
  2156  001DDE                     _conversorJoystick:
  2157                           	callstack 27
  2158                           
  2159                           ;incstack = 0
  2160                           ;conversorJoystick@direc stored from wreg
  2161  001DDE  6E64               	movwf	conversorJoystick@direc^0,c
  2162                           
  2163                           ;Joc.c: 29:     if (direc==2) {
  2164  001DE0  0E02               	movlw	2
  2165  001DE2  1864               	xorwf	conversorJoystick@direc^0,w,c
  2166  001DE4  E101               	bnz	l2433
  2167                           
  2168                           ;Joc.c: 30:         return 'W';
  2169  001DE6  0C57               	retlw	87
  2170  001DE8                     l2433:
  2171                           
  2172                           ;Joc.c: 32:     if (direc==6) {
  2173  001DE8  0E06               	movlw	6
  2174  001DEA  1864               	xorwf	conversorJoystick@direc^0,w,c
  2175  001DEC  E101               	bnz	l2439
  2176                           
  2177                           ;Joc.c: 33:         return 'D';
  2178  001DEE  0C44               	retlw	68
  2179  001DF0                     l2439:
  2180                           
  2181                           ;Joc.c: 35:     if (direc==8) {
  2182  001DF0  0E08               	movlw	8
  2183  001DF2  1864               	xorwf	conversorJoystick@direc^0,w,c
  2184  001DF4  E101               	bnz	l2445
  2185                           
  2186                           ;Joc.c: 36:         return 'S';
  2187  001DF6  0C53               	retlw	83
  2188  001DF8                     l2445:
  2189                           
  2190                           ;Joc.c: 38:     if (direc==4) {
  2191  001DF8  0E04               	movlw	4
  2192  001DFA  1864               	xorwf	conversorJoystick@direc^0,w,c
  2193  001DFC  E101               	bnz	l2451
  2194                           
  2195                           ;Joc.c: 39:         return 'A';
  2196  001DFE  0C41               	retlw	65
  2197  001E00                     l2451:
  2198                           
  2199                           ;Joc.c: 41:     return 0;
  2200  001E00  0C00               	retlw	0	;funcret
  2201  001E02                     __end_of_conversorJoystick:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _SIOendGame *****************
  2205 ;; Defined at:
  2206 ;;		line 28 in file "SIO.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		None
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1
  2220 ;;      Params:         0       0       0
  2221 ;;      Locals:         0       0       0
  2222 ;;      Temps:          0       0       0
  2223 ;;      Totals:         0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 2
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_motorJoc
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text5
  2235  00011C                     __ptext5:
  2236                           	callstack 0
  2237  00011C                     _SIOendGame:
  2238                           	callstack 27
  2239                           
  2240                           ;SIO.c: 29:     jugantSIO = 0;
  2241                           
  2242                           ;incstack = 0
  2243  00011C  9475               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2244  00011E  0012               	return		;funcret
  2245  000120                     __end_of_SIOendGame:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _SIOcheckKrebut *****************
  2249 ;; Defined at:
  2250 ;;		line 31 in file "SIO.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1
  2264 ;;      Params:         0       0       0
  2265 ;;      Locals:         0       0       0
  2266 ;;      Temps:          0       0       0
  2267 ;;      Totals:         0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_motorJoc
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text6
  2279  001FC8                     __ptext6:
  2280                           	callstack 0
  2281  001FC8                     _SIOcheckKrebut:
  2282                           	callstack 27
  2283                           
  2284                           ;SIO.c: 32:     return Krebut;
  2285                           
  2286                           ;incstack = 0
  2287  001FC8  B275               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2288  001FCA  D002               	goto	l2469
  2289  001FCC  90D8               	bcf	status,0,c
  2290  001FCE  0012               	return	
  2291  001FD0                     l2469:
  2292  001FD0  80D8               	bsf	status,0,c
  2293  001FD2  0012               	return		;funcret
  2294  001FD4                     __end_of_SIOcheckKrebut:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _SIOStartGame *****************
  2298 ;; Defined at:
  2299 ;;		line 38 in file "SIO.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  usuari          1    wreg     unsigned char 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  usuari          1    5[COMRAM] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1
  2313 ;;      Params:         0       0       0
  2314 ;;      Locals:         1       0       0
  2315 ;;      Temps:          0       0       0
  2316 ;;      Totals:         1       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_motorJoc
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text7
  2328  001FF8                     __ptext7:
  2329                           	callstack 0
  2330  001FF8                     _SIOStartGame:
  2331                           	callstack 27
  2332                           
  2333                           ;incstack = 0
  2334                           ;SIOStartGame@usuari stored from wreg
  2335  001FF8  6E64               	movwf	SIOStartGame@usuari^0,c
  2336                           
  2337                           ;SIO.c: 39:     usuariActualSIO = usuari;
  2338  001FFA  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2339  001FFE  0012               	return		;funcret
  2340  002000                     __end_of_SIOStartGame:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _SIONovaTecla *****************
  2344 ;; Defined at:
  2345 ;;		line 47 in file "SIO.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  tecla           1    wreg     char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  tecla           1    5[COMRAM] char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1
  2359 ;;      Params:         0       0       0
  2360 ;;      Locals:         1       0       0
  2361 ;;      Temps:          0       0       0
  2362 ;;      Totals:         1       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 2
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_motorJoc
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text8
  2374  00007C                     __ptext8:
  2375                           	callstack 0
  2376  00007C                     _SIONovaTecla:
  2377                           	callstack 27
  2378                           
  2379                           ;incstack = 0
  2380                           ;SIONovaTecla@tecla stored from wreg
  2381  00007C  6E64               	movwf	SIONovaTecla@tecla^0,c
  2382                           
  2383                           ;SIO.c: 48:     novaTeclaSIO = tecla;
  2384  00007E  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2385  000082  0012               	return		;funcret
  2386  000084                     __end_of_SIONovaTecla:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _SIONovaDireccio *****************
  2390 ;; Defined at:
  2391 ;;		line 34 in file "SIO.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  num             1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  num             1    5[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1
  2405 ;;      Params:         0       0       0
  2406 ;;      Locals:         1       0       0
  2407 ;;      Temps:          0       0       0
  2408 ;;      Totals:         1       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 2
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_motorJoc
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text9
  2420  000084                     __ptext9:
  2421                           	callstack 0
  2422  000084                     _SIONovaDireccio:
  2423                           	callstack 27
  2424                           
  2425                           ;incstack = 0
  2426                           ;SIONovaDireccio@num stored from wreg
  2427  000084  6E64               	movwf	SIONovaDireccio@num^0,c
  2428                           
  2429                           ;SIO.c: 35:     direccioSIO = num;
  2430  000086  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2431  00008A  0012               	return		;funcret
  2432  00008C                     __end_of_SIONovaDireccio:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _SIOEnviaHora *****************
  2436 ;; Defined at:
  2437 ;;		line 41 in file "SIO.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		None
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1
  2451 ;;      Params:         0       0       0
  2452 ;;      Locals:         0       0       0
  2453 ;;      Temps:          0       0       0
  2454 ;;      Totals:         0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_motorJoc
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text10
  2466  000120                     __ptext10:
  2467                           	callstack 0
  2468  000120                     _SIOEnviaHora:
  2469                           	callstack 27
  2470                           
  2471                           ;SIO.c: 42:     hi_ha_hora_sio2 = 1;
  2472                           
  2473                           ;incstack = 0
  2474  000120  8075               	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2475  000122  0012               	return		;funcret
  2476  000124                     __end_of_SIOEnviaHora:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _HnoJugant *****************
  2480 ;; Defined at:
  2481 ;;		line 37 in file "Hora.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		None
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1
  2495 ;;      Params:         0       0       0
  2496 ;;      Locals:         0       0       0
  2497 ;;      Temps:          0       0       0
  2498 ;;      Totals:         0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_motorJoc
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text11
  2510  000124                     __ptext11:
  2511                           	callstack 0
  2512  000124                     _HnoJugant:
  2513                           	callstack 27
  2514                           
  2515                           ;Hora.c: 38:     jugant = 0;
  2516                           
  2517                           ;incstack = 0
  2518  000124  9C75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2519  000126  0012               	return		;funcret
  2520  000128                     __end_of_HnoJugant:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _HNouSegon *****************
  2524 ;; Defined at:
  2525 ;;		line 25 in file "Hora.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;		None               void
  2532 ;; Registers used:
  2533 ;;		status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1
  2539 ;;      Params:         0       0       0
  2540 ;;      Locals:         0       0       0
  2541 ;;      Temps:          0       0       0
  2542 ;;      Totals:         0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 2
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_motorJoc
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text12
  2554  001FD4                     __ptext12:
  2555                           	callstack 0
  2556  001FD4                     _HNouSegon:
  2557                           	callstack 27
  2558                           
  2559                           ;Hora.c: 26:     return nouSegon;
  2560                           
  2561                           ;incstack = 0
  2562  001FD4  BA75               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2563  001FD6  D002               	goto	l2413
  2564  001FD8  90D8               	bcf	status,0,c
  2565  001FDA  0012               	return	
  2566  001FDC                     l2413:
  2567  001FDC  80D8               	bsf	status,0,c
  2568  001FDE  0012               	return		;funcret
  2569  001FE0                     __end_of_HNouSegon:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _HJugant *****************
  2573 ;; Defined at:
  2574 ;;		line 40 in file "Hora.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1
  2588 ;;      Params:         0       0       0
  2589 ;;      Locals:         0       0       0
  2590 ;;      Temps:          0       0       0
  2591 ;;      Totals:         0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 2
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_motorJoc
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text13
  2603  000104                     __ptext13:
  2604                           	callstack 0
  2605  000104                     _HJugant:
  2606                           	callstack 27
  2607                           
  2608                           ;Hora.c: 41:     jugant = 1;
  2609                           
  2610                           ;incstack = 0
  2611  000104  8C75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2612                           
  2613                           ;Hora.c: 42:     tempsAcabat = 0;
  2614  000106  9875               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2615  000108  0012               	return		;funcret
  2616  00010A                     __end_of_HJugant:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _HGetTime *****************
  2620 ;; Defined at:
  2621 ;;		line 33 in file "Hora.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      PTR unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1
  2635 ;;      Params:         2       0       0
  2636 ;;      Locals:         0       0       0
  2637 ;;      Temps:          0       0       0
  2638 ;;      Totals:         2       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 2
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_motorJoc
  2646 ;;		_motorSIO
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text14
  2651  000128                     __ptext14:
  2652                           	callstack 0
  2653  000128                     _HGetTime:
  2654                           	callstack 27
  2655                           
  2656                           ;Hora.c: 34:     return hora;
  2657                           
  2658                           ;incstack = 0
  2659  000128  0E56               	movlw	_hora& (0+255)
  2660  00012A  0012               	return		;funcret
  2661  00012C                     __end_of_HGetTime:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _HClearNouSegon *****************
  2665 ;; Defined at:
  2666 ;;		line 29 in file "Hora.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		None
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1
  2680 ;;      Params:         0       0       0
  2681 ;;      Locals:         0       0       0
  2682 ;;      Temps:          0       0       0
  2683 ;;      Totals:         0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 2
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_motorJoc
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text15
  2695  00012C                     __ptext15:
  2696                           	callstack 0
  2697  00012C                     _HClearNouSegon:
  2698                           	callstack 27
  2699                           
  2700                           ;Hora.c: 30:     nouSegon = 0;
  2701                           
  2702                           ;incstack = 0
  2703  00012C  9A75               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2704  00012E  0012               	return		;funcret
  2705  000130                     __end_of_HClearNouSegon:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _motorHora *****************
  2709 ;; Defined at:
  2710 ;;		line 48 in file "Hora.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1
  2724 ;;      Params:         0       0       0
  2725 ;;      Locals:         0       0       0
  2726 ;;      Temps:          2       0       0
  2727 ;;      Totals:         2       0       0
  2728 ;;Total ram usage:        2 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		_TiGetTics
  2733 ;;		_TiResetTics
  2734 ;;		_playAltaveu
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text16
  2741  00186E                     __ptext16:
  2742                           	callstack 0
  2743  00186E                     _motorHora:
  2744                           	callstack 27
  2745                           
  2746                           ;Hora.c: 49:  static char state = 0;;Hora.c: 51:  switch(state) {
  2747                           
  2748                           ;incstack = 0
  2749  00186E  D038               	goto	l5353
  2750  001870                     l5303:
  2751                           
  2752                           ;Hora.c: 53:    if (TiGetTics(timerHora) >= 1205) {
  2753  001870  5016               	movf	_timerHora^0,w,c
  2754  001872  ECDC  F00E         	call	_TiGetTics
  2755  001876  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2756  001878  0012               	return	
  2757  00187A  ECFA  F008         	call	PL58	;call to abstracted procedure
  2758  00187E  A0D8               	btfss	status,0,c
  2759  001880  0012               	return	
  2760                           
  2761                           ;Hora.c: 54:     TiResetTics(timerHora);
  2762  001882  5016               	movf	_timerHora^0,w,c
  2763  001884  EC75  F00F         	call	_TiResetTics
  2764                           
  2765                           ;Hora.c: 55:     if(jugant){
  2766  001888  AC75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2767  00188A  D028               	goto	l5349
  2768                           
  2769                           ;Hora.c: 56:       nouSegon = 1;
  2770  00188C  8A75               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2771                           
  2772                           ;Hora.c: 58:      hora[4]--;
  2773  00188E  065A               	decf	(_hora+4)^0,f,c
  2774                           
  2775                           ;Hora.c: 59:      if(hora[4] == ('0'-1)){
  2776  001890  0E2F               	movlw	47
  2777  001892  185A               	xorwf	(_hora+4)^0,w,c
  2778  001894  E103               	bnz	l5319
  2779                           
  2780                           ;Hora.c: 60:       hora[4] = '9';
  2781  001896  0E39               	movlw	57
  2782  001898  6E5A               	movwf	(_hora+4)^0,c
  2783                           
  2784                           ;Hora.c: 61:       hora[tres]--;
  2785  00189A  0659               	decf	(_hora+3)^0,f,c
  2786  00189C                     l5319:
  2787                           
  2788                           ;Hora.c: 64:      if(hora[tres] == ('0'-1)){
  2789  00189C  0E2F               	movlw	47
  2790  00189E  1859               	xorwf	(_hora+3)^0,w,c
  2791  0018A0  E103               	bnz	l5325
  2792                           
  2793                           ;Hora.c: 65:       hora[tres] = '5';
  2794  0018A2  0E35               	movlw	53
  2795  0018A4  6E59               	movwf	(_hora+3)^0,c
  2796                           
  2797                           ;Hora.c: 66:       hora[1]--;
  2798  0018A6  0657               	decf	(_hora+1)^0,f,c
  2799  0018A8                     l5325:
  2800                           
  2801                           ;Hora.c: 69:      if(hora[1] == ('0'-1)){
  2802  0018A8  0E2F               	movlw	47
  2803  0018AA  1857               	xorwf	(_hora+1)^0,w,c
  2804  0018AC  E103               	bnz	l5331
  2805                           
  2806                           ;Hora.c: 70:       hora[1] = '9';
  2807  0018AE  0E39               	movlw	57
  2808  0018B0  6E57               	movwf	(_hora+1)^0,c
  2809                           
  2810                           ;Hora.c: 71:       hora[0]--;
  2811  0018B2  0656               	decf	_hora^0,f,c
  2812  0018B4                     l5331:
  2813                           
  2814                           ;Hora.c: 74:      if(hora[0] == '0' && hora[1] == '0' && hora[tres] == '0' && hora[4] ==
      +                           ('0')){
  2815  0018B4  0E30               	movlw	48
  2816  0018B6  1856               	xorwf	_hora^0,w,c
  2817  0018B8  E10A               	bnz	l5341
  2818  0018BA  0E30               	movlw	48
  2819  0018BC  1857               	xorwf	(_hora+1)^0,w,c
  2820  0018BE  E107               	bnz	l5341
  2821  0018C0  0E30               	movlw	48
  2822  0018C2  1859               	xorwf	(_hora+3)^0,w,c
  2823  0018C4  E104               	bnz	l5341
  2824  0018C6  0E30               	movlw	48
  2825  0018C8  185A               	xorwf	(_hora+4)^0,w,c
  2826  0018CA  E101               	bnz	l5341
  2827                           
  2828                           ;Hora.c: 75:       tempsAcabat = 1;
  2829  0018CC  8875               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2830  0018CE                     l5341:
  2831                           
  2832                           ;Hora.c: 78:      segons++;
  2833  0018CE  2A15               	incf	_segons^0,f,c
  2834                           
  2835                           ;Hora.c: 79:      if(segons > cinquantanou){
  2836  0018D0  0E3B               	movlw	59
  2837  0018D2  6415               	cpfsgt	_segons^0,c
  2838  0018D4  D003               	goto	l5349
  2839                           
  2840                           ;Hora.c: 80:       playAltaveu();
  2841  0018D6  EC98  F000         	call	_playAltaveu	;wreg free
  2842                           
  2843                           ;Hora.c: 81:       segons = 0;
  2844  0018DA  6A15               	clrf	_segons^0,c
  2845  0018DC                     l5349:
  2846                           
  2847                           ;Hora.c: 84:     state = 0;
  2848  0018DC  6A14               	clrf	motorHora@state^0,c
  2849  0018DE  0012               	return	
  2850  0018E0                     l5353:
  2851  0018E0  5014               	movf	motorHora@state^0,w,c
  2852  0018E2  6E6B               	movwf	??_motorHora^0,c
  2853  0018E4  6A6C               	clrf	(??_motorHora+1)^0,c
  2854                           
  2855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2856                           ; Switch size 1, requested type "space"
  2857                           ; Number of cases is 1, Range of values is 0 to 0
  2858                           ; switch strategies available:
  2859                           ; Name         Instructions Cycles
  2860                           ; simple_byte            4     3 (average)
  2861                           ;	Chosen strategy is simple_byte
  2862  0018E6  506C               	movf	(??_motorHora+1)^0,w,c
  2863  0018E8  A4D8               	btfss	status,2,c
  2864  0018EA  0012               	return	
  2865                           
  2866                           ; Switch size 1, requested type "space"
  2867                           ; Number of cases is 1, Range of values is 0 to 0
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte            4     3 (average)
  2871                           ;	Chosen strategy is simple_byte
  2872  0018EC  506B               	movf	??_motorHora^0,w,c
  2873  0018EE  E0C0               	bz	l5303
  2874  0018F0  0012               	return		;funcret
  2875  0018F2                     __end_of_motorHora:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function _playAltaveu *****************
  2879 ;; Defined at:
  2880 ;;		line 13 in file "Altaveu.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1
  2894 ;;      Params:         0       0       0
  2895 ;;      Locals:         0       0       0
  2896 ;;      Temps:          0       0       0
  2897 ;;      Totals:         0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 2
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_motorHora
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text17
  2909  000130                     __ptext17:
  2910                           	callstack 0
  2911  000130                     _playAltaveu:
  2912                           	callstack 27
  2913                           
  2914                           ;Altaveu.c: 14:     reproduir = 1;
  2915                           
  2916                           ;incstack = 0
  2917  000130  8676               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2918  000132  0012               	return		;funcret
  2919  000134                     __end_of_playAltaveu:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _motorAltaveu *****************
  2923 ;; Defined at:
  2924 ;;		line 16 in file "Altaveu.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1
  2938 ;;      Params:         0       0       0
  2939 ;;      Locals:         0       0       0
  2940 ;;      Temps:          3       0       0
  2941 ;;      Totals:         3       0       0
  2942 ;;Total ram usage:        3 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		_TiGetTics
  2947 ;;		_TiResetTics
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text18
  2954  0017DC                     __ptext18:
  2955                           	callstack 0
  2956  0017DC                     _motorAltaveu:
  2957                           	callstack 27
  2958                           
  2959                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2960                           
  2961                           ;incstack = 0
  2962  0017DC  D02F               	goto	l5927
  2963  0017DE                     l897:
  2964                           
  2965                           ;Altaveu.c: 21:    if (reproduir) {
  2966  0017DE  A676               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2967  0017E0  0012               	return	
  2968                           
  2969                           ;Altaveu.c: 22:     nota = 1;
  2970  0017E2  0E01               	movlw	1
  2971  0017E4  6E26               	movwf	_nota^0,c
  2972                           
  2973                           ;Altaveu.c: 23:     copsNota = 0;
  2974  0017E6  6A24               	clrf	_copsNota^0,c
  2975                           
  2976                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2977  0017E8  5025               	movf	_timerAltaveu^0,w,c
  2978  0017EA  EC75  F00F         	call	_TiResetTics
  2979                           
  2980                           ;Altaveu.c: 25:     state = 1;
  2981  0017EE  0E01               	movlw	1
  2982  0017F0  6E23               	movwf	motorAltaveu@state^0,c
  2983  0017F2  0C01               	retlw	1
  2984  0017F4                     l5895:
  2985                           
  2986                           ;Altaveu.c: 29:    if (nota > 5) {
  2987  0017F4  0E05               	movlw	5
  2988  0017F6  6426               	cpfsgt	_nota^0,c
  2989  0017F8  D003               	goto	l5901
  2990                           
  2991                           ;Altaveu.c: 30:     reproduir = 0;
  2992  0017FA  9676               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2993  0017FC                     l5899:
  2994                           
  2995                           ;Altaveu.c: 31:     state--;
  2996  0017FC  0623               	decf	motorAltaveu@state^0,f,c
  2997                           
  2998                           ;Altaveu.c: 32:    }
  2999  0017FE  0012               	return	
  3000  001800                     l5901:
  3001  001800  0EA8               	movlw	168
  3002  001802  1824               	xorwf	_copsNota^0,w,c
  3003  001804  E103               	bnz	l5907
  3004                           
  3005                           ;Altaveu.c: 34:     nota++;
  3006  001806  2A26               	incf	_nota^0,f,c
  3007                           
  3008                           ;Altaveu.c: 35:     copsNota = 0;
  3009  001808  6A24               	clrf	_copsNota^0,c
  3010                           
  3011                           ;Altaveu.c: 36:    }
  3012  00180A  0012               	return	
  3013  00180C                     l5907:
  3014  00180C  5025               	movf	_timerAltaveu^0,w,c
  3015  00180E  ECDC  F00E         	call	_TiGetTics
  3016  001812  D821               	call	PL18	;call to abstracted procedure
  3017  001814  B0D8               	btfsc	status,0,c
  3018  001816  0012               	return	
  3019                           
  3020                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3021  001818  808A               	bsf	138,0,c	;volatile
  3022                           
  3023                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3024  00181A  5025               	movf	_timerAltaveu^0,w,c
  3025  00181C  EC75  F00F         	call	_TiResetTics
  3026                           
  3027                           ;Altaveu.c: 40:     state++;
  3028  001820  2A23               	incf	motorAltaveu@state^0,f,c
  3029  001822  0012               	return	
  3030  001824                     l5915:
  3031                           
  3032                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3033  001824  5025               	movf	_timerAltaveu^0,w,c
  3034  001826  ECDC  F00E         	call	_TiGetTics
  3035  00182A  D815               	call	PL18	;call to abstracted procedure
  3036  00182C  B0D8               	btfsc	status,0,c
  3037  00182E  0012               	return	
  3038                           
  3039                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3040  001830  908A               	bcf	138,0,c	;volatile
  3041                           
  3042                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3043  001832  5025               	movf	_timerAltaveu^0,w,c
  3044  001834  EC75  F00F         	call	_TiResetTics
  3045                           
  3046                           ;Altaveu.c: 47:     copsNota++;
  3047  001838  2A24               	incf	_copsNota^0,f,c
  3048  00183A  D7E0               	goto	l5899
  3049  00183C                     l5927:
  3050  00183C  5023               	movf	motorAltaveu@state^0,w,c
  3051  00183E  6E6B               	movwf	??_motorAltaveu^0,c
  3052  001840  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "space"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061  001842  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3062  001844  A4D8               	btfss	status,2,c
  3063  001846  0012               	return	
  3064                           
  3065                           ; Switch size 1, requested type "space"
  3066                           ; Number of cases is 3, Range of values is 0 to 2
  3067                           ; switch strategies available:
  3068                           ; Name         Instructions Cycles
  3069                           ; simple_byte           10     6 (average)
  3070                           ;	Chosen strategy is simple_byte
  3071  001848  506B               	movf	??_motorAltaveu^0,w,c
  3072  00184A  E0C9               	bz	l897
  3073  00184C  0A01               	xorlw	1	; case 1
  3074  00184E  E0D2               	bz	l5895
  3075  001850  0A03               	xorlw	3	; case 2
  3076  001852  E0E8               	bz	l5915
  3077  001854  0012               	return		;funcret
  3078  001856                     __end_of_motorAltaveu:
  3079                           	callstack 0
  3080  001856                     PL18:
  3081                           	callstack 27
  3082  001856  5026               	movf	_nota^0,w,c
  3083  001858  6E6B               	movwf	??_motorAltaveu^0,c
  3084  00185A  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3085  00185C  5064               	movf	?_TiGetTics^0,w,c
  3086  00185E  5C6B               	subwf	??_motorAltaveu^0,w,c
  3087  001860  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3088  001862  0A80               	xorlw	128
  3089  001864  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  3090  001866  5065               	movf	(?_TiGetTics+1)^0,w,c
  3091  001868  0A80               	xorlw	128
  3092  00186A  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  3093  00186C  0012               	return	
  3094  00186E                     __end_ofPL18:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _menu *****************
  3098 ;; Defined at:
  3099 ;;		line 42 in file "Menu.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1
  3113 ;;      Params:         0       0       0
  3114 ;;      Locals:         0       0       0
  3115 ;;      Temps:          0       5       0
  3116 ;;      Totals:         0       5       0
  3117 ;;Total ram usage:        5 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 6
  3120 ;; This function calls:
  3121 ;;		_CToAConverteix
  3122 ;;		_CToAHaAcabat
  3123 ;;		_CToAobtenir
  3124 ;;		_GLCDMostraMenu
  3125 ;;		_HActualitzaHora
  3126 ;;		_JJuguem
  3127 ;;		_JendGame
  3128 ;;		_JnovaDireccio
  3129 ;;		_JnovaTecla
  3130 ;;		_LcClear
  3131 ;;		_LcGotoXY
  3132 ;;		_LcLliure
  3133 ;;		_LcNewString
  3134 ;;		_LcPutChar
  3135 ;;		_LcScroll
  3136 ;;		_NoFerMenu
  3137 ;;		_SIOHaAcabatPuntuacions
  3138 ;;		_SMSoff
  3139 ;;		_SMSon
  3140 ;;		_SiFerMenu
  3141 ;;		_TiGetTics
  3142 ;;		_TiResetTics
  3143 ;;		_URegister
  3144 ;;		_UcheckExists
  3145 ;;		_UcheckExistsGetError
  3146 ;;		_UcheckExistsNotFinished
  3147 ;;		_UenviaChar
  3148 ;;		_UenviaPas
  3149 ;;		_UgetNumUsuaris
  3150 ;;		_UgetScore
  3151 ;;		_UgetTop5
  3152 ;;		_UgetUserName
  3153 ;;		_UshowUsersCalculat
  3154 ;;		_calculateShowUsers
  3155 ;;		_checkHoraAcabat
  3156 ;;		_getArrayShowUsers
  3157 ;;		_miraPassword
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text19
  3164  0002E2                     __ptext19:
  3165                           	callstack 0
  3166  0002E2                     _menu:
  3167                           	callstack 24
  3168                           
  3169                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3170                           
  3171                           ;incstack = 0
  3172  0002E2  D2EA               	goto	l7113
  3173  0002E4                     l6595:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;Menu.c: 46:    LcClear();
  3177  0002E4  EC37  F00F         	call	_LcClear	;wreg free
  3178                           
  3179                           ;Menu.c: 47:    LcNewString(loginText);
  3180  0002E8  0EDB               	movlw	low _loginText
  3181  0002EA  6E67               	movwf	LcNewString@new_s^0,c
  3182  0002EC  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3183  0002EE  EC2D  F000         	call	_LcNewString	;wreg free
  3184                           
  3185                           ;Menu.c: 48:    state = 1;
  3186  0002F2  0E01               	movlw	1
  3187  0002F4  6E2E               	movwf	menu@state^0,c
  3188                           
  3189                           ;Menu.c: 49:   break;
  3190  0002F6  0C01               	retlw	1
  3191  0002F8                     l6601:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;Menu.c: 51:    if (LcLliure()) {
  3195  0002F8  EC33  F000         	call	_LcLliure	;wreg free
  3196  0002FC  A0D8               	btfss	status,0,c
  3197  0002FE  0012               	return	
  3198                           
  3199                           ;Menu.c: 52:     LcGotoXY(0,1);
  3200  000300  DB5D               	call	PL32	;call to abstracted procedure
  3201  000302  EC71  F00E         	call	_LcGotoXY
  3202                           
  3203                           ;Menu.c: 53:     LcNewString(registerText);
  3204  000306  0ED0               	movlw	low _registerText
  3205  000308  6E67               	movwf	LcNewString@new_s^0,c
  3206  00030A  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3207  00030C  EC2D  F000         	call	_LcNewString	;wreg free
  3208  000310                     l6607:
  3209                           
  3210                           ;Menu.c: 54:     NovaTecla = -1;
  3211  000310  6852               	setf	_NovaTecla^0,c
  3212  000312                     l6609:
  3213                           
  3214                           ;Menu.c: 55:     state++;
  3215  000312  2A2E               	incf	menu@state^0,f,c
  3216                           
  3217                           ;Menu.c: 57:   break;
  3218                           
  3219                           ;Menu.c: 56:    }
  3220  000314  0012               	return	
  3221  000316                     l6611:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3225  000316  0452               	decf	_NovaTecla^0,w,c
  3226  000318  E102               	bnz	l6617
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;Menu.c: 60:     loginNOTRegister = 1;
  3230  00031A  8077               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3231  00031C  D7FA               	goto	l6609
  3232  00031E                     l6617:
  3233                           
  3234                           ; BSR set to: 0
  3235  00031E  0E02               	movlw	2
  3236  000320  1852               	xorwf	_NovaTecla^0,w,c
  3237  000322  A4D8               	btfss	status,2,c
  3238  000324  0012               	return	
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;Menu.c: 64:     loginNOTRegister = 0;
  3242  000326  9077               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3243  000328  D7F4               	goto	l6609
  3244  00032A                     l542:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;Menu.c: 69:    NovaTecla = -1;
  3248  00032A  6852               	setf	_NovaTecla^0,c
  3249                           
  3250                           ;Menu.c: 70:    novaLletra = -1;
  3251  00032C  6851               	setf	_novaLletra^0,c
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;Menu.c: 71:    LcClear();
  3255  00032E  EC37  F00F         	call	_LcClear	;wreg free
  3256                           
  3257                           ;Menu.c: 72:    LcNewString("USER: ");
  3258  000332  0EDA               	movlw	low STR_1
  3259  000334  DB38               	call	PL10	;call to abstracted procedure
  3260  000336  EC2D  F000         	call	_LcNewString	;wreg free
  3261  00033A  D7EB               	goto	l6609
  3262  00033C                     l6629:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;Menu.c: 76:    if (LcLliure()) {
  3266  00033C  EC33  F000         	call	_LcLliure	;wreg free
  3267  000340  A0D8               	btfss	status,0,c
  3268  000342  0012               	return	
  3269                           
  3270                           ;Menu.c: 77:     LcGotoXY(0,1);
  3271  000344  DB3B               	call	PL32	;call to abstracted procedure
  3272  000346  EC71  F00E         	call	_LcGotoXY
  3273                           
  3274                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3275  00034A  0ED3               	movlw	low STR_2
  3276  00034C  DB2C               	call	PL10	;call to abstracted procedure
  3277  00034E  EC2D  F000         	call	_LcNewString	;wreg free
  3278  000352  D7DF               	goto	l6609
  3279  000354                     l6637:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;Menu.c: 83:    if (LcLliure()) {
  3283  000354  EC33  F000         	call	_LcLliure	;wreg free
  3284  000358  A0D8               	btfss	status,0,c
  3285  00035A  0012               	return	
  3286                           
  3287                           ;Menu.c: 84:     LcGotoXY(6,0);
  3288  00035C  0E00               	movlw	0
  3289  00035E  6E6C               	movwf	LcGotoXY@Row^0,c
  3290  000360  0E06               	movlw	6
  3291  000362  EC71  F00E         	call	_LcGotoXY
  3292                           
  3293                           ;Menu.c: 85:     SMSon();
  3294  000366  EC85  F000         	call	_SMSon	;wreg free
  3295  00036A                     l6643:
  3296                           
  3297                           ;Menu.c: 86:     tmp =0;
  3298  00036A  6A33               	clrf	_tmp^0,c
  3299  00036C  D7D2               	goto	l6609
  3300  00036E                     l6647:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3304  00036E  5051               	movf	_novaLletra^0,w,c
  3305  000370  0A80               	xorlw	128
  3306  000372  0F60               	addlw	-160
  3307  000374  E30C               	bnc	l6657
  3308                           
  3309                           ; BSR set to: 0
  3310  000376  0E0A               	movlw	10
  3311  000378  1852               	xorwf	_NovaTecla^0,w,c
  3312  00037A  E009               	bz	l6657
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3316  00037C  5051               	movf	_novaLletra^0,w,c
  3317  00037E  ECB5  F00D         	call	_LcPutChar
  3318                           
  3319                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3320  000382  C033  F064         	movff	_tmp,UenviaChar@pos
  3321  000386  5051               	movf	_novaLletra^0,w,c
  3322  000388  ECCD  F00F         	call	_UenviaChar
  3323  00038C  D7C2               	goto	l6609
  3324  00038E                     l6657:
  3325                           
  3326                           ; BSR set to: 0
  3327  00038E  0E0B               	movlw	11
  3328  000390  1852               	xorwf	_NovaTecla^0,w,c
  3329  000392  E0BF               	bz	l6609
  3330  000394  0012               	return	
  3331  000396                     l6661:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3335  000396  0E07               	movlw	7
  3336  000398  1833               	xorwf	_tmp^0,w,c
  3337  00039A  E008               	bz	l6671
  3338                           
  3339                           ; BSR set to: 0
  3340  00039C  0E0B               	movlw	11
  3341  00039E  1852               	xorwf	_NovaTecla^0,w,c
  3342  0003A0  E005               	bz	l6671
  3343  0003A2                     u6960:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;Menu.c: 102:     tmp++;
  3347  0003A2  2A33               	incf	_tmp^0,f,c
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;Menu.c: 103:     NovaTecla = -1;
  3351  0003A4  6852               	setf	_NovaTecla^0,c
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;Menu.c: 104:     novaLletra = -1;
  3355  0003A6  6851               	setf	_novaLletra^0,c
  3356                           
  3357                           ;Menu.c: 105:     state--;
  3358  0003A8  062E               	decf	menu@state^0,f,c
  3359                           
  3360                           ;Menu.c: 106:    }
  3361  0003AA  0012               	return	
  3362  0003AC                     l6671:
  3363                           
  3364                           ; BSR set to: 0
  3365  0003AC  0E07               	movlw	7
  3366  0003AE  1833               	xorwf	_tmp^0,w,c
  3367  0003B0  E004               	bz	u6980
  3368                           
  3369                           ; BSR set to: 0
  3370  0003B2  0E0B               	movlw	11
  3371  0003B4  1852               	xorwf	_NovaTecla^0,w,c
  3372  0003B6  A4D8               	btfss	status,2,c
  3373  0003B8  0012               	return	
  3374  0003BA                     u6980:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;Menu.c: 108:     LcGotoXY(6,1);
  3378  0003BA  0E01               	movlw	1
  3379  0003BC  6E6C               	movwf	LcGotoXY@Row^0,c
  3380  0003BE  0E06               	movlw	6
  3381  0003C0  EC71  F00E         	call	_LcGotoXY
  3382                           
  3383                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3384  0003C4  C033  F064         	movff	_tmp,UenviaChar@pos
  3385  0003C8  0E00               	movlw	0
  3386  0003CA  ECCD  F00F         	call	_UenviaChar
  3387                           
  3388                           ;Menu.c: 110:     NovaTecla = -1;
  3389  0003CE  6852               	setf	_NovaTecla^0,c
  3390                           
  3391                           ;Menu.c: 111:     novaLletra = -1;
  3392  0003D0  6851               	setf	_novaLletra^0,c
  3393  0003D2  D7CB               	goto	l6643
  3394  0003D4                     l6687:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3398  0003D4  5051               	movf	_novaLletra^0,w,c
  3399  0003D6  0A80               	xorlw	128
  3400  0003D8  0F60               	addlw	-160
  3401  0003DA  E30C               	bnc	l6697
  3402                           
  3403                           ; BSR set to: 0
  3404  0003DC  0E0A               	movlw	10
  3405  0003DE  1852               	xorwf	_NovaTecla^0,w,c
  3406  0003E0  E009               	bz	l6697
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3410  0003E2  5051               	movf	_novaLletra^0,w,c
  3411  0003E4  ECB5  F00D         	call	_LcPutChar
  3412                           
  3413                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3414  0003E8  C033  F064         	movff	_tmp,UenviaPas@pos
  3415  0003EC  5051               	movf	_novaLletra^0,w,c
  3416  0003EE  ECC5  F00F         	call	_UenviaPas
  3417  0003F2  D78F               	goto	l6609
  3418  0003F4                     l6697:
  3419                           
  3420                           ; BSR set to: 0
  3421  0003F4  0E0B               	movlw	11
  3422  0003F6  1852               	xorwf	_NovaTecla^0,w,c
  3423  0003F8  E08C               	bz	l6609
  3424  0003FA  0012               	return	
  3425  0003FC                     l6701:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3429  0003FC  0E07               	movlw	7
  3430  0003FE  1833               	xorwf	_tmp^0,w,c
  3431  000400  E003               	bz	l6711
  3432                           
  3433                           ; BSR set to: 0
  3434  000402  0E0B               	movlw	11
  3435  000404  1852               	xorwf	_NovaTecla^0,w,c
  3436  000406  E1CD               	bnz	u6960
  3437  000408                     l6711:
  3438                           
  3439                           ; BSR set to: 0
  3440  000408  0E07               	movlw	7
  3441  00040A  1833               	xorwf	_tmp^0,w,c
  3442  00040C  E004               	bz	u7050
  3443                           
  3444                           ; BSR set to: 0
  3445  00040E  0E0B               	movlw	11
  3446  000410  1852               	xorwf	_NovaTecla^0,w,c
  3447  000412  A4D8               	btfss	status,2,c
  3448  000414  0012               	return	
  3449  000416                     u7050:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3453  000416  C033  F064         	movff	_tmp,UenviaPas@pos
  3454  00041A  0E00               	movlw	0
  3455  00041C  ECC5  F00F         	call	_UenviaPas
  3456                           
  3457                           ;Menu.c: 135:     NovaTecla = -1;
  3458  000420  6852               	setf	_NovaTecla^0,c
  3459                           
  3460                           ;Menu.c: 136:     novaLletra = -1;
  3461  000422  6851               	setf	_novaLletra^0,c
  3462                           
  3463                           ;Menu.c: 137:     tmp = 0;
  3464  000424  6A33               	clrf	_tmp^0,c
  3465                           
  3466                           ;Menu.c: 138:     UcheckExists();
  3467  000426  ECA0  F000         	call	_UcheckExists	;wreg free
  3468                           
  3469                           ;Menu.c: 139:     SMSoff();
  3470  00042A  EC88  F000         	call	_SMSoff	;wreg free
  3471  00042E  D771               	goto	l6609
  3472  000430                     l6729:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3476  000430  EC1B  F000         	call	_UcheckExistsNotFinished	;wreg free
  3477  000434  B0D8               	btfsc	status,0,c
  3478  000436  0012               	return	
  3479                           
  3480                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3481  000438  EC9E  F000         	call	_UcheckExistsGetError	;wreg free
  3482  00043C  6E30               	movwf	_indexUsuari^0,c
  3483  00043E  D769               	goto	l6609
  3484  000440                     l569:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3488  000440  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3489  000442  D006               	goto	l570
  3490                           
  3491                           ; BSR set to: 0
  3492  000444  2830               	incf	_indexUsuari^0,w,c
  3493  000446  E104               	bnz	l570
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;Menu.c: 151:     URegister();
  3497  000448  ECA2  F000         	call	_URegister	;wreg free
  3498  00044C                     l6739:
  3499                           
  3500                           ;Menu.c: 152:     state = 0;
  3501  00044C  6A2E               	clrf	menu@state^0,c
  3502                           
  3503                           ;Menu.c: 153:    }
  3504  00044E  0012               	return	
  3505  000450                     l570:
  3506                           
  3507                           ; BSR set to: 0
  3508  000450  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3509                           
  3510                           ; BSR set to: 0
  3511  000452  BE30               	btfsc	_indexUsuari^0,7,c
  3512  000454  D004               	goto	l572
  3513                           
  3514                           ; BSR set to: 0
  3515  000456  EC01  F00F         	call	_miraPassword	;wreg free
  3516  00045A  E301 D75A          	bc	l6609
  3517  00045E                     l572:
  3518  00045E  A077               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3519  000460  D002               	goto	u7130
  3520  000462  2830               	incf	_indexUsuari^0,w,c
  3521  000464  E0F3               	bz	l6739
  3522  000466                     u7130:
  3523  000466  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3524  000468  D002               	goto	u7150
  3525  00046A  AE30               	btfss	_indexUsuari^0,7,c
  3526  00046C  D7EF               	goto	l6739
  3527  00046E                     u7150:
  3528  00046E  EC01  F00F         	call	_miraPassword	;wreg free
  3529  000472  E3EC               	bnc	l6739
  3530  000474  0012               	return	
  3531  000476                     l6753:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;Menu.c: 162:    LcClear();
  3535  000476  EC37  F00F         	call	_LcClear	;wreg free
  3536                           
  3537                           ;Menu.c: 163:    SiFerMenu();
  3538  00047A  ECA4  F000         	call	_SiFerMenu	;wreg free
  3539                           
  3540                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3541  00047E  5031               	movf	_menuDalt^0,w,c
  3542  000480  EC21  F000         	call	_GLCDMostraMenu
  3543                           
  3544                           ;Menu.c: 165:    novaDireccio = -1;
  3545  000484  6850               	setf	_novaDireccio^0,c
  3546  000486  D744               	goto	l6607
  3547  000488                     l6765:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3551  000488  0E08               	movlw	8
  3552  00048A  1850               	xorwf	_novaDireccio^0,w,c
  3553  00048C  E106               	bnz	l6771
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3557  00048E  0E04               	movlw	4
  3558  000490  6031               	cpfslt	_menuDalt^0,c
  3559  000492  D001               	goto	l584
  3560                           
  3561                           ; BSR set to: 0
  3562  000494  2A31               	incf	_menuDalt^0,f,c
  3563  000496                     l584:
  3564                           
  3565                           ;Menu.c: 172:     state--;
  3566  000496  062E               	decf	menu@state^0,f,c
  3567                           
  3568                           ;Menu.c: 173:    }
  3569  000498  0012               	return	
  3570  00049A                     l6771:
  3571                           
  3572                           ; BSR set to: 0
  3573  00049A  0E02               	movlw	2
  3574  00049C  1850               	xorwf	_novaDireccio^0,w,c
  3575  00049E  E104               	bnz	l6777
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3579  0004A0  5031               	movf	_menuDalt^0,w,c
  3580  0004A2  E0F9               	bz	l584
  3581                           
  3582                           ; BSR set to: 0
  3583  0004A4  0631               	decf	_menuDalt^0,f,c
  3584  0004A6  D7F7               	goto	l584
  3585  0004A8                     l6777:
  3586                           
  3587                           ; BSR set to: 0
  3588  0004A8  0E0B               	movlw	11
  3589  0004AA  1852               	xorwf	_NovaTecla^0,w,c
  3590  0004AC  E10C               	bnz	l6789
  3591                           
  3592                           ; BSR set to: 0
  3593  0004AE  0E03               	movlw	3
  3594  0004B0  1831               	xorwf	_menuDalt^0,w,c
  3595  0004B2  E109               	bnz	l6789
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;Menu.c: 179:     NoFerMenu();
  3599  0004B4  ECA8  F000         	call	_NoFerMenu	;wreg free
  3600                           
  3601                           ;Menu.c: 180:     LcClear();
  3602  0004B8  EC37  F00F         	call	_LcClear	;wreg free
  3603                           
  3604                           ;Menu.c: 181:     LcNewString("BYE BYE");
  3605  0004BC  0ECB               	movlw	low STR_3
  3606  0004BE  DA73               	call	PL10	;call to abstracted procedure
  3607  0004C0  EC2D  F000         	call	_LcNewString	;wreg free
  3608  0004C4  D726               	goto	l6609
  3609  0004C6                     l6789:
  3610                           
  3611                           ; BSR set to: 0
  3612  0004C6  0E0B               	movlw	11
  3613  0004C8  1852               	xorwf	_NovaTecla^0,w,c
  3614  0004CA  E10E               	bnz	l6803
  3615                           
  3616                           ; BSR set to: 0
  3617  0004CC  0431               	decf	_menuDalt^0,w,c
  3618  0004CE  E10C               	bnz	l6803
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;Menu.c: 185:     LcClear();
  3622  0004D0  EC37  F00F         	call	_LcClear	;wreg free
  3623                           
  3624                           ;Menu.c: 186:     NoFerMenu();
  3625  0004D4  ECA8  F000         	call	_NoFerMenu	;wreg free
  3626                           
  3627                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3628  0004D8  0EA2               	movlw	low STR_4
  3629  0004DA  DA65               	call	PL10	;call to abstracted procedure
  3630  0004DC  EC2D  F000         	call	_LcNewString	;wreg free
  3631                           
  3632                           ;Menu.c: 188:     NovaTecla = -1;
  3633  0004E0  6852               	setf	_NovaTecla^0,c
  3634                           
  3635                           ;Menu.c: 189:     state = 16;
  3636  0004E2  0E10               	movlw	16
  3637  0004E4  6E2E               	movwf	menu@state^0,c
  3638                           
  3639                           ;Menu.c: 190:    }
  3640  0004E6  0C10               	retlw	16
  3641  0004E8                     l6803:
  3642                           
  3643                           ; BSR set to: 0
  3644  0004E8  5031               	movf	_menuDalt^0,w,c
  3645  0004EA  E112               	bnz	l6819
  3646                           
  3647                           ; BSR set to: 0
  3648  0004EC  0E0B               	movlw	11
  3649  0004EE  1852               	xorwf	_NovaTecla^0,w,c
  3650  0004F0  E10F               	bnz	l6819
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;Menu.c: 192:     NoFerMenu();
  3654  0004F2  ECA8  F000         	call	_NoFerMenu	;wreg free
  3655                           
  3656                           ;Menu.c: 193:     NovaTecla = -1;
  3657  0004F6  6852               	setf	_NovaTecla^0,c
  3658                           
  3659                           ;Menu.c: 194:     LcClear();
  3660  0004F8  EC37  F00F         	call	_LcClear	;wreg free
  3661                           
  3662                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3663  0004FC  0E92               	movlw	low STR_5
  3664  0004FE  DA53               	call	PL10	;call to abstracted procedure
  3665  000500  EC2D  F000         	call	_LcNewString	;wreg free
  3666                           
  3667                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3668  000504  5030               	movf	_indexUsuari^0,w,c
  3669  000506  EC4E  F000         	call	_JJuguem
  3670                           
  3671                           ;Menu.c: 197:     state = 21;
  3672  00050A  0E15               	movlw	21
  3673  00050C  6E2E               	movwf	menu@state^0,c
  3674                           
  3675                           ;Menu.c: 198:    }
  3676  00050E  0C15               	retlw	21
  3677  000510                     l6819:
  3678                           
  3679                           ; BSR set to: 0
  3680  000510  0E0B               	movlw	11
  3681  000512  1852               	xorwf	_NovaTecla^0,w,c
  3682  000514  E10E               	bnz	l6835
  3683                           
  3684                           ; BSR set to: 0
  3685  000516  0E04               	movlw	4
  3686  000518  1831               	xorwf	_menuDalt^0,w,c
  3687  00051A  E10B               	bnz	l6835
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;Menu.c: 200:     NoFerMenu();
  3691  00051C  ECA8  F000         	call	_NoFerMenu	;wreg free
  3692                           
  3693                           ;Menu.c: 201:     LcClear();
  3694  000520  EC37  F00F         	call	_LcClear	;wreg free
  3695                           
  3696                           ;Menu.c: 202:     menuDalt = 0;
  3697  000524  6A31               	clrf	_menuDalt^0,c
  3698                           
  3699                           ;Menu.c: 203:     NovaTecla = -1;
  3700  000526  6852               	setf	_NovaTecla^0,c
  3701                           
  3702                           ;Menu.c: 204:     calculateShowUsers();
  3703  000528  EC9A  F000         	call	_calculateShowUsers	;wreg free
  3704                           
  3705                           ;Menu.c: 205:     state = 30;
  3706  00052C  0E1E               	movlw	30
  3707  00052E  6E2E               	movwf	menu@state^0,c
  3708                           
  3709                           ;Menu.c: 206:    }
  3710  000530  0C1E               	retlw	30
  3711  000532                     l6835:
  3712                           
  3713                           ; BSR set to: 0
  3714  000532  0E0B               	movlw	11
  3715  000534  1852               	xorwf	_NovaTecla^0,w,c
  3716  000536  A4D8               	btfss	status,2,c
  3717  000538  0012               	return	
  3718                           
  3719                           ; BSR set to: 0
  3720  00053A  0E02               	movlw	2
  3721  00053C  1831               	xorwf	_menuDalt^0,w,c
  3722  00053E  A4D8               	btfss	status,2,c
  3723  000540  0012               	return	
  3724                           
  3725                           ; BSR set to: 0
  3726  000542  0E00               	movlw	0
  3727  000544  ECB2  F00F         	call	_UgetTop5
  3728  000548  0AFF               	xorlw	255
  3729  00054A  B4D8               	btfsc	status,2,c
  3730  00054C  0012               	return	
  3731                           
  3732                           ;Menu.c: 208:     NoFerMenu();
  3733  00054E  ECA8  F000         	call	_NoFerMenu	;wreg free
  3734                           
  3735                           ;Menu.c: 209:     LcClear();
  3736  000552  EC37  F00F         	call	_LcClear	;wreg free
  3737                           
  3738                           ;Menu.c: 210:     menuDalt = 0;
  3739  000556  6A31               	clrf	_menuDalt^0,c
  3740                           
  3741                           ;Menu.c: 211:     NovaTecla = -1;
  3742  000558  6852               	setf	_NovaTecla^0,c
  3743  00055A                     l6849:
  3744                           
  3745                           ;Menu.c: 212:     state = 31;
  3746  00055A  0E1F               	movlw	31
  3747  00055C  6E2E               	movwf	menu@state^0,c
  3748  00055E  0C1F               	retlw	31
  3749  000560                     l6851:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;Menu.c: 216:    if (LcLliure()) {
  3753  000560  EC33  F000         	call	_LcLliure	;wreg free
  3754  000564  A0D8               	btfss	status,0,c
  3755  000566  0012               	return	
  3756                           
  3757                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3758  000568  5030               	movf	_indexUsuari^0,w,c
  3759  00056A  ECA8  F00F         	call	_UgetUserName
  3760  00056E  DA29               	call	PL42	;call to abstracted procedure
  3761  000570  EC2D  F000         	call	_LcNewString	;wreg free
  3762                           
  3763                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3764  000574  5032               	movf	_timerMenu^0,w,c
  3765  000576  EC75  F00F         	call	_TiResetTics
  3766  00057A  D6CB               	goto	l6609
  3767  00057C                     l6859:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3771  00057C  5032               	movf	_timerMenu^0,w,c
  3772  00057E  ECDC  F00E         	call	_TiGetTics
  3773  000582  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3774  000584  0012               	return	
  3775  000586  0E6B               	movlw	107
  3776  000588  5C64               	subwf	?_TiGetTics^0,w,c
  3777  00058A  0E09               	movlw	9
  3778  00058C  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3779  00058E  E301 D75D          	bc	l6739
  3780  000592  0012               	return	
  3781  000594                     l6863:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3785  000594  EC33  F000         	call	_LcLliure	;wreg free
  3786  000598  B0D8               	btfsc	status,0,c
  3787  00059A  BE52               	btfsc	_NovaTecla^0,7,c
  3788  00059C  0012               	return	
  3789  00059E  5052               	movf	_NovaTecla^0,w,c
  3790  0005A0  0A80               	xorlw	128
  3791  0005A2  0F76               	addlw	-138
  3792  0005A4  B0D8               	btfsc	status,0,c
  3793  0005A6  0012               	return	
  3794                           
  3795                           ;Menu.c: 229:     LcGotoXY(0,1);
  3796  0005A8  DA09               	call	PL32	;call to abstracted procedure
  3797  0005AA  EC71  F00E         	call	_LcGotoXY
  3798                           
  3799                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  3800  0005AE  5052               	movf	_NovaTecla^0,w,c
  3801  0005B0  0F30               	addlw	48
  3802  0005B2  6E41               	movwf	_horaTmp^0,c
  3803                           
  3804                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  3805  0005B4  5041               	movf	_horaTmp^0,w,c
  3806  0005B6  ECB5  F00D         	call	_LcPutChar
  3807  0005BA  D6AA               	goto	l6607
  3808  0005BC                     l6879:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3812  0005BC  BE52               	btfsc	_NovaTecla^0,7,c
  3813  0005BE  0012               	return	
  3814                           
  3815                           ; BSR set to: 0
  3816  0005C0  DA0B               	call	PL84	;call to abstracted procedure
  3817  0005C2  B0D8               	btfsc	status,0,c
  3818  0005C4  0012               	return	
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  3822  0005C6  5052               	movf	_NovaTecla^0,w,c
  3823  0005C8  0F30               	addlw	48
  3824  0005CA  6E42               	movwf	(_horaTmp+1)^0,c
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  3828  0005CC  5042               	movf	(_horaTmp+1)^0,w,c
  3829  0005CE  ECB5  F00D         	call	_LcPutChar
  3830                           
  3831                           ;Menu.c: 243:     NovaTecla = -1;
  3832  0005D2  6852               	setf	_NovaTecla^0,c
  3833                           
  3834                           ;Menu.c: 244:     LcPutChar(':');
  3835  0005D4  0E3A               	movlw	58
  3836  0005D6  ECB5  F00D         	call	_LcPutChar
  3837  0005DA  D69B               	goto	l6609
  3838  0005DC                     l6893:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  3842  0005DC  BE52               	btfsc	_NovaTecla^0,7,c
  3843  0005DE  0012               	return	
  3844                           
  3845                           ; BSR set to: 0
  3846  0005E0  D9FB               	call	PL84	;call to abstracted procedure
  3847  0005E2  B0D8               	btfsc	status,0,c
  3848  0005E4  0012               	return	
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  3852  0005E6  5052               	movf	_NovaTecla^0,w,c
  3853  0005E8  0F30               	addlw	48
  3854  0005EA  6E43               	movwf	(_horaTmp+2)^0,c
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  3858  0005EC  5043               	movf	(_horaTmp+2)^0,w,c
  3859  0005EE  ECB5  F00D         	call	_LcPutChar
  3860  0005F2  D68E               	goto	l6607
  3861  0005F4                     l6905:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  3865  0005F4  BE52               	btfsc	_NovaTecla^0,7,c
  3866  0005F6  0012               	return	
  3867                           
  3868                           ; BSR set to: 0
  3869  0005F8  D9EF               	call	PL84	;call to abstracted procedure
  3870  0005FA  B0D8               	btfsc	status,0,c
  3871  0005FC  0012               	return	
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  3875  0005FE  5052               	movf	_NovaTecla^0,w,c
  3876  000600  0F30               	addlw	48
  3877  000602  6E44               	movwf	(_horaTmp+3)^0,c
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  3881  000604  5044               	movf	(_horaTmp+3)^0,w,c
  3882  000606  ECB5  F00D         	call	_LcPutChar
  3883  00060A  D682               	goto	l6607
  3884  00060C                     l6917:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;Menu.c: 274:    if (NovaTecla == 11) {
  3888  00060C  0E0B               	movlw	11
  3889  00060E  1852               	xorwf	_NovaTecla^0,w,c
  3890  000610  E108               	bnz	l6925
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  3894  000612  0E41               	movlw	low _horaTmp
  3895  000614  6E64               	movwf	HActualitzaHora@nova^0,c
  3896  000616  EC13  F00F         	call	_HActualitzaHora	;wreg free
  3897                           
  3898                           ;Menu.c: 276:     NovaTecla = -1;
  3899  00061A  6852               	setf	_NovaTecla^0,c
  3900  00061C                     l6923:
  3901                           
  3902                           ;Menu.c: 277:     state = 12;
  3903  00061C  0E0C               	movlw	12
  3904  00061E  6E2E               	movwf	menu@state^0,c
  3905                           
  3906                           ;Menu.c: 278:    }
  3907  000620  0C0C               	retlw	12
  3908  000622                     l6925:
  3909                           
  3910                           ; BSR set to: 0
  3911  000622  0E0A               	movlw	10
  3912  000624  1852               	xorwf	_NovaTecla^0,w,c
  3913  000626  E0FA               	bz	l6923
  3914  000628  0012               	return	
  3915  00062A                     l6929:
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3919  00062A  0E0A               	movlw	10
  3920  00062C  1852               	xorwf	_NovaTecla^0,w,c
  3921  00062E  E103               	bnz	u7460
  3922                           
  3923                           ; BSR set to: 0
  3924  000630  EC33  F000         	call	_LcLliure	;wreg free
  3925  000634  E203               	bc	u7470
  3926  000636                     u7460:
  3927  000636  ECF0  F00F         	call	_checkHoraAcabat	;wreg free
  3928  00063A  E305               	bnc	l6941
  3929  00063C                     u7470:
  3930                           
  3931                           ;Menu.c: 285:     LcClear();
  3932  00063C  EC37  F00F         	call	_LcClear	;wreg free
  3933                           
  3934                           ;Menu.c: 286:     JendGame();
  3935  000640  ECAA  F000         	call	_JendGame	;wreg free
  3936  000644  D666               	goto	l6609
  3937  000646                     l6941:
  3938  000646  5052               	movf	_NovaTecla^0,w,c
  3939  000648  0A80               	xorlw	128
  3940  00064A  0F7F               	addlw	-129
  3941  00064C  E309               	bnc	l6949
  3942  00064E  5052               	movf	_NovaTecla^0,w,c
  3943  000650  0A80               	xorlw	128
  3944  000652  0F76               	addlw	-138
  3945  000654  E205               	bc	l6949
  3946                           
  3947                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  3948  000656  5052               	movf	_NovaTecla^0,w,c
  3949  000658  EC46  F000         	call	_JnovaTecla
  3950                           
  3951                           ;Menu.c: 291:     NovaTecla = -1;
  3952  00065C  6852               	setf	_NovaTecla^0,c
  3953                           
  3954                           ;Menu.c: 293:    }
  3955  00065E  0012               	return	
  3956  000660                     l6949:
  3957  000660  BE50               	btfsc	_novaDireccio^0,7,c
  3958  000662  0012               	return	
  3959                           
  3960                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  3961  000664  5050               	movf	_novaDireccio^0,w,c
  3962  000666  EC4A  F000         	call	_JnovaDireccio
  3963                           
  3964                           ;Menu.c: 296:     novaDireccio = -1;
  3965  00066A  6850               	setf	_novaDireccio^0,c
  3966  00066C  0012               	return	
  3967  00066E                     l6955:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3971  00066E  ECA6  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  3972  000672  0900               	iorlw	0
  3973  000674  B4D8               	btfsc	status,2,c
  3974  000676  0012               	return	
  3975  000678  0E0B               	movlw	11
  3976  00067A  D7D4               	goto	L1
  3977  00067C                     l6961:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;Menu.c: 306:    if (LcLliure()) {
  3981  00067C  EC33  F000         	call	_LcLliure	;wreg free
  3982  000680  A0D8               	btfss	status,0,c
  3983  000682  0012               	return	
  3984                           
  3985                           ;Menu.c: 307:     LcGotoXY(0,0);
  3986  000684  0E00               	movlw	0
  3987  000686  6E6C               	movwf	LcGotoXY@Row^0,c
  3988  000688  EC71  F00E         	call	_LcGotoXY
  3989                           
  3990                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  3991  00068C  5031               	movf	_menuDalt^0,w,c
  3992  00068E  EC59  F00F         	call	_getArrayShowUsers
  3993  000692  D98F               	call	PL28	;call to abstracted procedure
  3994  000694  EC2D  F000         	call	_LcNewString	;wreg free
  3995  000698                     l6965:
  3996                           
  3997                           ;Menu.c: 309:     menuDalt++;
  3998  000698  2A31               	incf	_menuDalt^0,f,c
  3999  00069A  D63B               	goto	l6609
  4000  00069C                     l6969:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;Menu.c: 314:    if (LcLliure()) {
  4004  00069C  EC33  F000         	call	_LcLliure	;wreg free
  4005  0006A0  A0D8               	btfss	status,0,c
  4006  0006A2  0012               	return	
  4007                           
  4008                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4009  0006A4  EC9C  F000         	call	_UgetNumUsuaris	;wreg free
  4010  0006A8  6031               	cpfslt	_menuDalt^0,c
  4011  0006AA  D00A               	goto	l630
  4012                           
  4013                           ;Menu.c: 316:       LcGotoXY(0,1);
  4014  0006AC  D987               	call	PL32	;call to abstracted procedure
  4015  0006AE  EC71  F00E         	call	_LcGotoXY
  4016                           
  4017                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4018  0006B2  5031               	movf	_menuDalt^0,w,c
  4019  0006B4  EC59  F00F         	call	_getArrayShowUsers
  4020  0006B8  D97C               	call	PL28	;call to abstracted procedure
  4021  0006BA  EC2D  F000         	call	_LcNewString	;wreg free
  4022  0006BE  D7EC               	goto	l6965
  4023  0006C0                     l630:
  4024                           
  4025                           ;Menu.c: 320:       menuDalt = 0;
  4026  0006C0  6A31               	clrf	_menuDalt^0,c
  4027  0006C2  D627               	goto	l6609
  4028  0006C4                     l6979:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;Menu.c: 326:    if (LcLliure()) {
  4032  0006C4  EC33  F000         	call	_LcLliure	;wreg free
  4033  0006C8  A0D8               	btfss	status,0,c
  4034  0006CA  0012               	return	
  4035                           
  4036                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4037  0006CC  EC9C  F000         	call	_UgetNumUsuaris	;wreg free
  4038  0006D0  1831               	xorwf	_menuDalt^0,w,c
  4039  0006D2  E101               	bnz	l6985
  4040                           
  4041                           ;Menu.c: 328:       menuDalt = 0;
  4042  0006D4  6A31               	clrf	_menuDalt^0,c
  4043  0006D6                     l6985:
  4044                           
  4045                           ;Menu.c: 330:     LcGotoXY(16,0);
  4046  0006D6  D987               	call	PL90	;call to abstracted procedure
  4047  0006D8  EC71  F00E         	call	_LcGotoXY
  4048                           
  4049                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4050  0006DC  5031               	movf	_menuDalt^0,w,c
  4051  0006DE  EC59  F00F         	call	_getArrayShowUsers
  4052  0006E2  D967               	call	PL28	;call to abstracted procedure
  4053  0006E4  EC2D  F000         	call	_LcNewString	;wreg free
  4054  0006E8  D614               	goto	l6609
  4055  0006EA                     l6989:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;Menu.c: 336:    if (LcLliure()) {
  4059  0006EA  EC33  F000         	call	_LcLliure	;wreg free
  4060  0006EE  A0D8               	btfss	status,0,c
  4061  0006F0  0012               	return	
  4062                           
  4063                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4064  0006F2  EC9C  F000         	call	_UgetNumUsuaris	;wreg free
  4065  0006F6  0100               	movlb	0	; () banked
  4066  0006F8  6FE3               	movwf	??_menu& (0+255),b
  4067  0006FA  6BE4               	clrf	(??_menu+1)& (0+255),b
  4068  0006FC  5031               	movf	_menuDalt^0,w,c
  4069  0006FE  6FE5               	movwf	(??_menu+2)& (0+255),b
  4070  000700  6BE6               	clrf	(??_menu+3)& (0+255),b
  4071  000702  2BE5               	incf	(??_menu+2)& (0+255),f,b
  4072  000704  0E00               	movlw	0
  4073  000706  23E6               	addwfc	(??_menu+3)& (0+255),f,b
  4074  000708  51E3               	movf	??_menu& (0+255),w,b
  4075  00070A  5DE5               	subwf	(??_menu+2)& (0+255),w,b
  4076  00070C  51E6               	movf	(??_menu+3)& (0+255),w,b
  4077  00070E  0A80               	xorlw	128
  4078  000710  6FE7               	movwf	(??_menu+4)& (0+255),b
  4079  000712  51E4               	movf	(??_menu+1)& (0+255),w,b
  4080  000714  0A80               	xorlw	128
  4081  000716  59E7               	subwfb	(??_menu+4)& (0+255),w,b
  4082  000718  E301 D5FB          	bc	l6609
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;Menu.c: 338:       LcGotoXY(16,1);
  4086  00071C  D961               	call	PL88	;call to abstracted procedure
  4087  00071E  EC71  F00E         	call	_LcGotoXY
  4088                           
  4089                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4090  000722  2831               	incf	_menuDalt^0,w,c
  4091  000724  EC59  F00F         	call	_getArrayShowUsers
  4092  000728  D944               	call	PL28	;call to abstracted procedure
  4093  00072A  EC2D  F000         	call	_LcNewString	;wreg free
  4094  00072E  D5F1               	goto	l6609
  4095  000730                     l6997:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4099  000730  5032               	movf	_timerMenu^0,w,c
  4100  000732  ECDC  F00E         	call	_TiGetTics
  4101  000736  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4102  000738  D006               	goto	l7001
  4103  00073A  0EB6               	movlw	182
  4104  00073C  5C64               	subwf	?_TiGetTics^0,w,c
  4105  00073E  0E04               	movlw	4
  4106  000740  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4107  000742  E301 D5E6          	bc	l6609
  4108  000746                     l7001:
  4109  000746  0E0B               	movlw	11
  4110  000748  1852               	xorwf	_NovaTecla^0,w,c
  4111  00074A  A4D8               	btfss	status,2,c
  4112  00074C  0012               	return	
  4113  00074E                     u7610:
  4114                           
  4115                           ;Menu.c: 349:     menuDalt = 0;
  4116  00074E  6A31               	clrf	_menuDalt^0,c
  4117  000750  D765               	goto	l6923
  4118  000752                     l7007:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;Menu.c: 354:    if (pos > 15) {
  4122  000752  0E0F               	movlw	15
  4123  000754  642F               	cpfsgt	_pos^0,c
  4124  000756  D005               	goto	l7013
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;Menu.c: 355:     LcClear();
  4128  000758  EC37  F00F         	call	_LcClear	;wreg free
  4129  00075C                     l7011:
  4130                           
  4131                           ;Menu.c: 356:     state = 23;
  4132  00075C  0E17               	movlw	23
  4133  00075E  6E2E               	movwf	menu@state^0,c
  4134                           
  4135                           ;Menu.c: 357:    }
  4136  000760  0C17               	retlw	23
  4137  000762                     l7013:
  4138                           
  4139                           ; BSR set to: 0
  4140  000762  0E10               	movlw	16
  4141  000764  602F               	cpfslt	_pos^0,c
  4142  000766  0C10               	retlw	16
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4146  000768  5032               	movf	_timerMenu^0,w,c
  4147  00076A  EC75  F00F         	call	_TiResetTics
  4148  00076E                     l7017:
  4149                           
  4150                           ;Menu.c: 360:     LcScroll();
  4151  00076E  EC8B  F000         	call	_LcScroll	;wreg free
  4152                           
  4153                           ;Menu.c: 361:     pos++;
  4154  000772  2A2F               	incf	_pos^0,f,c
  4155  000774  D690               	goto	l584
  4156  000776                     l7023:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;Menu.c: 366:    if (LcLliure()) {
  4160  000776  EC33  F000         	call	_LcLliure	;wreg free
  4161  00077A  A0D8               	btfss	status,0,c
  4162  00077C  0012               	return	
  4163                           
  4164                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4165  00077E  5032               	movf	_timerMenu^0,w,c
  4166  000780  EC75  F00F         	call	_TiResetTics
  4167                           
  4168                           ;Menu.c: 368:     pos = 0;
  4169  000784  6A2F               	clrf	_pos^0,c
  4170  000786  D5C5               	goto	l6609
  4171  000788                     l7031:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4175  000788  ECF6  F00F         	call	_UshowUsersCalculat	;wreg free
  4176  00078C  E2E7               	bc	l7011
  4177  00078E  0012               	return	
  4178  000790                     l7035:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;Menu.c: 378:    if (LcLliure()) {
  4182  000790  EC33  F000         	call	_LcLliure	;wreg free
  4183  000794  A0D8               	btfss	status,0,c
  4184  000796  0012               	return	
  4185                           
  4186                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4187  000798  5031               	movf	_menuDalt^0,w,c
  4188  00079A  ECB2  F00F         	call	_UgetTop5
  4189  00079E  ECA8  F00F         	call	_UgetUserName
  4190  0007A2  D90F               	call	PL42	;call to abstracted procedure
  4191  0007A4  EC2D  F000         	call	_LcNewString	;wreg free
  4192                           
  4193                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4194  0007A8  5031               	movf	_menuDalt^0,w,c
  4195  0007AA  ECB2  F00F         	call	_UgetTop5
  4196  0007AE  ECDD  F00F         	call	_UgetScore
  4197  0007B2  EC27  F000         	call	_CToAConverteix
  4198  0007B6  D5AD               	goto	l6609
  4199  0007B8                     l7041:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4203  0007B8  ECAE  F000         	call	_CToAHaAcabat	;wreg free
  4204  0007BC  0AFA               	xorlw	250
  4205  0007BE  A4D8               	btfss	status,2,c
  4206  0007C0  0012               	return	
  4207  0007C2  EC33  F000         	call	_LcLliure	;wreg free
  4208  0007C6  A0D8               	btfss	status,0,c
  4209  0007C8  0012               	return	
  4210                           
  4211                           ;Menu.c: 386:     LcPutChar(':');
  4212  0007CA  0E3A               	movlw	58
  4213  0007CC  ECB5  F00D         	call	_LcPutChar
  4214                           
  4215                           ;Menu.c: 387:     LcGotoXY(0,1);
  4216  0007D0  D8F5               	call	PL32	;call to abstracted procedure
  4217  0007D2  EC71  F00E         	call	_LcGotoXY
  4218                           
  4219                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4220  0007D6  ECAC  F000         	call	_CToAobtenir	;wreg free
  4221  0007DA  D8F8               	call	PL46	;call to abstracted procedure
  4222  0007DC  EC2D  F000         	call	_LcNewString	;wreg free
  4223                           
  4224                           ;Menu.c: 389:     menuDalt++;
  4225  0007E0  2A31               	incf	_menuDalt^0,f,c
  4226                           
  4227                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4228  0007E2  0E05               	movlw	5
  4229  0007E4  1831               	xorwf	_menuDalt^0,w,c
  4230  0007E6  E005               	bz	u7700
  4231  0007E8  5031               	movf	_menuDalt^0,w,c
  4232  0007EA  ECB2  F00F         	call	_UgetTop5
  4233  0007EE  0AFF               	xorlw	255
  4234  0007F0  E101               	bnz	l7055
  4235  0007F2                     u7700:
  4236  0007F2  6A31               	clrf	_menuDalt^0,c
  4237  0007F4                     l7055:
  4238                           
  4239                           ;Menu.c: 391:     state = 34;
  4240  0007F4  0E22               	movlw	34
  4241  0007F6  6E2E               	movwf	menu@state^0,c
  4242  0007F8  0C22               	retlw	34
  4243  0007FA                     l7057:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4247  0007FA  5031               	movf	_menuDalt^0,w,c
  4248  0007FC  ECB2  F00F         	call	_UgetTop5
  4249  000800  0AFF               	xorlw	255
  4250  000802  E104               	bnz	u7720
  4251  000804  0E05               	movlw	5
  4252  000806  1831               	xorwf	_menuDalt^0,w,c
  4253  000808  B4D8               	btfsc	status,2,c
  4254  00080A  0012               	return	
  4255  00080C                     u7720:
  4256  00080C  EC33  F000         	call	_LcLliure	;wreg free
  4257  000810  A0D8               	btfss	status,0,c
  4258  000812  0012               	return	
  4259                           
  4260                           ;Menu.c: 396:     LcGotoXY(16,0);
  4261  000814  D8E8               	call	PL90	;call to abstracted procedure
  4262  000816  EC71  F00E         	call	_LcGotoXY
  4263                           
  4264                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4265  00081A  5031               	movf	_menuDalt^0,w,c
  4266  00081C  ECB2  F00F         	call	_UgetTop5
  4267  000820  ECA8  F00F         	call	_UgetUserName
  4268  000824  D8CE               	call	PL42	;call to abstracted procedure
  4269  000826  EC2D  F000         	call	_LcNewString	;wreg free
  4270                           
  4271                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4272  00082A  5031               	movf	_menuDalt^0,w,c
  4273  00082C  ECB2  F00F         	call	_UgetTop5
  4274  000830  ECDD  F00F         	call	_UgetScore
  4275  000834  EC27  F000         	call	_CToAConverteix
  4276  000838  D56C               	goto	l6609
  4277  00083A                     l7067:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4281  00083A  EC33  F000         	call	_LcLliure	;wreg free
  4282  00083E  A0D8               	btfss	status,0,c
  4283  000840  0012               	return	
  4284  000842  ECAE  F000         	call	_CToAHaAcabat	;wreg free
  4285  000846  0AFA               	xorlw	250
  4286  000848  A4D8               	btfss	status,2,c
  4287  00084A  0012               	return	
  4288                           
  4289                           ;Menu.c: 404:     LcPutChar(':');
  4290  00084C  0E3A               	movlw	58
  4291  00084E  ECB5  F00D         	call	_LcPutChar
  4292                           
  4293                           ;Menu.c: 405:     LcGotoXY(16,1);
  4294  000852  D8C6               	call	PL88	;call to abstracted procedure
  4295  000854  EC71  F00E         	call	_LcGotoXY
  4296                           
  4297                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4298  000858  ECAC  F000         	call	_CToAobtenir	;wreg free
  4299  00085C  D8B7               	call	PL46	;call to abstracted procedure
  4300  00085E  EC2D  F000         	call	_LcNewString	;wreg free
  4301                           
  4302                           ;Menu.c: 407:     pos = 0;
  4303  000862  6A2F               	clrf	_pos^0,c
  4304                           
  4305                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4306  000864  5032               	movf	_timerMenu^0,w,c
  4307  000866  EC75  F00F         	call	_TiResetTics
  4308                           
  4309                           ;Menu.c: 409:     state = 37;
  4310  00086A  0E25               	movlw	37
  4311  00086C  6E2E               	movwf	menu@state^0,c
  4312  00086E  0C25               	retlw	37
  4313  000870                     l7081:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4317  000870  0E0B               	movlw	11
  4318  000872  1852               	xorwf	_NovaTecla^0,w,c
  4319  000874  E104               	bnz	l7089
  4320                           
  4321                           ; BSR set to: 0
  4322  000876  EC33  F000         	call	_LcLliure	;wreg free
  4323  00087A  E301 D768          	bc	u7610
  4324  00087E                     l7089:
  4325  00087E  5032               	movf	_timerMenu^0,w,c
  4326  000880  ECDC  F00E         	call	_TiGetTics
  4327  000884  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4328  000886  0012               	return	
  4329  000888  0E91               	movlw	145
  4330  00088A  5C64               	subwf	?_TiGetTics^0,w,c
  4331  00088C  0E01               	movlw	1
  4332  00088E  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4333  000890  A0D8               	btfss	status,0,c
  4334  000892  0012               	return	
  4335  000894  EC33  F000         	call	_LcLliure	;wreg free
  4336  000898  E301 D53B          	bc	l6609
  4337  00089C  0012               	return	
  4338  00089E                     l7095:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;Menu.c: 422:    if (pos < 16) {
  4342  00089E  0E10               	movlw	16
  4343  0008A0  602F               	cpfslt	_pos^0,c
  4344  0008A2  D004               	goto	l7105
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4348  0008A4  5032               	movf	_timerMenu^0,w,c
  4349  0008A6  EC75  F00F         	call	_TiResetTics
  4350  0008AA  D761               	goto	l7017
  4351  0008AC                     l7105:
  4352                           
  4353                           ; BSR set to: 0
  4354  0008AC  0E0F               	movlw	15
  4355  0008AE  642F               	cpfsgt	_pos^0,c
  4356  0008B0  0C0F               	retlw	15
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;Menu.c: 429:     LcClear();
  4360  0008B2  EC37  F00F         	call	_LcClear	;wreg free
  4361  0008B6  D651               	goto	l6849
  4362  0008B8                     l7113:
  4363  0008B8  502E               	movf	menu@state^0,w,c
  4364  0008BA  0100               	movlb	0	; () banked
  4365  0008BC  6FE3               	movwf	??_menu& (0+255),b
  4366  0008BE  6BE4               	clrf	(??_menu+1)& (0+255),b
  4367                           
  4368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4369                           ; Switch size 1, requested type "space"
  4370                           ; Number of cases is 1, Range of values is 0 to 0
  4371                           ; switch strategies available:
  4372                           ; Name         Instructions Cycles
  4373                           ; simple_byte            4     3 (average)
  4374                           ;	Chosen strategy is simple_byte
  4375  0008C0  51E4               	movf	(??_menu+1)& (0+255),w,b
  4376  0008C2  A4D8               	btfss	status,2,c
  4377  0008C4  0012               	return	
  4378                           
  4379                           ; BSR set to: 0
  4380                           ; Switch size 1, requested type "space"
  4381                           ; Number of cases is 37, Range of values is 0 to 38
  4382                           ; switch strategies available:
  4383                           ; Name         Instructions Cycles
  4384                           ; simple_byte          112    57 (average)
  4385                           ;	Chosen strategy is simple_byte
  4386  0008C6  51E3               	movf	??_menu& (0+255),w,b
  4387  0008C8  E101 D50C          	bz	l6595
  4388  0008CC  0A01               	xorlw	1	; case 1
  4389  0008CE  E101 D513          	bz	l6601
  4390  0008D2  0A03               	xorlw	3	; case 2
  4391  0008D4  E101 D51F          	bz	l6611
  4392  0008D8  0A01               	xorlw	1	; case 3
  4393  0008DA  E101 D526          	bz	l542
  4394  0008DE  0A07               	xorlw	7	; case 4
  4395  0008E0  E101 D52C          	bz	l6629
  4396  0008E4  0A01               	xorlw	1	; case 5
  4397  0008E6  E101 D535          	bz	l6637
  4398  0008EA  0A03               	xorlw	3	; case 6
  4399  0008EC  E101 D53F          	bz	l6647
  4400  0008F0  0A01               	xorlw	1	; case 7
  4401  0008F2  E101 D550          	bz	l6661
  4402  0008F6  0A0F               	xorlw	15	; case 8
  4403  0008F8  E101 D56C          	bz	l6687
  4404  0008FC  0A01               	xorlw	1	; case 9
  4405  0008FE  E101 D57D          	bz	l6701
  4406  000902  0A03               	xorlw	3	; case 10
  4407  000904  E101 D594          	bz	l6729
  4408  000908  0A01               	xorlw	1	; case 11
  4409  00090A  E101 D599          	bz	l569
  4410  00090E  0A07               	xorlw	7	; case 12
  4411  000910  E101 D5B1          	bz	l6753
  4412  000914  0A01               	xorlw	1	; case 13
  4413  000916  E101 D5B7          	bz	l6765
  4414  00091A  0A03               	xorlw	3	; case 14
  4415  00091C  E101 D620          	bz	l6851
  4416  000920  0A01               	xorlw	1	; case 15
  4417  000922  E101 D62B          	bz	l6859
  4418  000926  0A1F               	xorlw	31	; case 16
  4419  000928  E101 D634          	bz	l6863
  4420  00092C  0A01               	xorlw	1	; case 17
  4421  00092E  E101 D645          	bz	l6879
  4422  000932  0A03               	xorlw	3	; case 18
  4423  000934  E101 D652          	bz	l6893
  4424  000938  0A01               	xorlw	1	; case 19
  4425  00093A  E101 D65B          	bz	l6905
  4426  00093E  0A07               	xorlw	7	; case 20
  4427  000940  E101 D664          	bz	l6917
  4428  000944  0A01               	xorlw	1	; case 21
  4429  000946  E101 D670          	bz	l6929
  4430  00094A  0A03               	xorlw	3	; case 22
  4431  00094C  E101 D68F          	bz	l6955
  4432  000950  0A01               	xorlw	1	; case 23
  4433  000952  E101 D693          	bz	l6961
  4434  000956  0A0F               	xorlw	15	; case 24
  4435  000958  E101 D6A0          	bz	l6969
  4436  00095C  0A01               	xorlw	1	; case 25
  4437  00095E  E101 D6B1          	bz	l6979
  4438  000962  0A03               	xorlw	3	; case 26
  4439  000964  E101 D6C1          	bz	l6989
  4440  000968  0A01               	xorlw	1	; case 27
  4441  00096A  E101 D704          	bz	l7023
  4442  00096E  0A07               	xorlw	7	; case 28
  4443  000970  E101 D6DE          	bz	l6997
  4444  000974  0A01               	xorlw	1	; case 29
  4445  000976  E101 D6EC          	bz	l7007
  4446  00097A  0A03               	xorlw	3	; case 30
  4447  00097C  E101 D704          	bz	l7031
  4448  000980  0A01               	xorlw	1	; case 31
  4449  000982  E101 D705          	bz	l7035
  4450  000986  0A3F               	xorlw	63	; case 32
  4451  000988  E101 D716          	bz	l7041
  4452  00098C  0A02               	xorlw	2	; case 34
  4453  00098E  E101 D734          	bz	l7057
  4454  000992  0A01               	xorlw	1	; case 35
  4455  000994  E101 D751          	bz	l7067
  4456  000998  0A06               	xorlw	6	; case 37
  4457  00099A  E101 D769          	bz	l7081
  4458  00099E  0A03               	xorlw	3	; case 38
  4459  0009A0  E101 D77D          	bz	l7095
  4460  0009A4  0012               	return		;funcret
  4461  0009A6                     __end_of_menu:
  4462                           	callstack 0
  4463  0009A6                     PL10:
  4464                           	callstack 24
  4465  0009A6  6E67               	movwf	LcNewString@new_s^0,c
  4466  0009A8  5067               	movf	LcNewString@new_s^0,w,c
  4467  0009AA  A4D8               	btfss	status,2,c
  4468  0009AC  0E02               	movlw	high __smallconst
  4469  0009AE  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4470  0009B0  0012               	return	
  4471  0009B2                     __end_ofPL10:
  4472                           	callstack 0
  4473  0009B2                     PL28:
  4474                           	callstack 24
  4475  0009B2  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4476  0009B6  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4477  0009BA  0012               	return	
  4478  0009BC                     __end_ofPL28:
  4479                           	callstack 0
  4480  0009BC                     PL32:
  4481                           	callstack 24
  4482  0009BC  0E01               	movlw	1
  4483  0009BE  6E6C               	movwf	LcGotoXY@Row^0,c
  4484  0009C0  0C00               	retlw	0
  4485  0009C2                     __end_ofPL32:
  4486                           	callstack 0
  4487  0009C2                     PL42:
  4488                           	callstack 24
  4489  0009C2  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4490  0009C6  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4491  0009CA  0012               	return	
  4492  0009CC                     __end_ofPL42:
  4493                           	callstack 0
  4494  0009CC                     PL46:
  4495                           	callstack 24
  4496  0009CC  0100               	movlb	0	; () banked
  4497  0009CE  6FE3               	movwf	??_menu& (0+255),b
  4498  0009D0  C0E3  F067         	movff	??_menu,LcNewString@new_s
  4499  0009D4  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4500  0009D6  0012               	return	
  4501  0009D8                     __end_ofPL46:
  4502                           	callstack 0
  4503  0009D8                     PL84:
  4504                           	callstack 24
  4505  0009D8  5052               	movf	_NovaTecla^0,w,c
  4506  0009DA  0A80               	xorlw	128
  4507  0009DC  0F76               	addlw	-138
  4508  0009DE  0012               	return	
  4509  0009E0                     __end_ofPL84:
  4510                           	callstack 0
  4511  0009E0                     PL88:
  4512                           	callstack 24
  4513  0009E0  0E01               	movlw	1
  4514  0009E2  6E6C               	movwf	LcGotoXY@Row^0,c
  4515  0009E4  0C10               	retlw	16
  4516  0009E6                     __end_ofPL88:
  4517                           	callstack 0
  4518  0009E6                     PL90:
  4519                           	callstack 24
  4520  0009E6  0E00               	movlw	0
  4521  0009E8  6E6C               	movwf	LcGotoXY@Row^0,c
  4522  0009EA  0C10               	retlw	16
  4523  0009EC                     __end_ofPL90:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _miraPassword *****************
  4527 ;; Defined at:
  4528 ;;		line 312 in file "Usuaris.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;		None               void
  4535 ;; Registers used:
  4536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1
  4542 ;;      Params:         0       0       0
  4543 ;;      Locals:         0       0       0
  4544 ;;      Temps:          0       0       0
  4545 ;;      Totals:         0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 3
  4549 ;; This function calls:
  4550 ;;		_compareStrings
  4551 ;; This function is called by:
  4552 ;;		_menu
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text20
  4557  001E02                     __ptext20:
  4558                           	callstack 0
  4559  001E02                     _miraPassword:
  4560                           	callstack 26
  4561                           
  4562                           ;Usuaris.c: 313:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4563                           
  4564                           ;incstack = 0
  4565  001E02  0EAA               	movlw	low _tmpPassword
  4566  001E04  6E64               	movwf	compareStrings@a^0,c
  4567  001E06  504F               	movf	_usuariLoguejat^0,w,c
  4568  001E08  0D12               	mullw	18
  4569  001E0A  0E09               	movlw	low (_usuaris+9)
  4570  001E0C  24F3               	addwf	243,w,c
  4571  001E0E  6E65               	movwf	compareStrings@b^0,c
  4572  001E10  0E01               	movlw	high (_usuaris+9)
  4573  001E12  20F4               	addwfc	prodh,w,c
  4574  001E14  6E66               	movwf	(compareStrings@b+1)^0,c
  4575  001E16  ECFD  F00D         	call	_compareStrings	;wreg free
  4576  001E1A  0900               	iorlw	0
  4577  001E1C  E002               	bz	l4561
  4578  001E1E  90D8               	bcf	status,0,c
  4579  001E20  0012               	return	
  4580  001E22                     l4561:
  4581  001E22  80D8               	bsf	status,0,c
  4582  001E24  0012               	return		;funcret
  4583  001E26                     __end_of_miraPassword:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _getArrayShowUsers *****************
  4587 ;; Defined at:
  4588 ;;		line 63 in file "Usuaris.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  quin            1    wreg     unsigned char 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  quin            1    7[COMRAM] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    5[COMRAM] PTR unsigned char 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1
  4602 ;;      Params:         2       0       0
  4603 ;;      Locals:         1       0       0
  4604 ;;      Temps:          0       0       0
  4605 ;;      Totals:         3       0       0
  4606 ;;Total ram usage:        3 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_menu
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text21
  4617  001EB2                     __ptext21:
  4618                           	callstack 0
  4619  001EB2                     _getArrayShowUsers:
  4620                           	callstack 27
  4621                           
  4622                           ;incstack = 0
  4623                           ;getArrayShowUsers@quin stored from wreg
  4624  001EB2  6E66               	movwf	getArrayShowUsers@quin^0,c
  4625                           
  4626                           ;Usuaris.c: 64:     return usuaris[arrayShowUsers[quin]].username;
  4627  001EB4  5066               	movf	getArrayShowUsers@quin^0,w,c
  4628  001EB6  0FA2               	addlw	low _arrayShowUsers
  4629  001EB8  6ED9               	movwf	fsr2l,c
  4630  001EBA  6ADA               	clrf	fsr2h,c
  4631  001EBC  50DF               	movf	indf2,w,c
  4632  001EBE  0D12               	mullw	18
  4633  001EC0  0E00               	movlw	low _usuaris
  4634  001EC2  24F3               	addwf	243,w,c
  4635  001EC4  6E64               	movwf	?_getArrayShowUsers^0,c
  4636  001EC6  0E01               	movlw	high _usuaris
  4637  001EC8  20F4               	addwfc	prodh,w,c
  4638  001ECA  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4639  001ECC  0012               	return		;funcret
  4640  001ECE                     __end_of_getArrayShowUsers:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _checkHoraAcabat *****************
  4644 ;; Defined at:
  4645 ;;		line 44 in file "Hora.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;		None               void
  4652 ;; Registers used:
  4653 ;;		status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1
  4659 ;;      Params:         0       0       0
  4660 ;;      Locals:         0       0       0
  4661 ;;      Temps:          0       0       0
  4662 ;;      Totals:         0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 2
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_menu
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text22
  4674  001FE0                     __ptext22:
  4675                           	callstack 0
  4676  001FE0                     _checkHoraAcabat:
  4677                           	callstack 27
  4678                           
  4679                           ;Hora.c: 45:     return tempsAcabat;
  4680                           
  4681                           ;incstack = 0
  4682  001FE0  B875               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4683  001FE2  D002               	goto	l4599
  4684  001FE4  90D8               	bcf	status,0,c
  4685  001FE6  0012               	return	
  4686  001FE8                     l4599:
  4687  001FE8  80D8               	bsf	status,0,c
  4688  001FEA  0012               	return		;funcret
  4689  001FEC                     __end_of_checkHoraAcabat:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function _calculateShowUsers *****************
  4693 ;; Defined at:
  4694 ;;		line 139 in file "Usuaris.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		None
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1
  4708 ;;      Params:         0       0       0
  4709 ;;      Locals:         0       0       0
  4710 ;;      Temps:          0       0       0
  4711 ;;      Totals:         0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 2
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_menu
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text23
  4723  000134                     __ptext23:
  4724                           	callstack 0
  4725  000134                     _calculateShowUsers:
  4726                           	callstack 27
  4727                           
  4728                           ;Usuaris.c: 140:     do_showUsers = 1;
  4729                           
  4730                           ;incstack = 0
  4731  000134  8A76               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4732  000136  0012               	return		;funcret
  4733  000138                     __end_of_calculateShowUsers:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _UshowUsersCalculat *****************
  4737 ;; Defined at:
  4738 ;;		line 142 in file "Usuaris.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1
  4752 ;;      Params:         0       0       0
  4753 ;;      Locals:         0       0       0
  4754 ;;      Temps:          0       0       0
  4755 ;;      Totals:         0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 2
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_menu
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text24
  4767  001FEC                     __ptext24:
  4768                           	callstack 0
  4769  001FEC                     _UshowUsersCalculat:
  4770                           	callstack 27
  4771                           
  4772                           ;Usuaris.c: 143:     return !do_showUsers;
  4773                           
  4774                           ;incstack = 0
  4775  001FEC  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4776  001FEE  D002               	goto	l4625
  4777  001FF0  90D8               	bcf	status,0,c
  4778  001FF2  0012               	return	
  4779  001FF4                     l4625:
  4780  001FF4  80D8               	bsf	status,0,c
  4781  001FF6  0012               	return		;funcret
  4782  001FF8                     __end_of_UshowUsersCalculat:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _UgetUserName *****************
  4786 ;; Defined at:
  4787 ;;		line 59 in file "Usuaris.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  quin            1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  quin            1    7[COMRAM] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2    5[COMRAM] PTR unsigned char 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, prodl, prodh
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1
  4801 ;;      Params:         2       0       0
  4802 ;;      Locals:         1       0       0
  4803 ;;      Temps:          0       0       0
  4804 ;;      Totals:         3       0       0
  4805 ;;Total ram usage:        3 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_menu
  4812 ;;		_motorSIO
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text25
  4817  001F50                     __ptext25:
  4818                           	callstack 0
  4819  001F50                     _UgetUserName:
  4820                           	callstack 27
  4821                           
  4822                           ;incstack = 0
  4823                           ;UgetUserName@quin stored from wreg
  4824  001F50  6E66               	movwf	UgetUserName@quin^0,c
  4825                           
  4826                           ;Usuaris.c: 60:     return usuaris[quin].username;
  4827  001F52  5066               	movf	UgetUserName@quin^0,w,c
  4828  001F54  0D12               	mullw	18
  4829  001F56  0E00               	movlw	low _usuaris
  4830  001F58  24F3               	addwf	243,w,c
  4831  001F5A  6E64               	movwf	?_UgetUserName^0,c
  4832  001F5C  0E01               	movlw	high _usuaris
  4833  001F5E  20F4               	addwfc	prodh,w,c
  4834  001F60  6E65               	movwf	(?_UgetUserName+1)^0,c
  4835  001F62  0012               	return		;funcret
  4836  001F64                     __end_of_UgetUserName:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _UgetTop5 *****************
  4840 ;; Defined at:
  4841 ;;		line 304 in file "Usuaris.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  quin            1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  quin            1    5[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      char 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1
  4855 ;;      Params:         0       0       0
  4856 ;;      Locals:         1       0       0
  4857 ;;      Temps:          0       0       0
  4858 ;;      Totals:         1       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 2
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_menu
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text26
  4870  001F64                     __ptext26:
  4871                           	callstack 0
  4872  001F64                     _UgetTop5:
  4873                           	callstack 27
  4874                           
  4875                           ;incstack = 0
  4876                           ;UgetTop5@quin stored from wreg
  4877  001F64  6E64               	movwf	UgetTop5@quin^0,c
  4878                           
  4879                           ;Usuaris.c: 305:     return puntuacions[quin].indexStruct;
  4880  001F66  5064               	movf	UgetTop5@quin^0,w,c
  4881  001F68  0D02               	mullw	2
  4882  001F6A  50F3               	movf	243,w,c
  4883  001F6C  0F98               	addlw	low _puntuacions
  4884  001F6E  D000               	goto	PL68	;call to abstracted procedure
  4885  001F70                     __end_of_UgetTop5:
  4886                           	callstack 0
  4887  001F70                     PL68:
  4888                           	callstack 27
  4889  001F70  6ED9               	movwf	fsr2l,c
  4890  001F72  6ADA               	clrf	fsr2h,c
  4891  001F74  50DF               	movf	indf2,w,c
  4892  001F76  0012               	return		;funcret
  4893  001F78                     __end_ofPL68:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _UgetScore *****************
  4897 ;; Defined at:
  4898 ;;		line 301 in file "Usuaris.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  quin            1    wreg     unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  quin            1    5[COMRAM] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      unsigned char 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1
  4912 ;;      Params:         0       0       0
  4913 ;;      Locals:         1       0       0
  4914 ;;      Temps:          0       0       0
  4915 ;;      Totals:         1       0       0
  4916 ;;Total ram usage:        1 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_menu
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text27
  4927  001FBA                     __ptext27:
  4928                           	callstack 0
  4929  001FBA                     _UgetScore:
  4930                           	callstack 27
  4931                           
  4932                           ;incstack = 0
  4933                           ;UgetScore@quin stored from wreg
  4934  001FBA  6E64               	movwf	UgetScore@quin^0,c
  4935                           
  4936                           ;Usuaris.c: 302:     return puntuacions[quin].score;
  4937  001FBC  5064               	movf	UgetScore@quin^0,w,c
  4938  001FBE  0D02               	mullw	2
  4939  001FC0  50F3               	movf	243,w,c
  4940  001FC2  0F99               	addlw	low (_puntuacions+1)
  4941  001FC4  EFB8  F00F         	goto	PL68	;call to abstracted procedure
  4942  001FC8                     __end_of_UgetScore:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _UgetNumUsuaris *****************
  4946 ;; Defined at:
  4947 ;;		line 35 in file "Usuaris.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      unsigned char 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1
  4961 ;;      Params:         0       0       0
  4962 ;;      Locals:         0       0       0
  4963 ;;      Temps:          0       0       0
  4964 ;;      Totals:         0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 2
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_menu
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text28
  4976  000138                     __ptext28:
  4977                           	callstack 0
  4978  000138                     _UgetNumUsuaris:
  4979                           	callstack 27
  4980                           
  4981                           ;Usuaris.c: 36:     return numUsuaris;
  4982                           
  4983                           ;incstack = 0
  4984  000138  502D               	movf	_numUsuaris^0,w,c
  4985  00013A  0012               	return		;funcret
  4986  00013C                     __end_of_UgetNumUsuaris:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _UenviaPas *****************
  4990 ;; Defined at:
  4991 ;;		line 51 in file "Usuaris.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  c               1    wreg     unsigned char 
  4994 ;;  pos             1    5[COMRAM] unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  c               1    6[COMRAM] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1
  5006 ;;      Params:         1       0       0
  5007 ;;      Locals:         1       0       0
  5008 ;;      Temps:          0       0       0
  5009 ;;      Totals:         2       0       0
  5010 ;;Total ram usage:        2 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; Hardware stack levels required when called: 2
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_menu
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text29
  5021  001F8A                     __ptext29:
  5022                           	callstack 0
  5023  001F8A                     _UenviaPas:
  5024                           	callstack 27
  5025                           
  5026                           ;incstack = 0
  5027                           ;UenviaPas@c stored from wreg
  5028  001F8A  6E65               	movwf	UenviaPas@c^0,c
  5029                           
  5030                           ;Usuaris.c: 52:     tmpPassword[pos] = c;
  5031  001F8C  5064               	movf	UenviaPas@pos^0,w,c
  5032  001F8E  0FAA               	addlw	low _tmpPassword
  5033  001F90  6ED9               	movwf	fsr2l,c
  5034  001F92  6ADA               	clrf	fsr2h,c
  5035  001F94  C065  FFDF         	movff	UenviaPas@c,indf2
  5036  001F98  0012               	return		;funcret
  5037  001F9A                     __end_of_UenviaPas:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _UenviaChar *****************
  5041 ;; Defined at:
  5042 ;;		line 48 in file "Usuaris.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  c               1    wreg     unsigned char 
  5045 ;;  pos             1    5[COMRAM] unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  c               1    6[COMRAM] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1
  5057 ;;      Params:         1       0       0
  5058 ;;      Locals:         1       0       0
  5059 ;;      Temps:          0       0       0
  5060 ;;      Totals:         2       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; Hardware stack levels required when called: 2
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_menu
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text30
  5072  001F9A                     __ptext30:
  5073                           	callstack 0
  5074  001F9A                     _UenviaChar:
  5075                           	callstack 27
  5076                           
  5077                           ;incstack = 0
  5078                           ;UenviaChar@c stored from wreg
  5079  001F9A  6E65               	movwf	UenviaChar@c^0,c
  5080                           
  5081                           ;Usuaris.c: 49:     tmpUsername[pos] = c;
  5082  001F9C  5064               	movf	UenviaChar@pos^0,w,c
  5083  001F9E  0FB3               	addlw	low _tmpUsername
  5084  001FA0  6ED9               	movwf	fsr2l,c
  5085  001FA2  6ADA               	clrf	fsr2h,c
  5086  001FA4  C065  FFDF         	movff	UenviaChar@c,indf2
  5087  001FA8  0012               	return		;funcret
  5088  001FAA                     __end_of_UenviaChar:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _UcheckExistsNotFinished *****************
  5092 ;; Defined at:
  5093 ;;		line 42 in file "Usuaris.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;		None               void
  5100 ;; Registers used:
  5101 ;;		status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1
  5107 ;;      Params:         0       0       0
  5108 ;;      Locals:         0       0       0
  5109 ;;      Temps:          0       0       0
  5110 ;;      Totals:         0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_menu
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text31
  5122  000036                     __ptext31:
  5123                           	callstack 0
  5124  000036                     _UcheckExistsNotFinished:
  5125                           	callstack 27
  5126                           
  5127                           ;Usuaris.c: 43:     return do_check_exists;
  5128                           
  5129                           ;incstack = 0
  5130  000036  BE76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5131  000038  D002               	goto	l4547
  5132  00003A  90D8               	bcf	status,0,c
  5133  00003C  0012               	return	
  5134  00003E                     l4547:
  5135  00003E  80D8               	bsf	status,0,c
  5136  000040  0012               	return		;funcret
  5137  000042                     __end_of_UcheckExistsNotFinished:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _UcheckExistsGetError *****************
  5141 ;; Defined at:
  5142 ;;		line 45 in file "Usuaris.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      char 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1
  5156 ;;      Params:         0       0       0
  5157 ;;      Locals:         0       0       0
  5158 ;;      Temps:          0       0       0
  5159 ;;      Totals:         0       0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 2
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_menu
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text32
  5171  00013C                     __ptext32:
  5172                           	callstack 0
  5173  00013C                     _UcheckExistsGetError:
  5174                           	callstack 27
  5175                           
  5176                           ;Usuaris.c: 46:     return usuariLoguejat;
  5177                           
  5178                           ;incstack = 0
  5179  00013C  504F               	movf	_usuariLoguejat^0,w,c
  5180  00013E  0012               	return		;funcret
  5181  000140                     __end_of_UcheckExistsGetError:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _UcheckExists *****************
  5185 ;; Defined at:
  5186 ;;		line 39 in file "Usuaris.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		None
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1
  5200 ;;      Params:         0       0       0
  5201 ;;      Locals:         0       0       0
  5202 ;;      Temps:          0       0       0
  5203 ;;      Totals:         0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 2
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_menu
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text33
  5215  000140                     __ptext33:
  5216                           	callstack 0
  5217  000140                     _UcheckExists:
  5218                           	callstack 27
  5219                           
  5220                           ;Usuaris.c: 40:     do_check_exists = 1;
  5221                           
  5222                           ;incstack = 0
  5223  000140  8E76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5224  000142  0012               	return		;funcret
  5225  000144                     __end_of_UcheckExists:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function _URegister *****************
  5229 ;; Defined at:
  5230 ;;		line 55 in file "Usuaris.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		None
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1
  5244 ;;      Params:         0       0       0
  5245 ;;      Locals:         0       0       0
  5246 ;;      Temps:          0       0       0
  5247 ;;      Totals:         0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used: 1
  5250 ;; Hardware stack levels required when called: 2
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_menu
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text34
  5259  000144                     __ptext34:
  5260                           	callstack 0
  5261  000144                     _URegister:
  5262                           	callstack 27
  5263                           
  5264                           ;Usuaris.c: 56:     do_register = 1;
  5265                           
  5266                           ;incstack = 0
  5267  000144  8C76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5268  000146  0012               	return		;funcret
  5269  000148                     __end_of_URegister:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function _SiFerMenu *****************
  5273 ;; Defined at:
  5274 ;;		line 19 in file "GestioLCD.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		None
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1
  5288 ;;      Params:         0       0       0
  5289 ;;      Locals:         0       0       0
  5290 ;;      Temps:          0       0       0
  5291 ;;      Totals:         0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_menu
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text35
  5303  000148                     __ptext35:
  5304                           	callstack 0
  5305  000148                     _SiFerMenu:
  5306                           	callstack 27
  5307                           
  5308                           ;GestioLCD.c: 20:     ferMenu = one;
  5309                           
  5310                           ;incstack = 0
  5311  000148  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5312  00014A  0012               	return		;funcret
  5313  00014C                     __end_of_SiFerMenu:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _SMSon *****************
  5317 ;; Defined at:
  5318 ;;		line 128 in file "Ssms.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		None
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1
  5332 ;;      Params:         0       0       0
  5333 ;;      Locals:         0       0       0
  5334 ;;      Temps:          0       0       0
  5335 ;;      Totals:         0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 2
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_menu
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text36
  5347  00010A                     __ptext36:
  5348                           	callstack 0
  5349  00010A                     _SMSon:
  5350                           	callstack 27
  5351                           
  5352                           ;Ssms.c: 129:     setSMSon = 1;
  5353                           
  5354                           ;incstack = 0
  5355  00010A  8277               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5356                           
  5357                           ;Ssms.c: 130:     novaTecla = -1;
  5358  00010C  6854               	setf	_novaTecla^0,c
  5359  00010E  0012               	return		;funcret
  5360  000110                     __end_of_SMSon:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _SMSoff *****************
  5364 ;; Defined at:
  5365 ;;		line 133 in file "Ssms.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		None
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1
  5379 ;;      Params:         0       0       0
  5380 ;;      Locals:         0       0       0
  5381 ;;      Temps:          0       0       0
  5382 ;;      Totals:         0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 2
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_menu
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text37
  5394  000110                     __ptext37:
  5395                           	callstack 0
  5396  000110                     _SMSoff:
  5397                           	callstack 27
  5398                           
  5399                           ;Ssms.c: 134:     setSMSon = 0;
  5400                           
  5401                           ;incstack = 0
  5402  000110  9277               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5403                           
  5404                           ;Ssms.c: 135:     novaTecla = -1;
  5405  000112  6854               	setf	_novaTecla^0,c
  5406  000114  0012               	return		;funcret
  5407  000116                     __end_of_SMSoff:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5411 ;; Defined at:
  5412 ;;		line 44 in file "SIO.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      char 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1
  5426 ;;      Params:         0       0       0
  5427 ;;      Locals:         0       0       0
  5428 ;;      Temps:          0       0       0
  5429 ;;      Totals:         0       0       0
  5430 ;;Total ram usage:        0 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 2
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_menu
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text38
  5441  00014C                     __ptext38:
  5442                           	callstack 0
  5443  00014C                     _SIOHaAcabatPuntuacions:
  5444                           	callstack 27
  5445                           
  5446                           ;SIO.c: 45:     return usuariActualSIO;
  5447                           
  5448                           ;incstack = 0
  5449  00014C  504A               	movf	_usuariActualSIO^0,w,c
  5450  00014E  0012               	return		;funcret
  5451  000150                     __end_of_SIOHaAcabatPuntuacions:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _NoFerMenu *****************
  5455 ;; Defined at:
  5456 ;;		line 22 in file "GestioLCD.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		None
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1
  5470 ;;      Params:         0       0       0
  5471 ;;      Locals:         0       0       0
  5472 ;;      Temps:          0       0       0
  5473 ;;      Totals:         0       0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 2
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_menu
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text39
  5485  000150                     __ptext39:
  5486                           	callstack 0
  5487  000150                     _NoFerMenu:
  5488                           	callstack 27
  5489                           
  5490                           ;GestioLCD.c: 23:     ferMenu = 0;
  5491                           
  5492                           ;incstack = 0
  5493  000150  9476               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5494  000152  0012               	return		;funcret
  5495  000154                     __end_of_NoFerMenu:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function _LcScroll *****************
  5499 ;; Defined at:
  5500 ;;		line 35 in file "LcTLCD.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1
  5514 ;;      Params:         0       0       0
  5515 ;;      Locals:         0       0       0
  5516 ;;      Temps:          0       0       0
  5517 ;;      Totals:         0       0       0
  5518 ;;Total ram usage:        0 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; Hardware stack levels required when called: 4
  5521 ;; This function calls:
  5522 ;;		_CantaIR
  5523 ;; This function is called by:
  5524 ;;		_menu
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text40
  5529  000116                     __ptext40:
  5530                           	callstack 0
  5531  000116                     _LcScroll:
  5532                           	callstack 25
  5533                           
  5534                           ;incstack = 0
  5535  000116  0E18               	movlw	24
  5536  000118  EF67  F00F         	goto	_CantaIR
  5537  00011C                     __end_of_LcScroll:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _JnovaTecla *****************
  5541 ;; Defined at:
  5542 ;;		line 16 in file "Joc.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  tecla           1    wreg     char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  tecla           1    5[COMRAM] char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1
  5556 ;;      Params:         0       0       0
  5557 ;;      Locals:         1       0       0
  5558 ;;      Temps:          0       0       0
  5559 ;;      Totals:         1       0       0
  5560 ;;Total ram usage:        1 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_menu
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text41
  5571  00008C                     __ptext41:
  5572                           	callstack 0
  5573  00008C                     _JnovaTecla:
  5574                           	callstack 27
  5575                           
  5576                           ;incstack = 0
  5577                           ;JnovaTecla@tecla stored from wreg
  5578  00008C  6E64               	movwf	JnovaTecla@tecla^0,c
  5579                           
  5580                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5581  00008E  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5582  000092  0012               	return		;funcret
  5583  000094                     __end_of_JnovaTecla:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function _JnovaDireccio *****************
  5587 ;; Defined at:
  5588 ;;		line 19 in file "Joc.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  dir             1    wreg     unsigned char 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  dir             1    5[COMRAM] unsigned char 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1
  5602 ;;      Params:         0       0       0
  5603 ;;      Locals:         1       0       0
  5604 ;;      Temps:          0       0       0
  5605 ;;      Totals:         1       0       0
  5606 ;;Total ram usage:        1 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 2
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_menu
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text42
  5617  000094                     __ptext42:
  5618                           	callstack 0
  5619  000094                     _JnovaDireccio:
  5620                           	callstack 27
  5621                           
  5622                           ;incstack = 0
  5623                           ;JnovaDireccio@dir stored from wreg
  5624  000094  6E64               	movwf	JnovaDireccio@dir^0,c
  5625                           
  5626                           ;Joc.c: 20:     direccioJoc = dir;
  5627  000096  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5628  00009A  0012               	return		;funcret
  5629  00009C                     __end_of_JnovaDireccio:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function _JendGame *****************
  5633 ;; Defined at:
  5634 ;;		line 23 in file "Joc.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		None
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1
  5648 ;;      Params:         0       0       0
  5649 ;;      Locals:         0       0       0
  5650 ;;      Temps:          0       0       0
  5651 ;;      Totals:         0       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 2
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_menu
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text43
  5663  000154                     __ptext43:
  5664                           	callstack 0
  5665  000154                     _JendGame:
  5666                           	callstack 27
  5667                           
  5668                           ;Joc.c: 24:     jugantJoc = 0;
  5669                           
  5670                           ;incstack = 0
  5671  000154  9675               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5672  000156  0012               	return		;funcret
  5673  000158                     __end_of_JendGame:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function _JJuguem *****************
  5677 ;; Defined at:
  5678 ;;		line 13 in file "Joc.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  usuari          1    wreg     unsigned char 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  usuari          1    5[COMRAM] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1
  5692 ;;      Params:         0       0       0
  5693 ;;      Locals:         1       0       0
  5694 ;;      Temps:          0       0       0
  5695 ;;      Totals:         1       0       0
  5696 ;;Total ram usage:        1 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 2
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_menu
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text44
  5707  00009C                     __ptext44:
  5708                           	callstack 0
  5709  00009C                     _JJuguem:
  5710                           	callstack 27
  5711                           
  5712                           ;incstack = 0
  5713                           ;JJuguem@usuari stored from wreg
  5714  00009C  6E64               	movwf	JJuguem@usuari^0,c
  5715                           
  5716                           ;Joc.c: 14:     usuariJoc = usuari;
  5717  00009E  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5718  0000A2  0012               	return		;funcret
  5719  0000A4                     __end_of_JJuguem:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _HActualitzaHora *****************
  5723 ;; Defined at:
  5724 ;;		line 18 in file "Hora.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5727 ;;		 -> horaTmp(4), 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1
  5739 ;;      Params:         1       0       0
  5740 ;;      Locals:         0       0       0
  5741 ;;      Temps:          0       0       0
  5742 ;;      Totals:         1       0       0
  5743 ;;Total ram usage:        1 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; Hardware stack levels required when called: 2
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_menu
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text45
  5754  001E26                     __ptext45:
  5755                           	callstack 0
  5756  001E26                     _HActualitzaHora:
  5757                           	callstack 27
  5758                           
  5759                           ;Hora.c: 19:     hora[0] = nova[0];
  5760                           
  5761                           ;incstack = 0
  5762  001E26  5064               	movf	HActualitzaHora@nova^0,w,c
  5763  001E28  6ED9               	movwf	fsr2l,c
  5764  001E2A  6ADA               	clrf	fsr2h,c
  5765  001E2C  50DF               	movf	indf2,w,c
  5766  001E2E  6E56               	movwf	_hora^0,c
  5767                           
  5768                           ;Hora.c: 20:     hora[1] = nova[1];
  5769  001E30  5064               	movf	HActualitzaHora@nova^0,w,c
  5770  001E32  EC5A  F006         	call	PL70	;call to abstracted procedure
  5771  001E36  6E57               	movwf	(_hora+1)^0,c
  5772                           
  5773                           ;Hora.c: 21:     hora[3] = nova[2];
  5774  001E38  5064               	movf	HActualitzaHora@nova^0,w,c
  5775  001E3A  EC49  F006         	call	PL50	;call to abstracted procedure
  5776  001E3E  6E59               	movwf	(_hora+3)^0,c
  5777                           
  5778                           ;Hora.c: 22:     hora[4] = nova[3];
  5779  001E40  5064               	movf	HActualitzaHora@nova^0,w,c
  5780  001E42  EC4F  F006         	call	PL52	;call to abstracted procedure
  5781  001E46  6E5A               	movwf	(_hora+4)^0,c
  5782  001E48  0012               	return		;funcret
  5783  001E4A                     __end_of_HActualitzaHora:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _GLCDMostraMenu *****************
  5787 ;; Defined at:
  5788 ;;		line 30 in file "GestioLCD.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  num             1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  num             1    5[COMRAM] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1
  5802 ;;      Params:         0       0       0
  5803 ;;      Locals:         1       0       0
  5804 ;;      Temps:          0       0       0
  5805 ;;      Totals:         1       0       0
  5806 ;;Total ram usage:        1 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 2
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_menu
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text46
  5817  000042                     __ptext46:
  5818                           	callstack 0
  5819  000042                     _GLCDMostraMenu:
  5820                           	callstack 27
  5821                           
  5822                           ;incstack = 0
  5823                           ;GLCDMostraMenu@num stored from wreg
  5824  000042  6E64               	movwf	GLCDMostraMenu@num^0,c
  5825                           
  5826                           ;GestioLCD.c: 31:     newString = one;
  5827  000044  8276               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5828                           
  5829                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5830  000046  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5831                           
  5832                           ;GestioLCD.c: 33:     ferMenu = one;
  5833  00004A  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5834  00004C  0012               	return		;funcret
  5835  00004E                     __end_of_GLCDMostraMenu:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function _CToAobtenir *****************
  5839 ;; Defined at:
  5840 ;;		line 7 in file "CtoA.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      PTR unsigned char 
  5847 ;; Registers used:
  5848 ;;		wreg
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1
  5854 ;;      Params:         2       0       0
  5855 ;;      Locals:         0       0       0
  5856 ;;      Temps:          0       0       0
  5857 ;;      Totals:         2       0       0
  5858 ;;Total ram usage:        2 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 2
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_menu
  5865 ;;		_motorSIO
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text47
  5870  000158                     __ptext47:
  5871                           	callstack 0
  5872  000158                     _CToAobtenir:
  5873                           	callstack 27
  5874                           
  5875                           ;CtoA.c: 8:     return stringScore;
  5876                           
  5877                           ;incstack = 0
  5878  000158  0E5C               	movlw	_stringScore& (0+255)
  5879  00015A  0012               	return		;funcret
  5880  00015C                     __end_of_CToAobtenir:
  5881                           	callstack 0
  5882                           
  5883 ;; *************** function _CToAHaAcabat *****************
  5884 ;; Defined at:
  5885 ;;		line 10 in file "CtoA.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      unsigned char 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1
  5899 ;;      Params:         0       0       0
  5900 ;;      Locals:         0       0       0
  5901 ;;      Temps:          0       0       0
  5902 ;;      Totals:         0       0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 2
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_menu
  5910 ;;		_motorSIO
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text48
  5915  00015C                     __ptext48:
  5916                           	callstack 0
  5917  00015C                     _CToAHaAcabat:
  5918                           	callstack 27
  5919                           
  5920                           ;CtoA.c: 11:     return convertir;
  5921                           
  5922                           ;incstack = 0
  5923  00015C  5047               	movf	_convertir^0,w,c
  5924  00015E  0012               	return		;funcret
  5925  000160                     __end_of_CToAHaAcabat:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _CToAConverteix *****************
  5929 ;; Defined at:
  5930 ;;		line 14 in file "CtoA.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  numero          1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  numero          1    5[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1
  5944 ;;      Params:         0       0       0
  5945 ;;      Locals:         1       0       0
  5946 ;;      Temps:          0       0       0
  5947 ;;      Totals:         1       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 3
  5951 ;; This function calls:
  5952 ;;		_CToAReset
  5953 ;; This function is called by:
  5954 ;;		_menu
  5955 ;;		_motorSIO
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text49
  5960  00004E                     __ptext49:
  5961                           	callstack 0
  5962  00004E                     _CToAConverteix:
  5963                           	callstack 26
  5964                           
  5965                           ;incstack = 0
  5966                           ;CToAConverteix@numero stored from wreg
  5967  00004E  6E64               	movwf	CToAConverteix@numero^0,c
  5968                           
  5969                           ;CtoA.c: 15:     CToAReset();
  5970  000050  EC52  F000         	call	_CToAReset	;wreg free
  5971                           
  5972                           ;CtoA.c: 16:     convertir = numero;
  5973  000054  C064  F047         	movff	CToAConverteix@numero,_convertir
  5974  000058  0012               	return		;funcret
  5975  00005A                     __end_of_CToAConverteix:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _CToAReset *****************
  5979 ;; Defined at:
  5980 ;;		line 18 in file "CtoA.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1
  5994 ;;      Params:         0       0       0
  5995 ;;      Locals:         0       0       0
  5996 ;;      Temps:          0       0       0
  5997 ;;      Totals:         0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; Hardware stack levels required when called: 2
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_CToAConverteix
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text50
  6009  0000A4                     __ptext50:
  6010                           	callstack 0
  6011  0000A4                     _CToAReset:
  6012                           	callstack 26
  6013                           
  6014                           ;CtoA.c: 19:     stringScore[0] = '0';
  6015                           
  6016                           ;incstack = 0
  6017  0000A4  0E30               	movlw	48
  6018  0000A6  6E5C               	movwf	_stringScore^0,c
  6019                           
  6020                           ;CtoA.c: 20:     stringScore[1] = '0';
  6021  0000A8  6E5D               	movwf	(_stringScore+1)^0,c
  6022  0000AA  0C30               	retlw	48	;funcret
  6023  0000AC                     __end_of_CToAReset:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _init_ports *****************
  6027 ;; Defined at:
  6028 ;;		line 24 in file "main.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1
  6042 ;;      Params:         0       0       0
  6043 ;;      Locals:         0       0       0
  6044 ;;      Temps:          0       0       0
  6045 ;;      Totals:         0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 2
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text51
  6057  001F20                     __ptext51:
  6058                           	callstack 0
  6059  001F20                     _init_ports:
  6060                           	callstack 28
  6061                           
  6062                           ;incstack = 0
  6063  001F20  0E03               	movlw	3
  6064  001F22  6E92               	movwf	146,c	;volatile
  6065  001F24  0EE0               	movlw	224
  6066  001F26  6E93               	movwf	147,c	;volatile
  6067  001F28  828A               	bsf	138,1,c	;volatile
  6068                           
  6069                           ;main.c: 48:     TRISC = 0xC0;
  6070  001F2A  0EC0               	movlw	192
  6071  001F2C  6E94               	movwf	148,c	;volatile
  6072                           
  6073                           ;main.c: 58:     TRISD = 0x8F;
  6074  001F2E  0E8F               	movlw	143
  6075  001F30  6E95               	movwf	149,c	;volatile
  6076                           
  6077                           ;main.c: 59:     LATD = 0x00;
  6078  001F32  6A8C               	clrf	140,c	;volatile
  6079                           
  6080                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6081  001F34  8EA6               	bsf	166,7,c	;volsfr
  6082                           
  6083                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6084  001F36  9CA6               	bcf	166,6,c	;volsfr
  6085  001F38  0012               	return		;funcret
  6086  001F3A                     __end_of_init_ports:
  6087                           	callstack 0
  6088                           
  6089 ;; *************** function _init_eusart *****************
  6090 ;; Defined at:
  6091 ;;		line 66 in file "main.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1
  6105 ;;      Params:         0       0       0
  6106 ;;      Locals:         0       0       0
  6107 ;;      Temps:          0       0       0
  6108 ;;      Totals:         0       0       0
  6109 ;;Total ram usage:        0 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 2
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_main
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text52
  6120  001F3A                     __ptext52:
  6121                           	callstack 0
  6122  001F3A                     _init_eusart:
  6123                           	callstack 28
  6124                           
  6125                           ;main.c: 67:     TXSTA = 0x24;
  6126                           
  6127                           ;incstack = 0
  6128  001F3A  0E24               	movlw	36
  6129  001F3C  6EAC               	movwf	172,c	;volatile
  6130                           
  6131                           ;main.c: 68:     RCSTA = 0x90;
  6132  001F3E  0E90               	movlw	144
  6133  001F40  6EAB               	movwf	171,c	;volatile
  6134                           
  6135                           ;main.c: 69:     BAUDCON = 0x08;
  6136  001F42  0E08               	movlw	8
  6137  001F44  6EB8               	movwf	184,c	;volatile
  6138                           
  6139                           ;main.c: 70:     SPBRGH = 0x04;
  6140  001F46  0E04               	movlw	4
  6141  001F48  6EB0               	movwf	176,c	;volatile
  6142                           
  6143                           ;main.c: 71:     SPBRG = 0x10;
  6144  001F4A  0E10               	movlw	16
  6145  001F4C  6EAF               	movwf	175,c	;volatile
  6146  001F4E  0C10               	retlw	16	;funcret
  6147  001F50                     __end_of_init_eusart:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function _initSIO *****************
  6151 ;; Defined at:
  6152 ;;		line 24 in file "SIO.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1
  6166 ;;      Params:         0       0       0
  6167 ;;      Locals:         0       0       0
  6168 ;;      Temps:          0       0       0
  6169 ;;      Totals:         0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 3
  6173 ;; This function calls:
  6174 ;;		_TiGetTimer
  6175 ;; This function is called by:
  6176 ;;		_main
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text53
  6181  0000AC                     __ptext53:
  6182                           	callstack 0
  6183  0000AC                     _initSIO:
  6184                           	callstack 27
  6185                           
  6186                           ;SIO.c: 25:     timerSIO = TiGetTimer();
  6187                           
  6188                           ;incstack = 0
  6189  0000AC  EC8B  F00E         	call	_TiGetTimer	;wreg free
  6190  0000B0  6E11               	movwf	_timerSIO^0,c
  6191  0000B2  0012               	return		;funcret
  6192  0000B4                     __end_of_initSIO:
  6193                           	callstack 0
  6194                           
  6195 ;; *************** function _initHora *****************
  6196 ;; Defined at:
  6197 ;;		line 14 in file "Hora.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      void 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1
  6211 ;;      Params:         0       0       0
  6212 ;;      Locals:         0       0       0
  6213 ;;      Temps:          0       0       0
  6214 ;;      Totals:         0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 3
  6218 ;; This function calls:
  6219 ;;		_TiGetTimer
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text54
  6226  0000B4                     __ptext54:
  6227                           	callstack 0
  6228  0000B4                     _initHora:
  6229                           	callstack 27
  6230                           
  6231                           ;Hora.c: 15:     timerHora = TiGetTimer();
  6232                           
  6233                           ;incstack = 0
  6234  0000B4  EC8B  F00E         	call	_TiGetTimer	;wreg free
  6235  0000B8  6E16               	movwf	_timerHora^0,c
  6236  0000BA  0012               	return		;funcret
  6237  0000BC                     __end_of_initHora:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function _initAltaveu *****************
  6241 ;; Defined at:
  6242 ;;		line 10 in file "Altaveu.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1
  6256 ;;      Params:         0       0       0
  6257 ;;      Locals:         0       0       0
  6258 ;;      Temps:          0       0       0
  6259 ;;      Totals:         0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 3
  6263 ;; This function calls:
  6264 ;;		_TiGetTimer
  6265 ;; This function is called by:
  6266 ;;		_main
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text55
  6271  0000BC                     __ptext55:
  6272                           	callstack 0
  6273  0000BC                     _initAltaveu:
  6274                           	callstack 27
  6275                           
  6276                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6277                           
  6278                           ;incstack = 0
  6279  0000BC  EC8B  F00E         	call	_TiGetTimer	;wreg free
  6280  0000C0  6E25               	movwf	_timerAltaveu^0,c
  6281  0000C2  0012               	return		;funcret
  6282  0000C4                     __end_of_initAltaveu:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _UmotorUsers *****************
  6286 ;; Defined at:
  6287 ;;		line 146 in file "Usuaris.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1
  6301 ;;      Params:         0       0       0
  6302 ;;      Locals:         0       0       0
  6303 ;;      Temps:          4       0       0
  6304 ;;      Totals:         4       0       0
  6305 ;;Total ram usage:        4 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 3
  6308 ;; This function calls:
  6309 ;;		_compareStrings
  6310 ;;		_escriureCharEEPROM
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text56
  6317  000CBE                     __ptext56:
  6318                           	callstack 0
  6319  000CBE                     _UmotorUsers:
  6320                           	callstack 27
  6321                           
  6322                           ;Usuaris.c: 147:     static char state = 0;;Usuaris.c: 149:  switch(state) {
  6323                           
  6324                           ;incstack = 0
  6325  000CBE  D11F               	goto	l6105
  6326  000CC0                     l796:
  6327                           
  6328                           ;Usuaris.c: 151:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6329  000CC0  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6330  000CC2  BC76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6331  000CC4  D006               	goto	l797
  6332  000CC6  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6333  000CC8  B876               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6334  000CCA  D003               	goto	l797
  6335                           
  6336                           ;Usuaris.c: 152:     i = zero;
  6337  000CCC  6A2A               	clrf	_i^0,c
  6338                           
  6339                           ;Usuaris.c: 153:     j = zero;
  6340  000CCE  6A29               	clrf	_j^0,c
  6341                           
  6342                           ;Usuaris.c: 154:    }
  6343  000CD0  0012               	return	
  6344  000CD2                     l797:
  6345  000CD2  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6346  000CD4  D003               	goto	l799
  6347                           
  6348                           ;Usuaris.c: 156:     usuariLoguejat = neg;
  6349  000CD6  684F               	setf	_usuariLoguejat^0,c
  6350  000CD8                     l5945:
  6351                           
  6352                           ;Usuaris.c: 157:     state++;
  6353  000CD8  2A27               	incf	UmotorUsers@state^0,f,c
  6354                           
  6355                           ;Usuaris.c: 158:    }
  6356  000CDA  0012               	return	
  6357  000CDC                     l799:
  6358  000CDC  AC76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6359  000CDE  D00B               	goto	l801
  6360                           
  6361                           ;Usuaris.c: 160:     if(numUsuaris != 8) numUsuaris++;
  6362  000CE0  0E08               	movlw	8
  6363  000CE2  182D               	xorwf	_numUsuaris^0,w,c
  6364  000CE4  E001               	bz	l5951
  6365  000CE6  2A2D               	incf	_numUsuaris^0,f,c
  6366  000CE8                     l5951:
  6367                           
  6368                           ;Usuaris.c: 162:     escriureCharEEPROM(numUsuaris,zero);
  6369  000CE8  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6370  000CEA  502D               	movf	_numUsuaris^0,w,c
  6371  000CEC  ECC9  F00E         	call	_escriureCharEEPROM
  6372                           
  6373                           ;Usuaris.c: 163:     state = 2;
  6374  000CF0  0E02               	movlw	2
  6375  000CF2  6E27               	movwf	UmotorUsers@state^0,c
  6376                           
  6377                           ;Usuaris.c: 164:    }
  6378  000CF4  0C02               	retlw	2
  6379  000CF6                     l801:
  6380  000CF6  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6381  000CF8  D016               	goto	l804
  6382                           
  6383                           ;Usuaris.c: 166:     arrayShowUsers[0] = usuariLoguejat;
  6384  000CFA  C04F  F0A2         	movff	_usuariLoguejat,_arrayShowUsers
  6385                           
  6386                           ;Usuaris.c: 167:     arrayShowUsers[1] = neg;
  6387  000CFE  0100               	movlb	0	; () banked
  6388  000D00  69A3               	setf	(_arrayShowUsers+1)& (0+255),b
  6389                           
  6390                           ;Usuaris.c: 168:     arrayShowUsers[2] = neg;
  6391  000D02  69A4               	setf	(_arrayShowUsers+2)& (0+255),b
  6392                           
  6393                           ;Usuaris.c: 169:     arrayShowUsers[3] = neg;
  6394  000D04  69A5               	setf	(_arrayShowUsers+3)& (0+255),b
  6395                           
  6396                           ;Usuaris.c: 170:     arrayShowUsers[4] = neg;
  6397  000D06  69A6               	setf	(_arrayShowUsers+4)& (0+255),b
  6398                           
  6399                           ;Usuaris.c: 171:     arrayShowUsers[5] = neg;
  6400  000D08  69A7               	setf	(_arrayShowUsers+5)& (0+255),b
  6401                           
  6402                           ;Usuaris.c: 172:     arrayShowUsers[6] = neg;
  6403  000D0A  69A8               	setf	(_arrayShowUsers+6)& (0+255),b
  6404                           
  6405                           ;Usuaris.c: 173:     arrayShowUsers[7] = neg;
  6406  000D0C  69A9               	setf	(_arrayShowUsers+7)& (0+255),b
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;Usuaris.c: 174:     i = 1;
  6410  000D0E  0E01               	movlw	1
  6411  000D10  6E2A               	movwf	_i^0,c
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;Usuaris.c: 175:     if(numUsuaris < 7) {
  6415  000D12  0E07               	movlw	7
  6416  000D14  602D               	cpfslt	_numUsuaris^0,c
  6417  000D16  D002               	goto	l805
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;Usuaris.c: 176:       j = 0;
  6421  000D18  6A29               	clrf	_j^0,c
  6422                           
  6423                           ;Usuaris.c: 177:     }
  6424  000D1A  D002               	goto	l5963
  6425  000D1C                     l805:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;Usuaris.c: 179:       j = indexNextUserStruct;
  6429  000D1C  C02B  F029         	movff	_indexNextUserStruct,_j
  6430  000D20                     l5963:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;Usuaris.c: 181:     state = 5;
  6434  000D20  0E05               	movlw	5
  6435  000D22  6E27               	movwf	UmotorUsers@state^0,c
  6436                           
  6437                           ;Usuaris.c: 182:    }
  6438  000D24  0C05               	retlw	5
  6439  000D26                     l804:
  6440  000D26  A876               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6441  000D28  0012               	return	
  6442                           
  6443                           ;Usuaris.c: 184:     do_updateScore = zero;
  6444  000D2A  9876               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6445                           
  6446                           ;Usuaris.c: 185:     state = 6;
  6447  000D2C  0E06               	movlw	6
  6448  000D2E  6E27               	movwf	UmotorUsers@state^0,c
  6449  000D30  0C06               	retlw	6
  6450  000D32                     l5969:
  6451                           
  6452                           ;Usuaris.c: 189:    if (i < numUsuaris) {
  6453  000D32  502D               	movf	_numUsuaris^0,w,c
  6454  000D34  5C2A               	subwf	_i^0,w,c
  6455  000D36  E212               	bc	l811
  6456                           
  6457                           ;Usuaris.c: 190:     if(compareStrings(tmpUsername, usuaris[i].username) == zero){
  6458  000D38  0EB3               	movlw	low _tmpUsername
  6459  000D3A  6E64               	movwf	compareStrings@a^0,c
  6460  000D3C  502A               	movf	_i^0,w,c
  6461  000D3E  0D12               	mullw	18
  6462  000D40  0E00               	movlw	low _usuaris
  6463  000D42  24F3               	addwf	243,w,c
  6464  000D44  6E65               	movwf	compareStrings@b^0,c
  6465  000D46  0E01               	movlw	high _usuaris
  6466  000D48  20F4               	addwfc	prodh,w,c
  6467  000D4A  6E66               	movwf	(compareStrings@b+1)^0,c
  6468  000D4C  ECFD  F00D         	call	_compareStrings	;wreg free
  6469  000D50  0900               	iorlw	0
  6470  000D52  E102               	bnz	l5975
  6471                           
  6472                           ;Usuaris.c: 191:      usuariLoguejat = i;
  6473  000D54  C02A  F04F         	movff	_i,_usuariLoguejat
  6474  000D58                     l5975:
  6475                           
  6476                           ;Usuaris.c: 194:     i++;
  6477  000D58  2A2A               	incf	_i^0,f,c
  6478                           
  6479                           ;Usuaris.c: 195:    }
  6480  000D5A  0012               	return	
  6481  000D5C                     l811:
  6482                           
  6483                           ;Usuaris.c: 197:     do_check_exists = zero;
  6484  000D5C  9E76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6485  000D5E                     l5977:
  6486                           
  6487                           ;Usuaris.c: 198:     state--;
  6488  000D5E  0627               	decf	UmotorUsers@state^0,f,c
  6489  000D60  0012               	return	
  6490  000D62                     l5979:
  6491                           
  6492                           ;Usuaris.c: 202:    if (i < 9) {
  6493  000D62  0E09               	movlw	9
  6494  000D64  602A               	cpfslt	_i^0,c
  6495  000D66  D00C               	goto	l815
  6496                           
  6497                           ;Usuaris.c: 203:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6498  000D68  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6499  000D6C  502A               	movf	_i^0,w,c
  6500  000D6E  0FB3               	addlw	low _tmpUsername
  6501  000D70  D8FC               	call	PL48	;call to abstracted procedure
  6502  000D72  ECC9  F00E         	call	_escriureCharEEPROM
  6503                           
  6504                           ;Usuaris.c: 204:     indexNextUser++;
  6505  000D76  2A2C               	incf	_indexNextUser^0,f,c
  6506                           
  6507                           ;Usuaris.c: 205:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6508  000D78  502A               	movf	_i^0,w,c
  6509  000D7A  0FB3               	addlw	low _tmpUsername
  6510  000D7C  D8ED               	call	PL20	;call to abstracted procedure
  6511  000D7E  D014               	goto	L2
  6512  000D80                     l815:
  6513                           
  6514                           ;Usuaris.c: 209:     i = 0;
  6515  000D80  6A2A               	clrf	_i^0,c
  6516  000D82  D7AA               	goto	l5945
  6517  000D84                     l5991:
  6518                           
  6519                           ;Usuaris.c: 214:    if (i < 9) {
  6520  000D84  0E09               	movlw	9
  6521  000D86  602A               	cpfslt	_i^0,c
  6522  000D88  D01C               	goto	l818
  6523                           
  6524                           ;Usuaris.c: 215:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6525  000D8A  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6526  000D8E  502A               	movf	_i^0,w,c
  6527  000D90  0FAA               	addlw	low _tmpPassword
  6528  000D92  D8EB               	call	PL48	;call to abstracted procedure
  6529  000D94  ECC9  F00E         	call	_escriureCharEEPROM
  6530                           
  6531                           ;Usuaris.c: 216:     indexNextUser++;
  6532  000D98  2A2C               	incf	_indexNextUser^0,f,c
  6533                           
  6534                           ;Usuaris.c: 217:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6535  000D9A  502A               	movf	_i^0,w,c
  6536  000D9C  0FAA               	addlw	low _tmpPassword
  6537  000D9E  D8DC               	call	PL20	;call to abstracted procedure
  6538  000DA0  0E09               	movlw	9
  6539  000DA2  2669               	addwf	??_UmotorUsers^0,f,c
  6540  000DA4  0E00               	movlw	0
  6541  000DA6  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6542  000DA8                     L2:
  6543  000DA8  50F3               	movf	243,w,c
  6544  000DAA  2669               	addwf	??_UmotorUsers^0,f,c
  6545  000DAC  50F4               	movf	244,w,c
  6546  000DAE  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6547  000DB0  502A               	movf	_i^0,w,c
  6548  000DB2  2469               	addwf	??_UmotorUsers^0,w,c
  6549  000DB4  6EE1               	movwf	fsr1l,c
  6550  000DB6  0E00               	movlw	0
  6551  000DB8  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  6552  000DBA  6EE2               	movwf	fsr1h,c
  6553  000DBC  CFDF FFE7          	movff	indf2,indf1
  6554  000DC0  D7CB               	goto	l5975
  6555  000DC2                     l818:
  6556                           
  6557                           ;Usuaris.c: 221:     do_register = zero;
  6558  000DC2  9C76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6559                           
  6560                           ;Usuaris.c: 222:     if(indexNextUser > 140) indexNextUser = 2;
  6561  000DC4  0E8C               	movlw	140
  6562  000DC6  642C               	cpfsgt	_indexNextUser^0,c
  6563  000DC8  D002               	goto	l6005
  6564  000DCA  0E02               	movlw	2
  6565  000DCC  6E2C               	movwf	_indexNextUser^0,c
  6566  000DCE                     l6005:
  6567                           
  6568                           ;Usuaris.c: 223:     indexNextUserStruct++;
  6569  000DCE  2A2B               	incf	_indexNextUserStruct^0,f,c
  6570                           
  6571                           ;Usuaris.c: 224:     if(indexNextUserStruct == 8) indexNextUserStruct = zero;
  6572  000DD0  0E08               	movlw	8
  6573  000DD2  182B               	xorwf	_indexNextUserStruct^0,w,c
  6574  000DD4  E101               	bnz	l6011
  6575  000DD6  6A2B               	clrf	_indexNextUserStruct^0,c
  6576  000DD8                     l6011:
  6577                           
  6578                           ;Usuaris.c: 225:     escriureCharEEPROM(indexNextUser,1);
  6579  000DD8  0E01               	movlw	1
  6580  000DDA  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6581  000DDC  502C               	movf	_indexNextUser^0,w,c
  6582  000DDE  ECC9  F00E         	call	_escriureCharEEPROM
  6583                           
  6584                           ;Usuaris.c: 226:     state = 9;
  6585  000DE2  0E09               	movlw	9
  6586  000DE4  6E27               	movwf	UmotorUsers@state^0,c
  6587                           
  6588                           ;Usuaris.c: 227:                 i = 0;
  6589  000DE6  6A2A               	clrf	_i^0,c
  6590  000DE8  0012               	return	
  6591  000DEA                     l6017:
  6592                           
  6593                           ;Usuaris.c: 232:    if (i < numUsuaris) {
  6594  000DEA  502D               	movf	_numUsuaris^0,w,c
  6595  000DEC  5C2A               	subwf	_i^0,w,c
  6596  000DEE  E216               	bc	l6033
  6597                           
  6598                           ;Usuaris.c: 233:     if(j != usuariLoguejat){
  6599  000DF0  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6600  000DF4  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6601  000DF6  BE69               	btfsc	??_UmotorUsers^0,7,c
  6602  000DF8  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6603  000DFA  5029               	movf	_j^0,w,c
  6604  000DFC  1869               	xorwf	??_UmotorUsers^0,w,c
  6605  000DFE  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6606  000E00  E007               	bz	l6025
  6607                           
  6608                           ;Usuaris.c: 234:       arrayShowUsers[i] = j;
  6609  000E02  502A               	movf	_i^0,w,c
  6610  000E04  0FA2               	addlw	low _arrayShowUsers
  6611  000E06  6ED9               	movwf	fsr2l,c
  6612  000E08  6ADA               	clrf	fsr2h,c
  6613  000E0A  C029  FFDF         	movff	_j,indf2
  6614                           
  6615                           ;Usuaris.c: 235:      i++;
  6616  000E0E  2A2A               	incf	_i^0,f,c
  6617  000E10                     l6025:
  6618                           
  6619                           ;Usuaris.c: 236:                     j++;
  6620  000E10  2A29               	incf	_j^0,f,c
  6621                           
  6622                           ;Usuaris.c: 241:     if(j > 7) j=zero;
  6623                           
  6624                           ;Usuaris.c: 237:     }else{
  6625  000E12  0E07               	movlw	7
  6626  000E14  6429               	cpfsgt	_j^0,c
  6627  000E16  0C07               	retlw	7
  6628  000E18  6A29               	clrf	_j^0,c
  6629  000E1A  0012               	return	
  6630  000E1C                     l6033:
  6631  000E1C  502D               	movf	_numUsuaris^0,w,c
  6632  000E1E  182A               	xorwf	_i^0,w,c
  6633  000E20  A4D8               	btfss	status,2,c
  6634  000E22  0012               	return	
  6635                           
  6636                           ;Usuaris.c: 244:     do_showUsers = zero;
  6637  000E24  9A76               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6638                           
  6639                           ;Usuaris.c: 245:     state = zero;
  6640  000E26  6A27               	clrf	UmotorUsers@state^0,c
  6641  000E28  0012               	return	
  6642  000E2A                     l6037:
  6643                           
  6644                           ;Usuaris.c: 249:    if (i < 5 && puntuacions[i].indexStruct != neg) {
  6645  000E2A  0E05               	movlw	5
  6646  000E2C  602A               	cpfslt	_i^0,c
  6647  000E2E  D003               	goto	l6043
  6648  000E30  D885               	call	PL8	;call to abstracted procedure
  6649  000E32  28DE               	incf	postinc2,w,c
  6650  000E34  E191               	bnz	l5975
  6651  000E36                     l6043:
  6652  000E36  0E05               	movlw	5
  6653  000E38  602A               	cpfslt	_i^0,c
  6654  000E3A  D004               	goto	l6049
  6655  000E3C  D87F               	call	PL8	;call to abstracted procedure
  6656  000E3E  28DE               	incf	postinc2,w,c
  6657  000E40  E101 D74A          	bz	l5945
  6658  000E44                     l6049:
  6659  000E44  0E04               	movlw	4
  6660  000E46  642A               	cpfsgt	_i^0,c
  6661  000E48  0C04               	retlw	4
  6662                           
  6663                           ;Usuaris.c: 256:     i = zero;
  6664  000E4A  6A2A               	clrf	_i^0,c
  6665                           
  6666                           ;Usuaris.c: 257:     state = 8;
  6667  000E4C  0E08               	movlw	8
  6668  000E4E  6E27               	movwf	UmotorUsers@state^0,c
  6669  000E50  0C08               	retlw	8
  6670  000E52                     l6055:
  6671                           
  6672                           ;Usuaris.c: 261:    puntuacions[i].score = scoreUsr;
  6673  000E52  D87B               	call	PL14	;call to abstracted procedure
  6674  000E54  C028  FFDF         	movff	_scoreUsr,indf2
  6675                           
  6676                           ;Usuaris.c: 262:    puntuacions[i].indexStruct = usuariLoguejat;
  6677  000E58  D871               	call	PL8	;call to abstracted procedure
  6678  000E5A  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6679                           
  6680                           ;Usuaris.c: 263:    i = i+i;
  6681  000E5E  0E02               	movlw	2
  6682  000E60  022A               	mulwf	_i^0,c
  6683  000E62  50F3               	movf	prodl,w,c
  6684  000E64  6E2A               	movwf	_i^0,c
  6685                           
  6686                           ;Usuaris.c: 264:    escriureCharEEPROM(usuariLoguejat,200+i);
  6687  000E66  502A               	movf	_i^0,w,c
  6688  000E68  0FC8               	addlw	200
  6689  000E6A  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6690  000E6C  504F               	movf	_usuariLoguejat^0,w,c
  6691  000E6E  ECC9  F00E         	call	_escriureCharEEPROM
  6692                           
  6693                           ;Usuaris.c: 265:    i++;
  6694  000E72  2A2A               	incf	_i^0,f,c
  6695                           
  6696                           ;Usuaris.c: 266:    escriureCharEEPROM(scoreUsr,200+i);
  6697  000E74  502A               	movf	_i^0,w,c
  6698  000E76  0FC8               	addlw	200
  6699  000E78  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6700  000E7A  5028               	movf	_scoreUsr^0,w,c
  6701  000E7C  ECC9  F00E         	call	_escriureCharEEPROM
  6702  000E80                     l6065:
  6703                           
  6704                           ;Usuaris.c: 267:    state = zero;
  6705  000E80  6A27               	clrf	UmotorUsers@state^0,c
  6706                           
  6707                           ;Usuaris.c: 268:   break;
  6708  000E82  0012               	return	
  6709  000E84                     l6067:
  6710                           
  6711                           ;Usuaris.c: 270:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6712  000E84  D862               	call	PL14	;call to abstracted procedure
  6713  000E86  5028               	movf	_scoreUsr^0,w,c
  6714  000E88  5CDE               	subwf	postinc2,w,c
  6715  000E8A  E304               	bnc	l6073
  6716  000E8C  0E05               	movlw	5
  6717  000E8E  602A               	cpfslt	_i^0,c
  6718  000E90  D001               	goto	l6073
  6719  000E92  D762               	goto	l5975
  6720  000E94                     l6073:
  6721  000E94  0E04               	movlw	4
  6722  000E96  642A               	cpfsgt	_i^0,c
  6723  000E98  D001               	goto	l6077
  6724  000E9A  D7F2               	goto	l6065
  6725  000E9C                     l6077:
  6726  000E9C  D856               	call	PL14	;call to abstracted procedure
  6727  000E9E  5028               	movf	_scoreUsr^0,w,c
  6728  000EA0  5CDE               	subwf	postinc2,w,c
  6729  000EA2  B0D8               	btfsc	status,0,c
  6730  000EA4  0012               	return	
  6731  000EA6  0E05               	movlw	5
  6732  000EA8  602A               	cpfslt	_i^0,c
  6733  000EAA  0C05               	retlw	5
  6734  000EAC  D758               	goto	l5977
  6735  000EAE                     l6083:
  6736                           
  6737                           ;Usuaris.c: 281:             if (indexNextUser != 2 || i > 4) {
  6738  000EAE  0E02               	movlw	2
  6739  000EB0  182C               	xorwf	_indexNextUser^0,w,c
  6740  000EB2  E1E6               	bnz	l6065
  6741  000EB4  0E04               	movlw	4
  6742  000EB6  642A               	cpfsgt	_i^0,c
  6743  000EB8  D001               	goto	l6087
  6744  000EBA  D7E2               	goto	l6065
  6745  000EBC                     l6087:
  6746  000EBC  0E02               	movlw	2
  6747  000EBE  182C               	xorwf	_indexNextUser^0,w,c
  6748  000EC0  A4D8               	btfss	status,2,c
  6749  000EC2  0012               	return	
  6750  000EC4  0E05               	movlw	5
  6751  000EC6  602A               	cpfslt	_i^0,c
  6752  000EC8  0C05               	retlw	5
  6753                           
  6754                           ;Usuaris.c: 286:     if(indexNextUserStruct == 0){
  6755  000ECA  502B               	movf	_indexNextUserStruct^0,w,c
  6756  000ECC  E102               	bnz	l6095
  6757                           
  6758                           ;Usuaris.c: 287:       tmp = 7;
  6759  000ECE  0E07               	movlw	7
  6760  000ED0  D001               	goto	L3
  6761  000ED2                     l6095:
  6762                           
  6763                           ;Usuaris.c: 289:      tmp = indexNextUserStruct-1;
  6764  000ED2  042B               	decf	_indexNextUserStruct^0,w,c
  6765  000ED4                     L3:
  6766  000ED4  6E33               	movwf	_tmp^0,c
  6767                           
  6768                           ;Usuaris.c: 291:     if(puntuacions[i].indexStruct == tmp){
  6769  000ED6  5033               	movf	_tmp^0,w,c
  6770  000ED8  6E69               	movwf	??_UmotorUsers^0,c
  6771  000EDA  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6772  000EDC  D82F               	call	PL8	;call to abstracted procedure
  6773  000EDE  50DF               	movf	indf2,w,c
  6774  000EE0  6E6B               	movwf	(??_UmotorUsers+2)^0,c
  6775  000EE2  6A6C               	clrf	(??_UmotorUsers+3)^0,c
  6776  000EE4  BE6B               	btfsc	(??_UmotorUsers+2)^0,7,c
  6777  000EE6  066C               	decf	(??_UmotorUsers+3)^0,f,c
  6778  000EE8  5069               	movf	??_UmotorUsers^0,w,c
  6779  000EEA  186B               	xorwf	(??_UmotorUsers+2)^0,w,c
  6780  000EEC  E103               	bnz	u6371
  6781  000EEE  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6782  000EF0  186C               	xorwf	(??_UmotorUsers+3)^0,w,c
  6783  000EF2  A4D8               	btfss	status,2,c
  6784  000EF4                     u6371:
  6785  000EF4  D731               	goto	l5975
  6786                           
  6787                           ;Usuaris.c: 292:       puntuacions[i].indexStruct = -1;
  6788  000EF6  D822               	call	PL8	;call to abstracted procedure
  6789  000EF8  0EFF               	movlw	255
  6790  000EFA  68DF               	setf	indf2,c
  6791  000EFC  D72D               	goto	l5975
  6792  000EFE                     l6105:
  6793  000EFE  5027               	movf	UmotorUsers@state^0,w,c
  6794  000F00  6E69               	movwf	??_UmotorUsers^0,c
  6795  000F02  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6796                           
  6797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6798                           ; Switch size 1, requested type "space"
  6799                           ; Number of cases is 1, Range of values is 0 to 0
  6800                           ; switch strategies available:
  6801                           ; Name         Instructions Cycles
  6802                           ; simple_byte            4     3 (average)
  6803                           ;	Chosen strategy is simple_byte
  6804  000F04  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6805  000F06  A4D8               	btfss	status,2,c
  6806  000F08  0012               	return	
  6807                           
  6808                           ; Switch size 1, requested type "space"
  6809                           ; Number of cases is 9, Range of values is 0 to 9
  6810                           ; switch strategies available:
  6811                           ; Name         Instructions Cycles
  6812                           ; simple_byte           28    15 (average)
  6813                           ;	Chosen strategy is simple_byte
  6814  000F0A  5069               	movf	??_UmotorUsers^0,w,c
  6815  000F0C  E101 D6D8          	bz	l796
  6816  000F10  0A01               	xorlw	1	; case 1
  6817  000F12  E101 D70E          	bz	l5969
  6818  000F16  0A03               	xorlw	3	; case 2
  6819  000F18  E101 D723          	bz	l5979
  6820  000F1C  0A01               	xorlw	1	; case 3
  6821  000F1E  E101 D731          	bz	l5991
  6822  000F22  0A06               	xorlw	6	; case 5
  6823  000F24  E101 D761          	bz	l6017
  6824  000F28  0A03               	xorlw	3	; case 6
  6825  000F2A  E101 D77E          	bz	l6037
  6826  000F2E  0A01               	xorlw	1	; case 7
  6827  000F30  E090               	bz	l6055
  6828  000F32  0A0F               	xorlw	15	; case 8
  6829  000F34  E0A7               	bz	l6067
  6830  000F36  0A01               	xorlw	1	; case 9
  6831  000F38  E0BA               	bz	l6083
  6832  000F3A  0012               	return		;funcret
  6833  000F3C                     __end_of_UmotorUsers:
  6834                           	callstack 0
  6835  000F3C                     PL8:
  6836                           	callstack 27
  6837  000F3C  502A               	movf	_i^0,w,c
  6838  000F3E  0D02               	mullw	2
  6839  000F40  50F3               	movf	243,w,c
  6840  000F42  0F98               	addlw	low _puntuacions
  6841  000F44  6ED9               	movwf	fsr2l,c
  6842  000F46  6ADA               	clrf	fsr2h,c
  6843  000F48  0012               	return	
  6844  000F4A                     __end_ofPL8:
  6845                           	callstack 0
  6846  000F4A                     PL14:
  6847                           	callstack 27
  6848  000F4A  502A               	movf	_i^0,w,c
  6849  000F4C  0D02               	mullw	2
  6850  000F4E  50F3               	movf	243,w,c
  6851  000F50  0F99               	addlw	low (_puntuacions+1)
  6852  000F52  6ED9               	movwf	fsr2l,c
  6853  000F54  6ADA               	clrf	fsr2h,c
  6854  000F56  0012               	return	
  6855  000F58                     __end_ofPL14:
  6856                           	callstack 0
  6857  000F58                     PL20:
  6858                           	callstack 27
  6859  000F58  6ED9               	movwf	fsr2l,c
  6860  000F5A  6ADA               	clrf	fsr2h,c
  6861  000F5C  502B               	movf	_indexNextUserStruct^0,w,c
  6862  000F5E  0D12               	mullw	18
  6863  000F60  0E00               	movlw	low _usuaris
  6864  000F62  6E69               	movwf	??_UmotorUsers^0,c
  6865  000F64  0E01               	movlw	high _usuaris
  6866  000F66  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  6867  000F68  0012               	return	
  6868  000F6A                     __end_ofPL20:
  6869                           	callstack 0
  6870  000F6A                     PL48:
  6871                           	callstack 27
  6872  000F6A  6ED9               	movwf	fsr2l,c
  6873  000F6C  6ADA               	clrf	fsr2h,c
  6874  000F6E  50DF               	movf	indf2,w,c
  6875  000F70  0012               	return	
  6876  000F72                     __end_ofPL48:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function _escriureCharEEPROM *****************
  6880 ;; Defined at:
  6881 ;;		line 66 in file "Usuaris.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  c               1    wreg     unsigned char 
  6884 ;;  pos             1    5[COMRAM] unsigned char 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  c               1    6[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1
  6896 ;;      Params:         1       0       0
  6897 ;;      Locals:         1       0       0
  6898 ;;      Temps:          0       0       0
  6899 ;;      Totals:         2       0       0
  6900 ;;Total ram usage:        2 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 2
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_UmotorUsers
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text57
  6911  001D92                     __ptext57:
  6912                           	callstack 0
  6913  001D92                     _escriureCharEEPROM:
  6914                           	callstack 27
  6915                           
  6916                           ;incstack = 0
  6917                           ;escriureCharEEPROM@c stored from wreg
  6918  001D92  6E65               	movwf	escriureCharEEPROM@c^0,c
  6919                           
  6920                           ;Usuaris.c: 67:     EEADR = pos;
  6921  001D94  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6922                           
  6923                           ;Usuaris.c: 68:     EEDATA = c;
  6924  001D98  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6925                           
  6926                           ;Usuaris.c: 69:     EECON1bits.EEPGD = zero;
  6927  001D9C  9EA6               	bcf	166,7,c	;volsfr
  6928                           
  6929                           ;Usuaris.c: 70:     EECON1bits.CFGS = zero;
  6930  001D9E  9CA6               	bcf	166,6,c	;volsfr
  6931                           
  6932                           ;Usuaris.c: 71:     EECON1bits.WREN = 1;
  6933  001DA0  84A6               	bsf	166,2,c	;volsfr
  6934                           
  6935                           ;Usuaris.c: 72:     INTCONbits.GIE = zero;
  6936  001DA2  9EF2               	bcf	242,7,c	;volatile
  6937                           
  6938                           ;Usuaris.c: 73:     EECON2 = 85;
  6939  001DA4  0E55               	movlw	85
  6940  001DA6  6EA7               	movwf	167,c	;volsfr
  6941                           
  6942                           ;Usuaris.c: 74:     EECON2 = 170;
  6943  001DA8  0EAA               	movlw	170
  6944  001DAA  6EA7               	movwf	167,c	;volsfr
  6945                           
  6946                           ;Usuaris.c: 75:     EECON1bits.WR = 1;
  6947  001DAC  82A6               	bsf	166,1,c	;volsfr
  6948  001DAE                     l753:
  6949  001DAE  B2A6               	btfsc	166,1,c	;volsfr
  6950  001DB0  D7FE               	goto	l753
  6951                           
  6952                           ;Usuaris.c: 77:     INTCONbits.GIE = 1;
  6953  001DB2  8EF2               	bsf	242,7,c	;volatile
  6954                           
  6955                           ;Usuaris.c: 78:     EECON1bits.WREN = zero;
  6956  001DB4  94A6               	bcf	166,2,c	;volsfr
  6957  001DB6  0012               	return		;funcret
  6958  001DB8                     __end_of_escriureCharEEPROM:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _compareStrings *****************
  6962 ;; Defined at:
  6963 ;;		line 130 in file "Usuaris.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6966 ;;		 -> tmpPassword(9), tmpUsername(9), 
  6967 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6968 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      unsigned char 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1
  6980 ;;      Params:         3       0       0
  6981 ;;      Locals:         0       0       0
  6982 ;;      Temps:          2       0       0
  6983 ;;      Totals:         5       0       0
  6984 ;;Total ram usage:        5 bytes
  6985 ;; Hardware stack levels used: 1
  6986 ;; Hardware stack levels required when called: 2
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_UmotorUsers
  6991 ;;		_miraPassword
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text58
  6996  001BFA                     __ptext58:
  6997                           	callstack 0
  6998  001BFA                     _compareStrings:
  6999                           	callstack 26
  7000                           
  7001                           ;Usuaris.c: 131:     while (*a){
  7002                           
  7003                           ;incstack = 0
  7004  001BFA  D00A               	goto	l4453
  7005  001BFC                     l4447:
  7006                           
  7007                           ;Usuaris.c: 132:         if (*a != *b)break;
  7008  001BFC  D813               	call	PL54	;call to abstracted procedure
  7009  001BFE  5064               	movf	compareStrings@a^0,w,c
  7010  001C00  6EE1               	movwf	fsr1l,c
  7011  001C02  6AE2               	clrf	fsr1h,c
  7012  001C04  50DE               	movf	postinc2,w,c
  7013  001C06  18E6               	xorwf	postinc1,w,c
  7014  001C08  E105               	bnz	u3840
  7015                           
  7016                           ;Usuaris.c: 133:         a++;
  7017  001C0A  2A64               	incf	compareStrings@a^0,f,c
  7018                           
  7019                           ;Usuaris.c: 134:         b++;
  7020  001C0C  4A65               	infsnz	compareStrings@b^0,f,c
  7021  001C0E  2A66               	incf	(compareStrings@b+1)^0,f,c
  7022  001C10                     l4453:
  7023                           
  7024                           ;Usuaris.c: 131:     while (*a){
  7025  001C10  D80E               	call	PL60	;call to abstracted procedure
  7026  001C12  E1F4               	bnz	l4447
  7027  001C14                     u3840:
  7028                           
  7029                           ;Usuaris.c: 136:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7030  001C14  D807               	call	PL54	;call to abstracted procedure
  7031  001C16  50DF               	movf	indf2,w,c
  7032  001C18  6E67               	movwf	??_compareStrings^0,c
  7033  001C1A  D809               	call	PL60	;call to abstracted procedure
  7034  001C1C  6E68               	movwf	(??_compareStrings+1)^0,c
  7035  001C1E  5067               	movf	??_compareStrings^0,w,c
  7036  001C20  5C68               	subwf	(??_compareStrings+1)^0,w,c
  7037  001C22  0012               	return		;funcret
  7038  001C24                     __end_of_compareStrings:
  7039                           	callstack 0
  7040  001C24                     PL54:
  7041                           	callstack 26
  7042  001C24  C065  FFD9         	movff	compareStrings@b,fsr2l
  7043  001C28  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  7044  001C2C  0012               	return	
  7045  001C2E                     __end_ofPL54:
  7046                           	callstack 0
  7047  001C2E                     PL60:
  7048                           	callstack 26
  7049  001C2E  5064               	movf	compareStrings@a^0,w,c
  7050  001C30  6ED9               	movwf	fsr2l,c
  7051  001C32  6ADA               	clrf	fsr2h,c
  7052  001C34  50DF               	movf	indf2,w,c
  7053  001C36  0012               	return	
  7054  001C38                     __end_ofPL60:
  7055                           	callstack 0
  7056                           
  7057 ;; *************** function _Uinit *****************
  7058 ;; Defined at:
  7059 ;;		line 87 in file "Usuaris.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;		None
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  k               1   12[COMRAM] unsigned char 
  7064 ;;  k               1   11[COMRAM] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1
  7074 ;;      Params:         0       0       0
  7075 ;;      Locals:         2       0       0
  7076 ;;      Temps:          2       0       0
  7077 ;;      Totals:         4       0       0
  7078 ;;Total ram usage:        4 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 3
  7081 ;; This function calls:
  7082 ;;		___lbdiv
  7083 ;;		_llegirCharEEPROM
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text59
  7090  0014CE                     __ptext59:
  7091                           	callstack 0
  7092  0014CE                     _Uinit:
  7093                           	callstack 27
  7094                           
  7095                           ;Usuaris.c: 91:     i = 0;
  7096                           
  7097                           ;incstack = 0
  7098  0014CE  6A2A               	clrf	_i^0,c
  7099                           
  7100                           ;Usuaris.c: 96:     numUsuaris = llegirCharEEPROM(zero);
  7101  0014D0  0E00               	movlw	0
  7102  0014D2  ECD5  F00F         	call	_llegirCharEEPROM
  7103  0014D6  6E2D               	movwf	_numUsuaris^0,c
  7104                           
  7105                           ;Usuaris.c: 98:     if(numUsuaris > 8) numUsuaris = zero;
  7106  0014D8  0E08               	movlw	8
  7107  0014DA  642D               	cpfsgt	_numUsuaris^0,c
  7108  0014DC  D001               	goto	l4825
  7109  0014DE  6A2D               	clrf	_numUsuaris^0,c
  7110  0014E0                     l4825:
  7111                           
  7112                           ;Usuaris.c: 102:     i++;
  7113  0014E0  2A2A               	incf	_i^0,f,c
  7114                           
  7115                           ;Usuaris.c: 103:     indexNextUser = llegirCharEEPROM(1);
  7116  0014E2  0E01               	movlw	1
  7117  0014E4  ECD5  F00F         	call	_llegirCharEEPROM
  7118  0014E8  6E2C               	movwf	_indexNextUser^0,c
  7119                           
  7120                           ;Usuaris.c: 104:     if(indexNextUser == 255) indexNextUser = 2;
  7121  0014EA  282C               	incf	_indexNextUser^0,w,c
  7122  0014EC  E102               	bnz	l4833
  7123  0014EE  0E02               	movlw	2
  7124  0014F0  6E2C               	movwf	_indexNextUser^0,c
  7125  0014F2                     l4833:
  7126                           
  7127                           ;Usuaris.c: 105:     indexNextUserStruct = indexNextUser/18;
  7128  0014F2  0E12               	movlw	18
  7129  0014F4  6E64               	movwf	___lbdiv@divisor^0,c
  7130  0014F6  502C               	movf	_indexNextUser^0,w,c
  7131  0014F8  EC57  F00E         	call	___lbdiv
  7132  0014FC  6E2B               	movwf	_indexNextUserStruct^0,c
  7133                           
  7134                           ;Usuaris.c: 106:     i++;
  7135  0014FE  2A2A               	incf	_i^0,f,c
  7136                           
  7137                           ;Usuaris.c: 107:     for(j = zero;j<numUsuaris;j++){
  7138  001500  6A29               	clrf	_j^0,c
  7139  001502  D01F               	goto	l4865
  7140  001504                     l765:
  7141                           
  7142                           ;Usuaris.c: 108:         for(unsigned char k = zero; k<9; k++){
  7143  001504  6A6A               	clrf	Uinit@k^0,c
  7144  001506                     l4843:
  7145                           
  7146                           ;Usuaris.c: 109:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7147  001506  D842               	call	PL40	;call to abstracted procedure
  7148  001508  D848               	call	PL76	;call to abstracted procedure
  7149  00150A  506A               	movf	Uinit@k^0,w,c
  7150  00150C  D838               	call	PL38	;call to abstracted procedure
  7151  00150E  ECD5  F00F         	call	_llegirCharEEPROM
  7152  001512  6EDF               	movwf	indf2,c
  7153                           
  7154                           ;Usuaris.c: 110:             i++;
  7155  001514  2A2A               	incf	_i^0,f,c
  7156                           
  7157                           ;Usuaris.c: 111:         }
  7158  001516  2A6A               	incf	Uinit@k^0,f,c
  7159  001518  0E08               	movlw	8
  7160  00151A  646A               	cpfsgt	Uinit@k^0,c
  7161  00151C  D7F4               	goto	l4843
  7162                           
  7163                           ;Usuaris.c: 112:         for(unsigned char k = zero; k<9;k++){
  7164  00151E  6A6B               	clrf	Uinit@k_1194^0,c
  7165  001520                     l4855:
  7166                           
  7167                           ;Usuaris.c: 113:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7168  001520  D835               	call	PL40	;call to abstracted procedure
  7169  001522  0E09               	movlw	9
  7170  001524  2668               	addwf	??_Uinit^0,f,c
  7171  001526  0E00               	movlw	0
  7172  001528  2269               	addwfc	(??_Uinit+1)^0,f,c
  7173  00152A  D837               	call	PL76	;call to abstracted procedure
  7174  00152C  506B               	movf	Uinit@k_1194^0,w,c
  7175  00152E  D827               	call	PL38	;call to abstracted procedure
  7176  001530  ECD5  F00F         	call	_llegirCharEEPROM
  7177  001534  6EDF               	movwf	indf2,c
  7178                           
  7179                           ;Usuaris.c: 114:             i++;
  7180  001536  2A2A               	incf	_i^0,f,c
  7181                           
  7182                           ;Usuaris.c: 115:         }
  7183  001538  2A6B               	incf	Uinit@k_1194^0,f,c
  7184  00153A  0E08               	movlw	8
  7185  00153C  646B               	cpfsgt	Uinit@k_1194^0,c
  7186  00153E  D7F0               	goto	l4855
  7187                           
  7188                           ;Usuaris.c: 116:     }
  7189  001540  2A29               	incf	_j^0,f,c
  7190  001542                     l4865:
  7191  001542  502D               	movf	_numUsuaris^0,w,c
  7192  001544  5C29               	subwf	_j^0,w,c
  7193  001546  E3DE               	bnc	l765
  7194                           
  7195                           ;Usuaris.c: 122:     puntuacions[zero].indexStruct = neg;
  7196  001548  0100               	movlb	0	; () banked
  7197  00154A  6998               	setf	_puntuacions& (0+255),b
  7198                           
  7199                           ;Usuaris.c: 123:     for(i = 0; i<5; i++){
  7200  00154C  6A2A               	clrf	_i^0,c
  7201  00154E                     l4867:
  7202  00154E  0E04               	movlw	4
  7203  001550  642A               	cpfsgt	_i^0,c
  7204  001552  D001               	goto	l4871
  7205  001554  0C04               	retlw	4
  7206  001556                     l4871:
  7207                           
  7208                           ;Usuaris.c: 124:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7209  001556  EC9E  F007         	call	PL8	;call to abstracted procedure
  7210  00155A  502A               	movf	_i^0,w,c
  7211  00155C  0D02               	mullw	2
  7212  00155E  50F3               	movf	243,w,c
  7213  001560  0FC8               	addlw	200
  7214  001562  ECD5  F00F         	call	_llegirCharEEPROM
  7215  001566  6EDF               	movwf	indf2,c
  7216                           
  7217                           ;Usuaris.c: 125:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7218  001568  ECA5  F007         	call	PL14	;call to abstracted procedure
  7219  00156C  502A               	movf	_i^0,w,c
  7220  00156E  0D02               	mullw	2
  7221  001570  50F3               	movf	243,w,c
  7222  001572  0FC9               	addlw	201
  7223  001574  ECD5  F00F         	call	_llegirCharEEPROM
  7224  001578  6EDF               	movwf	indf2,c
  7225                           
  7226                           ;Usuaris.c: 126:     }
  7227  00157A  2A2A               	incf	_i^0,f,c
  7228  00157C  D7E8               	goto	l4867
  7229  00157E                     __end_of_Uinit:
  7230                           	callstack 0
  7231  00157E                     PL38:
  7232                           	callstack 27
  7233  00157E  2468               	addwf	??_Uinit^0,w,c
  7234  001580  6ED9               	movwf	fsr2l,c
  7235  001582  0E00               	movlw	0
  7236  001584  2069               	addwfc	(??_Uinit+1)^0,w,c
  7237  001586  6EDA               	movwf	fsr2h,c
  7238  001588  502A               	movf	_i^0,w,c
  7239  00158A  0012               	return	
  7240  00158C                     __end_ofPL38:
  7241                           	callstack 0
  7242  00158C                     PL40:
  7243                           	callstack 27
  7244  00158C  5029               	movf	_j^0,w,c
  7245  00158E  0D12               	mullw	18
  7246  001590  0E00               	movlw	low _usuaris
  7247  001592  6E68               	movwf	??_Uinit^0,c
  7248  001594  0E01               	movlw	high _usuaris
  7249  001596  6E69               	movwf	(??_Uinit+1)^0,c
  7250  001598  0012               	return	
  7251  00159A                     __end_ofPL40:
  7252                           	callstack 0
  7253  00159A                     PL76:
  7254                           	callstack 27
  7255  00159A  50F3               	movf	243,w,c
  7256  00159C  2668               	addwf	??_Uinit^0,f,c
  7257  00159E  50F4               	movf	244,w,c
  7258  0015A0  2269               	addwfc	(??_Uinit+1)^0,f,c
  7259  0015A2  0012               	return	
  7260  0015A4                     __end_ofPL76:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _llegirCharEEPROM *****************
  7264 ;; Defined at:
  7265 ;;		line 80 in file "Usuaris.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  pos             1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  pos             1    5[COMRAM] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      unsigned char 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1
  7279 ;;      Params:         0       0       0
  7280 ;;      Locals:         1       0       0
  7281 ;;      Temps:          0       0       0
  7282 ;;      Totals:         1       0       0
  7283 ;;Total ram usage:        1 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 2
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_Uinit
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text60
  7294  001FAA                     __ptext60:
  7295                           	callstack 0
  7296  001FAA                     _llegirCharEEPROM:
  7297                           	callstack 27
  7298                           
  7299                           ;incstack = 0
  7300                           ;llegirCharEEPROM@pos stored from wreg
  7301  001FAA  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7302                           
  7303                           ;Usuaris.c: 81:     EEADR = pos;
  7304  001FAC  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7305                           
  7306                           ;Usuaris.c: 82:     EECON1bits.EEPGD = zero;
  7307  001FB0  9EA6               	bcf	166,7,c	;volsfr
  7308                           
  7309                           ;Usuaris.c: 83:     EECON1bits.CFGS = zero;
  7310  001FB2  9CA6               	bcf	166,6,c	;volsfr
  7311                           
  7312                           ;Usuaris.c: 84:     EECON1bits.RD = 1;
  7313  001FB4  80A6               	bsf	166,0,c	;volsfr
  7314                           
  7315                           ;Usuaris.c: 85:     return EEDATA;
  7316  001FB6  50A8               	movf	168,w,c	;volatile
  7317  001FB8  0012               	return		;funcret
  7318  001FBA                     __end_of_llegirCharEEPROM:
  7319                           	callstack 0
  7320                           
  7321 ;; *************** function ___lbdiv *****************
  7322 ;; Defined at:
  7323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  dividend        1    wreg     unsigned char 
  7326 ;;  divisor         1    5[COMRAM] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  dividend        1    6[COMRAM] unsigned char 
  7329 ;;  quotient        1    8[COMRAM] unsigned char 
  7330 ;;  counter         1    7[COMRAM] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      unsigned char 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1
  7340 ;;      Params:         1       0       0
  7341 ;;      Locals:         3       0       0
  7342 ;;      Temps:          0       0       0
  7343 ;;      Totals:         4       0       0
  7344 ;;Total ram usage:        4 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 2
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_Uinit
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text61
  7355  001CAE                     __ptext61:
  7356                           	callstack 0
  7357  001CAE                     ___lbdiv:
  7358                           	callstack 27
  7359                           
  7360                           ;incstack = 0
  7361                           ;___lbdiv@dividend stored from wreg
  7362  001CAE  6E65               	movwf	___lbdiv@dividend^0,c
  7363  001CB0  6A67               	clrf	___lbdiv@quotient^0,c
  7364  001CB2  5064               	movf	___lbdiv@divisor^0,w,c
  7365  001CB4  E014               	bz	l4701
  7366  001CB6  0E01               	movlw	1
  7367  001CB8  6E66               	movwf	___lbdiv@counter^0,c
  7368  001CBA  D003               	goto	l4689
  7369  001CBC                     l4685:
  7370  001CBC  90D8               	bcf	status,0,c
  7371  001CBE  3664               	rlcf	___lbdiv@divisor^0,f,c
  7372  001CC0  2A66               	incf	___lbdiv@counter^0,f,c
  7373  001CC2                     l4689:
  7374  001CC2  AE64               	btfss	___lbdiv@divisor^0,7,c
  7375  001CC4  D7FB               	goto	l4685
  7376  001CC6                     u3990:
  7377  001CC6  90D8               	bcf	status,0,c
  7378  001CC8  3667               	rlcf	___lbdiv@quotient^0,f,c
  7379  001CCA  5064               	movf	___lbdiv@divisor^0,w,c
  7380  001CCC  5C65               	subwf	___lbdiv@dividend^0,w,c
  7381  001CCE  E303               	bnc	l4697
  7382  001CD0  5064               	movf	___lbdiv@divisor^0,w,c
  7383  001CD2  5E65               	subwf	___lbdiv@dividend^0,f,c
  7384  001CD4  8067               	bsf	___lbdiv@quotient^0,0,c
  7385  001CD6                     l4697:
  7386  001CD6  90D8               	bcf	status,0,c
  7387  001CD8  3264               	rrcf	___lbdiv@divisor^0,f,c
  7388  001CDA  2E66               	decfsz	___lbdiv@counter^0,f,c
  7389  001CDC  D7F4               	goto	u3990
  7390  001CDE                     l4701:
  7391  001CDE  5067               	movf	___lbdiv@quotient^0,w,c
  7392  001CE0  0012               	return		;funcret
  7393  001CE2                     __end_of___lbdiv:
  7394                           	callstack 0
  7395                           
  7396 ;; *************** function _TiInitTimer *****************
  7397 ;; Defined at:
  7398 ;;		line 18 in file "TiTTimer.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1
  7412 ;;      Params:         0       0       0
  7413 ;;      Locals:         0       0       0
  7414 ;;      Temps:          0       0       0
  7415 ;;      Totals:         0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; Hardware stack levels required when called: 2
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_main
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text62
  7427  001D42                     __ptext62:
  7428                           	callstack 0
  7429  001D42                     _TiInitTimer:
  7430                           	callstack 28
  7431                           
  7432                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7433                           
  7434                           ;incstack = 0
  7435  001D42  9ED0               	bcf	208,7,c	;volatile
  7436                           
  7437                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7438  001D44  8EF2               	bsf	242,7,c	;volatile
  7439                           
  7440                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7441  001D46  8CF2               	bsf	242,6,c	;volatile
  7442                           
  7443                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7444  001D48  8AF2               	bsf	242,5,c	;volatile
  7445                           
  7446                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7447  001D4A  94F2               	bcf	242,2,c	;volatile
  7448                           
  7449                           ;TiTTimer.c: 25:     T0CON = 136;
  7450  001D4C  0E88               	movlw	136
  7451  001D4E  6ED5               	movwf	213,c	;volatile
  7452                           
  7453                           ;TiTTimer.c: 27:     TMR0H = 223;
  7454                           
  7455                           ;TiTTimer.c: 28:     TMR0L = 148;
  7456  001D50  ECF8  F00D         	call	PL72	;call to abstracted procedure
  7457                           
  7458                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7459  001D54  8ED5               	bsf	213,7,c	;volatile
  7460                           
  7461                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7462  001D56  6A34               	clrf	_counter^0,c
  7463  001D58                     l4795:
  7464  001D58  0E07               	movlw	7
  7465  001D5A  6434               	cpfsgt	_counter^0,c
  7466  001D5C  D001               	goto	l4799
  7467  001D5E  0C07               	retlw	7
  7468  001D60                     l4799:
  7469                           
  7470                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7471  001D60  EC9A  F00E         	call	PL16	;call to abstracted procedure
  7472  001D64  6ADF               	clrf	indf2,c
  7473                           
  7474                           ;TiTTimer.c: 33:     }
  7475  001D66  2A34               	incf	_counter^0,f,c
  7476  001D68  D7F7               	goto	l4795
  7477  001D6A                     __end_of_TiInitTimer:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function _TeTeclat *****************
  7481 ;; Defined at:
  7482 ;;		line 21 in file "TeTeclat.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1
  7496 ;;      Params:         0       0       0
  7497 ;;      Locals:         0       0       0
  7498 ;;      Temps:          3       0       0
  7499 ;;      Totals:         3       0       0
  7500 ;;Total ram usage:        3 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 3
  7503 ;; This function calls:
  7504 ;;		_MsetNovaTecla
  7505 ;;		_SsetNovaTecla
  7506 ;;		_TiGetTics
  7507 ;;		_TiResetTics
  7508 ;; This function is called by:
  7509 ;;		_main
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text63
  7514  0013AC                     __ptext63:
  7515                           	callstack 0
  7516  0013AC                     _TeTeclat:
  7517                           	callstack 27
  7518                           
  7519                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7520                           
  7521                           ;incstack = 0
  7522  0013AC  A083               	btfss	131,0,c	;volatile
  7523  0013AE  D003               	goto	u6380
  7524  0013B0  6A6B               	clrf	??_TeTeclat^0,c
  7525  0013B2  2A6B               	incf	??_TeTeclat^0,f,c
  7526  0013B4  D001               	goto	u6388
  7527  0013B6                     u6380:
  7528  0013B6  6A6B               	clrf	??_TeTeclat^0,c
  7529  0013B8                     u6388:
  7530  0013B8  0E01               	movlw	1
  7531  0013BA  A283               	btfss	131,1,c	;volatile
  7532  0013BC  0E00               	movlw	0
  7533  0013BE  0D02               	mullw	2
  7534  0013C0  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7535  0013C4  0E01               	movlw	1
  7536  0013C6  A483               	btfss	131,2,c	;volatile
  7537  0013C8  0E00               	movlw	0
  7538  0013CA  0D03               	mullw	3
  7539  0013CC  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7540  0013D0  0E01               	movlw	1
  7541  0013D2  A683               	btfss	131,3,c	;volatile
  7542  0013D4  0E00               	movlw	0
  7543  0013D6  0D04               	mullw	4
  7544  0013D8  50F3               	movf	243,w,c
  7545  0013DA  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7546  0013DC  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7547  0013DE  246B               	addwf	??_TeTeclat^0,w,c
  7548  0013E0  6E35               	movwf	TeTeclat@files^0,c
  7549                           
  7550                           ;TeTeclat.c: 26:  switch(state) {
  7551  0013E2  D055               	goto	l6183
  7552  0013E4                     l6113:
  7553                           
  7554                           ;TeTeclat.c: 28:    if (files==zero) {
  7555  0013E4  5035               	movf	TeTeclat@files^0,w,c
  7556  0013E6  E106               	bnz	l6119
  7557                           
  7558                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7559  0013E8  888C               	bsf	140,4,c	;volatile
  7560                           
  7561                           ;TeTeclat.c: 30:     LATDbits.LD5=zero;
  7562  0013EA  9A8C               	bcf	140,5,c	;volatile
  7563                           
  7564                           ;TeTeclat.c: 31:     LATDbits.LD6=zero;
  7565  0013EC  9C8C               	bcf	140,6,c	;volatile
  7566                           
  7567                           ;TeTeclat.c: 32:     cols=zero;
  7568  0013EE  6A36               	clrf	TeTeclat@cols^0,c
  7569  0013F0                     l6117:
  7570                           
  7571                           ;TeTeclat.c: 33:     state++;
  7572  0013F0  2A37               	incf	TeTeclat@state^0,f,c
  7573                           
  7574                           ;TeTeclat.c: 34:    }
  7575  0013F2  0012               	return	
  7576  0013F4                     l6119:
  7577  0013F4  5035               	movf	TeTeclat@files^0,w,c
  7578  0013F6  B4D8               	btfsc	status,2,c
  7579  0013F8  0012               	return	
  7580                           
  7581                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7582  0013FA  5038               	movf	_tiTeclat^0,w,c
  7583  0013FC  EC75  F00F         	call	_TiResetTics
  7584  001400                     l6123:
  7585                           
  7586                           ;TeTeclat.c: 37:     state = 3;
  7587  001400  0E03               	movlw	3
  7588  001402  6E37               	movwf	TeTeclat@state^0,c
  7589  001404  0C03               	retlw	3
  7590  001406                     l6125:
  7591                           
  7592                           ;TeTeclat.c: 41:    if (files==zero) {
  7593  001406  5035               	movf	TeTeclat@files^0,w,c
  7594  001408  E106               	bnz	l6133
  7595                           
  7596                           ;TeTeclat.c: 42:     LATDbits.LD4=zero;
  7597  00140A  988C               	bcf	140,4,c	;volatile
  7598                           
  7599                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7600  00140C  8A8C               	bsf	140,5,c	;volatile
  7601                           
  7602                           ;TeTeclat.c: 44:     LATDbits.LD6=zero;
  7603  00140E  9C8C               	bcf	140,6,c	;volatile
  7604                           
  7605                           ;TeTeclat.c: 45:     cols=1;
  7606  001410  0E01               	movlw	1
  7607  001412  6E36               	movwf	TeTeclat@cols^0,c
  7608  001414  D7ED               	goto	l6117
  7609  001416                     l6133:
  7610  001416  5035               	movf	TeTeclat@files^0,w,c
  7611  001418  B4D8               	btfsc	status,2,c
  7612  00141A  0012               	return	
  7613                           
  7614                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7615  00141C  5038               	movf	_tiTeclat^0,w,c
  7616  00141E  EC75  F00F         	call	_TiResetTics
  7617  001422  D7EE               	goto	l6123
  7618  001424                     l6139:
  7619                           
  7620                           ;TeTeclat.c: 54:    if (files==zero) {
  7621  001424  5035               	movf	TeTeclat@files^0,w,c
  7622  001426  E107               	bnz	l6147
  7623                           
  7624                           ;TeTeclat.c: 55:     LATDbits.LD4=zero;
  7625  001428  988C               	bcf	140,4,c	;volatile
  7626                           
  7627                           ;TeTeclat.c: 56:     LATDbits.LD5=zero;
  7628  00142A  9A8C               	bcf	140,5,c	;volatile
  7629                           
  7630                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7631  00142C  8C8C               	bsf	140,6,c	;volatile
  7632                           
  7633                           ;TeTeclat.c: 58:     cols=2;
  7634  00142E  0E02               	movlw	2
  7635  001430  6E36               	movwf	TeTeclat@cols^0,c
  7636  001432                     l6145:
  7637                           
  7638                           ;TeTeclat.c: 59:     state = zero;
  7639  001432  6A37               	clrf	TeTeclat@state^0,c
  7640                           
  7641                           ;TeTeclat.c: 60:    }
  7642  001434  0012               	return	
  7643  001436                     l6147:
  7644  001436  5035               	movf	TeTeclat@files^0,w,c
  7645  001438  B4D8               	btfsc	status,2,c
  7646  00143A  0012               	return	
  7647                           
  7648                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7649  00143C  5038               	movf	_tiTeclat^0,w,c
  7650  00143E  EC75  F00F         	call	_TiResetTics
  7651  001442  D7D6               	goto	l6117
  7652  001444                     l6153:
  7653                           
  7654                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7655  001444  5038               	movf	_tiTeclat^0,w,c
  7656  001446  ECDC  F00E         	call	_TiGetTics
  7657  00144A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7658  00144C  0012               	return	
  7659  00144E  D7D0               	goto	l6117
  7660  001450                     l6157:
  7661                           
  7662                           ;TeTeclat.c: 72:    if (files==zero) {
  7663  001450  5035               	movf	TeTeclat@files^0,w,c
  7664  001452  E103               	bnz	l6161
  7665                           
  7666                           ;TeTeclat.c: 73:     state = 1;
  7667  001454  0E01               	movlw	1
  7668  001456  6E37               	movwf	TeTeclat@state^0,c
  7669                           
  7670                           ;TeTeclat.c: 74:    }
  7671  001458  0C01               	retlw	1
  7672  00145A                     l6161:
  7673  00145A  5035               	movf	TeTeclat@files^0,w,c
  7674  00145C  B4D8               	btfsc	status,2,c
  7675  00145E  0012               	return	
  7676                           
  7677                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7678  001460  D82D               	call	PL22	;call to abstracted procedure
  7679  001462  EC66  F000         	call	_MsetNovaTecla
  7680                           
  7681                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7682  001466  D82A               	call	PL22	;call to abstracted procedure
  7683  001468  EC62  F000         	call	_SsetNovaTecla
  7684  00146C  D7C1               	goto	l6117
  7685  00146E                     l6167:
  7686                           
  7687                           ;TeTeclat.c: 82:    if (files==zero) {
  7688  00146E  5035               	movf	TeTeclat@files^0,w,c
  7689  001470  A4D8               	btfss	status,2,c
  7690  001472  0012               	return	
  7691                           
  7692                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7693  001474  5038               	movf	_tiTeclat^0,w,c
  7694  001476  EC75  F00F         	call	_TiResetTics
  7695  00147A  D7BA               	goto	l6117
  7696  00147C                     l6173:
  7697                           
  7698                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7699  00147C  5038               	movf	_tiTeclat^0,w,c
  7700  00147E  ECDC  F00E         	call	_TiGetTics
  7701  001482  D7E3               	goto	L4
  7702  001484                     l6177:
  7703                           
  7704                           ;TeTeclat.c: 93:    if (files!=zero) {
  7705  001484  5035               	movf	TeTeclat@files^0,w,c
  7706  001486  E0D5               	bz	l6145
  7707                           
  7708                           ;TeTeclat.c: 94:     state = 5;
  7709  001488  0E05               	movlw	5
  7710  00148A  6E37               	movwf	TeTeclat@state^0,c
  7711                           
  7712                           ;TeTeclat.c: 95:    }
  7713  00148C  0C05               	retlw	5
  7714  00148E                     l6183:
  7715  00148E  5037               	movf	TeTeclat@state^0,w,c
  7716  001490  6E6B               	movwf	??_TeTeclat^0,c
  7717  001492  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7718                           
  7719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7720                           ; Switch size 1, requested type "space"
  7721                           ; Number of cases is 1, Range of values is 0 to 0
  7722                           ; switch strategies available:
  7723                           ; Name         Instructions Cycles
  7724                           ; simple_byte            4     3 (average)
  7725                           ;	Chosen strategy is simple_byte
  7726  001494  506C               	movf	(??_TeTeclat+1)^0,w,c
  7727  001496  A4D8               	btfss	status,2,c
  7728  001498  0012               	return	
  7729                           
  7730                           ; Switch size 1, requested type "space"
  7731                           ; Number of cases is 8, Range of values is 0 to 7
  7732                           ; switch strategies available:
  7733                           ; Name         Instructions Cycles
  7734                           ; simple_byte           25    13 (average)
  7735                           ;	Chosen strategy is simple_byte
  7736  00149A  506B               	movf	??_TeTeclat^0,w,c
  7737  00149C  E0A3               	bz	l6113
  7738  00149E  0A01               	xorlw	1	; case 1
  7739  0014A0  E0B2               	bz	l6125
  7740  0014A2  0A03               	xorlw	3	; case 2
  7741  0014A4  E0BF               	bz	l6139
  7742  0014A6  0A01               	xorlw	1	; case 3
  7743  0014A8  E0CD               	bz	l6153
  7744  0014AA  0A07               	xorlw	7	; case 4
  7745  0014AC  E0D1               	bz	l6157
  7746  0014AE  0A01               	xorlw	1	; case 5
  7747  0014B0  E0DE               	bz	l6167
  7748  0014B2  0A03               	xorlw	3	; case 6
  7749  0014B4  E0E3               	bz	l6173
  7750  0014B6  0A01               	xorlw	1	; case 7
  7751  0014B8  E0E5               	bz	l6177
  7752  0014BA  0012               	return		;funcret
  7753  0014BC                     __end_of_TeTeclat:
  7754                           	callstack 0
  7755  0014BC                     PL22:
  7756                           	callstack 27
  7757  0014BC  5035               	movf	TeTeclat@files^0,w,c
  7758  0014BE  0D03               	mullw	3
  7759  0014C0  50F3               	movf	243,w,c
  7760  0014C2  0FC1               	addlw	low (_teclaPremuda+253)
  7761  0014C4  2436               	addwf	TeTeclat@cols^0,w,c
  7762  0014C6  6ED9               	movwf	fsr2l,c
  7763  0014C8  6ADA               	clrf	fsr2h,c
  7764  0014CA  50DF               	movf	indf2,w,c
  7765  0014CC  0012               	return	
  7766  0014CE                     __end_ofPL22:
  7767                           	callstack 0
  7768                           
  7769 ;; *************** function _SsetNovaTecla *****************
  7770 ;; Defined at:
  7771 ;;		line 124 in file "Ssms.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  tecla           1    wreg     unsigned char 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  tecla           1    5[COMRAM] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1
  7785 ;;      Params:         0       0       0
  7786 ;;      Locals:         1       0       0
  7787 ;;      Temps:          0       0       0
  7788 ;;      Totals:         1       0       0
  7789 ;;Total ram usage:        1 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 2
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_TeTeclat
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text64
  7800  0000C4                     __ptext64:
  7801                           	callstack 0
  7802  0000C4                     _SsetNovaTecla:
  7803                           	callstack 27
  7804                           
  7805                           ;incstack = 0
  7806                           ;SsetNovaTecla@tecla stored from wreg
  7807  0000C4  6E64               	movwf	SsetNovaTecla@tecla^0,c
  7808                           
  7809                           ;Ssms.c: 125:     novaTecla = tecla;
  7810  0000C6  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  7811  0000CA  0012               	return		;funcret
  7812  0000CC                     __end_of_SsetNovaTecla:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _MsetNovaTecla *****************
  7816 ;; Defined at:
  7817 ;;		line 31 in file "Menu.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  tecla           1    wreg     unsigned char 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  tecla           1    5[COMRAM] unsigned char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1
  7831 ;;      Params:         0       0       0
  7832 ;;      Locals:         1       0       0
  7833 ;;      Temps:          0       0       0
  7834 ;;      Totals:         1       0       0
  7835 ;;Total ram usage:        1 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 2
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_TeTeclat
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text65
  7846  0000CC                     __ptext65:
  7847                           	callstack 0
  7848  0000CC                     _MsetNovaTecla:
  7849                           	callstack 27
  7850                           
  7851                           ;incstack = 0
  7852                           ;MsetNovaTecla@tecla stored from wreg
  7853  0000CC  6E64               	movwf	MsetNovaTecla@tecla^0,c
  7854                           
  7855                           ;Menu.c: 32:     NovaTecla = tecla;
  7856  0000CE  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  7857  0000D2  0012               	return		;funcret
  7858  0000D4                     __end_of_MsetNovaTecla:
  7859                           	callstack 0
  7860                           
  7861 ;; *************** function _TeInit *****************
  7862 ;; Defined at:
  7863 ;;		line 17 in file "TeTeclat.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1
  7877 ;;      Params:         0       0       0
  7878 ;;      Locals:         0       0       0
  7879 ;;      Temps:          0       0       0
  7880 ;;      Totals:         0       0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; Hardware stack levels required when called: 3
  7884 ;; This function calls:
  7885 ;;		_TiGetTimer
  7886 ;; This function is called by:
  7887 ;;		_main
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text66
  7892  0000D4                     __ptext66:
  7893                           	callstack 0
  7894  0000D4                     _TeInit:
  7895                           	callstack 27
  7896                           
  7897                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7898                           
  7899                           ;incstack = 0
  7900  0000D4  EC8B  F00E         	call	_TiGetTimer	;wreg free
  7901  0000D8  6E38               	movwf	_tiTeclat^0,c
  7902  0000DA  0012               	return		;funcret
  7903  0000DC                     __end_of_TeInit:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _Sinit *****************
  7907 ;; Defined at:
  7908 ;;		line 18 in file "Ssms.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;		None
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1
  7922 ;;      Params:         0       0       0
  7923 ;;      Locals:         0       0       0
  7924 ;;      Temps:          0       0       0
  7925 ;;      Totals:         0       0       0
  7926 ;;Total ram usage:        0 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 3
  7929 ;; This function calls:
  7930 ;;		_TiGetTimer
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text67
  7937  0000DC                     __ptext67:
  7938                           	callstack 0
  7939  0000DC                     _Sinit:
  7940                           	callstack 27
  7941                           
  7942                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7943                           
  7944                           ;incstack = 0
  7945  0000DC  EC8B  F00E         	call	_TiGetTimer	;wreg free
  7946  0000E0  6E3B               	movwf	_timerSMS^0,c
  7947  0000E2  0012               	return		;funcret
  7948  0000E4                     __end_of_Sinit:
  7949                           	callstack 0
  7950                           
  7951 ;; *************** function _SMotor *****************
  7952 ;; Defined at:
  7953 ;;		line 22 in file "Ssms.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1
  7967 ;;      Params:         0       0       0
  7968 ;;      Locals:         0       0       0
  7969 ;;      Temps:          2       0       0
  7970 ;;      Totals:         2       0       0
  7971 ;;Total ram usage:        2 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 3
  7974 ;; This function calls:
  7975 ;;		_MNovaLletra
  7976 ;;		_TiGetTics
  7977 ;;		_TiResetTics
  7978 ;; This function is called by:
  7979 ;;		_main
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text68
  7984  0011FE                     __ptext68:
  7985                           	callstack 0
  7986  0011FE                     _SMotor:
  7987                           	callstack 27
  7988                           
  7989                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7990                           
  7991                           ;incstack = 0
  7992  0011FE  D0BA               	goto	l6347
  7993  001200                     l6191:
  7994                           
  7995                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7996  001200  2854               	incf	_novaTecla^0,w,c
  7997  001202  E008               	bz	l6199
  7998  001204  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7999  001206  D006               	goto	l6199
  8000                           
  8001                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8002  001208  503B               	movf	_timerSMS^0,w,c
  8003  00120A  EC75  F00F         	call	_TiResetTics
  8004                           
  8005                           ;Ssms.c: 29:     state = 3;
  8006  00120E  0E03               	movlw	3
  8007  001210  6E39               	movwf	SMotor@state^0,c
  8008                           
  8009                           ;Ssms.c: 30:    }
  8010  001212  0C03               	retlw	3
  8011  001214                     l6199:
  8012  001214  2854               	incf	_novaTecla^0,w,c
  8013  001216  A4D8               	btfss	status,2,c
  8014  001218  0012               	return	
  8015  00121A  503B               	movf	_timerSMS^0,w,c
  8016  00121C  ECDC  F00E         	call	_TiGetTics
  8017  001220  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8018  001222  0012               	return	
  8019  001224  D8BE               	call	PL64	;call to abstracted procedure
  8020  001226  A0D8               	btfss	status,0,c
  8021  001228  0012               	return	
  8022  00122A  2855               	incf	_lletraASCII^0,w,c
  8023  00122C  A4D8               	btfss	status,2,c
  8024  00122E  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8025  001230  0012               	return	
  8026                           
  8027                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8028  001232  5055               	movf	_lletraASCII^0,w,c
  8029  001234  EC72  F000         	call	_MNovaLletra
  8030                           
  8031                           ;Ssms.c: 33:     lletraASCII = -1;
  8032  001238  6855               	setf	_lletraASCII^0,c
  8033                           
  8034                           ;Ssms.c: 34:     ultimaTecla = -1;
  8035  00123A  6853               	setf	_ultimaTecla^0,c
  8036                           
  8037                           ;Ssms.c: 35:     zeroTecla = 0;
  8038  00123C  6A3A               	clrf	_zeroTecla^0,c
  8039  00123E  0012               	return	
  8040  001240                     l6215:
  8041                           
  8042                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8043  001240  5053               	movf	_ultimaTecla^0,w,c
  8044  001242  1854               	xorwf	_novaTecla^0,w,c
  8045  001244  E10C               	bnz	l6223
  8046  001246  503B               	movf	_timerSMS^0,w,c
  8047  001248  ECDC  F00E         	call	_TiGetTics
  8048  00124C  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8049  00124E  D002               	goto	u6610
  8050  001250  D8A8               	call	PL64	;call to abstracted procedure
  8051  001252  E205               	bc	l6223
  8052  001254                     u6610:
  8053                           
  8054                           ;Ssms.c: 40:     novaTecla = -1;
  8055  001254  6854               	setf	_novaTecla^0,c
  8056                           
  8057                           ;Ssms.c: 41:     sumaPulsacions++;
  8058  001256  2A3C               	incf	_sumaPulsacions^0,f,c
  8059                           
  8060                           ;Ssms.c: 42:     lletraASCII++;
  8061  001258  2A55               	incf	_lletraASCII^0,f,c
  8062                           
  8063                           ;Ssms.c: 43:     state++;
  8064  00125A  2A39               	incf	SMotor@state^0,f,c
  8065                           
  8066                           ;Ssms.c: 44:    }
  8067  00125C  0012               	return	
  8068  00125E                     l6223:
  8069  00125E  2854               	incf	_novaTecla^0,w,c
  8070  001260  B4D8               	btfsc	status,2,c
  8071  001262  0012               	return	
  8072  001264  5053               	movf	_ultimaTecla^0,w,c
  8073  001266  1854               	xorwf	_novaTecla^0,w,c
  8074  001268  B4D8               	btfsc	status,2,c
  8075  00126A  0012               	return	
  8076                           
  8077                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8078  00126C  5055               	movf	_lletraASCII^0,w,c
  8079  00126E  EC72  F000         	call	_MNovaLletra
  8080                           
  8081                           ;Ssms.c: 47:     if(novaTecla != 0){
  8082  001272  5054               	movf	_novaTecla^0,w,c
  8083  001274  E005               	bz	l6233
  8084                           
  8085                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8086  001276  5054               	movf	_novaTecla^0,w,c
  8087  001278  0FBA               	addlw	low (_lletraInici+254)
  8088  00127A  ECB5  F007         	call	PL48	;call to abstracted procedure
  8089  00127E  D001               	goto	L5
  8090  001280                     l6233:
  8091                           
  8092                           ;Ssms.c: 50:       lletraASCII = '0';
  8093  001280  0E30               	movlw	48
  8094  001282                     L5:
  8095  001282  6E55               	movwf	_lletraASCII^0,c
  8096                           
  8097                           ;Ssms.c: 52:     zeroTecla=0;
  8098  001284  6A3A               	clrf	_zeroTecla^0,c
  8099                           
  8100                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8101  001286  C054  F053         	movff	_novaTecla,_ultimaTecla
  8102                           
  8103                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8104  00128A  6A3C               	clrf	_sumaPulsacions^0,c
  8105                           
  8106                           ;Ssms.c: 55:     novaTecla = -1;
  8107  00128C  6854               	setf	_novaTecla^0,c
  8108                           
  8109                           ;Ssms.c: 56:     state--;
  8110  00128E  0639               	decf	SMotor@state^0,f,c
  8111  001290  0012               	return	
  8112  001292                     l6245:
  8113                           
  8114                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8115  001292  0E07               	movlw	7
  8116  001294  1853               	xorwf	_ultimaTecla^0,w,c
  8117  001296  E008               	bz	l6253
  8118  001298  0E09               	movlw	9
  8119  00129A  1853               	xorwf	_ultimaTecla^0,w,c
  8120  00129C  E005               	bz	l6253
  8121  00129E  5053               	movf	_ultimaTecla^0,w,c
  8122  0012A0  E003               	bz	l6253
  8123                           
  8124                           ;Ssms.c: 61:     state = 5;
  8125  0012A2  0E05               	movlw	5
  8126  0012A4  6E39               	movwf	SMotor@state^0,c
  8127                           
  8128                           ;Ssms.c: 62:    }
  8129  0012A6  0C05               	retlw	5
  8130  0012A8                     l6253:
  8131  0012A8  0E07               	movlw	7
  8132  0012AA  1853               	xorwf	_ultimaTecla^0,w,c
  8133  0012AC  E003               	bz	u6690
  8134  0012AE  0E09               	movlw	9
  8135  0012B0  1853               	xorwf	_ultimaTecla^0,w,c
  8136  0012B2  E103               	bnz	l6259
  8137  0012B4                     u6690:
  8138                           
  8139                           ;Ssms.c: 64:     state = 6;
  8140  0012B4  0E06               	movlw	6
  8141  0012B6  6E39               	movwf	SMotor@state^0,c
  8142                           
  8143                           ;Ssms.c: 65:    }
  8144  0012B8  0C06               	retlw	6
  8145  0012BA                     l6259:
  8146  0012BA  5053               	movf	_ultimaTecla^0,w,c
  8147  0012BC  A4D8               	btfss	status,2,c
  8148  0012BE  0012               	return	
  8149                           
  8150                           ;Ssms.c: 67:     zeroTecla++;
  8151  0012C0  2A3A               	incf	_zeroTecla^0,f,c
  8152                           
  8153                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8154  0012C2  0E02               	movlw	2
  8155  0012C4  183A               	xorwf	_zeroTecla^0,w,c
  8156  0012C6  E101               	bnz	l6267
  8157  0012C8  6A3A               	clrf	_zeroTecla^0,c
  8158  0012CA                     l6267:
  8159                           
  8160                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8161  0012CA  503A               	movf	_zeroTecla^0,w,c
  8162  0012CC  0F45               	addlw	low _arrayZero
  8163  0012CE  ECB5  F007         	call	PL48	;call to abstracted procedure
  8164  0012D2  6E55               	movwf	_lletraASCII^0,c
  8165  0012D4                     l6269:
  8166                           
  8167                           ;Ssms.c: 70:     state = 0;
  8168  0012D4  6A39               	clrf	SMotor@state^0,c
  8169  0012D6  0012               	return	
  8170  0012D8                     l6271:
  8171                           
  8172                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8173  0012D8  5054               	movf	_novaTecla^0,w,c
  8174  0012DA  0A80               	xorlw	128
  8175  0012DC  0F7E               	addlw	-130
  8176  0012DE  E202               	bc	u6730
  8177  0012E0  5054               	movf	_novaTecla^0,w,c
  8178  0012E2  E107               	bnz	l6279
  8179  0012E4                     u6730:
  8180  0012E4  5054               	movf	_novaTecla^0,w,c
  8181  0012E6  0A80               	xorlw	128
  8182  0012E8  0F76               	addlw	-138
  8183  0012EA  E203               	bc	l6279
  8184                           
  8185                           ;Ssms.c: 75:     state = 1;
  8186  0012EC  0E01               	movlw	1
  8187  0012EE  6E39               	movwf	SMotor@state^0,c
  8188                           
  8189                           ;Ssms.c: 76:    }
  8190  0012F0  0C01               	retlw	1
  8191  0012F2                     l6279:
  8192  0012F2  5054               	movf	_novaTecla^0,w,c
  8193  0012F4  E00C               	bz	l6291
  8194  0012F6  5054               	movf	_novaTecla^0,w,c
  8195  0012F8  0A80               	xorlw	128
  8196  0012FA  0F7E               	addlw	-130
  8197  0012FC  E208               	bc	l6291
  8198  0012FE  2855               	incf	_lletraASCII^0,w,c
  8199  001300  E106               	bnz	l6291
  8200                           
  8201                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8202  001302  5054               	movf	_novaTecla^0,w,c
  8203  001304  0F30               	addlw	48
  8204  001306  EC72  F000         	call	_MNovaLletra
  8205  00130A                     l6287:
  8206                           
  8207                           ;Ssms.c: 79:     novaTecla = -1;
  8208  00130A  6854               	setf	_novaTecla^0,c
  8209  00130C  D7E3               	goto	l6269
  8210  00130E                     l6291:
  8211  00130E  5054               	movf	_novaTecla^0,w,c
  8212  001310  B4D8               	btfsc	status,2,c
  8213  001312  0012               	return	
  8214  001314  5054               	movf	_novaTecla^0,w,c
  8215  001316  0A80               	xorlw	128
  8216  001318  0F7E               	addlw	-130
  8217  00131A  B0D8               	btfsc	status,0,c
  8218  00131C  0012               	return	
  8219  00131E  2855               	incf	_lletraASCII^0,w,c
  8220  001320  B4D8               	btfsc	status,2,c
  8221  001322  0012               	return	
  8222                           
  8223                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8224  001324  5055               	movf	_lletraASCII^0,w,c
  8225  001326  EC72  F000         	call	_MNovaLletra
  8226                           
  8227                           ;Ssms.c: 84:     lletraASCII = -1;
  8228  00132A  6855               	setf	_lletraASCII^0,c
  8229                           
  8230                           ;Ssms.c: 85:     state++;
  8231  00132C  2A39               	incf	SMotor@state^0,f,c
  8232  00132E  0012               	return	
  8233  001330                     l6303:
  8234                           
  8235                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8236  001330  5054               	movf	_novaTecla^0,w,c
  8237  001332  0F30               	addlw	48
  8238  001334  EC72  F000         	call	_MNovaLletra
  8239  001338  D7E8               	goto	l6287
  8240  00133A                     l6309:
  8241                           
  8242                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8243  00133A  0E04               	movlw	4
  8244  00133C  183C               	xorwf	_sumaPulsacions^0,w,c
  8245  00133E  E108               	bnz	l6317
  8246  001340                     u6810:
  8247                           
  8248                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8249  001340  5053               	movf	_ultimaTecla^0,w,c
  8250  001342  0FBA               	addlw	low (_lletraInici+254)
  8251  001344  6ED9               	movwf	fsr2l,c
  8252  001346  6ADA               	clrf	fsr2h,c
  8253  001348  50DF               	movf	indf2,w,c
  8254  00134A  6E55               	movwf	_lletraASCII^0,c
  8255                           
  8256                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8257  00134C  6A3C               	clrf	_sumaPulsacions^0,c
  8258  00134E  D7C2               	goto	l6269
  8259  001350                     l6317:
  8260  001350  0E03               	movlw	3
  8261  001352  183C               	xorwf	_sumaPulsacions^0,w,c
  8262  001354  E103               	bnz	l6323
  8263  001356                     u6820:
  8264                           
  8265                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8266  001356  5053               	movf	_ultimaTecla^0,w,c
  8267  001358  0F30               	addlw	48
  8268  00135A  D7BB               	goto	L6
  8269  00135C                     l6323:
  8270  00135C  0E03               	movlw	3
  8271  00135E  603C               	cpfslt	_sumaPulsacions^0,c
  8272  001360  0012               	return	
  8273  001362  D7B8               	goto	l6269
  8274  001364                     l6327:
  8275                           
  8276                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8277  001364  0E04               	movlw	4
  8278  001366  183C               	xorwf	_sumaPulsacions^0,w,c
  8279  001368  E0F6               	bz	u6820
  8280  00136A  0E05               	movlw	5
  8281  00136C  183C               	xorwf	_sumaPulsacions^0,w,c
  8282  00136E  E0E8               	bz	u6810
  8283  001370  0E04               	movlw	4
  8284  001372  D7F5               	goto	L7
  8285  001374                     l6347:
  8286  001374  5039               	movf	SMotor@state^0,w,c
  8287  001376  6E6B               	movwf	??_SMotor^0,c
  8288  001378  6A6C               	clrf	(??_SMotor+1)^0,c
  8289                           
  8290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8291                           ; Switch size 1, requested type "space"
  8292                           ; Number of cases is 1, Range of values is 0 to 0
  8293                           ; switch strategies available:
  8294                           ; Name         Instructions Cycles
  8295                           ; simple_byte            4     3 (average)
  8296                           ;	Chosen strategy is simple_byte
  8297  00137A  506C               	movf	(??_SMotor+1)^0,w,c
  8298  00137C  A4D8               	btfss	status,2,c
  8299  00137E  0012               	return	
  8300                           
  8301                           ; Switch size 1, requested type "space"
  8302                           ; Number of cases is 7, Range of values is 0 to 6
  8303                           ; switch strategies available:
  8304                           ; Name         Instructions Cycles
  8305                           ; simple_byte           22    12 (average)
  8306                           ;	Chosen strategy is simple_byte
  8307  001380  506B               	movf	??_SMotor^0,w,c
  8308  001382  E101 D73D          	bz	l6191
  8309  001386  0A01               	xorlw	1	; case 1
  8310  001388  E101 D75A          	bz	l6215
  8311  00138C  0A03               	xorlw	3	; case 2
  8312  00138E  E081               	bz	l6245
  8313  001390  0A01               	xorlw	1	; case 3
  8314  001392  E0A2               	bz	l6271
  8315  001394  0A07               	xorlw	7	; case 4
  8316  001396  E0CC               	bz	l6303
  8317  001398  0A01               	xorlw	1	; case 5
  8318  00139A  E0CF               	bz	l6309
  8319  00139C  0A03               	xorlw	3	; case 6
  8320  00139E  E0E2               	bz	l6327
  8321  0013A0  0012               	return		;funcret
  8322  0013A2                     __end_of_SMotor:
  8323                           	callstack 0
  8324  0013A2                     PL64:
  8325                           	callstack 27
  8326  0013A2  0E5A               	movlw	90
  8327  0013A4  5C64               	subwf	?_TiGetTics^0,w,c
  8328  0013A6  0E02               	movlw	2
  8329  0013A8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8330  0013AA  0012               	return	
  8331  0013AC                     __end_ofPL64:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _MNovaLletra *****************
  8335 ;; Defined at:
  8336 ;;		line 35 in file "Menu.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  lletra          1    wreg     unsigned char 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  lletra          1    5[COMRAM] unsigned char 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1
  8350 ;;      Params:         0       0       0
  8351 ;;      Locals:         1       0       0
  8352 ;;      Temps:          0       0       0
  8353 ;;      Totals:         1       0       0
  8354 ;;Total ram usage:        1 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 2
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_SMotor
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text69
  8365  0000E4                     __ptext69:
  8366                           	callstack 0
  8367  0000E4                     _MNovaLletra:
  8368                           	callstack 27
  8369                           
  8370                           ;incstack = 0
  8371                           ;MNovaLletra@lletra stored from wreg
  8372  0000E4  6E64               	movwf	MNovaLletra@lletra^0,c
  8373                           
  8374                           ;Menu.c: 36:     novaLletra = lletra;
  8375  0000E6  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8376  0000EA  0012               	return		;funcret
  8377  0000EC                     __end_of_MNovaLletra:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _Minit *****************
  8381 ;; Defined at:
  8382 ;;		line 28 in file "Menu.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1
  8396 ;;      Params:         0       0       0
  8397 ;;      Locals:         0       0       0
  8398 ;;      Temps:          0       0       0
  8399 ;;      Totals:         0       0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 3
  8403 ;; This function calls:
  8404 ;;		_TiGetTimer
  8405 ;; This function is called by:
  8406 ;;		_main
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text70
  8411  0000EC                     __ptext70:
  8412                           	callstack 0
  8413  0000EC                     _Minit:
  8414                           	callstack 27
  8415                           
  8416                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8417                           
  8418                           ;incstack = 0
  8419  0000EC  EC8B  F00E         	call	_TiGetTimer	;wreg free
  8420  0000F0  6E32               	movwf	_timerMenu^0,c
  8421  0000F2  0012               	return		;funcret
  8422  0000F4                     __end_of_Minit:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _LcLCD *****************
  8426 ;; Defined at:
  8427 ;;		line 230 in file "LcTLCD.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;		None
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;		None
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1
  8441 ;;      Params:         0       0       0
  8442 ;;      Locals:         0       0       0
  8443 ;;      Temps:          0       0       0
  8444 ;;      Totals:         0       0       0
  8445 ;;Total ram usage:        0 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; Hardware stack levels required when called: 6
  8448 ;; This function calls:
  8449 ;;		_LcPutChar
  8450 ;; This function is called by:
  8451 ;;		_main
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           	psect	text71
  8456  001B1A                     __ptext71:
  8457                           	callstack 0
  8458  001B1A                     _LcLCD:
  8459                           	callstack 24
  8460                           
  8461                           ;LcTLCD.c: 231:     if(nou_s == 1){
  8462                           
  8463                           ;incstack = 0
  8464  001B1A  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8465  001B1C  0012               	return	
  8466                           
  8467                           ;LcTLCD.c: 232:         LcPutChar(*s_ptr);
  8468  001B1E  D818               	call	PL34	;call to abstracted procedure
  8469  001B20  64F7               	cpfsgt	tblptrh,c
  8470  001B22  D003               	bra	u4037
  8471  001B24  0008               	tblrd		*
  8472  001B26  50F5               	movf	tablat,w,c
  8473  001B28  D001               	bra	u4030
  8474  001B2A                     u4037:
  8475  001B2A  D819               	call	PL44	;call to abstracted procedure
  8476  001B2C                     u4030:
  8477  001B2C  ECB5  F00D         	call	_LcPutChar
  8478                           
  8479                           ;LcTLCD.c: 233:         s_ptr++;
  8480  001B30  4A0B               	infsnz	_s_ptr^0,f,c
  8481  001B32  2A0C               	incf	(_s_ptr+1)^0,f,c
  8482                           
  8483                           ;LcTLCD.c: 234:         if(*s_ptr == '\0'){
  8484  001B34  D80D               	call	PL34	;call to abstracted procedure
  8485  001B36  64F7               	cpfsgt	tblptrh,c
  8486  001B38  D003               	bra	u4047
  8487  001B3A  0008               	tblrd		*
  8488  001B3C  50F5               	movf	tablat,w,c
  8489  001B3E  D001               	bra	u4040
  8490  001B40                     u4047:
  8491  001B40  D80E               	call	PL44	;call to abstracted procedure
  8492  001B42                     u4040:
  8493  001B42  0900               	iorlw	0
  8494  001B44  A4D8               	btfss	status,2,c
  8495  001B46  0012               	return	
  8496                           
  8497                           ;LcTLCD.c: 235:             nou_s = 0;
  8498  001B48  9477               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8499                           
  8500                           ;LcTLCD.c: 236:             s_ptr=0;
  8501  001B4A  6A0B               	clrf	_s_ptr^0,c
  8502  001B4C  6A0C               	clrf	(_s_ptr+1)^0,c
  8503  001B4E  0012               	return		;funcret
  8504  001B50                     __end_of_LcLCD:
  8505                           	callstack 0
  8506  001B50                     PL34:
  8507                           	callstack 24
  8508  001B50  C00B  FFF6         	movff	_s_ptr,tblptrl
  8509  001B54  C00C  FFF7         	movff	_s_ptr+1,tblptrh
  8510  001B58  6AF8               	clrf	tblptru,c
  8511  001B5A  0E01               	movlw	(high __ramtop+-1)
  8512  001B5C  0012               	return	
  8513  001B5E                     __end_ofPL34:
  8514                           	callstack 0
  8515  001B5E                     PL44:
  8516                           	callstack 24
  8517  001B5E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8518  001B62  CFF7 FFE2          	movff	tblptrh,fsr1h
  8519  001B66  50E7               	movf	indf1,w,c
  8520  001B68  0012               	return	
  8521  001B6A                     __end_ofPL44:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _LcInit *****************
  8525 ;; Defined at:
  8526 ;;		line 39 in file "LcTLCD.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  rows            1    wreg     unsigned char 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  rows            1   16[COMRAM] unsigned char 
  8531 ;;  i               2   17[COMRAM] int 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1
  8541 ;;      Params:         0       0       0
  8542 ;;      Locals:         3       0       0
  8543 ;;      Temps:          0       0       0
  8544 ;;      Totals:         3       0       0
  8545 ;;Total ram usage:        3 bytes
  8546 ;; Hardware stack levels used: 1
  8547 ;; Hardware stack levels required when called: 4
  8548 ;; This function calls:
  8549 ;;		_CantaIR
  8550 ;;		_EscriuPrimeraOrdre
  8551 ;;		_Espera
  8552 ;;		_TiGetTimer
  8553 ;;		_WaitForBusy
  8554 ;; This function is called by:
  8555 ;;		_main
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text72
  8560  00167A                     __ptext72:
  8561                           	callstack 0
  8562  00167A                     _LcInit:
  8563                           	callstack 26
  8564                           
  8565                           ;incstack = 0
  8566                           ;LcInit@rows stored from wreg
  8567  00167A  6E6F               	movwf	LcInit@rows^0,c
  8568                           
  8569                           ;LcTLCD.c: 45:  int i;;LcTLCD.c: 46:  Timer = TiGetTimer();
  8570  00167C  EC8B  F00E         	call	_TiGetTimer	;wreg free
  8571  001680  6E3D               	movwf	_Timer^0,c
  8572                           
  8573                           ;LcTLCD.c: 47:  Rows = rows;
  8574  001682  C06F  F040         	movff	LcInit@rows,_Rows
  8575                           
  8576                           ;LcTLCD.c: 48:  RowAct = ColumnAct = 0;
  8577  001686  6A3E               	clrf	_ColumnAct^0,c
  8578  001688  6A3F               	clrf	_RowAct^0,c
  8579                           
  8580                           ;LcTLCD.c: 49:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8581  00168A  9894               	bcf	148,4,c	;volatile
  8582  00168C  9E95               	bcf	149,7,c	;volatile
  8583  00168E  9A94               	bcf	148,5,c	;volatile
  8584                           
  8585                           ;LcTLCD.c: 50:  for (i = 0; i < 2; i++) {
  8586  001690  6A70               	clrf	LcInit@i^0,c
  8587  001692  6A71               	clrf	(LcInit@i+1)^0,c
  8588  001694                     l4719:
  8589                           
  8590                           ;LcTLCD.c: 51:   Espera(Timer, 100);
  8591  001694  6A6C               	clrf	(Espera@ms+1)^0,c
  8592  001696  0E64               	movlw	100
  8593  001698  6E6B               	movwf	Espera@ms^0,c
  8594  00169A  503D               	movf	_Timer^0,w,c
  8595  00169C  EC48  F00F         	call	_Espera
  8596                           
  8597                           ;LcTLCD.c: 54:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8598  0016A0  0E03               	movlw	3
  8599  0016A2  EC79  F00C         	call	_EscriuPrimeraOrdre
  8600                           
  8601                           ;LcTLCD.c: 55:   Espera(Timer, 5);
  8602  0016A6  6A6C               	clrf	(Espera@ms+1)^0,c
  8603  0016A8  0E05               	movlw	5
  8604  0016AA  6E6B               	movwf	Espera@ms^0,c
  8605  0016AC  503D               	movf	_Timer^0,w,c
  8606  0016AE  EC48  F00F         	call	_Espera
  8607                           
  8608                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8609  0016B2  0E03               	movlw	3
  8610  0016B4  EC79  F00C         	call	_EscriuPrimeraOrdre
  8611                           
  8612                           ;LcTLCD.c: 57:   Espera(Timer, 1);
  8613  0016B8  D83A               	call	PL80	;call to abstracted procedure
  8614  0016BA  EC48  F00F         	call	_Espera
  8615                           
  8616                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(CURSOR_ON | DISPLAY_CLEAR);
  8617  0016BE  0E03               	movlw	3
  8618  0016C0  EC79  F00C         	call	_EscriuPrimeraOrdre
  8619                           
  8620                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8621  0016C4  D834               	call	PL80	;call to abstracted procedure
  8622  0016C6  EC48  F00F         	call	_Espera
  8623                           
  8624                           ;LcTLCD.c: 62:   EscriuPrimeraOrdre(CURSOR_ON);
  8625  0016CA  0E02               	movlw	2
  8626  0016CC  EC79  F00C         	call	_EscriuPrimeraOrdre
  8627                           
  8628                           ;LcTLCD.c: 63:   Espera(Timer, 4);
  8629  0016D0  6A6C               	clrf	(Espera@ms+1)^0,c
  8630  0016D2  0E04               	movlw	4
  8631  0016D4  6E6B               	movwf	Espera@ms^0,c
  8632  0016D6  503D               	movf	_Timer^0,w,c
  8633  0016D8  EC48  F00F         	call	_Espera
  8634                           
  8635                           ;LcTLCD.c: 64:   CantaIR(FUNCTION_SET | DISPLAY_CONTROL);
  8636  0016DC  0E28               	movlw	40
  8637  0016DE  EC67  F00F         	call	_CantaIR
  8638                           
  8639                           ;LcTLCD.c: 67:   WaitForBusy(); CantaIR(DISPLAY_CONTROL);
  8640  0016E2  EC1C  F00E         	call	_WaitForBusy	;wreg free
  8641  0016E6  0E08               	movlw	8
  8642  0016E8  EC67  F00F         	call	_CantaIR
  8643                           
  8644                           ;LcTLCD.c: 68:   WaitForBusy(); CantaIR(DISPLAY_CLEAR);
  8645  0016EC  EC1C  F00E         	call	_WaitForBusy	;wreg free
  8646  0016F0  0E01               	movlw	1
  8647  0016F2  EC67  F00F         	call	_CantaIR
  8648                           
  8649                           ;LcTLCD.c: 69:   Espera(Timer,3);
  8650  0016F6  EC43  F00F         	call	PL78	;call to abstracted procedure
  8651  0016FA  EC48  F00F         	call	_Espera
  8652                           
  8653                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(DISPLAY_ON | CURSOR_ON);
  8654  0016FE  EC1C  F00E         	call	_WaitForBusy	;wreg free
  8655  001702  0E06               	movlw	6
  8656  001704  EC67  F00F         	call	_CantaIR
  8657                           
  8658                           ;LcTLCD.c: 71:   WaitForBusy(); CantaIR(DISPLAY_CONTROL | DISPLAY_ON | CURSOR_ON | DISPL
      +                          AY_CLEAR);
  8659  001708  EC1C  F00E         	call	_WaitForBusy	;wreg free
  8660  00170C  0E0F               	movlw	15
  8661  00170E  EC67  F00F         	call	_CantaIR
  8662                           
  8663                           ;LcTLCD.c: 72:  }
  8664  001712  4A70               	infsnz	LcInit@i^0,f,c
  8665  001714  2A71               	incf	(LcInit@i+1)^0,f,c
  8666  001716  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8667  001718  D7BD               	goto	l4719
  8668  00171A  5071               	movf	(LcInit@i+1)^0,w,c
  8669  00171C  E103               	bnz	u4010
  8670  00171E  0E02               	movlw	2
  8671  001720  5C70               	subwf	LcInit@i^0,w,c
  8672  001722  E3B8               	bnc	l4719
  8673  001724                     u4010:
  8674                           
  8675                           ;LcTLCD.c: 78:     WaitForBusy();
  8676  001724  EC1C  F00E         	call	_WaitForBusy	;wreg free
  8677                           
  8678                           ;LcTLCD.c: 79:  CantaIR(DISPLAY_CONTROL | DISPLAY_ON);
  8679  001728  0E0C               	movlw	12
  8680  00172A  EF67  F00F         	goto	_CantaIR
  8681  00172E                     __end_of_LcInit:
  8682                           	callstack 0
  8683  00172E                     PL80:
  8684                           	callstack 26
  8685  00172E  6A6C               	clrf	(Espera@ms+1)^0,c
  8686  001730  0E01               	movlw	1
  8687  001732  6E6B               	movwf	Espera@ms^0,c
  8688  001734  503D               	movf	_Timer^0,w,c
  8689  001736  0012               	return	
  8690  001738                     __end_ofPL80:
  8691                           	callstack 0
  8692                           
  8693 ;; *************** function _EscriuPrimeraOrdre *****************
  8694 ;; Defined at:
  8695 ;;		line 214 in file "LcTLCD.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  ordre           1    wreg     unsigned char 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  ordre           1    6[COMRAM] unsigned char 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      void 
  8702 ;; Registers used:
  8703 ;;		wreg, status,2, status,0
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1
  8709 ;;      Params:         0       0       0
  8710 ;;      Locals:         1       0       0
  8711 ;;      Temps:          1       0       0
  8712 ;;      Totals:         2       0       0
  8713 ;;Total ram usage:        2 bytes
  8714 ;; Hardware stack levels used: 1
  8715 ;; Hardware stack levels required when called: 2
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_LcInit
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text73
  8724  0018F2                     __ptext73:
  8725                           	callstack 0
  8726  0018F2                     _EscriuPrimeraOrdre:
  8727                           	callstack 27
  8728                           
  8729                           ;incstack = 0
  8730                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8731  0018F2  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8732                           
  8733                           ;LcTLCD.c: 216:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8734  0018F4  9694               	bcf	148,3,c	;volatile
  8735                           
  8736                           ;LcTLCD.c: 217:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8737  0018F6  D82F               	call	PL36	;call to abstracted procedure
  8738  0018F8  888B               	bsf	139,4,c	;volatile
  8739                           
  8740                           ;LcTLCD.c: 218:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8741  0018FA  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8742  0018FC  D003               	goto	u250
  8743  0018FE  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8744  001900  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8745  001902  D001               	goto	u268
  8746  001904                     u250:
  8747  001904  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8748  001906                     u268:
  8749  001906  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8750  001908  D82D               	call	PL74	;call to abstracted procedure
  8751  00190A  0BF7               	andlw	-9
  8752  00190C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8753  00190E  6E8B               	movwf	139,c	;volatile
  8754                           
  8755                           ;LcTLCD.c: 219:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8756  001910  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8757  001912  D003               	goto	u270
  8758  001914  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8759  001916  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8760  001918  D001               	goto	u288
  8761  00191A                     u270:
  8762  00191A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8763  00191C                     u288:
  8764  00191C  D823               	call	PL74	;call to abstracted procedure
  8765  00191E  0BFB               	andlw	-5
  8766  001920  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8767  001922  6E8B               	movwf	139,c	;volatile
  8768                           
  8769                           ;LcTLCD.c: 220:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8770  001924  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8771  001926  D003               	goto	u290
  8772  001928  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8773  00192A  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8774  00192C  D001               	goto	u308
  8775  00192E                     u290:
  8776  00192E  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8777  001930                     u308:
  8778  001930  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8779  001932  508B               	movf	139,w,c	;volatile
  8780  001934  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8781  001936  0BFD               	andlw	-3
  8782  001938  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8783  00193A  6E8B               	movwf	139,c	;volatile
  8784                           
  8785                           ;LcTLCD.c: 221:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8786  00193C  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8787  00193E  D003               	goto	u310
  8788  001940  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8789  001942  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8790  001944  D001               	goto	u328
  8791  001946                     u310:
  8792  001946  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8793  001948                     u328:
  8794  001948  508B               	movf	139,w,c	;volatile
  8795  00194A  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8796  00194C  0BFE               	andlw	-2
  8797  00194E  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8798  001950  6E8B               	movwf	139,c	;volatile
  8799                           
  8800                           ;LcTLCD.c: 222:  (LATCbits.LATC4 = 0);
  8801  001952  988B               	bcf	139,4,c	;volatile
  8802  001954  0012               	return		;funcret
  8803  001956                     __end_of_EscriuPrimeraOrdre:
  8804                           	callstack 0
  8805  001956                     PL36:
  8806                           	callstack 24
  8807  001956  9494               	bcf	148,2,c	;volatile
  8808  001958  9294               	bcf	148,1,c	;volatile
  8809  00195A  9094               	bcf	148,0,c	;volatile
  8810  00195C  9A8B               	bcf	139,5,c	;volatile
  8811  00195E  9E8C               	bcf	140,7,c	;volatile
  8812  001960  888B               	bsf	139,4,c	;volatile
  8813  001962  0012               	return	
  8814  001964                     __end_ofPL36:
  8815                           	callstack 0
  8816  001964                     PL74:
  8817                           	callstack 27
  8818  001964  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8819  001966  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8820  001968  508B               	movf	139,w,c	;volatile
  8821  00196A  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8822  00196C  0012               	return	
  8823  00196E                     __end_ofPL74:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _JoystickMotor *****************
  8827 ;; Defined at:
  8828 ;;		line 18 in file "Joystick.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1
  8842 ;;      Params:         0       0       0
  8843 ;;      Locals:         0       0       0
  8844 ;;      Temps:          2       0       0
  8845 ;;      Totals:         2       0       0
  8846 ;;Total ram usage:        2 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 3
  8849 ;; This function calls:
  8850 ;;		_MNouJoystick
  8851 ;; This function is called by:
  8852 ;;		_main
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text74
  8857  0015A4                     __ptext74:
  8858                           	callstack 0
  8859  0015A4                     _JoystickMotor:
  8860                           	callstack 27
  8861                           
  8862                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8863                           
  8864                           ;incstack = 0
  8865  0015A4  D056               	goto	l3247
  8866  0015A6                     l1052:
  8867                           
  8868                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8869  0015A6  B2C2               	btfsc	194,1,c	;volatile
  8870  0015A8  D00B               	goto	l1053
  8871  0015AA  0EC8               	movlw	200
  8872  0015AC  60C4               	cpfslt	196,c	;volatile
  8873  0015AE  D008               	goto	l1053
  8874  0015B0  0E32               	movlw	50
  8875  0015B2  64C4               	cpfsgt	196,c	;volatile
  8876  0015B4  D005               	goto	l1053
  8877                           
  8878                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8879  0015B6  0E07               	movlw	7
  8880  0015B8  6EC2               	movwf	194,c	;volatile
  8881                           
  8882                           ;Joystick.c: 24:                 cap1 = 1;
  8883  0015BA  8076               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8884  0015BC                     l3177:
  8885                           
  8886                           ;Joystick.c: 25:     state++;
  8887  0015BC  2A17               	incf	JoystickMotor@state^0,f,c
  8888                           
  8889                           ;Joystick.c: 26:    }
  8890  0015BE  D052               	goto	l1060
  8891  0015C0                     l1053:
  8892  0015C0  B2C2               	btfsc	194,1,c	;volatile
  8893  0015C2  D00F               	goto	l1055
  8894  0015C4  0EC7               	movlw	199
  8895  0015C6  64C4               	cpfsgt	196,c	;volatile
  8896  0015C8  D00C               	goto	l1055
  8897                           
  8898                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8899  0015CA  0E02               	movlw	2
  8900  0015CC  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8901  0015CE  E003               	bz	l3185
  8902  0015D0  0E02               	movlw	2
  8903  0015D2  EC7A  F000         	call	_MNouJoystick
  8904  0015D6                     l3185:
  8905                           
  8906                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8907  0015D6  0E02               	movlw	2
  8908  0015D8  6E18               	movwf	_ultimaTeclaAD^0,c
  8909                           
  8910                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8911  0015DA  0E07               	movlw	7
  8912  0015DC  6EC2               	movwf	194,c	;volatile
  8913                           
  8914                           ;Joystick.c: 31:                 cap1 = 0;
  8915  0015DE  9076               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8916  0015E0  D7ED               	goto	l3177
  8917  0015E2                     l1055:
  8918  0015E2  B2C2               	btfsc	194,1,c	;volatile
  8919  0015E4  D03F               	goto	l1060
  8920  0015E6  0E33               	movlw	51
  8921  0015E8  60C4               	cpfslt	196,c	;volatile
  8922  0015EA  D03C               	goto	l1060
  8923                           
  8924                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8925  0015EC  0E08               	movlw	8
  8926  0015EE  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8927  0015F0  E003               	bz	l3199
  8928  0015F2  0E08               	movlw	8
  8929  0015F4  EC7A  F000         	call	_MNouJoystick
  8930  0015F8                     l3199:
  8931                           
  8932                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8933  0015F8  0E08               	movlw	8
  8934  0015FA  D7EE               	goto	L8
  8935  0015FC                     l1061:
  8936                           
  8937                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8938  0015FC  B2C2               	btfsc	194,1,c	;volatile
  8939  0015FE  D00B               	goto	l1062
  8940  001600  0EC8               	movlw	200
  8941  001602  60C4               	cpfslt	196,c	;volatile
  8942  001604  D008               	goto	l1062
  8943  001606  0E32               	movlw	50
  8944  001608  64C4               	cpfsgt	196,c	;volatile
  8945  00160A  D005               	goto	l1062
  8946                           
  8947                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8948  00160C  0E03               	movlw	3
  8949  00160E  6EC2               	movwf	194,c	;volatile
  8950                           
  8951                           ;Joystick.c: 45:                 cap2 = 1;
  8952  001610  8E75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8953  001612                     l3215:
  8954                           
  8955                           ;Joystick.c: 46:     state--;
  8956  001612  0617               	decf	JoystickMotor@state^0,f,c
  8957                           
  8958                           ;Joystick.c: 47:    }
  8959  001614  D027               	goto	l1060
  8960  001616                     l1062:
  8961  001616  B2C2               	btfsc	194,1,c	;volatile
  8962  001618  D00F               	goto	l1064
  8963  00161A  0EC7               	movlw	199
  8964  00161C  64C4               	cpfsgt	196,c	;volatile
  8965  00161E  D00C               	goto	l1064
  8966                           
  8967                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8968  001620  0E06               	movlw	6
  8969  001622  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8970  001624  E003               	bz	l3223
  8971  001626  0E06               	movlw	6
  8972  001628  EC7A  F000         	call	_MNouJoystick
  8973  00162C                     l3223:
  8974                           
  8975                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8976  00162C  0E06               	movlw	6
  8977  00162E  6E18               	movwf	_ultimaTeclaAD^0,c
  8978                           
  8979                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8980  001630  0E03               	movlw	3
  8981  001632  6EC2               	movwf	194,c	;volatile
  8982                           
  8983                           ;Joystick.c: 52:                 cap2 = 0;
  8984  001634  9E75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8985  001636  D7ED               	goto	l3215
  8986  001638                     l1064:
  8987  001638  B2C2               	btfsc	194,1,c	;volatile
  8988  00163A  D014               	goto	l1060
  8989  00163C  0E33               	movlw	51
  8990  00163E  60C4               	cpfslt	196,c	;volatile
  8991  001640  D011               	goto	l1060
  8992                           
  8993                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8994  001642  0E04               	movlw	4
  8995  001644  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8996  001646  E003               	bz	l3237
  8997  001648  0E04               	movlw	4
  8998  00164A  EC7A  F000         	call	_MNouJoystick
  8999  00164E                     l3237:
  9000                           
  9001                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9002  00164E  0E04               	movlw	4
  9003  001650  D7EE               	goto	L9
  9004  001652                     l3247:
  9005  001652  5017               	movf	JoystickMotor@state^0,w,c
  9006  001654  6E65               	movwf	??_JoystickMotor^0,c
  9007  001656  6A66               	clrf	(??_JoystickMotor+1)^0,c
  9008                           
  9009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9010                           ; Switch size 1, requested type "space"
  9011                           ; Number of cases is 1, Range of values is 0 to 0
  9012                           ; switch strategies available:
  9013                           ; Name         Instructions Cycles
  9014                           ; simple_byte            4     3 (average)
  9015                           ;	Chosen strategy is simple_byte
  9016  001658  5066               	movf	(??_JoystickMotor+1)^0,w,c
  9017  00165A  E104               	bnz	l1060
  9018                           
  9019                           ; Switch size 1, requested type "space"
  9020                           ; Number of cases is 2, Range of values is 0 to 1
  9021                           ; switch strategies available:
  9022                           ; Name         Instructions Cycles
  9023                           ; simple_byte            7     4 (average)
  9024                           ;	Chosen strategy is simple_byte
  9025  00165C  5065               	movf	??_JoystickMotor^0,w,c
  9026  00165E  E0A3               	bz	l1052
  9027  001660  0A01               	xorlw	1	; case 1
  9028  001662  E0CC               	bz	l1061
  9029  001664                     l1060:
  9030                           
  9031                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9032  001664  B076               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  9033  001666  AE75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9034  001668  0012               	return	
  9035  00166A  5018               	movf	_ultimaTeclaAD^0,w,c
  9036  00166C  B4D8               	btfsc	status,2,c
  9037  00166E  0012               	return	
  9038                           
  9039                           ;Joystick.c: 66:         MNouJoystick(-1);
  9040  001670  0EFF               	movlw	255
  9041  001672  EC7A  F000         	call	_MNouJoystick
  9042                           
  9043                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9044  001676  6818               	setf	_ultimaTeclaAD^0,c
  9045  001678  0012               	return		;funcret
  9046  00167A                     __end_of_JoystickMotor:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _MNouJoystick *****************
  9050 ;; Defined at:
  9051 ;;		line 38 in file "Menu.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  posicio         1    wreg     char 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  posicio         1    5[COMRAM] char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1
  9065 ;;      Params:         0       0       0
  9066 ;;      Locals:         1       0       0
  9067 ;;      Temps:          0       0       0
  9068 ;;      Totals:         1       0       0
  9069 ;;Total ram usage:        1 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 2
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_JoystickMotor
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text75
  9080  0000F4                     __ptext75:
  9081                           	callstack 0
  9082  0000F4                     _MNouJoystick:
  9083                           	callstack 27
  9084                           
  9085                           ;incstack = 0
  9086                           ;MNouJoystick@posicio stored from wreg
  9087  0000F4  6E64               	movwf	MNouJoystick@posicio^0,c
  9088                           
  9089                           ;Menu.c: 39:     novaDireccio = posicio;
  9090  0000F6  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9091  0000FA  0012               	return		;funcret
  9092  0000FC                     __end_of_MNouJoystick:
  9093                           	callstack 0
  9094                           
  9095 ;; *************** function _JoystickInit *****************
  9096 ;; Defined at:
  9097 ;;		line 12 in file "Joystick.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1
  9111 ;;      Params:         0       0       0
  9112 ;;      Locals:         0       0       0
  9113 ;;      Temps:          0       0       0
  9114 ;;      Totals:         0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 2
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_main
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text76
  9126  001F78                     __ptext76:
  9127                           	callstack 0
  9128  001F78                     _JoystickInit:
  9129                           	callstack 28
  9130                           
  9131                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9132                           
  9133                           ;incstack = 0
  9134  001F78  0E01               	movlw	1
  9135  001F7A  6EC2               	movwf	194,c	;volatile
  9136                           
  9137                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9138  001F7C  0E0D               	movlw	13
  9139  001F7E  6EC1               	movwf	193,c	;volatile
  9140                           
  9141                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9142  001F80  0E09               	movlw	9
  9143  001F82  6EC0               	movwf	192,c	;volatile
  9144                           
  9145                           ;Joystick.c: 16:     ADRESH = 127;
  9146  001F84  0E7F               	movlw	127
  9147  001F86  6EC4               	movwf	196,c	;volatile
  9148  001F88  0C7F               	retlw	127	;funcret
  9149  001F8A                     __end_of_JoystickInit:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function _GLCDMotor *****************
  9153 ;; Defined at:
  9154 ;;		line 36 in file "GestioLCD.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      void 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1
  9168 ;;      Params:         0       0       0
  9169 ;;      Locals:         0       0       0
  9170 ;;      Temps:          2       0       0
  9171 ;;      Totals:         2       0       0
  9172 ;;Total ram usage:        2 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 6
  9175 ;; This function calls:
  9176 ;;		_LcClear
  9177 ;;		_LcGotoXY
  9178 ;;		_LcLliure
  9179 ;;		_LcNewString
  9180 ;;		_LcPutChar
  9181 ;;		_TiGetTics
  9182 ;;		_TiResetTics
  9183 ;; This function is called by:
  9184 ;;		_main
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text77
  9189  000F72                     __ptext77:
  9190                           	callstack 0
  9191  000F72                     _GLCDMotor:
  9192                           	callstack 24
  9193                           
  9194                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9195                           
  9196                           ;incstack = 0
  9197  000F72  D105               	goto	l5057
  9198  000F74                     l4881:
  9199                           
  9200                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == one) {
  9201  000F74  0E11               	movlw	17
  9202  000F76  601A               	cpfslt	GLCDMotor@length1^0,c
  9203  000F78  D010               	goto	l4891
  9204  000F7A  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9205  000F7C  D00E               	goto	l4891
  9206                           
  9207                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9208  000F7E  0E00               	movlw	0
  9209  000F80  6E6C               	movwf	LcGotoXY@Row^0,c
  9210  000F82  EC71  F00E         	call	_LcGotoXY
  9211                           
  9212                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9213  000F86  D92C               	call	PL6	;call to abstracted procedure
  9214  000F88  6E73               	movwf	??_GLCDMotor^0,c
  9215  000F8A  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9216  000F8E  D92D               	call	PL12	;call to abstracted procedure
  9217  000F90  EC2D  F000         	call	_LcNewString	;wreg free
  9218                           
  9219                           ;GestioLCD.c: 53:     state = 5;
  9220  000F94  0E05               	movlw	5
  9221  000F96  6E20               	movwf	GLCDMotor@state^0,c
  9222                           
  9223                           ;GestioLCD.c: 54:    }
  9224  000F98  0C05               	retlw	5
  9225  000F9A                     l4891:
  9226  000F9A  0E10               	movlw	16
  9227  000F9C  641A               	cpfsgt	GLCDMotor@length1^0,c
  9228  000F9E  0C10               	retlw	16
  9229  000FA0  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9230  000FA2  0C10               	retlw	16
  9231  000FA4                     u4190:
  9232                           
  9233                           ;GestioLCD.c: 56:     state++;
  9234  000FA4  2A20               	incf	GLCDMotor@state^0,f,c
  9235  000FA6  0012               	return	
  9236  000FA8                     l4897:
  9237                           
  9238                           ;GestioLCD.c: 60:    if (j>=16) {
  9239  000FA8  0E0F               	movlw	15
  9240  000FAA  641F               	cpfsgt	GLCDMotor@j^0,c
  9241  000FAC  D014               	goto	l4911
  9242                           
  9243                           ;GestioLCD.c: 61:     min1++;
  9244  000FAE  2A1E               	incf	GLCDMotor@min1^0,f,c
  9245                           
  9246                           ;GestioLCD.c: 62:     max1++;
  9247  000FB0  2A4E               	incf	GLCDMotor@max1^0,f,c
  9248                           
  9249                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9250  000FB2  D916               	call	PL6	;call to abstracted procedure
  9251  000FB4  244E               	addwf	GLCDMotor@max1^0,w,c
  9252  000FB6  6E73               	movwf	??_GLCDMotor^0,c
  9253  000FB8  D908               	call	PL2	;call to abstracted procedure
  9254  000FBA  E101               	bnz	l4905
  9255  000FBC  6A4E               	clrf	GLCDMotor@max1^0,c
  9256  000FBE                     l4905:
  9257                           
  9258                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9259  000FBE  D910               	call	PL6	;call to abstracted procedure
  9260  000FC0  241E               	addwf	GLCDMotor@min1^0,w,c
  9261  000FC2  6E73               	movwf	??_GLCDMotor^0,c
  9262  000FC4  D902               	call	PL2	;call to abstracted procedure
  9263  000FC6  E101               	bnz	l986
  9264  000FC8  6A1E               	clrf	GLCDMotor@min1^0,c
  9265  000FCA                     l986:
  9266                           
  9267                           ;GestioLCD.c: 65:     j=0;
  9268  000FCA  6A1F               	clrf	GLCDMotor@j^0,c
  9269                           
  9270                           ;GestioLCD.c: 66:     k1=min1;
  9271  000FCC  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9272                           
  9273                           ;GestioLCD.c: 67:     state = 6;
  9274  000FD0  0E06               	movlw	6
  9275  000FD2  6E20               	movwf	GLCDMotor@state^0,c
  9276                           
  9277                           ;GestioLCD.c: 68:    }
  9278  000FD4  0C06               	retlw	6
  9279  000FD6                     l4911:
  9280                           
  9281                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9282  000FD6  0E00               	movlw	0
  9283  000FD8  6E6C               	movwf	LcGotoXY@Row^0,c
  9284  000FDA  501F               	movf	GLCDMotor@j^0,w,c
  9285  000FDC  EC71  F00E         	call	_LcGotoXY
  9286                           
  9287                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9288  000FE0  D8FF               	call	PL6	;call to abstracted procedure
  9289  000FE2  241C               	addwf	GLCDMotor@k1^0,w,c
  9290  000FE4  6E73               	movwf	??_GLCDMotor^0,c
  9291  000FE6  D8F1               	call	PL2	;call to abstracted procedure
  9292  000FE8  ECB5  F00D         	call	_LcPutChar
  9293                           
  9294                           ;GestioLCD.c: 72:     j++;
  9295  000FEC  2A1F               	incf	GLCDMotor@j^0,f,c
  9296                           
  9297                           ;GestioLCD.c: 73:     k1++;
  9298  000FEE  2A1C               	incf	GLCDMotor@k1^0,f,c
  9299                           
  9300                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9301  000FF0  D8F7               	call	PL6	;call to abstracted procedure
  9302  000FF2  241C               	addwf	GLCDMotor@k1^0,w,c
  9303  000FF4  6E73               	movwf	??_GLCDMotor^0,c
  9304  000FF6  D8E9               	call	PL2	;call to abstracted procedure
  9305  000FF8  B4D8               	btfsc	status,2,c
  9306  000FFA  6A1C               	clrf	GLCDMotor@k1^0,c
  9307  000FFC  0012               	return	
  9308  000FFE                     l4923:
  9309                           
  9310                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9311  000FFE  0E04               	movlw	4
  9312  001000  6021               	cpfslt	_menuDaltGLCD^0,c
  9313  001002  D001               	goto	l990
  9314  001004  D7CF               	goto	u4190
  9315  001006                     l990:
  9316                           
  9317                           ;GestioLCD.c: 82:     state = 0;
  9318  001006  6A20               	clrf	GLCDMotor@state^0,c
  9319  001008  0012               	return	
  9320  00100A                     l4927:
  9321                           
  9322                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9323  00100A  EC33  F000         	call	_LcLliure	;wreg free
  9324  00100E  E306               	bnc	l4933
  9325  001010  0E04               	movlw	4
  9326  001012  6021               	cpfslt	_menuDaltGLCD^0,c
  9327  001014  D003               	goto	l4933
  9328                           
  9329                           ;GestioLCD.c: 87:     state = 7;
  9330  001016  0E07               	movlw	7
  9331  001018  6E20               	movwf	GLCDMotor@state^0,c
  9332                           
  9333                           ;GestioLCD.c: 88:    }
  9334  00101A  0C07               	retlw	7
  9335  00101C                     l4933:
  9336  00101C  EC33  F000         	call	_LcLliure	;wreg free
  9337  001020  A0D8               	btfss	status,0,c
  9338  001022  0012               	return	
  9339  001024  0E03               	movlw	3
  9340  001026  6421               	cpfsgt	_menuDaltGLCD^0,c
  9341  001028  0C03               	retlw	3
  9342  00102A  D7ED               	goto	l990
  9343  00102C                     l996:
  9344                           
  9345                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == one) {
  9346  00102C  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9347  00102E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9348  001030  0012               	return	
  9349                           
  9350                           ;GestioLCD.c: 95:     length1 = 0;
  9351  001032  6A1A               	clrf	GLCDMotor@length1^0,c
  9352                           
  9353                           ;GestioLCD.c: 96:     length2 = 0;
  9354  001034  6A19               	clrf	GLCDMotor@length2^0,c
  9355                           
  9356                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9357  001036  0E00               	movlw	0
  9358  001038  6E6C               	movwf	LcGotoXY@Row^0,c
  9359  00103A  EC71  F00E         	call	_LcGotoXY
  9360                           
  9361                           ;GestioLCD.c: 98:     min1 = 0;
  9362  00103E  6A1E               	clrf	GLCDMotor@min1^0,c
  9363                           
  9364                           ;GestioLCD.c: 99:     max1 = 15;
  9365  001040  0E0F               	movlw	15
  9366  001042  6E4E               	movwf	GLCDMotor@max1^0,c
  9367                           
  9368                           ;GestioLCD.c: 100:     min2 = 0;
  9369  001044  6A1D               	clrf	GLCDMotor@min2^0,c
  9370                           
  9371                           ;GestioLCD.c: 101:     max2 = 15;
  9372  001046  0E0F               	movlw	15
  9373  001048  6E4D               	movwf	GLCDMotor@max2^0,c
  9374                           
  9375                           ;GestioLCD.c: 102:     j = 0;
  9376  00104A  6A1F               	clrf	GLCDMotor@j^0,c
  9377                           
  9378                           ;GestioLCD.c: 103:     k1 = 0;
  9379  00104C  6A1C               	clrf	GLCDMotor@k1^0,c
  9380                           
  9381                           ;GestioLCD.c: 104:     k2 = 0;
  9382  00104E  6A1B               	clrf	GLCDMotor@k2^0,c
  9383                           
  9384                           ;GestioLCD.c: 105:     newString = 0;
  9385  001050  9276               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9386  001052  D7A8               	goto	u4190
  9387  001054                     l4963:
  9388                           
  9389                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9390  001054  D8C5               	call	PL6	;call to abstracted procedure
  9391  001056  241A               	addwf	GLCDMotor@length1^0,w,c
  9392  001058  6E73               	movwf	??_GLCDMotor^0,c
  9393  00105A  D8B7               	call	PL2	;call to abstracted procedure
  9394  00105C  E104               	bnz	l4969
  9395  00105E  0E03               	movlw	3
  9396  001060  6421               	cpfsgt	_menuDaltGLCD^0,c
  9397  001062  D001               	goto	l4969
  9398  001064  D79F               	goto	u4190
  9399  001066                     l4969:
  9400  001066  D8BC               	call	PL6	;call to abstracted procedure
  9401  001068  241A               	addwf	GLCDMotor@length1^0,w,c
  9402  00106A  6E73               	movwf	??_GLCDMotor^0,c
  9403  00106C  D8AE               	call	PL2	;call to abstracted procedure
  9404  00106E  E002               	bz	l4973
  9405                           
  9406                           ;GestioLCD.c: 114:     length1++;
  9407  001070  2A1A               	incf	GLCDMotor@length1^0,f,c
  9408                           
  9409                           ;GestioLCD.c: 115:    }
  9410  001072  0012               	return	
  9411  001074                     l4973:
  9412  001074  0E04               	movlw	4
  9413  001076  6021               	cpfslt	_menuDaltGLCD^0,c
  9414  001078  0C04               	retlw	4
  9415  00107A  D8B2               	call	PL6	;call to abstracted procedure
  9416  00107C  241A               	addwf	GLCDMotor@length1^0,w,c
  9417  00107E  6E73               	movwf	??_GLCDMotor^0,c
  9418  001080  D8A4               	call	PL2	;call to abstracted procedure
  9419  001082  A4D8               	btfss	status,2,c
  9420  001084  0012               	return	
  9421                           
  9422                           ;GestioLCD.c: 117:     state = 13;
  9423  001086  0E0D               	movlw	13
  9424  001088  6E20               	movwf	GLCDMotor@state^0,c
  9425  00108A  0C0D               	retlw	13
  9426  00108C                     l4979:
  9427                           
  9428                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == one) {
  9429  00108C  0E11               	movlw	17
  9430  00108E  6019               	cpfslt	GLCDMotor@length2^0,c
  9431  001090  D015               	goto	l4989
  9432  001092  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9433  001094  D013               	goto	l4989
  9434                           
  9435                           ;GestioLCD.c: 122:     LcGotoXY(0,one);
  9436  001096  ECDE  F004         	call	PL32	;call to abstracted procedure
  9437  00109A  EC71  F00E         	call	_LcGotoXY
  9438                           
  9439                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+one]);
  9440  00109E  5021               	movf	_menuDaltGLCD^0,w,c
  9441  0010A0  0D1D               	mullw	29
  9442  0010A2  CFF3 F073          	movff	prodl,??_GLCDMotor
  9443  0010A6  0E1D               	movlw	29
  9444  0010A8  2673               	addwf	??_GLCDMotor^0,f,c
  9445  0010AA  5073               	movf	??_GLCDMotor^0,w,c
  9446  0010AC  0F01               	addlw	low _menuList
  9447  0010AE  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9448  0010B0  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9449  0010B4  D89A               	call	PL12	;call to abstracted procedure
  9450  0010B6  EC2D  F000         	call	_LcNewString	;wreg free
  9451  0010BA  D774               	goto	u4190
  9452  0010BC                     l4989:
  9453  0010BC  0E10               	movlw	16
  9454  0010BE  6419               	cpfsgt	GLCDMotor@length2^0,c
  9455  0010C0  0C10               	retlw	16
  9456  0010C2  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9457  0010C4  0C10               	retlw	16
  9458                           
  9459                           ;GestioLCD.c: 127:     state = 9;
  9460  0010C6  0E09               	movlw	9
  9461  0010C8  6E20               	movwf	GLCDMotor@state^0,c
  9462  0010CA  0C09               	retlw	9
  9463  0010CC                     l4995:
  9464                           
  9465                           ;GestioLCD.c: 131:    if (j<16) {
  9466  0010CC  0E10               	movlw	16
  9467  0010CE  601F               	cpfslt	GLCDMotor@j^0,c
  9468  0010D0  D014               	goto	l5009
  9469                           
  9470                           ;GestioLCD.c: 132:     LcGotoXY(j,one);
  9471  0010D2  0E01               	movlw	1
  9472  0010D4  6E6C               	movwf	LcGotoXY@Row^0,c
  9473  0010D6  501F               	movf	GLCDMotor@j^0,w,c
  9474  0010D8  EC71  F00E         	call	_LcGotoXY
  9475                           
  9476                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+one][k2]);
  9477  0010DC  D881               	call	PL6	;call to abstracted procedure
  9478  0010DE  241B               	addwf	GLCDMotor@k2^0,w,c
  9479  0010E0  D87B               	call	PL4	;call to abstracted procedure
  9480  0010E2  D873               	call	PL2	;call to abstracted procedure
  9481  0010E4  ECB5  F00D         	call	_LcPutChar
  9482                           
  9483                           ;GestioLCD.c: 134:     j++;
  9484  0010E8  2A1F               	incf	GLCDMotor@j^0,f,c
  9485                           
  9486                           ;GestioLCD.c: 135:     k2++;
  9487  0010EA  2A1B               	incf	GLCDMotor@k2^0,f,c
  9488                           
  9489                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+one][k2] == '\0') k2 = 0;
  9490  0010EC  D879               	call	PL6	;call to abstracted procedure
  9491  0010EE  241B               	addwf	GLCDMotor@k2^0,w,c
  9492  0010F0  D873               	call	PL4	;call to abstracted procedure
  9493  0010F2  D86B               	call	PL2	;call to abstracted procedure
  9494  0010F4  B4D8               	btfsc	status,2,c
  9495  0010F6  6A1B               	clrf	GLCDMotor@k2^0,c
  9496  0010F8  0012               	return	
  9497  0010FA                     l5009:
  9498                           
  9499                           ;GestioLCD.c: 139:     min2++;
  9500  0010FA  2A1D               	incf	GLCDMotor@min2^0,f,c
  9501                           
  9502                           ;GestioLCD.c: 140:     max2++;
  9503  0010FC  2A4D               	incf	GLCDMotor@max2^0,f,c
  9504                           
  9505                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+one][max2] == '\0') max2=0;
  9506  0010FE  D870               	call	PL6	;call to abstracted procedure
  9507  001100  244D               	addwf	GLCDMotor@max2^0,w,c
  9508  001102  D86A               	call	PL4	;call to abstracted procedure
  9509  001104  D862               	call	PL2	;call to abstracted procedure
  9510  001106  E101               	bnz	l5015
  9511  001108  6A4D               	clrf	GLCDMotor@max2^0,c
  9512  00110A                     l5015:
  9513                           
  9514                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+one][min2] == '\0') min2=0;
  9515  00110A  D86A               	call	PL6	;call to abstracted procedure
  9516  00110C  241D               	addwf	GLCDMotor@min2^0,w,c
  9517  00110E  D864               	call	PL4	;call to abstracted procedure
  9518  001110  D85C               	call	PL2	;call to abstracted procedure
  9519  001112  E101               	bnz	l1013
  9520  001114  6A1D               	clrf	GLCDMotor@min2^0,c
  9521  001116                     l1013:
  9522                           
  9523                           ;GestioLCD.c: 143:     j=0;
  9524  001116  6A1F               	clrf	GLCDMotor@j^0,c
  9525                           
  9526                           ;GestioLCD.c: 144:     k2=min2;
  9527  001118  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9528  00111C  D743               	goto	u4190
  9529  00111E                     l5021:
  9530                           
  9531                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == on
      +                          e) {
  9532  00111E  5022               	movf	_timerGLCD^0,w,c
  9533  001120  ECDC  F00E         	call	_TiGetTics
  9534  001124  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9535  001126  D00A               	goto	l1015
  9536  001128  D865               	call	PL58	;call to abstracted procedure
  9537  00112A  E308               	bnc	l1015
  9538  00112C  A276               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9539  00112E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9540  001130  D005               	goto	l1015
  9541                           
  9542                           ;GestioLCD.c: 150:     LcClear();
  9543  001132  EC37  F00F         	call	_LcClear	;wreg free
  9544  001136                     l5029:
  9545                           
  9546                           ;GestioLCD.c: 151:     state = 2;
  9547  001136  0E02               	movlw	2
  9548  001138  6E20               	movwf	GLCDMotor@state^0,c
  9549                           
  9550                           ;GestioLCD.c: 152:    }
  9551  00113A  0C02               	retlw	2
  9552  00113C                     l1015:
  9553  00113C  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9554  00113E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9555  001140  0012               	return	
  9556                           
  9557                           ;GestioLCD.c: 154:     LcClear();
  9558  001142  EC37  F00F         	call	_LcClear	;wreg free
  9559  001146  D75F               	goto	l990
  9560  001148                     l5037:
  9561                           
  9562                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9563  001148  5022               	movf	_timerGLCD^0,w,c
  9564  00114A  EC75  F00F         	call	_TiResetTics
  9565  00114E  D72A               	goto	u4190
  9566  001150                     l5041:
  9567                           
  9568                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9569  001150  EC33  F000         	call	_LcLliure	;wreg free
  9570  001154  A0D8               	btfss	status,0,c
  9571  001156  0012               	return	
  9572                           
  9573                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9574  001158  5022               	movf	_timerGLCD^0,w,c
  9575  00115A  EC75  F00F         	call	_TiResetTics
  9576                           
  9577                           ;GestioLCD.c: 165:     state = 11;
  9578  00115E  0E0B               	movlw	11
  9579  001160  6E20               	movwf	GLCDMotor@state^0,c
  9580  001162  0C0B               	retlw	11
  9581  001164                     l5047:
  9582                           
  9583                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+one][length2] != '\0') {
  9584  001164  D83D               	call	PL6	;call to abstracted procedure
  9585  001166  2419               	addwf	GLCDMotor@length2^0,w,c
  9586  001168  D837               	call	PL4	;call to abstracted procedure
  9587  00116A  D82F               	call	PL2	;call to abstracted procedure
  9588  00116C  E002               	bz	l5051
  9589                           
  9590                           ;GestioLCD.c: 170:     length2++;
  9591  00116E  2A19               	incf	GLCDMotor@length2^0,f,c
  9592                           
  9593                           ;GestioLCD.c: 171:    }
  9594  001170  0012               	return	
  9595  001172                     l5051:
  9596  001172  D836               	call	PL6	;call to abstracted procedure
  9597  001174  2419               	addwf	GLCDMotor@length2^0,w,c
  9598  001176  D830               	call	PL4	;call to abstracted procedure
  9599  001178  D828               	call	PL2	;call to abstracted procedure
  9600  00117A  E0DD               	bz	l5029
  9601  00117C  0012               	return	
  9602  00117E                     l5057:
  9603  00117E  5020               	movf	GLCDMotor@state^0,w,c
  9604  001180  6E73               	movwf	??_GLCDMotor^0,c
  9605  001182  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9606                           
  9607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9608                           ; Switch size 1, requested type "space"
  9609                           ; Number of cases is 1, Range of values is 0 to 0
  9610                           ; switch strategies available:
  9611                           ; Name         Instructions Cycles
  9612                           ; simple_byte            4     3 (average)
  9613                           ;	Chosen strategy is simple_byte
  9614  001184  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9615  001186  A4D8               	btfss	status,2,c
  9616  001188  0012               	return	
  9617                           
  9618                           ; Switch size 1, requested type "space"
  9619                           ; Number of cases is 12, Range of values is 0 to 13
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte           37    19 (average)
  9623                           ;	Chosen strategy is simple_byte
  9624  00118A  5073               	movf	??_GLCDMotor^0,w,c
  9625  00118C  E101 D74E          	bz	l996
  9626  001190  0A01               	xorlw	1	; case 1
  9627  001192  E101 D75F          	bz	l4963
  9628  001196  0A03               	xorlw	3	; case 2
  9629  001198  E101 D6EC          	bz	l4881
  9630  00119C  0A01               	xorlw	1	; case 3
  9631  00119E  E101 D703          	bz	l4897
  9632  0011A2  0A06               	xorlw	6	; case 5
  9633  0011A4  E101 D731          	bz	l4927
  9634  0011A8  0A03               	xorlw	3	; case 6
  9635  0011AA  E101 D728          	bz	l4923
  9636  0011AE  0A01               	xorlw	1	; case 7
  9637  0011B0  E101 D76C          	bz	l4979
  9638  0011B4  0A0F               	xorlw	15	; case 8
  9639  0011B6  E0CC               	bz	l5041
  9640  0011B8  0A01               	xorlw	1	; case 9
  9641  0011BA  E088               	bz	l4995
  9642  0011BC  0A03               	xorlw	3	; case 10
  9643  0011BE  E0C4               	bz	l5037
  9644  0011C0  0A01               	xorlw	1	; case 11
  9645  0011C2  E0AD               	bz	l5021
  9646  0011C4  0A06               	xorlw	6	; case 13
  9647  0011C6  E0CE               	bz	l5047
  9648  0011C8  0012               	return		;funcret
  9649  0011CA                     __end_of_GLCDMotor:
  9650                           	callstack 0
  9651  0011CA                     PL2:
  9652                           	callstack 24
  9653  0011CA  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9654  0011CE                     	if	1	;There is more than 1 active tblptr byte
  9655  0011CE  0E02               	movlw	high __smallconst
  9656  0011D0  6EF7               	movwf	tblptrh,c
  9657  0011D2                     	endif
  9658  0011D2                     	if	0	;tblptru may be non-zero
  9659  0011D2                     	endif
  9660  0011D2                     	if	0	;tblptru may be non-zero
  9661  0011D2                     	endif
  9662  0011D2  0008               	tblrd		*
  9663  0011D4  50F5               	movf	tablat,w,c
  9664  0011D6  0012               	return	
  9665  0011D8                     __end_ofPL2:
  9666                           	callstack 0
  9667  0011D8                     PL4:
  9668                           	callstack 24
  9669  0011D8  6E73               	movwf	??_GLCDMotor^0,c
  9670  0011DA  0E1D               	movlw	29
  9671  0011DC  2673               	addwf	??_GLCDMotor^0,f,c
  9672  0011DE  0C1D               	retlw	29
  9673  0011E0                     __end_ofPL4:
  9674                           	callstack 0
  9675  0011E0                     PL6:
  9676                           	callstack 24
  9677  0011E0  5021               	movf	_menuDaltGLCD^0,w,c
  9678  0011E2  0D1D               	mullw	29
  9679  0011E4  50F3               	movf	243,w,c
  9680  0011E6  0F01               	addlw	low _menuList
  9681  0011E8  0012               	return	
  9682  0011EA                     __end_ofPL6:
  9683                           	callstack 0
  9684  0011EA                     PL12:
  9685                           	callstack 24
  9686  0011EA  5067               	movf	LcNewString@new_s^0,w,c
  9687  0011EC  A4D8               	btfss	status,2,c
  9688  0011EE  0E02               	movlw	high __smallconst
  9689  0011F0  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9690  0011F2  0012               	return	
  9691  0011F4                     __end_ofPL12:
  9692                           	callstack 0
  9693  0011F4                     PL58:
  9694                           	callstack 27
  9695  0011F4  0EB5               	movlw	181
  9696  0011F6  5C64               	subwf	?_TiGetTics^0,w,c
  9697  0011F8  0E04               	movlw	4
  9698  0011FA  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9699  0011FC  0012               	return	
  9700  0011FE                     __end_ofPL58:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function _LcPutChar *****************
  9704 ;; Defined at:
  9705 ;;		line 118 in file "LcTLCD.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  c               1    wreg     unsigned char 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  c               1   19[COMRAM] unsigned char 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1
  9719 ;;      Params:         0       0       0
  9720 ;;      Locals:         1       0       0
  9721 ;;      Temps:          0       0       0
  9722 ;;      Totals:         1       0       0
  9723 ;;Total ram usage:        1 bytes
  9724 ;; Hardware stack levels used: 1
  9725 ;; Hardware stack levels required when called: 5
  9726 ;; This function calls:
  9727 ;;		_CantaData
  9728 ;;		_LcGotoXY
  9729 ;;		_WaitForBusy
  9730 ;; This function is called by:
  9731 ;;		_LcLCD
  9732 ;;		_menu
  9733 ;;		_GLCDMotor
  9734 ;;		_motorSIO
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text78
  9739  001B6A                     __ptext78:
  9740                           	callstack 0
  9741  001B6A                     _LcPutChar:
  9742                           	callstack 24
  9743                           
  9744                           ;incstack = 0
  9745                           ;LcPutChar@c stored from wreg
  9746  001B6A  6E72               	movwf	LcPutChar@c^0,c
  9747                           
  9748                           ;LcTLCD.c: 120:  WaitForBusy(); CantaData(c);
  9749  001B6C  EC1C  F00E         	call	_WaitForBusy	;wreg free
  9750  001B70  5072               	movf	LcPutChar@c^0,w,c
  9751  001B72  EC3B  F00E         	call	_CantaData
  9752                           
  9753                           ;LcTLCD.c: 122:  ++ColumnAct;
  9754  001B76  2A3E               	incf	_ColumnAct^0,f,c
  9755                           
  9756                           ;LcTLCD.c: 124:  if (Rows == 2) {
  9757  001B78  0E02               	movlw	2
  9758  001B7A  1840               	xorwf	_Rows^0,w,c
  9759  001B7C  E10C               	bnz	l4507
  9760                           
  9761                           ;LcTLCD.c: 125:   if (ColumnAct >= 40) {
  9762  001B7E  0E27               	movlw	39
  9763  001B80  643E               	cpfsgt	_ColumnAct^0,c
  9764  001B82  D009               	goto	l4507
  9765                           
  9766                           ;LcTLCD.c: 126:    ColumnAct = 0;
  9767  001B84  6A3E               	clrf	_ColumnAct^0,c
  9768                           
  9769                           ;LcTLCD.c: 127:    if (++RowAct >= 2) RowAct = 0;
  9770  001B86  2A3F               	incf	_RowAct^0,f,c
  9771  001B88  0E01               	movlw	1
  9772  001B8A  643F               	cpfsgt	_RowAct^0,c
  9773  001B8C  D001               	goto	l4505
  9774  001B8E  6A3F               	clrf	_RowAct^0,c
  9775  001B90                     l4505:
  9776                           
  9777                           ;LcTLCD.c: 128:    LcGotoXY(ColumnAct, RowAct);
  9778  001B90  D80C               	call	PL86	;call to abstracted procedure
  9779  001B92  EC71  F00E         	call	_LcGotoXY
  9780  001B96                     l4507:
  9781                           
  9782                           ;LcTLCD.c: 139:  if (RowAct == 1) {
  9783  001B96  043F               	decf	_RowAct^0,w,c
  9784  001B98  A4D8               	btfss	status,2,c
  9785  001B9A  0012               	return	
  9786                           
  9787                           ;LcTLCD.c: 140:   if (ColumnAct >= 40) ColumnAct = 0;
  9788  001B9C  0E27               	movlw	39
  9789  001B9E  643E               	cpfsgt	_ColumnAct^0,c
  9790  001BA0  D001               	goto	l4513
  9791  001BA2  6A3E               	clrf	_ColumnAct^0,c
  9792  001BA4                     l4513:
  9793                           
  9794                           ;LcTLCD.c: 141:   LcGotoXY(ColumnAct, RowAct);
  9795  001BA4  D802               	call	PL86	;call to abstracted procedure
  9796  001BA6  EF71  F00E         	goto	_LcGotoXY
  9797  001BAA                     __end_of_LcPutChar:
  9798                           	callstack 0
  9799  001BAA                     PL86:
  9800                           	callstack 24
  9801  001BAA  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
  9802  001BAE  503E               	movf	_ColumnAct^0,w,c
  9803  001BB0  0012               	return	
  9804  001BB2                     __end_ofPL86:
  9805                           	callstack 0
  9806                           
  9807 ;; *************** function _CantaData *****************
  9808 ;; Defined at:
  9809 ;;		line 180 in file "LcTLCD.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  Data            1    wreg     unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  Data            1    7[COMRAM] unsigned char 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1
  9823 ;;      Params:         0       0       0
  9824 ;;      Locals:         1       0       0
  9825 ;;      Temps:          0       0       0
  9826 ;;      Totals:         1       0       0
  9827 ;;Total ram usage:        1 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; Hardware stack levels required when called: 3
  9830 ;; This function calls:
  9831 ;;		_CantaPartAlta
  9832 ;;		_CantaPartBaixa
  9833 ;; This function is called by:
  9834 ;;		_LcPutChar
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text79
  9839  001C76                     __ptext79:
  9840                           	callstack 0
  9841  001C76                     _CantaData:
  9842                           	callstack 25
  9843                           
  9844                           ;incstack = 0
  9845                           ;CantaData@Data stored from wreg
  9846  001C76  6E66               	movwf	CantaData@Data^0,c
  9847                           
  9848                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9849  001C78  9694               	bcf	148,3,c	;volatile
  9850  001C7A  9494               	bcf	148,2,c	;volatile
  9851  001C7C  9294               	bcf	148,1,c	;volatile
  9852  001C7E  9094               	bcf	148,0,c	;volatile
  9853                           
  9854                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 1);
  9855  001C80  8A8B               	bsf	139,5,c	;volatile
  9856                           
  9857                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9858  001C82  9E8C               	bcf	140,7,c	;volatile
  9859                           
  9860                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9861  001C84  888B               	bsf	139,4,c	;volatile
  9862                           
  9863                           ;LcTLCD.c: 185:  CantaPartAlta(Data);
  9864  001C86  5066               	movf	CantaData@Data^0,w,c
  9865  001C88  EC5A  F00D         	call	_CantaPartAlta
  9866                           
  9867                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9868                           
  9869                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9870                           
  9871                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9872                           
  9873                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9874  001C8C  D80B               	call	PL62	;call to abstracted procedure
  9875                           
  9876                           ;LcTLCD.c: 190:  CantaPartBaixa(Data);
  9877  001C8E  5066               	movf	CantaData@Data^0,w,c
  9878  001C90  EC27  F00D         	call	_CantaPartBaixa
  9879                           
  9880                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9881                           
  9882                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9883                           
  9884                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9885  001C94  D000               	goto	PL30	;call to abstracted procedure
  9886  001C96                     __end_of_CantaData:
  9887                           	callstack 0
  9888  001C96                     PL30:
  9889                           	callstack 24
  9890  001C96  888B               	bsf	139,4,c	;volatile
  9891  001C98  988B               	bcf	139,4,c	;volatile
  9892  001C9A  8694               	bsf	148,3,c	;volatile
  9893  001C9C  8494               	bsf	148,2,c	;volatile
  9894  001C9E  8294               	bsf	148,1,c	;volatile
  9895  001CA0  8094               	bsf	148,0,c	;volatile
  9896  001CA2  0012               	return		;funcret
  9897  001CA4                     __end_ofPL30:
  9898                           	callstack 0
  9899  001CA4                     PL62:
  9900                           	callstack 24
  9901  001CA4  888B               	bsf	139,4,c	;volatile
  9902  001CA6  988B               	bcf	139,4,c	;volatile
  9903  001CA8  988B               	bcf	139,4,c	;volatile
  9904  001CAA  888B               	bsf	139,4,c	;volatile
  9905  001CAC  0012               	return	
  9906  001CAE                     __end_ofPL62:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _LcNewString *****************
  9910 ;; Defined at:
  9911 ;;		line 225 in file "LcTLCD.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9914 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9915 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9916 ;;		 -> STR_5(16), STR_4(13), STR_3(8), STR_2(7), 
  9917 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      void 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2, status,0
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMRAM   BANK0   BANK1
  9929 ;;      Params:         2       0       0
  9930 ;;      Locals:         0       0       0
  9931 ;;      Temps:          0       0       0
  9932 ;;      Totals:         2       0       0
  9933 ;;Total ram usage:        2 bytes
  9934 ;; Hardware stack levels used: 1
  9935 ;; Hardware stack levels required when called: 2
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_menu
  9940 ;;		_GLCDMotor
  9941 ;;		_motorJoc
  9942 ;;		_motorSIO
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text80
  9947  00005A                     __ptext80:
  9948                           	callstack 0
  9949  00005A                     _LcNewString:
  9950                           	callstack 27
  9951                           
  9952                           ;LcTLCD.c: 226:     s_ptr = new_s;
  9953                           
  9954                           ;incstack = 0
  9955  00005A  C067  F00B         	movff	LcNewString@new_s,_s_ptr
  9956  00005E  C068  F00C         	movff	LcNewString@new_s+1,_s_ptr+1
  9957                           
  9958                           ;LcTLCD.c: 227:     nou_s = 1;
  9959  000062  8477               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9960  000064  0012               	return		;funcret
  9961  000066                     __end_of_LcNewString:
  9962                           	callstack 0
  9963                           
  9964 ;; *************** function _LcLliure *****************
  9965 ;; Defined at:
  9966 ;;		line 241 in file "LcTLCD.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;		None
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;		None
  9971 ;; Return value:  Size  Location     Type
  9972 ;;		None               void
  9973 ;; Registers used:
  9974 ;;		status,0
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1
  9980 ;;      Params:         0       0       0
  9981 ;;      Locals:         0       0       0
  9982 ;;      Temps:          0       0       0
  9983 ;;      Totals:         0       0       0
  9984 ;;Total ram usage:        0 bytes
  9985 ;; Hardware stack levels used: 1
  9986 ;; Hardware stack levels required when called: 2
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_menu
  9991 ;;		_GLCDMotor
  9992 ;;		_motorJoc
  9993 ;;		_motorSIO
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text81
  9998  000066                     __ptext81:
  9999                           	callstack 0
 10000  000066                     _LcLliure:
 10001                           	callstack 27
 10002                           
 10003                           ;LcTLCD.c: 242:     return !nou_s;
 10004                           
 10005                           ;incstack = 0
 10006  000066  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10007  000068  D002               	goto	l4523
 10008  00006A  90D8               	bcf	status,0,c
 10009  00006C  0012               	return	
 10010  00006E                     l4523:
 10011  00006E  80D8               	bsf	status,0,c
 10012  000070  0012               	return		;funcret
 10013  000072                     __end_of_LcLliure:
 10014                           	callstack 0
 10015                           
 10016 ;; *************** function _LcClear *****************
 10017 ;; Defined at:
 10018 ;;		line 82 in file "LcTLCD.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;		None
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;		None
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  1    wreg      void 
 10025 ;; Registers used:
 10026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1
 10032 ;;      Params:         0       0       0
 10033 ;;      Locals:         0       0       0
 10034 ;;      Temps:          0       0       0
 10035 ;;      Totals:         0       0       0
 10036 ;;Total ram usage:        0 bytes
 10037 ;; Hardware stack levels used: 1
 10038 ;; Hardware stack levels required when called: 5
 10039 ;; This function calls:
 10040 ;;		_CantaIR
 10041 ;;		_Espera
 10042 ;;		_LcGotoXY
 10043 ;;		_WaitForBusy
 10044 ;; This function is called by:
 10045 ;;		_menu
 10046 ;;		_GLCDMotor
 10047 ;;		_motorSIO
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text82
 10052  001E6E                     __ptext82:
 10053                           	callstack 0
 10054  001E6E                     _LcClear:
 10055                           	callstack 24
 10056                           
 10057                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(DISPLAY_CLEAR);
 10058                           
 10059                           ;incstack = 0
 10060  001E6E  EC1C  F00E         	call	_WaitForBusy	;wreg free
 10061  001E72  0E01               	movlw	1
 10062  001E74  EC67  F00F         	call	_CantaIR
 10063                           
 10064                           ;LcTLCD.c: 86:  Espera(Timer, 3);
 10065  001E78  D806               	call	PL78	;call to abstracted procedure
 10066  001E7A  EC48  F00F         	call	_Espera
 10067                           
 10068                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
 10069  001E7E  0E00               	movlw	0
 10070  001E80  6E6C               	movwf	LcGotoXY@Row^0,c
 10071  001E82  EF71  F00E         	goto	_LcGotoXY
 10072  001E86                     __end_of_LcClear:
 10073                           	callstack 0
 10074  001E86                     PL78:
 10075                           	callstack 26
 10076  001E86  6A6C               	clrf	(Espera@ms+1)^0,c
 10077  001E88  0E03               	movlw	3
 10078  001E8A  6E6B               	movwf	Espera@ms^0,c
 10079  001E8C  503D               	movf	_Timer^0,w,c
 10080  001E8E  0012               	return	
 10081  001E90                     __end_ofPL78:
 10082                           	callstack 0
 10083                           
 10084 ;; *************** function _LcGotoXY *****************
 10085 ;; Defined at:
 10086 ;;		line 104 in file "LcTLCD.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  Column          1    wreg     unsigned char 
 10089 ;;  Row             1   13[COMRAM] unsigned char 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  Column          1   18[COMRAM] unsigned char 
 10092 ;;  Fisics          2   14[COMRAM] int 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      void 
 10095 ;; Registers used:
 10096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1
 10102 ;;      Params:         1       0       0
 10103 ;;      Locals:         5       0       0
 10104 ;;      Temps:          0       0       0
 10105 ;;      Totals:         6       0       0
 10106 ;;Total ram usage:        6 bytes
 10107 ;; Hardware stack levels used: 1
 10108 ;; Hardware stack levels required when called: 4
 10109 ;; This function calls:
 10110 ;;		_CantaIR
 10111 ;;		_WaitForBusy
 10112 ;; This function is called by:
 10113 ;;		_LcClear
 10114 ;;		_LcPutChar
 10115 ;;		_menu
 10116 ;;		_GLCDMotor
 10117 ;;		_motorJoc
 10118 ;;		_motorSIO
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text83
 10123  001CE2                     __ptext83:
 10124                           	callstack 0
 10125  001CE2                     _LcGotoXY:
 10126                           	callstack 24
 10127                           
 10128                           ;incstack = 0
 10129                           ;LcGotoXY@Column stored from wreg
 10130  001CE2  6E71               	movwf	LcGotoXY@Column^0,c
 10131                           
 10132                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 109:  Fisics = Column + (!Row ? 0 : 0x40);
 10133  001CE4  506C               	movf	LcGotoXY@Row^0,w,c
 10134  001CE6  E004               	bz	l73
 10135  001CE8  6A70               	clrf	(_LcGotoXY$343+1)^0,c
 10136  001CEA  0E40               	movlw	64
 10137  001CEC  6E6F               	movwf	_LcGotoXY$343^0,c
 10138  001CEE  D002               	goto	l4417
 10139  001CF0                     l73:
 10140  001CF0  6A6F               	clrf	_LcGotoXY$343^0,c
 10141  001CF2  6A70               	clrf	(_LcGotoXY$343+1)^0,c
 10142  001CF4                     l4417:
 10143  001CF4  5071               	movf	LcGotoXY@Column^0,w,c
 10144  001CF6  246F               	addwf	_LcGotoXY$343^0,w,c
 10145  001CF8  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10146  001CFA  0E00               	movlw	0
 10147  001CFC  2070               	addwfc	(_LcGotoXY$343+1)^0,w,c
 10148  001CFE  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10149                           
 10150                           ;LcTLCD.c: 111:  WaitForBusy();
 10151  001D00  EC1C  F00E         	call	_WaitForBusy	;wreg free
 10152                           
 10153                           ;LcTLCD.c: 112:  CantaIR(SET_DDRAM | Fisics);
 10154  001D04  506D               	movf	LcGotoXY@Fisics^0,w,c
 10155  001D06  0980               	iorlw	128
 10156  001D08  EC67  F00F         	call	_CantaIR
 10157                           
 10158                           ;LcTLCD.c: 114:  RowAct = Row;
 10159  001D0C  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10160                           
 10161                           ;LcTLCD.c: 115:  ColumnAct = Column;
 10162  001D10  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10163  001D14  0012               	return		;funcret
 10164  001D16                     __end_of_LcGotoXY:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function _WaitForBusy *****************
 10168 ;; Defined at:
 10169 ;;		line 196 in file "LcTLCD.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;		None
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  Busy            1   12[COMRAM] unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1
 10183 ;;      Params:         0       0       0
 10184 ;;      Locals:         1       0       0
 10185 ;;      Temps:          0       0       0
 10186 ;;      Totals:         1       0       0
 10187 ;;Total ram usage:        1 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 3
 10190 ;; This function calls:
 10191 ;;		_TiGetTics
 10192 ;;		_TiResetTics
 10193 ;; This function is called by:
 10194 ;;		_LcInit
 10195 ;;		_LcClear
 10196 ;;		_LcGotoXY
 10197 ;;		_LcPutChar
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text84
 10202  001C38                     __ptext84:
 10203                           	callstack 0
 10204  001C38                     _WaitForBusy:
 10205                           	callstack 25
 10206                           
 10207                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10208                           
 10209                           ;incstack = 0
 10210  001C38  8694               	bsf	148,3,c	;volatile
 10211  001C3A  8494               	bsf	148,2,c	;volatile
 10212  001C3C  8294               	bsf	148,1,c	;volatile
 10213  001C3E  8094               	bsf	148,0,c	;volatile
 10214                           
 10215                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 0);
 10216  001C40  9A8B               	bcf	139,5,c	;volatile
 10217                           
 10218                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 1);
 10219  001C42  8E8C               	bsf	140,7,c	;volatile
 10220                           
 10221                           ;LcTLCD.c: 200:  TiResetTics(Timer);
 10222  001C44  503D               	movf	_Timer^0,w,c
 10223  001C46  EC75  F00F         	call	_TiResetTics
 10224  001C4A                     l4385:
 10225                           
 10226                           ;LcTLCD.c: 202:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10227  001C4A  888B               	bsf	139,4,c	;volatile
 10228  001C4C  888B               	bsf	139,4,c	;volatile
 10229                           
 10230                           ;LcTLCD.c: 203:   Busy = (PORTCbits.RC3);
 10231  001C4E  0E00               	movlw	0
 10232  001C50  B682               	btfsc	130,3,c	;volatile
 10233  001C52  0E01               	movlw	1
 10234  001C54  6E6B               	movwf	WaitForBusy@Busy^0,c
 10235                           
 10236                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 0);
 10237  001C56  988B               	bcf	139,4,c	;volatile
 10238                           
 10239                           ;LcTLCD.c: 205:   (LATCbits.LATC4 = 0);
 10240  001C58  988B               	bcf	139,4,c	;volatile
 10241                           
 10242                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10243  001C5A  888B               	bsf	139,4,c	;volatile
 10244  001C5C  888B               	bsf	139,4,c	;volatile
 10245                           
 10246                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 0);
 10247  001C5E  988B               	bcf	139,4,c	;volatile
 10248                           
 10249                           ;LcTLCD.c: 209:   (LATCbits.LATC4 = 0);
 10250  001C60  988B               	bcf	139,4,c	;volatile
 10251                           
 10252                           ;LcTLCD.c: 210:   if (TiGetTics(Timer)) break;
 10253  001C62  503D               	movf	_Timer^0,w,c
 10254  001C64  ECDC  F00E         	call	_TiGetTics
 10255  001C68  5064               	movf	?_TiGetTics^0,w,c
 10256  001C6A  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10257  001C6C  E001               	bz	l4407
 10258  001C6E  0012               	return	
 10259  001C70                     l4407:
 10260                           
 10261                           ;LcTLCD.c: 211:  } while(Busy);
 10262  001C70  506B               	movf	WaitForBusy@Busy^0,w,c
 10263  001C72  E1EB               	bnz	l4385
 10264  001C74  0012               	return		;funcret
 10265  001C76                     __end_of_WaitForBusy:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _CantaIR *****************
 10269 ;; Defined at:
 10270 ;;		line 164 in file "LcTLCD.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  IR              1    wreg     unsigned char 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  IR              1    7[COMRAM] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1
 10284 ;;      Params:         0       0       0
 10285 ;;      Locals:         1       0       0
 10286 ;;      Temps:          0       0       0
 10287 ;;      Totals:         1       0       0
 10288 ;;Total ram usage:        1 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 3
 10291 ;; This function calls:
 10292 ;;		_CantaPartAlta
 10293 ;;		_CantaPartBaixa
 10294 ;; This function is called by:
 10295 ;;		_LcScroll
 10296 ;;		_LcInit
 10297 ;;		_LcClear
 10298 ;;		_LcGotoXY
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text85
 10303  001ECE                     __ptext85:
 10304                           	callstack 0
 10305  001ECE                     _CantaIR:
 10306                           	callstack 24
 10307                           
 10308                           ;incstack = 0
 10309                           ;CantaIR@IR stored from wreg
 10310  001ECE  6E66               	movwf	CantaIR@IR^0,c
 10311                           
 10312                           ;LcTLCD.c: 165:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10313  001ED0  9694               	bcf	148,3,c	;volatile
 10314                           
 10315                           ;LcTLCD.c: 166:  (LATCbits.LATC5 = 0);
 10316                           
 10317                           ;LcTLCD.c: 167:  (LATDbits.LATD7 = 0);
 10318                           
 10319                           ;LcTLCD.c: 168:  (LATCbits.LATC4 = 1);
 10320  001ED2  ECAB  F00C         	call	PL36	;call to abstracted procedure
 10321                           
 10322                           ;LcTLCD.c: 169:  CantaPartAlta(IR);
 10323  001ED6  5066               	movf	CantaIR@IR^0,w,c
 10324  001ED8  EC5A  F00D         	call	_CantaPartAlta
 10325                           
 10326                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10327                           
 10328                           ;LcTLCD.c: 171:  (LATCbits.LATC4 = 0);
 10329                           
 10330                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 0);
 10331                           
 10332                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 1);
 10333  001EDC  EC52  F00E         	call	PL62	;call to abstracted procedure
 10334                           
 10335                           ;LcTLCD.c: 174:  CantaPartBaixa(IR);
 10336  001EE0  5066               	movf	CantaIR@IR^0,w,c
 10337  001EE2  EC27  F00D         	call	_CantaPartBaixa
 10338                           
 10339                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10340                           
 10341                           ;LcTLCD.c: 176:  (LATCbits.LATC4 = 0);
 10342                           
 10343                           ;LcTLCD.c: 177:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10344  001EE6  EF4B  F00E         	goto	PL30	;call to abstracted procedure
 10345  001EEA                     __end_of_CantaIR:
 10346                           	callstack 0
 10347                           
 10348 ;; *************** function _CantaPartBaixa *****************
 10349 ;; Defined at:
 10350 ;;		line 157 in file "LcTLCD.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  c               1    wreg     unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  c               1    6[COMRAM] unsigned char 
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg, status,2, status,0
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1
 10364 ;;      Params:         0       0       0
 10365 ;;      Locals:         1       0       0
 10366 ;;      Temps:          1       0       0
 10367 ;;      Totals:         2       0       0
 10368 ;;Total ram usage:        2 bytes
 10369 ;; Hardware stack levels used: 1
 10370 ;; Hardware stack levels required when called: 2
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_CantaIR
 10375 ;;		_CantaData
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text86
 10380  001A4E                     __ptext86:
 10381                           	callstack 0
 10382  001A4E                     _CantaPartBaixa:
 10383                           	callstack 24
 10384                           
 10385                           ;incstack = 0
 10386                           ;CantaPartBaixa@c stored from wreg
 10387  001A4E  6E65               	movwf	CantaPartBaixa@c^0,c
 10388                           
 10389                           ;LcTLCD.c: 158:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10390  001A50  A665               	btfss	CantaPartBaixa@c^0,3,c
 10391  001A52  D003               	goto	u3710
 10392  001A54  6A64               	clrf	??_CantaPartBaixa^0,c
 10393  001A56  2A64               	incf	??_CantaPartBaixa^0,f,c
 10394  001A58  D001               	goto	u3728
 10395  001A5A                     u3710:
 10396  001A5A  6A64               	clrf	??_CantaPartBaixa^0,c
 10397  001A5C                     u3728:
 10398  001A5C  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10399  001A5E  D825               	call	PL66	;call to abstracted procedure
 10400  001A60  0BF7               	andlw	-9
 10401  001A62  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10402  001A64  6E8B               	movwf	139,c	;volatile
 10403                           
 10404                           ;LcTLCD.c: 159:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10405  001A66  A465               	btfss	CantaPartBaixa@c^0,2,c
 10406  001A68  D003               	goto	u3730
 10407  001A6A  6A64               	clrf	??_CantaPartBaixa^0,c
 10408  001A6C  2A64               	incf	??_CantaPartBaixa^0,f,c
 10409  001A6E  D001               	goto	u3748
 10410  001A70                     u3730:
 10411  001A70  6A64               	clrf	??_CantaPartBaixa^0,c
 10412  001A72                     u3748:
 10413  001A72  D81B               	call	PL66	;call to abstracted procedure
 10414  001A74  0BFB               	andlw	-5
 10415  001A76  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10416  001A78  6E8B               	movwf	139,c	;volatile
 10417                           
 10418                           ;LcTLCD.c: 160:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10419  001A7A  A265               	btfss	CantaPartBaixa@c^0,1,c
 10420  001A7C  D003               	goto	u3750
 10421  001A7E  6A64               	clrf	??_CantaPartBaixa^0,c
 10422  001A80  2A64               	incf	??_CantaPartBaixa^0,f,c
 10423  001A82  D001               	goto	u3768
 10424  001A84                     u3750:
 10425  001A84  6A64               	clrf	??_CantaPartBaixa^0,c
 10426  001A86                     u3768:
 10427  001A86  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10428  001A88  508B               	movf	139,w,c	;volatile
 10429  001A8A  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10430  001A8C  0BFD               	andlw	-3
 10431  001A8E  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10432  001A90  6E8B               	movwf	139,c	;volatile
 10433                           
 10434                           ;LcTLCD.c: 161:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10435  001A92  A065               	btfss	CantaPartBaixa@c^0,0,c
 10436  001A94  D003               	goto	u3770
 10437  001A96  6A64               	clrf	??_CantaPartBaixa^0,c
 10438  001A98  2A64               	incf	??_CantaPartBaixa^0,f,c
 10439  001A9A  D001               	goto	u3788
 10440  001A9C                     u3770:
 10441  001A9C  6A64               	clrf	??_CantaPartBaixa^0,c
 10442  001A9E                     u3788:
 10443  001A9E  508B               	movf	139,w,c	;volatile
 10444  001AA0  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10445  001AA2  0BFE               	andlw	-2
 10446  001AA4  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10447  001AA6  6E8B               	movwf	139,c	;volatile
 10448  001AA8  0012               	return		;funcret
 10449  001AAA                     __end_of_CantaPartBaixa:
 10450                           	callstack 0
 10451  001AAA                     PL66:
 10452                           	callstack 24
 10453  001AAA  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10454  001AAC  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10455  001AAE  508B               	movf	139,w,c	;volatile
 10456  001AB0  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10457  001AB2  0012               	return	
 10458  001AB4                     __end_ofPL66:
 10459                           	callstack 0
 10460                           
 10461 ;; *************** function _CantaPartAlta *****************
 10462 ;; Defined at:
 10463 ;;		line 150 in file "LcTLCD.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;  c               1    wreg     unsigned char 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;  c               1    6[COMRAM] unsigned char 
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      void 
 10470 ;; Registers used:
 10471 ;;		wreg, status,2, status,0
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1
 10477 ;;      Params:         0       0       0
 10478 ;;      Locals:         1       0       0
 10479 ;;      Temps:          1       0       0
 10480 ;;      Totals:         2       0       0
 10481 ;;Total ram usage:        2 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; Hardware stack levels required when called: 2
 10484 ;; This function calls:
 10485 ;;		Nothing
 10486 ;; This function is called by:
 10487 ;;		_CantaIR
 10488 ;;		_CantaData
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text87
 10493  001AB4                     __ptext87:
 10494                           	callstack 0
 10495  001AB4                     _CantaPartAlta:
 10496                           	callstack 24
 10497                           
 10498                           ;incstack = 0
 10499                           ;CantaPartAlta@c stored from wreg
 10500  001AB4  6E65               	movwf	CantaPartAlta@c^0,c
 10501                           
 10502                           ;LcTLCD.c: 151:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10503  001AB6  AE65               	btfss	CantaPartAlta@c^0,7,c
 10504  001AB8  D003               	goto	u3630
 10505  001ABA  6A64               	clrf	??_CantaPartAlta^0,c
 10506  001ABC  2A64               	incf	??_CantaPartAlta^0,f,c
 10507  001ABE  D001               	goto	u3648
 10508  001AC0                     u3630:
 10509  001AC0  6A64               	clrf	??_CantaPartAlta^0,c
 10510  001AC2                     u3648:
 10511  001AC2  4664               	rlncf	??_CantaPartAlta^0,f,c
 10512  001AC4  D825               	call	PL82	;call to abstracted procedure
 10513  001AC6  0BF7               	andlw	-9
 10514  001AC8  1864               	xorwf	??_CantaPartAlta^0,w,c
 10515  001ACA  6E8B               	movwf	139,c	;volatile
 10516                           
 10517                           ;LcTLCD.c: 152:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10518  001ACC  AC65               	btfss	CantaPartAlta@c^0,6,c
 10519  001ACE  D003               	goto	u3650
 10520  001AD0  6A64               	clrf	??_CantaPartAlta^0,c
 10521  001AD2  2A64               	incf	??_CantaPartAlta^0,f,c
 10522  001AD4  D001               	goto	u3668
 10523  001AD6                     u3650:
 10524  001AD6  6A64               	clrf	??_CantaPartAlta^0,c
 10525  001AD8                     u3668:
 10526  001AD8  D81B               	call	PL82	;call to abstracted procedure
 10527  001ADA  0BFB               	andlw	-5
 10528  001ADC  1864               	xorwf	??_CantaPartAlta^0,w,c
 10529  001ADE  6E8B               	movwf	139,c	;volatile
 10530                           
 10531                           ;LcTLCD.c: 153:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10532  001AE0  AA65               	btfss	CantaPartAlta@c^0,5,c
 10533  001AE2  D003               	goto	u3670
 10534  001AE4  6A64               	clrf	??_CantaPartAlta^0,c
 10535  001AE6  2A64               	incf	??_CantaPartAlta^0,f,c
 10536  001AE8  D001               	goto	u3688
 10537  001AEA                     u3670:
 10538  001AEA  6A64               	clrf	??_CantaPartAlta^0,c
 10539  001AEC                     u3688:
 10540  001AEC  4664               	rlncf	??_CantaPartAlta^0,f,c
 10541  001AEE  508B               	movf	139,w,c	;volatile
 10542  001AF0  1864               	xorwf	??_CantaPartAlta^0,w,c
 10543  001AF2  0BFD               	andlw	-3
 10544  001AF4  1864               	xorwf	??_CantaPartAlta^0,w,c
 10545  001AF6  6E8B               	movwf	139,c	;volatile
 10546                           
 10547                           ;LcTLCD.c: 154:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10548  001AF8  A865               	btfss	CantaPartAlta@c^0,4,c
 10549  001AFA  D003               	goto	u3690
 10550  001AFC  6A64               	clrf	??_CantaPartAlta^0,c
 10551  001AFE  2A64               	incf	??_CantaPartAlta^0,f,c
 10552  001B00  D001               	goto	u3708
 10553  001B02                     u3690:
 10554  001B02  6A64               	clrf	??_CantaPartAlta^0,c
 10555  001B04                     u3708:
 10556  001B04  508B               	movf	139,w,c	;volatile
 10557  001B06  1864               	xorwf	??_CantaPartAlta^0,w,c
 10558  001B08  0BFE               	andlw	-2
 10559  001B0A  1864               	xorwf	??_CantaPartAlta^0,w,c
 10560  001B0C  6E8B               	movwf	139,c	;volatile
 10561  001B0E  0012               	return		;funcret
 10562  001B10                     __end_of_CantaPartAlta:
 10563                           	callstack 0
 10564  001B10                     PL82:
 10565                           	callstack 24
 10566  001B10  4664               	rlncf	??_CantaPartAlta^0,f,c
 10567  001B12  4664               	rlncf	??_CantaPartAlta^0,f,c
 10568  001B14  508B               	movf	139,w,c	;volatile
 10569  001B16  1864               	xorwf	??_CantaPartAlta^0,w,c
 10570  001B18  0012               	return	
 10571  001B1A                     __end_ofPL82:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function _Espera *****************
 10575 ;; Defined at:
 10576 ;;		line 145 in file "LcTLCD.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  Timer           1    wreg     unsigned char 
 10579 ;;  ms              2   12[COMRAM] int 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  Timer           1   15[COMRAM] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1
 10591 ;;      Params:         2       0       0
 10592 ;;      Locals:         1       0       0
 10593 ;;      Temps:          1       0       0
 10594 ;;      Totals:         4       0       0
 10595 ;;Total ram usage:        4 bytes
 10596 ;; Hardware stack levels used: 1
 10597 ;; Hardware stack levels required when called: 3
 10598 ;; This function calls:
 10599 ;;		_TiGetTics
 10600 ;;		_TiResetTics
 10601 ;; This function is called by:
 10602 ;;		_LcInit
 10603 ;;		_LcClear
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text88
 10608  001E90                     __ptext88:
 10609                           	callstack 0
 10610  001E90                     _Espera:
 10611                           	callstack 25
 10612                           
 10613                           ;incstack = 0
 10614                           ;Espera@Timer stored from wreg
 10615  001E90  6E6E               	movwf	Espera@Timer^0,c
 10616                           
 10617                           ;LcTLCD.c: 146:  TiResetTics(Timer);
 10618  001E92  506E               	movf	Espera@Timer^0,w,c
 10619  001E94  EC75  F00F         	call	_TiResetTics
 10620  001E98                     l4411:
 10621  001E98  506E               	movf	Espera@Timer^0,w,c
 10622  001E9A  ECDC  F00E         	call	_TiGetTics
 10623  001E9E  506B               	movf	Espera@ms^0,w,c
 10624  001EA0  5C64               	subwf	?_TiGetTics^0,w,c
 10625  001EA2  5065               	movf	(?_TiGetTics+1)^0,w,c
 10626  001EA4  0A80               	xorlw	128
 10627  001EA6  6E6D               	movwf	??_Espera^0,c
 10628  001EA8  506C               	movf	(Espera@ms+1)^0,w,c
 10629  001EAA  0A80               	xorlw	128
 10630  001EAC  586D               	subwfb	??_Espera^0,w,c
 10631  001EAE  E3F4               	bnc	l4411
 10632  001EB0  0012               	return		;funcret
 10633  001EB2                     __end_of_Espera:
 10634                           	callstack 0
 10635                           
 10636 ;; *************** function _TiResetTics *****************
 10637 ;; Defined at:
 10638 ;;		line 55 in file "TiTTimer.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  Handle          1    wreg     unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  Handle          1    5[COMRAM] unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1
 10652 ;;      Params:         0       0       0
 10653 ;;      Locals:         1       0       0
 10654 ;;      Temps:          0       0       0
 10655 ;;      Totals:         1       0       0
 10656 ;;Total ram usage:        1 bytes
 10657 ;; Hardware stack levels used: 1
 10658 ;; Hardware stack levels required when called: 2
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_Espera
 10663 ;;		_WaitForBusy
 10664 ;;		_SMotor
 10665 ;;		_TeTeclat
 10666 ;;		_menu
 10667 ;;		_motorAltaveu
 10668 ;;		_GLCDMotor
 10669 ;;		_motorHora
 10670 ;;		_motorSIO
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           	psect	text89
 10675  001EEA                     __ptext89:
 10676                           	callstack 0
 10677  001EEA                     _TiResetTics:
 10678                           	callstack 27
 10679                           
 10680                           ;incstack = 0
 10681                           ;TiResetTics@Handle stored from wreg
 10682  001EEA  6E64               	movwf	TiResetTics@Handle^0,c
 10683                           
 10684                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10685  001EEC  5064               	movf	TiResetTics@Handle^0,w,c
 10686  001EEE  D805               	call	PL26	;call to abstracted procedure
 10687  001EF0  C009  FFDE         	movff	_h_Tics,postinc2
 10688  001EF4  C00A  FFDD         	movff	_h_Tics+1,postdec2
 10689  001EF8  0012               	return		;funcret
 10690  001EFA                     __end_of_TiResetTics:
 10691                           	callstack 0
 10692  001EFA                     PL26:
 10693                           	callstack 24
 10694  001EFA  0D03               	mullw	3
 10695  001EFC  50F3               	movf	243,w,c
 10696  001EFE  0F80               	addlw	low _s_Timers
 10697  001F00  6ED9               	movwf	fsr2l,c
 10698  001F02  6ADA               	clrf	fsr2h,c
 10699  001F04  0012               	return	
 10700  001F06                     __end_ofPL26:
 10701                           	callstack 0
 10702                           
 10703 ;; *************** function _TiGetTics *****************
 10704 ;; Defined at:
 10705 ;;		line 61 in file "TiTTimer.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  Handle          1    wreg     unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  Handle          1    9[COMRAM] unsigned char 
 10710 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  2    5[COMRAM] int 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1
 10720 ;;      Params:         2       0       0
 10721 ;;      Locals:         3       0       0
 10722 ;;      Temps:          2       0       0
 10723 ;;      Totals:         7       0       0
 10724 ;;Total ram usage:        7 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 2
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_Espera
 10731 ;;		_WaitForBusy
 10732 ;;		_SMotor
 10733 ;;		_TeTeclat
 10734 ;;		_menu
 10735 ;;		_motorAltaveu
 10736 ;;		_GLCDMotor
 10737 ;;		_motorHora
 10738 ;;		_motorSIO
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text90
 10743  001DB8                     __ptext90:
 10744                           	callstack 0
 10745  001DB8                     _TiGetTics:
 10746                           	callstack 27
 10747                           
 10748                           ;incstack = 0
 10749                           ;TiGetTics@Handle stored from wreg
 10750  001DB8  6E68               	movwf	TiGetTics@Handle^0,c
 10751                           
 10752                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10753  001DBA  C009  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10754  001DBE  C00A  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10755                           
 10756                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10757  001DC2  5068               	movf	TiGetTics@Handle^0,w,c
 10758  001DC4  EC7D  F00F         	call	PL26	;call to abstracted procedure
 10759  001DC8  CFDE F066          	movff	postinc2,??_TiGetTics
 10760  001DCC  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10761  001DD0  5066               	movf	??_TiGetTics^0,w,c
 10762  001DD2  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10763  001DD4  6E64               	movwf	?_TiGetTics^0,c
 10764  001DD6  5067               	movf	(??_TiGetTics+1)^0,w,c
 10765  001DD8  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10766  001DDA  6E65               	movwf	(?_TiGetTics+1)^0,c
 10767  001DDC  0012               	return		;funcret
 10768  001DDE                     __end_of_TiGetTics:
 10769                           	callstack 0
 10770                           
 10771 ;; *************** function _GLCDInit *****************
 10772 ;; Defined at:
 10773 ;;		line 26 in file "GestioLCD.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      void 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1
 10787 ;;      Params:         0       0       0
 10788 ;;      Locals:         0       0       0
 10789 ;;      Temps:          0       0       0
 10790 ;;      Totals:         0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used: 1
 10793 ;; Hardware stack levels required when called: 3
 10794 ;; This function calls:
 10795 ;;		_TiGetTimer
 10796 ;; This function is called by:
 10797 ;;		_main
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text91
 10802  0000FC                     __ptext91:
 10803                           	callstack 0
 10804  0000FC                     _GLCDInit:
 10805                           	callstack 27
 10806                           
 10807                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10808                           
 10809                           ;incstack = 0
 10810  0000FC  EC8B  F00E         	call	_TiGetTimer	;wreg free
 10811  000100  6E22               	movwf	_timerGLCD^0,c
 10812  000102  0012               	return		;funcret
 10813  000104                     __end_of_GLCDInit:
 10814                           	callstack 0
 10815                           
 10816 ;; *************** function _TiGetTimer *****************
 10817 ;; Defined at:
 10818 ;;		line 70 in file "TiTTimer.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      unsigned char 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1
 10832 ;;      Params:         0       0       0
 10833 ;;      Locals:         0       0       0
 10834 ;;      Temps:          1       0       0
 10835 ;;      Totals:         1       0       0
 10836 ;;Total ram usage:        1 bytes
 10837 ;; Hardware stack levels used: 1
 10838 ;; Hardware stack levels required when called: 2
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		_LcInit
 10843 ;;		_Sinit
 10844 ;;		_TeInit
 10845 ;;		_Minit
 10846 ;;		_initAltaveu
 10847 ;;		_GLCDInit
 10848 ;;		_initHora
 10849 ;;		_initSIO
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text92
 10854  001D16                     __ptext92:
 10855                           	callstack 0
 10856  001D16                     _TiGetTimer:
 10857                           	callstack 27
 10858                           
 10859                           ;TiTTimer.c: 74:     counter=0;
 10860                           
 10861                           ;incstack = 0
 10862  001D16  6A34               	clrf	_counter^0,c
 10863                           
 10864                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10865  001D18  D005               	goto	l4473
 10866  001D1A                     l4465:
 10867                           
 10868                           ;TiTTimer.c: 76:         counter++;
 10869  001D1A  2A34               	incf	_counter^0,f,c
 10870                           
 10871                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10872  001D1C  0E08               	movlw	8
 10873  001D1E  1834               	xorwf	_counter^0,w,c
 10874  001D20  E101               	bnz	l4473
 10875  001D22  0CFF               	retlw	255
 10876  001D24                     l4473:
 10877                           
 10878                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10879  001D24  D807               	call	PL16	;call to abstracted procedure
 10880  001D26  04DE               	decf	postinc2,w,c
 10881  001D28  E0F8               	bz	l4465
 10882                           
 10883                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10884  001D2A  D804               	call	PL16	;call to abstracted procedure
 10885  001D2C  0E01               	movlw	1
 10886  001D2E  6EDF               	movwf	indf2,c
 10887                           
 10888                           ;TiTTimer.c: 80:     return (counter);
 10889  001D30  5034               	movf	_counter^0,w,c
 10890  001D32  0012               	return		;funcret
 10891  001D34                     __end_of_TiGetTimer:
 10892                           	callstack 0
 10893  001D34                     PL16:
 10894                           	callstack 28
 10895  001D34  5034               	movf	_counter^0,w,c
 10896  001D36  0D03               	mullw	3
 10897  001D38  50F3               	movf	243,w,c
 10898  001D3A  0F82               	addlw	low (_s_Timers+2)
 10899  001D3C  6ED9               	movwf	fsr2l,c
 10900  001D3E  6ADA               	clrf	fsr2h,c
 10901  001D40  0012               	return	
 10902  001D42                     __end_ofPL16:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _CtoA *****************
 10906 ;; Defined at:
 10907 ;;		line 22 in file "CtoA.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;		None
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;		None
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      void 
 10914 ;; Registers used:
 10915 ;;		wreg, status,2, status,0
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1
 10921 ;;      Params:         0       0       0
 10922 ;;      Locals:         0       0       0
 10923 ;;      Temps:          0       0       0
 10924 ;;      Totals:         0       0       0
 10925 ;;Total ram usage:        0 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; Hardware stack levels required when called: 2
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_main
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text93
 10936  001E4A                     __ptext93:
 10937                           	callstack 0
 10938  001E4A                     _CtoA:
 10939                           	callstack 28
 10940                           
 10941                           ;CtoA.c: 23:     if (convertir != 250) {
 10942                           
 10943                           ;incstack = 0
 10944  001E4A  0EFA               	movlw	250
 10945  001E4C  1847               	xorwf	_convertir^0,w,c
 10946  001E4E  B4D8               	btfsc	status,2,c
 10947  001E50  0012               	return	
 10948                           
 10949                           ;CtoA.c: 24:         if (convertir != 0){
 10950  001E52  5047               	movf	_convertir^0,w,c
 10951  001E54  E009               	bz	l3801
 10952                           
 10953                           ;CtoA.c: 25:             stringScore[1]++;
 10954  001E56  2A5D               	incf	(_stringScore+1)^0,f,c
 10955                           
 10956                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10957  001E58  0E3A               	movlw	58
 10958  001E5A  185D               	xorwf	(_stringScore+1)^0,w,c
 10959  001E5C  E103               	bnz	l3799
 10960                           
 10961                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10962  001E5E  0E30               	movlw	48
 10963  001E60  6E5D               	movwf	(_stringScore+1)^0,c
 10964                           
 10965                           ;CtoA.c: 28:                 stringScore[0]++;
 10966  001E62  2A5C               	incf	_stringScore^0,f,c
 10967  001E64                     l3799:
 10968                           
 10969                           ;CtoA.c: 30:             convertir--;
 10970  001E64  0647               	decf	_convertir^0,f,c
 10971                           
 10972                           ;CtoA.c: 31:         } else {
 10973  001E66  0012               	return	
 10974  001E68                     l3801:
 10975                           
 10976                           ;CtoA.c: 32:             convertir = 250;
 10977  001E68  0EFA               	movlw	250
 10978  001E6A  6E47               	movwf	_convertir^0,c
 10979  001E6C  0CFA               	retlw	250	;funcret
 10980  001E6E                     __end_of_CtoA:
 10981                           	callstack 0
 10982                           
 10983 ;; *************** function _high_rsi *****************
 10984 ;; Defined at:
 10985 ;;		line 20 in file "main.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;		None
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;		None
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1
 10999 ;;      Params:         0       0       0
 11000 ;;      Locals:         0       0       0
 11001 ;;      Temps:          4       0       0
 11002 ;;      Totals:         4       0       0
 11003 ;;Total ram usage:        4 bytes
 11004 ;; Hardware stack levels used: 1
 11005 ;; Hardware stack levels required when called: 1
 11006 ;; This function calls:
 11007 ;;		__TiRSITimer
 11008 ;; This function is called by:
 11009 ;;		Interrupt level 2
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	intcode
 11014  000008                     __pintcode:
 11015                           	callstack 0
 11016  000008                     _high_rsi:
 11017                           	callstack 24
 11018                           
 11019                           ;incstack = 0
 11020  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11021  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 11022  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 11023  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 11024  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 11025  00001A  ECD9  F00D         	call	__TiRSITimer	;wreg free
 11026  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 11027  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 11028  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 11029  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 11030  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11031  000030  0011               	retfie		f
 11032  000032                     __end_of_high_rsi:
 11033                           	callstack 0
 11034                           
 11035 ;; *************** function __TiRSITimer *****************
 11036 ;; Defined at:
 11037 ;;		line 37 in file "TiTTimer.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;		None
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1
 11051 ;;      Params:         0       0       0
 11052 ;;      Locals:         0       0       0
 11053 ;;      Temps:          1       0       0
 11054 ;;      Totals:         1       0       0
 11055 ;;Total ram usage:        1 bytes
 11056 ;; Hardware stack levels used: 1
 11057 ;; This function calls:
 11058 ;;		Nothing
 11059 ;; This function is called by:
 11060 ;;		_high_rsi
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text95
 11065  001BB2                     __ptext95:
 11066                           	callstack 0
 11067  001BB2                     __TiRSITimer:
 11068                           	callstack 0
 11069                           
 11070                           ;TiTTimer.c: 39:     TMR0H = 223;
 11071                           
 11072                           ;incstack = 0
 11073                           
 11074                           ;TiTTimer.c: 40:     TMR0L = 148;
 11075  001BB2  D81E               	call	PL72	;call to abstracted procedure
 11076                           
 11077                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11078  001BB4  94F2               	bcf	242,2,c	;volatile
 11079                           
 11080                           ;TiTTimer.c: 42:     h_Tics++;
 11081  001BB6  4A09               	infsnz	_h_Tics^0,f,c
 11082  001BB8  2A0A               	incf	(_h_Tics+1)^0,f,c
 11083                           
 11084                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11085  001BBA  0E48               	movlw	72
 11086  001BBC  5C09               	subwf	_h_Tics^0,w,c
 11087  001BBE  0EEE               	movlw	238
 11088  001BC0  580A               	subwfb	(_h_Tics+1)^0,w,c
 11089  001BC2  A0D8               	btfss	status,0,c
 11090  001BC4  0012               	return	
 11091                           
 11092                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11093  001BC6  6A34               	clrf	_counter^0,c
 11094  001BC8                     i2l4775:
 11095  001BC8  0E07               	movlw	7
 11096  001BCA  6434               	cpfsgt	_counter^0,c
 11097  001BCC  D001               	goto	i2l4779
 11098  001BCE  D00D               	goto	i2l395
 11099  001BD0                     i2l4779:
 11100                           
 11101                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11102  001BD0  EC9A  F00E         	call	PL16	;call to abstracted procedure
 11103  001BD4  04DE               	decf	postinc2,w,c
 11104  001BD6  E107               	bnz	i2l4783
 11105                           
 11106                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11107  001BD8  5034               	movf	_counter^0,w,c
 11108  001BDA  EC7D  F00F         	call	PL26	;call to abstracted procedure
 11109  001BDE  5009               	movf	_h_Tics^0,w,c
 11110  001BE0  5EDE               	subwf	postinc2,f,c
 11111  001BE2  500A               	movf	(_h_Tics+1)^0,w,c
 11112  001BE4  5ADD               	subwfb	postdec2,f,c
 11113  001BE6                     i2l4783:
 11114                           
 11115                           ;TiTTimer.c: 50:         }
 11116  001BE6  2A34               	incf	_counter^0,f,c
 11117  001BE8  D7EF               	goto	i2l4775
 11118  001BEA                     i2l395:
 11119                           
 11120                           ;TiTTimer.c: 51:         h_Tics=0;
 11121  001BEA  6A09               	clrf	_h_Tics^0,c
 11122  001BEC  6A0A               	clrf	(_h_Tics+1)^0,c
 11123  001BEE  0012               	return		;funcret
 11124  001BF0                     __end_of__TiRSITimer:
 11125                           	callstack 0
 11126  001BF0                     PL72:
 11127                           	callstack 28
 11128  001BF0  0EDF               	movlw	223
 11129  001BF2  6ED7               	movwf	215,c	;volatile
 11130  001BF4  0E94               	movlw	148
 11131  001BF6  6ED6               	movwf	214,c	;volatile
 11132  001BF8  0C94               	retlw	148
 11133  001BFA                     __end_ofPL72:
 11134                           	callstack 0
 11135                           
 11136                           	psect	rparam
 11137  0000                     
 11138                           	psect	temp
 11139  000078                     btemp:
 11140                           	callstack 0
 11141  000078                     	ds	1
 11142  0000                     int$flags	set	btemp
 11143  0000                     wtemp8	set	btemp+1
 11144  0000                     ttemp5	set	btemp+1
 11145  0000                     ttemp6	set	btemp+4
 11146  0000                     ttemp7	set	btemp+8
 11147                           
 11148                           	psect	idloc
 11149                           
 11150                           ;Config register IDLOC0 @ 0x200000
 11151                           ;	unspecified, using default values
 11152  200000                     	org	2097152
 11153  200000  FF                 	db	255
 11154                           
 11155                           ;Config register IDLOC1 @ 0x200001
 11156                           ;	unspecified, using default values
 11157  200001                     	org	2097153
 11158  200001  FF                 	db	255
 11159                           
 11160                           ;Config register IDLOC2 @ 0x200002
 11161                           ;	unspecified, using default values
 11162  200002                     	org	2097154
 11163  200002  FF                 	db	255
 11164                           
 11165                           ;Config register IDLOC3 @ 0x200003
 11166                           ;	unspecified, using default values
 11167  200003                     	org	2097155
 11168  200003  FF                 	db	255
 11169                           
 11170                           ;Config register IDLOC4 @ 0x200004
 11171                           ;	unspecified, using default values
 11172  200004                     	org	2097156
 11173  200004  FF                 	db	255
 11174                           
 11175                           ;Config register IDLOC5 @ 0x200005
 11176                           ;	unspecified, using default values
 11177  200005                     	org	2097157
 11178  200005  FF                 	db	255
 11179                           
 11180                           ;Config register IDLOC6 @ 0x200006
 11181                           ;	unspecified, using default values
 11182  200006                     	org	2097158
 11183  200006  FF                 	db	255
 11184                           
 11185                           ;Config register IDLOC7 @ 0x200007
 11186                           ;	unspecified, using default values
 11187  200007                     	org	2097159
 11188  200007  FF                 	db	255
 11189                           
 11190                           	psect	config
 11191                           
 11192                           ; Padding undefined space
 11193  300000                     	org	3145728
 11194  300000  FF                 	db	255
 11195                           
 11196                           ;Config register CONFIG1H @ 0x300001
 11197                           ;	Oscillator
 11198                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11199                           ;	Fail-Safe Clock Monitor Enable bit
 11200                           ;	FCMEN = 0x0, unprogrammed default
 11201                           ;	Internal/External Oscillator Switchover bit
 11202                           ;	IESO = 0x0, unprogrammed default
 11203  300001                     	org	3145729
 11204  300001  06                 	db	6
 11205                           
 11206                           ;Config register CONFIG2L @ 0x300002
 11207                           ;	unspecified, using default values
 11208                           ;	Power-up Timer Enable bit
 11209                           ;	PWRT = 0x1, unprogrammed default
 11210                           ;	Brown-out Reset Enable bits
 11211                           ;	BOR = 0x3, unprogrammed default
 11212                           ;	Brown-out Reset Voltage bits
 11213                           ;	BORV = 0x3, unprogrammed default
 11214  300002                     	org	3145730
 11215  300002  1F                 	db	31
 11216                           
 11217                           ;Config register CONFIG2H @ 0x300003
 11218                           ;	Watchdog Timer Enable bit
 11219                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11220                           ;	Watchdog Timer Postscale Select bits
 11221                           ;	WDTPS = 0xF, unprogrammed default
 11222  300003                     	org	3145731
 11223  300003  1E                 	db	30
 11224                           
 11225                           ; Padding undefined space
 11226  300004                     	org	3145732
 11227  300004  FF                 	db	255
 11228                           
 11229                           ;Config register CONFIG3H @ 0x300005
 11230                           ;	CCP2 MUX bit
 11231                           ;	CCP2MX = 0x1, unprogrammed default
 11232                           ;	PORTB A/D Enable bit
 11233                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11234                           ;	Low-Power Timer1 Oscillator Enable bit
 11235                           ;	LPT1OSC = 0x0, unprogrammed default
 11236                           ;	MCLR Pin Enable bit
 11237                           ;	MCLRE = 0x1, unprogrammed default
 11238  300005                     	org	3145733
 11239  300005  81                 	db	129
 11240                           
 11241                           ;Config register CONFIG4L @ 0x300006
 11242                           ;	Stack Full/Underflow Reset Enable bit
 11243                           ;	STVREN = 0x1, unprogrammed default
 11244                           ;	Single-Supply ICSP Enable bit
 11245                           ;	LVP = OFF, Single-Supply ICSP disabled
 11246                           ;	Boot Block Size Select bits
 11247                           ;	BBSIZ = 0x0, unprogrammed default
 11248                           ;	Extended Instruction Set Enable bit
 11249                           ;	XINST = 0x0, unprogrammed default
 11250                           ;	Background Debugger Enable bit
 11251                           ;	DEBUG = 0x1, unprogrammed default
 11252  300006                     	org	3145734
 11253  300006  81                 	db	129
 11254                           
 11255                           ; Padding undefined space
 11256  300007                     	org	3145735
 11257  300007  FF                 	db	255
 11258                           
 11259                           ;Config register CONFIG5L @ 0x300008
 11260                           ;	unspecified, using default values
 11261                           ;	Code Protection bit
 11262                           ;	CP0 = 0x1, unprogrammed default
 11263                           ;	Code Protection bit
 11264                           ;	CP1 = 0x1, unprogrammed default
 11265  300008                     	org	3145736
 11266  300008  03                 	db	3
 11267                           
 11268                           ;Config register CONFIG5H @ 0x300009
 11269                           ;	unspecified, using default values
 11270                           ;	Boot Block Code Protection bitProtect Boot
 11271                           ;	CPB = 0x1, unprogrammed default
 11272                           ;	Data EEPROM Code Protection bit
 11273                           ;	CPD = 0x1, unprogrammed default
 11274  300009                     	org	3145737
 11275  300009  C0                 	db	192
 11276                           
 11277                           ;Config register CONFIG6L @ 0x30000A
 11278                           ;	unspecified, using default values
 11279                           ;	Write Protection bit
 11280                           ;	WRT0 = 0x1, unprogrammed default
 11281                           ;	Write Protection bit
 11282                           ;	WRT1 = 0x1, unprogrammed default
 11283  30000A                     	org	3145738
 11284  30000A  03                 	db	3
 11285                           
 11286                           ;Config register CONFIG6H @ 0x30000B
 11287                           ;	unspecified, using default values
 11288                           ;	Configuration Register Write Protection bit
 11289                           ;	WRTC = 0x1, unprogrammed default
 11290                           ;	Boot Block Write Protection bit
 11291                           ;	WRTB = 0x1, unprogrammed default
 11292                           ;	Data EEPROM Write Protection bit
 11293                           ;	WRTD = 0x1, unprogrammed default
 11294  30000B                     	org	3145739
 11295  30000B  E0                 	db	224
 11296                           
 11297                           ;Config register CONFIG7L @ 0x30000C
 11298                           ;	unspecified, using default values
 11299                           ;	Table Read Protection bit
 11300                           ;	EBTR0 = 0x1, unprogrammed default
 11301                           ;	Table Read Protection bit
 11302                           ;	EBTR1 = 0x1, unprogrammed default
 11303  30000C                     	org	3145740
 11304  30000C  03                 	db	3
 11305                           
 11306                           ;Config register CONFIG7H @ 0x30000D
 11307                           ;	unspecified, using default values
 11308                           ;	Boot Block Table Read Protection bit
 11309                           ;	EBTRB = 0x1, unprogrammed default
 11310  30000D                     	org	3145741
 11311  30000D  40                 	db	64
 11312                           tosu	equ	0xFFF
 11313                           tosh	equ	0xFFE
 11314                           tosl	equ	0xFFD
 11315                           stkptr	equ	0xFFC
 11316                           pclatu	equ	0xFFB
 11317                           pclath	equ	0xFFA
 11318                           pcl	equ	0xFF9
 11319                           tblptru	equ	0xFF8
 11320                           tblptrh	equ	0xFF7
 11321                           tblptrl	equ	0xFF6
 11322                           tablat	equ	0xFF5
 11323                           prodh	equ	0xFF4
 11324                           prodl	equ	0xFF3
 11325                           indf0	equ	0xFEF
 11326                           postinc0	equ	0xFEE
 11327                           postdec0	equ	0xFED
 11328                           preinc0	equ	0xFEC
 11329                           plusw0	equ	0xFEB
 11330                           fsr0h	equ	0xFEA
 11331                           fsr0l	equ	0xFE9
 11332                           wreg	equ	0xFE8
 11333                           indf1	equ	0xFE7
 11334                           postinc1	equ	0xFE6
 11335                           postdec1	equ	0xFE5
 11336                           preinc1	equ	0xFE4
 11337                           plusw1	equ	0xFE3
 11338                           fsr1h	equ	0xFE2
 11339                           fsr1l	equ	0xFE1
 11340                           bsr	equ	0xFE0
 11341                           indf2	equ	0xFDF
 11342                           postinc2	equ	0xFDE
 11343                           postdec2	equ	0xFDD
 11344                           preinc2	equ	0xFDC
 11345                           plusw2	equ	0xFDB
 11346                           fsr2h	equ	0xFDA
 11347                           fsr2l	equ	0xFD9
 11348                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    145
    Data        65
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5     104
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[8]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[8]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40279
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          4     4      0     916
                                             10 COMRAM     4     4      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      5      68       5       81.2%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITBIGSFRhhhhhl     1A      0       0       9        0.0%
BITBIGSFRhhhhhh      D      0       0       8        0.0%
BITBIGSFRhhhhlh      B      0       0      11        0.0%
BITBIGSFRhll         8      0       0      17        0.0%
BITBIGSFRhlh         7      0       0      16        0.0%
BITBIGSFRhhhlh       7      0       0      14        0.0%
BITBIGSFRhhhhll      7      0       0      13        0.0%
BITBIGSFRllh         6      0       0      19        0.0%
BITBIGSFRlhl         5      0       0      18        0.0%
BITBIGSFRhhhhhl      4      0       0      10        0.0%
BITBIGSFRlll         2      0       0      20        0.0%
BITBIGSFRhhhhlh      1      0       0      12        0.0%
BITBIGSFRhhlh        1      0       0      15        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16F      21        0.0%
DATA                 0      0     16F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 10 18:17:08 2022

              TiResetTics@Handle 0064                 _loginNOTRegister 03B8  
                              _i 002A                                _j 0029  
                             PL2 11CA                               PL4 11D8  
                             PL6 11E0                               PL8 0F3C  
                             l73 1CF0                 UgetUserName@quin 0066  
      ??_UcheckExistsNotFinished 0064                              PL10 09A6  
                            PL20 0F58                              PL12 11EA  
                            PL30 1C96                              PL22 14BC  
                            PL14 0F4A                              PL40 158C  
                            PL32 09BC                              PL24 0C86  
                            PL16 1D34                              PL50 0C92  
                            PL42 09C2                              PL34 1B50  
                            PL26 1EFA                              PL18 1856  
                            PL60 1C2E                              PL52 0C9E  
                            PL44 1B5E                              PL36 1956  
                            PL28 09B2                              PL70 0CB4  
                            PL62 1CA4                              PL54 1C24  
                            PL46 09CC                              PL38 157E  
                            PL80 172E                              PL72 1BF0  
                            PL64 13A2                              PL56 0CAA  
                            PL48 0F6A                              PL90 09E6  
                            PL82 1B10                              PL74 1964  
                            PL66 1AAA                              PL58 11F4  
                            PL84 09D8                              PL76 159A  
                            PL68 1F70                              PL86 1BAA  
                            PL78 1E86                              PL88 09E0  
         __end_of_compareStrings 1C24                              l630 06C0  
                            l542 032A                              l801 0CF6  
                            l570 0450                              l811 0D5C  
                            l804 0D26                              l572 045E  
                            l805 0D1C                              l815 0D80  
                            l584 0496                              l753 1DAE  
                            l569 0440                              l818 0DC2  
                            l765 1504                              l796 0CC0  
                            l797 0CD2                              l990 1006  
                            l799 0CDC                              l897 17DE  
                            l986 0FCA                              l996 102C  
                            u310 1946                              u250 1904  
                            u308 1930                              u270 191A  
                            u328 1948                              u290 192E  
                            u268 1906                              u288 191C  
                            _pos 002F                              _tmp 0033  
               ??_CantaPartBaixa 0064                              prod 000FF3  
                            wreg 000FE8                      _ultimaTecla 0053  
                           l1013 1116                             l1015 113C  
                           l1211 174E                             l1060 1664  
                           l1052 15A6                             l1061 15FC  
                           l1053 15C0                             l1062 1616  
                           l1055 15E2                             l1064 1638  
                           l1337 0A5A                             l1354 0B54  
                           l1346 0ACA                             l1339 0A7C  
                           l2413 1FDC                             l3223 162C  
                           l3215 1612                             l1368 0C2A  
                           l2433 1DE8                             l2451 1E00  
                           l5021 111E                             l3237 164E  
                           l2445 1DF8                             l5015 110A  
                           l3247 1652                             l2439 1DF0  
                           l5103 17B4                             l5111 17C2  
                           l5041 1150                             l5009 10FA  
                           l3185 15D6                             l3177 15BC  
                           l4411 1E98                             l5051 1172  
                           l6011 0DD8                             l5037 1148  
                           l5029 1136                             l6005 0DCE  
                           l2469 1FD0                             l5213 0B0E  
                           l5205 0AE6                             l4407 1C70  
                           l5047 1164                             l3199 15F8  
                           l5303 1870                             l5231 0B64  
                           l5223 0B40                             l5151 0A32  
                           l5127 0A04                             l5119 09EE  
                    _puntuacions 0098                             l3801 1E68  
                           l4417 1CF4                             l4513 1BA4  
                           l4505 1B90                             l5057 117E  
                           l6113 13E4                             l6025 0E10  
                           l6033 0E1C                             l6017 0DEA  
                           l6105 0EFE                             l7001 0746  
                           l5065 173A                             l5241 0B84  
                           l5233 0B68                             l5145 0A26  
                           l5137 0A14                             l5129 0A08  
                           l4523 006E                             l4507 1B96  
                           l6123 1400                             l6043 0E36  
                           l7011 075C                             l5331 18B4  
                           l5251 0BA6                             l6133 1416  
                           l6125 1406                             l6117 13F0  
                           l4701 1CDE                             l4453 1C10  
                           l6037 0E2A                             l7013 0762  
                           l5341 18CE                             l5325 18A8  
                           l5085 1772                             l5077 175C  
                           l5173 0A78                             l5157 0A42  
                           l6303 1330                             l6223 125E  
                           l6215 1240                             l6119 13F4  
                           l4447 1BFC                             l6055 0E52  
                           l7031 0788                             l7023 0776  
                           l7007 0752                             l5319 189C  
                           l5079 1760                             l4465 1D1A  
                           l4473 1D24                             l4385 1C4A  
                           l6233 1280                             l6161 145A  
                           l6153 1444                             l6145 1432  
                           l6073 0E94                             l6065 0E80  
                           l6049 0E44                             l4625 1FF4  
                           l4561 1E22                             l7105 08AC  
                           l7041 07B8                             l7017 076E  
                           l7113 08B8                             l5353 18E0  
                           l5097 179E                             l5281 0BFE  
                           l5257 0BB4                             l6323 135C  
                           l6147 1436                             l6139 1424  
                           l6083 0EAE                             l6067 0E84  
                           l4547 003E                             l7035 0790  
                           l5267 0BD8                             l6317 1350  
                           l6309 133A                             l6253 12A8  
                           l6245 1292                             l6173 147C  
                           l6157 1450                             l6077 0E9C  
                           l5349 18DC                             l4911 0FD6  
                           l4719 1694                             l6327 1364  
                           l6271 12D8                             l6191 1200  
                           l6167 146E                             l6183 148E  
                           l6095 0ED2                             l6087 0EBC  
                           l7055 07F4                             l5295 0C36  
                           l4905 0FBE                             l6177 1484  
                           l4833 14F2                             l4825 14E0  
                           l7081 0870                             l7057 07FA  
                           l6601 02F8                             l5289 0C2C  
                           l7137 1A1C                             l4923 0FFE  
                           l6291 130E                             l6267 12CA  
                           l6259 12BA                             l6347 1374  
                           l4843 1506                             l7067 083A  
                           l6611 0316                             l4933 101C  
                           l6269 12D4                             l4685 1CBC  
                           l6701 03FC                             l5901 1800  
                           l3799 1E64                             l4927 100A  
                           l6287 130A                             l6279 12F2  
                           l6199 1214                             l4871 1556  
                           l4855 1520                             l4599 1FE8  
                           l7095 089E                             l6711 0408  
                           l6607 0310                             l4881 0F74  
                           l4697 1CD6                             l4689 1CC2  
                           l4865 1542                             l7089 087E  
                           l6617 031E                             l6609 0312  
                           l4963 1054                             l4891 0F9A  
                           l4795 1D58                             l4867 154E  
                           l6803 04E8                             l6643 036A  
                           l5915 1824                             l5907 180C  
                           l4973 1074                             l6661 0396  
                           l6637 0354                             l6629 033C  
                           l4799 1D60                             l5951 0CE8  
                           l6671 03AC                             l6647 036E  
                           l5927 183C                             l4969 1066  
                           l4897 0FA8                             l5945 0CD8  
                           l6905 05F4                             l6753 0476  
                           l6729 0430                             l6657 038E  
                           l4995 10CC                             l4979 108C  
                           l5963 0D20                             l6923 061C  
                           l6851 0560                             l6835 0532  
                           l6819 0510                             l6771 049A  
                           l6739 044C                             l6595 02E4  
                           l4989 10BC                             l6941 0646  
                           l6925 0622                             l6917 060C  
                           l6765 0488                             l5991 0D84  
                           l5975 0D58                             l6863 0594  
                           l6687 03D4                             l5895 17F4  
                           l5977 0D5E                             l5969 0D32  
                           l6961 067C                             l6929 062A  
                           l6849 055A                             l6777 04A8  
                           l6697 03F4                             l5979 0D62  
                           l6955 066E                             l6859 057C  
                           l5899 17FC                             l6965 0698  
                           l6949 0660                             l6893 05DC  
                           l6789 04C6                             l6879 05BC  
                           l6985 06D6                             l6969 069C  
                           l6979 06C4                             l6997 0730  
                           l6989 06EA                             STR_1 02DA  
                           STR_2 02D3                             STR_3 02CB  
                           STR_4 02A2                             STR_5 0292  
                           STR_6 02C3                             STR_7 02AF  
                           STR_8 02BB                             _LATD 000F8C  
                           u4010 1724                             u4030 1B2C  
                           u4040 1B42                             u4037 1B2A  
                           u4047 1B40                             u3630 1AC0  
                           u3710 1A5A                             u4190 0FA4  
                           u3650 1AD6                             u3730 1A70  
                           u3708 1B04                             u3670 1AEA  
                           u3750 1A84                             u4710 0A62  
                           u3648 1AC2                             u3728 1A5C  
                           u3840 1C14                             u4720 0A66  
                           u3690 1B02                             u3770 1A9C  
                           u7130 0466                             u7050 0416  
                           u3668 1AD8                             u3748 1A72  
                           u7150 046E                             u3688 1AEC  
                           u3768 1A86                             u4760 0B24  
                           u6610 1254                             u6371 0EF4  
                           u3788 1A9E                             u6380 13B6  
                           u4860 0BCE                             u3990 1CC6  
                           u4880 0BEE                             u6810 1340  
                           u6730 12E4                             u7610 074E  
                           u4890 0C12                             u6820 1356  
                           u6388 13B8                             u7700 07F2  
                           u7460 0636                             u7470 063C  
                           u7720 080C                             u6690 12B4  
                           u6960 03A2                             u6980 03BA  
                           _CtoA 1E4A                  ??_SsetNovaTecla 0064  
         __end_of_SIOcheckKrebut 1FD4                             _cap1 03B0  
                           _Rows 0040                             _cap2 03AF  
                           _main 19E6                             _mask 000E  
                           _hora 0056                             _menu 02E2  
                           _nota 0026            getArrayShowUsers@quin 0066  
                __end_of_HJugant 010A                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0078  
                __end_of_JJuguem 00A4                             prodh 000FF4  
                           prodl 000FF3                  __end_of_LcClear 1E86  
                           start 0032                  __end_of_CantaIR 1EEA  
                   ?_initAltaveu 005F                     ___param_bank 000000  
                    _stringScore 005C                 __end_of_GLCDInit 0104  
                 _HClearNouSegon 012C                            ?_CtoA 005F  
                    Espera@Timer 006E                            ?_main 005F  
                          ?_menu 005F                  __end_of___lbdiv 1CE2  
                          _EEADR 000FA9                    ??_TiInitTimer 0064  
                          _T0CON 000FD5                  ?_compareStrings 0064  
                          i2l395 1BEA                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _LcLCD 1B1A                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                     ?_init_eusart 005F  
                          _TXREG 000FAD                            _SMSon 010A  
                          _TXSTA 000FAC                      _MNovaLletra 00E4  
                          _Minit 00EC                 __end_of_HGetTime 012C  
                          _Sinit 00DC                            _Timer 003D  
                          _Uinit 14CE                  __end_of_initSIO 00B4  
                          _s_ptr 000B                            _score 0010  
                          _nou_s 03BA            __end_of_JoystickMotor 167A  
                _HActualitzaHora 1E26                   __pbitbssCOMRAM 03A8  
                          tablat 000FF5                      _LcNewString 005A  
                  ??_TiResetTics 0064                  ?_SIOcheckKrebut 005F  
             _UshowUsersCalculat 1FEC                            ttemp5 0079  
                          ttemp6 007C                            ttemp7 0080  
                          status 000FD8                 ?_checkHoraAcabat 005F  
                          wtemp8 0079                  ___lbdiv@divisor 0064  
               __end_of_LcGotoXY 1D16             CToAConverteix@numero 0064  
                ___lbdiv@counter 0066                 __end_of_LcLliure 0072  
                  ??__TiRSITimer 005F                 __end_of_LcScroll 011C  
                     _TiGetTimer 1D16          EscriuPrimeraOrdre@ordre 0065  
                   __end_of_CtoA 1E6E                 __end_of_JendGame 0158  
                    ?_SIOendGame 005F                  __initialization 196E  
            ?_UshowUsersCalculat 005F                     __end_of_main 1A4E  
         __end_of_HClearNouSegon 0130                     __end_of_menu 09A6  
        ?_SIOHaAcabatPuntuacions 005F                     ?_playAltaveu 005F  
              __end_of_GLCDMotor 11CA                 __end_of_TeTeclat 14BC  
                  _indexNextUser 002C                  _hi_ha_hora_sio2 03A8  
                         ??_CtoA 0064                           ??_main 0075  
                         ??_menu 00E3                    __activetblptr 000002  
                  _ultimaTeclaAD 0018                 GLCDMotor@length1 001A  
               GLCDMotor@length2 0019                       _JnovaTecla 008C  
               __end_of_UgetTop5 1F70                           ?_LcLCD 005F  
                         ?_SMSon 005F                     ?_CToAobtenir 0064  
                         ?_Minit 005F             ??_UshowUsersCalculat 0064  
                         ?_Sinit 005F                           ?_Uinit 005F  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0              __end_of_TiInitTimer 1D6A  
                         _ADRESH 000FC4                           _EEDATA 000FA8  
                      ??_HJugant 0064                           _EECON2 000FA7  
                      ??_JJuguem 0064                        ??_LcClear 0072  
                      ??_CantaIR 0066                           i2l4783 1BE6  
                         i2l4775 1BC8                           i2l4779 1BD0  
                 LcGotoXY@Fisics 006D                   LcGotoXY@Column 0071  
                  ??_WaitForBusy 006B                           _SPBRGH 000FB0  
                 _sumaPulsacions 003C                __end_of_CToAReset 00AC  
                         _SMSoff 0110               SIONovaDireccio@num 0064  
                         _LcInit 167A                     _MNouJoystick 00F4  
                 _UgetNumUsuaris 0138                           _SMotor 11FE  
            escriureCharEEPROM@c 0065                           _TeInit 00D4  
                         _Espera 1E90                     _LcGotoXY$343 006F  
                         _Krebut 03A9   __end_of_SIOHaAcabatPuntuacions 0150  
                         _RowAct 003F                    ?_miraPassword 005F  
            __end_of_TiResetTics 1EFA                           Uinit@k 006A  
               __end_of_high_rsi 0032                           _h_Tics 0009  
                ?_HClearNouSegon 005F                        ??___lbdiv 0065  
                  ?_CToAHaAcabat 005F                 __end_of_initHora 00BC  
            __end_of__TiRSITimer 1BF0                           _horaTX 0001  
               __end_of_menuList 0292                           clear_0 19B4  
                         clear_1 19C0                           clear_2 19D2  
                         _jugant 03AE                           _segons 0015  
                     _UenviaChar 1F9A                           isa$std 000001  
               _llegirCharEEPROM 1FAA                       UenviaPas@c 0065  
              __end_of_HNouSegon 1FE0                        ??_initSIO 0065  
                   __pdataCOMRAM 0045                 __end_of_motorSIO 0C86  
        __end_of_HActualitzaHora 1E4A                ??_SIONovaDireccio 0064  
               __end_of_motorJoc 17DC                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ??_CToAConverteix 0064  
              __end_of_CantaData 1C96                     TeTeclat@cols 0036  
               ___lbdiv@dividend 0065                        ?_GLCDInit 005F  
                  ?_UcheckExists 005F                       __accesstop 0080  
        __end_of__initialization 19D8           __end_of_UgetNumUsuaris 013C  
              __end_of_LcPutChar 1BAA                    _JnovaDireccio 0094  
               JnovaDireccio@dir 0064                    ___rparam_used 000001  
                 ??_miraPassword 0069                    __end_of_LcLCD 1B50  
                    ?_TiGetTimer 005F                    __end_of_SMSon 0110  
              SIONovaTecla@tecla 0064                   __pcstackCOMRAM 005F  
                  __end_of_Minit 00F4              __end_of_WaitForBusy 1C76  
                  __end_of_Sinit 00E4                    __end_of_Uinit 157E  
              __end_of_NoFerMenu 0154                        ?_HGetTime 0064  
                   __pidataBANK0 1D6A                   ??_CToAHaAcabat 0064  
              __end_of_URegister 0148                __end_of_HnoJugant 0128  
              __end_of_SiFerMenu 014C                       __end_ofPL2 11D8  
                     __end_ofPL4 11E0                       __end_ofPL6 11EA  
                     __end_ofPL8 0F4A                 ___lbdiv@quotient 0067  
              __end_of_TiGetTics 1DDE                      _TiInitTimer 1D42  
                    ?_JnovaTecla 005F                          ??_LcLCD 0073  
                        ??_SMSon 0064                        ?_LcGotoXY 006C  
                      ?_LcLliure 005F                          ??_Minit 0065  
                      ?_LcScroll 005F                          ??_Sinit 0065  
                JnovaTecla@tecla 0064                          ??_Uinit 0068  
                      ?_JendGame 005F                   ??_UcheckExists 0064  
            MNouJoystick@posicio 0064                       ??_GLCDInit 0065  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                      ?_TeTeclat 005F                      _TiResetTics 1EEA  
                ?_UgetNumUsuaris 005F                   ?_JnovaDireccio 005F  
                  ??_UmotorUsers 0069                __end_of_UgetScore 1FC8  
                  ?_JoystickInit 005F                          ?_SMSoff 005F  
                        ?_LcInit 005F                    _CantaPartAlta 1AB4  
                        ?_SMotor 005F                          ?_TeInit 005F  
                        ?_Espera 006B                __end_of_UenviaPas 1F9A  
                    __TiRSITimer 1BB2              _indexNextUserStruct 002B  
                      ?_UgetTop5 005F                __end_of_UnewScore 007C  
                     ??_HGetTime 0066                    ?_UgetUserName 0064  
               ??_compareStrings 0067                          _BAUDCON 000FB8  
                    ?_UenviaChar 0064       __end_of_calculateShowUsers 0138  
                        LcInit@i 0070                 ?_HActualitzaHora 0064  
                     ??_LcGotoXY 006D                     ?_MNovaLletra 005F  
                     ??_LcLliure 0064                       ??_LcScroll 0067  
               ??_SIOcheckKrebut 0064                       ??_JendGame 0064  
                        _HJugant 0104                        ?_high_rsi 005F  
                        _JJuguem 009C                          _LcClear 1E6E  
                        _CantaIR 1ECE                     ?_LcNewString 0067  
                 ??_JoystickInit 0064                        ?_initHora 005F  
                     ??_TeTeclat 006B                      _WaitForBusy 1C38  
                 ?_CantaPartAlta 005F            __end_of_SsetNovaTecla 00CC  
                        __Hparam 0000                          __Lparam 0000  
                     ??_UgetTop5 0064                     ??_SIOendGame 0064  
                      ?_motorSIO 005F                        ?_motorJoc 005F  
                 ??_UgetUserName 0066                _getArrayShowUsers 1EB2  
            __end_of_UmotorUsers 0F3C         ?_UcheckExistsNotFinished 005F  
                        ___lbdiv 1CAE                    ?_motorAltaveu 005F  
                   __psmallconst 0200               ?_getArrayShowUsers 0064  
                        __pcinit 196E     __end_of_UcheckExistsGetError 0140  
                        _ferMenu 03B2                       _init_ports 1F20  
                        __ramtop 0200                          __ptext0 19E6  
                        __ptext1 09EC                          __ptext2 0072  
                        __ptext3 1738                          __ptext4 1DDE  
                        __ptext5 011C                          __ptext6 1FC8  
                        __ptext7 1FF8                          __ptext8 007C  
                        __ptext9 0084                        _T0CONbits 000FD5  
                      _GLCDMotor 0F72                        CantaIR@IR 0066  
                        _initSIO 00AC                          _counter 0034  
                        _horaTmp 0041           conversorJoystick@direc 0064  
            ??_getArrayShowUsers 0066                      UenviaChar@c 0065  
                  ?_SIOEnviaHora 005F             __end_of_miraPassword 1E26  
     __end_of_escriureCharEEPROM 1DB8                 LcNewString@new_s 0067  
                WaitForBusy@Busy 006B                      Uinit@k_1194 006B  
                   _do_showUsers 03B5                          _userPtr 0007  
              GLCDMostraMenu@num 0064               __end_of_SIOendGame 0120  
                     ??_high_rsi 0060             __end_of_CToAHaAcabat 0160  
           end_of_initialization 19D8                          _usuaris 0100  
                  UgetScore@quin 0064                  ??_JnovaDireccio 0064  
                     ??_initHora 0065         __end_of_llegirCharEEPROM 1FBA  
                  __Lmediumconst 0000                  TiGetTics@Handle 0068  
                  _MsetNovaTecla 00CC                _conversorJoystick 1DDE  
              __end_of_motorHora 18F2                 ??_HClearNouSegon 0064  
                     _novaLletra 0051        __end_of_getArrayShowUsers 1ECE  
             ?_conversorJoystick 005F                  _usuariActualSIO 004A  
                     ??_motorSIO 0073                        _CToAReset 00A4  
                     ??_motorJoc 0072                  TiGetTics@actual 0069  
                  ?_SIONovaTecla 005F                       GLCDMotor@j 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                _SIONovaDireccio 0084                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                 ??_motorAltaveu 006B                       _numUsuaris 002D  
           __end_of_UcheckExists 0144                    TeTeclat@files 0035  
            ??_conversorJoystick 0064               SIOStartGame@usuari 0064  
                  TeTeclat@state 0037                        _PORTCbits 000F82  
                      _PORTDbits 000F83                       ?_GLCDMotor 005F  
                  ?_SIOStartGame 005F                   ??_SIOEnviaHora 0064  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _HNouSegon 1FD4                UnewScore@scoretmp 0064  
                 _GLCDMostraMenu 0042        __end_of_conversorJoystick 1E02  
                ??_CantaPartAlta 0064                   ?_MsetNovaTecla 005F  
                      _CantaData 1C76                      _UmotorUsers 0CBE  
                      _TXSTAbits 000FAC  __end_of_UcheckExistsNotFinished 0042  
                 __end_of_SMSoff 0116                     ??_TiGetTimer 0064  
                 __end_of_LcInit 172E                   ??_SIONovaTecla 0064  
                     ?_CToAReset 005F                   __end_of_SMotor 13A2  
                      _LcPutChar 1B6A                   __end_of_TeInit 00DC  
              motorAltaveu@state 0023                   __end_of_Espera 1EB2  
                 GLCDMotor@state 0020       __end_of_EscriuPrimeraOrdre 1956  
                  __pidataCOMRAM 1F06                      ?_init_ports 005F  
                      _NoFerMenu 0150                        _ColumnAct 003E  
           __end_of_JoystickInit 1F8A                   ??_SIOStartGame 0064  
                      _URegister 0144                        _HnoJugant 0124  
                   ?_TiInitTimer 005F                     ??_JnovaTecla 0064  
                      _SiFerMenu 0148                      __end_ofPL10 09B2  
                    __end_ofPL20 0F6A                      __end_ofPL12 11F4  
                    __end_ofPL30 1CA4                      __end_ofPL22 14CE  
                    __end_ofPL14 0F58                      __end_ofPL40 159A  
                    __end_ofPL32 09C2                      __end_ofPL24 0C92  
                    __end_ofPL16 1D42                      __end_ofPL50 0C9E  
                    __end_ofPL42 09CC                      __end_ofPL34 1B5E  
                    __end_ofPL26 1F06                      __end_ofPL18 186E  
                    __end_ofPL60 1C38                      __end_ofPL52 0CAA  
                    __end_ofPL44 1B6A                      __end_ofPL36 1964  
                    __end_ofPL28 09BC                      __end_ofPL70 0CBE  
                    __end_ofPL62 1CAE                      __end_ofPL54 1C2E  
                    __end_ofPL46 09D8                      __end_ofPL38 158C  
                    __end_ofPL80 1738                      __end_ofPL72 1BFA  
                    __end_ofPL64 13AC                      __end_ofPL56 0CB4  
                    __end_ofPL48 0F72                      __end_ofPL90 09EC  
                    __end_ofPL82 1B1A                      __end_ofPL74 196E  
                    __end_ofPL66 1AB4                      __end_ofPL58 11FE  
                    __end_ofPL84 09E0                      __end_ofPL76 15A4  
                    __end_ofPL68 1F78                      __end_ofPL86 1BB2  
                    __end_ofPL78 1E90                      __end_ofPL88 09E6  
            start_initialization 196E                        _TiGetTics 1DB8  
         __end_of_GLCDMostraMenu 004E                       ?_HNouSegon 005F  
               ??_UgetNumUsuaris 0064                 UmotorUsers@state 0027  
           __end_of_UgetUserName 1F64               __end_of_TiGetTimer 1D34  
                  JJuguem@usuari 0064                    _JoystickMotor 15A4  
                   ?_TiResetTics 005F                       ?_CantaData 005F  
           _UcheckExistsGetError 013C          __end_of_SIONovaDireccio 008C  
                       ??_SMSoff 0064                         ??_LcInit 006F  
                      _NovaTecla 0052                         ??_SMotor 006B  
                       ??_TeInit 0065                     ?__TiRSITimer 005F  
                  ??_initAltaveu 0065                         ??_Espera 006D  
                      _UgetScore 1FBA               __end_of_JnovaTecla 0094  
                     ?_LcPutChar 005F                        _UenviaPas 1F8A  
                    __pdataBANK0 00BC                   motorHora@state 0014  
                   _menuDaltGLCD 0021                     ??_UenviaChar 0065  
                      _UnewScore 0072                       ?_NoFerMenu 005F  
                    ??_GLCDMotor 0073                       ?_URegister 005F  
                     ?_HnoJugant 005F                ??_checkHoraAcabat 0064  
                  ??_init_eusart 0064                       ?_SiFerMenu 005F  
                    __pbssCOMRAM 0001                    __pcstackBANK0 00E3  
                     ?_TiGetTics 0064                  ?_GLCDMostraMenu 005F  
                       ?_HJugant 005F                   ?_JoystickMotor 005F  
                ??_MsetNovaTecla 0064             __end_of_motorAltaveu 1856  
                       ?_JJuguem 005F                         ?_LcClear 005F  
                       ?_CantaIR 005F               _calculateShowUsers 0134  
                 _CantaPartBaixa 1A4E         ??_SIOHaAcabatPuntuacions 0064  
          ?_UcheckExistsGetError 005F                     ?_WaitForBusy 005F  
             MsetNovaTecla@tecla 0064               SsetNovaTecla@tecla 0064  
             __end_of_UenviaChar 1FAA              ?_calculateShowUsers 005F  
                     ?_UgetScore 005F                      ??_CToAReset 0064  
           __end_of_SIOEnviaHora 0124                     _miraPassword 1E02  
                      __pintcode 0008                         ?___lbdiv 0064  
                  ??_playAltaveu 0064                       ?_UenviaPas 0064  
                CantaPartBaixa@c 0065                     _CToAHaAcabat 015C  
            __end_of_initAltaveu 00C4                       ?_UnewScore 005F  
                      _arrayZero 0045                         ?_initSIO 005F  
                    __smallconst 0200                        _convertir 0047  
                  ??_CToAobtenir 0066             ??_calculateShowUsers 0064  
           __end_of_SIONovaTecla 0084                      ??_HNouSegon 0064  
                    _direccioSIO 0049                      _direccioJoc 0013  
         __end_of_CantaPartBaixa 1AAA               JoystickMotor@state 0017  
                       _GLCDInit 00FC                      _do_register 03B6  
            __end_of_init_eusart 1F50                        _newString 03B1  
                   _UcheckExists 0140                        _loginText 00DB  
                      _jugantSIO 03AA                        _jugantJoc 03AB  
                   UgetTop5@quin 0064                      ??_CantaData 0066  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _LATDbits 000F8C                ?_llegirCharEEPROM 005F  
                  ?_MNouJoystick 005F                 ?_SIONovaDireccio 005F  
           __end_of_SIOStartGame 2000                    UenviaChar@pos 0064  
             _escriureCharEEPROM 1D92                        _novaTecla 0054  
             ??_llegirCharEEPROM 0064                    motorSIO@state 000D  
                       _PIR1bits 000F9E                      ??_LcPutChar 0072  
                      _timerGLCD 0022                        _motorHora 186E  
                       _RCONbits 000FD0                        _reproduir 03B3  
                       _HGetTime 0128                        _timerHora 0016  
                      _timerMenu 0032              ?_escriureCharEEPROM 0064  
                    ??_NoFerMenu 0064                       _ADCON0bits 000FC2  
                    ??_URegister 0064                      ??_HnoJugant 0064  
                    ??_SiFerMenu 0064              __end_of_playAltaveu 0134  
                       Espera@ms 006B                        _zeroTecla 003A  
                       _LcGotoXY 1CE2                   _usuariLoguejat 004F  
                       _LcLliure 0066                      ??_TiGetTics 0066  
            llegirCharEEPROM@pos 0064                         _LcScroll 0116  
                ??_JoystickMotor 0065                    GLCDMotor@max1 004E  
                  GLCDMotor@max2 004D                    GLCDMotor@min1 001E  
                  GLCDMotor@min2 001D                     _teclaPremuda 00C4  
                       _JendGame 0154                        _usuariJoc 004C  
                    LcGotoXY@Row 006C                        copy_data0 1982  
                      copy_data1 19A2             ??_escriureCharEEPROM 0065  
                ?_CantaPartBaixa 005F              __end_of_CToAobtenir 015C  
         ??_UcheckExistsGetError 0064            escriureCharEEPROM@pos 0064  
                       _TeTeclat 13AC            __end_of_JnovaDireccio 009C  
                 ??_MNouJoystick 0064                   _do_updateScore 03B4  
                   ?_UmotorUsers 005F                     _JoystickInit 1F78  
                     _EECON1bits 000FA6                     _registerText 00D0  
                    _indexUsuari 0030                    motorJoc@state 0012  
                       __Hrparam 0000                      _initAltaveu 00BC  
                    ??_UgetScore 0064                         _UgetTop5 1F64  
                      menu@state 002E                         __Lrparam 0000  
                     ?_motorHora 005F                     _UgetUserName 1F50  
                    ??_UenviaPas 0065                     _novaDireccio 0050  
                    ??_UnewScore 0064                     ??_init_ports 0064  
            HActualitzaHora@nova 0064       __end_of_UshowUsersCalculat 1FF8  
                       _charActu 000F                      _init_eusart 1F3A  
                   _novaTeclaJOC 004B                     _novaTeclaSIO 0048  
                _do_check_exists 03B7                         __ptext10 0120  
                       __ptext11 0124               _EscriuPrimeraOrdre 18F2  
                       __ptext20 1E02                         __ptext12 1FD4  
                       __ptext21 1EB2                         __ptext13 0104  
                       __ptext30 1F9A                         __ptext22 1FE0  
                       __ptext14 0128                         __ptext31 0036  
                       __ptext23 0134                         __ptext15 012C  
                       __ptext40 0116                         __ptext32 013C  
                       __ptext24 1FEC                         __ptext16 186E  
                       __ptext41 008C                         __ptext33 0140  
                       __ptext25 1F50                         __ptext17 0130  
                       __ptext50 00A4                         __ptext42 0094  
                       __ptext34 0144                         __ptext26 1F64  
                       __ptext18 17DC                         __ptext51 1F20  
                       __ptext43 0154                         __ptext35 0148  
                       __ptext27 1FBA                         __ptext19 02E2  
                       __ptext60 1FAA                         __ptext52 1F3A  
                       __ptext44 009C                         __ptext36 010A  
                       __ptext28 0138                         __ptext61 1CAE  
                       __ptext53 00AC                         __ptext45 1E26  
                       __ptext37 0110                         __ptext29 1F8A  
                       __ptext70 00EC                         __ptext62 1D42  
                       __ptext54 00B4                         __ptext46 0042  
                       __ptext38 014C                         __ptext71 1B1A  
                       __ptext63 13AC                         __ptext55 00BC  
                       __ptext47 0158                         __ptext39 0150  
                       __ptext80 005A                         __ptext72 167A  
                       __ptext64 00C4                         __ptext56 0CBE  
                       __ptext48 015C                         __ptext81 0066  
                       __ptext73 18F2                         __ptext65 00CC  
                       __ptext57 1D92                         __ptext49 004E  
                       __ptext90 1DB8                         __ptext82 1E6E  
                       __ptext74 15A4                         __ptext66 00D4  
                       __ptext58 1BFA                         __ptext91 00FC  
                       __ptext83 1CE2                         __ptext75 00F4  
                       __ptext67 00DC                         __ptext59 14CE  
                       __ptext92 1D16                         __ptext84 1C38  
                       __ptext76 1F78                         __ptext68 11FE  
                       __ptext93 1E4A                         __ptext85 1ECE  
                       __ptext77 0F72                         __ptext69 00E4  
                       __ptext86 1A4E                         __ptext78 1B6A  
                       __ptext95 1BB2                         __ptext87 1AB4  
                       __ptext79 1C76                         __ptext88 1E90  
                       __ptext89 1EEA                   CantaPartAlta@c 0065  
                    _lletraASCII 0055                         _high_rsi 0008  
                       _copsNota 0024                         _s_Timers 0080  
                       _initHora 00B4                      _lletraInici 00BC  
                       _menuDalt 0031                         _menuList 0201  
            ?_EscriuPrimeraOrdre 005F            __end_of_CantaPartAlta 1B10  
                 _CToAConverteix 004E                    CantaData@Data 0066  
                       _tiTeclat 0038               __end_of_init_ports 1F3A  
                       _setSMSon 03B9                    _SsetNovaTecla 00C4  
                       _nouSegon 03AD                         _scoreUsr 0028  
                       _motorSIO 09EC                ??_HActualitzaHora 0065  
                       _motorJoc 1738                  _checkHoraAcabat 1FE0  
                       _timerSIO 0011                         _timerSMS 003B  
                       isa$xinst 000000                         int$flags 0078  
                   UenviaPas@pos 0064                      _playAltaveu 0130  
                   _motorAltaveu 17DC           _SIOHaAcabatPuntuacions 014C  
           ??_EscriuPrimeraOrdre 0064                       LcInit@rows 006F  
               ??_GLCDMostraMenu 0064          _UcheckExistsNotFinished 0036  
                     _INTCONbits 000FF2                    ??_MNovaLletra 0064  
                    _CToAobtenir 0158                     _SIOEnviaHora 0120  
                  ??_LcNewString 0069                         intlevel2 0000  
                   _timerAltaveu 0025                   _arrayShowUsers 00A2  
         __end_of_CToAConverteix 005A                       LcPutChar@c 0072  
                 ?_SsetNovaTecla 005F                MNovaLletra@lletra 0064  
                compareStrings@a 0064                  compareStrings@b 0065  
                    ??_motorHora 006B                     _SIONovaTecla 007C  
                    _tempsAcabat 03AC                      GLCDMotor@k1 001C  
                    GLCDMotor@k2 001B             __end_of_MNouJoystick 00FC  
                   _SIOStartGame 1FF8                   _compareStrings 1BFA  
                    _tmpPassword 00AA              __end_of_MNovaLletra 00EC  
                ?_CToAConverteix 005F            __end_of_MsetNovaTecla 00D4  
        __end_of_checkHoraAcabat 1FEC                      _tmpUsername 00B3  
                 _SIOcheckKrebut 1FC8                      SMotor@state 0039  
            __end_of_LcNewString 0066                       _SIOendGame 011C  
