

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 10 12:19:14 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118                           	psect	pa_nodes0,global,class=CODE,delta=1
   119  0000                     
   120                           ; Version 2.32
   121                           ; Generated 02/02/2021 GMT
   122                           ; 
   123                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4321 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  001FB1                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _arrayZero
   161  001FB1  30                 	db	48
   162  001FB2  20                 	db	32
   163                           
   164                           ;initializer for _convertir
   165  001FB3  FA                 	db	250
   166                           
   167                           ;initializer for _novaTeclaSIO
   168  001FB4  FF                 	db	255
   169                           
   170                           ;initializer for _direccioSIO
   171  001FB5  FF                 	db	255
   172                           
   173                           ;initializer for _usuariActualSIO
   174  001FB6  FF                 	db	255
   175                           
   176                           ;initializer for _novaTeclaJOC
   177  001FB7  FF                 	db	255
   178                           
   179                           ;initializer for _usuariJoc
   180  001FB8  FF                 	db	255
   181                           
   182                           ;initializer for GLCDMotor@max2
   183  001FB9  0F                 	db	15
   184                           
   185                           ;initializer for GLCDMotor@max1
   186  001FBA  0F                 	db	15
   187                           
   188                           ;initializer for _usuariLoguejat
   189  001FBB  FF                 	db	255
   190                           
   191                           ;initializer for _novaDireccio
   192  001FBC  FF                 	db	255
   193                           
   194                           ;initializer for _novaLletra
   195  001FBD  FF                 	db	255
   196                           
   197                           ;initializer for _NovaTecla
   198  001FBE  FF                 	db	255
   199                           
   200                           ;initializer for _ultimaTecla
   201  001FBF  FF                 	db	255
   202                           
   203                           ;initializer for _novaTecla
   204  001FC0  FF                 	db	255
   205                           
   206                           ;initializer for _lletraASCII
   207  001FC1  FF                 	db	255
   208                           
   209                           ;initializer for _hora
   210  001FC2  33                 	db	51
   211  001FC3  30                 	db	48
   212  001FC4  3A                 	db	58
   213  001FC5  30                 	db	48
   214  001FC6  30                 	db	48
   215  001FC7  00                 	db	0
   216                           
   217                           ;initializer for _stringScore
   218  001FC8  30                 	db	48
   219  001FC9  30                 	db	48
   220  001FCA  00                 	db	0
   221                           
   222                           	psect	idataBANK0
   223  001F96                     __pidataBANK0:
   224                           	callstack 0
   225                           
   226                           ;initializer for _lletraInici
   227  001F96  41                 	db	65
   228  001F97  44                 	db	68
   229  001F98  47                 	db	71
   230  001F99  4A                 	db	74
   231  001F9A  4D                 	db	77
   232  001F9B  50                 	db	80
   233  001F9C  54                 	db	84
   234  001F9D  57                 	db	87
   235                           
   236                           ;initializer for _registerText
   237  001F9E  32                 	db	50
   238  001F9F  2E                 	db	46
   239  001FA0  52                 	db	82
   240  001FA1  45                 	db	69
   241  001FA2  47                 	db	71
   242  001FA3  49                 	db	73
   243  001FA4  53                 	db	83
   244  001FA5  54                 	db	84
   245  001FA6  45                 	db	69
   246  001FA7  52                 	db	82
   247  001FA8  00                 	db	0
   248                           
   249                           ;initializer for _loginText
   250  001FA9  31                 	db	49
   251  001FAA  2E                 	db	46
   252  001FAB  4C                 	db	76
   253  001FAC  4F                 	db	79
   254  001FAD  47                 	db	71
   255  001FAE  49                 	db	73
   256  001FAF  4E                 	db	78
   257  001FB0  00                 	db	0
   258                           
   259                           	psect	smallconst
   260  000200                     __psmallconst:
   261                           	callstack 0
   262  000200  00                 	db	0
   263  000201                     _menuList:
   264                           	callstack 0
   265  000201  31                 	db	49
   266  000202  2E                 	db	46
   267  000203  50                 	db	80
   268  000204  6C                 	db	108
   269  000205  61                 	db	97
   270  000206  79                 	db	121
   271  000207  20                 	db	32
   272  000208  61                 	db	97
   273  000209  20                 	db	32
   274  00020A  47                 	db	71
   275  00020B  61                 	db	97
   276  00020C  6D                 	db	109
   277  00020D  65                 	db	101
   278  00020E  00                 	db	0
   279  00020F  00                 	db	0
   280  000210  00                 	db	0
   281  000211  00                 	db	0
   282  000212  00                 	db	0
   283  000213  00                 	db	0
   284  000214  00                 	db	0
   285  000215  00                 	db	0
   286  000216  00                 	db	0
   287  000217  00                 	db	0
   288  000218  00                 	db	0
   289  000219  00                 	db	0
   290  00021A  00                 	db	0
   291  00021B  00                 	db	0
   292  00021C  00                 	db	0
   293  00021D  00                 	db	0
   294  00021E  32                 	db	50
   295  00021F  2E                 	db	46
   296  000220  4D                 	db	77
   297  000221  6F                 	db	111
   298  000222  64                 	db	100
   299  000223  69                 	db	105
   300  000224  66                 	db	102
   301  000225  79                 	db	121
   302  000226  20                 	db	32
   303  000227  54                 	db	84
   304  000228  69                 	db	105
   305  000229  6D                 	db	109
   306  00022A  65                 	db	101
   307  00022B  00                 	db	0
   308  00022C  00                 	db	0
   309  00022D  00                 	db	0
   310  00022E  00                 	db	0
   311  00022F  00                 	db	0
   312  000230  00                 	db	0
   313  000231  00                 	db	0
   314  000232  00                 	db	0
   315  000233  00                 	db	0
   316  000234  00                 	db	0
   317  000235  00                 	db	0
   318  000236  00                 	db	0
   319  000237  00                 	db	0
   320  000238  00                 	db	0
   321  000239  00                 	db	0
   322  00023A  00                 	db	0
   323  00023B  33                 	db	51
   324  00023C  2E                 	db	46
   325  00023D  53                 	db	83
   326  00023E  68                 	db	104
   327  00023F  6F                 	db	111
   328  000240  77                 	db	119
   329  000241  20                 	db	32
   330  000242  47                 	db	71
   331  000243  65                 	db	101
   332  000244  6E                 	db	110
   333  000245  65                 	db	101
   334  000246  72                 	db	114
   335  000247  61                 	db	97
   336  000248  6C                 	db	108
   337  000249  20                 	db	32
   338  00024A  54                 	db	84
   339  00024B  6F                 	db	111
   340  00024C  70                 	db	112
   341  00024D  20                 	db	32
   342  00024E  35                 	db	53
   343  00024F  20                 	db	32
   344  000250  53                 	db	83
   345  000251  63                 	db	99
   346  000252  6F                 	db	111
   347  000253  72                 	db	114
   348  000254  65                 	db	101
   349  000255  73                 	db	115
   350  000256  20                 	db	32
   351  000257  00                 	db	0
   352  000258  34                 	db	52
   353  000259  2E                 	db	46
   354  00025A  4C                 	db	76
   355  00025B  6F                 	db	111
   356  00025C  67                 	db	103
   357  00025D  6F                 	db	111
   358  00025E  75                 	db	117
   359  00025F  74                 	db	116
   360  000260  00                 	db	0
   361  000261  00                 	db	0
   362  000262  00                 	db	0
   363  000263  00                 	db	0
   364  000264  00                 	db	0
   365  000265  00                 	db	0
   366  000266  00                 	db	0
   367  000267  00                 	db	0
   368  000268  00                 	db	0
   369  000269  00                 	db	0
   370  00026A  00                 	db	0
   371  00026B  00                 	db	0
   372  00026C  00                 	db	0
   373  00026D  00                 	db	0
   374  00026E  00                 	db	0
   375  00026F  00                 	db	0
   376  000270  00                 	db	0
   377  000271  00                 	db	0
   378  000272  00                 	db	0
   379  000273  00                 	db	0
   380  000274  00                 	db	0
   381  000275  35                 	db	53
   382  000276  2E                 	db	46
   383  000277  53                 	db	83
   384  000278  68                 	db	104
   385  000279  6F                 	db	111
   386  00027A  77                 	db	119
   387  00027B  20                 	db	32
   388  00027C  41                 	db	65
   389  00027D  6C                 	db	108
   390  00027E  6C                 	db	108
   391  00027F  20                 	db	32
   392  000280  55                 	db	85
   393  000281  73                 	db	115
   394  000282  65                 	db	101
   395  000283  72                 	db	114
   396  000284  73                 	db	115
   397  000285  00                 	db	0
   398  000286  00                 	db	0
   399  000287  00                 	db	0
   400  000288  00                 	db	0
   401  000289  00                 	db	0
   402  00028A  00                 	db	0
   403  00028B  00                 	db	0
   404  00028C  00                 	db	0
   405  00028D  00                 	db	0
   406  00028E  00                 	db	0
   407  00028F  00                 	db	0
   408  000290  00                 	db	0
   409  000291  00                 	db	0
   410  000292                     __end_of_menuList:
   411                           	callstack 0
   412  000292                     _teclaPremuda:
   413                           	callstack 0
   414  000292  01                 	db	1
   415  000293  02                 	db	2
   416  000294  03                 	db	3
   417  000295  04                 	db	4
   418  000296  05                 	db	5
   419  000297  06                 	db	6
   420  000298  07                 	db	7
   421  000299  08                 	db	8
   422  00029A  09                 	db	9
   423  00029B  0A                 	db	10
   424  00029C  00                 	db	0
   425  00029D  0B                 	db	11
   426  00029E                     __end_of_teclaPremuda:
   427                           	callstack 0
   428  0000                     _PIR1bits	set	3998
   429  0000                     _RCREG	set	4014
   430  0000                     _TXREG	set	4013
   431  0000                     _TXSTAbits	set	4012
   432  0000                     _ADCON0bits	set	4034
   433  0000                     _ADRESH	set	4036
   434  0000                     _ADCON2	set	4032
   435  0000                     _ADCON1	set	4033
   436  0000                     _ADCON0	set	4034
   437  0000                     _EECON2	set	4007
   438  0000                     _EEDATA	set	4008
   439  0000                     _EEADR	set	4009
   440  0000                     _T0CONbits	set	4053
   441  0000                     _TMR0L	set	4054
   442  0000                     _TMR0H	set	4055
   443  0000                     _T0CON	set	4053
   444  0000                     _INTCONbits	set	4082
   445  0000                     _RCONbits	set	4048
   446  0000                     _PORTDbits	set	3971
   447  0000                     _SPBRG	set	4015
   448  0000                     _SPBRGH	set	4016
   449  0000                     _BAUDCON	set	4024
   450  0000                     _RCSTA	set	4011
   451  0000                     _TXSTA	set	4012
   452  0000                     _EECON1bits	set	4006
   453  0000                     _LATD	set	3980
   454  0000                     _TRISD	set	3989
   455  0000                     _TRISC	set	3988
   456  0000                     _LATBbits	set	3978
   457  0000                     _TRISB	set	3987
   458  0000                     _TRISA	set	3986
   459  0000                     _PORTCbits	set	3970
   460  0000                     _LATDbits	set	3980
   461  0000                     _LATCbits	set	3979
   462  0000                     _TRISDbits	set	3989
   463  0000                     _TRISCbits	set	3988
   464  00029E                     STR_5:
   465  00029E  54                 	db	84	;'T'
   466  00029F  49                 	db	73	;'I'
   467  0002A0  4D                 	db	77	;'M'
   468  0002A1  45                 	db	69	;'E'
   469  0002A2  20                 	db	32
   470  0002A3  52                 	db	82	;'R'
   471  0002A4  45                 	db	69	;'E'
   472  0002A5  4D                 	db	77	;'M'
   473  0002A6  41                 	db	65	;'A'
   474  0002A7  49                 	db	73	;'I'
   475  0002A8  4E                 	db	78	;'N'
   476  0002A9  49                 	db	73	;'I'
   477  0002AA  4E                 	db	78	;'N'
   478  0002AB  47                 	db	71	;'G'
   479  0002AC  3A                 	db	58	;':'
   480  0002AD  00                 	db	0
   481  0002AE                     STR_4:
   482  0002AE  4D                 	db	77	;'M'
   483  0002AF  6F                 	db	111	;'o'
   484  0002B0  64                 	db	100	;'d'
   485  0002B1  69                 	db	105	;'i'
   486  0002B2  66                 	db	102	;'f'
   487  0002B3  79                 	db	121	;'y'
   488  0002B4  20                 	db	32
   489  0002B5  54                 	db	84	;'T'
   490  0002B6  69                 	db	105	;'i'
   491  0002B7  6D                 	db	109	;'m'
   492  0002B8  65                 	db	101	;'e'
   493  0002B9  3A                 	db	58	;':'
   494  0002BA  00                 	db	0
   495  0002BB                     STR_7:
   496  0002BB  54                 	db	84	;'T'
   497  0002BC  49                 	db	73	;'I'
   498  0002BD  4D                 	db	77	;'M'
   499  0002BE  45                 	db	69	;'E'
   500  0002BF  20                 	db	32
   501  0002C0  4C                 	db	76	;'L'
   502  0002C1  45                 	db	69	;'E'
   503  0002C2  46                 	db	70	;'F'
   504  0002C3  54                 	db	84	;'T'
   505  0002C4  3A                 	db	58	;':'
   506  0002C5  20                 	db	32
   507  0002C6  00                 	db	0
   508  0002C7                     STR_3:
   509  0002C7  42                 	db	66	;'B'
   510  0002C8  59                 	db	89	;'Y'
   511  0002C9  45                 	db	69	;'E'
   512  0002CA  20                 	db	32
   513  0002CB  42                 	db	66	;'B'
   514  0002CC  59                 	db	89	;'Y'
   515  0002CD  45                 	db	69	;'E'
   516  0002CE  20                 	db	32
   517  0002CF  00                 	db	0
   518  0002D0                     STR_8:
   519  0002D0  53                 	db	83	;'S'
   520  0002D1  43                 	db	67	;'C'
   521  0002D2  4F                 	db	79	;'O'
   522  0002D3  52                 	db	82	;'R'
   523  0002D4  45                 	db	69	;'E'
   524  0002D5  3A                 	db	58	;':'
   525  0002D6  20                 	db	32
   526  0002D7  00                 	db	0
   527  0002D8                     STR_6:
   528  0002D8  45                 	db	69	;'E'
   529  0002D9  52                 	db	82	;'R'
   530  0002DA  52                 	db	82	;'R'
   531  0002DB  4F                 	db	79	;'O'
   532  0002DC  52                 	db	82	;'R'
   533  0002DD  53                 	db	83	;'S'
   534  0002DE  3A                 	db	58	;':'
   535  0002DF  00                 	db	0
   536  0002E0                     STR_2:
   537  0002E0  50                 	db	80	;'P'
   538  0002E1  53                 	db	83	;'S'
   539  0002E2  57                 	db	87	;'W'
   540  0002E3  44                 	db	68	;'D'
   541  0002E4  3A                 	db	58	;':'
   542  0002E5  20                 	db	32
   543  0002E6  00                 	db	0
   544  0002E7                     STR_1:
   545  0002E7  55                 	db	85	;'U'
   546  0002E8  53                 	db	83	;'S'
   547  0002E9  45                 	db	69	;'E'
   548  0002EA  52                 	db	82	;'R'
   549  0002EB  3A                 	db	58	;':'
   550  0002EC  20                 	db	32
   551  0002ED  00                 	db	0
   552  0002EE  00                 	db	0	; dummy byte at the end
   553  0000                     
   554                           ; #config settings
   555                           
   556                           	psect	cinit
   557  001A08                     __pcinit:
   558                           	callstack 0
   559  001A08                     start_initialization:
   560                           	callstack 0
   561  001A08                     __initialization:
   562                           	callstack 0
   563                           
   564                           ; Initialize objects allocated to BANK0 (27 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  001A08  0E96               	movlw	low __pidataBANK0
   567  001A0A  6EF6               	movwf	tblptrl,c
   568  001A0C  0E1F               	movlw	high __pidataBANK0
   569  001A0E  6EF7               	movwf	tblptrh,c
   570  001A10  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   571  001A12  6EF8               	movwf	tblptru,c
   572  001A14  EE00  F0BF         	lfsr	0,__pdataBANK0
   573  001A18  EE10 F01B          	lfsr	1,27
   574  001A1C                     copy_data0:
   575  001A1C  0009               	tblrd		*+
   576  001A1E  CFF5 FFEE          	movff	tablat,postinc0
   577  001A22  50E5               	movf	postdec1,w,c
   578  001A24  50E1               	movf	fsr1l,w,c
   579  001A26  E1FA               	bnz	copy_data0
   580                           
   581                           ; Initialize objects allocated to COMRAM (26 bytes)
   582                           ; load TBLPTR registers with __pidataCOMRAM
   583  001A28  0EB1               	movlw	low __pidataCOMRAM
   584  001A2A  6EF6               	movwf	tblptrl,c
   585  001A2C  0E1F               	movlw	high __pidataCOMRAM
   586  001A2E  6EF7               	movwf	tblptrh,c
   587  001A30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   588  001A32  6EF8               	movwf	tblptru,c
   589  001A34  EE00  F045         	lfsr	0,__pdataCOMRAM
   590  001A38  EE10 F01A          	lfsr	1,26
   591  001A3C                     copy_data1:
   592  001A3C  0009               	tblrd		*+
   593  001A3E  CFF5 FFEE          	movff	tablat,postinc0
   594  001A42  50E5               	movf	postdec1,w,c
   595  001A44  50E1               	movf	fsr1l,w,c
   596  001A46  E1FA               	bnz	copy_data1
   597                           
   598                           ; Clear objects allocated to BANK1 (144 bytes)
   599  001A48  EE01  F000         	lfsr	0,__pbssBANK1
   600  001A4C  0E90               	movlw	144
   601  001A4E                     clear_0:
   602  001A4E  6AEE               	clrf	postinc0,c
   603  001A50  06E8               	decf	wreg,f,c
   604  001A52  E1FD               	bnz	clear_0
   605                           
   606                           ; Clear objects allocated to BANK0 (63 bytes)
   607  001A54  EE00  F080         	lfsr	0,__pbssBANK0
   608  001A58  0E3F               	movlw	63
   609  001A5A                     clear_1:
   610  001A5A  6AEE               	clrf	postinc0,c
   611  001A5C  06E8               	decf	wreg,f,c
   612  001A5E  E1FD               	bnz	clear_1
   613                           
   614                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   615  001A60  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   616  001A62  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   617  001A64  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   618                           
   619                           ; Clear objects allocated to COMRAM (68 bytes)
   620  001A66  EE00  F001         	lfsr	0,__pbssCOMRAM
   621  001A6A  0E44               	movlw	68
   622  001A6C                     clear_2:
   623  001A6C  6AEE               	clrf	postinc0,c
   624  001A6E  06E8               	decf	wreg,f,c
   625  001A70  E1FD               	bnz	clear_2
   626  001A72                     end_of_initialization:
   627                           	callstack 0
   628  001A72                     __end_of__initialization:
   629                           	callstack 0
   630  001A72  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   631  001A74  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   632  001A76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   633  001A78  6EF8               	movwf	tblptru,c
   634  001A7A  0100               	movlb	0
   635  001A7C  EF40  F00D         	goto	_main	;jump to C main() function
   636                           
   637                           	psect	bitbssCOMRAM
   638  0003A8                     __pbitbssCOMRAM:
   639                           	callstack 0
   640  0003A8                     _hi_ha_hora_sio2:
   641                           	callstack 0
   642  0003A8                     	ds	1
   643  0003A9                     _Krebut:
   644                           	callstack 0
   645  0003A9                     	ds	1
   646  0003AA                     _jugantSIO:
   647                           	callstack 0
   648  0003AA                     	ds	1
   649  0003AB                     _jugantJoc:
   650                           	callstack 0
   651  0003AB                     	ds	1
   652  0003AC                     _tempsAcabat:
   653                           	callstack 0
   654  0003AC                     	ds	1
   655  0003AD                     _nouSegon:
   656                           	callstack 0
   657  0003AD                     	ds	1
   658  0003AE                     _jugant:
   659                           	callstack 0
   660  0003AE                     	ds	1
   661  0003AF                     _cap2:
   662                           	callstack 0
   663  0003AF                     	ds	1
   664  0003B0                     _cap1:
   665                           	callstack 0
   666  0003B0                     	ds	1
   667  0003B1                     _newString:
   668                           	callstack 0
   669  0003B1                     	ds	1
   670  0003B2                     _ferMenu:
   671                           	callstack 0
   672  0003B2                     	ds	1
   673  0003B3                     _reproduir:
   674                           	callstack 0
   675  0003B3                     	ds	1
   676  0003B4                     _do_updateScore:
   677                           	callstack 0
   678  0003B4                     	ds	1
   679  0003B5                     _do_showUsers:
   680                           	callstack 0
   681  0003B5                     	ds	1
   682  0003B6                     _do_register:
   683                           	callstack 0
   684  0003B6                     	ds	1
   685  0003B7                     _do_check_exists:
   686                           	callstack 0
   687  0003B7                     	ds	1
   688  0003B8                     _loginNOTRegister:
   689                           	callstack 0
   690  0003B8                     	ds	1
   691  0003B9                     _setSMSon:
   692                           	callstack 0
   693  0003B9                     	ds	1
   694  0003BA                     _nou_s:
   695                           	callstack 0
   696  0003BA                     	ds	1
   697                           
   698                           	psect	bssCOMRAM
   699  000001                     __pbssCOMRAM:
   700                           	callstack 0
   701  000001                     _horaTX:
   702                           	callstack 0
   703  000001                     	ds	6
   704  000007                     _userPtr:
   705                           	callstack 0
   706  000007                     	ds	2
   707  000009                     _h_Tics:
   708                           	callstack 0
   709  000009                     	ds	2
   710  00000B                     _s_ptr:
   711                           	callstack 0
   712  00000B                     	ds	2
   713  00000D                     motorSIO@state:
   714                           	callstack 0
   715  00000D                     	ds	1
   716  00000E                     _mask:
   717                           	callstack 0
   718  00000E                     	ds	1
   719  00000F                     _charActu:
   720                           	callstack 0
   721  00000F                     	ds	1
   722  000010                     _score:
   723                           	callstack 0
   724  000010                     	ds	1
   725  000011                     _timerSIO:
   726                           	callstack 0
   727  000011                     	ds	1
   728  000012                     motorJoc@state:
   729                           	callstack 0
   730  000012                     	ds	1
   731  000013                     _direccioJoc:
   732                           	callstack 0
   733  000013                     	ds	1
   734  000014                     motorHora@state:
   735                           	callstack 0
   736  000014                     	ds	1
   737  000015                     _segons:
   738                           	callstack 0
   739  000015                     	ds	1
   740  000016                     _timerHora:
   741                           	callstack 0
   742  000016                     	ds	1
   743  000017                     JoystickMotor@state:
   744                           	callstack 0
   745  000017                     	ds	1
   746  000018                     _ultimaTeclaAD:
   747                           	callstack 0
   748  000018                     	ds	1
   749  000019                     GLCDMotor@length2:
   750                           	callstack 0
   751  000019                     	ds	1
   752  00001A                     GLCDMotor@length1:
   753                           	callstack 0
   754  00001A                     	ds	1
   755  00001B                     GLCDMotor@k2:
   756                           	callstack 0
   757  00001B                     	ds	1
   758  00001C                     GLCDMotor@k1:
   759                           	callstack 0
   760  00001C                     	ds	1
   761  00001D                     GLCDMotor@min2:
   762                           	callstack 0
   763  00001D                     	ds	1
   764  00001E                     GLCDMotor@min1:
   765                           	callstack 0
   766  00001E                     	ds	1
   767  00001F                     GLCDMotor@j:
   768                           	callstack 0
   769  00001F                     	ds	1
   770  000020                     GLCDMotor@state:
   771                           	callstack 0
   772  000020                     	ds	1
   773  000021                     _menuDaltGLCD:
   774                           	callstack 0
   775  000021                     	ds	1
   776  000022                     _timerGLCD:
   777                           	callstack 0
   778  000022                     	ds	1
   779  000023                     motorAltaveu@state:
   780                           	callstack 0
   781  000023                     	ds	1
   782  000024                     _copsNota:
   783                           	callstack 0
   784  000024                     	ds	1
   785  000025                     _timerAltaveu:
   786                           	callstack 0
   787  000025                     	ds	1
   788  000026                     _nota:
   789                           	callstack 0
   790  000026                     	ds	1
   791  000027                     UmotorUsers@state:
   792                           	callstack 0
   793  000027                     	ds	1
   794  000028                     _scoreUsr:
   795                           	callstack 0
   796  000028                     	ds	1
   797  000029                     _j:
   798                           	callstack 0
   799  000029                     	ds	1
   800  00002A                     _i:
   801                           	callstack 0
   802  00002A                     	ds	1
   803  00002B                     _indexNextUserStruct:
   804                           	callstack 0
   805  00002B                     	ds	1
   806  00002C                     _indexNextUser:
   807                           	callstack 0
   808  00002C                     	ds	1
   809  00002D                     _numUsuaris:
   810                           	callstack 0
   811  00002D                     	ds	1
   812  00002E                     menu@state:
   813                           	callstack 0
   814  00002E                     	ds	1
   815  00002F                     _pos:
   816                           	callstack 0
   817  00002F                     	ds	1
   818  000030                     _indexUsuari:
   819                           	callstack 0
   820  000030                     	ds	1
   821  000031                     _menuDalt:
   822                           	callstack 0
   823  000031                     	ds	1
   824  000032                     _timerMenu:
   825                           	callstack 0
   826  000032                     	ds	1
   827  000033                     _tmp:
   828                           	callstack 0
   829  000033                     	ds	1
   830  000034                     _counter:
   831                           	callstack 0
   832  000034                     	ds	1
   833  000035                     TeTeclat@files:
   834                           	callstack 0
   835  000035                     	ds	1
   836  000036                     TeTeclat@cols:
   837                           	callstack 0
   838  000036                     	ds	1
   839  000037                     TeTeclat@state:
   840                           	callstack 0
   841  000037                     	ds	1
   842  000038                     _tiTeclat:
   843                           	callstack 0
   844  000038                     	ds	1
   845  000039                     SMotor@state:
   846                           	callstack 0
   847  000039                     	ds	1
   848  00003A                     _zeroTecla:
   849                           	callstack 0
   850  00003A                     	ds	1
   851  00003B                     _timerSMS:
   852                           	callstack 0
   853  00003B                     	ds	1
   854  00003C                     _sumaPulsacions:
   855                           	callstack 0
   856  00003C                     	ds	1
   857  00003D                     _Timer:
   858                           	callstack 0
   859  00003D                     	ds	1
   860  00003E                     _ColumnAct:
   861                           	callstack 0
   862  00003E                     	ds	1
   863  00003F                     _RowAct:
   864                           	callstack 0
   865  00003F                     	ds	1
   866  000040                     _Rows:
   867                           	callstack 0
   868  000040                     	ds	1
   869  000041                     _horaTmp:
   870                           	callstack 0
   871  000041                     	ds	4
   872                           
   873                           	psect	dataCOMRAM
   874  000045                     __pdataCOMRAM:
   875                           	callstack 0
   876  000045                     _arrayZero:
   877                           	callstack 0
   878  000045                     	ds	2
   879  000047                     _convertir:
   880                           	callstack 0
   881  000047                     	ds	1
   882  000048                     _novaTeclaSIO:
   883                           	callstack 0
   884  000048                     	ds	1
   885  000049                     _direccioSIO:
   886                           	callstack 0
   887  000049                     	ds	1
   888  00004A                     _usuariActualSIO:
   889                           	callstack 0
   890  00004A                     	ds	1
   891  00004B                     _novaTeclaJOC:
   892                           	callstack 0
   893  00004B                     	ds	1
   894  00004C                     _usuariJoc:
   895                           	callstack 0
   896  00004C                     	ds	1
   897  00004D                     GLCDMotor@max2:
   898                           	callstack 0
   899  00004D                     	ds	1
   900  00004E                     GLCDMotor@max1:
   901                           	callstack 0
   902  00004E                     	ds	1
   903  00004F                     _usuariLoguejat:
   904                           	callstack 0
   905  00004F                     	ds	1
   906  000050                     _novaDireccio:
   907                           	callstack 0
   908  000050                     	ds	1
   909  000051                     _novaLletra:
   910                           	callstack 0
   911  000051                     	ds	1
   912  000052                     _NovaTecla:
   913                           	callstack 0
   914  000052                     	ds	1
   915  000053                     _ultimaTecla:
   916                           	callstack 0
   917  000053                     	ds	1
   918  000054                     _novaTecla:
   919                           	callstack 0
   920  000054                     	ds	1
   921  000055                     _lletraASCII:
   922                           	callstack 0
   923  000055                     	ds	1
   924  000056                     _hora:
   925                           	callstack 0
   926  000056                     	ds	6
   927  00005C                     _stringScore:
   928                           	callstack 0
   929  00005C                     	ds	3
   930                           
   931                           	psect	bssBANK0
   932  000080                     __pbssBANK0:
   933                           	callstack 0
   934  000080                     _s_Timers:
   935                           	callstack 0
   936  000080                     	ds	27
   937  00009B                     _puntuacions:
   938                           	callstack 0
   939  00009B                     	ds	10
   940  0000A5                     _arrayShowUsers:
   941                           	callstack 0
   942  0000A5                     	ds	8
   943  0000AD                     _tmpPassword:
   944                           	callstack 0
   945  0000AD                     	ds	9
   946  0000B6                     _tmpUsername:
   947                           	callstack 0
   948  0000B6                     	ds	9
   949                           
   950                           	psect	dataBANK0
   951  0000BF                     __pdataBANK0:
   952                           	callstack 0
   953  0000BF                     _lletraInici:
   954                           	callstack 0
   955  0000BF                     	ds	8
   956  0000C7                     _registerText:
   957                           	callstack 0
   958  0000C7                     	ds	11
   959  0000D2                     _loginText:
   960                           	callstack 0
   961  0000D2                     	ds	8
   962                           
   963                           	psect	bssBANK1
   964  000100                     __pbssBANK1:
   965                           	callstack 0
   966  000100                     _usuaris:
   967                           	callstack 0
   968  000100                     	ds	144
   969                           
   970                           	psect	cstackBANK0
   971  0000DA                     __pcstackBANK0:
   972                           	callstack 0
   973  0000DA                     ??_menu:
   974                           
   975                           ; 1 bytes @ 0x0
   976  0000DA                     	ds	5
   977                           
   978                           	psect	cstackCOMRAM
   979  00005F                     __pcstackCOMRAM:
   980                           	callstack 0
   981  00005F                     
   982                           ; 1 bytes @ 0x0
   983  00005F                     	ds	1
   984  000060                     ??_high_rsi:
   985                           
   986                           ; 1 bytes @ 0x1
   987  000060                     	ds	4
   988  000064                     ??_EscriuPrimeraOrdre:
   989  000064                     ??_CantaPartAlta:
   990  000064                     ??_CantaPartBaixa:
   991  000064                     ?_TiGetTics:
   992                           	callstack 0
   993  000064                     ?_UgetUserName:
   994                           	callstack 0
   995  000064                     ?_getArrayShowUsers:
   996                           	callstack 0
   997  000064                     SsetNovaTecla@tecla:
   998                           	callstack 0
   999  000064                     TiResetTics@Handle:
  1000                           	callstack 0
  1001  000064                     MsetNovaTecla@tecla:
  1002                           	callstack 0
  1003  000064                     MNovaLletra@lletra:
  1004                           	callstack 0
  1005  000064                     MNouJoystick@posicio:
  1006                           	callstack 0
  1007  000064                     UenviaChar@pos:
  1008                           	callstack 0
  1009  000064                     UenviaPas@pos:
  1010                           	callstack 0
  1011  000064                     escriureCharEEPROM@pos:
  1012                           	callstack 0
  1013  000064                     llegirCharEEPROM@pos:
  1014                           	callstack 0
  1015  000064                     compareStrings@a:
  1016                           	callstack 0
  1017  000064                     UgetScore@quin:
  1018                           	callstack 0
  1019  000064                     UgetTop5@quin:
  1020                           	callstack 0
  1021  000064                     UnewScore@scoretmp:
  1022                           	callstack 0
  1023  000064                     GLCDMostraMenu@num:
  1024                           	callstack 0
  1025  000064                     HActualitzaHora@nova:
  1026                           	callstack 0
  1027  000064                     JJuguem@usuari:
  1028                           	callstack 0
  1029  000064                     JnovaTecla@tecla:
  1030                           	callstack 0
  1031  000064                     JnovaDireccio@dir:
  1032                           	callstack 0
  1033  000064                     conversorJoystick@direc:
  1034                           	callstack 0
  1035  000064                     SIONovaDireccio@num:
  1036                           	callstack 0
  1037  000064                     SIOStartGame@usuari:
  1038                           	callstack 0
  1039  000064                     SIONovaTecla@tecla:
  1040                           	callstack 0
  1041  000064                     CToAConverteix@numero:
  1042                           	callstack 0
  1043  000064                     ___lbdiv@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  000064                     	ds	1
  1048  000065                     ??_JoystickMotor:
  1049  000065                     CantaPartAlta@c:
  1050                           	callstack 0
  1051  000065                     CantaPartBaixa@c:
  1052                           	callstack 0
  1053  000065                     EscriuPrimeraOrdre@ordre:
  1054                           	callstack 0
  1055  000065                     UenviaChar@c:
  1056                           	callstack 0
  1057  000065                     UenviaPas@c:
  1058                           	callstack 0
  1059  000065                     escriureCharEEPROM@c:
  1060                           	callstack 0
  1061  000065                     ___lbdiv@dividend:
  1062                           	callstack 0
  1063  000065                     compareStrings@b:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x6
  1067  000065                     	ds	1
  1068  000066                     ??_TiGetTics:
  1069  000066                     CantaIR@IR:
  1070                           	callstack 0
  1071  000066                     CantaData@Data:
  1072                           	callstack 0
  1073  000066                     UgetUserName@quin:
  1074                           	callstack 0
  1075  000066                     getArrayShowUsers@quin:
  1076                           	callstack 0
  1077  000066                     ___lbdiv@counter:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081  000066                     	ds	1
  1082  000067                     ??_compareStrings:
  1083  000067                     ___lbdiv@quotient:
  1084                           	callstack 0
  1085  000067                     LcNewString@new_s:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x8
  1089  000067                     	ds	1
  1090  000068                     ??_Uinit:
  1091  000068                     TiGetTics@Handle:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095  000068                     	ds	1
  1096  000069                     ??_UmotorUsers:
  1097  000069                     TiGetTics@actual:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0xA
  1101  000069                     	ds	1
  1102  00006A                     Uinit@k:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  00006A                     	ds	1
  1107  00006B                     ??_motorHora:
  1108  00006B                     ??_motorAltaveu:
  1109  00006B                     ??_TeTeclat:
  1110  00006B                     ??_SMotor:
  1111  00006B                     WaitForBusy@Busy:
  1112                           	callstack 0
  1113  00006B                     Uinit@k_1175:
  1114                           	callstack 0
  1115  00006B                     Espera@ms:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xC
  1119  00006B                     	ds	1
  1120  00006C                     LcGotoXY@Row:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xD
  1124  00006C                     	ds	1
  1125  00006D                     ??_Espera:
  1126  00006D                     LcGotoXY@Fisics:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xE
  1130  00006D                     	ds	1
  1131  00006E                     Espera@Timer:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xF
  1135  00006E                     	ds	1
  1136  00006F                     LcInit@rows:
  1137                           	callstack 0
  1138  00006F                     _LcGotoXY$334:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x10
  1142  00006F                     	ds	1
  1143  000070                     LcInit@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x11
  1147  000070                     	ds	1
  1148  000071                     LcGotoXY@Column:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x12
  1152  000071                     	ds	1
  1153  000072                     ??_motorJoc:
  1154  000072                     LcPutChar@c:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x13
  1158  000072                     	ds	1
  1159  000073                     ??_GLCDMotor:
  1160  000073                     ??_motorSIO:
  1161  000073                     
  1162                           ; 1 bytes @ 0x14
  1163  000073                     	ds	2
  1164  000075                     
  1165                           ; 1 bytes @ 0x16
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 75 in file "main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1
  1185 ;;      Params:         0       0       0
  1186 ;;      Locals:         0       0       0
  1187 ;;      Temps:          0       0       0
  1188 ;;      Totals:         0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels required when called: 7
  1191 ;; This function calls:
  1192 ;;		_CtoA
  1193 ;;		_GLCDInit
  1194 ;;		_GLCDMotor
  1195 ;;		_JoystickInit
  1196 ;;		_JoystickMotor
  1197 ;;		_LcInit
  1198 ;;		_LcLCD
  1199 ;;		_Minit
  1200 ;;		_SMotor
  1201 ;;		_Sinit
  1202 ;;		_TeInit
  1203 ;;		_TeTeclat
  1204 ;;		_TiInitTimer
  1205 ;;		_Uinit
  1206 ;;		_UmotorUsers
  1207 ;;		_initAltaveu
  1208 ;;		_initHora
  1209 ;;		_initSIO
  1210 ;;		_init_eusart
  1211 ;;		_init_ports
  1212 ;;		_menu
  1213 ;;		_motorAltaveu
  1214 ;;		_motorHora
  1215 ;;		_motorJoc
  1216 ;;		_motorSIO
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text0
  1223  001A80                     __ptext0:
  1224                           	callstack 0
  1225  001A80                     _main:
  1226                           	callstack 24
  1227                           
  1228                           ;main.c: 76:     init_ports();
  1229                           
  1230                           ;incstack = 0
  1231  001A80  EC92  F00F         	call	_init_ports	;wreg free
  1232                           
  1233                           ;main.c: 77:     init_eusart();
  1234  001A84  ECE6  F00F         	call	_init_eusart	;wreg free
  1235                           
  1236                           ;main.c: 78:     TiInitTimer();
  1237  001A88  ECEE  F00E         	call	_TiInitTimer	;wreg free
  1238                           
  1239                           ;main.c: 79:     TeInit();
  1240  001A8C  ECB3  F000         	call	_TeInit	;wreg free
  1241                           
  1242                           ;main.c: 80:     Sinit();
  1243  001A90  ECB7  F000         	call	_Sinit	;wreg free
  1244                           
  1245                           ;main.c: 82:     initAltaveu();
  1246  001A94  ECA7  F000         	call	_initAltaveu	;wreg free
  1247                           
  1248                           ;main.c: 83:     GLCDInit();
  1249  001A98  ECC7  F000         	call	_GLCDInit	;wreg free
  1250                           
  1251                           ;main.c: 84:     JoystickInit();
  1252  001A9C  EC25  F000         	call	_JoystickInit	;wreg free
  1253                           
  1254                           ;main.c: 85:     initHora();
  1255  001AA0  ECA3  F000         	call	_initHora	;wreg free
  1256                           
  1257                           ;main.c: 86:     initSIO();
  1258  001AA4  EC9F  F000         	call	_initSIO	;wreg free
  1259                           
  1260                           ;main.c: 88:     LcInit(2);
  1261  001AA8  0E02               	movlw	2
  1262  001AAA  EC8A  F00B         	call	_LcInit
  1263                           
  1264                           ;main.c: 89:     Uinit();
  1265  001AAE  ECB4  F00A         	call	_Uinit	;wreg free
  1266                           
  1267                           ;main.c: 90:     Minit();
  1268  001AB2  ECBF  F000         	call	_Minit	;wreg free
  1269  001AB6                     l7193:
  1270                           
  1271                           ;main.c: 92:         GLCDMotor();
  1272  001AB6  ECB2  F006         	call	_GLCDMotor	;wreg free
  1273                           
  1274                           ;main.c: 93:         motorJoc();
  1275  001ABA  ECE9  F00B         	call	_motorJoc	;wreg free
  1276                           
  1277                           ;main.c: 94:         motorSIO();
  1278  001ABE  EC39  F005         	call	_motorSIO	;wreg free
  1279                           
  1280                           ;main.c: 95:         motorHora();
  1281  001AC2  EC84  F00C         	call	_motorHora	;wreg free
  1282                           
  1283                           ;main.c: 96:         JoystickMotor();
  1284  001AC6  EC1F  F00B         	call	_JoystickMotor	;wreg free
  1285                           
  1286                           ;main.c: 97:         menu();
  1287  001ACA  EC78  F001         	call	_menu	;wreg free
  1288                           
  1289                           ;main.c: 98:         CtoA();
  1290  001ACE  EC5E  F00F         	call	_CtoA	;wreg free
  1291                           
  1292                           ;main.c: 99:         motorAltaveu();
  1293  001AD2  EC3B  F00C         	call	_motorAltaveu	;wreg free
  1294                           
  1295                           ;main.c: 100:         UmotorUsers();
  1296  001AD6  ECFE  F007         	call	_UmotorUsers	;wreg free
  1297                           
  1298                           ;main.c: 102:         TeTeclat();
  1299  001ADA  EC17  F00A         	call	_TeTeclat	;wreg free
  1300                           
  1301                           ;main.c: 103:         SMotor();
  1302  001ADE  EC40  F009         	call	_SMotor	;wreg free
  1303                           
  1304                           ;main.c: 104:         LcLCD();
  1305  001AE2  ECDA  F00D         	call	_LcLCD	;wreg free
  1306  001AE6  D7E7               	goto	l7193
  1307  001AE8                     __end_of_main:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _motorSIO *****************
  1311 ;; Defined at:
  1312 ;;		line 50 in file "SIO.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1
  1326 ;;      Params:         0       0       0
  1327 ;;      Locals:         0       0       0
  1328 ;;      Temps:          2       0       0
  1329 ;;      Totals:         2       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 6
  1333 ;; This function calls:
  1334 ;;		_CToAConverteix
  1335 ;;		_CToAHaAcabat
  1336 ;;		_CToAobtenir
  1337 ;;		_HGetTime
  1338 ;;		_LcClear
  1339 ;;		_LcGotoXY
  1340 ;;		_LcLliure
  1341 ;;		_LcNewString
  1342 ;;		_LcPutChar
  1343 ;;		_TiGetTics
  1344 ;;		_TiResetTics
  1345 ;;		_UgetUserName
  1346 ;;		_UnewScore
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text1
  1353  000A72                     __ptext1:
  1354                           	callstack 0
  1355  000A72                     _motorSIO:
  1356                           	callstack 24
  1357                           
  1358                           ;SIO.c: 51:     static char state = 0;;SIO.c: 53:  switch(state) {
  1359                           
  1360                           ;incstack = 0
  1361  000A72  D134               	goto	l5295
  1362  000A74                     l5113:
  1363                           
  1364                           ;SIO.c: 55:    if (usuariActualSIO > -1) {
  1365  000A74  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1366  000A76  0012               	return	
  1367                           
  1368                           ;SIO.c: 56:     userPtr = UgetUserName(usuariActualSIO);
  1369  000A78  504A               	movf	_usuariActualSIO^0,w,c
  1370  000A7A  ECF1  F00F         	call	_UgetUserName
  1371  000A7E  C064  F007         	movff	?_UgetUserName,_userPtr
  1372  000A82  C065  F008         	movff	?_UgetUserName+1,_userPtr+1
  1373                           
  1374                           ;SIO.c: 57:     jugantSIO = 1;
  1375  000A86  8475               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1376                           
  1377                           ;SIO.c: 58:     Krebut = 0;
  1378  000A88  9275               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1379                           
  1380                           ;SIO.c: 59:     state = 1;
  1381  000A8A  0E01               	movlw	1
  1382  000A8C  6E0D               	movwf	motorSIO@state^0,c
  1383                           
  1384                           ;SIO.c: 61:   break;
  1385                           
  1386                           ;SIO.c: 60:    }
  1387  000A8E  0C01               	retlw	1
  1388  000A90                     l5123:
  1389                           
  1390                           ;SIO.c: 63:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1391  000A90  D94D               	call	PL28	;call to abstracted procedure
  1392  000A92  E107               	bnz	l5131
  1393  000A94  A2AC               	btfss	172,1,c	;volatile
  1394  000A96  D005               	goto	l5131
  1395                           
  1396                           ;SIO.c: 64:     TXREG = '\0';
  1397  000A98  6AAD               	clrf	173,c	;volatile
  1398                           
  1399                           ;SIO.c: 65:     novaTeclaSIO = 0;
  1400  000A9A  6A48               	clrf	_novaTeclaSIO^0,c
  1401                           
  1402                           ;SIO.c: 66:     state = 2;
  1403  000A9C  0E02               	movlw	2
  1404  000A9E  6E0D               	movwf	motorSIO@state^0,c
  1405                           
  1406                           ;SIO.c: 67:    }
  1407  000AA0  0C02               	retlw	2
  1408  000AA2                     l5131:
  1409  000AA2  D944               	call	PL28	;call to abstracted procedure
  1410  000AA4  A4D8               	btfss	status,2,c
  1411  000AA6  A2AC               	btfss	172,1,c	;volatile
  1412  000AA8  0012               	return	
  1413                           
  1414                           ;SIO.c: 69:     TXREG = *userPtr;
  1415  000AAA  D940               	call	PL28	;call to abstracted procedure
  1416  000AAC  6EAD               	movwf	173,c	;volatile
  1417                           
  1418                           ;SIO.c: 70:     userPtr++;
  1419  000AAE  4A07               	infsnz	_userPtr^0,f,c
  1420  000AB0  2A08               	incf	(_userPtr+1)^0,f,c
  1421  000AB2  0012               	return	
  1422  000AB4                     l5139:
  1423                           
  1424                           ;SIO.c: 74:    if (RCREG == 'K') {
  1425  000AB4  0E4B               	movlw	75
  1426  000AB6  18AE               	xorwf	174,w,c
  1427  000AB8  A4D8               	btfss	status,2,c
  1428  000ABA  0012               	return	
  1429                           
  1430                           ;SIO.c: 75:     Krebut = 1;
  1431  000ABC  8275               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1432  000ABE                     l5143:
  1433                           
  1434                           ;SIO.c: 76:     state = 3;
  1435  000ABE  0E03               	movlw	3
  1436  000AC0  6E0D               	movwf	motorSIO@state^0,c
  1437  000AC2  0C03               	retlw	3
  1438  000AC4                     l5145:
  1439                           
  1440                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1441  000AC4  2849               	incf	_direccioSIO^0,w,c
  1442  000AC6  E006               	bz	l5153
  1443  000AC8  A2AC               	btfss	172,1,c	;volatile
  1444  000ACA  D004               	goto	l5153
  1445                           
  1446                           ;SIO.c: 81:     TXREG = direccioSIO;
  1447  000ACC  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1448                           
  1449                           ;SIO.c: 82:     direccioSIO = -1;
  1450  000AD0  6849               	setf	_direccioSIO^0,c
  1451  000AD2  D7F5               	goto	l5143
  1452  000AD4                     l5153:
  1453  000AD4  0E30               	movlw	48
  1454  000AD6  6448               	cpfsgt	_novaTeclaSIO^0,c
  1455  000AD8  D009               	goto	l1281
  1456  000ADA  0E3A               	movlw	58
  1457  000ADC  6048               	cpfslt	_novaTeclaSIO^0,c
  1458  000ADE  D006               	goto	l1281
  1459  000AE0  A2AC               	btfss	172,1,c	;volatile
  1460  000AE2  D004               	goto	l1281
  1461                           
  1462                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1463  000AE4  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1464                           
  1465                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1466  000AE8  6A48               	clrf	_novaTeclaSIO^0,c
  1467  000AEA  D7E9               	goto	l5143
  1468  000AEC                     l1281:
  1469  000AEC  B475               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1470  000AEE  D002               	goto	u4790
  1471  000AF0  B2AC               	btfsc	172,1,c	;volatile
  1472  000AF2  D002               	goto	u4800
  1473  000AF4                     u4790:
  1474  000AF4  AA9E               	btfss	158,5,c	;volatile
  1475  000AF6  D00D               	goto	l1283
  1476  000AF8                     u4800:
  1477                           
  1478                           ;SIO.c: 91:     LcClear();
  1479  000AF8  EC70  F00F         	call	_LcClear	;wreg free
  1480                           
  1481                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1482  000AFC  0ED8               	movlw	low STR_6
  1483  000AFE  EC12  F005         	call	PL10	;call to abstracted procedure
  1484  000B02  EC77  F000         	call	_LcNewString	;wreg free
  1485                           
  1486                           ;SIO.c: 93:     TXREG = 'F';
  1487  000B06  0E46               	movlw	70
  1488  000B08  6EAD               	movwf	173,c	;volatile
  1489                           
  1490                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1491  000B0A  6A48               	clrf	_novaTeclaSIO^0,c
  1492                           
  1493                           ;SIO.c: 95:     state = 4;
  1494  000B0C  0E04               	movlw	4
  1495  000B0E  6E0D               	movwf	motorSIO@state^0,c
  1496                           
  1497                           ;SIO.c: 96:    }
  1498  000B10  0C04               	retlw	4
  1499  000B12                     l1283:
  1500  000B12  A075               	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1501  000B14  0012               	return	
  1502                           
  1503                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1504  000B16  ECDD  F000         	call	_HGetTime	;wreg free
  1505  000B1A  6ED9               	movwf	fsr2l,c
  1506  000B1C  6ADA               	clrf	fsr2h,c
  1507  000B1E  50DF               	movf	indf2,w,c
  1508  000B20  6E01               	movwf	_horaTX^0,c
  1509                           
  1510                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1511  000B22  ECDD  F000         	call	_HGetTime	;wreg free
  1512  000B26  D919               	call	PL64	;call to abstracted procedure
  1513  000B28  6E02               	movwf	(_horaTX+1)^0,c
  1514                           
  1515                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1516  000B2A  ECDD  F000         	call	_HGetTime	;wreg free
  1517  000B2E  D904               	call	PL52	;call to abstracted procedure
  1518  000B30  6E03               	movwf	(_horaTX+2)^0,c
  1519                           
  1520                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1521  000B32  ECDD  F000         	call	_HGetTime	;wreg free
  1522  000B36  D906               	call	PL54	;call to abstracted procedure
  1523  000B38  6E04               	movwf	(_horaTX+3)^0,c
  1524                           
  1525                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1526  000B3A  ECDD  F000         	call	_HGetTime	;wreg free
  1527  000B3E  6ED9               	movwf	fsr2l,c
  1528  000B40  6ADA               	clrf	fsr2h,c
  1529  000B42  0E04               	movlw	4
  1530  000B44  26D9               	addwf	fsr2l,f,c
  1531  000B46  50DF               	movf	indf2,w,c
  1532  000B48  6E05               	movwf	(_horaTX+4)^0,c
  1533                           
  1534                           ;SIO.c: 103:     horaTX[5] = newLineChar;
  1535  000B4A  0E0D               	movlw	13
  1536  000B4C  6E06               	movwf	(_horaTX+5)^0,c
  1537                           
  1538                           ;SIO.c: 104:     mask = 1;
  1539  000B4E  0E01               	movlw	1
  1540  000B50  6E0E               	movwf	_mask^0,c
  1541                           
  1542                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1543  000B52  5011               	movf	_timerSIO^0,w,c
  1544  000B54  ECBD  F00F         	call	_TiResetTics
  1545                           
  1546                           ;SIO.c: 106:     charActu = 0;
  1547  000B58  6A0F               	clrf	_charActu^0,c
  1548  000B5A                     l5193:
  1549                           
  1550                           ;SIO.c: 107:     state = 10;
  1551  000B5A  0E0A               	movlw	10
  1552  000B5C  6E0D               	movwf	motorSIO@state^0,c
  1553  000B5E  0C0A               	retlw	10
  1554  000B60                     l1290:
  1555                           
  1556                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1557  000B60  AA9E               	btfss	158,5,c	;volatile
  1558  000B62  0012               	return	
  1559                           
  1560                           ;SIO.c: 112:     score = RCREG;
  1561  000B64  CFAE F010          	movff	4014,_score	;volatile
  1562                           
  1563                           ;SIO.c: 113:     UnewScore(score);
  1564  000B68  5010               	movf	_score^0,w,c
  1565  000B6A  ECFB  F00F         	call	_UnewScore
  1566                           
  1567                           ;SIO.c: 114:     CToAConverteix(score);
  1568  000B6E  5010               	movf	_score^0,w,c
  1569  000B70  EC71  F000         	call	_CToAConverteix
  1570                           
  1571                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1572  000B74  5011               	movf	_timerSIO^0,w,c
  1573  000B76  ECBD  F00F         	call	_TiResetTics
  1574  000B7A                     l5201:
  1575                           
  1576                           ;SIO.c: 116:     state = 5;
  1577  000B7A  0E05               	movlw	5
  1578  000B7C  6E0D               	movwf	motorSIO@state^0,c
  1579  000B7E  0C05               	retlw	5
  1580  000B80                     l5203:
  1581                           
  1582                           ;SIO.c: 121:    if (TiGetTics(timerSIO) > 2490) {
  1583  000B80  5011               	movf	_timerSIO^0,w,c
  1584  000B82  EC15  F00F         	call	_TiGetTics
  1585  000B86  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1586  000B88  D00F               	goto	l5211
  1587  000B8A  0EBB               	movlw	187
  1588  000B8C  5C64               	subwf	?_TiGetTics^0,w,c
  1589  000B8E  0E09               	movlw	9
  1590  000B90  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1591  000B92  E30A               	bnc	l5211
  1592                           
  1593                           ;SIO.c: 122:     LcClear();
  1594  000B94  EC70  F00F         	call	_LcClear	;wreg free
  1595                           
  1596                           ;SIO.c: 123:     LcNewString("TIME LEFT: ");
  1597  000B98  0EBB               	movlw	low STR_7
  1598  000B9A  EC12  F005         	call	PL10	;call to abstracted procedure
  1599  000B9E  EC77  F000         	call	_LcNewString	;wreg free
  1600                           
  1601                           ;SIO.c: 124:     state = 7;
  1602  000BA2  0E07               	movlw	7
  1603  000BA4  6E0D               	movwf	motorSIO@state^0,c
  1604                           
  1605                           ;SIO.c: 125:    }
  1606  000BA6  0C07               	retlw	7
  1607  000BA8                     l5211:
  1608  000BA8  5011               	movf	_timerSIO^0,w,c
  1609  000BAA  EC15  F00F         	call	_TiGetTics
  1610  000BAE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1611  000BB0  D006               	goto	u4840
  1612  000BB2  0EBA               	movlw	186
  1613  000BB4  5C64               	subwf	?_TiGetTics^0,w,c
  1614  000BB6  0E09               	movlw	9
  1615  000BB8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1616  000BBA  B0D8               	btfsc	status,0,c
  1617  000BBC  0012               	return	
  1618  000BBE                     u4840:
  1619  000BBE  AA9E               	btfss	158,5,c	;volatile
  1620  000BC0  0012               	return	
  1621  000BC2  EC7D  F000         	call	_LcLliure	;wreg free
  1622  000BC6  A0D8               	btfss	status,0,c
  1623  000BC8  0012               	return	
  1624                           
  1625                           ;SIO.c: 127:     LcGotoXY(0,1);
  1626  000BCA  EC1D  F005         	call	PL36	;call to abstracted procedure
  1627  000BCE  ECBE  F00E         	call	_LcGotoXY
  1628                           
  1629                           ;SIO.c: 128:     LcPutChar(RCREG);
  1630  000BD2  50AE               	movf	174,w,c	;volatile
  1631  000BD4  EC02  F00E         	call	_LcPutChar
  1632                           
  1633                           ;SIO.c: 129:     state = 6;
  1634  000BD8  0E06               	movlw	6
  1635  000BDA  6E0D               	movwf	motorSIO@state^0,c
  1636  000BDC  0C06               	retlw	6
  1637  000BDE                     l5221:
  1638                           
  1639                           ;SIO.c: 133:    if (LcLliure()) {
  1640  000BDE  EC7D  F000         	call	_LcLliure	;wreg free
  1641  000BE2  A0D8               	btfss	status,0,c
  1642  000BE4  0012               	return	
  1643                           
  1644                           ;SIO.c: 134:     LcNewString(HGetTime());
  1645  000BE6  ECDD  F000         	call	_HGetTime	;wreg free
  1646  000BEA  D8B2               	call	PL60	;call to abstracted procedure
  1647  000BEC  EC77  F000         	call	_LcNewString	;wreg free
  1648                           
  1649                           ;SIO.c: 135:     state = 8;
  1650  000BF0  0E08               	movlw	8
  1651  000BF2  6E0D               	movwf	motorSIO@state^0,c
  1652  000BF4  0C08               	retlw	8
  1653  000BF6                     l1298:
  1654                           
  1655                           ;SIO.c: 139:    if (PIR1bits.RCIF) {
  1656  000BF6  AA9E               	btfss	158,5,c	;volatile
  1657  000BF8  0012               	return	
  1658                           
  1659                           ;SIO.c: 140:     LcPutChar(RCREG);
  1660  000BFA  50AE               	movf	174,w,c	;volatile
  1661  000BFC  EC02  F00E         	call	_LcPutChar
  1662                           
  1663                           ;SIO.c: 141:     TiResetTics(timerSIO);
  1664  000C00  5011               	movf	_timerSIO^0,w,c
  1665  000C02  ECBD  F00F         	call	_TiResetTics
  1666  000C06  D7B9               	goto	l5201
  1667  000C08                     l5231:
  1668                           
  1669                           ;SIO.c: 146:    if (LcLliure()) {
  1670  000C08  EC7D  F000         	call	_LcLliure	;wreg free
  1671  000C0C  A0D8               	btfss	status,0,c
  1672  000C0E  0012               	return	
  1673                           
  1674                           ;SIO.c: 147:     LcGotoXY(0,1);
  1675  000C10  EC1D  F005         	call	PL36	;call to abstracted procedure
  1676  000C14  ECBE  F00E         	call	_LcGotoXY
  1677                           
  1678                           ;SIO.c: 148:     LcNewString("SCORE: ");
  1679  000C18  0ED0               	movlw	low STR_8
  1680  000C1A  EC12  F005         	call	PL10	;call to abstracted procedure
  1681  000C1E  EC77  F000         	call	_LcNewString	;wreg free
  1682                           
  1683                           ;SIO.c: 149:     state = 9;
  1684  000C22  0E09               	movlw	9
  1685  000C24  6E0D               	movwf	motorSIO@state^0,c
  1686  000C26  0C09               	retlw	9
  1687  000C28                     l5239:
  1688                           
  1689                           ;SIO.c: 153:    if (LcLliure() && CToAHaAcabat() == 250) {
  1690  000C28  EC7D  F000         	call	_LcLliure	;wreg free
  1691  000C2C  A0D8               	btfss	status,0,c
  1692  000C2E  0012               	return	
  1693  000C30  ECF7  F000         	call	_CToAHaAcabat	;wreg free
  1694  000C34  0AFA               	xorlw	250
  1695  000C36  A4D8               	btfss	status,2,c
  1696  000C38  0012               	return	
  1697                           
  1698                           ;SIO.c: 154:     LcNewString(CToAobtenir());
  1699  000C3A  ECF5  F000         	call	_CToAobtenir	;wreg free
  1700  000C3E  D888               	call	PL60	;call to abstracted procedure
  1701  000C40  EC77  F000         	call	_LcNewString	;wreg free
  1702                           
  1703                           ;SIO.c: 155:     usuariActualSIO = -1;
  1704  000C44  684A               	setf	_usuariActualSIO^0,c
  1705                           
  1706                           ;SIO.c: 156:     state = 0;
  1707  000C46  6A0D               	clrf	motorSIO@state^0,c
  1708  000C48  0012               	return	
  1709  000C4A                     l5249:
  1710                           
  1711                           ;SIO.c: 160:    if (charActu == 6) {
  1712  000C4A  0E06               	movlw	6
  1713  000C4C  180F               	xorwf	_charActu^0,w,c
  1714  000C4E  E102               	bnz	l5255
  1715                           
  1716                           ;SIO.c: 161:     hi_ha_hora_sio2 = 0;
  1717  000C50  9075               	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1718  000C52  D735               	goto	l5143
  1719  000C54                     l5255:
  1720  000C54  0E06               	movlw	6
  1721  000C56  600F               	cpfslt	_charActu^0,c
  1722  000C58  0C06               	retlw	6
  1723  000C5A  5011               	movf	_timerSIO^0,w,c
  1724  000C5C  EC15  F00F         	call	_TiGetTics
  1725  000C60  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1726  000C62  0012               	return	
  1727  000C64  5065               	movf	(?_TiGetTics+1)^0,w,c
  1728  000C66  E103               	bnz	u4940
  1729  000C68  0464               	decf	?_TiGetTics^0,w,c
  1730  000C6A  A0D8               	btfss	status,0,c
  1731  000C6C  0012               	return	
  1732  000C6E                     u4940:
  1733                           
  1734                           ;SIO.c: 165:     LATBbits.LATB1 = 0;
  1735  000C6E  928A               	bcf	138,1,c	;volatile
  1736                           
  1737                           ;SIO.c: 166:     TiResetTics(timerSIO);
  1738  000C70  5011               	movf	_timerSIO^0,w,c
  1739  000C72  ECBD  F00F         	call	_TiResetTics
  1740  000C76                     l5263:
  1741                           
  1742                           ;SIO.c: 168:     state = 11;
  1743  000C76  0E0B               	movlw	11
  1744  000C78  6E0D               	movwf	motorSIO@state^0,c
  1745  000C7A  0C0B               	retlw	11
  1746  000C7C                     l5265:
  1747                           
  1748                           ;SIO.c: 172:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1749  000C7C  500E               	movf	_mask^0,w,c
  1750  000C7E  E111               	bnz	l5279
  1751  000C80  5011               	movf	_timerSIO^0,w,c
  1752  000C82  EC15  F00F         	call	_TiGetTics
  1753  000C86  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1754  000C88  D00C               	goto	l5279
  1755  000C8A  5065               	movf	(?_TiGetTics+1)^0,w,c
  1756  000C8C  E102               	bnz	u4960
  1757  000C8E  0464               	decf	?_TiGetTics^0,w,c
  1758  000C90  E308               	bnc	l5279
  1759  000C92                     u4960:
  1760                           
  1761                           ;SIO.c: 173:     mask = 1;
  1762  000C92  0E01               	movlw	1
  1763  000C94  6E0E               	movwf	_mask^0,c
  1764                           
  1765                           ;SIO.c: 174:     charActu++;
  1766  000C96  2A0F               	incf	_charActu^0,f,c
  1767                           
  1768                           ;SIO.c: 175:     LATBbits.LATB1 = 1;
  1769  000C98  828A               	bsf	138,1,c	;volatile
  1770                           
  1771                           ;SIO.c: 176:     TiResetTics(timerSIO);
  1772  000C9A  5011               	movf	_timerSIO^0,w,c
  1773  000C9C  ECBD  F00F         	call	_TiResetTics
  1774  000CA0  D75C               	goto	l5193
  1775  000CA2                     l5279:
  1776  000CA2  5011               	movf	_timerSIO^0,w,c
  1777  000CA4  EC15  F00F         	call	_TiGetTics
  1778  000CA8  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1779  000CAA  0012               	return	
  1780  000CAC  5065               	movf	(?_TiGetTics+1)^0,w,c
  1781  000CAE  E103               	bnz	u4970
  1782  000CB0  0464               	decf	?_TiGetTics^0,w,c
  1783  000CB2  A0D8               	btfss	status,0,c
  1784  000CB4  0012               	return	
  1785  000CB6                     u4970:
  1786  000CB6  500E               	movf	_mask^0,w,c
  1787  000CB8  B4D8               	btfsc	status,2,c
  1788  000CBA  0012               	return	
  1789                           
  1790                           ;SIO.c: 180:     if(mask & horaTX[charActu]){
  1791  000CBC  500F               	movf	_charActu^0,w,c
  1792  000CBE  0F01               	addlw	low _horaTX
  1793  000CC0  6ED9               	movwf	fsr2l,c
  1794  000CC2  6ADA               	clrf	fsr2h,c
  1795  000CC4  50DF               	movf	indf2,w,c
  1796  000CC6  140E               	andwf	_mask^0,w,c
  1797  000CC8  E002               	bz	l1312
  1798                           
  1799                           ;SIO.c: 181:        LATBbits.LATB1 = 1;
  1800  000CCA  828A               	bsf	138,1,c	;volatile
  1801                           
  1802                           ;SIO.c: 182:       }else{
  1803  000CCC  D001               	goto	l5287
  1804  000CCE                     l1312:
  1805                           
  1806                           ;SIO.c: 183:        LATBbits.LATB1 = 0;
  1807  000CCE  928A               	bcf	138,1,c	;volatile
  1808  000CD0                     l5287:
  1809                           
  1810                           ;SIO.c: 185:       mask = mask<<1;
  1811  000CD0  90D8               	bcf	status,0,c
  1812  000CD2  360E               	rlcf	_mask^0,f,c
  1813                           
  1814                           ;SIO.c: 186:     TiResetTics(timerSIO);
  1815  000CD4  5011               	movf	_timerSIO^0,w,c
  1816  000CD6  ECBD  F00F         	call	_TiResetTics
  1817  000CDA  D7CD               	goto	l5263
  1818  000CDC                     l5295:
  1819  000CDC  500D               	movf	motorSIO@state^0,w,c
  1820  000CDE  6E73               	movwf	??_motorSIO^0,c
  1821  000CE0  6A74               	clrf	(??_motorSIO+1)^0,c
  1822                           
  1823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1824                           ; Switch size 1, requested type "space"
  1825                           ; Number of cases is 1, Range of values is 0 to 0
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte            4     3 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830  000CE2  5074               	movf	(??_motorSIO+1)^0,w,c
  1831  000CE4  A4D8               	btfss	status,2,c
  1832  000CE6  0012               	return	
  1833                           
  1834                           ; Switch size 1, requested type "space"
  1835                           ; Number of cases is 12, Range of values is 0 to 11
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte           37    19 (average)
  1839                           ;	Chosen strategy is simple_byte
  1840  000CE8  5073               	movf	??_motorSIO^0,w,c
  1841  000CEA  E101 D6C3          	bz	l5113
  1842  000CEE  0A01               	xorlw	1	; case 1
  1843  000CF0  E101 D6CE          	bz	l5123
  1844  000CF4  0A03               	xorlw	3	; case 2
  1845  000CF6  E101 D6DD          	bz	l5139
  1846  000CFA  0A01               	xorlw	1	; case 3
  1847  000CFC  E101 D6E2          	bz	l5145
  1848  000D00  0A07               	xorlw	7	; case 4
  1849  000D02  E101 D72D          	bz	l1290
  1850  000D06  0A01               	xorlw	1	; case 5
  1851  000D08  E101 D73A          	bz	l5203
  1852  000D0C  0A03               	xorlw	3	; case 6
  1853  000D0E  E101 D772          	bz	l1298
  1854  000D12  0A01               	xorlw	1	; case 7
  1855  000D14  E101 D763          	bz	l5221
  1856  000D18  0A0F               	xorlw	15	; case 8
  1857  000D1A  E101 D775          	bz	l5231
  1858  000D1E  0A01               	xorlw	1	; case 9
  1859  000D20  E083               	bz	l5239
  1860  000D22  0A03               	xorlw	3	; case 10
  1861  000D24  E092               	bz	l5249
  1862  000D26  0A01               	xorlw	1	; case 11
  1863  000D28  E0A9               	bz	l5265
  1864  000D2A  0012               	return		;funcret
  1865  000D2C                     __end_of_motorSIO:
  1866                           	callstack 0
  1867  000D2C                     PL28:
  1868                           	callstack 24
  1869  000D2C  C007  FFD9         	movff	_userPtr,fsr2l
  1870  000D30  C008  FFDA         	movff	_userPtr+1,fsr2h
  1871  000D34  50DF               	movf	indf2,w,c
  1872  000D36  0012               	return	
  1873  000D38                     __end_ofPL28:
  1874                           	callstack 0
  1875  000D38                     PL52:
  1876                           	callstack 27
  1877  000D38  6ED9               	movwf	fsr2l,c
  1878  000D3A  6ADA               	clrf	fsr2h,c
  1879  000D3C  0E02               	movlw	2
  1880  000D3E  26D9               	addwf	fsr2l,f,c
  1881  000D40  50DF               	movf	indf2,w,c
  1882  000D42  0012               	return	
  1883  000D44                     __end_ofPL52:
  1884                           	callstack 0
  1885  000D44                     PL54:
  1886                           	callstack 27
  1887  000D44  6ED9               	movwf	fsr2l,c
  1888  000D46  6ADA               	clrf	fsr2h,c
  1889  000D48  0E03               	movlw	3
  1890  000D4A  26D9               	addwf	fsr2l,f,c
  1891  000D4C  50DF               	movf	indf2,w,c
  1892  000D4E  0012               	return	
  1893  000D50                     __end_ofPL54:
  1894                           	callstack 0
  1895  000D50                     PL60:
  1896                           	callstack 24
  1897  000D50  6E73               	movwf	??_motorSIO^0,c
  1898  000D52  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1899  000D56  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1900  000D58  0012               	return	
  1901  000D5A                     __end_ofPL60:
  1902                           	callstack 0
  1903  000D5A                     PL64:
  1904                           	callstack 27
  1905  000D5A  6ED9               	movwf	fsr2l,c
  1906  000D5C  6ADA               	clrf	fsr2h,c
  1907  000D5E  2AD9               	incf	fsr2l,f,c
  1908  000D60  50DF               	movf	indf2,w,c
  1909  000D62  0012               	return	
  1910  000D64                     __end_ofPL64:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _UnewScore *****************
  1914 ;; Defined at:
  1915 ;;		line 297 in file "Usuaris.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  scoretmp        1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1
  1929 ;;      Params:         0       0       0
  1930 ;;      Locals:         1       0       0
  1931 ;;      Temps:          0       0       0
  1932 ;;      Totals:         1       0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 2
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_motorSIO
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text2
  1944  001FF6                     __ptext2:
  1945                           	callstack 0
  1946  001FF6                     _UnewScore:
  1947                           	callstack 27
  1948                           
  1949                           ;incstack = 0
  1950                           ;UnewScore@scoretmp stored from wreg
  1951  001FF6  6E64               	movwf	UnewScore@scoretmp^0,c
  1952                           
  1953                           ;Usuaris.c: 298:     scoreUsr = scoretmp;
  1954  001FF8  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1955                           
  1956                           ;Usuaris.c: 299:     do_updateScore = 1;
  1957  001FFC  8876               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1958  001FFE  0012               	return		;funcret
  1959  002000                     __end_of_UnewScore:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _motorJoc *****************
  1963 ;; Defined at:
  1964 ;;		line 44 in file "Joc.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1
  1978 ;;      Params:         0       0       0
  1979 ;;      Locals:         0       0       0
  1980 ;;      Temps:          2       0       0
  1981 ;;      Totals:         2       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 5
  1985 ;; This function calls:
  1986 ;;		_HClearNouSegon
  1987 ;;		_HGetTime
  1988 ;;		_HJugant
  1989 ;;		_HNouSegon
  1990 ;;		_HnoJugant
  1991 ;;		_LcGotoXY
  1992 ;;		_LcLliure
  1993 ;;		_LcNewString
  1994 ;;		_SIOEnviaHora
  1995 ;;		_SIONovaDireccio
  1996 ;;		_SIONovaTecla
  1997 ;;		_SIOStartGame
  1998 ;;		_SIOcheckKrebut
  1999 ;;		_SIOendGame
  2000 ;;		_conversorJoystick
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text3
  2007  0017D2                     __ptext3:
  2008                           	callstack 0
  2009  0017D2                     _motorJoc:
  2010                           	callstack 25
  2011                           
  2012                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  2013                           
  2014                           ;incstack = 0
  2015  0017D2  D044               	goto	l5105
  2016  0017D4                     l5059:
  2017                           
  2018                           ;Joc.c: 49:    if (usuariJoc != -1) {
  2019  0017D4  284C               	incf	_usuariJoc^0,w,c
  2020  0017D6  B4D8               	btfsc	status,2,c
  2021  0017D8  0012               	return	
  2022                           
  2023                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  2024  0017DA  504C               	movf	_usuariJoc^0,w,c
  2025  0017DC  EC83  F000         	call	_SIOStartGame
  2026                           
  2027                           ;Joc.c: 51:     jugantJoc = 1;
  2028  0017E0  8675               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2029                           
  2030                           ;Joc.c: 52:     state = 2;
  2031  0017E2  0E02               	movlw	2
  2032  0017E4  6E12               	movwf	motorJoc@state^0,c
  2033                           
  2034                           ;Joc.c: 54:   break;
  2035                           
  2036                           ;Joc.c: 53:    }
  2037  0017E6  0C02               	retlw	2
  2038  0017E8                     l1161:
  2039                           
  2040                           ;Joc.c: 56:    if (!jugantJoc) {
  2041  0017E8  B675               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2042  0017EA  D007               	goto	l5073
  2043                           
  2044                           ;Joc.c: 57:     usuariJoc = -1;
  2045  0017EC  684C               	setf	_usuariJoc^0,c
  2046                           
  2047                           ;Joc.c: 58:     HnoJugant();
  2048  0017EE  ECDB  F000         	call	_HnoJugant	;wreg free
  2049                           
  2050                           ;Joc.c: 59:     SIOendGame();
  2051  0017F2  ECD7  F000         	call	_SIOendGame	;wreg free
  2052  0017F6                     l5071:
  2053                           
  2054                           ;Joc.c: 61:     state--;
  2055  0017F6  0612               	decf	motorJoc@state^0,f,c
  2056                           
  2057                           ;Joc.c: 62:    }
  2058  0017F8  0012               	return	
  2059  0017FA                     l5073:
  2060  0017FA  BE13               	btfsc	_direccioJoc^0,7,c
  2061  0017FC  D007               	goto	l5079
  2062                           
  2063                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2064  0017FE  5013               	movf	_direccioJoc^0,w,c
  2065  001800  EC28  F00F         	call	_conversorJoystick
  2066  001804  EC8B  F000         	call	_SIONovaDireccio
  2067                           
  2068                           ;Joc.c: 65:     direccioJoc = -1;
  2069  001808  6813               	setf	_direccioJoc^0,c
  2070                           
  2071                           ;Joc.c: 66:    }
  2072  00180A  0012               	return	
  2073  00180C                     l5079:
  2074  00180C  EC53  F000         	call	_HNouSegon	;wreg free
  2075  001810  E313               	bnc	l5091
  2076  001812  EC7D  F000         	call	_LcLliure	;wreg free
  2077  001816  E310               	bnc	l5091
  2078                           
  2079                           ;Joc.c: 68:     HClearNouSegon();
  2080  001818  ECDF  F000         	call	_HClearNouSegon	;wreg free
  2081                           
  2082                           ;Joc.c: 69:     LcGotoXY(0,1);
  2083  00181C  EC1D  F005         	call	PL36	;call to abstracted procedure
  2084  001820  ECBE  F00E         	call	_LcGotoXY
  2085                           
  2086                           ;Joc.c: 70:     LcNewString(HGetTime());
  2087  001824  ECDD  F000         	call	_HGetTime	;wreg free
  2088  001828  6E72               	movwf	??_motorJoc^0,c
  2089  00182A  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  2090  00182E  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2091  001830  EC77  F000         	call	_LcNewString	;wreg free
  2092                           
  2093                           ;Joc.c: 71:                 SIOEnviaHora();
  2094  001834  EFD9  F000         	goto	_SIOEnviaHora	;wreg free
  2095  001838                     l5091:
  2096  001838  504B               	movf	_novaTeclaJOC^0,w,c
  2097  00183A  0A80               	xorlw	128
  2098  00183C  0F7F               	addlw	-129
  2099  00183E  A0D8               	btfss	status,0,c
  2100  001840  0012               	return	
  2101                           
  2102                           ;Joc.c: 75:     SIONovaTecla(novaTeclaJOC+48);
  2103  001842  504B               	movf	_novaTeclaJOC^0,w,c
  2104  001844  0F30               	addlw	48
  2105  001846  EC87  F000         	call	_SIONovaTecla
  2106                           
  2107                           ;Joc.c: 76:     novaTeclaJOC = -1;
  2108  00184A  684B               	setf	_novaTeclaJOC^0,c
  2109  00184C  0012               	return	
  2110  00184E                     l5097:
  2111                           
  2112                           ;Joc.c: 80:    if (SIOcheckKrebut()) {
  2113  00184E  EC4D  F000         	call	_SIOcheckKrebut	;wreg free
  2114  001852  A0D8               	btfss	status,0,c
  2115  001854  0012               	return	
  2116                           
  2117                           ;Joc.c: 81:     HJugant();
  2118  001856  ECCB  F000         	call	_HJugant	;wreg free
  2119  00185A  D7CD               	goto	l5071
  2120  00185C                     l5105:
  2121  00185C  5012               	movf	motorJoc@state^0,w,c
  2122  00185E  6E72               	movwf	??_motorJoc^0,c
  2123  001860  6A73               	clrf	(??_motorJoc+1)^0,c
  2124                           
  2125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2126                           ; Switch size 1, requested type "space"
  2127                           ; Number of cases is 1, Range of values is 0 to 0
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte            4     3 (average)
  2131                           ;	Chosen strategy is simple_byte
  2132  001862  5073               	movf	(??_motorJoc+1)^0,w,c
  2133  001864  A4D8               	btfss	status,2,c
  2134  001866  0012               	return	
  2135                           
  2136                           ; Switch size 1, requested type "space"
  2137                           ; Number of cases is 3, Range of values is 0 to 2
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte           10     6 (average)
  2141                           ;	Chosen strategy is simple_byte
  2142  001868  5072               	movf	??_motorJoc^0,w,c
  2143  00186A  E0B4               	bz	l5059
  2144  00186C  0A01               	xorlw	1	; case 1
  2145  00186E  E0BC               	bz	l1161
  2146  001870  0A03               	xorlw	3	; case 2
  2147  001872  E0ED               	bz	l5097
  2148  001874  0012               	return		;funcret
  2149  001876                     __end_of_motorJoc:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _conversorJoystick *****************
  2153 ;; Defined at:
  2154 ;;		line 27 in file "Joc.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  direc           1    wreg     unsigned char 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  direc           1    5[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1
  2168 ;;      Params:         0       0       0
  2169 ;;      Locals:         1       0       0
  2170 ;;      Temps:          0       0       0
  2171 ;;      Totals:         1       0       0
  2172 ;;Total ram usage:        1 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 2
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_motorJoc
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text4
  2183  001E50                     __ptext4:
  2184                           	callstack 0
  2185  001E50                     _conversorJoystick:
  2186                           	callstack 27
  2187                           
  2188                           ;incstack = 0
  2189                           ;conversorJoystick@direc stored from wreg
  2190  001E50  6E64               	movwf	conversorJoystick@direc^0,c
  2191                           
  2192                           ;Joc.c: 29:     if (direc==2) {
  2193  001E52  0E02               	movlw	2
  2194  001E54  1864               	xorwf	conversorJoystick@direc^0,w,c
  2195  001E56  E101               	bnz	l2377
  2196                           
  2197                           ;Joc.c: 30:         return 'W';
  2198  001E58  0C57               	retlw	87
  2199  001E5A                     l2377:
  2200                           
  2201                           ;Joc.c: 32:     if (direc==6) {
  2202  001E5A  0E06               	movlw	6
  2203  001E5C  1864               	xorwf	conversorJoystick@direc^0,w,c
  2204  001E5E  E101               	bnz	l2383
  2205                           
  2206                           ;Joc.c: 33:         return 'D';
  2207  001E60  0C44               	retlw	68
  2208  001E62                     l2383:
  2209                           
  2210                           ;Joc.c: 35:     if (direc==8) {
  2211  001E62  0E08               	movlw	8
  2212  001E64  1864               	xorwf	conversorJoystick@direc^0,w,c
  2213  001E66  E101               	bnz	l2389
  2214                           
  2215                           ;Joc.c: 36:         return 'S';
  2216  001E68  0C53               	retlw	83
  2217  001E6A                     l2389:
  2218                           
  2219                           ;Joc.c: 38:     if (direc==4) {
  2220  001E6A  0E04               	movlw	4
  2221  001E6C  1864               	xorwf	conversorJoystick@direc^0,w,c
  2222  001E6E  E101               	bnz	l2395
  2223                           
  2224                           ;Joc.c: 39:         return 'A';
  2225  001E70  0C41               	retlw	65
  2226  001E72                     l2395:
  2227                           
  2228                           ;Joc.c: 41:     return 0;
  2229  001E72  0C00               	retlw	0	;funcret
  2230  001E74                     __end_of_conversorJoystick:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _SIOendGame *****************
  2234 ;; Defined at:
  2235 ;;		line 28 in file "SIO.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		None
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1
  2249 ;;      Params:         0       0       0
  2250 ;;      Locals:         0       0       0
  2251 ;;      Temps:          0       0       0
  2252 ;;      Totals:         0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 2
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_motorJoc
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text5
  2264  0001AE                     __ptext5:
  2265                           	callstack 0
  2266  0001AE                     _SIOendGame:
  2267                           	callstack 27
  2268                           
  2269                           ;SIO.c: 29:     jugantSIO = 0;
  2270                           
  2271                           ;incstack = 0
  2272  0001AE  9475               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2273  0001B0  0012               	return		;funcret
  2274  0001B2                     __end_of_SIOendGame:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _SIOcheckKrebut *****************
  2278 ;; Defined at:
  2279 ;;		line 31 in file "SIO.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1
  2293 ;;      Params:         0       0       0
  2294 ;;      Locals:         0       0       0
  2295 ;;      Temps:          0       0       0
  2296 ;;      Totals:         0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_motorJoc
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text6
  2308  00009A                     __ptext6:
  2309                           	callstack 0
  2310  00009A                     _SIOcheckKrebut:
  2311                           	callstack 27
  2312                           
  2313                           ;SIO.c: 32:     return Krebut;
  2314                           
  2315                           ;incstack = 0
  2316  00009A  B275               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2317  00009C  D002               	goto	l2413
  2318  00009E  90D8               	bcf	status,0,c
  2319  0000A0  0012               	return	
  2320  0000A2                     l2413:
  2321  0000A2  80D8               	bsf	status,0,c
  2322  0000A4  0012               	return		;funcret
  2323  0000A6                     __end_of_SIOcheckKrebut:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _SIOStartGame *****************
  2327 ;; Defined at:
  2328 ;;		line 38 in file "SIO.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  usuari          1    wreg     unsigned char 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  usuari          1    5[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1
  2342 ;;      Params:         0       0       0
  2343 ;;      Locals:         1       0       0
  2344 ;;      Temps:          0       0       0
  2345 ;;      Totals:         1       0       0
  2346 ;;Total ram usage:        1 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_motorJoc
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text7
  2357  000106                     __ptext7:
  2358                           	callstack 0
  2359  000106                     _SIOStartGame:
  2360                           	callstack 27
  2361                           
  2362                           ;incstack = 0
  2363                           ;SIOStartGame@usuari stored from wreg
  2364  000106  6E64               	movwf	SIOStartGame@usuari^0,c
  2365                           
  2366                           ;SIO.c: 39:     usuariActualSIO = usuari;
  2367  000108  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2368  00010C  0012               	return		;funcret
  2369  00010E                     __end_of_SIOStartGame:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _SIONovaTecla *****************
  2373 ;; Defined at:
  2374 ;;		line 47 in file "SIO.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  tecla           1    wreg     char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  tecla           1    5[COMRAM] char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1
  2388 ;;      Params:         0       0       0
  2389 ;;      Locals:         1       0       0
  2390 ;;      Temps:          0       0       0
  2391 ;;      Totals:         1       0       0
  2392 ;;Total ram usage:        1 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 2
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_motorJoc
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text8
  2403  00010E                     __ptext8:
  2404                           	callstack 0
  2405  00010E                     _SIONovaTecla:
  2406                           	callstack 27
  2407                           
  2408                           ;incstack = 0
  2409                           ;SIONovaTecla@tecla stored from wreg
  2410  00010E  6E64               	movwf	SIONovaTecla@tecla^0,c
  2411                           
  2412                           ;SIO.c: 48:     novaTeclaSIO = tecla;
  2413  000110  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2414  000114  0012               	return		;funcret
  2415  000116                     __end_of_SIONovaTecla:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _SIONovaDireccio *****************
  2419 ;; Defined at:
  2420 ;;		line 34 in file "SIO.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  num             1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  num             1    5[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1
  2434 ;;      Params:         0       0       0
  2435 ;;      Locals:         1       0       0
  2436 ;;      Temps:          0       0       0
  2437 ;;      Totals:         1       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 2
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_motorJoc
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text9
  2449  000116                     __ptext9:
  2450                           	callstack 0
  2451  000116                     _SIONovaDireccio:
  2452                           	callstack 27
  2453                           
  2454                           ;incstack = 0
  2455                           ;SIONovaDireccio@num stored from wreg
  2456  000116  6E64               	movwf	SIONovaDireccio@num^0,c
  2457                           
  2458                           ;SIO.c: 35:     direccioSIO = num;
  2459  000118  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2460  00011C  0012               	return		;funcret
  2461  00011E                     __end_of_SIONovaDireccio:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _SIOEnviaHora *****************
  2465 ;; Defined at:
  2466 ;;		line 41 in file "SIO.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		None
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1
  2480 ;;      Params:         0       0       0
  2481 ;;      Locals:         0       0       0
  2482 ;;      Temps:          0       0       0
  2483 ;;      Totals:         0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 2
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_motorJoc
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text10
  2495  0001B2                     __ptext10:
  2496                           	callstack 0
  2497  0001B2                     _SIOEnviaHora:
  2498                           	callstack 27
  2499                           
  2500                           ;SIO.c: 42:     hi_ha_hora_sio2 = 1;
  2501                           
  2502                           ;incstack = 0
  2503  0001B2  8075               	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2504  0001B4  0012               	return		;funcret
  2505  0001B6                     __end_of_SIOEnviaHora:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _HnoJugant *****************
  2509 ;; Defined at:
  2510 ;;		line 35 in file "Hora.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		None
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1
  2524 ;;      Params:         0       0       0
  2525 ;;      Locals:         0       0       0
  2526 ;;      Temps:          0       0       0
  2527 ;;      Totals:         0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_motorJoc
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text11
  2539  0001B6                     __ptext11:
  2540                           	callstack 0
  2541  0001B6                     _HnoJugant:
  2542                           	callstack 27
  2543                           
  2544                           ;Hora.c: 36:     jugant = 0;
  2545                           
  2546                           ;incstack = 0
  2547  0001B6  9C75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2548  0001B8  0012               	return		;funcret
  2549  0001BA                     __end_of_HnoJugant:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _HNouSegon *****************
  2553 ;; Defined at:
  2554 ;;		line 23 in file "Hora.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;		None               void
  2561 ;; Registers used:
  2562 ;;		status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1
  2568 ;;      Params:         0       0       0
  2569 ;;      Locals:         0       0       0
  2570 ;;      Temps:          0       0       0
  2571 ;;      Totals:         0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 2
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_motorJoc
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text12
  2583  0000A6                     __ptext12:
  2584                           	callstack 0
  2585  0000A6                     _HNouSegon:
  2586                           	callstack 27
  2587                           
  2588                           ;Hora.c: 24:     return nouSegon;
  2589                           
  2590                           ;incstack = 0
  2591  0000A6  BA75               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2592  0000A8  D002               	goto	l2357
  2593  0000AA  90D8               	bcf	status,0,c
  2594  0000AC  0012               	return	
  2595  0000AE                     l2357:
  2596  0000AE  80D8               	bsf	status,0,c
  2597  0000B0  0012               	return		;funcret
  2598  0000B2                     __end_of_HNouSegon:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _HJugant *****************
  2602 ;; Defined at:
  2603 ;;		line 38 in file "Hora.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		None
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1
  2617 ;;      Params:         0       0       0
  2618 ;;      Locals:         0       0       0
  2619 ;;      Temps:          0       0       0
  2620 ;;      Totals:         0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 2
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_motorJoc
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text13
  2632  000196                     __ptext13:
  2633                           	callstack 0
  2634  000196                     _HJugant:
  2635                           	callstack 27
  2636                           
  2637                           ;Hora.c: 39:     jugant = 1;
  2638                           
  2639                           ;incstack = 0
  2640  000196  8C75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2641                           
  2642                           ;Hora.c: 40:     tempsAcabat = 0;
  2643  000198  9875               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2644  00019A  0012               	return		;funcret
  2645  00019C                     __end_of_HJugant:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _HGetTime *****************
  2649 ;; Defined at:
  2650 ;;		line 31 in file "Hora.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      PTR unsigned char 
  2657 ;; Registers used:
  2658 ;;		wreg
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1
  2664 ;;      Params:         2       0       0
  2665 ;;      Locals:         0       0       0
  2666 ;;      Temps:          0       0       0
  2667 ;;      Totals:         2       0       0
  2668 ;;Total ram usage:        2 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 2
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_motorJoc
  2675 ;;		_motorSIO
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text14
  2680  0001BA                     __ptext14:
  2681                           	callstack 0
  2682  0001BA                     _HGetTime:
  2683                           	callstack 27
  2684                           
  2685                           ;Hora.c: 32:     return hora;
  2686                           
  2687                           ;incstack = 0
  2688  0001BA  0E56               	movlw	_hora& (0+255)
  2689  0001BC  0012               	return		;funcret
  2690  0001BE                     __end_of_HGetTime:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _HClearNouSegon *****************
  2694 ;; Defined at:
  2695 ;;		line 27 in file "Hora.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		None
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1
  2709 ;;      Params:         0       0       0
  2710 ;;      Locals:         0       0       0
  2711 ;;      Temps:          0       0       0
  2712 ;;      Totals:         0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 2
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_motorJoc
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text15
  2724  0001BE                     __ptext15:
  2725                           	callstack 0
  2726  0001BE                     _HClearNouSegon:
  2727                           	callstack 27
  2728                           
  2729                           ;Hora.c: 28:     nouSegon = 0;
  2730                           
  2731                           ;incstack = 0
  2732  0001BE  9A75               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2733  0001C0  0012               	return		;funcret
  2734  0001C2                     __end_of_HClearNouSegon:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _motorHora *****************
  2738 ;; Defined at:
  2739 ;;		line 46 in file "Hora.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1
  2753 ;;      Params:         0       0       0
  2754 ;;      Locals:         0       0       0
  2755 ;;      Temps:          2       0       0
  2756 ;;      Totals:         2       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 3
  2760 ;; This function calls:
  2761 ;;		_TiGetTics
  2762 ;;		_TiResetTics
  2763 ;;		_playAltaveu
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text16
  2770  001908                     __ptext16:
  2771                           	callstack 0
  2772  001908                     _motorHora:
  2773                           	callstack 27
  2774                           
  2775                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2776                           
  2777                           ;incstack = 0
  2778  001908  D038               	goto	l5353
  2779  00190A                     l5303:
  2780                           
  2781                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2782  00190A  5016               	movf	_timerHora^0,w,c
  2783  00190C  EC15  F00F         	call	_TiGetTics
  2784  001910  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2785  001912  0012               	return	
  2786  001914  ECF9  F007         	call	PL78	;call to abstracted procedure
  2787  001918  A0D8               	btfss	status,0,c
  2788  00191A  0012               	return	
  2789                           
  2790                           ;Hora.c: 52:     TiResetTics(timerHora);
  2791  00191C  5016               	movf	_timerHora^0,w,c
  2792  00191E  ECBD  F00F         	call	_TiResetTics
  2793                           
  2794                           ;Hora.c: 53:     if(jugant){
  2795  001922  AC75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2796  001924  D028               	goto	l5349
  2797                           
  2798                           ;Hora.c: 54:       nouSegon = 1;
  2799  001926  8A75               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2800                           
  2801                           ;Hora.c: 56:      hora[4]--;
  2802  001928  065A               	decf	(_hora+4)^0,f,c
  2803                           
  2804                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2805  00192A  0E2F               	movlw	47
  2806  00192C  185A               	xorwf	(_hora+4)^0,w,c
  2807  00192E  E103               	bnz	l5319
  2808                           
  2809                           ;Hora.c: 58:       hora[4] = '9';
  2810  001930  0E39               	movlw	57
  2811  001932  6E5A               	movwf	(_hora+4)^0,c
  2812                           
  2813                           ;Hora.c: 59:       hora[3]--;
  2814  001934  0659               	decf	(_hora+3)^0,f,c
  2815  001936                     l5319:
  2816                           
  2817                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2818  001936  0E2F               	movlw	47
  2819  001938  1859               	xorwf	(_hora+3)^0,w,c
  2820  00193A  E103               	bnz	l5325
  2821                           
  2822                           ;Hora.c: 63:       hora[3] = '5';
  2823  00193C  0E35               	movlw	53
  2824  00193E  6E59               	movwf	(_hora+3)^0,c
  2825                           
  2826                           ;Hora.c: 64:       hora[1]--;
  2827  001940  0657               	decf	(_hora+1)^0,f,c
  2828  001942                     l5325:
  2829                           
  2830                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2831  001942  0E2F               	movlw	47
  2832  001944  1857               	xorwf	(_hora+1)^0,w,c
  2833  001946  E103               	bnz	l5331
  2834                           
  2835                           ;Hora.c: 68:       hora[1] = '9';
  2836  001948  0E39               	movlw	57
  2837  00194A  6E57               	movwf	(_hora+1)^0,c
  2838                           
  2839                           ;Hora.c: 69:       hora[0]--;
  2840  00194C  0656               	decf	_hora^0,f,c
  2841  00194E                     l5331:
  2842                           
  2843                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2844  00194E  0E30               	movlw	48
  2845  001950  1856               	xorwf	_hora^0,w,c
  2846  001952  E10A               	bnz	l5341
  2847  001954  0E30               	movlw	48
  2848  001956  1857               	xorwf	(_hora+1)^0,w,c
  2849  001958  E107               	bnz	l5341
  2850  00195A  0E30               	movlw	48
  2851  00195C  1859               	xorwf	(_hora+3)^0,w,c
  2852  00195E  E104               	bnz	l5341
  2853  001960  0E30               	movlw	48
  2854  001962  185A               	xorwf	(_hora+4)^0,w,c
  2855  001964  E101               	bnz	l5341
  2856                           
  2857                           ;Hora.c: 73:       tempsAcabat = 1;
  2858  001966  8875               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2859  001968                     l5341:
  2860                           
  2861                           ;Hora.c: 76:      segons++;
  2862  001968  2A15               	incf	_segons^0,f,c
  2863                           
  2864                           ;Hora.c: 77:      if(segons > 59){
  2865  00196A  0E3B               	movlw	59
  2866  00196C  6415               	cpfsgt	_segons^0,c
  2867  00196E  D003               	goto	l5349
  2868                           
  2869                           ;Hora.c: 78:       playAltaveu();
  2870  001970  ECE1  F000         	call	_playAltaveu	;wreg free
  2871                           
  2872                           ;Hora.c: 79:       segons = 0;
  2873  001974  6A15               	clrf	_segons^0,c
  2874  001976                     l5349:
  2875                           
  2876                           ;Hora.c: 82:     state = 0;
  2877  001976  6A14               	clrf	motorHora@state^0,c
  2878  001978  0012               	return	
  2879  00197A                     l5353:
  2880  00197A  5014               	movf	motorHora@state^0,w,c
  2881  00197C  6E6B               	movwf	??_motorHora^0,c
  2882  00197E  6A6C               	clrf	(??_motorHora+1)^0,c
  2883                           
  2884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2885                           ; Switch size 1, requested type "space"
  2886                           ; Number of cases is 1, Range of values is 0 to 0
  2887                           ; switch strategies available:
  2888                           ; Name         Instructions Cycles
  2889                           ; simple_byte            4     3 (average)
  2890                           ;	Chosen strategy is simple_byte
  2891  001980  506C               	movf	(??_motorHora+1)^0,w,c
  2892  001982  A4D8               	btfss	status,2,c
  2893  001984  0012               	return	
  2894                           
  2895                           ; Switch size 1, requested type "space"
  2896                           ; Number of cases is 1, Range of values is 0 to 0
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte            4     3 (average)
  2900                           ;	Chosen strategy is simple_byte
  2901  001986  506B               	movf	??_motorHora^0,w,c
  2902  001988  E0C0               	bz	l5303
  2903  00198A  0012               	return		;funcret
  2904  00198C                     __end_of_motorHora:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _playAltaveu *****************
  2908 ;; Defined at:
  2909 ;;		line 13 in file "Altaveu.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		None
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1
  2923 ;;      Params:         0       0       0
  2924 ;;      Locals:         0       0       0
  2925 ;;      Temps:          0       0       0
  2926 ;;      Totals:         0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_motorHora
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text17
  2938  0001C2                     __ptext17:
  2939                           	callstack 0
  2940  0001C2                     _playAltaveu:
  2941                           	callstack 27
  2942                           
  2943                           ;Altaveu.c: 14:     reproduir = 1;
  2944                           
  2945                           ;incstack = 0
  2946  0001C2  8676               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2947  0001C4  0012               	return		;funcret
  2948  0001C6                     __end_of_playAltaveu:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _motorAltaveu *****************
  2952 ;; Defined at:
  2953 ;;		line 16 in file "Altaveu.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1
  2967 ;;      Params:         0       0       0
  2968 ;;      Locals:         0       0       0
  2969 ;;      Temps:          3       0       0
  2970 ;;      Totals:         3       0       0
  2971 ;;Total ram usage:        3 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 3
  2974 ;; This function calls:
  2975 ;;		_TiGetTics
  2976 ;;		_TiResetTics
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text18
  2983  001876                     __ptext18:
  2984                           	callstack 0
  2985  001876                     _motorAltaveu:
  2986                           	callstack 27
  2987                           
  2988                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2989                           
  2990                           ;incstack = 0
  2991  001876  D02F               	goto	l5955
  2992  001878                     l862:
  2993                           
  2994                           ;Altaveu.c: 21:    if (reproduir) {
  2995  001878  A676               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2996  00187A  0012               	return	
  2997                           
  2998                           ;Altaveu.c: 22:     nota = 1;
  2999  00187C  0E01               	movlw	1
  3000  00187E  6E26               	movwf	_nota^0,c
  3001                           
  3002                           ;Altaveu.c: 23:     copsNota = 0;
  3003  001880  6A24               	clrf	_copsNota^0,c
  3004                           
  3005                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  3006  001882  5025               	movf	_timerAltaveu^0,w,c
  3007  001884  ECBD  F00F         	call	_TiResetTics
  3008                           
  3009                           ;Altaveu.c: 25:     state = 1;
  3010  001888  0E01               	movlw	1
  3011  00188A  6E23               	movwf	motorAltaveu@state^0,c
  3012  00188C  0C01               	retlw	1
  3013  00188E                     l5923:
  3014                           
  3015                           ;Altaveu.c: 29:    if (nota > 5) {
  3016  00188E  0E05               	movlw	5
  3017  001890  6426               	cpfsgt	_nota^0,c
  3018  001892  D003               	goto	l5929
  3019                           
  3020                           ;Altaveu.c: 30:     reproduir = 0;
  3021  001894  9676               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3022  001896                     l5927:
  3023                           
  3024                           ;Altaveu.c: 31:     state--;
  3025  001896  0623               	decf	motorAltaveu@state^0,f,c
  3026                           
  3027                           ;Altaveu.c: 32:    }
  3028  001898  0012               	return	
  3029  00189A                     l5929:
  3030  00189A  0EA8               	movlw	168
  3031  00189C  1824               	xorwf	_copsNota^0,w,c
  3032  00189E  E103               	bnz	l5935
  3033                           
  3034                           ;Altaveu.c: 34:     nota++;
  3035  0018A0  2A26               	incf	_nota^0,f,c
  3036                           
  3037                           ;Altaveu.c: 35:     copsNota = 0;
  3038  0018A2  6A24               	clrf	_copsNota^0,c
  3039                           
  3040                           ;Altaveu.c: 36:    }
  3041  0018A4  0012               	return	
  3042  0018A6                     l5935:
  3043  0018A6  5025               	movf	_timerAltaveu^0,w,c
  3044  0018A8  EC15  F00F         	call	_TiGetTics
  3045  0018AC  D821               	call	PL24	;call to abstracted procedure
  3046  0018AE  B0D8               	btfsc	status,0,c
  3047  0018B0  0012               	return	
  3048                           
  3049                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3050  0018B2  808A               	bsf	138,0,c	;volatile
  3051                           
  3052                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3053  0018B4  5025               	movf	_timerAltaveu^0,w,c
  3054  0018B6  ECBD  F00F         	call	_TiResetTics
  3055                           
  3056                           ;Altaveu.c: 40:     state++;
  3057  0018BA  2A23               	incf	motorAltaveu@state^0,f,c
  3058  0018BC  0012               	return	
  3059  0018BE                     l5943:
  3060                           
  3061                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3062  0018BE  5025               	movf	_timerAltaveu^0,w,c
  3063  0018C0  EC15  F00F         	call	_TiGetTics
  3064  0018C4  D815               	call	PL24	;call to abstracted procedure
  3065  0018C6  B0D8               	btfsc	status,0,c
  3066  0018C8  0012               	return	
  3067                           
  3068                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3069  0018CA  908A               	bcf	138,0,c	;volatile
  3070                           
  3071                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3072  0018CC  5025               	movf	_timerAltaveu^0,w,c
  3073  0018CE  ECBD  F00F         	call	_TiResetTics
  3074                           
  3075                           ;Altaveu.c: 47:     copsNota++;
  3076  0018D2  2A24               	incf	_copsNota^0,f,c
  3077  0018D4  D7E0               	goto	l5927
  3078  0018D6                     l5955:
  3079  0018D6  5023               	movf	motorAltaveu@state^0,w,c
  3080  0018D8  6E6B               	movwf	??_motorAltaveu^0,c
  3081  0018DA  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3082                           
  3083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3084                           ; Switch size 1, requested type "space"
  3085                           ; Number of cases is 1, Range of values is 0 to 0
  3086                           ; switch strategies available:
  3087                           ; Name         Instructions Cycles
  3088                           ; simple_byte            4     3 (average)
  3089                           ;	Chosen strategy is simple_byte
  3090  0018DC  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3091  0018DE  A4D8               	btfss	status,2,c
  3092  0018E0  0012               	return	
  3093                           
  3094                           ; Switch size 1, requested type "space"
  3095                           ; Number of cases is 3, Range of values is 0 to 2
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte           10     6 (average)
  3099                           ;	Chosen strategy is simple_byte
  3100  0018E2  506B               	movf	??_motorAltaveu^0,w,c
  3101  0018E4  E0C9               	bz	l862
  3102  0018E6  0A01               	xorlw	1	; case 1
  3103  0018E8  E0D2               	bz	l5923
  3104  0018EA  0A03               	xorlw	3	; case 2
  3105  0018EC  E0E8               	bz	l5943
  3106  0018EE  0012               	return		;funcret
  3107  0018F0                     __end_of_motorAltaveu:
  3108                           	callstack 0
  3109  0018F0                     PL24:
  3110                           	callstack 27
  3111  0018F0  5026               	movf	_nota^0,w,c
  3112  0018F2  6E6B               	movwf	??_motorAltaveu^0,c
  3113  0018F4  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3114  0018F6  5064               	movf	?_TiGetTics^0,w,c
  3115  0018F8  5C6B               	subwf	??_motorAltaveu^0,w,c
  3116  0018FA  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3117  0018FC  0A80               	xorlw	128
  3118  0018FE  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  3119  001900  5065               	movf	(?_TiGetTics+1)^0,w,c
  3120  001902  0A80               	xorlw	128
  3121  001904  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  3122  001906  0012               	return	
  3123  001908                     __end_ofPL24:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _menu *****************
  3127 ;; Defined at:
  3128 ;;		line 42 in file "Menu.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1
  3142 ;;      Params:         0       0       0
  3143 ;;      Locals:         0       0       0
  3144 ;;      Temps:          0       5       0
  3145 ;;      Totals:         0       5       0
  3146 ;;Total ram usage:        5 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 6
  3149 ;; This function calls:
  3150 ;;		_CToAConverteix
  3151 ;;		_CToAHaAcabat
  3152 ;;		_CToAobtenir
  3153 ;;		_GLCDMostraMenu
  3154 ;;		_HActualitzaHora
  3155 ;;		_JJuguem
  3156 ;;		_JendGame
  3157 ;;		_JnovaDireccio
  3158 ;;		_JnovaTecla
  3159 ;;		_LcClear
  3160 ;;		_LcGotoXY
  3161 ;;		_LcLliure
  3162 ;;		_LcNewString
  3163 ;;		_LcPutChar
  3164 ;;		_LcScroll
  3165 ;;		_NoFerMenu
  3166 ;;		_SIOHaAcabatPuntuacions
  3167 ;;		_SMSoff
  3168 ;;		_SMSon
  3169 ;;		_SiFerMenu
  3170 ;;		_TiGetTics
  3171 ;;		_TiResetTics
  3172 ;;		_URegister
  3173 ;;		_UcheckExists
  3174 ;;		_UcheckExistsGetError
  3175 ;;		_UcheckExistsNotFinished
  3176 ;;		_UenviaChar
  3177 ;;		_UenviaPas
  3178 ;;		_UgetNumUsuaris
  3179 ;;		_UgetScore
  3180 ;;		_UgetTop5
  3181 ;;		_UgetUserName
  3182 ;;		_UshowUsersCalculat
  3183 ;;		_calculateShowUsers
  3184 ;;		_checkHoraAcabat
  3185 ;;		_getArrayShowUsers
  3186 ;;		_miraPassword
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text19
  3193  0002F0                     __ptext19:
  3194                           	callstack 0
  3195  0002F0                     _menu:
  3196                           	callstack 24
  3197                           
  3198                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3199                           
  3200                           ;incstack = 0
  3201  0002F0  D322               	goto	l7169
  3202  0002F2                     l6623:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;Menu.c: 46:    LcClear();
  3206  0002F2  EC70  F00F         	call	_LcClear	;wreg free
  3207                           
  3208                           ;Menu.c: 47:    LcNewString(loginText);
  3209  0002F6  0ED2               	movlw	low _loginText
  3210  0002F8  6E67               	movwf	LcNewString@new_s^0,c
  3211  0002FA  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3212  0002FC  EC77  F000         	call	_LcNewString	;wreg free
  3213                           
  3214                           ;Menu.c: 48:    state = 1;
  3215  000300  0E01               	movlw	1
  3216  000302  6E2E               	movwf	menu@state^0,c
  3217                           
  3218                           ;Menu.c: 49:   break;
  3219  000304  0C01               	retlw	1
  3220  000306                     l6629:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;Menu.c: 51:    if (LcLliure()) {
  3224  000306  EC7D  F000         	call	_LcLliure	;wreg free
  3225  00030A  A0D8               	btfss	status,0,c
  3226  00030C  0012               	return	
  3227                           
  3228                           ;Menu.c: 52:     LcGotoXY(0,1);
  3229  00030E  DB95               	call	PL36	;call to abstracted procedure
  3230  000310  ECBE  F00E         	call	_LcGotoXY
  3231                           
  3232                           ;Menu.c: 53:     LcNewString(registerText);
  3233  000314  0EC7               	movlw	low _registerText
  3234  000316  6E67               	movwf	LcNewString@new_s^0,c
  3235  000318  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3236  00031A  EC77  F000         	call	_LcNewString	;wreg free
  3237                           
  3238                           ;Menu.c: 54:     NovaTecla = -1;
  3239  00031E  6852               	setf	_NovaTecla^0,c
  3240                           
  3241                           ;Menu.c: 55:     state = 2;
  3242  000320  0E02               	movlw	2
  3243  000322  6E2E               	movwf	menu@state^0,c
  3244                           
  3245                           ;Menu.c: 57:   break;
  3246                           
  3247                           ;Menu.c: 56:    }
  3248  000324  0C02               	retlw	2
  3249  000326                     l6639:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3253  000326  0452               	decf	_NovaTecla^0,w,c
  3254  000328  E104               	bnz	l6645
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;Menu.c: 60:     loginNOTRegister = 1;
  3258  00032A  8077               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3259  00032C                     l6643:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;Menu.c: 61:     state = 3;
  3263  00032C  0E03               	movlw	3
  3264  00032E  6E2E               	movwf	menu@state^0,c
  3265                           
  3266                           ;Menu.c: 62:    }
  3267  000330  0C03               	retlw	3
  3268  000332                     l6645:
  3269                           
  3270                           ; BSR set to: 0
  3271  000332  0E02               	movlw	2
  3272  000334  1852               	xorwf	_NovaTecla^0,w,c
  3273  000336  A4D8               	btfss	status,2,c
  3274  000338  0012               	return	
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;Menu.c: 64:     loginNOTRegister = 0;
  3278  00033A  9077               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3279  00033C  D7F7               	goto	l6643
  3280  00033E                     l511:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;Menu.c: 69:    NovaTecla = -1;
  3284  00033E  6852               	setf	_NovaTecla^0,c
  3285                           
  3286                           ;Menu.c: 70:    novaLletra = -1;
  3287  000340  6851               	setf	_novaLletra^0,c
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;Menu.c: 71:    LcClear();
  3291  000342  EC70  F00F         	call	_LcClear	;wreg free
  3292                           
  3293                           ;Menu.c: 72:    LcNewString("USER: ");
  3294  000346  0EE7               	movlw	low STR_1
  3295  000348  DB6D               	call	PL10	;call to abstracted procedure
  3296  00034A  EC77  F000         	call	_LcNewString	;wreg free
  3297                           
  3298                           ;Menu.c: 73:    state = 4;
  3299  00034E  0E04               	movlw	4
  3300  000350  6E2E               	movwf	menu@state^0,c
  3301                           
  3302                           ;Menu.c: 74:   break;
  3303  000352  0C04               	retlw	4
  3304  000354                     l6657:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;Menu.c: 76:    if (LcLliure()) {
  3308  000354  EC7D  F000         	call	_LcLliure	;wreg free
  3309  000358  A0D8               	btfss	status,0,c
  3310  00035A  0012               	return	
  3311                           
  3312                           ;Menu.c: 77:     LcGotoXY(0,1);
  3313  00035C  DB6E               	call	PL36	;call to abstracted procedure
  3314  00035E  ECBE  F00E         	call	_LcGotoXY
  3315                           
  3316                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3317  000362  0EE0               	movlw	low STR_2
  3318  000364  DB5F               	call	PL10	;call to abstracted procedure
  3319  000366  EC77  F000         	call	_LcNewString	;wreg free
  3320                           
  3321                           ;Menu.c: 79:     state = 5;
  3322  00036A  0E05               	movlw	5
  3323  00036C  6E2E               	movwf	menu@state^0,c
  3324  00036E  0C05               	retlw	5
  3325  000370                     l6665:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;Menu.c: 83:    if (LcLliure()) {
  3329  000370  EC7D  F000         	call	_LcLliure	;wreg free
  3330  000374  A0D8               	btfss	status,0,c
  3331  000376  0012               	return	
  3332                           
  3333                           ;Menu.c: 84:     LcGotoXY(6,0);
  3334  000378  0E00               	movlw	0
  3335  00037A  6E6C               	movwf	LcGotoXY@Row^0,c
  3336  00037C  0E06               	movlw	6
  3337  00037E  ECBE  F00E         	call	_LcGotoXY
  3338                           
  3339                           ;Menu.c: 85:     SMSon();
  3340  000382  ECCE  F000         	call	_SMSon	;wreg free
  3341                           
  3342                           ;Menu.c: 86:     tmp =0;
  3343  000386  6A33               	clrf	_tmp^0,c
  3344  000388                     l6673:
  3345                           
  3346                           ;Menu.c: 87:     state = 6;
  3347  000388  0E06               	movlw	6
  3348  00038A  6E2E               	movwf	menu@state^0,c
  3349  00038C  0C06               	retlw	6
  3350  00038E                     l6675:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3354  00038E  5051               	movf	_novaLletra^0,w,c
  3355  000390  0A80               	xorlw	128
  3356  000392  0F60               	addlw	-160
  3357  000394  E30E               	bnc	l6685
  3358                           
  3359                           ; BSR set to: 0
  3360  000396  0E0A               	movlw	10
  3361  000398  1852               	xorwf	_NovaTecla^0,w,c
  3362  00039A  E00B               	bz	l6685
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3366  00039C  5051               	movf	_novaLletra^0,w,c
  3367  00039E  EC02  F00E         	call	_LcPutChar
  3368                           
  3369                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3370  0003A2  C033  F064         	movff	_tmp,UenviaChar@pos
  3371  0003A6  5051               	movf	_novaLletra^0,w,c
  3372  0003A8  EC36  F000         	call	_UenviaChar
  3373  0003AC                     l6683:
  3374                           
  3375                           ;Menu.c: 94:     state = 7;
  3376  0003AC  0E07               	movlw	7
  3377  0003AE  6E2E               	movwf	menu@state^0,c
  3378                           
  3379                           ;Menu.c: 95:    }
  3380  0003B0  0C07               	retlw	7
  3381  0003B2                     l6685:
  3382                           
  3383                           ; BSR set to: 0
  3384  0003B2  0E0B               	movlw	11
  3385  0003B4  1852               	xorwf	_NovaTecla^0,w,c
  3386  0003B6  E0FA               	bz	l6683
  3387  0003B8  0012               	return	
  3388  0003BA                     l6689:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3392  0003BA  0E07               	movlw	7
  3393  0003BC  1833               	xorwf	_tmp^0,w,c
  3394  0003BE  E005               	bz	l6701
  3395                           
  3396                           ; BSR set to: 0
  3397  0003C0  0E0B               	movlw	11
  3398  0003C2  1852               	xorwf	_NovaTecla^0,w,c
  3399  0003C4  E002               	bz	l6701
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;Menu.c: 102:     tmp++;
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;Menu.c: 103:     NovaTecla = -1;
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;Menu.c: 104:     novaLletra = -1;
  3409  0003C6  DB51               	call	PL96	;call to abstracted procedure
  3410  0003C8  D7DF               	goto	l6673
  3411  0003CA                     l6701:
  3412                           
  3413                           ; BSR set to: 0
  3414  0003CA  0E07               	movlw	7
  3415  0003CC  1833               	xorwf	_tmp^0,w,c
  3416  0003CE  E004               	bz	u7080
  3417                           
  3418                           ; BSR set to: 0
  3419  0003D0  0E0B               	movlw	11
  3420  0003D2  1852               	xorwf	_NovaTecla^0,w,c
  3421  0003D4  A4D8               	btfss	status,2,c
  3422  0003D6  0012               	return	
  3423  0003D8                     u7080:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;Menu.c: 108:     LcGotoXY(6,1);
  3427  0003D8  0E01               	movlw	1
  3428  0003DA  6E6C               	movwf	LcGotoXY@Row^0,c
  3429  0003DC  0E06               	movlw	6
  3430  0003DE  ECBE  F00E         	call	_LcGotoXY
  3431                           
  3432                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3433  0003E2  C033  F064         	movff	_tmp,UenviaChar@pos
  3434  0003E6  0E00               	movlw	0
  3435  0003E8  EC36  F000         	call	_UenviaChar
  3436                           
  3437                           ;Menu.c: 110:     NovaTecla = -1;
  3438                           
  3439                           ;Menu.c: 111:     novaLletra = -1;
  3440                           
  3441                           ;Menu.c: 112:     tmp = 0;
  3442  0003EC  DB3A               	call	PL94	;call to abstracted procedure
  3443  0003EE                     l6715:
  3444                           
  3445                           ;Menu.c: 113:     state = 8;
  3446  0003EE  0E08               	movlw	8
  3447  0003F0  6E2E               	movwf	menu@state^0,c
  3448  0003F2  0C08               	retlw	8
  3449  0003F4                     l6717:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3453  0003F4  5051               	movf	_novaLletra^0,w,c
  3454  0003F6  0A80               	xorlw	128
  3455  0003F8  0F60               	addlw	-160
  3456  0003FA  E30E               	bnc	l6727
  3457                           
  3458                           ; BSR set to: 0
  3459  0003FC  0E0A               	movlw	10
  3460  0003FE  1852               	xorwf	_NovaTecla^0,w,c
  3461  000400  E00B               	bz	l6727
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3465  000402  5051               	movf	_novaLletra^0,w,c
  3466  000404  EC02  F00E         	call	_LcPutChar
  3467                           
  3468                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3469  000408  C033  F064         	movff	_tmp,UenviaPas@pos
  3470  00040C  5051               	movf	_novaLletra^0,w,c
  3471  00040E  EC2E  F000         	call	_UenviaPas
  3472  000412                     l6725:
  3473                           
  3474                           ;Menu.c: 120:     state = 9;
  3475  000412  0E09               	movlw	9
  3476  000414  6E2E               	movwf	menu@state^0,c
  3477                           
  3478                           ;Menu.c: 121:    }
  3479  000416  0C09               	retlw	9
  3480  000418                     l6727:
  3481                           
  3482                           ; BSR set to: 0
  3483  000418  0E0B               	movlw	11
  3484  00041A  1852               	xorwf	_NovaTecla^0,w,c
  3485  00041C  E0FA               	bz	l6725
  3486  00041E  0012               	return	
  3487  000420                     l6731:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3491  000420  0E07               	movlw	7
  3492  000422  1833               	xorwf	_tmp^0,w,c
  3493  000424  E005               	bz	l6743
  3494                           
  3495                           ; BSR set to: 0
  3496  000426  0E0B               	movlw	11
  3497  000428  1852               	xorwf	_NovaTecla^0,w,c
  3498  00042A  E002               	bz	l6743
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;Menu.c: 128:     tmp++;
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;Menu.c: 129:     NovaTecla = -1;
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;Menu.c: 130:     novaLletra = -1;
  3508  00042C  DB1E               	call	PL96	;call to abstracted procedure
  3509  00042E  D7DF               	goto	l6715
  3510  000430                     l6743:
  3511                           
  3512                           ; BSR set to: 0
  3513  000430  0E07               	movlw	7
  3514  000432  1833               	xorwf	_tmp^0,w,c
  3515  000434  E004               	bz	u7150
  3516                           
  3517                           ; BSR set to: 0
  3518  000436  0E0B               	movlw	11
  3519  000438  1852               	xorwf	_NovaTecla^0,w,c
  3520  00043A  A4D8               	btfss	status,2,c
  3521  00043C  0012               	return	
  3522  00043E                     u7150:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3526  00043E  C033  F064         	movff	_tmp,UenviaPas@pos
  3527  000442  0E00               	movlw	0
  3528  000444  EC2E  F000         	call	_UenviaPas
  3529                           
  3530                           ;Menu.c: 135:     NovaTecla = -1;
  3531                           
  3532                           ;Menu.c: 136:     novaLletra = -1;
  3533                           
  3534                           ;Menu.c: 137:     tmp = 0;
  3535  000448  DB0C               	call	PL94	;call to abstracted procedure
  3536                           
  3537                           ;Menu.c: 138:     UcheckExists();
  3538  00044A  ECE9  F000         	call	_UcheckExists	;wreg free
  3539                           
  3540                           ;Menu.c: 139:     SMSoff();
  3541  00044E  ECD1  F000         	call	_SMSoff	;wreg free
  3542                           
  3543                           ;Menu.c: 140:     state = 10;
  3544  000452  0E0A               	movlw	10
  3545  000454  6E2E               	movwf	menu@state^0,c
  3546  000456  0C0A               	retlw	10
  3547  000458                     l6761:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3551  000458  EC65  F000         	call	_UcheckExistsNotFinished	;wreg free
  3552  00045C  B0D8               	btfsc	status,0,c
  3553  00045E  0012               	return	
  3554                           
  3555                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3556  000460  ECE7  F000         	call	_UcheckExistsGetError	;wreg free
  3557  000464  6E30               	movwf	_indexUsuari^0,c
  3558                           
  3559                           ;Menu.c: 146:     state = 11;
  3560  000466  0E0B               	movlw	11
  3561  000468  6E2E               	movwf	menu@state^0,c
  3562  00046A  0C0B               	retlw	11
  3563  00046C                     l538:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3567  00046C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3568  00046E  D006               	goto	l539
  3569                           
  3570                           ; BSR set to: 0
  3571  000470  2830               	incf	_indexUsuari^0,w,c
  3572  000472  E104               	bnz	l539
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;Menu.c: 151:     URegister();
  3576  000474  ECEB  F000         	call	_URegister	;wreg free
  3577  000478                     l6771:
  3578                           
  3579                           ;Menu.c: 152:     state = 0;
  3580  000478  6A2E               	clrf	menu@state^0,c
  3581                           
  3582                           ;Menu.c: 153:    }
  3583  00047A  0012               	return	
  3584  00047C                     l539:
  3585                           
  3586                           ; BSR set to: 0
  3587  00047C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3588                           
  3589                           ; BSR set to: 0
  3590  00047E  BE30               	btfsc	_indexUsuari^0,7,c
  3591  000480  D006               	goto	l541
  3592                           
  3593                           ; BSR set to: 0
  3594  000482  EC3A  F00F         	call	_miraPassword	;wreg free
  3595  000486  E303               	bnc	l541
  3596  000488                     u7210:
  3597                           
  3598                           ;Menu.c: 155:     state = 12;
  3599  000488  0E0C               	movlw	12
  3600  00048A  6E2E               	movwf	menu@state^0,c
  3601                           
  3602                           ;Menu.c: 156:    }
  3603  00048C  0C0C               	retlw	12
  3604  00048E                     l541:
  3605  00048E  A077               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3606  000490  D002               	goto	u7230
  3607  000492  2830               	incf	_indexUsuari^0,w,c
  3608  000494  E0F1               	bz	l6771
  3609  000496                     u7230:
  3610  000496  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3611  000498  D002               	goto	u7250
  3612  00049A  AE30               	btfss	_indexUsuari^0,7,c
  3613  00049C  D7ED               	goto	l6771
  3614  00049E                     u7250:
  3615  00049E  EC3A  F00F         	call	_miraPassword	;wreg free
  3616  0004A2  E3EA               	bnc	l6771
  3617  0004A4  0012               	return	
  3618  0004A6                     l6785:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;Menu.c: 162:    LcClear();
  3622  0004A6  EC70  F00F         	call	_LcClear	;wreg free
  3623                           
  3624                           ;Menu.c: 163:    SiFerMenu();
  3625  0004AA  ECED  F000         	call	_SiFerMenu	;wreg free
  3626                           
  3627                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3628  0004AE  5031               	movf	_menuDalt^0,w,c
  3629  0004B0  EC6B  F000         	call	_GLCDMostraMenu
  3630                           
  3631                           ;Menu.c: 165:    novaDireccio = -1;
  3632  0004B4  6850               	setf	_novaDireccio^0,c
  3633                           
  3634                           ;Menu.c: 166:    NovaTecla = -1;
  3635  0004B6  6852               	setf	_NovaTecla^0,c
  3636                           
  3637                           ;Menu.c: 167:    state = 13;
  3638  0004B8  0E0D               	movlw	13
  3639  0004BA  6E2E               	movwf	menu@state^0,c
  3640                           
  3641                           ;Menu.c: 168:   break;
  3642  0004BC  0C0D               	retlw	13
  3643  0004BE                     l6797:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3647  0004BE  0E08               	movlw	8
  3648  0004C0  1850               	xorwf	_novaDireccio^0,w,c
  3649  0004C2  E105               	bnz	l6805
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3653  0004C4  0E04               	movlw	4
  3654  0004C6  6031               	cpfslt	_menuDalt^0,c
  3655  0004C8  D7DF               	goto	u7210
  3656                           
  3657                           ; BSR set to: 0
  3658  0004CA  2A31               	incf	_menuDalt^0,f,c
  3659  0004CC  D7DD               	goto	u7210
  3660  0004CE                     l6805:
  3661                           
  3662                           ; BSR set to: 0
  3663  0004CE  0E02               	movlw	2
  3664  0004D0  1850               	xorwf	_novaDireccio^0,w,c
  3665  0004D2  E104               	bnz	l6813
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3669  0004D4  5031               	movf	_menuDalt^0,w,c
  3670  0004D6  E0D8               	bz	u7210
  3671                           
  3672                           ; BSR set to: 0
  3673  0004D8  0631               	decf	_menuDalt^0,f,c
  3674  0004DA  D7D6               	goto	u7210
  3675  0004DC                     l6813:
  3676                           
  3677                           ; BSR set to: 0
  3678  0004DC  0E0B               	movlw	11
  3679  0004DE  1852               	xorwf	_NovaTecla^0,w,c
  3680  0004E0  E10E               	bnz	l6825
  3681                           
  3682                           ; BSR set to: 0
  3683  0004E2  0E03               	movlw	3
  3684  0004E4  1831               	xorwf	_menuDalt^0,w,c
  3685  0004E6  E10B               	bnz	l6825
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;Menu.c: 179:     NoFerMenu();
  3689  0004E8  ECF1  F000         	call	_NoFerMenu	;wreg free
  3690                           
  3691                           ;Menu.c: 180:     LcClear();
  3692  0004EC  EC70  F00F         	call	_LcClear	;wreg free
  3693                           
  3694                           ;Menu.c: 181:     LcNewString("BYE BYE ");
  3695  0004F0  0EC7               	movlw	low STR_3
  3696  0004F2  DA98               	call	PL10	;call to abstracted procedure
  3697  0004F4  EC77  F000         	call	_LcNewString	;wreg free
  3698                           
  3699                           ;Menu.c: 182:     state = 14;
  3700  0004F8  0E0E               	movlw	14
  3701  0004FA  6E2E               	movwf	menu@state^0,c
  3702                           
  3703                           ;Menu.c: 183:    }
  3704  0004FC  0C0E               	retlw	14
  3705  0004FE                     l6825:
  3706                           
  3707                           ; BSR set to: 0
  3708  0004FE  0E0B               	movlw	11
  3709  000500  1852               	xorwf	_NovaTecla^0,w,c
  3710  000502  E10E               	bnz	l6839
  3711                           
  3712                           ; BSR set to: 0
  3713  000504  0431               	decf	_menuDalt^0,w,c
  3714  000506  E10C               	bnz	l6839
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;Menu.c: 185:     LcClear();
  3718  000508  EC70  F00F         	call	_LcClear	;wreg free
  3719                           
  3720                           ;Menu.c: 186:     NoFerMenu();
  3721  00050C  ECF1  F000         	call	_NoFerMenu	;wreg free
  3722                           
  3723                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3724  000510  0EAE               	movlw	low STR_4
  3725  000512  DA88               	call	PL10	;call to abstracted procedure
  3726  000514  EC77  F000         	call	_LcNewString	;wreg free
  3727                           
  3728                           ;Menu.c: 188:     NovaTecla = -1;
  3729  000518  6852               	setf	_NovaTecla^0,c
  3730                           
  3731                           ;Menu.c: 189:     state = 16;
  3732  00051A  0E10               	movlw	16
  3733  00051C  6E2E               	movwf	menu@state^0,c
  3734                           
  3735                           ;Menu.c: 190:    }
  3736  00051E  0C10               	retlw	16
  3737  000520                     l6839:
  3738                           
  3739                           ; BSR set to: 0
  3740  000520  5031               	movf	_menuDalt^0,w,c
  3741  000522  E112               	bnz	l6855
  3742                           
  3743                           ; BSR set to: 0
  3744  000524  0E0B               	movlw	11
  3745  000526  1852               	xorwf	_NovaTecla^0,w,c
  3746  000528  E10F               	bnz	l6855
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;Menu.c: 192:     NoFerMenu();
  3750  00052A  ECF1  F000         	call	_NoFerMenu	;wreg free
  3751                           
  3752                           ;Menu.c: 193:     NovaTecla = -1;
  3753  00052E  6852               	setf	_NovaTecla^0,c
  3754                           
  3755                           ;Menu.c: 194:     LcClear();
  3756  000530  EC70  F00F         	call	_LcClear	;wreg free
  3757                           
  3758                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3759  000534  0E9E               	movlw	low STR_5
  3760  000536  DA76               	call	PL10	;call to abstracted procedure
  3761  000538  EC77  F000         	call	_LcNewString	;wreg free
  3762                           
  3763                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3764  00053C  5030               	movf	_indexUsuari^0,w,c
  3765  00053E  EC97  F000         	call	_JJuguem
  3766  000542                     l6853:
  3767                           
  3768                           ;Menu.c: 197:     state = 21;
  3769  000542  0E15               	movlw	21
  3770  000544  6E2E               	movwf	menu@state^0,c
  3771                           
  3772                           ;Menu.c: 198:    }
  3773  000546  0C15               	retlw	21
  3774  000548                     l6855:
  3775                           
  3776                           ; BSR set to: 0
  3777  000548  0E0B               	movlw	11
  3778  00054A  1852               	xorwf	_NovaTecla^0,w,c
  3779  00054C  E10E               	bnz	l6871
  3780                           
  3781                           ; BSR set to: 0
  3782  00054E  0E04               	movlw	4
  3783  000550  1831               	xorwf	_menuDalt^0,w,c
  3784  000552  E10B               	bnz	l6871
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;Menu.c: 200:     NoFerMenu();
  3788  000554  ECF1  F000         	call	_NoFerMenu	;wreg free
  3789                           
  3790                           ;Menu.c: 201:     LcClear();
  3791  000558  EC70  F00F         	call	_LcClear	;wreg free
  3792                           
  3793                           ;Menu.c: 202:     menuDalt = 0;
  3794  00055C  6A31               	clrf	_menuDalt^0,c
  3795                           
  3796                           ;Menu.c: 203:     NovaTecla = -1;
  3797  00055E  6852               	setf	_NovaTecla^0,c
  3798                           
  3799                           ;Menu.c: 204:     calculateShowUsers();
  3800  000560  ECE3  F000         	call	_calculateShowUsers	;wreg free
  3801                           
  3802                           ;Menu.c: 205:     state = 30;
  3803  000564  0E1E               	movlw	30
  3804  000566  6E2E               	movwf	menu@state^0,c
  3805                           
  3806                           ;Menu.c: 206:    }
  3807  000568  0C1E               	retlw	30
  3808  00056A                     l6871:
  3809                           
  3810                           ; BSR set to: 0
  3811  00056A  0E0B               	movlw	11
  3812  00056C  1852               	xorwf	_NovaTecla^0,w,c
  3813  00056E  A4D8               	btfss	status,2,c
  3814  000570  0012               	return	
  3815                           
  3816                           ; BSR set to: 0
  3817  000572  0E02               	movlw	2
  3818  000574  1831               	xorwf	_menuDalt^0,w,c
  3819  000576  A4D8               	btfss	status,2,c
  3820  000578  0012               	return	
  3821                           
  3822                           ; BSR set to: 0
  3823  00057A  0E00               	movlw	0
  3824  00057C  EC1B  F000         	call	_UgetTop5
  3825  000580  0AFF               	xorlw	255
  3826  000582  B4D8               	btfsc	status,2,c
  3827  000584  0012               	return	
  3828                           
  3829                           ;Menu.c: 208:     NoFerMenu();
  3830  000586  ECF1  F000         	call	_NoFerMenu	;wreg free
  3831                           
  3832                           ;Menu.c: 209:     LcClear();
  3833  00058A  EC70  F00F         	call	_LcClear	;wreg free
  3834                           
  3835                           ;Menu.c: 210:     menuDalt = 0;
  3836  00058E  6A31               	clrf	_menuDalt^0,c
  3837                           
  3838                           ;Menu.c: 211:     NovaTecla = -1;
  3839  000590  6852               	setf	_NovaTecla^0,c
  3840  000592                     l6885:
  3841                           
  3842                           ;Menu.c: 212:     state = 31;
  3843  000592  0E1F               	movlw	31
  3844  000594  6E2E               	movwf	menu@state^0,c
  3845  000596  0C1F               	retlw	31
  3846  000598                     l6887:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;Menu.c: 216:    if (LcLliure()) {
  3850  000598  EC7D  F000         	call	_LcLliure	;wreg free
  3851  00059C  A0D8               	btfss	status,0,c
  3852  00059E  0012               	return	
  3853                           
  3854                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3855  0005A0  5030               	movf	_indexUsuari^0,w,c
  3856  0005A2  ECF1  F00F         	call	_UgetUserName
  3857  0005A6  DA4C               	call	PL46	;call to abstracted procedure
  3858  0005A8  EC77  F000         	call	_LcNewString	;wreg free
  3859                           
  3860                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3861  0005AC  5032               	movf	_timerMenu^0,w,c
  3862  0005AE  ECBD  F00F         	call	_TiResetTics
  3863                           
  3864                           ;Menu.c: 219:     state = 15;
  3865  0005B2  0E0F               	movlw	15
  3866  0005B4  6E2E               	movwf	menu@state^0,c
  3867  0005B6  0C0F               	retlw	15
  3868  0005B8                     l6895:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3872  0005B8  5032               	movf	_timerMenu^0,w,c
  3873  0005BA  EC15  F00F         	call	_TiGetTics
  3874  0005BE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3875  0005C0  0012               	return	
  3876  0005C2  0E6B               	movlw	107
  3877  0005C4  5C64               	subwf	?_TiGetTics^0,w,c
  3878  0005C6  0E09               	movlw	9
  3879  0005C8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3880  0005CA  E301 D755          	bc	l6771
  3881  0005CE  0012               	return	
  3882  0005D0                     l6899:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3886  0005D0  EC7D  F000         	call	_LcLliure	;wreg free
  3887  0005D4  E347               	bnc	l6965
  3888  0005D6  BE52               	btfsc	_NovaTecla^0,7,c
  3889  0005D8  D045               	goto	l6965
  3890  0005DA  5052               	movf	_NovaTecla^0,w,c
  3891  0005DC  0A80               	xorlw	128
  3892  0005DE  0F76               	addlw	-138
  3893  0005E0  E241               	bc	l6965
  3894                           
  3895                           ;Menu.c: 229:     LcGotoXY(0,1);
  3896  0005E2  DA2B               	call	PL36	;call to abstracted procedure
  3897  0005E4  ECBE  F00E         	call	_LcGotoXY
  3898                           
  3899                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  3900  0005E8  5052               	movf	_NovaTecla^0,w,c
  3901  0005EA  0F30               	addlw	48
  3902  0005EC  6E41               	movwf	_horaTmp^0,c
  3903                           
  3904                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  3905  0005EE  5041               	movf	_horaTmp^0,w,c
  3906  0005F0  EC02  F00E         	call	_LcPutChar
  3907                           
  3908                           ;Menu.c: 232:     NovaTecla = -1;
  3909  0005F4  6852               	setf	_NovaTecla^0,c
  3910                           
  3911                           ;Menu.c: 233:     state = 17;
  3912  0005F6  0E11               	movlw	17
  3913  0005F8                     L1:
  3914  0005F8  6E2E               	movwf	menu@state^0,c
  3915                           
  3916                           ;Menu.c: 234:    }
  3917  0005FA  0012               	return	
  3918  0005FC                     L2:
  3919  0005FC  1852               	xorwf	_NovaTecla^0,w,c
  3920  0005FE  E101 D743          	bz	u7210
  3921  000602  0012               	return	
  3922  000604                     l6919:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3926  000604  BE52               	btfsc	_NovaTecla^0,7,c
  3927  000606  D02E               	goto	l6965
  3928                           
  3929                           ; BSR set to: 0
  3930  000608  5052               	movf	_NovaTecla^0,w,c
  3931  00060A  0A80               	xorlw	128
  3932  00060C  0F76               	addlw	-138
  3933  00060E  E22A               	bc	l6965
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  3937  000610  5052               	movf	_NovaTecla^0,w,c
  3938  000612  0F30               	addlw	48
  3939  000614  6E42               	movwf	(_horaTmp+1)^0,c
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  3943  000616  5042               	movf	(_horaTmp+1)^0,w,c
  3944  000618  EC02  F00E         	call	_LcPutChar
  3945                           
  3946                           ;Menu.c: 243:     NovaTecla = -1;
  3947  00061C  6852               	setf	_NovaTecla^0,c
  3948                           
  3949                           ;Menu.c: 244:     LcPutChar(':');
  3950  00061E  0E3A               	movlw	58
  3951  000620  EC02  F00E         	call	_LcPutChar
  3952                           
  3953                           ;Menu.c: 245:     state = 18;
  3954  000624  0E12               	movlw	18
  3955  000626  D7E8               	goto	L1
  3956  000628                     l6937:
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  3960  000628  BE52               	btfsc	_NovaTecla^0,7,c
  3961  00062A  D01C               	goto	l6965
  3962                           
  3963                           ; BSR set to: 0
  3964  00062C  5052               	movf	_NovaTecla^0,w,c
  3965  00062E  0A80               	xorlw	128
  3966  000630  0F76               	addlw	-138
  3967  000632  E218               	bc	l6965
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  3971  000634  5052               	movf	_NovaTecla^0,w,c
  3972  000636  0F30               	addlw	48
  3973  000638  6E43               	movwf	(_horaTmp+2)^0,c
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  3977  00063A  5043               	movf	(_horaTmp+2)^0,w,c
  3978  00063C  EC02  F00E         	call	_LcPutChar
  3979                           
  3980                           ;Menu.c: 255:     NovaTecla = -1;
  3981  000640  6852               	setf	_NovaTecla^0,c
  3982                           
  3983                           ;Menu.c: 256:     state = 19;
  3984  000642  0E13               	movlw	19
  3985  000644  D7D9               	goto	L1
  3986  000646                     l6953:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  3990  000646  BE52               	btfsc	_NovaTecla^0,7,c
  3991  000648  D00D               	goto	l6965
  3992                           
  3993                           ; BSR set to: 0
  3994  00064A  5052               	movf	_NovaTecla^0,w,c
  3995  00064C  0A80               	xorlw	128
  3996  00064E  0F76               	addlw	-138
  3997  000650  E209               	bc	l6965
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  4001  000652  5052               	movf	_NovaTecla^0,w,c
  4002  000654  0F30               	addlw	48
  4003  000656  6E44               	movwf	(_horaTmp+3)^0,c
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  4007  000658  5044               	movf	(_horaTmp+3)^0,w,c
  4008  00065A  EC02  F00E         	call	_LcPutChar
  4009                           
  4010                           ;Menu.c: 266:     NovaTecla = -1;
  4011  00065E  6852               	setf	_NovaTecla^0,c
  4012                           
  4013                           ;Menu.c: 267:     state = 20;
  4014  000660  0E14               	movlw	20
  4015  000662  D7CA               	goto	L1
  4016  000664                     l6965:
  4017                           
  4018                           ; BSR set to: 0
  4019  000664  0E0A               	movlw	10
  4020  000666  D7CA               	goto	L2
  4021  000668                     l6969:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;Menu.c: 274:    if (NovaTecla == 11) {
  4025  000668  0E0B               	movlw	11
  4026  00066A  1852               	xorwf	_NovaTecla^0,w,c
  4027  00066C  E1FB               	bnz	l6965
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  4031  00066E  0E41               	movlw	low _horaTmp
  4032  000670  6E64               	movwf	HActualitzaHora@nova^0,c
  4033  000672  EC4C  F00F         	call	_HActualitzaHora	;wreg free
  4034                           
  4035                           ;Menu.c: 276:     NovaTecla = -1;
  4036  000676  6852               	setf	_NovaTecla^0,c
  4037  000678  D707               	goto	u7210
  4038  00067A                     l6981:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  4042  00067A  0E0A               	movlw	10
  4043  00067C  1852               	xorwf	_NovaTecla^0,w,c
  4044  00067E  E103               	bnz	u7600
  4045                           
  4046                           ; BSR set to: 0
  4047  000680  EC7D  F000         	call	_LcLliure	;wreg free
  4048  000684  E203               	bc	u7610
  4049  000686                     u7600:
  4050  000686  EC59  F000         	call	_checkHoraAcabat	;wreg free
  4051  00068A  E307               	bnc	l6993
  4052  00068C                     u7610:
  4053                           
  4054                           ;Menu.c: 285:     LcClear();
  4055  00068C  EC70  F00F         	call	_LcClear	;wreg free
  4056                           
  4057                           ;Menu.c: 286:     JendGame();
  4058  000690  ECF3  F000         	call	_JendGame	;wreg free
  4059                           
  4060                           ;Menu.c: 287:     state = 22;
  4061  000694  0E16               	movlw	22
  4062  000696  6E2E               	movwf	menu@state^0,c
  4063                           
  4064                           ;Menu.c: 288:    }
  4065  000698  0C16               	retlw	22
  4066  00069A                     l6993:
  4067  00069A  5052               	movf	_NovaTecla^0,w,c
  4068  00069C  0A80               	xorlw	128
  4069  00069E  0F7F               	addlw	-129
  4070  0006A0  E309               	bnc	l7003
  4071  0006A2  5052               	movf	_NovaTecla^0,w,c
  4072  0006A4  0A80               	xorlw	128
  4073  0006A6  0F76               	addlw	-138
  4074  0006A8  E205               	bc	l7003
  4075                           
  4076                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  4077  0006AA  5052               	movf	_NovaTecla^0,w,c
  4078  0006AC  EC8F  F000         	call	_JnovaTecla
  4079                           
  4080                           ;Menu.c: 291:     NovaTecla = -1;
  4081  0006B0  6852               	setf	_NovaTecla^0,c
  4082  0006B2  D747               	goto	l6853
  4083  0006B4                     l7003:
  4084  0006B4  BE50               	btfsc	_novaDireccio^0,7,c
  4085  0006B6  0012               	return	
  4086                           
  4087                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  4088  0006B8  5050               	movf	_novaDireccio^0,w,c
  4089  0006BA  EC93  F000         	call	_JnovaDireccio
  4090                           
  4091                           ;Menu.c: 296:     novaDireccio = -1;
  4092  0006BE  6850               	setf	_novaDireccio^0,c
  4093  0006C0  D740               	goto	l6853
  4094  0006C2                     l7011:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4098  0006C2  ECEF  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  4099  0006C6  0900               	iorlw	0
  4100  0006C8  B4D8               	btfsc	status,2,c
  4101  0006CA  0012               	return	
  4102  0006CC  0E0B               	movlw	11
  4103  0006CE  D796               	goto	L2
  4104  0006D0                     l7017:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;Menu.c: 306:    if (LcLliure()) {
  4108  0006D0  EC7D  F000         	call	_LcLliure	;wreg free
  4109  0006D4  A0D8               	btfss	status,0,c
  4110  0006D6  0012               	return	
  4111                           
  4112                           ;Menu.c: 307:     LcGotoXY(0,0);
  4113  0006D8  0E00               	movlw	0
  4114  0006DA  6E6C               	movwf	LcGotoXY@Row^0,c
  4115  0006DC  ECBE  F00E         	call	_LcGotoXY
  4116                           
  4117                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  4118  0006E0  5031               	movf	_menuDalt^0,w,c
  4119  0006E2  ECA1  F00F         	call	_getArrayShowUsers
  4120  0006E6  D9A4               	call	PL32	;call to abstracted procedure
  4121  0006E8  EC77  F000         	call	_LcNewString	;wreg free
  4122                           
  4123                           ;Menu.c: 309:     menuDalt++;
  4124  0006EC  2A31               	incf	_menuDalt^0,f,c
  4125                           
  4126                           ;Menu.c: 310:     state = 24;
  4127  0006EE  0E18               	movlw	24
  4128  0006F0  6E2E               	movwf	menu@state^0,c
  4129  0006F2  0C18               	retlw	24
  4130  0006F4                     l7025:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;Menu.c: 314:    if (LcLliure()) {
  4134  0006F4  EC7D  F000         	call	_LcLliure	;wreg free
  4135  0006F8  A0D8               	btfss	status,0,c
  4136  0006FA  0012               	return	
  4137                           
  4138                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4139  0006FC  ECE5  F000         	call	_UgetNumUsuaris	;wreg free
  4140  000700  6031               	cpfslt	_menuDalt^0,c
  4141  000702  D00B               	goto	l607
  4142                           
  4143                           ;Menu.c: 316:       LcGotoXY(0,1);
  4144  000704  D99A               	call	PL36	;call to abstracted procedure
  4145  000706  ECBE  F00E         	call	_LcGotoXY
  4146                           
  4147                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4148  00070A  5031               	movf	_menuDalt^0,w,c
  4149  00070C  ECA1  F00F         	call	_getArrayShowUsers
  4150  000710  D98F               	call	PL32	;call to abstracted procedure
  4151  000712  EC77  F000         	call	_LcNewString	;wreg free
  4152                           
  4153                           ;Menu.c: 318:       menuDalt++;
  4154  000716  2A31               	incf	_menuDalt^0,f,c
  4155                           
  4156                           ;Menu.c: 319:     } else {
  4157  000718  D001               	goto	l7033
  4158  00071A                     l607:
  4159                           
  4160                           ;Menu.c: 320:       menuDalt = 0;
  4161  00071A  6A31               	clrf	_menuDalt^0,c
  4162  00071C                     l7033:
  4163                           
  4164                           ;Menu.c: 322:     state = 25;
  4165  00071C  0E19               	movlw	25
  4166  00071E  6E2E               	movwf	menu@state^0,c
  4167  000720  0C19               	retlw	25
  4168  000722                     l7035:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;Menu.c: 326:    if (LcLliure()) {
  4172  000722  EC7D  F000         	call	_LcLliure	;wreg free
  4173  000726  A0D8               	btfss	status,0,c
  4174  000728  0012               	return	
  4175                           
  4176                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4177  00072A  ECE5  F000         	call	_UgetNumUsuaris	;wreg free
  4178  00072E  1831               	xorwf	_menuDalt^0,w,c
  4179  000730  E101               	bnz	l7041
  4180                           
  4181                           ;Menu.c: 328:       menuDalt = 0;
  4182  000732  6A31               	clrf	_menuDalt^0,c
  4183  000734                     l7041:
  4184                           
  4185                           ;Menu.c: 330:     LcGotoXY(16,0);
  4186  000734  D993               	call	PL92	;call to abstracted procedure
  4187  000736  ECBE  F00E         	call	_LcGotoXY
  4188                           
  4189                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4190  00073A  5031               	movf	_menuDalt^0,w,c
  4191  00073C  ECA1  F00F         	call	_getArrayShowUsers
  4192  000740  D977               	call	PL32	;call to abstracted procedure
  4193  000742  EC77  F000         	call	_LcNewString	;wreg free
  4194                           
  4195                           ;Menu.c: 332:     state = 26;
  4196  000746  0E1A               	movlw	26
  4197  000748  6E2E               	movwf	menu@state^0,c
  4198  00074A  0C1A               	retlw	26
  4199  00074C                     l7045:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;Menu.c: 336:    if (LcLliure()) {
  4203  00074C  EC7D  F000         	call	_LcLliure	;wreg free
  4204  000750  A0D8               	btfss	status,0,c
  4205  000752  0012               	return	
  4206                           
  4207                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4208  000754  ECE5  F000         	call	_UgetNumUsuaris	;wreg free
  4209  000758  0100               	movlb	0	; () banked
  4210  00075A  6FDA               	movwf	??_menu& (0+255),b
  4211  00075C  6BDB               	clrf	(??_menu+1)& (0+255),b
  4212  00075E  5031               	movf	_menuDalt^0,w,c
  4213  000760  6FDC               	movwf	(??_menu+2)& (0+255),b
  4214  000762  6BDD               	clrf	(??_menu+3)& (0+255),b
  4215  000764  2BDC               	incf	(??_menu+2)& (0+255),f,b
  4216  000766  0E00               	movlw	0
  4217  000768  23DD               	addwfc	(??_menu+3)& (0+255),f,b
  4218  00076A  51DA               	movf	??_menu& (0+255),w,b
  4219  00076C  5DDC               	subwf	(??_menu+2)& (0+255),w,b
  4220  00076E  51DD               	movf	(??_menu+3)& (0+255),w,b
  4221  000770  0A80               	xorlw	128
  4222  000772  6FDE               	movwf	(??_menu+4)& (0+255),b
  4223  000774  51DB               	movf	(??_menu+1)& (0+255),w,b
  4224  000776  0A80               	xorlw	128
  4225  000778  59DE               	subwfb	(??_menu+4)& (0+255),w,b
  4226  00077A  E209               	bc	l7051
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;Menu.c: 338:       LcGotoXY(16,1);
  4230  00077C  D96C               	call	PL90	;call to abstracted procedure
  4231  00077E  ECBE  F00E         	call	_LcGotoXY
  4232                           
  4233                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4234  000782  2831               	incf	_menuDalt^0,w,c
  4235  000784  ECA1  F00F         	call	_getArrayShowUsers
  4236  000788  D953               	call	PL32	;call to abstracted procedure
  4237  00078A  EC77  F000         	call	_LcNewString	;wreg free
  4238  00078E                     l7051:
  4239                           
  4240                           ;Menu.c: 341:     state = 27;
  4241  00078E  0E1B               	movlw	27
  4242  000790  6E2E               	movwf	menu@state^0,c
  4243  000792  0C1B               	retlw	27
  4244  000794                     l7053:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4248  000794  5032               	movf	_timerMenu^0,w,c
  4249  000796  EC15  F00F         	call	_TiGetTics
  4250  00079A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4251  00079C  D008               	goto	l7057
  4252  00079E  0EB6               	movlw	182
  4253  0007A0  5C64               	subwf	?_TiGetTics^0,w,c
  4254  0007A2  0E04               	movlw	4
  4255  0007A4  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4256  0007A6  E303               	bnc	l7057
  4257                           
  4258                           ;Menu.c: 346:     state = 29;
  4259  0007A8  0E1D               	movlw	29
  4260  0007AA  6E2E               	movwf	menu@state^0,c
  4261                           
  4262                           ;Menu.c: 347:    }
  4263  0007AC  0C1D               	retlw	29
  4264  0007AE                     l7057:
  4265  0007AE  0E0B               	movlw	11
  4266  0007B0  1852               	xorwf	_NovaTecla^0,w,c
  4267  0007B2  A4D8               	btfss	status,2,c
  4268  0007B4  0012               	return	
  4269  0007B6                     u7750:
  4270                           
  4271                           ;Menu.c: 349:     menuDalt = 0;
  4272  0007B6  6A31               	clrf	_menuDalt^0,c
  4273  0007B8  D667               	goto	u7210
  4274  0007BA                     l7063:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;Menu.c: 354:    if (pos > 15) {
  4278  0007BA  0E0F               	movlw	15
  4279  0007BC  642F               	cpfsgt	_pos^0,c
  4280  0007BE  D005               	goto	l7069
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;Menu.c: 355:     LcClear();
  4284  0007C0  EC70  F00F         	call	_LcClear	;wreg free
  4285  0007C4                     l7067:
  4286                           
  4287                           ;Menu.c: 356:     state = 23;
  4288  0007C4  0E17               	movlw	23
  4289  0007C6  6E2E               	movwf	menu@state^0,c
  4290                           
  4291                           ;Menu.c: 357:    }
  4292  0007C8  0C17               	retlw	23
  4293  0007CA                     l7069:
  4294                           
  4295                           ; BSR set to: 0
  4296  0007CA  0E10               	movlw	16
  4297  0007CC  602F               	cpfslt	_pos^0,c
  4298  0007CE  0C10               	retlw	16
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4302  0007D0  5032               	movf	_timerMenu^0,w,c
  4303  0007D2  ECBD  F00F         	call	_TiResetTics
  4304                           
  4305                           ;Menu.c: 360:     LcScroll();
  4306  0007D6  ECD4  F000         	call	_LcScroll	;wreg free
  4307                           
  4308                           ;Menu.c: 361:     pos++;
  4309  0007DA  2A2F               	incf	_pos^0,f,c
  4310  0007DC                     l7077:
  4311                           
  4312                           ;Menu.c: 362:     state = 28;
  4313  0007DC  0E1C               	movlw	28
  4314  0007DE  6E2E               	movwf	menu@state^0,c
  4315  0007E0  0C1C               	retlw	28
  4316  0007E2                     l7079:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;Menu.c: 366:    if (LcLliure()) {
  4320  0007E2  EC7D  F000         	call	_LcLliure	;wreg free
  4321  0007E6  A0D8               	btfss	status,0,c
  4322  0007E8  0012               	return	
  4323                           
  4324                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4325  0007EA  5032               	movf	_timerMenu^0,w,c
  4326  0007EC  ECBD  F00F         	call	_TiResetTics
  4327                           
  4328                           ;Menu.c: 368:     pos = 0;
  4329  0007F0  6A2F               	clrf	_pos^0,c
  4330  0007F2  D7F4               	goto	l7077
  4331  0007F4                     l7087:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4335  0007F4  EC5F  F000         	call	_UshowUsersCalculat	;wreg free
  4336  0007F8  E2E5               	bc	l7067
  4337  0007FA  0012               	return	
  4338  0007FC                     l7091:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;Menu.c: 378:    if (LcLliure()) {
  4342  0007FC  EC7D  F000         	call	_LcLliure	;wreg free
  4343  000800  A0D8               	btfss	status,0,c
  4344  000802  0012               	return	
  4345                           
  4346                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4347  000804  5031               	movf	_menuDalt^0,w,c
  4348  000806  EC1B  F000         	call	_UgetTop5
  4349  00080A  ECF1  F00F         	call	_UgetUserName
  4350  00080E  D918               	call	PL46	;call to abstracted procedure
  4351  000810  EC77  F000         	call	_LcNewString	;wreg free
  4352                           
  4353                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4354  000814  5031               	movf	_menuDalt^0,w,c
  4355  000816  EC1B  F000         	call	_UgetTop5
  4356  00081A  EC46  F000         	call	_UgetScore
  4357  00081E  EC71  F000         	call	_CToAConverteix
  4358                           
  4359                           ;Menu.c: 381:     state = 32;
  4360  000822  0E20               	movlw	32
  4361  000824  6E2E               	movwf	menu@state^0,c
  4362  000826  0C20               	retlw	32
  4363  000828                     l7097:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4367  000828  ECF7  F000         	call	_CToAHaAcabat	;wreg free
  4368  00082C  0AFA               	xorlw	250
  4369  00082E  A4D8               	btfss	status,2,c
  4370  000830  0012               	return	
  4371  000832  EC7D  F000         	call	_LcLliure	;wreg free
  4372  000836  A0D8               	btfss	status,0,c
  4373  000838  0012               	return	
  4374                           
  4375                           ;Menu.c: 386:     LcPutChar(':');
  4376  00083A  0E3A               	movlw	58
  4377  00083C  EC02  F00E         	call	_LcPutChar
  4378                           
  4379                           ;Menu.c: 387:     LcGotoXY(0,1);
  4380  000840  D8FC               	call	PL36	;call to abstracted procedure
  4381  000842  ECBE  F00E         	call	_LcGotoXY
  4382                           
  4383                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4384  000846  ECF5  F000         	call	_CToAobtenir	;wreg free
  4385  00084A  D8FF               	call	PL50	;call to abstracted procedure
  4386  00084C  EC77  F000         	call	_LcNewString	;wreg free
  4387                           
  4388                           ;Menu.c: 389:     menuDalt++;
  4389  000850  2A31               	incf	_menuDalt^0,f,c
  4390                           
  4391                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4392  000852  0E05               	movlw	5
  4393  000854  1831               	xorwf	_menuDalt^0,w,c
  4394  000856  E005               	bz	u7840
  4395  000858  5031               	movf	_menuDalt^0,w,c
  4396  00085A  EC1B  F000         	call	_UgetTop5
  4397  00085E  0AFF               	xorlw	255
  4398  000860  E101               	bnz	l7111
  4399  000862                     u7840:
  4400  000862  6A31               	clrf	_menuDalt^0,c
  4401  000864                     l7111:
  4402                           
  4403                           ;Menu.c: 391:     state = 34;
  4404  000864  0E22               	movlw	34
  4405  000866  6E2E               	movwf	menu@state^0,c
  4406  000868  0C22               	retlw	34
  4407  00086A                     l7113:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4411  00086A  5031               	movf	_menuDalt^0,w,c
  4412  00086C  EC1B  F000         	call	_UgetTop5
  4413  000870  0AFF               	xorlw	255
  4414  000872  E104               	bnz	u7860
  4415  000874  0E05               	movlw	5
  4416  000876  1831               	xorwf	_menuDalt^0,w,c
  4417  000878  B4D8               	btfsc	status,2,c
  4418  00087A  0012               	return	
  4419  00087C                     u7860:
  4420  00087C  EC7D  F000         	call	_LcLliure	;wreg free
  4421  000880  A0D8               	btfss	status,0,c
  4422  000882  0012               	return	
  4423                           
  4424                           ;Menu.c: 396:     LcGotoXY(16,0);
  4425  000884  D8EB               	call	PL92	;call to abstracted procedure
  4426  000886  ECBE  F00E         	call	_LcGotoXY
  4427                           
  4428                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4429  00088A  5031               	movf	_menuDalt^0,w,c
  4430  00088C  EC1B  F000         	call	_UgetTop5
  4431  000890  ECF1  F00F         	call	_UgetUserName
  4432  000894  D8D5               	call	PL46	;call to abstracted procedure
  4433  000896  EC77  F000         	call	_LcNewString	;wreg free
  4434                           
  4435                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4436  00089A  5031               	movf	_menuDalt^0,w,c
  4437  00089C  EC1B  F000         	call	_UgetTop5
  4438  0008A0  EC46  F000         	call	_UgetScore
  4439  0008A4  EC71  F000         	call	_CToAConverteix
  4440                           
  4441                           ;Menu.c: 399:     state = 35;
  4442  0008A8  0E23               	movlw	35
  4443  0008AA  6E2E               	movwf	menu@state^0,c
  4444  0008AC  0C23               	retlw	35
  4445  0008AE                     l7123:
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4449  0008AE  EC7D  F000         	call	_LcLliure	;wreg free
  4450  0008B2  A0D8               	btfss	status,0,c
  4451  0008B4  0012               	return	
  4452  0008B6  ECF7  F000         	call	_CToAHaAcabat	;wreg free
  4453  0008BA  0AFA               	xorlw	250
  4454  0008BC  A4D8               	btfss	status,2,c
  4455  0008BE  0012               	return	
  4456                           
  4457                           ;Menu.c: 404:     LcPutChar(':');
  4458  0008C0  0E3A               	movlw	58
  4459  0008C2  EC02  F00E         	call	_LcPutChar
  4460                           
  4461                           ;Menu.c: 405:     LcGotoXY(16,1);
  4462  0008C6  D8C7               	call	PL90	;call to abstracted procedure
  4463  0008C8  ECBE  F00E         	call	_LcGotoXY
  4464                           
  4465                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4466  0008CC  ECF5  F000         	call	_CToAobtenir	;wreg free
  4467  0008D0  D8BC               	call	PL50	;call to abstracted procedure
  4468  0008D2  EC77  F000         	call	_LcNewString	;wreg free
  4469                           
  4470                           ;Menu.c: 407:     pos = 0;
  4471  0008D6  6A2F               	clrf	_pos^0,c
  4472                           
  4473                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4474  0008D8  5032               	movf	_timerMenu^0,w,c
  4475  0008DA  ECBD  F00F         	call	_TiResetTics
  4476  0008DE                     l7135:
  4477                           
  4478                           ;Menu.c: 409:     state = 37;
  4479  0008DE  0E25               	movlw	37
  4480  0008E0  6E2E               	movwf	menu@state^0,c
  4481  0008E2  0C25               	retlw	37
  4482  0008E4                     l7137:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4486  0008E4  0E0B               	movlw	11
  4487  0008E6  1852               	xorwf	_NovaTecla^0,w,c
  4488  0008E8  E104               	bnz	l7145
  4489                           
  4490                           ; BSR set to: 0
  4491  0008EA  EC7D  F000         	call	_LcLliure	;wreg free
  4492  0008EE  E301 D762          	bc	u7750
  4493  0008F2                     l7145:
  4494  0008F2  5032               	movf	_timerMenu^0,w,c
  4495  0008F4  EC15  F00F         	call	_TiGetTics
  4496  0008F8  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4497  0008FA  0012               	return	
  4498  0008FC  0E91               	movlw	145
  4499  0008FE  5C64               	subwf	?_TiGetTics^0,w,c
  4500  000900  0E01               	movlw	1
  4501  000902  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4502  000904  A0D8               	btfss	status,0,c
  4503  000906  0012               	return	
  4504  000908  EC7D  F000         	call	_LcLliure	;wreg free
  4505  00090C  A0D8               	btfss	status,0,c
  4506  00090E  0012               	return	
  4507                           
  4508                           ;Menu.c: 418:     state = 38;
  4509  000910  0E26               	movlw	38
  4510  000912  6E2E               	movwf	menu@state^0,c
  4511  000914  0C26               	retlw	38
  4512  000916                     l7151:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;Menu.c: 422:    if (pos < 16) {
  4516  000916  0E10               	movlw	16
  4517  000918  602F               	cpfslt	_pos^0,c
  4518  00091A  D007               	goto	l7161
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4522  00091C  5032               	movf	_timerMenu^0,w,c
  4523  00091E  ECBD  F00F         	call	_TiResetTics
  4524                           
  4525                           ;Menu.c: 424:     LcScroll();
  4526  000922  ECD4  F000         	call	_LcScroll	;wreg free
  4527                           
  4528                           ;Menu.c: 425:     pos++;
  4529  000926  2A2F               	incf	_pos^0,f,c
  4530  000928  D7DA               	goto	l7135
  4531  00092A                     l7161:
  4532                           
  4533                           ; BSR set to: 0
  4534  00092A  0E0F               	movlw	15
  4535  00092C  642F               	cpfsgt	_pos^0,c
  4536  00092E  0C0F               	retlw	15
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;Menu.c: 429:     LcClear();
  4540  000930  EC70  F00F         	call	_LcClear	;wreg free
  4541  000934  D62E               	goto	l6885
  4542  000936                     l7169:
  4543  000936  502E               	movf	menu@state^0,w,c
  4544  000938  0100               	movlb	0	; () banked
  4545  00093A  6FDA               	movwf	??_menu& (0+255),b
  4546  00093C  6BDB               	clrf	(??_menu+1)& (0+255),b
  4547                           
  4548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4549                           ; Switch size 1, requested type "space"
  4550                           ; Number of cases is 1, Range of values is 0 to 0
  4551                           ; switch strategies available:
  4552                           ; Name         Instructions Cycles
  4553                           ; simple_byte            4     3 (average)
  4554                           ;	Chosen strategy is simple_byte
  4555  00093E  51DB               	movf	(??_menu+1)& (0+255),w,b
  4556  000940  A4D8               	btfss	status,2,c
  4557  000942  0012               	return	
  4558                           
  4559                           ; BSR set to: 0
  4560                           ; Switch size 1, requested type "space"
  4561                           ; Number of cases is 37, Range of values is 0 to 38
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte          112    57 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566  000944  51DA               	movf	??_menu& (0+255),w,b
  4567  000946  E101 D4D4          	bz	l6623
  4568  00094A  0A01               	xorlw	1	; case 1
  4569  00094C  E101 D4DB          	bz	l6629
  4570  000950  0A03               	xorlw	3	; case 2
  4571  000952  E101 D4E8          	bz	l6639
  4572  000956  0A01               	xorlw	1	; case 3
  4573  000958  E101 D4F1          	bz	l511
  4574  00095C  0A07               	xorlw	7	; case 4
  4575  00095E  E101 D4F9          	bz	l6657
  4576  000962  0A01               	xorlw	1	; case 5
  4577  000964  E101 D504          	bz	l6665
  4578  000968  0A03               	xorlw	3	; case 6
  4579  00096A  E101 D510          	bz	l6675
  4580  00096E  0A01               	xorlw	1	; case 7
  4581  000970  E101 D523          	bz	l6689
  4582  000974  0A0F               	xorlw	15	; case 8
  4583  000976  E101 D53D          	bz	l6717
  4584  00097A  0A01               	xorlw	1	; case 9
  4585  00097C  E101 D550          	bz	l6731
  4586  000980  0A03               	xorlw	3	; case 10
  4587  000982  E101 D569          	bz	l6761
  4588  000986  0A01               	xorlw	1	; case 11
  4589  000988  E101 D570          	bz	l538
  4590  00098C  0A07               	xorlw	7	; case 12
  4591  00098E  E101 D58A          	bz	l6785
  4592  000992  0A01               	xorlw	1	; case 13
  4593  000994  E101 D593          	bz	l6797
  4594  000998  0A03               	xorlw	3	; case 14
  4595  00099A  E101 D5FD          	bz	l6887
  4596  00099E  0A01               	xorlw	1	; case 15
  4597  0009A0  E101 D60A          	bz	l6895
  4598  0009A4  0A1F               	xorlw	31	; case 16
  4599  0009A6  E101 D613          	bz	l6899
  4600  0009AA  0A01               	xorlw	1	; case 17
  4601  0009AC  E101 D62A          	bz	l6919
  4602  0009B0  0A03               	xorlw	3	; case 18
  4603  0009B2  E101 D639          	bz	l6937
  4604  0009B6  0A01               	xorlw	1	; case 19
  4605  0009B8  E101 D645          	bz	l6953
  4606  0009BC  0A07               	xorlw	7	; case 20
  4607  0009BE  E101 D653          	bz	l6969
  4608  0009C2  0A01               	xorlw	1	; case 21
  4609  0009C4  E101 D659          	bz	l6981
  4610  0009C8  0A03               	xorlw	3	; case 22
  4611  0009CA  E101 D67A          	bz	l7011
  4612  0009CE  0A01               	xorlw	1	; case 23
  4613  0009D0  E101 D67E          	bz	l7017
  4614  0009D4  0A0F               	xorlw	15	; case 24
  4615  0009D6  E101 D68D          	bz	l7025
  4616  0009DA  0A01               	xorlw	1	; case 25
  4617  0009DC  E101 D6A1          	bz	l7035
  4618  0009E0  0A03               	xorlw	3	; case 26
  4619  0009E2  E101 D6B3          	bz	l7045
  4620  0009E6  0A01               	xorlw	1	; case 27
  4621  0009E8  E101 D6FB          	bz	l7079
  4622  0009EC  0A07               	xorlw	7	; case 28
  4623  0009EE  E101 D6D1          	bz	l7053
  4624  0009F2  0A01               	xorlw	1	; case 29
  4625  0009F4  E101 D6E1          	bz	l7063
  4626  0009F8  0A03               	xorlw	3	; case 30
  4627  0009FA  E101 D6FB          	bz	l7087
  4628  0009FE  0A01               	xorlw	1	; case 31
  4629  000A00  E101 D6FC          	bz	l7091
  4630  000A04  0A3F               	xorlw	63	; case 32
  4631  000A06  E101 D70F          	bz	l7097
  4632  000A0A  0A02               	xorlw	2	; case 34
  4633  000A0C  E101 D72D          	bz	l7113
  4634  000A10  0A01               	xorlw	1	; case 35
  4635  000A12  E101 D74C          	bz	l7123
  4636  000A16  0A06               	xorlw	6	; case 37
  4637  000A18  E101 D764          	bz	l7137
  4638  000A1C  0A03               	xorlw	3	; case 38
  4639  000A1E  E101 D77A          	bz	l7151
  4640  000A22  0012               	return		;funcret
  4641  000A24                     __end_of_menu:
  4642                           	callstack 0
  4643  000A24                     PL10:
  4644                           	callstack 24
  4645  000A24  6E67               	movwf	LcNewString@new_s^0,c
  4646  000A26  5067               	movf	LcNewString@new_s^0,w,c
  4647  000A28  A4D8               	btfss	status,2,c
  4648  000A2A  0E02               	movlw	high __smallconst
  4649  000A2C  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4650  000A2E  0012               	return	
  4651  000A30                     __end_ofPL10:
  4652                           	callstack 0
  4653  000A30                     PL32:
  4654                           	callstack 24
  4655  000A30  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4656  000A34  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4657  000A38  0012               	return	
  4658  000A3A                     __end_ofPL32:
  4659                           	callstack 0
  4660  000A3A                     PL36:
  4661                           	callstack 24
  4662  000A3A  0E01               	movlw	1
  4663  000A3C  6E6C               	movwf	LcGotoXY@Row^0,c
  4664  000A3E  0C00               	retlw	0
  4665  000A40                     __end_ofPL36:
  4666                           	callstack 0
  4667  000A40                     PL46:
  4668                           	callstack 24
  4669  000A40  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4670  000A44  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4671  000A48  0012               	return	
  4672  000A4A                     __end_ofPL46:
  4673                           	callstack 0
  4674  000A4A                     PL50:
  4675                           	callstack 24
  4676  000A4A  0100               	movlb	0	; () banked
  4677  000A4C  6FDA               	movwf	??_menu& (0+255),b
  4678  000A4E  C0DA  F067         	movff	??_menu,LcNewString@new_s
  4679  000A52  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4680  000A54  0012               	return	
  4681  000A56                     __end_ofPL50:
  4682                           	callstack 0
  4683  000A56                     PL90:
  4684                           	callstack 24
  4685  000A56  0E01               	movlw	1
  4686  000A58  6E6C               	movwf	LcGotoXY@Row^0,c
  4687  000A5A  0C10               	retlw	16
  4688  000A5C                     __end_ofPL90:
  4689                           	callstack 0
  4690  000A5C                     PL92:
  4691                           	callstack 24
  4692  000A5C  0E00               	movlw	0
  4693  000A5E  6E6C               	movwf	LcGotoXY@Row^0,c
  4694  000A60  0C10               	retlw	16
  4695  000A62                     __end_ofPL92:
  4696                           	callstack 0
  4697  000A62                     PL94:
  4698                           	callstack 24
  4699  000A62  6852               	setf	_NovaTecla^0,c
  4700  000A64  6851               	setf	_novaLletra^0,c
  4701  000A66  6A33               	clrf	_tmp^0,c
  4702  000A68  0012               	return	
  4703  000A6A                     __end_ofPL94:
  4704                           	callstack 0
  4705  000A6A                     PL96:
  4706                           	callstack 24
  4707  000A6A  2A33               	incf	_tmp^0,f,c
  4708  000A6C  6852               	setf	_NovaTecla^0,c
  4709  000A6E  6851               	setf	_novaLletra^0,c
  4710  000A70  0012               	return	
  4711  000A72                     __end_ofPL96:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _miraPassword *****************
  4715 ;; Defined at:
  4716 ;;		line 302 in file "Usuaris.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;		None               void
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1
  4730 ;;      Params:         0       0       0
  4731 ;;      Locals:         0       0       0
  4732 ;;      Temps:          0       0       0
  4733 ;;      Totals:         0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 3
  4737 ;; This function calls:
  4738 ;;		_compareStrings
  4739 ;; This function is called by:
  4740 ;;		_menu
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text20
  4745  001E74                     __ptext20:
  4746                           	callstack 0
  4747  001E74                     _miraPassword:
  4748                           	callstack 26
  4749                           
  4750                           ;Usuaris.c: 303:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4751                           
  4752                           ;incstack = 0
  4753  001E74  0EAD               	movlw	low _tmpPassword
  4754  001E76  6E64               	movwf	compareStrings@a^0,c
  4755  001E78  504F               	movf	_usuariLoguejat^0,w,c
  4756  001E7A  0D12               	mullw	18
  4757  001E7C  0E09               	movlw	low (_usuaris+9)
  4758  001E7E  24F3               	addwf	243,w,c
  4759  001E80  6E65               	movwf	compareStrings@b^0,c
  4760  001E82  0E01               	movlw	high (_usuaris+9)
  4761  001E84  20F4               	addwfc	prodh,w,c
  4762  001E86  6E66               	movwf	(compareStrings@b+1)^0,c
  4763  001E88  EC4A  F00E         	call	_compareStrings	;wreg free
  4764  001E8C  0900               	iorlw	0
  4765  001E8E  E002               	bz	l4547
  4766  001E90  90D8               	bcf	status,0,c
  4767  001E92  0012               	return	
  4768  001E94                     l4547:
  4769  001E94  80D8               	bsf	status,0,c
  4770  001E96  0012               	return		;funcret
  4771  001E98                     __end_of_miraPassword:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _getArrayShowUsers *****************
  4775 ;; Defined at:
  4776 ;;		line 68 in file "Usuaris.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  quin            1    wreg     unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  quin            1    7[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2    5[COMRAM] PTR unsigned char 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1
  4790 ;;      Params:         2       0       0
  4791 ;;      Locals:         1       0       0
  4792 ;;      Temps:          0       0       0
  4793 ;;      Totals:         3       0       0
  4794 ;;Total ram usage:        3 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 2
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_menu
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text21
  4805  001F42                     __ptext21:
  4806                           	callstack 0
  4807  001F42                     _getArrayShowUsers:
  4808                           	callstack 27
  4809                           
  4810                           ;incstack = 0
  4811                           ;getArrayShowUsers@quin stored from wreg
  4812  001F42  6E66               	movwf	getArrayShowUsers@quin^0,c
  4813                           
  4814                           ;Usuaris.c: 69:     return usuaris[arrayShowUsers[quin]].username;
  4815  001F44  5066               	movf	getArrayShowUsers@quin^0,w,c
  4816  001F46  0FA5               	addlw	low _arrayShowUsers
  4817  001F48  6ED9               	movwf	fsr2l,c
  4818  001F4A  6ADA               	clrf	fsr2h,c
  4819  001F4C  50DF               	movf	indf2,w,c
  4820  001F4E  0D12               	mullw	18
  4821  001F50  0E00               	movlw	low _usuaris
  4822  001F52  24F3               	addwf	243,w,c
  4823  001F54  6E64               	movwf	?_getArrayShowUsers^0,c
  4824  001F56  0E01               	movlw	high _usuaris
  4825  001F58  20F4               	addwfc	prodh,w,c
  4826  001F5A  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4827  001F5C  0012               	return		;funcret
  4828  001F5E                     __end_of_getArrayShowUsers:
  4829                           	callstack 0
  4830                           
  4831 ;; *************** function _checkHoraAcabat *****************
  4832 ;; Defined at:
  4833 ;;		line 42 in file "Hora.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;		None               void
  4840 ;; Registers used:
  4841 ;;		status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1
  4847 ;;      Params:         0       0       0
  4848 ;;      Locals:         0       0       0
  4849 ;;      Temps:          0       0       0
  4850 ;;      Totals:         0       0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; Hardware stack levels required when called: 2
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_menu
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text22
  4862  0000B2                     __ptext22:
  4863                           	callstack 0
  4864  0000B2                     _checkHoraAcabat:
  4865                           	callstack 27
  4866                           
  4867                           ;Hora.c: 43:     return tempsAcabat;
  4868                           
  4869                           ;incstack = 0
  4870  0000B2  B875               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4871  0000B4  D002               	goto	l4585
  4872  0000B6  90D8               	bcf	status,0,c
  4873  0000B8  0012               	return	
  4874  0000BA                     l4585:
  4875  0000BA  80D8               	bsf	status,0,c
  4876  0000BC  0012               	return		;funcret
  4877  0000BE                     __end_of_checkHoraAcabat:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function _calculateShowUsers *****************
  4881 ;; Defined at:
  4882 ;;		line 144 in file "Usuaris.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		None
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1
  4896 ;;      Params:         0       0       0
  4897 ;;      Locals:         0       0       0
  4898 ;;      Temps:          0       0       0
  4899 ;;      Totals:         0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; Hardware stack levels required when called: 2
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_menu
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text23
  4911  0001C6                     __ptext23:
  4912                           	callstack 0
  4913  0001C6                     _calculateShowUsers:
  4914                           	callstack 27
  4915                           
  4916                           ;Usuaris.c: 145:     do_showUsers = 1;
  4917                           
  4918                           ;incstack = 0
  4919  0001C6  8A76               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4920  0001C8  0012               	return		;funcret
  4921  0001CA                     __end_of_calculateShowUsers:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _UshowUsersCalculat *****************
  4925 ;; Defined at:
  4926 ;;		line 147 in file "Usuaris.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;		None               void
  4933 ;; Registers used:
  4934 ;;		status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1
  4940 ;;      Params:         0       0       0
  4941 ;;      Locals:         0       0       0
  4942 ;;      Temps:          0       0       0
  4943 ;;      Totals:         0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 2
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_menu
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text24
  4955  0000BE                     __ptext24:
  4956                           	callstack 0
  4957  0000BE                     _UshowUsersCalculat:
  4958                           	callstack 27
  4959                           
  4960                           ;Usuaris.c: 148:     return !do_showUsers;
  4961                           
  4962                           ;incstack = 0
  4963  0000BE  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4964  0000C0  D002               	goto	l4611
  4965  0000C2  90D8               	bcf	status,0,c
  4966  0000C4  0012               	return	
  4967  0000C6                     l4611:
  4968  0000C6  80D8               	bsf	status,0,c
  4969  0000C8  0012               	return		;funcret
  4970  0000CA                     __end_of_UshowUsersCalculat:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _UgetUserName *****************
  4974 ;; Defined at:
  4975 ;;		line 64 in file "Usuaris.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  quin            1    wreg     unsigned char 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  quin            1    7[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    5[COMRAM] PTR unsigned char 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0, prodl, prodh
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1
  4989 ;;      Params:         2       0       0
  4990 ;;      Locals:         1       0       0
  4991 ;;      Temps:          0       0       0
  4992 ;;      Totals:         3       0       0
  4993 ;;Total ram usage:        3 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 2
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_menu
  5000 ;;		_motorSIO
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text25
  5005  001FE2                     __ptext25:
  5006                           	callstack 0
  5007  001FE2                     _UgetUserName:
  5008                           	callstack 27
  5009                           
  5010                           ;incstack = 0
  5011                           ;UgetUserName@quin stored from wreg
  5012  001FE2  6E66               	movwf	UgetUserName@quin^0,c
  5013                           
  5014                           ;Usuaris.c: 65:     return usuaris[quin].username;
  5015  001FE4  5066               	movf	UgetUserName@quin^0,w,c
  5016  001FE6  0D12               	mullw	18
  5017  001FE8  0E00               	movlw	low _usuaris
  5018  001FEA  24F3               	addwf	243,w,c
  5019  001FEC  6E64               	movwf	?_UgetUserName^0,c
  5020  001FEE  0E01               	movlw	high _usuaris
  5021  001FF0  20F4               	addwfc	prodh,w,c
  5022  001FF2  6E65               	movwf	(?_UgetUserName+1)^0,c
  5023  001FF4  0012               	return		;funcret
  5024  001FF6                     __end_of_UgetUserName:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _UgetTop5 *****************
  5028 ;; Defined at:
  5029 ;;		line 294 in file "Usuaris.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  quin            1    wreg     unsigned char 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  quin            1    5[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      char 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1
  5043 ;;      Params:         0       0       0
  5044 ;;      Locals:         1       0       0
  5045 ;;      Temps:          0       0       0
  5046 ;;      Totals:         1       0       0
  5047 ;;Total ram usage:        1 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_menu
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text26
  5058  000036                     __ptext26:
  5059                           	callstack 0
  5060  000036                     _UgetTop5:
  5061                           	callstack 27
  5062                           
  5063                           ;incstack = 0
  5064                           ;UgetTop5@quin stored from wreg
  5065  000036  6E64               	movwf	UgetTop5@quin^0,c
  5066                           
  5067                           ;Usuaris.c: 295:     return puntuacions[quin].indexStruct;
  5068  000038  5064               	movf	UgetTop5@quin^0,w,c
  5069  00003A  0D02               	mullw	2
  5070  00003C  50F3               	movf	243,w,c
  5071  00003E  0F9B               	addlw	low _puntuacions
  5072  000040  D000               	goto	PL62	;call to abstracted procedure
  5073  000042                     __end_of_UgetTop5:
  5074                           	callstack 0
  5075  000042                     PL62:
  5076                           	callstack 27
  5077  000042  6ED9               	movwf	fsr2l,c
  5078  000044  6ADA               	clrf	fsr2h,c
  5079  000046  50DF               	movf	indf2,w,c
  5080  000048  0012               	return		;funcret
  5081  00004A                     __end_ofPL62:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _UgetScore *****************
  5085 ;; Defined at:
  5086 ;;		line 291 in file "Usuaris.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  quin            1    wreg     unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  quin            1    5[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      unsigned char 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1
  5100 ;;      Params:         0       0       0
  5101 ;;      Locals:         1       0       0
  5102 ;;      Temps:          0       0       0
  5103 ;;      Totals:         1       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 2
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_menu
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text27
  5115  00008C                     __ptext27:
  5116                           	callstack 0
  5117  00008C                     _UgetScore:
  5118                           	callstack 27
  5119                           
  5120                           ;incstack = 0
  5121                           ;UgetScore@quin stored from wreg
  5122  00008C  6E64               	movwf	UgetScore@quin^0,c
  5123                           
  5124                           ;Usuaris.c: 292:     return puntuacions[quin].score;
  5125  00008E  5064               	movf	UgetScore@quin^0,w,c
  5126  000090  0D02               	mullw	2
  5127  000092  50F3               	movf	243,w,c
  5128  000094  0F9C               	addlw	low (_puntuacions+1)
  5129  000096  EF21  F000         	goto	PL62	;call to abstracted procedure
  5130  00009A                     __end_of_UgetScore:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _UgetNumUsuaris *****************
  5134 ;; Defined at:
  5135 ;;		line 40 in file "Usuaris.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      unsigned char 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1
  5149 ;;      Params:         0       0       0
  5150 ;;      Locals:         0       0       0
  5151 ;;      Temps:          0       0       0
  5152 ;;      Totals:         0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 2
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_menu
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text28
  5164  0001CA                     __ptext28:
  5165                           	callstack 0
  5166  0001CA                     _UgetNumUsuaris:
  5167                           	callstack 27
  5168                           
  5169                           ;Usuaris.c: 41:     return numUsuaris;
  5170                           
  5171                           ;incstack = 0
  5172  0001CA  502D               	movf	_numUsuaris^0,w,c
  5173  0001CC  0012               	return		;funcret
  5174  0001CE                     __end_of_UgetNumUsuaris:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _UenviaPas *****************
  5178 ;; Defined at:
  5179 ;;		line 56 in file "Usuaris.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  c               1    wreg     unsigned char 
  5182 ;;  pos             1    5[COMRAM] unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  c               1    6[COMRAM] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1
  5194 ;;      Params:         1       0       0
  5195 ;;      Locals:         1       0       0
  5196 ;;      Temps:          0       0       0
  5197 ;;      Totals:         2       0       0
  5198 ;;Total ram usage:        2 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; Hardware stack levels required when called: 2
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_menu
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text29
  5209  00005C                     __ptext29:
  5210                           	callstack 0
  5211  00005C                     _UenviaPas:
  5212                           	callstack 27
  5213                           
  5214                           ;incstack = 0
  5215                           ;UenviaPas@c stored from wreg
  5216  00005C  6E65               	movwf	UenviaPas@c^0,c
  5217                           
  5218                           ;Usuaris.c: 57:     tmpPassword[pos] = c;
  5219  00005E  5064               	movf	UenviaPas@pos^0,w,c
  5220  000060  0FAD               	addlw	low _tmpPassword
  5221  000062  6ED9               	movwf	fsr2l,c
  5222  000064  6ADA               	clrf	fsr2h,c
  5223  000066  C065  FFDF         	movff	UenviaPas@c,indf2
  5224  00006A  0012               	return		;funcret
  5225  00006C                     __end_of_UenviaPas:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function _UenviaChar *****************
  5229 ;; Defined at:
  5230 ;;		line 53 in file "Usuaris.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  c               1    wreg     unsigned char 
  5233 ;;  pos             1    5[COMRAM] unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  c               1    6[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1
  5245 ;;      Params:         1       0       0
  5246 ;;      Locals:         1       0       0
  5247 ;;      Temps:          0       0       0
  5248 ;;      Totals:         2       0       0
  5249 ;;Total ram usage:        2 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 2
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_menu
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text30
  5260  00006C                     __ptext30:
  5261                           	callstack 0
  5262  00006C                     _UenviaChar:
  5263                           	callstack 27
  5264                           
  5265                           ;incstack = 0
  5266                           ;UenviaChar@c stored from wreg
  5267  00006C  6E65               	movwf	UenviaChar@c^0,c
  5268                           
  5269                           ;Usuaris.c: 54:     tmpUsername[pos] = c;
  5270  00006E  5064               	movf	UenviaChar@pos^0,w,c
  5271  000070  0FB6               	addlw	low _tmpUsername
  5272  000072  6ED9               	movwf	fsr2l,c
  5273  000074  6ADA               	clrf	fsr2h,c
  5274  000076  C065  FFDF         	movff	UenviaChar@c,indf2
  5275  00007A  0012               	return		;funcret
  5276  00007C                     __end_of_UenviaChar:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _UcheckExistsNotFinished *****************
  5280 ;; Defined at:
  5281 ;;		line 47 in file "Usuaris.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1
  5295 ;;      Params:         0       0       0
  5296 ;;      Locals:         0       0       0
  5297 ;;      Temps:          0       0       0
  5298 ;;      Totals:         0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 2
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_menu
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text31
  5310  0000CA                     __ptext31:
  5311                           	callstack 0
  5312  0000CA                     _UcheckExistsNotFinished:
  5313                           	callstack 27
  5314                           
  5315                           ;Usuaris.c: 48:     return do_check_exists;
  5316                           
  5317                           ;incstack = 0
  5318  0000CA  BE76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5319  0000CC  D002               	goto	l4533
  5320  0000CE  90D8               	bcf	status,0,c
  5321  0000D0  0012               	return	
  5322  0000D2                     l4533:
  5323  0000D2  80D8               	bsf	status,0,c
  5324  0000D4  0012               	return		;funcret
  5325  0000D6                     __end_of_UcheckExistsNotFinished:
  5326                           	callstack 0
  5327                           
  5328 ;; *************** function _UcheckExistsGetError *****************
  5329 ;; Defined at:
  5330 ;;		line 50 in file "Usuaris.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      char 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1
  5344 ;;      Params:         0       0       0
  5345 ;;      Locals:         0       0       0
  5346 ;;      Temps:          0       0       0
  5347 ;;      Totals:         0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 2
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_menu
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text32
  5359  0001CE                     __ptext32:
  5360                           	callstack 0
  5361  0001CE                     _UcheckExistsGetError:
  5362                           	callstack 27
  5363                           
  5364                           ;Usuaris.c: 51:     return usuariLoguejat;
  5365                           
  5366                           ;incstack = 0
  5367  0001CE  504F               	movf	_usuariLoguejat^0,w,c
  5368  0001D0  0012               	return		;funcret
  5369  0001D2                     __end_of_UcheckExistsGetError:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function _UcheckExists *****************
  5373 ;; Defined at:
  5374 ;;		line 44 in file "Usuaris.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		None
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1
  5388 ;;      Params:         0       0       0
  5389 ;;      Locals:         0       0       0
  5390 ;;      Temps:          0       0       0
  5391 ;;      Totals:         0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 2
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_menu
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text33
  5403  0001D2                     __ptext33:
  5404                           	callstack 0
  5405  0001D2                     _UcheckExists:
  5406                           	callstack 27
  5407                           
  5408                           ;Usuaris.c: 45:     do_check_exists = 1;
  5409                           
  5410                           ;incstack = 0
  5411  0001D2  8E76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5412  0001D4  0012               	return		;funcret
  5413  0001D6                     __end_of_UcheckExists:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _URegister *****************
  5417 ;; Defined at:
  5418 ;;		line 60 in file "Usuaris.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		None
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1
  5432 ;;      Params:         0       0       0
  5433 ;;      Locals:         0       0       0
  5434 ;;      Temps:          0       0       0
  5435 ;;      Totals:         0       0       0
  5436 ;;Total ram usage:        0 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; Hardware stack levels required when called: 2
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_menu
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text34
  5447  0001D6                     __ptext34:
  5448                           	callstack 0
  5449  0001D6                     _URegister:
  5450                           	callstack 27
  5451                           
  5452                           ;Usuaris.c: 61:     do_register = 1;
  5453                           
  5454                           ;incstack = 0
  5455  0001D6  8C76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5456  0001D8  0012               	return		;funcret
  5457  0001DA                     __end_of_URegister:
  5458                           	callstack 0
  5459                           
  5460 ;; *************** function _SiFerMenu *****************
  5461 ;; Defined at:
  5462 ;;		line 19 in file "GestioLCD.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		None
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1
  5476 ;;      Params:         0       0       0
  5477 ;;      Locals:         0       0       0
  5478 ;;      Temps:          0       0       0
  5479 ;;      Totals:         0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 2
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_menu
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text35
  5491  0001DA                     __ptext35:
  5492                           	callstack 0
  5493  0001DA                     _SiFerMenu:
  5494                           	callstack 27
  5495                           
  5496                           ;GestioLCD.c: 20:     ferMenu = 1;
  5497                           
  5498                           ;incstack = 0
  5499  0001DA  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5500  0001DC  0012               	return		;funcret
  5501  0001DE                     __end_of_SiFerMenu:
  5502                           	callstack 0
  5503                           
  5504 ;; *************** function _SMSon *****************
  5505 ;; Defined at:
  5506 ;;		line 128 in file "Ssms.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		None
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1
  5520 ;;      Params:         0       0       0
  5521 ;;      Locals:         0       0       0
  5522 ;;      Temps:          0       0       0
  5523 ;;      Totals:         0       0       0
  5524 ;;Total ram usage:        0 bytes
  5525 ;; Hardware stack levels used: 1
  5526 ;; Hardware stack levels required when called: 2
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_menu
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text36
  5535  00019C                     __ptext36:
  5536                           	callstack 0
  5537  00019C                     _SMSon:
  5538                           	callstack 27
  5539                           
  5540                           ;Ssms.c: 129:     setSMSon = 1;
  5541                           
  5542                           ;incstack = 0
  5543  00019C  8277               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5544                           
  5545                           ;Ssms.c: 130:     novaTecla = -1;
  5546  00019E  6854               	setf	_novaTecla^0,c
  5547  0001A0  0012               	return		;funcret
  5548  0001A2                     __end_of_SMSon:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function _SMSoff *****************
  5552 ;; Defined at:
  5553 ;;		line 133 in file "Ssms.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		None
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1
  5567 ;;      Params:         0       0       0
  5568 ;;      Locals:         0       0       0
  5569 ;;      Temps:          0       0       0
  5570 ;;      Totals:         0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 2
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_menu
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text37
  5582  0001A2                     __ptext37:
  5583                           	callstack 0
  5584  0001A2                     _SMSoff:
  5585                           	callstack 27
  5586                           
  5587                           ;Ssms.c: 134:     setSMSon = 0;
  5588                           
  5589                           ;incstack = 0
  5590  0001A2  9277               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5591                           
  5592                           ;Ssms.c: 135:     novaTecla = -1;
  5593  0001A4  6854               	setf	_novaTecla^0,c
  5594  0001A6  0012               	return		;funcret
  5595  0001A8                     __end_of_SMSoff:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5599 ;; Defined at:
  5600 ;;		line 44 in file "SIO.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      char 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1
  5614 ;;      Params:         0       0       0
  5615 ;;      Locals:         0       0       0
  5616 ;;      Temps:          0       0       0
  5617 ;;      Totals:         0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; Hardware stack levels required when called: 2
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_menu
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text38
  5629  0001DE                     __ptext38:
  5630                           	callstack 0
  5631  0001DE                     _SIOHaAcabatPuntuacions:
  5632                           	callstack 27
  5633                           
  5634                           ;SIO.c: 45:     return usuariActualSIO;
  5635                           
  5636                           ;incstack = 0
  5637  0001DE  504A               	movf	_usuariActualSIO^0,w,c
  5638  0001E0  0012               	return		;funcret
  5639  0001E2                     __end_of_SIOHaAcabatPuntuacions:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function _NoFerMenu *****************
  5643 ;; Defined at:
  5644 ;;		line 22 in file "GestioLCD.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		None
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1
  5658 ;;      Params:         0       0       0
  5659 ;;      Locals:         0       0       0
  5660 ;;      Temps:          0       0       0
  5661 ;;      Totals:         0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 2
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_menu
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text39
  5673  0001E2                     __ptext39:
  5674                           	callstack 0
  5675  0001E2                     _NoFerMenu:
  5676                           	callstack 27
  5677                           
  5678                           ;GestioLCD.c: 23:     ferMenu = 0;
  5679                           
  5680                           ;incstack = 0
  5681  0001E2  9476               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5682  0001E4  0012               	return		;funcret
  5683  0001E6                     __end_of_NoFerMenu:
  5684                           	callstack 0
  5685                           
  5686 ;; *************** function _LcScroll *****************
  5687 ;; Defined at:
  5688 ;;		line 37 in file "LcTLCD.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1
  5702 ;;      Params:         0       0       0
  5703 ;;      Locals:         0       0       0
  5704 ;;      Temps:          0       0       0
  5705 ;;      Totals:         0       0       0
  5706 ;;Total ram usage:        0 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; Hardware stack levels required when called: 4
  5709 ;; This function calls:
  5710 ;;		_CantaIR
  5711 ;; This function is called by:
  5712 ;;		_menu
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text40
  5717  0001A8                     __ptext40:
  5718                           	callstack 0
  5719  0001A8                     _LcScroll:
  5720                           	callstack 25
  5721                           
  5722                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5723                           
  5724                           ;incstack = 0
  5725  0001A8  0E18               	movlw	24
  5726  0001AA  EFAF  F00F         	goto	_CantaIR
  5727  0001AE                     __end_of_LcScroll:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _JnovaTecla *****************
  5731 ;; Defined at:
  5732 ;;		line 16 in file "Joc.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  tecla           1    wreg     char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  tecla           1    5[COMRAM] char 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1
  5746 ;;      Params:         0       0       0
  5747 ;;      Locals:         1       0       0
  5748 ;;      Temps:          0       0       0
  5749 ;;      Totals:         1       0       0
  5750 ;;Total ram usage:        1 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 2
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_menu
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text41
  5761  00011E                     __ptext41:
  5762                           	callstack 0
  5763  00011E                     _JnovaTecla:
  5764                           	callstack 27
  5765                           
  5766                           ;incstack = 0
  5767                           ;JnovaTecla@tecla stored from wreg
  5768  00011E  6E64               	movwf	JnovaTecla@tecla^0,c
  5769                           
  5770                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5771  000120  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5772  000124  0012               	return		;funcret
  5773  000126                     __end_of_JnovaTecla:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function _JnovaDireccio *****************
  5777 ;; Defined at:
  5778 ;;		line 19 in file "Joc.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  dir             1    wreg     unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  dir             1    5[COMRAM] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1
  5792 ;;      Params:         0       0       0
  5793 ;;      Locals:         1       0       0
  5794 ;;      Temps:          0       0       0
  5795 ;;      Totals:         1       0       0
  5796 ;;Total ram usage:        1 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_menu
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text42
  5807  000126                     __ptext42:
  5808                           	callstack 0
  5809  000126                     _JnovaDireccio:
  5810                           	callstack 27
  5811                           
  5812                           ;incstack = 0
  5813                           ;JnovaDireccio@dir stored from wreg
  5814  000126  6E64               	movwf	JnovaDireccio@dir^0,c
  5815                           
  5816                           ;Joc.c: 20:     direccioJoc = dir;
  5817  000128  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5818  00012C  0012               	return		;funcret
  5819  00012E                     __end_of_JnovaDireccio:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _JendGame *****************
  5823 ;; Defined at:
  5824 ;;		line 23 in file "Joc.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		None
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1
  5838 ;;      Params:         0       0       0
  5839 ;;      Locals:         0       0       0
  5840 ;;      Temps:          0       0       0
  5841 ;;      Totals:         0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used: 1
  5844 ;; Hardware stack levels required when called: 2
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_menu
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text43
  5853  0001E6                     __ptext43:
  5854                           	callstack 0
  5855  0001E6                     _JendGame:
  5856                           	callstack 27
  5857                           
  5858                           ;Joc.c: 24:     jugantJoc = 0;
  5859                           
  5860                           ;incstack = 0
  5861  0001E6  9675               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5862  0001E8  0012               	return		;funcret
  5863  0001EA                     __end_of_JendGame:
  5864                           	callstack 0
  5865                           
  5866 ;; *************** function _JJuguem *****************
  5867 ;; Defined at:
  5868 ;;		line 13 in file "Joc.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  usuari          1    wreg     unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  usuari          1    5[COMRAM] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1
  5882 ;;      Params:         0       0       0
  5883 ;;      Locals:         1       0       0
  5884 ;;      Temps:          0       0       0
  5885 ;;      Totals:         1       0       0
  5886 ;;Total ram usage:        1 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; Hardware stack levels required when called: 2
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_menu
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text44
  5897  00012E                     __ptext44:
  5898                           	callstack 0
  5899  00012E                     _JJuguem:
  5900                           	callstack 27
  5901                           
  5902                           ;incstack = 0
  5903                           ;JJuguem@usuari stored from wreg
  5904  00012E  6E64               	movwf	JJuguem@usuari^0,c
  5905                           
  5906                           ;Joc.c: 14:     usuariJoc = usuari;
  5907  000130  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5908  000134  0012               	return		;funcret
  5909  000136                     __end_of_JJuguem:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _HActualitzaHora *****************
  5913 ;; Defined at:
  5914 ;;		line 16 in file "Hora.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5917 ;;		 -> horaTmp(4), 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1
  5929 ;;      Params:         1       0       0
  5930 ;;      Locals:         0       0       0
  5931 ;;      Temps:          0       0       0
  5932 ;;      Totals:         1       0       0
  5933 ;;Total ram usage:        1 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 2
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_menu
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text45
  5944  001E98                     __ptext45:
  5945                           	callstack 0
  5946  001E98                     _HActualitzaHora:
  5947                           	callstack 27
  5948                           
  5949                           ;Hora.c: 17:     hora[0] = nova[0];
  5950                           
  5951                           ;incstack = 0
  5952  001E98  5064               	movf	HActualitzaHora@nova^0,w,c
  5953  001E9A  6ED9               	movwf	fsr2l,c
  5954  001E9C  6ADA               	clrf	fsr2h,c
  5955  001E9E  50DF               	movf	indf2,w,c
  5956  001EA0  6E56               	movwf	_hora^0,c
  5957                           
  5958                           ;Hora.c: 18:     hora[1] = nova[1];
  5959  001EA2  5064               	movf	HActualitzaHora@nova^0,w,c
  5960  001EA4  ECAD  F006         	call	PL64	;call to abstracted procedure
  5961  001EA8  6E57               	movwf	(_hora+1)^0,c
  5962                           
  5963                           ;Hora.c: 19:     hora[3] = nova[2];
  5964  001EAA  5064               	movf	HActualitzaHora@nova^0,w,c
  5965  001EAC  EC9C  F006         	call	PL52	;call to abstracted procedure
  5966  001EB0  6E59               	movwf	(_hora+3)^0,c
  5967                           
  5968                           ;Hora.c: 20:     hora[4] = nova[3];
  5969  001EB2  5064               	movf	HActualitzaHora@nova^0,w,c
  5970  001EB4  ECA2  F006         	call	PL54	;call to abstracted procedure
  5971  001EB8  6E5A               	movwf	(_hora+4)^0,c
  5972  001EBA  0012               	return		;funcret
  5973  001EBC                     __end_of_HActualitzaHora:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _GLCDMostraMenu *****************
  5977 ;; Defined at:
  5978 ;;		line 30 in file "GestioLCD.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  num             1    wreg     unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  num             1    5[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1
  5992 ;;      Params:         0       0       0
  5993 ;;      Locals:         1       0       0
  5994 ;;      Temps:          0       0       0
  5995 ;;      Totals:         1       0       0
  5996 ;;Total ram usage:        1 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 2
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_menu
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text46
  6007  0000D6                     __ptext46:
  6008                           	callstack 0
  6009  0000D6                     _GLCDMostraMenu:
  6010                           	callstack 27
  6011                           
  6012                           ;incstack = 0
  6013                           ;GLCDMostraMenu@num stored from wreg
  6014  0000D6  6E64               	movwf	GLCDMostraMenu@num^0,c
  6015                           
  6016                           ;GestioLCD.c: 31:     newString = 1;
  6017  0000D8  8276               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  6018                           
  6019                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  6020  0000DA  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  6021                           
  6022                           ;GestioLCD.c: 33:     ferMenu = 1;
  6023  0000DE  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6024  0000E0  0012               	return		;funcret
  6025  0000E2                     __end_of_GLCDMostraMenu:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function _CToAobtenir *****************
  6029 ;; Defined at:
  6030 ;;		line 7 in file "CtoA.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      PTR unsigned char 
  6037 ;; Registers used:
  6038 ;;		wreg
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1
  6044 ;;      Params:         2       0       0
  6045 ;;      Locals:         0       0       0
  6046 ;;      Temps:          0       0       0
  6047 ;;      Totals:         2       0       0
  6048 ;;Total ram usage:        2 bytes
  6049 ;; Hardware stack levels used: 1
  6050 ;; Hardware stack levels required when called: 2
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_menu
  6055 ;;		_motorSIO
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text47
  6060  0001EA                     __ptext47:
  6061                           	callstack 0
  6062  0001EA                     _CToAobtenir:
  6063                           	callstack 27
  6064                           
  6065                           ;CtoA.c: 8:     return stringScore;
  6066                           
  6067                           ;incstack = 0
  6068  0001EA  0E5C               	movlw	_stringScore& (0+255)
  6069  0001EC  0012               	return		;funcret
  6070  0001EE                     __end_of_CToAobtenir:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _CToAHaAcabat *****************
  6074 ;; Defined at:
  6075 ;;		line 10 in file "CtoA.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      unsigned char 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1
  6089 ;;      Params:         0       0       0
  6090 ;;      Locals:         0       0       0
  6091 ;;      Temps:          0       0       0
  6092 ;;      Totals:         0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 2
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_menu
  6100 ;;		_motorSIO
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text48
  6105  0001EE                     __ptext48:
  6106                           	callstack 0
  6107  0001EE                     _CToAHaAcabat:
  6108                           	callstack 27
  6109                           
  6110                           ;CtoA.c: 11:     return convertir;
  6111                           
  6112                           ;incstack = 0
  6113  0001EE  5047               	movf	_convertir^0,w,c
  6114  0001F0  0012               	return		;funcret
  6115  0001F2                     __end_of_CToAHaAcabat:
  6116                           	callstack 0
  6117                           
  6118 ;; *************** function _CToAConverteix *****************
  6119 ;; Defined at:
  6120 ;;		line 14 in file "CtoA.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  numero          1    wreg     unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  numero          1    5[COMRAM] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1
  6134 ;;      Params:         0       0       0
  6135 ;;      Locals:         1       0       0
  6136 ;;      Temps:          0       0       0
  6137 ;;      Totals:         1       0       0
  6138 ;;Total ram usage:        1 bytes
  6139 ;; Hardware stack levels used: 1
  6140 ;; Hardware stack levels required when called: 3
  6141 ;; This function calls:
  6142 ;;		_CToAReset
  6143 ;; This function is called by:
  6144 ;;		_menu
  6145 ;;		_motorSIO
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text49
  6150  0000E2                     __ptext49:
  6151                           	callstack 0
  6152  0000E2                     _CToAConverteix:
  6153                           	callstack 26
  6154                           
  6155                           ;incstack = 0
  6156                           ;CToAConverteix@numero stored from wreg
  6157  0000E2  6E64               	movwf	CToAConverteix@numero^0,c
  6158                           
  6159                           ;CtoA.c: 15:     CToAReset();
  6160  0000E4  EC9B  F000         	call	_CToAReset	;wreg free
  6161                           
  6162                           ;CtoA.c: 16:     convertir = numero;
  6163  0000E8  C064  F047         	movff	CToAConverteix@numero,_convertir
  6164  0000EC  0012               	return		;funcret
  6165  0000EE                     __end_of_CToAConverteix:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function _CToAReset *****************
  6169 ;; Defined at:
  6170 ;;		line 18 in file "CtoA.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1
  6184 ;;      Params:         0       0       0
  6185 ;;      Locals:         0       0       0
  6186 ;;      Temps:          0       0       0
  6187 ;;      Totals:         0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 2
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_CToAConverteix
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text50
  6199  000136                     __ptext50:
  6200                           	callstack 0
  6201  000136                     _CToAReset:
  6202                           	callstack 26
  6203                           
  6204                           ;CtoA.c: 19:     stringScore[0] = '0';
  6205                           
  6206                           ;incstack = 0
  6207  000136  0E30               	movlw	48
  6208  000138  6E5C               	movwf	_stringScore^0,c
  6209                           
  6210                           ;CtoA.c: 20:     stringScore[1] = '0';
  6211  00013A  6E5D               	movwf	(_stringScore+1)^0,c
  6212  00013C  0C30               	retlw	48	;funcret
  6213  00013E                     __end_of_CToAReset:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _init_ports *****************
  6217 ;; Defined at:
  6218 ;;		line 24 in file "main.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1
  6232 ;;      Params:         0       0       0
  6233 ;;      Locals:         0       0       0
  6234 ;;      Temps:          0       0       0
  6235 ;;      Totals:         0       0       0
  6236 ;;Total ram usage:        0 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; Hardware stack levels required when called: 2
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text51
  6247  001F24                     __ptext51:
  6248                           	callstack 0
  6249  001F24                     _init_ports:
  6250                           	callstack 28
  6251                           
  6252                           ;incstack = 0
  6253  001F24  0E03               	movlw	3
  6254  001F26  6E92               	movwf	146,c	;volatile
  6255  001F28  0EE0               	movlw	224
  6256  001F2A  6E93               	movwf	147,c	;volatile
  6257  001F2C  968A               	bcf	138,3,c	;volatile
  6258  001F2E  908A               	bcf	138,0,c	;volatile
  6259  001F30  828A               	bsf	138,1,c	;volatile
  6260                           
  6261                           ;main.c: 48:     TRISC = 0xC0;
  6262  001F32  0EC0               	movlw	192
  6263  001F34  6E94               	movwf	148,c	;volatile
  6264                           
  6265                           ;main.c: 58:     TRISD = 0x8F;
  6266  001F36  0E8F               	movlw	143
  6267  001F38  6E95               	movwf	149,c	;volatile
  6268                           
  6269                           ;main.c: 59:     LATD = 0x00;
  6270  001F3A  6A8C               	clrf	140,c	;volatile
  6271                           
  6272                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6273  001F3C  8EA6               	bsf	166,7,c	;volsfr
  6274                           
  6275                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6276  001F3E  9CA6               	bcf	166,6,c	;volsfr
  6277  001F40  0012               	return		;funcret
  6278  001F42                     __end_of_init_ports:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _init_eusart *****************
  6282 ;; Defined at:
  6283 ;;		line 66 in file "main.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1
  6297 ;;      Params:         0       0       0
  6298 ;;      Locals:         0       0       0
  6299 ;;      Temps:          0       0       0
  6300 ;;      Totals:         0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 2
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_main
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text52
  6312  001FCC                     __ptext52:
  6313                           	callstack 0
  6314  001FCC                     _init_eusart:
  6315                           	callstack 28
  6316                           
  6317                           ;main.c: 67:     TXSTA = 0x24;
  6318                           
  6319                           ;incstack = 0
  6320  001FCC  0E24               	movlw	36
  6321  001FCE  6EAC               	movwf	172,c	;volatile
  6322                           
  6323                           ;main.c: 68:     RCSTA = 0x90;
  6324  001FD0  0E90               	movlw	144
  6325  001FD2  6EAB               	movwf	171,c	;volatile
  6326                           
  6327                           ;main.c: 69:     BAUDCON = 0x08;
  6328  001FD4  0E08               	movlw	8
  6329  001FD6  6EB8               	movwf	184,c	;volatile
  6330                           
  6331                           ;main.c: 70:     SPBRGH = 0x04;
  6332  001FD8  0E04               	movlw	4
  6333  001FDA  6EB0               	movwf	176,c	;volatile
  6334                           
  6335                           ;main.c: 71:     SPBRG = 0x10;
  6336  001FDC  0E10               	movlw	16
  6337  001FDE  6EAF               	movwf	175,c	;volatile
  6338  001FE0  0C10               	retlw	16	;funcret
  6339  001FE2                     __end_of_init_eusart:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function _initSIO *****************
  6343 ;; Defined at:
  6344 ;;		line 24 in file "SIO.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1
  6358 ;;      Params:         0       0       0
  6359 ;;      Locals:         0       0       0
  6360 ;;      Temps:          0       0       0
  6361 ;;      Totals:         0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 3
  6365 ;; This function calls:
  6366 ;;		_TiGetTimer
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text53
  6373  00013E                     __ptext53:
  6374                           	callstack 0
  6375  00013E                     _initSIO:
  6376                           	callstack 27
  6377                           
  6378                           ;SIO.c: 25:     timerSIO = TiGetTimer();
  6379                           
  6380                           ;incstack = 0
  6381  00013E  ECD8  F00E         	call	_TiGetTimer	;wreg free
  6382  000142  6E11               	movwf	_timerSIO^0,c
  6383  000144  0012               	return		;funcret
  6384  000146                     __end_of_initSIO:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _initHora *****************
  6388 ;; Defined at:
  6389 ;;		line 12 in file "Hora.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1
  6403 ;;      Params:         0       0       0
  6404 ;;      Locals:         0       0       0
  6405 ;;      Temps:          0       0       0
  6406 ;;      Totals:         0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 3
  6410 ;; This function calls:
  6411 ;;		_TiGetTimer
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text54
  6418  000146                     __ptext54:
  6419                           	callstack 0
  6420  000146                     _initHora:
  6421                           	callstack 27
  6422                           
  6423                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6424                           
  6425                           ;incstack = 0
  6426  000146  ECD8  F00E         	call	_TiGetTimer	;wreg free
  6427  00014A  6E16               	movwf	_timerHora^0,c
  6428  00014C  0012               	return		;funcret
  6429  00014E                     __end_of_initHora:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _initAltaveu *****************
  6433 ;; Defined at:
  6434 ;;		line 10 in file "Altaveu.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1
  6448 ;;      Params:         0       0       0
  6449 ;;      Locals:         0       0       0
  6450 ;;      Temps:          0       0       0
  6451 ;;      Totals:         0       0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used: 1
  6454 ;; Hardware stack levels required when called: 3
  6455 ;; This function calls:
  6456 ;;		_TiGetTimer
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text55
  6463  00014E                     __ptext55:
  6464                           	callstack 0
  6465  00014E                     _initAltaveu:
  6466                           	callstack 27
  6467                           
  6468                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6469                           
  6470                           ;incstack = 0
  6471  00014E  ECD8  F00E         	call	_TiGetTimer	;wreg free
  6472  000152  6E25               	movwf	_timerAltaveu^0,c
  6473  000154  0012               	return		;funcret
  6474  000156                     __end_of_initAltaveu:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function _UmotorUsers *****************
  6478 ;; Defined at:
  6479 ;;		line 151 in file "Usuaris.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      void 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1
  6493 ;;      Params:         0       0       0
  6494 ;;      Locals:         0       0       0
  6495 ;;      Temps:          2       0       0
  6496 ;;      Totals:         2       0       0
  6497 ;;Total ram usage:        2 bytes
  6498 ;; Hardware stack levels used: 1
  6499 ;; Hardware stack levels required when called: 3
  6500 ;; This function calls:
  6501 ;;		_compareStrings
  6502 ;;		_escriureCharEEPROM
  6503 ;; This function is called by:
  6504 ;;		_main
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text56
  6509  000FFC                     __ptext56:
  6510                           	callstack 0
  6511  000FFC                     _UmotorUsers:
  6512                           	callstack 27
  6513                           
  6514                           ;Usuaris.c: 152:     static char state = 0;;Usuaris.c: 154:  switch(state) {
  6515                           
  6516                           ;incstack = 0
  6517  000FFC  D0FD               	goto	l6131
  6518  000FFE                     l767:
  6519                           
  6520                           ;Usuaris.c: 156:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6521  000FFE  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6522  001000  BC76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6523  001002  D006               	goto	l768
  6524  001004  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6525  001006  B876               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6526  001008  D003               	goto	l768
  6527                           
  6528                           ;Usuaris.c: 157:     i = 0;
  6529  00100A  6A2A               	clrf	_i^0,c
  6530                           
  6531                           ;Usuaris.c: 158:     j = 0;
  6532  00100C  6A29               	clrf	_j^0,c
  6533                           
  6534                           ;Usuaris.c: 159:    }
  6535  00100E  0012               	return	
  6536  001010                     l768:
  6537  001010  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6538  001012  D004               	goto	l770
  6539                           
  6540                           ;Usuaris.c: 161:     usuariLoguejat = -1;
  6541  001014  684F               	setf	_usuariLoguejat^0,c
  6542  001016                     l5973:
  6543                           
  6544                           ;Usuaris.c: 162:     state = 1;
  6545  001016  0E01               	movlw	1
  6546  001018  6E27               	movwf	UmotorUsers@state^0,c
  6547                           
  6548                           ;Usuaris.c: 163:    }
  6549  00101A  0C01               	retlw	1
  6550  00101C                     l770:
  6551  00101C  AC76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6552  00101E  D00B               	goto	l772
  6553                           
  6554                           ;Usuaris.c: 165:     if(numUsuaris != 8) numUsuaris++;
  6555  001020  0E08               	movlw	8
  6556  001022  182D               	xorwf	_numUsuaris^0,w,c
  6557  001024  E001               	bz	l5979
  6558  001026  2A2D               	incf	_numUsuaris^0,f,c
  6559  001028                     l5979:
  6560                           
  6561                           ;Usuaris.c: 167:     escriureCharEEPROM(numUsuaris,0);
  6562  001028  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6563  00102A  502D               	movf	_numUsuaris^0,w,c
  6564  00102C  EC02  F00F         	call	_escriureCharEEPROM
  6565  001030                     l5981:
  6566                           
  6567                           ;Usuaris.c: 168:     state = 2;
  6568  001030  0E02               	movlw	2
  6569  001032  6E27               	movwf	UmotorUsers@state^0,c
  6570                           
  6571                           ;Usuaris.c: 169:    }
  6572  001034  0C02               	retlw	2
  6573  001036                     l772:
  6574  001036  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6575  001038  D016               	goto	l775
  6576                           
  6577                           ;Usuaris.c: 171:     arrayShowUsers[0] = usuariLoguejat;
  6578  00103A  C04F  F0A5         	movff	_usuariLoguejat,_arrayShowUsers
  6579                           
  6580                           ;Usuaris.c: 172:     arrayShowUsers[1] = -1;
  6581  00103E  0100               	movlb	0	; () banked
  6582  001040  69A6               	setf	(_arrayShowUsers+1)& (0+255),b
  6583                           
  6584                           ;Usuaris.c: 173:     arrayShowUsers[2] = -1;
  6585  001042  69A7               	setf	(_arrayShowUsers+2)& (0+255),b
  6586                           
  6587                           ;Usuaris.c: 174:     arrayShowUsers[3] = -1;
  6588  001044  69A8               	setf	(_arrayShowUsers+3)& (0+255),b
  6589                           
  6590                           ;Usuaris.c: 175:     arrayShowUsers[4] = -1;
  6591  001046  69A9               	setf	(_arrayShowUsers+4)& (0+255),b
  6592                           
  6593                           ;Usuaris.c: 176:     arrayShowUsers[5] = -1;
  6594  001048  69AA               	setf	(_arrayShowUsers+5)& (0+255),b
  6595                           
  6596                           ;Usuaris.c: 177:     arrayShowUsers[6] = -1;
  6597  00104A  69AB               	setf	(_arrayShowUsers+6)& (0+255),b
  6598                           
  6599                           ;Usuaris.c: 178:     arrayShowUsers[7] = -1;
  6600  00104C  69AC               	setf	(_arrayShowUsers+7)& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;Usuaris.c: 179:     i = 1;
  6604  00104E  0E01               	movlw	1
  6605  001050  6E2A               	movwf	_i^0,c
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;Usuaris.c: 180:     if(numUsuaris < 7) {
  6609  001052  0E07               	movlw	7
  6610  001054  602D               	cpfslt	_numUsuaris^0,c
  6611  001056  D002               	goto	l776
  6612  001058                     u6220:
  6613                           
  6614                           ;Usuaris.c: 181:       j = 0;
  6615  001058  6A29               	clrf	_j^0,c
  6616                           
  6617                           ;Usuaris.c: 182:     }
  6618  00105A  D002               	goto	l5991
  6619  00105C                     l776:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;Usuaris.c: 184:       j = indexNextUserStruct;
  6623  00105C  C02B  F029         	movff	_indexNextUserStruct,_j
  6624  001060                     l5991:
  6625                           
  6626                           ;Usuaris.c: 186:     state = 5;
  6627  001060  0E05               	movlw	5
  6628  001062  6E27               	movwf	UmotorUsers@state^0,c
  6629                           
  6630                           ;Usuaris.c: 187:    }
  6631  001064  0C05               	retlw	5
  6632  001066                     l775:
  6633  001066  A876               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6634  001068  0012               	return	
  6635                           
  6636                           ;Usuaris.c: 189:     do_updateScore = 0;
  6637  00106A  9876               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6638  00106C                     l5995:
  6639                           
  6640                           ;Usuaris.c: 190:     state = 6;
  6641  00106C  0E06               	movlw	6
  6642  00106E  6E27               	movwf	UmotorUsers@state^0,c
  6643  001070  0C06               	retlw	6
  6644  001072                     l5997:
  6645                           
  6646                           ;Usuaris.c: 194:    if (i < numUsuaris) {
  6647  001072  502D               	movf	_numUsuaris^0,w,c
  6648  001074  5C2A               	subwf	_i^0,w,c
  6649  001076  E212               	bc	l6007
  6650                           
  6651                           ;Usuaris.c: 195:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6652  001078  0EB6               	movlw	low _tmpUsername
  6653  00107A  6E64               	movwf	compareStrings@a^0,c
  6654  00107C  502A               	movf	_i^0,w,c
  6655  00107E  0D12               	mullw	18
  6656  001080  0E00               	movlw	low _usuaris
  6657  001082  24F3               	addwf	243,w,c
  6658  001084  6E65               	movwf	compareStrings@b^0,c
  6659  001086  0E01               	movlw	high _usuaris
  6660  001088  20F4               	addwfc	prodh,w,c
  6661  00108A  6E66               	movwf	(compareStrings@b+1)^0,c
  6662  00108C  EC4A  F00E         	call	_compareStrings	;wreg free
  6663  001090  0900               	iorlw	0
  6664  001092  E102               	bnz	l6003
  6665                           
  6666                           ;Usuaris.c: 196:      usuariLoguejat = i;
  6667  001094  C02A  F04F         	movff	_i,_usuariLoguejat
  6668  001098                     l6003:
  6669                           
  6670                           ;Usuaris.c: 199:     i++;
  6671  001098  2A2A               	incf	_i^0,f,c
  6672  00109A  D7BD               	goto	l5973
  6673  00109C                     l6007:
  6674  00109C  502D               	movf	_numUsuaris^0,w,c
  6675  00109E  182A               	xorwf	_i^0,w,c
  6676  0010A0  A4D8               	btfss	status,2,c
  6677  0010A2  0012               	return	
  6678                           
  6679                           ;Usuaris.c: 203:     do_check_exists = 0;
  6680  0010A4  9E76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6681                           
  6682                           ;Usuaris.c: 204:     state = 0;
  6683  0010A6  6A27               	clrf	UmotorUsers@state^0,c
  6684  0010A8  0012               	return	
  6685  0010AA                     l6011:
  6686                           
  6687                           ;Usuaris.c: 208:    if (i < 9) {
  6688  0010AA  0E09               	movlw	9
  6689  0010AC  602A               	cpfslt	_i^0,c
  6690  0010AE  D00D               	goto	l6023
  6691                           
  6692                           ;Usuaris.c: 209:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6693  0010B0  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6694  0010B4  502A               	movf	_i^0,w,c
  6695  0010B6  0FB6               	addlw	low _tmpUsername
  6696  0010B8  D8DF               	call	PL58	;call to abstracted procedure
  6697  0010BA  EC02  F00F         	call	_escriureCharEEPROM
  6698                           
  6699                           ;Usuaris.c: 210:     indexNextUser++;
  6700  0010BE  2A2C               	incf	_indexNextUser^0,f,c
  6701                           
  6702                           ;Usuaris.c: 211:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6703  0010C0  502A               	movf	_i^0,w,c
  6704  0010C2  0FB6               	addlw	low _tmpUsername
  6705  0010C4  D8D0               	call	PL26	;call to abstracted procedure
  6706                           
  6707                           ;Usuaris.c: 212:     i++;
  6708  0010C6  D8BA               	call	PL20	;call to abstracted procedure
  6709  0010C8  D7B3               	goto	l5981
  6710  0010CA                     l6023:
  6711  0010CA  0E08               	movlw	8
  6712  0010CC  642A               	cpfsgt	_i^0,c
  6713  0010CE  0C08               	retlw	8
  6714                           
  6715                           ;Usuaris.c: 216:     i = 0;
  6716  0010D0  6A2A               	clrf	_i^0,c
  6717  0010D2                     l6027:
  6718                           
  6719                           ;Usuaris.c: 217:     state = 3;
  6720  0010D2  0E03               	movlw	3
  6721  0010D4  6E27               	movwf	UmotorUsers@state^0,c
  6722  0010D6  0C03               	retlw	3
  6723  0010D8                     l6029:
  6724                           
  6725                           ;Usuaris.c: 221:    if (i < 9) {
  6726  0010D8  0E09               	movlw	9
  6727  0010DA  602A               	cpfslt	_i^0,c
  6728  0010DC  D011               	goto	l6041
  6729                           
  6730                           ;Usuaris.c: 222:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6731  0010DE  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6732  0010E2  502A               	movf	_i^0,w,c
  6733  0010E4  0FAD               	addlw	low _tmpPassword
  6734  0010E6  D8C8               	call	PL58	;call to abstracted procedure
  6735  0010E8  EC02  F00F         	call	_escriureCharEEPROM
  6736                           
  6737                           ;Usuaris.c: 223:     indexNextUser++;
  6738  0010EC  2A2C               	incf	_indexNextUser^0,f,c
  6739                           
  6740                           ;Usuaris.c: 224:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6741  0010EE  502A               	movf	_i^0,w,c
  6742  0010F0  0FAD               	addlw	low _tmpPassword
  6743  0010F2  D8B9               	call	PL26	;call to abstracted procedure
  6744  0010F4  0E09               	movlw	9
  6745  0010F6  2669               	addwf	??_UmotorUsers^0,f,c
  6746  0010F8  0E00               	movlw	0
  6747  0010FA  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6748                           
  6749                           ;Usuaris.c: 225:     i++;
  6750  0010FC  D89F               	call	PL20	;call to abstracted procedure
  6751  0010FE  D7E9               	goto	l6027
  6752  001100                     l6041:
  6753  001100  0E08               	movlw	8
  6754  001102  642A               	cpfsgt	_i^0,c
  6755  001104  0C08               	retlw	8
  6756                           
  6757                           ;Usuaris.c: 229:     do_register = 0;
  6758  001106  9C76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6759                           
  6760                           ;Usuaris.c: 230:     if(indexNextUser == 159) indexNextUser = 16;
  6761  001108  0E9F               	movlw	159
  6762  00110A  182C               	xorwf	_indexNextUser^0,w,c
  6763  00110C  E102               	bnz	l6049
  6764  00110E  0E10               	movlw	16
  6765  001110  6E2C               	movwf	_indexNextUser^0,c
  6766  001112                     l6049:
  6767                           
  6768                           ;Usuaris.c: 231:     indexNextUserStruct++;
  6769  001112  2A2B               	incf	_indexNextUserStruct^0,f,c
  6770                           
  6771                           ;Usuaris.c: 232:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6772  001114  0E08               	movlw	8
  6773  001116  182B               	xorwf	_indexNextUserStruct^0,w,c
  6774  001118  E101               	bnz	l6055
  6775  00111A  6A2B               	clrf	_indexNextUserStruct^0,c
  6776  00111C                     l6055:
  6777                           
  6778                           ;Usuaris.c: 233:     escriureCharEEPROM(indexNextUser,1);
  6779  00111C  0E01               	movlw	1
  6780  00111E  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6781  001120  502C               	movf	_indexNextUser^0,w,c
  6782  001122  EC02  F00F         	call	_escriureCharEEPROM
  6783  001126                     l6057:
  6784                           
  6785                           ;Usuaris.c: 234:     state = 0;
  6786  001126  6A27               	clrf	UmotorUsers@state^0,c
  6787  001128  0012               	return	
  6788  00112A                     l6059:
  6789                           
  6790                           ;Usuaris.c: 238:    if (i < numUsuaris) {
  6791  00112A  502D               	movf	_numUsuaris^0,w,c
  6792  00112C  5C2A               	subwf	_i^0,w,c
  6793  00112E  E217               	bc	l6075
  6794                           
  6795                           ;Usuaris.c: 239:     if(j != usuariLoguejat){
  6796  001130  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6797  001134  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6798  001136  BE69               	btfsc	??_UmotorUsers^0,7,c
  6799  001138  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6800  00113A  5029               	movf	_j^0,w,c
  6801  00113C  1869               	xorwf	??_UmotorUsers^0,w,c
  6802  00113E  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6803  001140  E008               	bz	l6067
  6804                           
  6805                           ;Usuaris.c: 240:       arrayShowUsers[i] = j;
  6806  001142  502A               	movf	_i^0,w,c
  6807  001144  0FA5               	addlw	low _arrayShowUsers
  6808  001146  6ED9               	movwf	fsr2l,c
  6809  001148  6ADA               	clrf	fsr2h,c
  6810  00114A  C029  FFDF         	movff	_j,indf2
  6811                           
  6812                           ;Usuaris.c: 241:      i++;
  6813  00114E  2A2A               	incf	_i^0,f,c
  6814                           
  6815                           ;Usuaris.c: 242:     }else{
  6816  001150  D001               	goto	l799
  6817  001152                     l6067:
  6818                           
  6819                           ;Usuaris.c: 243:       j++;
  6820  001152  2A29               	incf	_j^0,f,c
  6821  001154                     l799:
  6822                           
  6823                           ;Usuaris.c: 245:     j++;
  6824  001154  2A29               	incf	_j^0,f,c
  6825                           
  6826                           ;Usuaris.c: 246:     if(j > 7) j=0;
  6827  001156  0E07               	movlw	7
  6828  001158  6429               	cpfsgt	_j^0,c
  6829  00115A  D782               	goto	l5991
  6830  00115C  D77D               	goto	u6220
  6831  00115E                     l6075:
  6832  00115E  502D               	movf	_numUsuaris^0,w,c
  6833  001160  182A               	xorwf	_i^0,w,c
  6834  001162  A4D8               	btfss	status,2,c
  6835  001164  0012               	return	
  6836                           
  6837                           ;Usuaris.c: 250:     do_showUsers = 0;
  6838  001166  9A76               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6839                           
  6840                           ;Usuaris.c: 251:     state = 0;
  6841  001168  6A27               	clrf	UmotorUsers@state^0,c
  6842  00116A  0012               	return	
  6843  00116C                     l6079:
  6844                           
  6845                           ;Usuaris.c: 255:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6846  00116C  0E05               	movlw	5
  6847  00116E  602A               	cpfslt	_i^0,c
  6848  001170  D005               	goto	l6087
  6849  001172  D872               	call	PL22	;call to abstracted procedure
  6850  001174  28DE               	incf	postinc2,w,c
  6851  001176  E002               	bz	l6087
  6852                           
  6853                           ;Usuaris.c: 256:     i++;
  6854  001178  2A2A               	incf	_i^0,f,c
  6855  00117A  D778               	goto	l5995
  6856  00117C                     l6087:
  6857  00117C  0E05               	movlw	5
  6858  00117E  602A               	cpfslt	_i^0,c
  6859  001180  D006               	goto	l6093
  6860  001182  D86A               	call	PL22	;call to abstracted procedure
  6861  001184  28DE               	incf	postinc2,w,c
  6862  001186  E103               	bnz	l6093
  6863  001188                     u6400:
  6864                           
  6865                           ;Usuaris.c: 260:     state = 7;
  6866  001188  0E07               	movlw	7
  6867  00118A  6E27               	movwf	UmotorUsers@state^0,c
  6868                           
  6869                           ;Usuaris.c: 261:    }
  6870  00118C  0C07               	retlw	7
  6871  00118E                     l6093:
  6872  00118E  0E04               	movlw	4
  6873  001190  642A               	cpfsgt	_i^0,c
  6874  001192  0C04               	retlw	4
  6875                           
  6876                           ;Usuaris.c: 263:     i = 0;
  6877  001194  6A2A               	clrf	_i^0,c
  6878  001196                     l6097:
  6879                           
  6880                           ;Usuaris.c: 264:     state = 8;
  6881  001196  0E08               	movlw	8
  6882  001198  6E27               	movwf	UmotorUsers@state^0,c
  6883  00119A  0C08               	retlw	8
  6884  00119C                     l6099:
  6885                           
  6886                           ;Usuaris.c: 268:    puntuacions[i].score = scoreUsr;
  6887  00119C  D848               	call	PL16	;call to abstracted procedure
  6888  00119E  C028  FFDF         	movff	_scoreUsr,indf2
  6889                           
  6890                           ;Usuaris.c: 269:    puntuacions[i].indexStruct = usuariLoguejat;
  6891  0011A2  D85A               	call	PL22	;call to abstracted procedure
  6892  0011A4  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6893                           
  6894                           ;Usuaris.c: 270:    i = i+i;
  6895  0011A8  0E02               	movlw	2
  6896  0011AA  022A               	mulwf	_i^0,c
  6897  0011AC  50F3               	movf	prodl,w,c
  6898  0011AE  6E2A               	movwf	_i^0,c
  6899                           
  6900                           ;Usuaris.c: 271:    escriureCharEEPROM(usuariLoguejat,200+i);
  6901  0011B0  502A               	movf	_i^0,w,c
  6902  0011B2  0FC8               	addlw	200
  6903  0011B4  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6904  0011B6  504F               	movf	_usuariLoguejat^0,w,c
  6905  0011B8  EC02  F00F         	call	_escriureCharEEPROM
  6906                           
  6907                           ;Usuaris.c: 272:    i++;
  6908  0011BC  2A2A               	incf	_i^0,f,c
  6909                           
  6910                           ;Usuaris.c: 273:    escriureCharEEPROM(scoreUsr,200+i);
  6911  0011BE  502A               	movf	_i^0,w,c
  6912  0011C0  0FC8               	addlw	200
  6913  0011C2  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6914  0011C4  5028               	movf	_scoreUsr^0,w,c
  6915  0011C6  EC02  F00F         	call	_escriureCharEEPROM
  6916  0011CA  D7AD               	goto	l6057
  6917  0011CC                     l6111:
  6918                           
  6919                           ;Usuaris.c: 277:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6920  0011CC  D830               	call	PL16	;call to abstracted procedure
  6921  0011CE  5028               	movf	_scoreUsr^0,w,c
  6922  0011D0  5CDE               	subwf	postinc2,w,c
  6923  0011D2  E305               	bnc	l6119
  6924  0011D4  0E05               	movlw	5
  6925  0011D6  602A               	cpfslt	_i^0,c
  6926  0011D8  D002               	goto	l6119
  6927                           
  6928                           ;Usuaris.c: 278:     i++;
  6929  0011DA  2A2A               	incf	_i^0,f,c
  6930  0011DC  D7DC               	goto	l6097
  6931  0011DE                     l6119:
  6932  0011DE  0E04               	movlw	4
  6933  0011E0  642A               	cpfsgt	_i^0,c
  6934  0011E2  D001               	goto	l6123
  6935  0011E4  D7A0               	goto	l6057
  6936  0011E6                     l6123:
  6937  0011E6  D823               	call	PL16	;call to abstracted procedure
  6938  0011E8  5028               	movf	_scoreUsr^0,w,c
  6939  0011EA  5CDE               	subwf	postinc2,w,c
  6940  0011EC  B0D8               	btfsc	status,0,c
  6941  0011EE  0012               	return	
  6942  0011F0  0E05               	movlw	5
  6943  0011F2  602A               	cpfslt	_i^0,c
  6944  0011F4  0C05               	retlw	5
  6945  0011F6  D7C8               	goto	u6400
  6946  0011F8                     l6131:
  6947  0011F8  5027               	movf	UmotorUsers@state^0,w,c
  6948  0011FA  6E69               	movwf	??_UmotorUsers^0,c
  6949  0011FC  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6950                           
  6951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6952                           ; Switch size 1, requested type "space"
  6953                           ; Number of cases is 1, Range of values is 0 to 0
  6954                           ; switch strategies available:
  6955                           ; Name         Instructions Cycles
  6956                           ; simple_byte            4     3 (average)
  6957                           ;	Chosen strategy is simple_byte
  6958  0011FE  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6959  001200  A4D8               	btfss	status,2,c
  6960  001202  0012               	return	
  6961                           
  6962                           ; Switch size 1, requested type "space"
  6963                           ; Number of cases is 8, Range of values is 0 to 8
  6964                           ; switch strategies available:
  6965                           ; Name         Instructions Cycles
  6966                           ; simple_byte           25    13 (average)
  6967                           ;	Chosen strategy is simple_byte
  6968  001204  5069               	movf	??_UmotorUsers^0,w,c
  6969  001206  E101 D6FA          	bz	l767
  6970  00120A  0A01               	xorlw	1	; case 1
  6971  00120C  E101 D731          	bz	l5997
  6972  001210  0A03               	xorlw	3	; case 2
  6973  001212  E101 D74A          	bz	l6011
  6974  001216  0A01               	xorlw	1	; case 3
  6975  001218  E101 D75E          	bz	l6029
  6976  00121C  0A06               	xorlw	6	; case 5
  6977  00121E  E085               	bz	l6059
  6978  001220  0A03               	xorlw	3	; case 6
  6979  001222  E0A4               	bz	l6079
  6980  001224  0A01               	xorlw	1	; case 7
  6981  001226  E0BA               	bz	l6099
  6982  001228  0A0F               	xorlw	15	; case 8
  6983  00122A  E0D0               	bz	l6111
  6984  00122C  0012               	return		;funcret
  6985  00122E                     __end_of_UmotorUsers:
  6986                           	callstack 0
  6987  00122E                     PL16:
  6988                           	callstack 27
  6989  00122E  502A               	movf	_i^0,w,c
  6990  001230  0D02               	mullw	2
  6991  001232  50F3               	movf	243,w,c
  6992  001234  0F9C               	addlw	low (_puntuacions+1)
  6993  001236  6ED9               	movwf	fsr2l,c
  6994  001238  6ADA               	clrf	fsr2h,c
  6995  00123A  0012               	return	
  6996  00123C                     __end_ofPL16:
  6997                           	callstack 0
  6998  00123C                     PL20:
  6999                           	callstack 27
  7000  00123C  50F3               	movf	243,w,c
  7001  00123E  2669               	addwf	??_UmotorUsers^0,f,c
  7002  001240  50F4               	movf	244,w,c
  7003  001242  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  7004  001244  502A               	movf	_i^0,w,c
  7005  001246  2469               	addwf	??_UmotorUsers^0,w,c
  7006  001248  6EE1               	movwf	fsr1l,c
  7007  00124A  0E00               	movlw	0
  7008  00124C  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  7009  00124E  6EE2               	movwf	fsr1h,c
  7010  001250  CFDF FFE7          	movff	indf2,indf1
  7011  001254  2A2A               	incf	_i^0,f,c
  7012  001256  0012               	return	
  7013  001258                     __end_ofPL20:
  7014                           	callstack 0
  7015  001258                     PL22:
  7016                           	callstack 27
  7017  001258  502A               	movf	_i^0,w,c
  7018  00125A  0D02               	mullw	2
  7019  00125C  50F3               	movf	243,w,c
  7020  00125E  0F9B               	addlw	low _puntuacions
  7021  001260  6ED9               	movwf	fsr2l,c
  7022  001262  6ADA               	clrf	fsr2h,c
  7023  001264  0012               	return	
  7024  001266                     __end_ofPL22:
  7025                           	callstack 0
  7026  001266                     PL26:
  7027                           	callstack 27
  7028  001266  6ED9               	movwf	fsr2l,c
  7029  001268  6ADA               	clrf	fsr2h,c
  7030  00126A  502B               	movf	_indexNextUserStruct^0,w,c
  7031  00126C  0D12               	mullw	18
  7032  00126E  0E00               	movlw	low _usuaris
  7033  001270  6E69               	movwf	??_UmotorUsers^0,c
  7034  001272  0E01               	movlw	high _usuaris
  7035  001274  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  7036  001276  0012               	return	
  7037  001278                     __end_ofPL26:
  7038                           	callstack 0
  7039  001278                     PL58:
  7040                           	callstack 27
  7041  001278  6ED9               	movwf	fsr2l,c
  7042  00127A  6ADA               	clrf	fsr2h,c
  7043  00127C  50DF               	movf	indf2,w,c
  7044  00127E  0012               	return	
  7045  001280                     __end_ofPL58:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _escriureCharEEPROM *****************
  7049 ;; Defined at:
  7050 ;;		line 71 in file "Usuaris.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  c               1    wreg     unsigned char 
  7053 ;;  pos             1    5[COMRAM] unsigned char 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  c               1    6[COMRAM] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1
  7065 ;;      Params:         1       0       0
  7066 ;;      Locals:         1       0       0
  7067 ;;      Temps:          0       0       0
  7068 ;;      Totals:         2       0       0
  7069 ;;Total ram usage:        2 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 2
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_UmotorUsers
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text57
  7080  001E04                     __ptext57:
  7081                           	callstack 0
  7082  001E04                     _escriureCharEEPROM:
  7083                           	callstack 27
  7084                           
  7085                           ;incstack = 0
  7086                           ;escriureCharEEPROM@c stored from wreg
  7087  001E04  6E65               	movwf	escriureCharEEPROM@c^0,c
  7088                           
  7089                           ;Usuaris.c: 72:     EEADR = pos;
  7090  001E06  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7091                           
  7092                           ;Usuaris.c: 73:     EEDATA = c;
  7093  001E0A  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7094                           
  7095                           ;Usuaris.c: 74:     EECON1bits.EEPGD = 0;
  7096  001E0E  9EA6               	bcf	166,7,c	;volsfr
  7097                           
  7098                           ;Usuaris.c: 75:     EECON1bits.CFGS = 0;
  7099  001E10  9CA6               	bcf	166,6,c	;volsfr
  7100                           
  7101                           ;Usuaris.c: 76:     EECON1bits.WREN = 1;
  7102  001E12  84A6               	bsf	166,2,c	;volsfr
  7103                           
  7104                           ;Usuaris.c: 77:     INTCONbits.GIE = 0;
  7105  001E14  9EF2               	bcf	242,7,c	;volatile
  7106                           
  7107                           ;Usuaris.c: 78:     EECON2 = 85;
  7108  001E16  0E55               	movlw	85
  7109  001E18  6EA7               	movwf	167,c	;volsfr
  7110                           
  7111                           ;Usuaris.c: 79:     EECON2 = 170;
  7112  001E1A  0EAA               	movlw	170
  7113  001E1C  6EA7               	movwf	167,c	;volsfr
  7114                           
  7115                           ;Usuaris.c: 80:     EECON1bits.WR = 1;
  7116  001E1E  82A6               	bsf	166,1,c	;volsfr
  7117  001E20                     l724:
  7118  001E20  B2A6               	btfsc	166,1,c	;volsfr
  7119  001E22  D7FE               	goto	l724
  7120                           
  7121                           ;Usuaris.c: 82:     INTCONbits.GIE = 1;
  7122  001E24  8EF2               	bsf	242,7,c	;volatile
  7123                           
  7124                           ;Usuaris.c: 83:     EECON1bits.WREN = 0;
  7125  001E26  94A6               	bcf	166,2,c	;volsfr
  7126  001E28  0012               	return		;funcret
  7127  001E2A                     __end_of_escriureCharEEPROM:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _compareStrings *****************
  7131 ;; Defined at:
  7132 ;;		line 135 in file "Usuaris.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  a               1    5[COMRAM] PTR const unsigned char 
  7135 ;;		 -> tmpPassword(9), tmpUsername(9), 
  7136 ;;  b               2    6[COMRAM] PTR const unsigned char 
  7137 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      unsigned char 
  7142 ;; Registers used:
  7143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1
  7149 ;;      Params:         3       0       0
  7150 ;;      Locals:         0       0       0
  7151 ;;      Temps:          2       0       0
  7152 ;;      Totals:         5       0       0
  7153 ;;Total ram usage:        5 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 2
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_UmotorUsers
  7160 ;;		_miraPassword
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text58
  7165  001C94                     __ptext58:
  7166                           	callstack 0
  7167  001C94                     _compareStrings:
  7168                           	callstack 26
  7169                           
  7170                           ;Usuaris.c: 136:     while (*a){
  7171                           
  7172                           ;incstack = 0
  7173  001C94  D00A               	goto	l4443
  7174  001C96                     l4437:
  7175                           
  7176                           ;Usuaris.c: 137:         if (*a != *b)break;
  7177  001C96  D813               	call	PL56	;call to abstracted procedure
  7178  001C98  5064               	movf	compareStrings@a^0,w,c
  7179  001C9A  6EE1               	movwf	fsr1l,c
  7180  001C9C  6AE2               	clrf	fsr1h,c
  7181  001C9E  50DE               	movf	postinc2,w,c
  7182  001CA0  18E6               	xorwf	postinc1,w,c
  7183  001CA2  E105               	bnz	u3890
  7184                           
  7185                           ;Usuaris.c: 138:         a++;
  7186  001CA4  2A64               	incf	compareStrings@a^0,f,c
  7187                           
  7188                           ;Usuaris.c: 139:         b++;
  7189  001CA6  4A65               	infsnz	compareStrings@b^0,f,c
  7190  001CA8  2A66               	incf	(compareStrings@b+1)^0,f,c
  7191  001CAA                     l4443:
  7192                           
  7193                           ;Usuaris.c: 136:     while (*a){
  7194  001CAA  D80E               	call	PL80	;call to abstracted procedure
  7195  001CAC  E1F4               	bnz	l4437
  7196  001CAE                     u3890:
  7197                           
  7198                           ;Usuaris.c: 141:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7199  001CAE  D807               	call	PL56	;call to abstracted procedure
  7200  001CB0  50DF               	movf	indf2,w,c
  7201  001CB2  6E67               	movwf	??_compareStrings^0,c
  7202  001CB4  D809               	call	PL80	;call to abstracted procedure
  7203  001CB6  6E68               	movwf	(??_compareStrings+1)^0,c
  7204  001CB8  5067               	movf	??_compareStrings^0,w,c
  7205  001CBA  5C68               	subwf	(??_compareStrings+1)^0,w,c
  7206  001CBC  0012               	return		;funcret
  7207  001CBE                     __end_of_compareStrings:
  7208                           	callstack 0
  7209  001CBE                     PL56:
  7210                           	callstack 26
  7211  001CBE  C065  FFD9         	movff	compareStrings@b,fsr2l
  7212  001CC2  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  7213  001CC6  0012               	return	
  7214  001CC8                     __end_ofPL56:
  7215                           	callstack 0
  7216  001CC8                     PL80:
  7217                           	callstack 26
  7218  001CC8  5064               	movf	compareStrings@a^0,w,c
  7219  001CCA  6ED9               	movwf	fsr2l,c
  7220  001CCC  6ADA               	clrf	fsr2h,c
  7221  001CCE  50DF               	movf	indf2,w,c
  7222  001CD0  0012               	return	
  7223  001CD2                     __end_ofPL80:
  7224                           	callstack 0
  7225                           
  7226 ;; *************** function _Uinit *****************
  7227 ;; Defined at:
  7228 ;;		line 92 in file "Usuaris.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  k               1   12[COMRAM] unsigned char 
  7233 ;;  k               1   11[COMRAM] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1
  7243 ;;      Params:         0       0       0
  7244 ;;      Locals:         2       0       0
  7245 ;;      Temps:          2       0       0
  7246 ;;      Totals:         4       0       0
  7247 ;;Total ram usage:        4 bytes
  7248 ;; Hardware stack levels used: 1
  7249 ;; Hardware stack levels required when called: 3
  7250 ;; This function calls:
  7251 ;;		___lbdiv
  7252 ;;		_llegirCharEEPROM
  7253 ;; This function is called by:
  7254 ;;		_main
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text59
  7259  001568                     __ptext59:
  7260                           	callstack 0
  7261  001568                     _Uinit:
  7262                           	callstack 27
  7263                           
  7264                           ;Usuaris.c: 96:     i = 0;
  7265                           
  7266                           ;incstack = 0
  7267  001568  6A2A               	clrf	_i^0,c
  7268                           
  7269                           ;Usuaris.c: 101:     numUsuaris = llegirCharEEPROM(0);
  7270  00156A  0E00               	movlw	0
  7271  00156C  EC3E  F000         	call	_llegirCharEEPROM
  7272  001570  6E2D               	movwf	_numUsuaris^0,c
  7273                           
  7274                           ;Usuaris.c: 103:     if(numUsuaris > 8) numUsuaris = 0;
  7275  001572  0E08               	movlw	8
  7276  001574  642D               	cpfsgt	_numUsuaris^0,c
  7277  001576  D001               	goto	l4811
  7278  001578  6A2D               	clrf	_numUsuaris^0,c
  7279  00157A                     l4811:
  7280                           
  7281                           ;Usuaris.c: 107:     i++;
  7282  00157A  2A2A               	incf	_i^0,f,c
  7283                           
  7284                           ;Usuaris.c: 108:     indexNextUser = llegirCharEEPROM(1);
  7285  00157C  0E01               	movlw	1
  7286  00157E  EC3E  F000         	call	_llegirCharEEPROM
  7287  001582  6E2C               	movwf	_indexNextUser^0,c
  7288                           
  7289                           ;Usuaris.c: 109:     if(indexNextUser == 255) indexNextUser = 2;
  7290  001584  282C               	incf	_indexNextUser^0,w,c
  7291  001586  E102               	bnz	l4819
  7292  001588  0E02               	movlw	2
  7293  00158A  6E2C               	movwf	_indexNextUser^0,c
  7294  00158C                     l4819:
  7295                           
  7296                           ;Usuaris.c: 110:     indexNextUserStruct = indexNextUser/18;
  7297  00158C  0E12               	movlw	18
  7298  00158E  6E64               	movwf	___lbdiv@divisor^0,c
  7299  001590  502C               	movf	_indexNextUser^0,w,c
  7300  001592  ECA4  F00E         	call	___lbdiv
  7301  001596  6E2B               	movwf	_indexNextUserStruct^0,c
  7302                           
  7303                           ;Usuaris.c: 111:     i++;
  7304  001598  2A2A               	incf	_i^0,f,c
  7305                           
  7306                           ;Usuaris.c: 112:     for(j = 0;j<numUsuaris;j++){
  7307  00159A  6A29               	clrf	_j^0,c
  7308  00159C  D01F               	goto	l4851
  7309  00159E                     l736:
  7310                           
  7311                           ;Usuaris.c: 113:         for(unsigned char k = 0; k<9; k++){
  7312  00159E  6A6A               	clrf	Uinit@k^0,c
  7313  0015A0                     l4829:
  7314                           
  7315                           ;Usuaris.c: 114:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7316  0015A0  D842               	call	PL42	;call to abstracted procedure
  7317  0015A2  D848               	call	PL70	;call to abstracted procedure
  7318  0015A4  506A               	movf	Uinit@k^0,w,c
  7319  0015A6  D838               	call	PL40	;call to abstracted procedure
  7320  0015A8  EC3E  F000         	call	_llegirCharEEPROM
  7321  0015AC  6EDF               	movwf	indf2,c
  7322                           
  7323                           ;Usuaris.c: 115:             i++;
  7324  0015AE  2A2A               	incf	_i^0,f,c
  7325                           
  7326                           ;Usuaris.c: 116:         }
  7327  0015B0  2A6A               	incf	Uinit@k^0,f,c
  7328  0015B2  0E08               	movlw	8
  7329  0015B4  646A               	cpfsgt	Uinit@k^0,c
  7330  0015B6  D7F4               	goto	l4829
  7331                           
  7332                           ;Usuaris.c: 117:         for(unsigned char k = 0; k<9;k++){
  7333  0015B8  6A6B               	clrf	Uinit@k_1175^0,c
  7334  0015BA                     l4841:
  7335                           
  7336                           ;Usuaris.c: 118:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7337  0015BA  D835               	call	PL42	;call to abstracted procedure
  7338  0015BC  0E09               	movlw	9
  7339  0015BE  2668               	addwf	??_Uinit^0,f,c
  7340  0015C0  0E00               	movlw	0
  7341  0015C2  2269               	addwfc	(??_Uinit+1)^0,f,c
  7342  0015C4  D837               	call	PL70	;call to abstracted procedure
  7343  0015C6  506B               	movf	Uinit@k_1175^0,w,c
  7344  0015C8  D827               	call	PL40	;call to abstracted procedure
  7345  0015CA  EC3E  F000         	call	_llegirCharEEPROM
  7346  0015CE  6EDF               	movwf	indf2,c
  7347                           
  7348                           ;Usuaris.c: 119:             i++;
  7349  0015D0  2A2A               	incf	_i^0,f,c
  7350                           
  7351                           ;Usuaris.c: 120:         }
  7352  0015D2  2A6B               	incf	Uinit@k_1175^0,f,c
  7353  0015D4  0E08               	movlw	8
  7354  0015D6  646B               	cpfsgt	Uinit@k_1175^0,c
  7355  0015D8  D7F0               	goto	l4841
  7356                           
  7357                           ;Usuaris.c: 121:     }
  7358  0015DA  2A29               	incf	_j^0,f,c
  7359  0015DC                     l4851:
  7360  0015DC  502D               	movf	_numUsuaris^0,w,c
  7361  0015DE  5C29               	subwf	_j^0,w,c
  7362  0015E0  E3DE               	bnc	l736
  7363                           
  7364                           ;Usuaris.c: 127:     puntuacions[0].indexStruct = -1;
  7365  0015E2  0100               	movlb	0	; () banked
  7366  0015E4  699B               	setf	_puntuacions& (0+255),b
  7367                           
  7368                           ;Usuaris.c: 128:     for(i = 0; i<5; i++){
  7369  0015E6  6A2A               	clrf	_i^0,c
  7370  0015E8                     l4853:
  7371  0015E8  0E04               	movlw	4
  7372  0015EA  642A               	cpfsgt	_i^0,c
  7373  0015EC  D001               	goto	l4857
  7374  0015EE  0C04               	retlw	4
  7375  0015F0                     l4857:
  7376                           
  7377                           ;Usuaris.c: 129:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7378  0015F0  EC2C  F009         	call	PL22	;call to abstracted procedure
  7379  0015F4  502A               	movf	_i^0,w,c
  7380  0015F6  0D02               	mullw	2
  7381  0015F8  50F3               	movf	243,w,c
  7382  0015FA  0FC8               	addlw	200
  7383  0015FC  EC3E  F000         	call	_llegirCharEEPROM
  7384  001600  6EDF               	movwf	indf2,c
  7385                           
  7386                           ;Usuaris.c: 130:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7387  001602  EC17  F009         	call	PL16	;call to abstracted procedure
  7388  001606  502A               	movf	_i^0,w,c
  7389  001608  0D02               	mullw	2
  7390  00160A  50F3               	movf	243,w,c
  7391  00160C  0FC9               	addlw	201
  7392  00160E  EC3E  F000         	call	_llegirCharEEPROM
  7393  001612  6EDF               	movwf	indf2,c
  7394                           
  7395                           ;Usuaris.c: 131:     }
  7396  001614  2A2A               	incf	_i^0,f,c
  7397  001616  D7E8               	goto	l4853
  7398  001618                     __end_of_Uinit:
  7399                           	callstack 0
  7400  001618                     PL40:
  7401                           	callstack 27
  7402  001618  2468               	addwf	??_Uinit^0,w,c
  7403  00161A  6ED9               	movwf	fsr2l,c
  7404  00161C  0E00               	movlw	0
  7405  00161E  2069               	addwfc	(??_Uinit+1)^0,w,c
  7406  001620  6EDA               	movwf	fsr2h,c
  7407  001622  502A               	movf	_i^0,w,c
  7408  001624  0012               	return	
  7409  001626                     __end_ofPL40:
  7410                           	callstack 0
  7411  001626                     PL42:
  7412                           	callstack 27
  7413  001626  5029               	movf	_j^0,w,c
  7414  001628  0D12               	mullw	18
  7415  00162A  0E00               	movlw	low _usuaris
  7416  00162C  6E68               	movwf	??_Uinit^0,c
  7417  00162E  0E01               	movlw	high _usuaris
  7418  001630  6E69               	movwf	(??_Uinit+1)^0,c
  7419  001632  0012               	return	
  7420  001634                     __end_ofPL42:
  7421                           	callstack 0
  7422  001634                     PL70:
  7423                           	callstack 27
  7424  001634  50F3               	movf	243,w,c
  7425  001636  2668               	addwf	??_Uinit^0,f,c
  7426  001638  50F4               	movf	244,w,c
  7427  00163A  2269               	addwfc	(??_Uinit+1)^0,f,c
  7428  00163C  0012               	return	
  7429  00163E                     __end_ofPL70:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _llegirCharEEPROM *****************
  7433 ;; Defined at:
  7434 ;;		line 85 in file "Usuaris.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  pos             1    wreg     unsigned char 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  pos             1    5[COMRAM] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1
  7448 ;;      Params:         0       0       0
  7449 ;;      Locals:         1       0       0
  7450 ;;      Temps:          0       0       0
  7451 ;;      Totals:         1       0       0
  7452 ;;Total ram usage:        1 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 2
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_Uinit
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text60
  7463  00007C                     __ptext60:
  7464                           	callstack 0
  7465  00007C                     _llegirCharEEPROM:
  7466                           	callstack 27
  7467                           
  7468                           ;incstack = 0
  7469                           ;llegirCharEEPROM@pos stored from wreg
  7470  00007C  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7471                           
  7472                           ;Usuaris.c: 86:     EEADR = pos;
  7473  00007E  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7474                           
  7475                           ;Usuaris.c: 87:     EECON1bits.EEPGD = 0;
  7476  000082  9EA6               	bcf	166,7,c	;volsfr
  7477                           
  7478                           ;Usuaris.c: 88:     EECON1bits.CFGS = 0;
  7479  000084  9CA6               	bcf	166,6,c	;volsfr
  7480                           
  7481                           ;Usuaris.c: 89:     EECON1bits.RD = 1;
  7482  000086  80A6               	bsf	166,0,c	;volsfr
  7483                           
  7484                           ;Usuaris.c: 90:     return EEDATA;
  7485  000088  50A8               	movf	168,w,c	;volatile
  7486  00008A  0012               	return		;funcret
  7487  00008C                     __end_of_llegirCharEEPROM:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function ___lbdiv *****************
  7491 ;; Defined at:
  7492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  dividend        1    wreg     unsigned char 
  7495 ;;  divisor         1    5[COMRAM] unsigned char 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  dividend        1    6[COMRAM] unsigned char 
  7498 ;;  quotient        1    8[COMRAM] unsigned char 
  7499 ;;  counter         1    7[COMRAM] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      unsigned char 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1
  7509 ;;      Params:         1       0       0
  7510 ;;      Locals:         3       0       0
  7511 ;;      Temps:          0       0       0
  7512 ;;      Totals:         4       0       0
  7513 ;;Total ram usage:        4 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 2
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_Uinit
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text61
  7524  001D48                     __ptext61:
  7525                           	callstack 0
  7526  001D48                     ___lbdiv:
  7527                           	callstack 27
  7528                           
  7529                           ;incstack = 0
  7530                           ;___lbdiv@dividend stored from wreg
  7531  001D48  6E65               	movwf	___lbdiv@dividend^0,c
  7532  001D4A  6A67               	clrf	___lbdiv@quotient^0,c
  7533  001D4C  5064               	movf	___lbdiv@divisor^0,w,c
  7534  001D4E  E014               	bz	l4687
  7535  001D50  0E01               	movlw	1
  7536  001D52  6E66               	movwf	___lbdiv@counter^0,c
  7537  001D54  D003               	goto	l4675
  7538  001D56                     l4671:
  7539  001D56  90D8               	bcf	status,0,c
  7540  001D58  3664               	rlcf	___lbdiv@divisor^0,f,c
  7541  001D5A  2A66               	incf	___lbdiv@counter^0,f,c
  7542  001D5C                     l4675:
  7543  001D5C  AE64               	btfss	___lbdiv@divisor^0,7,c
  7544  001D5E  D7FB               	goto	l4671
  7545  001D60                     u4040:
  7546  001D60  90D8               	bcf	status,0,c
  7547  001D62  3667               	rlcf	___lbdiv@quotient^0,f,c
  7548  001D64  5064               	movf	___lbdiv@divisor^0,w,c
  7549  001D66  5C65               	subwf	___lbdiv@dividend^0,w,c
  7550  001D68  E303               	bnc	l4683
  7551  001D6A  5064               	movf	___lbdiv@divisor^0,w,c
  7552  001D6C  5E65               	subwf	___lbdiv@dividend^0,f,c
  7553  001D6E  8067               	bsf	___lbdiv@quotient^0,0,c
  7554  001D70                     l4683:
  7555  001D70  90D8               	bcf	status,0,c
  7556  001D72  3264               	rrcf	___lbdiv@divisor^0,f,c
  7557  001D74  2E66               	decfsz	___lbdiv@counter^0,f,c
  7558  001D76  D7F4               	goto	u4040
  7559  001D78                     l4687:
  7560  001D78  5067               	movf	___lbdiv@quotient^0,w,c
  7561  001D7A  0012               	return		;funcret
  7562  001D7C                     __end_of___lbdiv:
  7563                           	callstack 0
  7564                           
  7565 ;; *************** function _TiInitTimer *****************
  7566 ;; Defined at:
  7567 ;;		line 18 in file "TiTTimer.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1
  7581 ;;      Params:         0       0       0
  7582 ;;      Locals:         0       0       0
  7583 ;;      Temps:          0       0       0
  7584 ;;      Totals:         0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; Hardware stack levels required when called: 2
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text62
  7596  001DDC                     __ptext62:
  7597                           	callstack 0
  7598  001DDC                     _TiInitTimer:
  7599                           	callstack 28
  7600                           
  7601                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7602                           
  7603                           ;incstack = 0
  7604  001DDC  9ED0               	bcf	208,7,c	;volatile
  7605                           
  7606                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7607  001DDE  8EF2               	bsf	242,7,c	;volatile
  7608                           
  7609                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7610  001DE0  8CF2               	bsf	242,6,c	;volatile
  7611                           
  7612                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7613  001DE2  8AF2               	bsf	242,5,c	;volatile
  7614                           
  7615                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7616  001DE4  94F2               	bcf	242,2,c	;volatile
  7617                           
  7618                           ;TiTTimer.c: 25:     T0CON = 136;
  7619  001DE6  0E88               	movlw	136
  7620  001DE8  6ED5               	movwf	213,c	;volatile
  7621                           
  7622                           ;TiTTimer.c: 27:     TMR0H = 223;
  7623                           
  7624                           ;TiTTimer.c: 28:     TMR0L = 148;
  7625  001DEA  EC45  F00E         	call	PL66	;call to abstracted procedure
  7626                           
  7627                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7628  001DEE  8ED5               	bsf	213,7,c	;volatile
  7629                           
  7630                           ;TiTTimer.c: 31:     for (counter=0;counter<9;counter++) {
  7631  001DF0  6A34               	clrf	_counter^0,c
  7632  001DF2                     l4781:
  7633  001DF2  0E08               	movlw	8
  7634  001DF4  6434               	cpfsgt	_counter^0,c
  7635  001DF6  D001               	goto	l4785
  7636  001DF8  0C08               	retlw	8
  7637  001DFA                     l4785:
  7638                           
  7639                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7640  001DFA  ECE7  F00E         	call	PL18	;call to abstracted procedure
  7641  001DFE  6ADF               	clrf	indf2,c
  7642                           
  7643                           ;TiTTimer.c: 33:     }
  7644  001E00  2A34               	incf	_counter^0,f,c
  7645  001E02  D7F7               	goto	l4781
  7646  001E04                     __end_of_TiInitTimer:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _TeTeclat *****************
  7650 ;; Defined at:
  7651 ;;		line 21 in file "TeTeclat.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1
  7665 ;;      Params:         0       0       0
  7666 ;;      Locals:         0       0       0
  7667 ;;      Temps:          3       0       0
  7668 ;;      Totals:         3       0       0
  7669 ;;Total ram usage:        3 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 3
  7672 ;; This function calls:
  7673 ;;		_MsetNovaTecla
  7674 ;;		_SsetNovaTecla
  7675 ;;		_TiGetTics
  7676 ;;		_TiResetTics
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text63
  7683  00142E                     __ptext63:
  7684                           	callstack 0
  7685  00142E                     _TeTeclat:
  7686                           	callstack 27
  7687                           
  7688                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7689                           
  7690                           ;incstack = 0
  7691  00142E  A083               	btfss	131,0,c	;volatile
  7692  001430  D003               	goto	u6470
  7693  001432  6A6B               	clrf	??_TeTeclat^0,c
  7694  001434  2A6B               	incf	??_TeTeclat^0,f,c
  7695  001436  D001               	goto	u6478
  7696  001438                     u6470:
  7697  001438  6A6B               	clrf	??_TeTeclat^0,c
  7698  00143A                     u6478:
  7699  00143A  0E01               	movlw	1
  7700  00143C  A283               	btfss	131,1,c	;volatile
  7701  00143E  0E00               	movlw	0
  7702  001440  0D02               	mullw	2
  7703  001442  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7704  001446  0E01               	movlw	1
  7705  001448  A483               	btfss	131,2,c	;volatile
  7706  00144A  0E00               	movlw	0
  7707  00144C  0D03               	mullw	3
  7708  00144E  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7709  001452  0E01               	movlw	1
  7710  001454  A683               	btfss	131,3,c	;volatile
  7711  001456  0E00               	movlw	0
  7712  001458  0D04               	mullw	4
  7713  00145A  50F3               	movf	243,w,c
  7714  00145C  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7715  00145E  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7716  001460  246B               	addwf	??_TeTeclat^0,w,c
  7717  001462  6E35               	movwf	TeTeclat@files^0,c
  7718                           
  7719                           ;TeTeclat.c: 26:  switch(state) {
  7720  001464  D05A               	goto	l6213
  7721  001466                     l6139:
  7722                           
  7723                           ;TeTeclat.c: 28:    if (files==0) {
  7724  001466  5035               	movf	TeTeclat@files^0,w,c
  7725  001468  E106               	bnz	l6145
  7726                           
  7727                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7728  00146A  888C               	bsf	140,4,c	;volatile
  7729                           
  7730                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7731  00146C  9A8C               	bcf	140,5,c	;volatile
  7732                           
  7733                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7734  00146E  9C8C               	bcf	140,6,c	;volatile
  7735                           
  7736                           ;TeTeclat.c: 32:     cols=0;
  7737  001470  6A36               	clrf	TeTeclat@cols^0,c
  7738  001472                     l6143:
  7739                           
  7740                           ;TeTeclat.c: 33:     state++;
  7741  001472  2A37               	incf	TeTeclat@state^0,f,c
  7742                           
  7743                           ;TeTeclat.c: 34:    }
  7744  001474  0012               	return	
  7745  001476                     l6145:
  7746  001476  5035               	movf	TeTeclat@files^0,w,c
  7747  001478  B4D8               	btfsc	status,2,c
  7748  00147A  0012               	return	
  7749                           
  7750                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7751  00147C  5038               	movf	_tiTeclat^0,w,c
  7752  00147E  ECBD  F00F         	call	_TiResetTics
  7753  001482                     l6149:
  7754                           
  7755                           ;TeTeclat.c: 37:     state = 3;
  7756  001482  0E03               	movlw	3
  7757  001484  6E37               	movwf	TeTeclat@state^0,c
  7758  001486  0C03               	retlw	3
  7759  001488                     l6151:
  7760                           
  7761                           ;TeTeclat.c: 41:    if (files==0) {
  7762  001488  5035               	movf	TeTeclat@files^0,w,c
  7763  00148A  E106               	bnz	l6159
  7764                           
  7765                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7766  00148C  988C               	bcf	140,4,c	;volatile
  7767                           
  7768                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7769  00148E  8A8C               	bsf	140,5,c	;volatile
  7770                           
  7771                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7772  001490  9C8C               	bcf	140,6,c	;volatile
  7773                           
  7774                           ;TeTeclat.c: 45:     cols=1;
  7775  001492  0E01               	movlw	1
  7776  001494  6E36               	movwf	TeTeclat@cols^0,c
  7777  001496  D7ED               	goto	l6143
  7778  001498                     l6159:
  7779  001498  5035               	movf	TeTeclat@files^0,w,c
  7780  00149A  B4D8               	btfsc	status,2,c
  7781  00149C  0012               	return	
  7782                           
  7783                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7784  00149E  5038               	movf	_tiTeclat^0,w,c
  7785  0014A0  ECBD  F00F         	call	_TiResetTics
  7786  0014A4  D7EE               	goto	l6149
  7787  0014A6                     l6165:
  7788                           
  7789                           ;TeTeclat.c: 54:    if (files==0) {
  7790  0014A6  5035               	movf	TeTeclat@files^0,w,c
  7791  0014A8  E107               	bnz	l6173
  7792                           
  7793                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7794  0014AA  988C               	bcf	140,4,c	;volatile
  7795                           
  7796                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7797  0014AC  9A8C               	bcf	140,5,c	;volatile
  7798                           
  7799                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7800  0014AE  8C8C               	bsf	140,6,c	;volatile
  7801                           
  7802                           ;TeTeclat.c: 58:     cols=2;
  7803  0014B0  0E02               	movlw	2
  7804  0014B2  6E36               	movwf	TeTeclat@cols^0,c
  7805  0014B4                     l6171:
  7806                           
  7807                           ;TeTeclat.c: 59:     state = 0;
  7808  0014B4  6A37               	clrf	TeTeclat@state^0,c
  7809                           
  7810                           ;TeTeclat.c: 60:    }
  7811  0014B6  0012               	return	
  7812  0014B8                     l6173:
  7813  0014B8  5035               	movf	TeTeclat@files^0,w,c
  7814  0014BA  B4D8               	btfsc	status,2,c
  7815  0014BC  0012               	return	
  7816                           
  7817                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7818  0014BE  5038               	movf	_tiTeclat^0,w,c
  7819  0014C0  ECBD  F00F         	call	_TiResetTics
  7820  0014C4  D7D6               	goto	l6143
  7821  0014C6                     l6179:
  7822                           
  7823                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7824  0014C6  5038               	movf	_tiTeclat^0,w,c
  7825  0014C8  EC15  F00F         	call	_TiGetTics
  7826  0014CC  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7827  0014CE  0012               	return	
  7828  0014D0  D7D0               	goto	l6143
  7829  0014D2                     l6183:
  7830                           
  7831                           ;TeTeclat.c: 72:    if (files==0) {
  7832  0014D2  5035               	movf	TeTeclat@files^0,w,c
  7833  0014D4  E103               	bnz	l6187
  7834                           
  7835                           ;TeTeclat.c: 73:     state = 1;
  7836  0014D6  0E01               	movlw	1
  7837  0014D8  6E37               	movwf	TeTeclat@state^0,c
  7838                           
  7839                           ;TeTeclat.c: 74:    }
  7840  0014DA  0C01               	retlw	1
  7841  0014DC                     l6187:
  7842  0014DC  5035               	movf	TeTeclat@files^0,w,c
  7843  0014DE  B4D8               	btfsc	status,2,c
  7844  0014E0  0012               	return	
  7845                           
  7846                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7847  0014E2  D837               	call	PL14	;call to abstracted procedure
  7848  0014E4  D831               	call	PL6	;call to abstracted procedure
  7849  0014E6  ECAF  F000         	call	_MsetNovaTecla
  7850                           
  7851                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7852  0014EA  D833               	call	PL14	;call to abstracted procedure
  7853  0014EC  D82D               	call	PL6	;call to abstracted procedure
  7854  0014EE  ECAB  F000         	call	_SsetNovaTecla
  7855  0014F2  D7BF               	goto	l6143
  7856  0014F4                     l6193:
  7857                           
  7858                           ;TeTeclat.c: 82:    if (files==0) {
  7859  0014F4  5035               	movf	TeTeclat@files^0,w,c
  7860  0014F6  A4D8               	btfss	status,2,c
  7861  0014F8  0012               	return	
  7862                           
  7863                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7864  0014FA  5038               	movf	_tiTeclat^0,w,c
  7865  0014FC  ECBD  F00F         	call	_TiResetTics
  7866  001500  D7B8               	goto	l6143
  7867  001502                     l6199:
  7868                           
  7869                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7870  001502  5038               	movf	_tiTeclat^0,w,c
  7871  001504  EC15  F00F         	call	_TiGetTics
  7872  001508  D7E1               	goto	L3
  7873  00150A                     l6203:
  7874                           
  7875                           ;TeTeclat.c: 93:    if (files!=0) {
  7876  00150A  5035               	movf	TeTeclat@files^0,w,c
  7877  00150C  E003               	bz	l6207
  7878                           
  7879                           ;TeTeclat.c: 94:     state = 5;
  7880  00150E  0E05               	movlw	5
  7881  001510  6E37               	movwf	TeTeclat@state^0,c
  7882                           
  7883                           ;TeTeclat.c: 95:    }
  7884  001512  0C05               	retlw	5
  7885  001514                     l6207:
  7886  001514  5035               	movf	TeTeclat@files^0,w,c
  7887  001516  E0CE               	bz	l6171
  7888  001518  0012               	return	
  7889  00151A                     l6213:
  7890  00151A  5037               	movf	TeTeclat@state^0,w,c
  7891  00151C  6E6B               	movwf	??_TeTeclat^0,c
  7892  00151E  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7893                           
  7894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 1, Range of values is 0 to 0
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte            4     3 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  001520  506C               	movf	(??_TeTeclat+1)^0,w,c
  7902  001522  A4D8               	btfss	status,2,c
  7903  001524  0012               	return	
  7904                           
  7905                           ; Switch size 1, requested type "space"
  7906                           ; Number of cases is 8, Range of values is 0 to 7
  7907                           ; switch strategies available:
  7908                           ; Name         Instructions Cycles
  7909                           ; simple_byte           25    13 (average)
  7910                           ;	Chosen strategy is simple_byte
  7911  001526  506B               	movf	??_TeTeclat^0,w,c
  7912  001528  E09E               	bz	l6139
  7913  00152A  0A01               	xorlw	1	; case 1
  7914  00152C  E0AD               	bz	l6151
  7915  00152E  0A03               	xorlw	3	; case 2
  7916  001530  E0BA               	bz	l6165
  7917  001532  0A01               	xorlw	1	; case 3
  7918  001534  E0C8               	bz	l6179
  7919  001536  0A07               	xorlw	7	; case 4
  7920  001538  E0CC               	bz	l6183
  7921  00153A  0A01               	xorlw	1	; case 5
  7922  00153C  E0DB               	bz	l6193
  7923  00153E  0A03               	xorlw	3	; case 6
  7924  001540  E0E0               	bz	l6199
  7925  001542  0A01               	xorlw	1	; case 7
  7926  001544  E0E2               	bz	l6203
  7927  001546  0012               	return		;funcret
  7928  001548                     __end_of_TeTeclat:
  7929                           	callstack 0
  7930  001548                     PL6:
  7931                           	callstack 27
  7932  001548  0E02               	movlw	high __smallconst
  7933  00154A  6EF7               	movwf	tblptrh,c
  7934  00154C                     	endif
  7935  00154C                     	if	0	;tblptru may be non-zero
  7936  00154C                     	endif
  7937  00154C                     	if	0	;tblptru may be non-zero
  7938  00154C                     	endif
  7939  00154C  0008               	tblrd		*
  7940  00154E  50F5               	movf	tablat,w,c
  7941  001550  0012               	return	
  7942  001552                     __end_ofPL6:
  7943                           	callstack 0
  7944  001552                     PL14:
  7945                           	callstack 27
  7946  001552  5035               	movf	TeTeclat@files^0,w,c
  7947  001554  0D03               	mullw	3
  7948  001556  50F3               	movf	243,w,c
  7949  001558  0F92               	addlw	low _teclaPremuda
  7950  00155A  2436               	addwf	TeTeclat@cols^0,w,c
  7951  00155C  6E6B               	movwf	??_TeTeclat^0,c
  7952  00155E  0EFD               	movlw	253
  7953  001560  266B               	addwf	??_TeTeclat^0,f,c
  7954  001562  C06B  FFF6         	movff	??_TeTeclat,tblptrl
  7955  001566                     	if	1	;There is more than 1 active tblptr byte
  7956  001566  0CFD               	retlw	253
  7957  001568                     __end_ofPL14:
  7958                           	callstack 0
  7959                           
  7960 ;; *************** function _SsetNovaTecla *****************
  7961 ;; Defined at:
  7962 ;;		line 124 in file "Ssms.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  tecla           1    wreg     unsigned char 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  tecla           1    5[COMRAM] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1
  7976 ;;      Params:         0       0       0
  7977 ;;      Locals:         1       0       0
  7978 ;;      Temps:          0       0       0
  7979 ;;      Totals:         1       0       0
  7980 ;;Total ram usage:        1 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 2
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_TeTeclat
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text64
  7991  000156                     __ptext64:
  7992                           	callstack 0
  7993  000156                     _SsetNovaTecla:
  7994                           	callstack 27
  7995                           
  7996                           ;incstack = 0
  7997                           ;SsetNovaTecla@tecla stored from wreg
  7998  000156  6E64               	movwf	SsetNovaTecla@tecla^0,c
  7999                           
  8000                           ;Ssms.c: 125:     novaTecla = tecla;
  8001  000158  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  8002  00015C  0012               	return		;funcret
  8003  00015E                     __end_of_SsetNovaTecla:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _MsetNovaTecla *****************
  8007 ;; Defined at:
  8008 ;;		line 31 in file "Menu.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  tecla           1    wreg     unsigned char 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  tecla           1    5[COMRAM] unsigned char 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1
  8022 ;;      Params:         0       0       0
  8023 ;;      Locals:         1       0       0
  8024 ;;      Temps:          0       0       0
  8025 ;;      Totals:         1       0       0
  8026 ;;Total ram usage:        1 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 2
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_TeTeclat
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text65
  8037  00015E                     __ptext65:
  8038                           	callstack 0
  8039  00015E                     _MsetNovaTecla:
  8040                           	callstack 27
  8041                           
  8042                           ;incstack = 0
  8043                           ;MsetNovaTecla@tecla stored from wreg
  8044  00015E  6E64               	movwf	MsetNovaTecla@tecla^0,c
  8045                           
  8046                           ;Menu.c: 32:     NovaTecla = tecla;
  8047  000160  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  8048  000164  0012               	return		;funcret
  8049  000166                     __end_of_MsetNovaTecla:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _TeInit *****************
  8053 ;; Defined at:
  8054 ;;		line 17 in file "TeTeclat.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1
  8068 ;;      Params:         0       0       0
  8069 ;;      Locals:         0       0       0
  8070 ;;      Temps:          0       0       0
  8071 ;;      Totals:         0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 3
  8075 ;; This function calls:
  8076 ;;		_TiGetTimer
  8077 ;; This function is called by:
  8078 ;;		_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text66
  8083  000166                     __ptext66:
  8084                           	callstack 0
  8085  000166                     _TeInit:
  8086                           	callstack 27
  8087                           
  8088                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  8089                           
  8090                           ;incstack = 0
  8091  000166  ECD8  F00E         	call	_TiGetTimer	;wreg free
  8092  00016A  6E38               	movwf	_tiTeclat^0,c
  8093  00016C  0012               	return		;funcret
  8094  00016E                     __end_of_TeInit:
  8095                           	callstack 0
  8096                           
  8097 ;; *************** function _Sinit *****************
  8098 ;; Defined at:
  8099 ;;		line 18 in file "Ssms.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1
  8113 ;;      Params:         0       0       0
  8114 ;;      Locals:         0       0       0
  8115 ;;      Temps:          0       0       0
  8116 ;;      Totals:         0       0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 3
  8120 ;; This function calls:
  8121 ;;		_TiGetTimer
  8122 ;; This function is called by:
  8123 ;;		_main
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text67
  8128  00016E                     __ptext67:
  8129                           	callstack 0
  8130  00016E                     _Sinit:
  8131                           	callstack 27
  8132                           
  8133                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  8134                           
  8135                           ;incstack = 0
  8136  00016E  ECD8  F00E         	call	_TiGetTimer	;wreg free
  8137  000172  6E3B               	movwf	_timerSMS^0,c
  8138  000174  0012               	return		;funcret
  8139  000176                     __end_of_Sinit:
  8140                           	callstack 0
  8141                           
  8142 ;; *************** function _SMotor *****************
  8143 ;; Defined at:
  8144 ;;		line 22 in file "Ssms.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1
  8158 ;;      Params:         0       0       0
  8159 ;;      Locals:         0       0       0
  8160 ;;      Temps:          2       0       0
  8161 ;;      Totals:         2       0       0
  8162 ;;Total ram usage:        2 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 3
  8165 ;; This function calls:
  8166 ;;		_MNovaLletra
  8167 ;;		_TiGetTics
  8168 ;;		_TiResetTics
  8169 ;; This function is called by:
  8170 ;;		_main
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text68
  8175  001280                     __ptext68:
  8176                           	callstack 0
  8177  001280                     _SMotor:
  8178                           	callstack 27
  8179                           
  8180                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8181                           
  8182                           ;incstack = 0
  8183  001280  D0BA               	goto	l6377
  8184  001282                     l6221:
  8185                           
  8186                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8187  001282  2854               	incf	_novaTecla^0,w,c
  8188  001284  E008               	bz	l6229
  8189  001286  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8190  001288  D006               	goto	l6229
  8191                           
  8192                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8193  00128A  503B               	movf	_timerSMS^0,w,c
  8194  00128C  ECBD  F00F         	call	_TiResetTics
  8195                           
  8196                           ;Ssms.c: 29:     state = 3;
  8197  001290  0E03               	movlw	3
  8198  001292  6E39               	movwf	SMotor@state^0,c
  8199                           
  8200                           ;Ssms.c: 30:    }
  8201  001294  0C03               	retlw	3
  8202  001296                     l6229:
  8203  001296  2854               	incf	_novaTecla^0,w,c
  8204  001298  A4D8               	btfss	status,2,c
  8205  00129A  0012               	return	
  8206  00129C  503B               	movf	_timerSMS^0,w,c
  8207  00129E  EC15  F00F         	call	_TiGetTics
  8208  0012A2  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8209  0012A4  0012               	return	
  8210  0012A6  D8BE               	call	PL84	;call to abstracted procedure
  8211  0012A8  A0D8               	btfss	status,0,c
  8212  0012AA  0012               	return	
  8213  0012AC  2855               	incf	_lletraASCII^0,w,c
  8214  0012AE  A4D8               	btfss	status,2,c
  8215  0012B0  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8216  0012B2  0012               	return	
  8217                           
  8218                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8219  0012B4  5055               	movf	_lletraASCII^0,w,c
  8220  0012B6  ECBB  F000         	call	_MNovaLletra
  8221                           
  8222                           ;Ssms.c: 33:     lletraASCII = -1;
  8223  0012BA  6855               	setf	_lletraASCII^0,c
  8224                           
  8225                           ;Ssms.c: 34:     ultimaTecla = -1;
  8226  0012BC  6853               	setf	_ultimaTecla^0,c
  8227                           
  8228                           ;Ssms.c: 35:     zeroTecla = 0;
  8229  0012BE  6A3A               	clrf	_zeroTecla^0,c
  8230  0012C0  0012               	return	
  8231  0012C2                     l6245:
  8232                           
  8233                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8234  0012C2  5053               	movf	_ultimaTecla^0,w,c
  8235  0012C4  1854               	xorwf	_novaTecla^0,w,c
  8236  0012C6  E10C               	bnz	l6253
  8237  0012C8  503B               	movf	_timerSMS^0,w,c
  8238  0012CA  EC15  F00F         	call	_TiGetTics
  8239  0012CE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8240  0012D0  D002               	goto	u6710
  8241  0012D2  D8A8               	call	PL84	;call to abstracted procedure
  8242  0012D4  E205               	bc	l6253
  8243  0012D6                     u6710:
  8244                           
  8245                           ;Ssms.c: 40:     novaTecla = -1;
  8246  0012D6  6854               	setf	_novaTecla^0,c
  8247                           
  8248                           ;Ssms.c: 41:     sumaPulsacions++;
  8249  0012D8  2A3C               	incf	_sumaPulsacions^0,f,c
  8250                           
  8251                           ;Ssms.c: 42:     lletraASCII++;
  8252  0012DA  2A55               	incf	_lletraASCII^0,f,c
  8253                           
  8254                           ;Ssms.c: 43:     state++;
  8255  0012DC  2A39               	incf	SMotor@state^0,f,c
  8256                           
  8257                           ;Ssms.c: 44:    }
  8258  0012DE  0012               	return	
  8259  0012E0                     l6253:
  8260  0012E0  2854               	incf	_novaTecla^0,w,c
  8261  0012E2  B4D8               	btfsc	status,2,c
  8262  0012E4  0012               	return	
  8263  0012E6  5053               	movf	_ultimaTecla^0,w,c
  8264  0012E8  1854               	xorwf	_novaTecla^0,w,c
  8265  0012EA  B4D8               	btfsc	status,2,c
  8266  0012EC  0012               	return	
  8267                           
  8268                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8269  0012EE  5055               	movf	_lletraASCII^0,w,c
  8270  0012F0  ECBB  F000         	call	_MNovaLletra
  8271                           
  8272                           ;Ssms.c: 47:     if(novaTecla != 0){
  8273  0012F4  5054               	movf	_novaTecla^0,w,c
  8274  0012F6  E005               	bz	l6263
  8275                           
  8276                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8277  0012F8  5054               	movf	_novaTecla^0,w,c
  8278  0012FA  0FBD               	addlw	low (_lletraInici+254)
  8279  0012FC  EC3C  F009         	call	PL58	;call to abstracted procedure
  8280  001300  D001               	goto	L4
  8281  001302                     l6263:
  8282                           
  8283                           ;Ssms.c: 50:       lletraASCII = '0';
  8284  001302  0E30               	movlw	48
  8285  001304                     L4:
  8286  001304  6E55               	movwf	_lletraASCII^0,c
  8287                           
  8288                           ;Ssms.c: 52:     zeroTecla=0;
  8289  001306  6A3A               	clrf	_zeroTecla^0,c
  8290                           
  8291                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8292  001308  C054  F053         	movff	_novaTecla,_ultimaTecla
  8293                           
  8294                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8295  00130C  6A3C               	clrf	_sumaPulsacions^0,c
  8296                           
  8297                           ;Ssms.c: 55:     novaTecla = -1;
  8298  00130E  6854               	setf	_novaTecla^0,c
  8299                           
  8300                           ;Ssms.c: 56:     state--;
  8301  001310  0639               	decf	SMotor@state^0,f,c
  8302  001312  0012               	return	
  8303  001314                     l6275:
  8304                           
  8305                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8306  001314  0E07               	movlw	7
  8307  001316  1853               	xorwf	_ultimaTecla^0,w,c
  8308  001318  E008               	bz	l6283
  8309  00131A  0E09               	movlw	9
  8310  00131C  1853               	xorwf	_ultimaTecla^0,w,c
  8311  00131E  E005               	bz	l6283
  8312  001320  5053               	movf	_ultimaTecla^0,w,c
  8313  001322  E003               	bz	l6283
  8314                           
  8315                           ;Ssms.c: 61:     state = 5;
  8316  001324  0E05               	movlw	5
  8317  001326  6E39               	movwf	SMotor@state^0,c
  8318                           
  8319                           ;Ssms.c: 62:    }
  8320  001328  0C05               	retlw	5
  8321  00132A                     l6283:
  8322  00132A  0E07               	movlw	7
  8323  00132C  1853               	xorwf	_ultimaTecla^0,w,c
  8324  00132E  E003               	bz	u6790
  8325  001330  0E09               	movlw	9
  8326  001332  1853               	xorwf	_ultimaTecla^0,w,c
  8327  001334  E103               	bnz	l6289
  8328  001336                     u6790:
  8329                           
  8330                           ;Ssms.c: 64:     state = 6;
  8331  001336  0E06               	movlw	6
  8332  001338  6E39               	movwf	SMotor@state^0,c
  8333                           
  8334                           ;Ssms.c: 65:    }
  8335  00133A  0C06               	retlw	6
  8336  00133C                     l6289:
  8337  00133C  5053               	movf	_ultimaTecla^0,w,c
  8338  00133E  A4D8               	btfss	status,2,c
  8339  001340  0012               	return	
  8340                           
  8341                           ;Ssms.c: 67:     zeroTecla++;
  8342  001342  2A3A               	incf	_zeroTecla^0,f,c
  8343                           
  8344                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8345  001344  0E02               	movlw	2
  8346  001346  183A               	xorwf	_zeroTecla^0,w,c
  8347  001348  E101               	bnz	l6297
  8348  00134A  6A3A               	clrf	_zeroTecla^0,c
  8349  00134C                     l6297:
  8350                           
  8351                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8352  00134C  503A               	movf	_zeroTecla^0,w,c
  8353  00134E  0F45               	addlw	low _arrayZero
  8354  001350  EC3C  F009         	call	PL58	;call to abstracted procedure
  8355  001354  6E55               	movwf	_lletraASCII^0,c
  8356  001356                     l6299:
  8357                           
  8358                           ;Ssms.c: 70:     state = 0;
  8359  001356  6A39               	clrf	SMotor@state^0,c
  8360  001358  0012               	return	
  8361  00135A                     l6301:
  8362                           
  8363                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8364  00135A  5054               	movf	_novaTecla^0,w,c
  8365  00135C  0A80               	xorlw	128
  8366  00135E  0F7E               	addlw	-130
  8367  001360  E202               	bc	u6830
  8368  001362  5054               	movf	_novaTecla^0,w,c
  8369  001364  E107               	bnz	l6309
  8370  001366                     u6830:
  8371  001366  5054               	movf	_novaTecla^0,w,c
  8372  001368  0A80               	xorlw	128
  8373  00136A  0F76               	addlw	-138
  8374  00136C  E203               	bc	l6309
  8375                           
  8376                           ;Ssms.c: 75:     state = 1;
  8377  00136E  0E01               	movlw	1
  8378  001370  6E39               	movwf	SMotor@state^0,c
  8379                           
  8380                           ;Ssms.c: 76:    }
  8381  001372  0C01               	retlw	1
  8382  001374                     l6309:
  8383  001374  5054               	movf	_novaTecla^0,w,c
  8384  001376  E00C               	bz	l6321
  8385  001378  5054               	movf	_novaTecla^0,w,c
  8386  00137A  0A80               	xorlw	128
  8387  00137C  0F7E               	addlw	-130
  8388  00137E  E208               	bc	l6321
  8389  001380  2855               	incf	_lletraASCII^0,w,c
  8390  001382  E106               	bnz	l6321
  8391                           
  8392                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8393  001384  5054               	movf	_novaTecla^0,w,c
  8394  001386  0F30               	addlw	48
  8395  001388  ECBB  F000         	call	_MNovaLletra
  8396  00138C                     l6317:
  8397                           
  8398                           ;Ssms.c: 79:     novaTecla = -1;
  8399  00138C  6854               	setf	_novaTecla^0,c
  8400  00138E  D7E3               	goto	l6299
  8401  001390                     l6321:
  8402  001390  5054               	movf	_novaTecla^0,w,c
  8403  001392  B4D8               	btfsc	status,2,c
  8404  001394  0012               	return	
  8405  001396  5054               	movf	_novaTecla^0,w,c
  8406  001398  0A80               	xorlw	128
  8407  00139A  0F7E               	addlw	-130
  8408  00139C  B0D8               	btfsc	status,0,c
  8409  00139E  0012               	return	
  8410  0013A0  2855               	incf	_lletraASCII^0,w,c
  8411  0013A2  B4D8               	btfsc	status,2,c
  8412  0013A4  0012               	return	
  8413                           
  8414                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8415  0013A6  5055               	movf	_lletraASCII^0,w,c
  8416  0013A8  ECBB  F000         	call	_MNovaLletra
  8417                           
  8418                           ;Ssms.c: 84:     lletraASCII = -1;
  8419  0013AC  6855               	setf	_lletraASCII^0,c
  8420                           
  8421                           ;Ssms.c: 85:     state++;
  8422  0013AE  2A39               	incf	SMotor@state^0,f,c
  8423  0013B0  0012               	return	
  8424  0013B2                     l6333:
  8425                           
  8426                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8427  0013B2  5054               	movf	_novaTecla^0,w,c
  8428  0013B4  0F30               	addlw	48
  8429  0013B6  ECBB  F000         	call	_MNovaLletra
  8430  0013BA  D7E8               	goto	l6317
  8431  0013BC                     l6339:
  8432                           
  8433                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8434  0013BC  0E04               	movlw	4
  8435  0013BE  183C               	xorwf	_sumaPulsacions^0,w,c
  8436  0013C0  E108               	bnz	l6347
  8437  0013C2                     u6910:
  8438                           
  8439                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8440  0013C2  5053               	movf	_ultimaTecla^0,w,c
  8441  0013C4  0FBD               	addlw	low (_lletraInici+254)
  8442  0013C6  6ED9               	movwf	fsr2l,c
  8443  0013C8  6ADA               	clrf	fsr2h,c
  8444  0013CA  50DF               	movf	indf2,w,c
  8445  0013CC  6E55               	movwf	_lletraASCII^0,c
  8446                           
  8447                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8448  0013CE  6A3C               	clrf	_sumaPulsacions^0,c
  8449  0013D0  D7C2               	goto	l6299
  8450  0013D2                     l6347:
  8451  0013D2  0E03               	movlw	3
  8452  0013D4  183C               	xorwf	_sumaPulsacions^0,w,c
  8453  0013D6  E103               	bnz	l6353
  8454  0013D8                     u6920:
  8455                           
  8456                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8457  0013D8  5053               	movf	_ultimaTecla^0,w,c
  8458  0013DA  0F30               	addlw	48
  8459  0013DC  D7BB               	goto	L5
  8460  0013DE                     l6353:
  8461  0013DE  0E03               	movlw	3
  8462  0013E0  603C               	cpfslt	_sumaPulsacions^0,c
  8463  0013E2  0012               	return	
  8464  0013E4  D7B8               	goto	l6299
  8465  0013E6                     l6357:
  8466                           
  8467                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8468  0013E6  0E04               	movlw	4
  8469  0013E8  183C               	xorwf	_sumaPulsacions^0,w,c
  8470  0013EA  E0F6               	bz	u6920
  8471  0013EC  0E05               	movlw	5
  8472  0013EE  183C               	xorwf	_sumaPulsacions^0,w,c
  8473  0013F0  E0E8               	bz	u6910
  8474  0013F2  0E04               	movlw	4
  8475  0013F4  D7F5               	goto	L6
  8476  0013F6                     l6377:
  8477  0013F6  5039               	movf	SMotor@state^0,w,c
  8478  0013F8  6E6B               	movwf	??_SMotor^0,c
  8479  0013FA  6A6C               	clrf	(??_SMotor+1)^0,c
  8480                           
  8481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8482                           ; Switch size 1, requested type "space"
  8483                           ; Number of cases is 1, Range of values is 0 to 0
  8484                           ; switch strategies available:
  8485                           ; Name         Instructions Cycles
  8486                           ; simple_byte            4     3 (average)
  8487                           ;	Chosen strategy is simple_byte
  8488  0013FC  506C               	movf	(??_SMotor+1)^0,w,c
  8489  0013FE  A4D8               	btfss	status,2,c
  8490  001400  0012               	return	
  8491                           
  8492                           ; Switch size 1, requested type "space"
  8493                           ; Number of cases is 7, Range of values is 0 to 6
  8494                           ; switch strategies available:
  8495                           ; Name         Instructions Cycles
  8496                           ; simple_byte           22    12 (average)
  8497                           ;	Chosen strategy is simple_byte
  8498  001402  506B               	movf	??_SMotor^0,w,c
  8499  001404  E101 D73D          	bz	l6221
  8500  001408  0A01               	xorlw	1	; case 1
  8501  00140A  E101 D75A          	bz	l6245
  8502  00140E  0A03               	xorlw	3	; case 2
  8503  001410  E081               	bz	l6275
  8504  001412  0A01               	xorlw	1	; case 3
  8505  001414  E0A2               	bz	l6301
  8506  001416  0A07               	xorlw	7	; case 4
  8507  001418  E0CC               	bz	l6333
  8508  00141A  0A01               	xorlw	1	; case 5
  8509  00141C  E0CF               	bz	l6339
  8510  00141E  0A03               	xorlw	3	; case 6
  8511  001420  E0E2               	bz	l6357
  8512  001422  0012               	return		;funcret
  8513  001424                     __end_of_SMotor:
  8514                           	callstack 0
  8515  001424                     PL84:
  8516                           	callstack 27
  8517  001424  0E5A               	movlw	90
  8518  001426  5C64               	subwf	?_TiGetTics^0,w,c
  8519  001428  0E02               	movlw	2
  8520  00142A  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8521  00142C  0012               	return	
  8522  00142E                     __end_ofPL84:
  8523                           	callstack 0
  8524                           
  8525 ;; *************** function _MNovaLletra *****************
  8526 ;; Defined at:
  8527 ;;		line 35 in file "Menu.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  lletra          1    wreg     unsigned char 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  lletra          1    5[COMRAM] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1
  8541 ;;      Params:         0       0       0
  8542 ;;      Locals:         1       0       0
  8543 ;;      Temps:          0       0       0
  8544 ;;      Totals:         1       0       0
  8545 ;;Total ram usage:        1 bytes
  8546 ;; Hardware stack levels used: 1
  8547 ;; Hardware stack levels required when called: 2
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_SMotor
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text69
  8556  000176                     __ptext69:
  8557                           	callstack 0
  8558  000176                     _MNovaLletra:
  8559                           	callstack 27
  8560                           
  8561                           ;incstack = 0
  8562                           ;MNovaLletra@lletra stored from wreg
  8563  000176  6E64               	movwf	MNovaLletra@lletra^0,c
  8564                           
  8565                           ;Menu.c: 36:     novaLletra = lletra;
  8566  000178  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8567  00017C  0012               	return		;funcret
  8568  00017E                     __end_of_MNovaLletra:
  8569                           	callstack 0
  8570                           
  8571 ;; *************** function _Minit *****************
  8572 ;; Defined at:
  8573 ;;		line 28 in file "Menu.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1
  8587 ;;      Params:         0       0       0
  8588 ;;      Locals:         0       0       0
  8589 ;;      Temps:          0       0       0
  8590 ;;      Totals:         0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 3
  8594 ;; This function calls:
  8595 ;;		_TiGetTimer
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text70
  8602  00017E                     __ptext70:
  8603                           	callstack 0
  8604  00017E                     _Minit:
  8605                           	callstack 27
  8606                           
  8607                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8608                           
  8609                           ;incstack = 0
  8610  00017E  ECD8  F00E         	call	_TiGetTimer	;wreg free
  8611  000182  6E32               	movwf	_timerMenu^0,c
  8612  000184  0012               	return		;funcret
  8613  000186                     __end_of_Minit:
  8614                           	callstack 0
  8615                           
  8616 ;; *************** function _LcLCD *****************
  8617 ;; Defined at:
  8618 ;;		line 232 in file "LcTLCD.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1
  8632 ;;      Params:         0       0       0
  8633 ;;      Locals:         0       0       0
  8634 ;;      Temps:          0       0       0
  8635 ;;      Totals:         0       0       0
  8636 ;;Total ram usage:        0 bytes
  8637 ;; Hardware stack levels used: 1
  8638 ;; Hardware stack levels required when called: 6
  8639 ;; This function calls:
  8640 ;;		_LcPutChar
  8641 ;; This function is called by:
  8642 ;;		_main
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text71
  8647  001BB4                     __ptext71:
  8648                           	callstack 0
  8649  001BB4                     _LcLCD:
  8650                           	callstack 24
  8651                           
  8652                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8653                           
  8654                           ;incstack = 0
  8655  001BB4  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8656  001BB6  0012               	return	
  8657                           
  8658                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8659  001BB8  D818               	call	PL38	;call to abstracted procedure
  8660  001BBA  64F7               	cpfsgt	tblptrh,c
  8661  001BBC  D003               	bra	u4087
  8662  001BBE  0008               	tblrd		*
  8663  001BC0  50F5               	movf	tablat,w,c
  8664  001BC2  D001               	bra	u4080
  8665  001BC4                     u4087:
  8666  001BC4  D819               	call	PL48	;call to abstracted procedure
  8667  001BC6                     u4080:
  8668  001BC6  EC02  F00E         	call	_LcPutChar
  8669                           
  8670                           ;LcTLCD.c: 235:         s_ptr++;
  8671  001BCA  4A0B               	infsnz	_s_ptr^0,f,c
  8672  001BCC  2A0C               	incf	(_s_ptr+1)^0,f,c
  8673                           
  8674                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8675  001BCE  D80D               	call	PL38	;call to abstracted procedure
  8676  001BD0  64F7               	cpfsgt	tblptrh,c
  8677  001BD2  D003               	bra	u4097
  8678  001BD4  0008               	tblrd		*
  8679  001BD6  50F5               	movf	tablat,w,c
  8680  001BD8  D001               	bra	u4090
  8681  001BDA                     u4097:
  8682  001BDA  D80E               	call	PL48	;call to abstracted procedure
  8683  001BDC                     u4090:
  8684  001BDC  0900               	iorlw	0
  8685  001BDE  A4D8               	btfss	status,2,c
  8686  001BE0  0012               	return	
  8687                           
  8688                           ;LcTLCD.c: 237:             nou_s = 0;
  8689  001BE2  9477               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8690                           
  8691                           ;LcTLCD.c: 238:             s_ptr=0;
  8692  001BE4  6A0B               	clrf	_s_ptr^0,c
  8693  001BE6  6A0C               	clrf	(_s_ptr+1)^0,c
  8694  001BE8  0012               	return		;funcret
  8695  001BEA                     __end_of_LcLCD:
  8696                           	callstack 0
  8697  001BEA                     PL38:
  8698                           	callstack 24
  8699  001BEA  C00B  FFF6         	movff	_s_ptr,tblptrl
  8700  001BEE  C00C  FFF7         	movff	_s_ptr+1,tblptrh
  8701  001BF2  6AF8               	clrf	tblptru,c
  8702  001BF4  0E01               	movlw	(high __ramtop+-1)
  8703  001BF6  0012               	return	
  8704  001BF8                     __end_ofPL38:
  8705                           	callstack 0
  8706  001BF8                     PL48:
  8707                           	callstack 24
  8708  001BF8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8709  001BFC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8710  001C00  50E7               	movf	indf1,w,c
  8711  001C02  0012               	return	
  8712  001C04                     __end_ofPL48:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function _LcInit *****************
  8716 ;; Defined at:
  8717 ;;		line 41 in file "LcTLCD.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  rows            1    wreg     unsigned char 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  rows            1   16[COMRAM] unsigned char 
  8722 ;;  i               2   17[COMRAM] int 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1
  8732 ;;      Params:         0       0       0
  8733 ;;      Locals:         3       0       0
  8734 ;;      Temps:          0       0       0
  8735 ;;      Totals:         3       0       0
  8736 ;;Total ram usage:        3 bytes
  8737 ;; Hardware stack levels used: 1
  8738 ;; Hardware stack levels required when called: 4
  8739 ;; This function calls:
  8740 ;;		_CantaIR
  8741 ;;		_EscriuPrimeraOrdre
  8742 ;;		_Espera
  8743 ;;		_TiGetTimer
  8744 ;;		_WaitForBusy
  8745 ;; This function is called by:
  8746 ;;		_main
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text72
  8751  001714                     __ptext72:
  8752                           	callstack 0
  8753  001714                     _LcInit:
  8754                           	callstack 26
  8755                           
  8756                           ;incstack = 0
  8757                           ;LcInit@rows stored from wreg
  8758  001714  6E6F               	movwf	LcInit@rows^0,c
  8759                           
  8760                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8761  001716  ECD8  F00E         	call	_TiGetTimer	;wreg free
  8762  00171A  6E3D               	movwf	_Timer^0,c
  8763                           
  8764                           ;LcTLCD.c: 49:  Rows = rows;
  8765  00171C  C06F  F040         	movff	LcInit@rows,_Rows
  8766                           
  8767                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8768  001720  6A3E               	clrf	_ColumnAct^0,c
  8769  001722  6A3F               	clrf	_RowAct^0,c
  8770                           
  8771                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8772  001724  9894               	bcf	148,4,c	;volatile
  8773  001726  9E95               	bcf	149,7,c	;volatile
  8774  001728  9A94               	bcf	148,5,c	;volatile
  8775                           
  8776                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8777  00172A  6A70               	clrf	LcInit@i^0,c
  8778  00172C  6A71               	clrf	(LcInit@i+1)^0,c
  8779  00172E                     l4705:
  8780                           
  8781                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8782  00172E  6A6C               	clrf	(Espera@ms+1)^0,c
  8783  001730  0E64               	movlw	100
  8784  001732  6E6B               	movwf	Espera@ms^0,c
  8785  001734  503D               	movf	_Timer^0,w,c
  8786  001736  EC81  F00F         	call	_Espera
  8787                           
  8788                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8789  00173A  0E03               	movlw	3
  8790  00173C  ECC6  F00C         	call	_EscriuPrimeraOrdre
  8791                           
  8792                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8793  001740  6A6C               	clrf	(Espera@ms+1)^0,c
  8794  001742  0E05               	movlw	5
  8795  001744  6E6B               	movwf	Espera@ms^0,c
  8796  001746  503D               	movf	_Timer^0,w,c
  8797  001748  EC81  F00F         	call	_Espera
  8798                           
  8799                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8800  00174C  0E03               	movlw	3
  8801  00174E  ECC6  F00C         	call	_EscriuPrimeraOrdre
  8802                           
  8803                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8804  001752  D83A               	call	PL74	;call to abstracted procedure
  8805  001754  EC81  F00F         	call	_Espera
  8806                           
  8807                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8808  001758  0E03               	movlw	3
  8809  00175A  ECC6  F00C         	call	_EscriuPrimeraOrdre
  8810                           
  8811                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8812  00175E  D834               	call	PL74	;call to abstracted procedure
  8813  001760  EC81  F00F         	call	_Espera
  8814                           
  8815                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8816  001764  0E02               	movlw	2
  8817  001766  ECC6  F00C         	call	_EscriuPrimeraOrdre
  8818                           
  8819                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8820  00176A  6A6C               	clrf	(Espera@ms+1)^0,c
  8821  00176C  0E04               	movlw	4
  8822  00176E  6E6B               	movwf	Espera@ms^0,c
  8823  001770  503D               	movf	_Timer^0,w,c
  8824  001772  EC81  F00F         	call	_Espera
  8825                           
  8826                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8827  001776  0E28               	movlw	40
  8828  001778  ECAF  F00F         	call	_CantaIR
  8829                           
  8830                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8831  00177C  EC69  F00E         	call	_WaitForBusy	;wreg free
  8832  001780  0E08               	movlw	8
  8833  001782  ECAF  F00F         	call	_CantaIR
  8834                           
  8835                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8836  001786  EC69  F00E         	call	_WaitForBusy	;wreg free
  8837  00178A  0E01               	movlw	1
  8838  00178C  ECAF  F00F         	call	_CantaIR
  8839                           
  8840                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8841  001790  EC7C  F00F         	call	PL72	;call to abstracted procedure
  8842  001794  EC81  F00F         	call	_Espera
  8843                           
  8844                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8845  001798  EC69  F00E         	call	_WaitForBusy	;wreg free
  8846  00179C  0E06               	movlw	6
  8847  00179E  ECAF  F00F         	call	_CantaIR
  8848                           
  8849                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8850  0017A2  EC69  F00E         	call	_WaitForBusy	;wreg free
  8851  0017A6  0E0F               	movlw	15
  8852  0017A8  ECAF  F00F         	call	_CantaIR
  8853                           
  8854                           ;LcTLCD.c: 74:  }
  8855  0017AC  4A70               	infsnz	LcInit@i^0,f,c
  8856  0017AE  2A71               	incf	(LcInit@i+1)^0,f,c
  8857  0017B0  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8858  0017B2  D7BD               	goto	l4705
  8859  0017B4  5071               	movf	(LcInit@i+1)^0,w,c
  8860  0017B6  E103               	bnz	u4060
  8861  0017B8  0E02               	movlw	2
  8862  0017BA  5C70               	subwf	LcInit@i^0,w,c
  8863  0017BC  E3B8               	bnc	l4705
  8864  0017BE                     u4060:
  8865                           
  8866                           ;LcTLCD.c: 80:     WaitForBusy();
  8867  0017BE  EC69  F00E         	call	_WaitForBusy	;wreg free
  8868                           
  8869                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8870  0017C2  0E0C               	movlw	12
  8871  0017C4  EFAF  F00F         	goto	_CantaIR
  8872  0017C8                     __end_of_LcInit:
  8873                           	callstack 0
  8874  0017C8                     PL74:
  8875                           	callstack 26
  8876  0017C8  6A6C               	clrf	(Espera@ms+1)^0,c
  8877  0017CA  0E01               	movlw	1
  8878  0017CC  6E6B               	movwf	Espera@ms^0,c
  8879  0017CE  503D               	movf	_Timer^0,w,c
  8880  0017D0  0012               	return	
  8881  0017D2                     __end_ofPL74:
  8882                           	callstack 0
  8883                           
  8884 ;; *************** function _EscriuPrimeraOrdre *****************
  8885 ;; Defined at:
  8886 ;;		line 216 in file "LcTLCD.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  ordre           1    wreg     unsigned char 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  ordre           1    6[COMRAM] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1
  8900 ;;      Params:         0       0       0
  8901 ;;      Locals:         1       0       0
  8902 ;;      Temps:          1       0       0
  8903 ;;      Totals:         2       0       0
  8904 ;;Total ram usage:        2 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 2
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_LcInit
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text73
  8915  00198C                     __ptext73:
  8916                           	callstack 0
  8917  00198C                     _EscriuPrimeraOrdre:
  8918                           	callstack 27
  8919                           
  8920                           ;incstack = 0
  8921                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8922  00198C  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8923                           
  8924                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8925  00198E  9694               	bcf	148,3,c	;volatile
  8926                           
  8927                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8928  001990  D82F               	call	PL44	;call to abstracted procedure
  8929  001992  888B               	bsf	139,4,c	;volatile
  8930                           
  8931                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8932  001994  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8933  001996  D003               	goto	u250
  8934  001998  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8935  00199A  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8936  00199C  D001               	goto	u268
  8937  00199E                     u250:
  8938  00199E  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8939  0019A0                     u268:
  8940  0019A0  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8941  0019A2  D82D               	call	PL68	;call to abstracted procedure
  8942  0019A4  0BF7               	andlw	-9
  8943  0019A6  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8944  0019A8  6E8B               	movwf	139,c	;volatile
  8945                           
  8946                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8947  0019AA  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8948  0019AC  D003               	goto	u270
  8949  0019AE  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8950  0019B0  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8951  0019B2  D001               	goto	u288
  8952  0019B4                     u270:
  8953  0019B4  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8954  0019B6                     u288:
  8955  0019B6  D823               	call	PL68	;call to abstracted procedure
  8956  0019B8  0BFB               	andlw	-5
  8957  0019BA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8958  0019BC  6E8B               	movwf	139,c	;volatile
  8959                           
  8960                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8961  0019BE  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8962  0019C0  D003               	goto	u290
  8963  0019C2  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8964  0019C4  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8965  0019C6  D001               	goto	u308
  8966  0019C8                     u290:
  8967  0019C8  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8968  0019CA                     u308:
  8969  0019CA  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8970  0019CC  508B               	movf	139,w,c	;volatile
  8971  0019CE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8972  0019D0  0BFD               	andlw	-3
  8973  0019D2  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8974  0019D4  6E8B               	movwf	139,c	;volatile
  8975                           
  8976                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8977  0019D6  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8978  0019D8  D003               	goto	u310
  8979  0019DA  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8980  0019DC  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8981  0019DE  D001               	goto	u328
  8982  0019E0                     u310:
  8983  0019E0  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8984  0019E2                     u328:
  8985  0019E2  508B               	movf	139,w,c	;volatile
  8986  0019E4  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8987  0019E6  0BFE               	andlw	-2
  8988  0019E8  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8989  0019EA  6E8B               	movwf	139,c	;volatile
  8990                           
  8991                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8992  0019EC  988B               	bcf	139,4,c	;volatile
  8993  0019EE  0012               	return		;funcret
  8994  0019F0                     __end_of_EscriuPrimeraOrdre:
  8995                           	callstack 0
  8996  0019F0                     PL44:
  8997                           	callstack 24
  8998  0019F0  9494               	bcf	148,2,c	;volatile
  8999  0019F2  9294               	bcf	148,1,c	;volatile
  9000  0019F4  9094               	bcf	148,0,c	;volatile
  9001  0019F6  9A8B               	bcf	139,5,c	;volatile
  9002  0019F8  9E8C               	bcf	140,7,c	;volatile
  9003  0019FA  888B               	bsf	139,4,c	;volatile
  9004  0019FC  0012               	return	
  9005  0019FE                     __end_ofPL44:
  9006                           	callstack 0
  9007  0019FE                     PL68:
  9008                           	callstack 27
  9009  0019FE  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9010  001A00  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9011  001A02  508B               	movf	139,w,c	;volatile
  9012  001A04  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9013  001A06  0012               	return	
  9014  001A08                     __end_ofPL68:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function _JoystickMotor *****************
  9018 ;; Defined at:
  9019 ;;		line 18 in file "Joystick.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1
  9033 ;;      Params:         0       0       0
  9034 ;;      Locals:         0       0       0
  9035 ;;      Temps:          2       0       0
  9036 ;;      Totals:         2       0       0
  9037 ;;Total ram usage:        2 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 3
  9040 ;; This function calls:
  9041 ;;		_MNouJoystick
  9042 ;; This function is called by:
  9043 ;;		_main
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text74
  9048  00163E                     __ptext74:
  9049                           	callstack 0
  9050  00163E                     _JoystickMotor:
  9051                           	callstack 27
  9052                           
  9053                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  9054                           
  9055                           ;incstack = 0
  9056  00163E  D056               	goto	l3209
  9057  001640                     l1012:
  9058                           
  9059                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9060  001640  B2C2               	btfsc	194,1,c	;volatile
  9061  001642  D00B               	goto	l1013
  9062  001644  0EC8               	movlw	200
  9063  001646  60C4               	cpfslt	196,c	;volatile
  9064  001648  D008               	goto	l1013
  9065  00164A  0E32               	movlw	50
  9066  00164C  64C4               	cpfsgt	196,c	;volatile
  9067  00164E  D005               	goto	l1013
  9068                           
  9069                           ;Joystick.c: 23:     ADCON0 = 0x07;
  9070  001650  0E07               	movlw	7
  9071  001652  6EC2               	movwf	194,c	;volatile
  9072                           
  9073                           ;Joystick.c: 24:                 cap1 = 1;
  9074  001654  8076               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9075  001656                     l3139:
  9076                           
  9077                           ;Joystick.c: 25:     state++;
  9078  001656  2A17               	incf	JoystickMotor@state^0,f,c
  9079                           
  9080                           ;Joystick.c: 26:    }
  9081  001658  D052               	goto	l1020
  9082  00165A                     l1013:
  9083  00165A  B2C2               	btfsc	194,1,c	;volatile
  9084  00165C  D00F               	goto	l1015
  9085  00165E  0EC7               	movlw	199
  9086  001660  64C4               	cpfsgt	196,c	;volatile
  9087  001662  D00C               	goto	l1015
  9088                           
  9089                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  9090  001664  0E02               	movlw	2
  9091  001666  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9092  001668  E003               	bz	l3147
  9093  00166A  0E02               	movlw	2
  9094  00166C  ECC3  F000         	call	_MNouJoystick
  9095  001670                     l3147:
  9096                           
  9097                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  9098  001670  0E02               	movlw	2
  9099  001672  6E18               	movwf	_ultimaTeclaAD^0,c
  9100                           
  9101                           ;Joystick.c: 30:     ADCON0 = 0x07;
  9102  001674  0E07               	movlw	7
  9103  001676  6EC2               	movwf	194,c	;volatile
  9104                           
  9105                           ;Joystick.c: 31:                 cap1 = 0;
  9106  001678  9076               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9107  00167A  D7ED               	goto	l3139
  9108  00167C                     l1015:
  9109  00167C  B2C2               	btfsc	194,1,c	;volatile
  9110  00167E  D03F               	goto	l1020
  9111  001680  0E33               	movlw	51
  9112  001682  60C4               	cpfslt	196,c	;volatile
  9113  001684  D03C               	goto	l1020
  9114                           
  9115                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  9116  001686  0E08               	movlw	8
  9117  001688  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9118  00168A  E003               	bz	l3161
  9119  00168C  0E08               	movlw	8
  9120  00168E  ECC3  F000         	call	_MNouJoystick
  9121  001692                     l3161:
  9122                           
  9123                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  9124  001692  0E08               	movlw	8
  9125  001694  D7EE               	goto	L7
  9126  001696                     l1021:
  9127                           
  9128                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9129  001696  B2C2               	btfsc	194,1,c	;volatile
  9130  001698  D00B               	goto	l1022
  9131  00169A  0EC8               	movlw	200
  9132  00169C  60C4               	cpfslt	196,c	;volatile
  9133  00169E  D008               	goto	l1022
  9134  0016A0  0E32               	movlw	50
  9135  0016A2  64C4               	cpfsgt	196,c	;volatile
  9136  0016A4  D005               	goto	l1022
  9137                           
  9138                           ;Joystick.c: 44:     ADCON0 = 0x03;
  9139  0016A6  0E03               	movlw	3
  9140  0016A8  6EC2               	movwf	194,c	;volatile
  9141                           
  9142                           ;Joystick.c: 45:                 cap2 = 1;
  9143  0016AA  8E75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9144  0016AC                     l3177:
  9145                           
  9146                           ;Joystick.c: 46:     state--;
  9147  0016AC  0617               	decf	JoystickMotor@state^0,f,c
  9148                           
  9149                           ;Joystick.c: 47:    }
  9150  0016AE  D027               	goto	l1020
  9151  0016B0                     l1022:
  9152  0016B0  B2C2               	btfsc	194,1,c	;volatile
  9153  0016B2  D00F               	goto	l1024
  9154  0016B4  0EC7               	movlw	199
  9155  0016B6  64C4               	cpfsgt	196,c	;volatile
  9156  0016B8  D00C               	goto	l1024
  9157                           
  9158                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  9159  0016BA  0E06               	movlw	6
  9160  0016BC  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9161  0016BE  E003               	bz	l3185
  9162  0016C0  0E06               	movlw	6
  9163  0016C2  ECC3  F000         	call	_MNouJoystick
  9164  0016C6                     l3185:
  9165                           
  9166                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  9167  0016C6  0E06               	movlw	6
  9168  0016C8  6E18               	movwf	_ultimaTeclaAD^0,c
  9169                           
  9170                           ;Joystick.c: 51:     ADCON0 = 0x03;
  9171  0016CA  0E03               	movlw	3
  9172  0016CC  6EC2               	movwf	194,c	;volatile
  9173                           
  9174                           ;Joystick.c: 52:                 cap2 = 0;
  9175  0016CE  9E75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9176  0016D0  D7ED               	goto	l3177
  9177  0016D2                     l1024:
  9178  0016D2  B2C2               	btfsc	194,1,c	;volatile
  9179  0016D4  D014               	goto	l1020
  9180  0016D6  0E33               	movlw	51
  9181  0016D8  60C4               	cpfslt	196,c	;volatile
  9182  0016DA  D011               	goto	l1020
  9183                           
  9184                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9185  0016DC  0E04               	movlw	4
  9186  0016DE  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9187  0016E0  E003               	bz	l3199
  9188  0016E2  0E04               	movlw	4
  9189  0016E4  ECC3  F000         	call	_MNouJoystick
  9190  0016E8                     l3199:
  9191                           
  9192                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9193  0016E8  0E04               	movlw	4
  9194  0016EA  D7EE               	goto	L8
  9195  0016EC                     l3209:
  9196  0016EC  5017               	movf	JoystickMotor@state^0,w,c
  9197  0016EE  6E65               	movwf	??_JoystickMotor^0,c
  9198  0016F0  6A66               	clrf	(??_JoystickMotor+1)^0,c
  9199                           
  9200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9201                           ; Switch size 1, requested type "space"
  9202                           ; Number of cases is 1, Range of values is 0 to 0
  9203                           ; switch strategies available:
  9204                           ; Name         Instructions Cycles
  9205                           ; simple_byte            4     3 (average)
  9206                           ;	Chosen strategy is simple_byte
  9207  0016F2  5066               	movf	(??_JoystickMotor+1)^0,w,c
  9208  0016F4  E104               	bnz	l1020
  9209                           
  9210                           ; Switch size 1, requested type "space"
  9211                           ; Number of cases is 2, Range of values is 0 to 1
  9212                           ; switch strategies available:
  9213                           ; Name         Instructions Cycles
  9214                           ; simple_byte            7     4 (average)
  9215                           ;	Chosen strategy is simple_byte
  9216  0016F6  5065               	movf	??_JoystickMotor^0,w,c
  9217  0016F8  E0A3               	bz	l1012
  9218  0016FA  0A01               	xorlw	1	; case 1
  9219  0016FC  E0CC               	bz	l1021
  9220  0016FE                     l1020:
  9221                           
  9222                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9223  0016FE  B076               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  9224  001700  AE75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9225  001702  0012               	return	
  9226  001704  5018               	movf	_ultimaTeclaAD^0,w,c
  9227  001706  B4D8               	btfsc	status,2,c
  9228  001708  0012               	return	
  9229                           
  9230                           ;Joystick.c: 66:         MNouJoystick(-1);
  9231  00170A  0EFF               	movlw	255
  9232  00170C  ECC3  F000         	call	_MNouJoystick
  9233                           
  9234                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9235  001710  6818               	setf	_ultimaTeclaAD^0,c
  9236  001712  0012               	return		;funcret
  9237  001714                     __end_of_JoystickMotor:
  9238                           	callstack 0
  9239                           
  9240 ;; *************** function _MNouJoystick *****************
  9241 ;; Defined at:
  9242 ;;		line 38 in file "Menu.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  posicio         1    wreg     char 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  posicio         1    5[COMRAM] char 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1
  9256 ;;      Params:         0       0       0
  9257 ;;      Locals:         1       0       0
  9258 ;;      Temps:          0       0       0
  9259 ;;      Totals:         1       0       0
  9260 ;;Total ram usage:        1 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 2
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_JoystickMotor
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text75
  9271  000186                     __ptext75:
  9272                           	callstack 0
  9273  000186                     _MNouJoystick:
  9274                           	callstack 27
  9275                           
  9276                           ;incstack = 0
  9277                           ;MNouJoystick@posicio stored from wreg
  9278  000186  6E64               	movwf	MNouJoystick@posicio^0,c
  9279                           
  9280                           ;Menu.c: 39:     novaDireccio = posicio;
  9281  000188  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9282  00018C  0012               	return		;funcret
  9283  00018E                     __end_of_MNouJoystick:
  9284                           	callstack 0
  9285                           
  9286 ;; *************** function _JoystickInit *****************
  9287 ;; Defined at:
  9288 ;;		line 12 in file "Joystick.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;		None
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1
  9302 ;;      Params:         0       0       0
  9303 ;;      Locals:         0       0       0
  9304 ;;      Temps:          0       0       0
  9305 ;;      Totals:         0       0       0
  9306 ;;Total ram usage:        0 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; Hardware stack levels required when called: 2
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_main
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           	psect	text76
  9317  00004A                     __ptext76:
  9318                           	callstack 0
  9319  00004A                     _JoystickInit:
  9320                           	callstack 28
  9321                           
  9322                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9323                           
  9324                           ;incstack = 0
  9325  00004A  0E01               	movlw	1
  9326  00004C  6EC2               	movwf	194,c	;volatile
  9327                           
  9328                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9329  00004E  0E0D               	movlw	13
  9330  000050  6EC1               	movwf	193,c	;volatile
  9331                           
  9332                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9333  000052  0E09               	movlw	9
  9334  000054  6EC0               	movwf	192,c	;volatile
  9335                           
  9336                           ;Joystick.c: 16:     ADRESH = 127;
  9337  000056  0E7F               	movlw	127
  9338  000058  6EC4               	movwf	196,c	;volatile
  9339  00005A  0C7F               	retlw	127	;funcret
  9340  00005C                     __end_of_JoystickInit:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _GLCDMotor *****************
  9344 ;; Defined at:
  9345 ;;		line 36 in file "GestioLCD.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1
  9359 ;;      Params:         0       0       0
  9360 ;;      Locals:         0       0       0
  9361 ;;      Temps:          2       0       0
  9362 ;;      Totals:         2       0       0
  9363 ;;Total ram usage:        2 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 6
  9366 ;; This function calls:
  9367 ;;		_LcClear
  9368 ;;		_LcGotoXY
  9369 ;;		_LcLliure
  9370 ;;		_LcNewString
  9371 ;;		_LcPutChar
  9372 ;;		_TiGetTics
  9373 ;;		_TiResetTics
  9374 ;; This function is called by:
  9375 ;;		_main
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text77
  9380  000D64                     __ptext77:
  9381                           	callstack 0
  9382  000D64                     _GLCDMotor:
  9383                           	callstack 24
  9384                           
  9385                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9386                           
  9387                           ;incstack = 0
  9388  000D64  D10B               	goto	l5051
  9389  000D66                     l4867:
  9390                           
  9391                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9392  000D66  0E11               	movlw	17
  9393  000D68  601A               	cpfslt	GLCDMotor@length1^0,c
  9394  000D6A  D010               	goto	l4877
  9395  000D6C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9396  000D6E  D00E               	goto	l4877
  9397                           
  9398                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9399  000D70  0E00               	movlw	0
  9400  000D72  6E6C               	movwf	LcGotoXY@Row^0,c
  9401  000D74  ECBE  F00E         	call	_LcGotoXY
  9402                           
  9403                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9404  000D78  D932               	call	PL8	;call to abstracted procedure
  9405  000D7A  6E73               	movwf	??_GLCDMotor^0,c
  9406  000D7C  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9407  000D80  D933               	call	PL12	;call to abstracted procedure
  9408  000D82  EC77  F000         	call	_LcNewString	;wreg free
  9409                           
  9410                           ;GestioLCD.c: 53:     state = 5;
  9411  000D86  0E05               	movlw	5
  9412  000D88  6E20               	movwf	GLCDMotor@state^0,c
  9413                           
  9414                           ;GestioLCD.c: 54:    }
  9415  000D8A  0C05               	retlw	5
  9416  000D8C                     l4877:
  9417  000D8C  0E10               	movlw	16
  9418  000D8E  641A               	cpfsgt	GLCDMotor@length1^0,c
  9419  000D90  0C10               	retlw	16
  9420  000D92  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9421  000D94  0C10               	retlw	16
  9422  000D96                     u4240:
  9423                           
  9424                           ;GestioLCD.c: 56:     state++;
  9425  000D96  2A20               	incf	GLCDMotor@state^0,f,c
  9426  000D98  0012               	return	
  9427  000D9A                     l4883:
  9428                           
  9429                           ;GestioLCD.c: 60:    if (j>=16) {
  9430  000D9A  0E0F               	movlw	15
  9431  000D9C  641F               	cpfsgt	GLCDMotor@j^0,c
  9432  000D9E  D014               	goto	l4897
  9433                           
  9434                           ;GestioLCD.c: 61:     min1++;
  9435  000DA0  2A1E               	incf	GLCDMotor@min1^0,f,c
  9436                           
  9437                           ;GestioLCD.c: 62:     max1++;
  9438  000DA2  2A4E               	incf	GLCDMotor@max1^0,f,c
  9439                           
  9440                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9441  000DA4  D91C               	call	PL8	;call to abstracted procedure
  9442  000DA6  244E               	addwf	GLCDMotor@max1^0,w,c
  9443  000DA8  6E73               	movwf	??_GLCDMotor^0,c
  9444  000DAA  D90E               	call	PL2	;call to abstracted procedure
  9445  000DAC  E101               	bnz	l4891
  9446  000DAE  6A4E               	clrf	GLCDMotor@max1^0,c
  9447  000DB0                     l4891:
  9448                           
  9449                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9450  000DB0  D916               	call	PL8	;call to abstracted procedure
  9451  000DB2  241E               	addwf	GLCDMotor@min1^0,w,c
  9452  000DB4  6E73               	movwf	??_GLCDMotor^0,c
  9453  000DB6  D908               	call	PL2	;call to abstracted procedure
  9454  000DB8  E101               	bnz	l943
  9455  000DBA  6A1E               	clrf	GLCDMotor@min1^0,c
  9456  000DBC                     l943:
  9457                           
  9458                           ;GestioLCD.c: 65:     j=0;
  9459  000DBC  6A1F               	clrf	GLCDMotor@j^0,c
  9460                           
  9461                           ;GestioLCD.c: 66:     k1=min1;
  9462  000DBE  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9463                           
  9464                           ;GestioLCD.c: 67:     state = 6;
  9465  000DC2  0E06               	movlw	6
  9466  000DC4  6E20               	movwf	GLCDMotor@state^0,c
  9467                           
  9468                           ;GestioLCD.c: 68:    }
  9469  000DC6  0C06               	retlw	6
  9470  000DC8                     l4897:
  9471  000DC8  0E10               	movlw	16
  9472  000DCA  601F               	cpfslt	GLCDMotor@j^0,c
  9473  000DCC  0C10               	retlw	16
  9474                           
  9475                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9476  000DCE  0E00               	movlw	0
  9477  000DD0  6E6C               	movwf	LcGotoXY@Row^0,c
  9478  000DD2  501F               	movf	GLCDMotor@j^0,w,c
  9479  000DD4  ECBE  F00E         	call	_LcGotoXY
  9480                           
  9481                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9482  000DD8  D902               	call	PL8	;call to abstracted procedure
  9483  000DDA  241C               	addwf	GLCDMotor@k1^0,w,c
  9484  000DDC  6E73               	movwf	??_GLCDMotor^0,c
  9485  000DDE  D8F4               	call	PL2	;call to abstracted procedure
  9486  000DE0  EC02  F00E         	call	_LcPutChar
  9487                           
  9488                           ;GestioLCD.c: 72:     j++;
  9489  000DE4  2A1F               	incf	GLCDMotor@j^0,f,c
  9490                           
  9491                           ;GestioLCD.c: 73:     k1++;
  9492  000DE6  2A1C               	incf	GLCDMotor@k1^0,f,c
  9493                           
  9494                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9495  000DE8  D8FA               	call	PL8	;call to abstracted procedure
  9496  000DEA  241C               	addwf	GLCDMotor@k1^0,w,c
  9497  000DEC  6E73               	movwf	??_GLCDMotor^0,c
  9498  000DEE  D8EC               	call	PL2	;call to abstracted procedure
  9499  000DF0  B4D8               	btfsc	status,2,c
  9500  000DF2  6A1C               	clrf	GLCDMotor@k1^0,c
  9501  000DF4  0012               	return	
  9502  000DF6                     l4911:
  9503                           
  9504                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9505  000DF6  0E04               	movlw	4
  9506  000DF8  6021               	cpfslt	_menuDaltGLCD^0,c
  9507  000DFA  D010               	goto	u4340
  9508  000DFC  D7CC               	goto	u4240
  9509  000DFE                     u4310:
  9510                           
  9511                           ;GestioLCD.c: 82:     state = 0;
  9512  000DFE  6A20               	clrf	GLCDMotor@state^0,c
  9513  000E00  0012               	return	
  9514  000E02                     l4919:
  9515                           
  9516                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9517  000E02  EC7D  F000         	call	_LcLliure	;wreg free
  9518  000E06  E306               	bnc	l4925
  9519  000E08  0E04               	movlw	4
  9520  000E0A  6021               	cpfslt	_menuDaltGLCD^0,c
  9521  000E0C  D003               	goto	l4925
  9522                           
  9523                           ;GestioLCD.c: 87:     state = 7;
  9524  000E0E  0E07               	movlw	7
  9525  000E10  6E20               	movwf	GLCDMotor@state^0,c
  9526                           
  9527                           ;GestioLCD.c: 88:    }
  9528  000E12  0C07               	retlw	7
  9529  000E14                     l4925:
  9530  000E14  EC7D  F000         	call	_LcLliure	;wreg free
  9531  000E18  A0D8               	btfss	status,0,c
  9532  000E1A  0012               	return	
  9533  000E1C                     u4340:
  9534  000E1C  0E03               	movlw	3
  9535  000E1E  6421               	cpfsgt	_menuDaltGLCD^0,c
  9536  000E20  0C03               	retlw	3
  9537  000E22  D7ED               	goto	u4310
  9538  000E24                     l955:
  9539                           
  9540                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9541  000E24  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9542  000E26  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9543  000E28  0012               	return	
  9544                           
  9545                           ;GestioLCD.c: 95:     length1 = 0;
  9546  000E2A  6A1A               	clrf	GLCDMotor@length1^0,c
  9547                           
  9548                           ;GestioLCD.c: 96:     length2 = 0;
  9549  000E2C  6A19               	clrf	GLCDMotor@length2^0,c
  9550                           
  9551                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9552  000E2E  0E00               	movlw	0
  9553  000E30  6E6C               	movwf	LcGotoXY@Row^0,c
  9554  000E32  ECBE  F00E         	call	_LcGotoXY
  9555                           
  9556                           ;GestioLCD.c: 98:     min1 = 0;
  9557  000E36  6A1E               	clrf	GLCDMotor@min1^0,c
  9558                           
  9559                           ;GestioLCD.c: 99:     max1 = 15;
  9560  000E38  0E0F               	movlw	15
  9561  000E3A  6E4E               	movwf	GLCDMotor@max1^0,c
  9562                           
  9563                           ;GestioLCD.c: 100:     min2 = 0;
  9564  000E3C  6A1D               	clrf	GLCDMotor@min2^0,c
  9565                           
  9566                           ;GestioLCD.c: 101:     max2 = 15;
  9567  000E3E  0E0F               	movlw	15
  9568  000E40  6E4D               	movwf	GLCDMotor@max2^0,c
  9569                           
  9570                           ;GestioLCD.c: 102:     j = 0;
  9571  000E42  6A1F               	clrf	GLCDMotor@j^0,c
  9572                           
  9573                           ;GestioLCD.c: 103:     k1 = 0;
  9574  000E44  6A1C               	clrf	GLCDMotor@k1^0,c
  9575                           
  9576                           ;GestioLCD.c: 104:     k2 = 0;
  9577  000E46  6A1B               	clrf	GLCDMotor@k2^0,c
  9578                           
  9579                           ;GestioLCD.c: 105:     newString = 0;
  9580  000E48  9276               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9581  000E4A  D7A5               	goto	u4240
  9582  000E4C                     l4955:
  9583                           
  9584                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9585  000E4C  D8C8               	call	PL8	;call to abstracted procedure
  9586  000E4E  241A               	addwf	GLCDMotor@length1^0,w,c
  9587  000E50  6E73               	movwf	??_GLCDMotor^0,c
  9588  000E52  D8BA               	call	PL2	;call to abstracted procedure
  9589  000E54  E104               	bnz	l4961
  9590  000E56  0E03               	movlw	3
  9591  000E58  6421               	cpfsgt	_menuDaltGLCD^0,c
  9592  000E5A  D001               	goto	l4961
  9593  000E5C  D79C               	goto	u4240
  9594  000E5E                     l4961:
  9595  000E5E  D8BF               	call	PL8	;call to abstracted procedure
  9596  000E60  241A               	addwf	GLCDMotor@length1^0,w,c
  9597  000E62  6E73               	movwf	??_GLCDMotor^0,c
  9598  000E64  D8B1               	call	PL2	;call to abstracted procedure
  9599  000E66  E002               	bz	l4965
  9600                           
  9601                           ;GestioLCD.c: 114:     length1++;
  9602  000E68  2A1A               	incf	GLCDMotor@length1^0,f,c
  9603                           
  9604                           ;GestioLCD.c: 115:    }
  9605  000E6A  0012               	return	
  9606  000E6C                     l4965:
  9607  000E6C  0E04               	movlw	4
  9608  000E6E  6021               	cpfslt	_menuDaltGLCD^0,c
  9609  000E70  0C04               	retlw	4
  9610  000E72  D8B5               	call	PL8	;call to abstracted procedure
  9611  000E74  241A               	addwf	GLCDMotor@length1^0,w,c
  9612  000E76  6E73               	movwf	??_GLCDMotor^0,c
  9613  000E78  D8A7               	call	PL2	;call to abstracted procedure
  9614  000E7A  A4D8               	btfss	status,2,c
  9615  000E7C  0012               	return	
  9616                           
  9617                           ;GestioLCD.c: 117:     state = 13;
  9618  000E7E  0E0D               	movlw	13
  9619  000E80  6E20               	movwf	GLCDMotor@state^0,c
  9620  000E82  0C0D               	retlw	13
  9621  000E84                     l4971:
  9622                           
  9623                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9624  000E84  0E11               	movlw	17
  9625  000E86  6019               	cpfslt	GLCDMotor@length2^0,c
  9626  000E88  D015               	goto	l4981
  9627  000E8A  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9628  000E8C  D013               	goto	l4981
  9629                           
  9630                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9631  000E8E  EC1D  F005         	call	PL36	;call to abstracted procedure
  9632  000E92  ECBE  F00E         	call	_LcGotoXY
  9633                           
  9634                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9635  000E96  5021               	movf	_menuDaltGLCD^0,w,c
  9636  000E98  0D1D               	mullw	29
  9637  000E9A  CFF3 F073          	movff	prodl,??_GLCDMotor
  9638  000E9E  0E1D               	movlw	29
  9639  000EA0  2673               	addwf	??_GLCDMotor^0,f,c
  9640  000EA2  5073               	movf	??_GLCDMotor^0,w,c
  9641  000EA4  0F01               	addlw	low _menuList
  9642  000EA6  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9643  000EA8  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9644  000EAC  D89D               	call	PL12	;call to abstracted procedure
  9645  000EAE  EC77  F000         	call	_LcNewString	;wreg free
  9646  000EB2  D771               	goto	u4240
  9647  000EB4                     l4981:
  9648  000EB4  0E10               	movlw	16
  9649  000EB6  6419               	cpfsgt	GLCDMotor@length2^0,c
  9650  000EB8  0C10               	retlw	16
  9651  000EBA  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9652  000EBC  0C10               	retlw	16
  9653                           
  9654                           ;GestioLCD.c: 127:     state = 9;
  9655  000EBE  0E09               	movlw	9
  9656  000EC0  6E20               	movwf	GLCDMotor@state^0,c
  9657  000EC2  0C09               	retlw	9
  9658  000EC4                     l4987:
  9659                           
  9660                           ;GestioLCD.c: 131:    if (j<16) {
  9661  000EC4  0E10               	movlw	16
  9662  000EC6  601F               	cpfslt	GLCDMotor@j^0,c
  9663  000EC8  D014               	goto	l5001
  9664                           
  9665                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9666  000ECA  0E01               	movlw	1
  9667  000ECC  6E6C               	movwf	LcGotoXY@Row^0,c
  9668  000ECE  501F               	movf	GLCDMotor@j^0,w,c
  9669  000ED0  ECBE  F00E         	call	_LcGotoXY
  9670                           
  9671                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9672  000ED4  D884               	call	PL8	;call to abstracted procedure
  9673  000ED6  241B               	addwf	GLCDMotor@k2^0,w,c
  9674  000ED8  D87E               	call	PL4	;call to abstracted procedure
  9675  000EDA  D876               	call	PL2	;call to abstracted procedure
  9676  000EDC  EC02  F00E         	call	_LcPutChar
  9677                           
  9678                           ;GestioLCD.c: 134:     j++;
  9679  000EE0  2A1F               	incf	GLCDMotor@j^0,f,c
  9680                           
  9681                           ;GestioLCD.c: 135:     k2++;
  9682  000EE2  2A1B               	incf	GLCDMotor@k2^0,f,c
  9683                           
  9684                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9685  000EE4  D87C               	call	PL8	;call to abstracted procedure
  9686  000EE6  241B               	addwf	GLCDMotor@k2^0,w,c
  9687  000EE8  D876               	call	PL4	;call to abstracted procedure
  9688  000EEA  D86E               	call	PL2	;call to abstracted procedure
  9689  000EEC  B4D8               	btfsc	status,2,c
  9690  000EEE  6A1B               	clrf	GLCDMotor@k2^0,c
  9691  000EF0  0012               	return	
  9692  000EF2                     l5001:
  9693  000EF2  0E0F               	movlw	15
  9694  000EF4  641F               	cpfsgt	GLCDMotor@j^0,c
  9695  000EF6  0C0F               	retlw	15
  9696                           
  9697                           ;GestioLCD.c: 139:     min2++;
  9698  000EF8  2A1D               	incf	GLCDMotor@min2^0,f,c
  9699                           
  9700                           ;GestioLCD.c: 140:     max2++;
  9701  000EFA  2A4D               	incf	GLCDMotor@max2^0,f,c
  9702                           
  9703                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9704  000EFC  D870               	call	PL8	;call to abstracted procedure
  9705  000EFE  244D               	addwf	GLCDMotor@max2^0,w,c
  9706  000F00  D86A               	call	PL4	;call to abstracted procedure
  9707  000F02  D862               	call	PL2	;call to abstracted procedure
  9708  000F04  E101               	bnz	l5009
  9709  000F06  6A4D               	clrf	GLCDMotor@max2^0,c
  9710  000F08                     l5009:
  9711                           
  9712                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9713  000F08  D86A               	call	PL8	;call to abstracted procedure
  9714  000F0A  241D               	addwf	GLCDMotor@min2^0,w,c
  9715  000F0C  D864               	call	PL4	;call to abstracted procedure
  9716  000F0E  D85C               	call	PL2	;call to abstracted procedure
  9717  000F10  E101               	bnz	l973
  9718  000F12  6A1D               	clrf	GLCDMotor@min2^0,c
  9719  000F14                     l973:
  9720                           
  9721                           ;GestioLCD.c: 143:     j=0;
  9722  000F14  6A1F               	clrf	GLCDMotor@j^0,c
  9723                           
  9724                           ;GestioLCD.c: 144:     k2=min2;
  9725  000F16  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9726  000F1A  D73D               	goto	u4240
  9727  000F1C                     l5015:
  9728                           
  9729                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9730  000F1C  5022               	movf	_timerGLCD^0,w,c
  9731  000F1E  EC15  F00F         	call	_TiGetTics
  9732  000F22  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9733  000F24  D00A               	goto	l975
  9734  000F26  D865               	call	PL78	;call to abstracted procedure
  9735  000F28  E308               	bnc	l975
  9736  000F2A  A276               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9737  000F2C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9738  000F2E  D005               	goto	l975
  9739                           
  9740                           ;GestioLCD.c: 150:     LcClear();
  9741  000F30  EC70  F00F         	call	_LcClear	;wreg free
  9742  000F34                     l5023:
  9743                           
  9744                           ;GestioLCD.c: 151:     state = 2;
  9745  000F34  0E02               	movlw	2
  9746  000F36  6E20               	movwf	GLCDMotor@state^0,c
  9747                           
  9748                           ;GestioLCD.c: 152:    }
  9749  000F38  0C02               	retlw	2
  9750  000F3A                     l975:
  9751  000F3A  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9752  000F3C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9753  000F3E  0012               	return	
  9754                           
  9755                           ;GestioLCD.c: 154:     LcClear();
  9756  000F40  EC70  F00F         	call	_LcClear	;wreg free
  9757  000F44  D75C               	goto	u4310
  9758  000F46                     l5031:
  9759                           
  9760                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9761  000F46  5022               	movf	_timerGLCD^0,w,c
  9762  000F48  ECBD  F00F         	call	_TiResetTics
  9763  000F4C  D724               	goto	u4240
  9764  000F4E                     l5035:
  9765                           
  9766                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9767  000F4E  EC7D  F000         	call	_LcLliure	;wreg free
  9768  000F52  A0D8               	btfss	status,0,c
  9769  000F54  0012               	return	
  9770                           
  9771                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9772  000F56  5022               	movf	_timerGLCD^0,w,c
  9773  000F58  ECBD  F00F         	call	_TiResetTics
  9774                           
  9775                           ;GestioLCD.c: 165:     state = 11;
  9776  000F5C  0E0B               	movlw	11
  9777  000F5E  6E20               	movwf	GLCDMotor@state^0,c
  9778  000F60  0C0B               	retlw	11
  9779  000F62                     l5041:
  9780                           
  9781                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9782  000F62  D83D               	call	PL8	;call to abstracted procedure
  9783  000F64  2419               	addwf	GLCDMotor@length2^0,w,c
  9784  000F66  D837               	call	PL4	;call to abstracted procedure
  9785  000F68  D82F               	call	PL2	;call to abstracted procedure
  9786  000F6A  E002               	bz	l5045
  9787                           
  9788                           ;GestioLCD.c: 170:     length2++;
  9789  000F6C  2A19               	incf	GLCDMotor@length2^0,f,c
  9790                           
  9791                           ;GestioLCD.c: 171:    }
  9792  000F6E  0012               	return	
  9793  000F70                     l5045:
  9794  000F70  D836               	call	PL8	;call to abstracted procedure
  9795  000F72  2419               	addwf	GLCDMotor@length2^0,w,c
  9796  000F74  D830               	call	PL4	;call to abstracted procedure
  9797  000F76  D828               	call	PL2	;call to abstracted procedure
  9798  000F78  E0DD               	bz	l5023
  9799  000F7A  0012               	return	
  9800  000F7C                     l5051:
  9801  000F7C  5020               	movf	GLCDMotor@state^0,w,c
  9802  000F7E  6E73               	movwf	??_GLCDMotor^0,c
  9803  000F80  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9804                           
  9805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9806                           ; Switch size 1, requested type "space"
  9807                           ; Number of cases is 1, Range of values is 0 to 0
  9808                           ; switch strategies available:
  9809                           ; Name         Instructions Cycles
  9810                           ; simple_byte            4     3 (average)
  9811                           ;	Chosen strategy is simple_byte
  9812  000F82  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9813  000F84  A4D8               	btfss	status,2,c
  9814  000F86  0012               	return	
  9815                           
  9816                           ; Switch size 1, requested type "space"
  9817                           ; Number of cases is 12, Range of values is 0 to 13
  9818                           ; switch strategies available:
  9819                           ; Name         Instructions Cycles
  9820                           ; simple_byte           37    19 (average)
  9821                           ;	Chosen strategy is simple_byte
  9822  000F88  5073               	movf	??_GLCDMotor^0,w,c
  9823  000F8A  E101 D74B          	bz	l955
  9824  000F8E  0A01               	xorlw	1	; case 1
  9825  000F90  E101 D75C          	bz	l4955
  9826  000F94  0A03               	xorlw	3	; case 2
  9827  000F96  E101 D6E6          	bz	l4867
  9828  000F9A  0A01               	xorlw	1	; case 3
  9829  000F9C  E101 D6FD          	bz	l4883
  9830  000FA0  0A06               	xorlw	6	; case 5
  9831  000FA2  E101 D72E          	bz	l4919
  9832  000FA6  0A03               	xorlw	3	; case 6
  9833  000FA8  E101 D725          	bz	l4911
  9834  000FAC  0A01               	xorlw	1	; case 7
  9835  000FAE  E101 D769          	bz	l4971
  9836  000FB2  0A0F               	xorlw	15	; case 8
  9837  000FB4  E0CC               	bz	l5035
  9838  000FB6  0A01               	xorlw	1	; case 9
  9839  000FB8  E085               	bz	l4987
  9840  000FBA  0A03               	xorlw	3	; case 10
  9841  000FBC  E0C4               	bz	l5031
  9842  000FBE  0A01               	xorlw	1	; case 11
  9843  000FC0  E0AD               	bz	l5015
  9844  000FC2  0A06               	xorlw	6	; case 13
  9845  000FC4  E0CE               	bz	l5041
  9846  000FC6  0012               	return		;funcret
  9847  000FC8                     __end_of_GLCDMotor:
  9848                           	callstack 0
  9849  000FC8                     PL2:
  9850                           	callstack 24
  9851  000FC8  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9852  000FCC                     	if	1	;There is more than 1 active tblptr byte
  9853  000FCC  0E02               	movlw	high __smallconst
  9854  000FCE  6EF7               	movwf	tblptrh,c
  9855  000FD0                     	endif
  9856  000FD0                     	if	0	;tblptru may be non-zero
  9857  000FD0                     	endif
  9858  000FD0                     	if	0	;tblptru may be non-zero
  9859  000FD0                     	endif
  9860  000FD0  0008               	tblrd		*
  9861  000FD2  50F5               	movf	tablat,w,c
  9862  000FD4  0012               	return	
  9863  000FD6                     __end_ofPL2:
  9864                           	callstack 0
  9865  000FD6                     PL4:
  9866                           	callstack 24
  9867  000FD6  6E73               	movwf	??_GLCDMotor^0,c
  9868  000FD8  0E1D               	movlw	29
  9869  000FDA  2673               	addwf	??_GLCDMotor^0,f,c
  9870  000FDC  0C1D               	retlw	29
  9871  000FDE                     __end_ofPL4:
  9872                           	callstack 0
  9873  000FDE                     PL8:
  9874                           	callstack 24
  9875  000FDE  5021               	movf	_menuDaltGLCD^0,w,c
  9876  000FE0  0D1D               	mullw	29
  9877  000FE2  50F3               	movf	243,w,c
  9878  000FE4  0F01               	addlw	low _menuList
  9879  000FE6  0012               	return	
  9880  000FE8                     __end_ofPL8:
  9881                           	callstack 0
  9882  000FE8                     PL12:
  9883                           	callstack 24
  9884  000FE8  5067               	movf	LcNewString@new_s^0,w,c
  9885  000FEA  A4D8               	btfss	status,2,c
  9886  000FEC  0E02               	movlw	high __smallconst
  9887  000FEE  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9888  000FF0  0012               	return	
  9889  000FF2                     __end_ofPL12:
  9890                           	callstack 0
  9891  000FF2                     PL78:
  9892                           	callstack 27
  9893  000FF2  0EB5               	movlw	181
  9894  000FF4  5C64               	subwf	?_TiGetTics^0,w,c
  9895  000FF6  0E04               	movlw	4
  9896  000FF8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9897  000FFA  0012               	return	
  9898  000FFC                     __end_ofPL78:
  9899                           	callstack 0
  9900                           
  9901 ;; *************** function _LcPutChar *****************
  9902 ;; Defined at:
  9903 ;;		line 120 in file "LcTLCD.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  c               1    wreg     unsigned char 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  c               1   19[COMRAM] unsigned char 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1
  9917 ;;      Params:         0       0       0
  9918 ;;      Locals:         1       0       0
  9919 ;;      Temps:          0       0       0
  9920 ;;      Totals:         1       0       0
  9921 ;;Total ram usage:        1 bytes
  9922 ;; Hardware stack levels used: 1
  9923 ;; Hardware stack levels required when called: 5
  9924 ;; This function calls:
  9925 ;;		_CantaData
  9926 ;;		_LcGotoXY
  9927 ;;		_WaitForBusy
  9928 ;; This function is called by:
  9929 ;;		_LcLCD
  9930 ;;		_menu
  9931 ;;		_GLCDMotor
  9932 ;;		_motorSIO
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text78
  9937  001C04                     __ptext78:
  9938                           	callstack 0
  9939  001C04                     _LcPutChar:
  9940                           	callstack 24
  9941                           
  9942                           ;incstack = 0
  9943                           ;LcPutChar@c stored from wreg
  9944  001C04  6E72               	movwf	LcPutChar@c^0,c
  9945                           
  9946                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9947  001C06  EC69  F00E         	call	_WaitForBusy	;wreg free
  9948  001C0A  5072               	movf	LcPutChar@c^0,w,c
  9949  001C0C  EC88  F00E         	call	_CantaData
  9950                           
  9951                           ;LcTLCD.c: 124:  ++ColumnAct;
  9952  001C10  2A3E               	incf	_ColumnAct^0,f,c
  9953                           
  9954                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9955  001C12  0E02               	movlw	2
  9956  001C14  1840               	xorwf	_Rows^0,w,c
  9957  001C16  E10C               	bnz	l4497
  9958                           
  9959                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9960  001C18  0E27               	movlw	39
  9961  001C1A  643E               	cpfsgt	_ColumnAct^0,c
  9962  001C1C  D009               	goto	l4497
  9963                           
  9964                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9965  001C1E  6A3E               	clrf	_ColumnAct^0,c
  9966                           
  9967                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9968  001C20  2A3F               	incf	_RowAct^0,f,c
  9969  001C22  0E01               	movlw	1
  9970  001C24  643F               	cpfsgt	_RowAct^0,c
  9971  001C26  D001               	goto	l4495
  9972  001C28  6A3F               	clrf	_RowAct^0,c
  9973  001C2A                     l4495:
  9974                           
  9975                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9976  001C2A  D80C               	call	PL88	;call to abstracted procedure
  9977  001C2C  ECBE  F00E         	call	_LcGotoXY
  9978  001C30                     l4497:
  9979                           
  9980                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9981  001C30  043F               	decf	_RowAct^0,w,c
  9982  001C32  A4D8               	btfss	status,2,c
  9983  001C34  0012               	return	
  9984                           
  9985                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9986  001C36  0E27               	movlw	39
  9987  001C38  643E               	cpfsgt	_ColumnAct^0,c
  9988  001C3A  D001               	goto	l4503
  9989  001C3C  6A3E               	clrf	_ColumnAct^0,c
  9990  001C3E                     l4503:
  9991                           
  9992                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9993  001C3E  D802               	call	PL88	;call to abstracted procedure
  9994  001C40  EFBE  F00E         	goto	_LcGotoXY
  9995  001C44                     __end_of_LcPutChar:
  9996                           	callstack 0
  9997  001C44                     PL88:
  9998                           	callstack 24
  9999  001C44  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
 10000  001C48  503E               	movf	_ColumnAct^0,w,c
 10001  001C4A  0012               	return	
 10002  001C4C                     __end_ofPL88:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function _CantaData *****************
 10006 ;; Defined at:
 10007 ;;		line 182 in file "LcTLCD.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  Data            1    wreg     unsigned char 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  Data            1    7[COMRAM] unsigned char 
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2, status,0, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1
 10021 ;;      Params:         0       0       0
 10022 ;;      Locals:         1       0       0
 10023 ;;      Temps:          0       0       0
 10024 ;;      Totals:         1       0       0
 10025 ;;Total ram usage:        1 bytes
 10026 ;; Hardware stack levels used: 1
 10027 ;; Hardware stack levels required when called: 3
 10028 ;; This function calls:
 10029 ;;		_CantaPartAlta
 10030 ;;		_CantaPartBaixa
 10031 ;; This function is called by:
 10032 ;;		_LcPutChar
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text79
 10037  001D10                     __ptext79:
 10038                           	callstack 0
 10039  001D10                     _CantaData:
 10040                           	callstack 25
 10041                           
 10042                           ;incstack = 0
 10043                           ;CantaData@Data stored from wreg
 10044  001D10  6E66               	movwf	CantaData@Data^0,c
 10045                           
 10046                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10047  001D12  9694               	bcf	148,3,c	;volatile
 10048  001D14  9494               	bcf	148,2,c	;volatile
 10049  001D16  9294               	bcf	148,1,c	;volatile
 10050  001D18  9094               	bcf	148,0,c	;volatile
 10051                           
 10052                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
 10053  001D1A  8A8B               	bsf	139,5,c	;volatile
 10054                           
 10055                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
 10056  001D1C  9E8C               	bcf	140,7,c	;volatile
 10057                           
 10058                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
 10059  001D1E  888B               	bsf	139,4,c	;volatile
 10060                           
 10061                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
 10062  001D20  5066               	movf	CantaData@Data^0,w,c
 10063  001D22  ECA7  F00D         	call	_CantaPartAlta
 10064                           
 10065                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
 10066                           
 10067                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
 10068                           
 10069                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
 10070                           
 10071                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10072  001D26  D80B               	call	PL82	;call to abstracted procedure
 10073                           
 10074                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
 10075  001D28  5066               	movf	CantaData@Data^0,w,c
 10076  001D2A  EC74  F00D         	call	_CantaPartBaixa
 10077                           
 10078                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
 10079                           
 10080                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
 10081                           
 10082                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10083  001D2E  D000               	goto	PL34	;call to abstracted procedure
 10084  001D30                     __end_of_CantaData:
 10085                           	callstack 0
 10086  001D30                     PL34:
 10087                           	callstack 24
 10088  001D30  888B               	bsf	139,4,c	;volatile
 10089  001D32  988B               	bcf	139,4,c	;volatile
 10090  001D34  8694               	bsf	148,3,c	;volatile
 10091  001D36  8494               	bsf	148,2,c	;volatile
 10092  001D38  8294               	bsf	148,1,c	;volatile
 10093  001D3A  8094               	bsf	148,0,c	;volatile
 10094  001D3C  0012               	return		;funcret
 10095  001D3E                     __end_ofPL34:
 10096                           	callstack 0
 10097  001D3E                     PL82:
 10098                           	callstack 24
 10099  001D3E  888B               	bsf	139,4,c	;volatile
 10100  001D40  988B               	bcf	139,4,c	;volatile
 10101  001D42  988B               	bcf	139,4,c	;volatile
 10102  001D44  888B               	bsf	139,4,c	;volatile
 10103  001D46  0012               	return	
 10104  001D48                     __end_ofPL82:
 10105                           	callstack 0
 10106                           
 10107 ;; *************** function _LcNewString *****************
 10108 ;; Defined at:
 10109 ;;		line 227 in file "LcTLCD.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  new_s           2    8[COMRAM] PTR unsigned char 
 10112 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
 10113 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
 10114 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
 10115 ;;		 -> STR_1(7), registerText(11), loginText(8), 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1
 10127 ;;      Params:         2       0       0
 10128 ;;      Locals:         0       0       0
 10129 ;;      Temps:          0       0       0
 10130 ;;      Totals:         2       0       0
 10131 ;;Total ram usage:        2 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; Hardware stack levels required when called: 2
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_menu
 10138 ;;		_GLCDMotor
 10139 ;;		_motorJoc
 10140 ;;		_motorSIO
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text80
 10145  0000EE                     __ptext80:
 10146                           	callstack 0
 10147  0000EE                     _LcNewString:
 10148                           	callstack 27
 10149                           
 10150                           ;LcTLCD.c: 228:     s_ptr = new_s;
 10151                           
 10152                           ;incstack = 0
 10153  0000EE  C067  F00B         	movff	LcNewString@new_s,_s_ptr
 10154  0000F2  C068  F00C         	movff	LcNewString@new_s+1,_s_ptr+1
 10155                           
 10156                           ;LcTLCD.c: 229:     nou_s = 1;
 10157  0000F6  8477               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10158  0000F8  0012               	return		;funcret
 10159  0000FA                     __end_of_LcNewString:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _LcLliure *****************
 10163 ;; Defined at:
 10164 ;;		line 243 in file "LcTLCD.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;		None               void
 10171 ;; Registers used:
 10172 ;;		status,0
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1
 10178 ;;      Params:         0       0       0
 10179 ;;      Locals:         0       0       0
 10180 ;;      Temps:          0       0       0
 10181 ;;      Totals:         0       0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 2
 10185 ;; This function calls:
 10186 ;;		Nothing
 10187 ;; This function is called by:
 10188 ;;		_menu
 10189 ;;		_GLCDMotor
 10190 ;;		_motorJoc
 10191 ;;		_motorSIO
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text81
 10196  0000FA                     __ptext81:
 10197                           	callstack 0
 10198  0000FA                     _LcLliure:
 10199                           	callstack 27
 10200                           
 10201                           ;LcTLCD.c: 244:     return !nou_s;
 10202                           
 10203                           ;incstack = 0
 10204  0000FA  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10205  0000FC  D002               	goto	l4513
 10206  0000FE  90D8               	bcf	status,0,c
 10207  000100  0012               	return	
 10208  000102                     l4513:
 10209  000102  80D8               	bsf	status,0,c
 10210  000104  0012               	return		;funcret
 10211  000106                     __end_of_LcLliure:
 10212                           	callstack 0
 10213                           
 10214 ;; *************** function _LcClear *****************
 10215 ;; Defined at:
 10216 ;;		line 84 in file "LcTLCD.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1
 10230 ;;      Params:         0       0       0
 10231 ;;      Locals:         0       0       0
 10232 ;;      Temps:          0       0       0
 10233 ;;      Totals:         0       0       0
 10234 ;;Total ram usage:        0 bytes
 10235 ;; Hardware stack levels used: 1
 10236 ;; Hardware stack levels required when called: 5
 10237 ;; This function calls:
 10238 ;;		_CantaIR
 10239 ;;		_Espera
 10240 ;;		_LcGotoXY
 10241 ;;		_WaitForBusy
 10242 ;; This function is called by:
 10243 ;;		_menu
 10244 ;;		_GLCDMotor
 10245 ;;		_motorSIO
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text82
 10250  001EE0                     __ptext82:
 10251                           	callstack 0
 10252  001EE0                     _LcClear:
 10253                           	callstack 24
 10254                           
 10255                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10256                           
 10257                           ;incstack = 0
 10258  001EE0  EC69  F00E         	call	_WaitForBusy	;wreg free
 10259  001EE4  0E01               	movlw	1
 10260  001EE6  ECAF  F00F         	call	_CantaIR
 10261                           
 10262                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10263  001EEA  D806               	call	PL72	;call to abstracted procedure
 10264  001EEC  EC81  F00F         	call	_Espera
 10265                           
 10266                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10267  001EF0  0E00               	movlw	0
 10268  001EF2  6E6C               	movwf	LcGotoXY@Row^0,c
 10269  001EF4  EFBE  F00E         	goto	_LcGotoXY
 10270  001EF8                     __end_of_LcClear:
 10271                           	callstack 0
 10272  001EF8                     PL72:
 10273                           	callstack 26
 10274  001EF8  6A6C               	clrf	(Espera@ms+1)^0,c
 10275  001EFA  0E03               	movlw	3
 10276  001EFC  6E6B               	movwf	Espera@ms^0,c
 10277  001EFE  503D               	movf	_Timer^0,w,c
 10278  001F00  0012               	return	
 10279  001F02                     __end_ofPL72:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _LcGotoXY *****************
 10283 ;; Defined at:
 10284 ;;		line 106 in file "LcTLCD.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  Column          1    wreg     unsigned char 
 10287 ;;  Row             1   13[COMRAM] unsigned char 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  Column          1   18[COMRAM] unsigned char 
 10290 ;;  Fisics          2   14[COMRAM] int 
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      void 
 10293 ;; Registers used:
 10294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1
 10300 ;;      Params:         1       0       0
 10301 ;;      Locals:         5       0       0
 10302 ;;      Temps:          0       0       0
 10303 ;;      Totals:         6       0       0
 10304 ;;Total ram usage:        6 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; Hardware stack levels required when called: 4
 10307 ;; This function calls:
 10308 ;;		_CantaIR
 10309 ;;		_WaitForBusy
 10310 ;; This function is called by:
 10311 ;;		_LcClear
 10312 ;;		_LcPutChar
 10313 ;;		_menu
 10314 ;;		_GLCDMotor
 10315 ;;		_motorJoc
 10316 ;;		_motorSIO
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text83
 10321  001D7C                     __ptext83:
 10322                           	callstack 0
 10323  001D7C                     _LcGotoXY:
 10324                           	callstack 24
 10325                           
 10326                           ;incstack = 0
 10327                           ;LcGotoXY@Column stored from wreg
 10328  001D7C  6E71               	movwf	LcGotoXY@Column^0,c
 10329                           
 10330                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
 10331  001D7E  506C               	movf	LcGotoXY@Row^0,w,c
 10332  001D80  E004               	bz	l55
 10333  001D82  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10334  001D84  0E40               	movlw	64
 10335  001D86  6E6F               	movwf	_LcGotoXY$334^0,c
 10336  001D88  D002               	goto	l4407
 10337  001D8A                     l55:
 10338  001D8A  6A6F               	clrf	_LcGotoXY$334^0,c
 10339  001D8C  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10340  001D8E                     l4407:
 10341  001D8E  5071               	movf	LcGotoXY@Column^0,w,c
 10342  001D90  246F               	addwf	_LcGotoXY$334^0,w,c
 10343  001D92  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10344  001D94  0E00               	movlw	0
 10345  001D96  2070               	addwfc	(_LcGotoXY$334+1)^0,w,c
 10346  001D98  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10347                           
 10348                           ;LcTLCD.c: 113:  WaitForBusy();
 10349  001D9A  EC69  F00E         	call	_WaitForBusy	;wreg free
 10350                           
 10351                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
 10352  001D9E  506D               	movf	LcGotoXY@Fisics^0,w,c
 10353  001DA0  0980               	iorlw	128
 10354  001DA2  ECAF  F00F         	call	_CantaIR
 10355                           
 10356                           ;LcTLCD.c: 116:  RowAct = Row;
 10357  001DA6  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10358                           
 10359                           ;LcTLCD.c: 117:  ColumnAct = Column;
 10360  001DAA  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10361  001DAE  0012               	return		;funcret
 10362  001DB0                     __end_of_LcGotoXY:
 10363                           	callstack 0
 10364                           
 10365 ;; *************** function _WaitForBusy *****************
 10366 ;; Defined at:
 10367 ;;		line 198 in file "LcTLCD.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;		None
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  Busy            1   12[COMRAM] unsigned char 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1
 10381 ;;      Params:         0       0       0
 10382 ;;      Locals:         1       0       0
 10383 ;;      Temps:          0       0       0
 10384 ;;      Totals:         1       0       0
 10385 ;;Total ram usage:        1 bytes
 10386 ;; Hardware stack levels used: 1
 10387 ;; Hardware stack levels required when called: 3
 10388 ;; This function calls:
 10389 ;;		_TiGetTics
 10390 ;;		_TiResetTics
 10391 ;; This function is called by:
 10392 ;;		_LcInit
 10393 ;;		_LcClear
 10394 ;;		_LcGotoXY
 10395 ;;		_LcPutChar
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text84
 10400  001CD2                     __ptext84:
 10401                           	callstack 0
 10402  001CD2                     _WaitForBusy:
 10403                           	callstack 25
 10404                           
 10405                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10406                           
 10407                           ;incstack = 0
 10408  001CD2  8694               	bsf	148,3,c	;volatile
 10409  001CD4  8494               	bsf	148,2,c	;volatile
 10410  001CD6  8294               	bsf	148,1,c	;volatile
 10411  001CD8  8094               	bsf	148,0,c	;volatile
 10412                           
 10413                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
 10414  001CDA  9A8B               	bcf	139,5,c	;volatile
 10415                           
 10416                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
 10417  001CDC  8E8C               	bsf	140,7,c	;volatile
 10418                           
 10419                           ;LcTLCD.c: 202:  TiResetTics(Timer);
 10420  001CDE  503D               	movf	_Timer^0,w,c
 10421  001CE0  ECBD  F00F         	call	_TiResetTics
 10422  001CE4                     l4375:
 10423                           
 10424                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10425  001CE4  888B               	bsf	139,4,c	;volatile
 10426  001CE6  888B               	bsf	139,4,c	;volatile
 10427                           
 10428                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
 10429  001CE8  0E00               	movlw	0
 10430  001CEA  B682               	btfsc	130,3,c	;volatile
 10431  001CEC  0E01               	movlw	1
 10432  001CEE  6E6B               	movwf	WaitForBusy@Busy^0,c
 10433                           
 10434                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
 10435  001CF0  988B               	bcf	139,4,c	;volatile
 10436                           
 10437                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
 10438  001CF2  988B               	bcf	139,4,c	;volatile
 10439                           
 10440                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10441  001CF4  888B               	bsf	139,4,c	;volatile
 10442  001CF6  888B               	bsf	139,4,c	;volatile
 10443                           
 10444                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
 10445  001CF8  988B               	bcf	139,4,c	;volatile
 10446                           
 10447                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
 10448  001CFA  988B               	bcf	139,4,c	;volatile
 10449                           
 10450                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10451  001CFC  503D               	movf	_Timer^0,w,c
 10452  001CFE  EC15  F00F         	call	_TiGetTics
 10453  001D02  5064               	movf	?_TiGetTics^0,w,c
 10454  001D04  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10455  001D06  E001               	bz	l4397
 10456  001D08  0012               	return	
 10457  001D0A                     l4397:
 10458                           
 10459                           ;LcTLCD.c: 213:  } while(Busy);
 10460  001D0A  506B               	movf	WaitForBusy@Busy^0,w,c
 10461  001D0C  E1EB               	bnz	l4375
 10462  001D0E  0012               	return		;funcret
 10463  001D10                     __end_of_WaitForBusy:
 10464                           	callstack 0
 10465                           
 10466 ;; *************** function _CantaIR *****************
 10467 ;; Defined at:
 10468 ;;		line 166 in file "LcTLCD.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  IR              1    wreg     unsigned char 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;  IR              1    7[COMRAM] unsigned char 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      void 
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0, cstack
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1
 10482 ;;      Params:         0       0       0
 10483 ;;      Locals:         1       0       0
 10484 ;;      Temps:          0       0       0
 10485 ;;      Totals:         1       0       0
 10486 ;;Total ram usage:        1 bytes
 10487 ;; Hardware stack levels used: 1
 10488 ;; Hardware stack levels required when called: 3
 10489 ;; This function calls:
 10490 ;;		_CantaPartAlta
 10491 ;;		_CantaPartBaixa
 10492 ;; This function is called by:
 10493 ;;		_LcScroll
 10494 ;;		_LcInit
 10495 ;;		_LcClear
 10496 ;;		_LcGotoXY
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text85
 10501  001F5E                     __ptext85:
 10502                           	callstack 0
 10503  001F5E                     _CantaIR:
 10504                           	callstack 24
 10505                           
 10506                           ;incstack = 0
 10507                           ;CantaIR@IR stored from wreg
 10508  001F5E  6E66               	movwf	CantaIR@IR^0,c
 10509                           
 10510                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10511  001F60  9694               	bcf	148,3,c	;volatile
 10512                           
 10513                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10514                           
 10515                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10516                           
 10517                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10518  001F62  ECF8  F00C         	call	PL44	;call to abstracted procedure
 10519                           
 10520                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10521  001F66  5066               	movf	CantaIR@IR^0,w,c
 10522  001F68  ECA7  F00D         	call	_CantaPartAlta
 10523                           
 10524                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10525                           
 10526                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10527                           
 10528                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10529                           
 10530                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10531  001F6C  EC9F  F00E         	call	PL82	;call to abstracted procedure
 10532                           
 10533                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10534  001F70  5066               	movf	CantaIR@IR^0,w,c
 10535  001F72  EC74  F00D         	call	_CantaPartBaixa
 10536                           
 10537                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10538                           
 10539                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10540                           
 10541                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10542  001F76  EF98  F00E         	goto	PL34	;call to abstracted procedure
 10543  001F7A                     __end_of_CantaIR:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function _CantaPartBaixa *****************
 10547 ;; Defined at:
 10548 ;;		line 159 in file "LcTLCD.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  c               1    wreg     unsigned char 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;  c               1    6[COMRAM] unsigned char 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      void 
 10555 ;; Registers used:
 10556 ;;		wreg, status,2, status,0
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1
 10562 ;;      Params:         0       0       0
 10563 ;;      Locals:         1       0       0
 10564 ;;      Temps:          1       0       0
 10565 ;;      Totals:         2       0       0
 10566 ;;Total ram usage:        2 bytes
 10567 ;; Hardware stack levels used: 1
 10568 ;; Hardware stack levels required when called: 2
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_CantaIR
 10573 ;;		_CantaData
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text86
 10578  001AE8                     __ptext86:
 10579                           	callstack 0
 10580  001AE8                     _CantaPartBaixa:
 10581                           	callstack 24
 10582                           
 10583                           ;incstack = 0
 10584                           ;CantaPartBaixa@c stored from wreg
 10585  001AE8  6E65               	movwf	CantaPartBaixa@c^0,c
 10586                           
 10587                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10588  001AEA  A665               	btfss	CantaPartBaixa@c^0,3,c
 10589  001AEC  D003               	goto	u3760
 10590  001AEE  6A64               	clrf	??_CantaPartBaixa^0,c
 10591  001AF0  2A64               	incf	??_CantaPartBaixa^0,f,c
 10592  001AF2  D001               	goto	u3778
 10593  001AF4                     u3760:
 10594  001AF4  6A64               	clrf	??_CantaPartBaixa^0,c
 10595  001AF6                     u3778:
 10596  001AF6  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10597  001AF8  D825               	call	PL86	;call to abstracted procedure
 10598  001AFA  0BF7               	andlw	-9
 10599  001AFC  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10600  001AFE  6E8B               	movwf	139,c	;volatile
 10601                           
 10602                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10603  001B00  A465               	btfss	CantaPartBaixa@c^0,2,c
 10604  001B02  D003               	goto	u3780
 10605  001B04  6A64               	clrf	??_CantaPartBaixa^0,c
 10606  001B06  2A64               	incf	??_CantaPartBaixa^0,f,c
 10607  001B08  D001               	goto	u3798
 10608  001B0A                     u3780:
 10609  001B0A  6A64               	clrf	??_CantaPartBaixa^0,c
 10610  001B0C                     u3798:
 10611  001B0C  D81B               	call	PL86	;call to abstracted procedure
 10612  001B0E  0BFB               	andlw	-5
 10613  001B10  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10614  001B12  6E8B               	movwf	139,c	;volatile
 10615                           
 10616                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10617  001B14  A265               	btfss	CantaPartBaixa@c^0,1,c
 10618  001B16  D003               	goto	u3800
 10619  001B18  6A64               	clrf	??_CantaPartBaixa^0,c
 10620  001B1A  2A64               	incf	??_CantaPartBaixa^0,f,c
 10621  001B1C  D001               	goto	u3818
 10622  001B1E                     u3800:
 10623  001B1E  6A64               	clrf	??_CantaPartBaixa^0,c
 10624  001B20                     u3818:
 10625  001B20  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10626  001B22  508B               	movf	139,w,c	;volatile
 10627  001B24  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10628  001B26  0BFD               	andlw	-3
 10629  001B28  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10630  001B2A  6E8B               	movwf	139,c	;volatile
 10631                           
 10632                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10633  001B2C  A065               	btfss	CantaPartBaixa@c^0,0,c
 10634  001B2E  D003               	goto	u3820
 10635  001B30  6A64               	clrf	??_CantaPartBaixa^0,c
 10636  001B32  2A64               	incf	??_CantaPartBaixa^0,f,c
 10637  001B34  D001               	goto	u3838
 10638  001B36                     u3820:
 10639  001B36  6A64               	clrf	??_CantaPartBaixa^0,c
 10640  001B38                     u3838:
 10641  001B38  508B               	movf	139,w,c	;volatile
 10642  001B3A  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10643  001B3C  0BFE               	andlw	-2
 10644  001B3E  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10645  001B40  6E8B               	movwf	139,c	;volatile
 10646  001B42  0012               	return		;funcret
 10647  001B44                     __end_of_CantaPartBaixa:
 10648                           	callstack 0
 10649  001B44                     PL86:
 10650                           	callstack 24
 10651  001B44  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10652  001B46  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10653  001B48  508B               	movf	139,w,c	;volatile
 10654  001B4A  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10655  001B4C  0012               	return	
 10656  001B4E                     __end_ofPL86:
 10657                           	callstack 0
 10658                           
 10659 ;; *************** function _CantaPartAlta *****************
 10660 ;; Defined at:
 10661 ;;		line 152 in file "LcTLCD.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;  c               1    wreg     unsigned char 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  c               1    6[COMRAM] unsigned char 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1
 10675 ;;      Params:         0       0       0
 10676 ;;      Locals:         1       0       0
 10677 ;;      Temps:          1       0       0
 10678 ;;      Totals:         2       0       0
 10679 ;;Total ram usage:        2 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 2
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_CantaIR
 10686 ;;		_CantaData
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text87
 10691  001B4E                     __ptext87:
 10692                           	callstack 0
 10693  001B4E                     _CantaPartAlta:
 10694                           	callstack 24
 10695                           
 10696                           ;incstack = 0
 10697                           ;CantaPartAlta@c stored from wreg
 10698  001B4E  6E65               	movwf	CantaPartAlta@c^0,c
 10699                           
 10700                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10701  001B50  AE65               	btfss	CantaPartAlta@c^0,7,c
 10702  001B52  D003               	goto	u3680
 10703  001B54  6A64               	clrf	??_CantaPartAlta^0,c
 10704  001B56  2A64               	incf	??_CantaPartAlta^0,f,c
 10705  001B58  D001               	goto	u3698
 10706  001B5A                     u3680:
 10707  001B5A  6A64               	clrf	??_CantaPartAlta^0,c
 10708  001B5C                     u3698:
 10709  001B5C  4664               	rlncf	??_CantaPartAlta^0,f,c
 10710  001B5E  D825               	call	PL76	;call to abstracted procedure
 10711  001B60  0BF7               	andlw	-9
 10712  001B62  1864               	xorwf	??_CantaPartAlta^0,w,c
 10713  001B64  6E8B               	movwf	139,c	;volatile
 10714                           
 10715                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10716  001B66  AC65               	btfss	CantaPartAlta@c^0,6,c
 10717  001B68  D003               	goto	u3700
 10718  001B6A  6A64               	clrf	??_CantaPartAlta^0,c
 10719  001B6C  2A64               	incf	??_CantaPartAlta^0,f,c
 10720  001B6E  D001               	goto	u3718
 10721  001B70                     u3700:
 10722  001B70  6A64               	clrf	??_CantaPartAlta^0,c
 10723  001B72                     u3718:
 10724  001B72  D81B               	call	PL76	;call to abstracted procedure
 10725  001B74  0BFB               	andlw	-5
 10726  001B76  1864               	xorwf	??_CantaPartAlta^0,w,c
 10727  001B78  6E8B               	movwf	139,c	;volatile
 10728                           
 10729                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10730  001B7A  AA65               	btfss	CantaPartAlta@c^0,5,c
 10731  001B7C  D003               	goto	u3720
 10732  001B7E  6A64               	clrf	??_CantaPartAlta^0,c
 10733  001B80  2A64               	incf	??_CantaPartAlta^0,f,c
 10734  001B82  D001               	goto	u3738
 10735  001B84                     u3720:
 10736  001B84  6A64               	clrf	??_CantaPartAlta^0,c
 10737  001B86                     u3738:
 10738  001B86  4664               	rlncf	??_CantaPartAlta^0,f,c
 10739  001B88  508B               	movf	139,w,c	;volatile
 10740  001B8A  1864               	xorwf	??_CantaPartAlta^0,w,c
 10741  001B8C  0BFD               	andlw	-3
 10742  001B8E  1864               	xorwf	??_CantaPartAlta^0,w,c
 10743  001B90  6E8B               	movwf	139,c	;volatile
 10744                           
 10745                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10746  001B92  A865               	btfss	CantaPartAlta@c^0,4,c
 10747  001B94  D003               	goto	u3740
 10748  001B96  6A64               	clrf	??_CantaPartAlta^0,c
 10749  001B98  2A64               	incf	??_CantaPartAlta^0,f,c
 10750  001B9A  D001               	goto	u3758
 10751  001B9C                     u3740:
 10752  001B9C  6A64               	clrf	??_CantaPartAlta^0,c
 10753  001B9E                     u3758:
 10754  001B9E  508B               	movf	139,w,c	;volatile
 10755  001BA0  1864               	xorwf	??_CantaPartAlta^0,w,c
 10756  001BA2  0BFE               	andlw	-2
 10757  001BA4  1864               	xorwf	??_CantaPartAlta^0,w,c
 10758  001BA6  6E8B               	movwf	139,c	;volatile
 10759  001BA8  0012               	return		;funcret
 10760  001BAA                     __end_of_CantaPartAlta:
 10761                           	callstack 0
 10762  001BAA                     PL76:
 10763                           	callstack 24
 10764  001BAA  4664               	rlncf	??_CantaPartAlta^0,f,c
 10765  001BAC  4664               	rlncf	??_CantaPartAlta^0,f,c
 10766  001BAE  508B               	movf	139,w,c	;volatile
 10767  001BB0  1864               	xorwf	??_CantaPartAlta^0,w,c
 10768  001BB2  0012               	return	
 10769  001BB4                     __end_ofPL76:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _Espera *****************
 10773 ;; Defined at:
 10774 ;;		line 147 in file "LcTLCD.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  Timer           1    wreg     unsigned char 
 10777 ;;  ms              2   12[COMRAM] int 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  Timer           1   15[COMRAM] unsigned char 
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  1    wreg      void 
 10782 ;; Registers used:
 10783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMRAM   BANK0   BANK1
 10789 ;;      Params:         2       0       0
 10790 ;;      Locals:         1       0       0
 10791 ;;      Temps:          1       0       0
 10792 ;;      Totals:         4       0       0
 10793 ;;Total ram usage:        4 bytes
 10794 ;; Hardware stack levels used: 1
 10795 ;; Hardware stack levels required when called: 3
 10796 ;; This function calls:
 10797 ;;		_TiGetTics
 10798 ;;		_TiResetTics
 10799 ;; This function is called by:
 10800 ;;		_LcInit
 10801 ;;		_LcClear
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text88
 10806  001F02                     __ptext88:
 10807                           	callstack 0
 10808  001F02                     _Espera:
 10809                           	callstack 25
 10810                           
 10811                           ;incstack = 0
 10812                           ;Espera@Timer stored from wreg
 10813  001F02  6E6E               	movwf	Espera@Timer^0,c
 10814                           
 10815                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10816  001F04  506E               	movf	Espera@Timer^0,w,c
 10817  001F06  ECBD  F00F         	call	_TiResetTics
 10818  001F0A                     l4401:
 10819  001F0A  506E               	movf	Espera@Timer^0,w,c
 10820  001F0C  EC15  F00F         	call	_TiGetTics
 10821  001F10  506B               	movf	Espera@ms^0,w,c
 10822  001F12  5C64               	subwf	?_TiGetTics^0,w,c
 10823  001F14  5065               	movf	(?_TiGetTics+1)^0,w,c
 10824  001F16  0A80               	xorlw	128
 10825  001F18  6E6D               	movwf	??_Espera^0,c
 10826  001F1A  506C               	movf	(Espera@ms+1)^0,w,c
 10827  001F1C  0A80               	xorlw	128
 10828  001F1E  586D               	subwfb	??_Espera^0,w,c
 10829  001F20  E3F4               	bnc	l4401
 10830  001F22  0012               	return		;funcret
 10831  001F24                     __end_of_Espera:
 10832                           	callstack 0
 10833                           
 10834 ;; *************** function _TiResetTics *****************
 10835 ;; Defined at:
 10836 ;;		line 55 in file "TiTTimer.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  Handle          1    wreg     unsigned char 
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;  Handle          1    5[COMRAM] unsigned char 
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1
 10850 ;;      Params:         0       0       0
 10851 ;;      Locals:         1       0       0
 10852 ;;      Temps:          0       0       0
 10853 ;;      Totals:         1       0       0
 10854 ;;Total ram usage:        1 bytes
 10855 ;; Hardware stack levels used: 1
 10856 ;; Hardware stack levels required when called: 2
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_Espera
 10861 ;;		_WaitForBusy
 10862 ;;		_SMotor
 10863 ;;		_TeTeclat
 10864 ;;		_menu
 10865 ;;		_motorAltaveu
 10866 ;;		_GLCDMotor
 10867 ;;		_motorHora
 10868 ;;		_motorSIO
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text89
 10873  001F7A                     __ptext89:
 10874                           	callstack 0
 10875  001F7A                     _TiResetTics:
 10876                           	callstack 27
 10877                           
 10878                           ;incstack = 0
 10879                           ;TiResetTics@Handle stored from wreg
 10880  001F7A  6E64               	movwf	TiResetTics@Handle^0,c
 10881                           
 10882                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10883  001F7C  5064               	movf	TiResetTics@Handle^0,w,c
 10884  001F7E  D805               	call	PL30	;call to abstracted procedure
 10885  001F80  C009  FFDE         	movff	_h_Tics,postinc2
 10886  001F84  C00A  FFDD         	movff	_h_Tics+1,postdec2
 10887  001F88  0012               	return		;funcret
 10888  001F8A                     __end_of_TiResetTics:
 10889                           	callstack 0
 10890  001F8A                     PL30:
 10891                           	callstack 24
 10892  001F8A  0D03               	mullw	3
 10893  001F8C  50F3               	movf	243,w,c
 10894  001F8E  0F80               	addlw	low _s_Timers
 10895  001F90  6ED9               	movwf	fsr2l,c
 10896  001F92  6ADA               	clrf	fsr2h,c
 10897  001F94  0012               	return	
 10898  001F96                     __end_ofPL30:
 10899                           	callstack 0
 10900                           
 10901 ;; *************** function _TiGetTics *****************
 10902 ;; Defined at:
 10903 ;;		line 61 in file "TiTTimer.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  Handle          1    wreg     unsigned char 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  Handle          1    9[COMRAM] unsigned char 
 10908 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  2    5[COMRAM] int 
 10911 ;; Registers used:
 10912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMRAM   BANK0   BANK1
 10918 ;;      Params:         2       0       0
 10919 ;;      Locals:         3       0       0
 10920 ;;      Temps:          2       0       0
 10921 ;;      Totals:         7       0       0
 10922 ;;Total ram usage:        7 bytes
 10923 ;; Hardware stack levels used: 1
 10924 ;; Hardware stack levels required when called: 2
 10925 ;; This function calls:
 10926 ;;		Nothing
 10927 ;; This function is called by:
 10928 ;;		_Espera
 10929 ;;		_WaitForBusy
 10930 ;;		_SMotor
 10931 ;;		_TeTeclat
 10932 ;;		_menu
 10933 ;;		_motorAltaveu
 10934 ;;		_GLCDMotor
 10935 ;;		_motorHora
 10936 ;;		_motorSIO
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text90
 10941  001E2A                     __ptext90:
 10942                           	callstack 0
 10943  001E2A                     _TiGetTics:
 10944                           	callstack 27
 10945                           
 10946                           ;incstack = 0
 10947                           ;TiGetTics@Handle stored from wreg
 10948  001E2A  6E68               	movwf	TiGetTics@Handle^0,c
 10949                           
 10950                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10951  001E2C  C009  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10952  001E30  C00A  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10953                           
 10954                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10955  001E34  5068               	movf	TiGetTics@Handle^0,w,c
 10956  001E36  ECC5  F00F         	call	PL30	;call to abstracted procedure
 10957  001E3A  CFDE F066          	movff	postinc2,??_TiGetTics
 10958  001E3E  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10959  001E42  5066               	movf	??_TiGetTics^0,w,c
 10960  001E44  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10961  001E46  6E64               	movwf	?_TiGetTics^0,c
 10962  001E48  5067               	movf	(??_TiGetTics+1)^0,w,c
 10963  001E4A  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10964  001E4C  6E65               	movwf	(?_TiGetTics+1)^0,c
 10965  001E4E  0012               	return		;funcret
 10966  001E50                     __end_of_TiGetTics:
 10967                           	callstack 0
 10968                           
 10969 ;; *************** function _GLCDInit *****************
 10970 ;; Defined at:
 10971 ;;		line 26 in file "GestioLCD.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;		None
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;		None
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  1    wreg      void 
 10978 ;; Registers used:
 10979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMRAM   BANK0   BANK1
 10985 ;;      Params:         0       0       0
 10986 ;;      Locals:         0       0       0
 10987 ;;      Temps:          0       0       0
 10988 ;;      Totals:         0       0       0
 10989 ;;Total ram usage:        0 bytes
 10990 ;; Hardware stack levels used: 1
 10991 ;; Hardware stack levels required when called: 3
 10992 ;; This function calls:
 10993 ;;		_TiGetTimer
 10994 ;; This function is called by:
 10995 ;;		_main
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text91
 11000  00018E                     __ptext91:
 11001                           	callstack 0
 11002  00018E                     _GLCDInit:
 11003                           	callstack 27
 11004                           
 11005                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 11006                           
 11007                           ;incstack = 0
 11008  00018E  ECD8  F00E         	call	_TiGetTimer	;wreg free
 11009  000192  6E22               	movwf	_timerGLCD^0,c
 11010  000194  0012               	return		;funcret
 11011  000196                     __end_of_GLCDInit:
 11012                           	callstack 0
 11013                           
 11014 ;; *************** function _TiGetTimer *****************
 11015 ;; Defined at:
 11016 ;;		line 70 in file "TiTTimer.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;		None
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      unsigned char 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1
 11030 ;;      Params:         0       0       0
 11031 ;;      Locals:         0       0       0
 11032 ;;      Temps:          1       0       0
 11033 ;;      Totals:         1       0       0
 11034 ;;Total ram usage:        1 bytes
 11035 ;; Hardware stack levels used: 1
 11036 ;; Hardware stack levels required when called: 2
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_LcInit
 11041 ;;		_Sinit
 11042 ;;		_TeInit
 11043 ;;		_Minit
 11044 ;;		_initAltaveu
 11045 ;;		_GLCDInit
 11046 ;;		_initHora
 11047 ;;		_initSIO
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text92
 11052  001DB0                     __ptext92:
 11053                           	callstack 0
 11054  001DB0                     _TiGetTimer:
 11055                           	callstack 27
 11056                           
 11057                           ;TiTTimer.c: 74:     counter=0;
 11058                           
 11059                           ;incstack = 0
 11060  001DB0  6A34               	clrf	_counter^0,c
 11061                           
 11062                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11063  001DB2  D005               	goto	l4463
 11064  001DB4                     l4455:
 11065                           
 11066                           ;TiTTimer.c: 76:         counter++;
 11067  001DB4  2A34               	incf	_counter^0,f,c
 11068                           
 11069                           ;TiTTimer.c: 77:  if (counter == 9) return -1;
 11070  001DB6  0E09               	movlw	9
 11071  001DB8  1834               	xorwf	_counter^0,w,c
 11072  001DBA  E101               	bnz	l4463
 11073  001DBC  0CFF               	retlw	255
 11074  001DBE                     l4463:
 11075                           
 11076                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11077  001DBE  D807               	call	PL18	;call to abstracted procedure
 11078  001DC0  04DE               	decf	postinc2,w,c
 11079  001DC2  E0F8               	bz	l4455
 11080                           
 11081                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 11082  001DC4  D804               	call	PL18	;call to abstracted procedure
 11083  001DC6  0E01               	movlw	1
 11084  001DC8  6EDF               	movwf	indf2,c
 11085                           
 11086                           ;TiTTimer.c: 80:     return (counter);
 11087  001DCA  5034               	movf	_counter^0,w,c
 11088  001DCC  0012               	return		;funcret
 11089  001DCE                     __end_of_TiGetTimer:
 11090                           	callstack 0
 11091  001DCE                     PL18:
 11092                           	callstack 28
 11093  001DCE  5034               	movf	_counter^0,w,c
 11094  001DD0  0D03               	mullw	3
 11095  001DD2  50F3               	movf	243,w,c
 11096  001DD4  0F82               	addlw	low (_s_Timers+2)
 11097  001DD6  6ED9               	movwf	fsr2l,c
 11098  001DD8  6ADA               	clrf	fsr2h,c
 11099  001DDA  0012               	return	
 11100  001DDC                     __end_ofPL18:
 11101                           	callstack 0
 11102                           
 11103 ;; *************** function _CtoA *****************
 11104 ;; Defined at:
 11105 ;;		line 22 in file "CtoA.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1
 11119 ;;      Params:         0       0       0
 11120 ;;      Locals:         0       0       0
 11121 ;;      Temps:          0       0       0
 11122 ;;      Totals:         0       0       0
 11123 ;;Total ram usage:        0 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 2
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_main
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text93
 11134  001EBC                     __ptext93:
 11135                           	callstack 0
 11136  001EBC                     _CtoA:
 11137                           	callstack 28
 11138                           
 11139                           ;CtoA.c: 23:     if (convertir != 250) {
 11140                           
 11141                           ;incstack = 0
 11142  001EBC  0EFA               	movlw	250
 11143  001EBE  1847               	xorwf	_convertir^0,w,c
 11144  001EC0  B4D8               	btfsc	status,2,c
 11145  001EC2  0012               	return	
 11146                           
 11147                           ;CtoA.c: 24:         if (convertir != 0){
 11148  001EC4  5047               	movf	_convertir^0,w,c
 11149  001EC6  E009               	bz	l3791
 11150                           
 11151                           ;CtoA.c: 25:             stringScore[1]++;
 11152  001EC8  2A5D               	incf	(_stringScore+1)^0,f,c
 11153                           
 11154                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 11155  001ECA  0E3A               	movlw	58
 11156  001ECC  185D               	xorwf	(_stringScore+1)^0,w,c
 11157  001ECE  E103               	bnz	l3789
 11158                           
 11159                           ;CtoA.c: 27:                 stringScore[1] = '0';
 11160  001ED0  0E30               	movlw	48
 11161  001ED2  6E5D               	movwf	(_stringScore+1)^0,c
 11162                           
 11163                           ;CtoA.c: 28:                 stringScore[0]++;
 11164  001ED4  2A5C               	incf	_stringScore^0,f,c
 11165  001ED6                     l3789:
 11166                           
 11167                           ;CtoA.c: 30:             convertir--;
 11168  001ED6  0647               	decf	_convertir^0,f,c
 11169                           
 11170                           ;CtoA.c: 31:         } else {
 11171  001ED8  0012               	return	
 11172  001EDA                     l3791:
 11173                           
 11174                           ;CtoA.c: 32:             convertir = 250;
 11175  001EDA  0EFA               	movlw	250
 11176  001EDC  6E47               	movwf	_convertir^0,c
 11177  001EDE  0CFA               	retlw	250	;funcret
 11178  001EE0                     __end_of_CtoA:
 11179                           	callstack 0
 11180                           
 11181 ;; *************** function _high_rsi *****************
 11182 ;; Defined at:
 11183 ;;		line 20 in file "main.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1
 11197 ;;      Params:         0       0       0
 11198 ;;      Locals:         0       0       0
 11199 ;;      Temps:          4       0       0
 11200 ;;      Totals:         4       0       0
 11201 ;;Total ram usage:        4 bytes
 11202 ;; Hardware stack levels used: 1
 11203 ;; Hardware stack levels required when called: 1
 11204 ;; This function calls:
 11205 ;;		__TiRSITimer
 11206 ;; This function is called by:
 11207 ;;		Interrupt level 2
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	intcode
 11212  000008                     __pintcode:
 11213                           	callstack 0
 11214  000008                     _high_rsi:
 11215                           	callstack 24
 11216                           
 11217                           ;incstack = 0
 11218  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11219  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 11220  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 11221  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 11222  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 11223  00001A  EC26  F00E         	call	__TiRSITimer	;wreg free
 11224  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 11225  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 11226  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 11227  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 11228  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11229  000030  0011               	retfie		f
 11230  000032                     __end_of_high_rsi:
 11231                           	callstack 0
 11232                           
 11233 ;; *************** function __TiRSITimer *****************
 11234 ;; Defined at:
 11235 ;;		line 37 in file "TiTTimer.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;		None
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;		None
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1
 11249 ;;      Params:         0       0       0
 11250 ;;      Locals:         0       0       0
 11251 ;;      Temps:          1       0       0
 11252 ;;      Totals:         1       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_high_rsi
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text95
 11263  001C4C                     __ptext95:
 11264                           	callstack 0
 11265  001C4C                     __TiRSITimer:
 11266                           	callstack 0
 11267                           
 11268                           ;TiTTimer.c: 39:     TMR0H = 223;
 11269                           
 11270                           ;incstack = 0
 11271                           
 11272                           ;TiTTimer.c: 40:     TMR0L = 148;
 11273  001C4C  D81E               	call	PL66	;call to abstracted procedure
 11274                           
 11275                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11276  001C4E  94F2               	bcf	242,2,c	;volatile
 11277                           
 11278                           ;TiTTimer.c: 42:     h_Tics++;
 11279  001C50  4A09               	infsnz	_h_Tics^0,f,c
 11280  001C52  2A0A               	incf	(_h_Tics+1)^0,f,c
 11281                           
 11282                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11283  001C54  0E48               	movlw	72
 11284  001C56  5C09               	subwf	_h_Tics^0,w,c
 11285  001C58  0EEE               	movlw	238
 11286  001C5A  580A               	subwfb	(_h_Tics+1)^0,w,c
 11287  001C5C  A0D8               	btfss	status,0,c
 11288  001C5E  0012               	return	
 11289                           
 11290                           ;TiTTimer.c: 46:         for (counter=0;counter<9;counter++){
 11291  001C60  6A34               	clrf	_counter^0,c
 11292  001C62                     i2l4761:
 11293  001C62  0E08               	movlw	8
 11294  001C64  6434               	cpfsgt	_counter^0,c
 11295  001C66  D001               	goto	i2l4765
 11296  001C68  D00D               	goto	i2l370
 11297  001C6A                     i2l4765:
 11298                           
 11299                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11300  001C6A  ECE7  F00E         	call	PL18	;call to abstracted procedure
 11301  001C6E  04DE               	decf	postinc2,w,c
 11302  001C70  E107               	bnz	i2l4769
 11303                           
 11304                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11305  001C72  5034               	movf	_counter^0,w,c
 11306  001C74  ECC5  F00F         	call	PL30	;call to abstracted procedure
 11307  001C78  5009               	movf	_h_Tics^0,w,c
 11308  001C7A  5EDE               	subwf	postinc2,f,c
 11309  001C7C  500A               	movf	(_h_Tics+1)^0,w,c
 11310  001C7E  5ADD               	subwfb	postdec2,f,c
 11311  001C80                     i2l4769:
 11312                           
 11313                           ;TiTTimer.c: 50:         }
 11314  001C80  2A34               	incf	_counter^0,f,c
 11315  001C82  D7EF               	goto	i2l4761
 11316  001C84                     i2l370:
 11317                           
 11318                           ;TiTTimer.c: 51:         h_Tics=0;
 11319  001C84  6A09               	clrf	_h_Tics^0,c
 11320  001C86  6A0A               	clrf	(_h_Tics+1)^0,c
 11321  001C88  0012               	return		;funcret
 11322  001C8A                     __end_of__TiRSITimer:
 11323                           	callstack 0
 11324  001C8A                     PL66:
 11325                           	callstack 28
 11326  001C8A  0EDF               	movlw	223
 11327  001C8C  6ED7               	movwf	215,c	;volatile
 11328  001C8E  0E94               	movlw	148
 11329  001C90  6ED6               	movwf	214,c	;volatile
 11330  001C92  0C94               	retlw	148
 11331  001C94                     __end_ofPL66:
 11332                           	callstack 0
 11333                           
 11334                           	psect	rparam
 11335  0000                     
 11336                           	psect	temp
 11337  000078                     btemp:
 11338                           	callstack 0
 11339  000078                     	ds	1
 11340  0000                     int$flags	set	btemp
 11341  0000                     wtemp8	set	btemp+1
 11342  0000                     ttemp5	set	btemp+1
 11343  0000                     ttemp6	set	btemp+4
 11344  0000                     ttemp7	set	btemp+8
 11345                           
 11346                           	psect	idloc
 11347                           
 11348                           ;Config register IDLOC0 @ 0x200000
 11349                           ;	unspecified, using default values
 11350  200000                     	org	2097152
 11351  200000  FF                 	db	255
 11352                           
 11353                           ;Config register IDLOC1 @ 0x200001
 11354                           ;	unspecified, using default values
 11355  200001                     	org	2097153
 11356  200001  FF                 	db	255
 11357                           
 11358                           ;Config register IDLOC2 @ 0x200002
 11359                           ;	unspecified, using default values
 11360  200002                     	org	2097154
 11361  200002  FF                 	db	255
 11362                           
 11363                           ;Config register IDLOC3 @ 0x200003
 11364                           ;	unspecified, using default values
 11365  200003                     	org	2097155
 11366  200003  FF                 	db	255
 11367                           
 11368                           ;Config register IDLOC4 @ 0x200004
 11369                           ;	unspecified, using default values
 11370  200004                     	org	2097156
 11371  200004  FF                 	db	255
 11372                           
 11373                           ;Config register IDLOC5 @ 0x200005
 11374                           ;	unspecified, using default values
 11375  200005                     	org	2097157
 11376  200005  FF                 	db	255
 11377                           
 11378                           ;Config register IDLOC6 @ 0x200006
 11379                           ;	unspecified, using default values
 11380  200006                     	org	2097158
 11381  200006  FF                 	db	255
 11382                           
 11383                           ;Config register IDLOC7 @ 0x200007
 11384                           ;	unspecified, using default values
 11385  200007                     	org	2097159
 11386  200007  FF                 	db	255
 11387                           
 11388                           	psect	config
 11389                           
 11390                           ; Padding undefined space
 11391  300000                     	org	3145728
 11392  300000  FF                 	db	255
 11393                           
 11394                           ;Config register CONFIG1H @ 0x300001
 11395                           ;	Oscillator
 11396                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11397                           ;	Fail-Safe Clock Monitor Enable bit
 11398                           ;	FCMEN = 0x0, unprogrammed default
 11399                           ;	Internal/External Oscillator Switchover bit
 11400                           ;	IESO = 0x0, unprogrammed default
 11401  300001                     	org	3145729
 11402  300001  06                 	db	6
 11403                           
 11404                           ;Config register CONFIG2L @ 0x300002
 11405                           ;	unspecified, using default values
 11406                           ;	Power-up Timer Enable bit
 11407                           ;	PWRT = 0x1, unprogrammed default
 11408                           ;	Brown-out Reset Enable bits
 11409                           ;	BOR = 0x3, unprogrammed default
 11410                           ;	Brown-out Reset Voltage bits
 11411                           ;	BORV = 0x3, unprogrammed default
 11412  300002                     	org	3145730
 11413  300002  1F                 	db	31
 11414                           
 11415                           ;Config register CONFIG2H @ 0x300003
 11416                           ;	Watchdog Timer Enable bit
 11417                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11418                           ;	Watchdog Timer Postscale Select bits
 11419                           ;	WDTPS = 0xF, unprogrammed default
 11420  300003                     	org	3145731
 11421  300003  1E                 	db	30
 11422                           
 11423                           ; Padding undefined space
 11424  300004                     	org	3145732
 11425  300004  FF                 	db	255
 11426                           
 11427                           ;Config register CONFIG3H @ 0x300005
 11428                           ;	CCP2 MUX bit
 11429                           ;	CCP2MX = 0x1, unprogrammed default
 11430                           ;	PORTB A/D Enable bit
 11431                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11432                           ;	Low-Power Timer1 Oscillator Enable bit
 11433                           ;	LPT1OSC = 0x0, unprogrammed default
 11434                           ;	MCLR Pin Enable bit
 11435                           ;	MCLRE = 0x1, unprogrammed default
 11436  300005                     	org	3145733
 11437  300005  81                 	db	129
 11438                           
 11439                           ;Config register CONFIG4L @ 0x300006
 11440                           ;	Stack Full/Underflow Reset Enable bit
 11441                           ;	STVREN = 0x1, unprogrammed default
 11442                           ;	Single-Supply ICSP Enable bit
 11443                           ;	LVP = OFF, Single-Supply ICSP disabled
 11444                           ;	Boot Block Size Select bits
 11445                           ;	BBSIZ = 0x0, unprogrammed default
 11446                           ;	Extended Instruction Set Enable bit
 11447                           ;	XINST = 0x0, unprogrammed default
 11448                           ;	Background Debugger Enable bit
 11449                           ;	DEBUG = 0x1, unprogrammed default
 11450  300006                     	org	3145734
 11451  300006  81                 	db	129
 11452                           
 11453                           ; Padding undefined space
 11454  300007                     	org	3145735
 11455  300007  FF                 	db	255
 11456                           
 11457                           ;Config register CONFIG5L @ 0x300008
 11458                           ;	unspecified, using default values
 11459                           ;	Code Protection bit
 11460                           ;	CP0 = 0x1, unprogrammed default
 11461                           ;	Code Protection bit
 11462                           ;	CP1 = 0x1, unprogrammed default
 11463  300008                     	org	3145736
 11464  300008  03                 	db	3
 11465                           
 11466                           ;Config register CONFIG5H @ 0x300009
 11467                           ;	unspecified, using default values
 11468                           ;	Boot Block Code Protection bitProtect Boot
 11469                           ;	CPB = 0x1, unprogrammed default
 11470                           ;	Data EEPROM Code Protection bit
 11471                           ;	CPD = 0x1, unprogrammed default
 11472  300009                     	org	3145737
 11473  300009  C0                 	db	192
 11474                           
 11475                           ;Config register CONFIG6L @ 0x30000A
 11476                           ;	unspecified, using default values
 11477                           ;	Write Protection bit
 11478                           ;	WRT0 = 0x1, unprogrammed default
 11479                           ;	Write Protection bit
 11480                           ;	WRT1 = 0x1, unprogrammed default
 11481  30000A                     	org	3145738
 11482  30000A  03                 	db	3
 11483                           
 11484                           ;Config register CONFIG6H @ 0x30000B
 11485                           ;	unspecified, using default values
 11486                           ;	Configuration Register Write Protection bit
 11487                           ;	WRTC = 0x1, unprogrammed default
 11488                           ;	Boot Block Write Protection bit
 11489                           ;	WRTB = 0x1, unprogrammed default
 11490                           ;	Data EEPROM Write Protection bit
 11491                           ;	WRTD = 0x1, unprogrammed default
 11492  30000B                     	org	3145739
 11493  30000B  E0                 	db	224
 11494                           
 11495                           ;Config register CONFIG7L @ 0x30000C
 11496                           ;	unspecified, using default values
 11497                           ;	Table Read Protection bit
 11498                           ;	EBTR0 = 0x1, unprogrammed default
 11499                           ;	Table Read Protection bit
 11500                           ;	EBTR1 = 0x1, unprogrammed default
 11501  30000C                     	org	3145740
 11502  30000C  03                 	db	3
 11503                           
 11504                           ;Config register CONFIG7H @ 0x30000D
 11505                           ;	unspecified, using default values
 11506                           ;	Boot Block Table Read Protection bit
 11507                           ;	EBTRB = 0x1, unprogrammed default
 11508  30000D                     	org	3145741
 11509  30000D  40                 	db	64
 11510                           tosu	equ	0xFFF
 11511                           tosh	equ	0xFFE
 11512                           tosl	equ	0xFFD
 11513                           stkptr	equ	0xFFC
 11514                           pclatu	equ	0xFFB
 11515                           pclath	equ	0xFFA
 11516                           pcl	equ	0xFF9
 11517                           tblptru	equ	0xFF8
 11518                           tblptrh	equ	0xFF7
 11519                           tblptrl	equ	0xFF6
 11520                           tablat	equ	0xFF5
 11521                           prodh	equ	0xFF4
 11522                           prodl	equ	0xFF3
 11523                           indf0	equ	0xFEF
 11524                           postinc0	equ	0xFEE
 11525                           postdec0	equ	0xFED
 11526                           preinc0	equ	0xFEC
 11527                           plusw0	equ	0xFEB
 11528                           fsr0h	equ	0xFEA
 11529                           fsr0l	equ	0xFE9
 11530                           wreg	equ	0xFE8
 11531                           indf1	equ	0xFE7
 11532                           postinc1	equ	0xFE6
 11533                           postdec1	equ	0xFE5
 11534                           preinc1	equ	0xFE4
 11535                           plusw1	equ	0xFE3
 11536                           fsr1h	equ	0xFE2
 11537                           fsr1l	equ	0xFE1
 11538                           bsr	equ	0xFE0
 11539                           indf2	equ	0xFDF
 11540                           postinc2	equ	0xFDE
 11541                           postdec2	equ	0xFDD
 11542                           preinc2	equ	0xFDC
 11543                           plusw2	equ	0xFDB
 11544                           fsr2h	equ	0xFDA
 11545                           fsr2l	equ	0xFD9
 11546                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    157
    Data        53
    BSS         275
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5      95
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40265
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     916
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      5F       4       74.2%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       7        0.0%
DATA                 0      0     166       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 10 12:19:14 2022

               TiResetTics@Handle 0064                  _loginNOTRegister 03B8  
                               _i 002A                                 _j 0029  
                              PL2 0FC8                                PL4 0FD6  
                              PL6 1548                                PL8 0FDE  
                              l55 1D8A                  UgetUserName@quin 0066  
       ??_UcheckExistsNotFinished 0064         __size_of_llegirCharEEPROM 0010  
                             PL10 0A24                               PL20 123C  
                             PL12 0FE8                               PL30 1F8A  
                             PL22 1258                               PL14 1552  
                             PL40 1618                               PL32 0A30  
                             PL24 18F0                               PL16 122E  
                             PL50 0A4A                               PL42 1626  
                             PL34 1D30                               PL26 1266  
                             PL18 1DCE                               PL60 0D50  
                             PL52 0D38                               PL44 19F0  
                             PL36 0A3A                               PL28 0D2C  
                             PL70 1634                               PL62 0042  
                             PL54 0D44                               PL46 0A40  
                             PL38 1BEA                               PL80 1CC8  
                             PL72 1EF8                               PL64 0D5A  
                             PL56 1CBE                               PL48 1BF8  
                             PL90 0A56                               PL82 1D3E  
                             PL74 17C8                               PL66 1C8A  
                             PL58 1278                               PL92 0A5C  
                             PL84 1424                               PL76 1BAA  
                             PL68 19FE                               PL94 0A62  
                             PL86 1B44                               PL78 0FF2  
                             PL96 0A6A                               PL88 1C44  
          __end_of_compareStrings 1CBE                               l511 033E  
                             l541 048E                               l607 071A  
                             l538 046C                               l539 047C  
                             l724 1E20                               l736 159E  
                             l770 101C                               l772 1036  
                             l862 1878                               l943 0DBC  
                             l775 1066                               l767 0FFE  
                             l776 105C                               l768 1010  
                             l955 0E24                               l973 0F14  
                             l975 0F3A                               l799 1154  
                             u310 19E0                               u250 199E  
                             u308 19CA                               u270 19B4  
                             u328 19E2                               u290 19C8  
                             u268 19A0                               u288 19B6  
                             _pos 002F                               _tmp 0033  
                ??_CantaPartBaixa 0064                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0053                __size_of_GLCDMotor 0264  
                            l1020 16FE                              l1012 1640  
                            l1021 1696                              l1013 165A  
                            l1022 16B0                              l1015 167C  
                            l1024 16D2                              l1312 0CCE  
                            l1161 17E8                              l1281 0AEC  
                            l1290 0B60                              l1283 0B12  
                            l2413 00A2                              l5001 0EF2  
                            l3161 1692                              l3209 16EC  
                            l1298 0BF6                              l3147 1670  
                            l3139 1656                              l2357 00AE  
                            l5031 0F46                              l5023 0F34  
                            l5015 0F1C                              l2383 1E62  
                            l4401 1F0A                              l5041 0F62  
                            l5009 0F08                              l3185 16C6  
                            l3177 16AC                              l2377 1E5A  
                            l5105 185C                              l5201 0B7A  
                            l5113 0A74                              l5035 0F4E  
                            l5051 0F7C                              l6011 10AA  
                            l6003 1098                              l2395 1E72  
                            l5211 0BA8                              l5203 0B80  
                            l5131 0AA2                              l5123 0A90  
                            l5045 0F70                              l2389 1E6A  
                            l5221 0BDE                              l4407 1D8E  
                            l4503 1C3E                              l3199 16E8  
                            l6111 11CC                              l6023 10CA  
                            l6007 109C                              l5303 190A  
                            l5071 17F6                              l5231 0C08  
                            l5143 0ABE                       _puntuacions 009B  
                            l4513 0102                              l6041 1100  
                            l5073 17FA                              l5153 0AD4  
                            l5145 0AC4                              l6203 150A  
                            l4443 1CAA                              l6123 11E6  
                            l6027 10D2                              l6131 11F8  
                            l4611 00C6                              l7011 06C2  
                            l7003 06B4                              l5331 194E  
                            l5091 1838                              l5059 17D4  
                            l5139 0AB4                              l6301 135A  
                            l6221 1282                              l6213 151A  
                            l4437 1C96                              l6029 10D8  
                            l4533 00D2                              l5341 1968  
                            l5325 1942                              l4455 1DB4  
                            l4463 1DBE                              l4375 1CE4  
                            l6207 1514                              l6151 1488  
                            l6143 1472                              l6119 11DE  
                            l6055 111C                              l7111 0864  
                            l5319 1936                              l5079 180C  
                            l5263 0C76                              l5255 0C54  
                            l5239 0C28                              l4705 172E  
                            l6321 1390                              l6145 1476  
                            l6057 1126                              l6049 1112  
                            l7113 086A                              l7041 0734  
                            l7033 071C                              l7025 06F4  
                            l7017 06D0                              l5353 197A  
                            l5097 184E                              l5265 0C7C  
                            l5249 0C4A                              l5193 0B5A  
                            l6171 14B4                              l6139 1466  
                            l4811 157A                              l6067 1152  
                            l6075 115E                              l6059 112A  
                            l4547 1E94                              l7123 08AE  
                            l7051 078E                              l7035 0722  
                            l4397 1D0A                              l6333 13B2  
                            l6317 138C                              l6309 1374  
                            l6253 12E0                              l6245 12C2  
                            l6229 1296                              l6173 14B8  
                            l6165 14A6                              l6149 1482  
                            l6093 118E                              l7053 0794  
                            l7045 074C                              l5349 1976  
                            l3791 1EDA                              l4495 1C2A  
                            l4911 0DF6                              l6263 1302  
                            l6183 14D2                              l6159 1498  
                            l4671 1D56                              l6087 117C  
                            l6079 116C                              l7151 0916  
                            l7135 08DE                              l7063 07BA  
                            l5287 0CD0                              l5279 0CA2  
                            l5295 0CDC                              l4497 1C30  
                            l6353 13DE                              l6193 14F4  
                            l4841 15BA                              l6097 1196  
                            l4585 00BA                              l7161 092A  
                            l7145 08F2                              l7137 08E4  
                            l7057 07AE                              l6347 13D2  
                            l6339 13BC                              l6283 132A  
                            l6275 1314                              l6187 14DC  
                            l6179 14C6                              l4683 1D70  
                            l4675 1D5C                              l4851 15DC  
                            l4819 158C                              l6099 119C  
                            l7091 07FC                              l7067 07C4  
                            l3789 1ED6                              l4925 0E14  
                            l6357 13E6                              l4781 1DF2  
                            l4853 15E8                              l4829 15A0  
                            l7077 07DC                              l7069 07CA  
                            l6701 03CA                              l4919 0E02  
                            l6199 1502                              l4687 1D78  
                            l7087 07F4                              l7079 07E2  
                            l6623 02F2                              l4961 0E5E  
                            l6297 134C                              l6289 133C  
                            l6377 13F6                              l4785 1DFA  
                            l4857 15F0                              l7097 0828  
                            l7169 0936                              l7193 1AB6  
                            l4971 0E84                              l4955 0E4C  
                            l4891 0DB0                              l4883 0D9A  
                            l4867 0D66                              l6299 1356  
                            l6731 0420                              l6715 03EE  
                            l6643 032C                              l5923 188E  
                            l4981 0EB4                              l4965 0E6C  
                            l4877 0D8C                              l6813 04DC  
                            l6805 04CE                              l6725 0412  
                            l6717 03F4                              l6645 0332  
                            l6629 0306                              l6743 0430  
                            l6727 0418                              l6639 0326  
                            l5943 18BE                              l5935 18A6  
                            l5927 1896                              l4897 0DC8  
                            l6825 04FE                              l6761 0458  
                            l6673 0388                              l6665 0370  
                            l6657 0354                              l5929 189A  
                            l4987 0EC4                              l6771 0478  
                            l6683 03AC                              l6675 038E  
                            l5955 18D6                              l5981 1030  
                            l5973 1016                              l6853 0542  
                            l6685 03B2                              l5991 1060  
                            l6919 0604                              l6871 056A  
                            l6855 0548                              l6839 0520  
                            l6953 0646                              l6937 0628  
                            l6785 04A6                              l6689 03BA  
                            l5995 106C                              l5979 1028  
                            l5997 1072                              l6981 067A  
                            l6965 0664                              l6885 0592  
                            l6797 04BE                              l6895 05B8  
                            l6887 0598                              l6993 069A  
                            l6969 0668                              l6899 05D0  
                            STR_1 02E7                              STR_2 02E0  
                            STR_3 02C7                              STR_4 02AE  
                            STR_5 029E                              STR_6 02D8  
                            STR_7 02BB                              STR_8 02D0  
                            _LATD 000F8C                              u4040 1D60  
                            u4060 17BE                              u4310 0DFE  
                            u4240 0D96                              u4080 1BC6  
                            u4090 1BDC                              u3700 1B70  
                            u4340 0E1C                              u4087 1BC4  
                            u3720 1B84                              u3800 1B1E  
                            u4097 1BDA                              u3740 1B9C  
                            u3820 1B36                              u6220 1058  
                            u3718 1B72                              u3680 1B5A  
                            u3760 1AF4                              u6400 1188  
                            u4800 0AF8                              u3738 1B86  
                            u3818 1B20                              u7210 0488  
                            u3780 1B0A                              u3758 1B9E  
                            u3838 1B38                              u7230 0496  
                            u7150 043E                              u7080 03D8  
                            u4840 0BBE                              u3698 1B5C  
                            u3778 1AF6                              u3890 1CAE  
                            u7250 049E                              u4940 0C6E  
                            u3798 1B0C                              u6710 12D6  
                            u6470 1438                              u4790 0AF4  
                            u7600 0686                              u4960 0C92  
                            u7610 068C                              u4970 0CB6  
                            u6910 13C2                              u6830 1366  
                            u6478 143A                              u6920 13D8  
                            u6790 1336                              u7750 07B6  
                            u7840 0862                              u7860 087C  
                            _CtoA 1EBC                   ??_SsetNovaTecla 0064  
          __end_of_SIOcheckKrebut 00A6                              _cap1 03B0  
                            _Rows 0040                              _cap2 03AF  
                            _main 1A80                              _mask 000E  
                            _hora 0056                              _menu 02F0  
                            _nota 0026             getArrayShowUsers@quin 0066  
                 __end_of_HJugant 019C                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0078  
                 __end_of_JJuguem 0136                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1EF8  
                            start 0032                   __end_of_CantaIR 1F7A  
                    ?_initAltaveu 005F                      ___param_bank 000000  
                     _stringScore 005C                  __end_of_GLCDInit 0196  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 01BE  
                           ?_CtoA 005F                __size_of_CToAReset 0008  
                     Espera@Timer 006E                             ?_main 005F  
                           ?_menu 005F                   __end_of___lbdiv 1D7C  
                           _EEADR 000FA9                     ??_TiInitTimer 0064  
                           _T0CON 000FD5                   ?_compareStrings 0064  
                           i2l370 1C84                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1BB4                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 005F  
                           _TXREG 000FAD                             _SMSon 019C  
                           _TXSTA 000FAC                       _MNovaLletra 0176  
                           _Minit 017E                  __end_of_HGetTime 01BE  
                           _Sinit 016E                             _Timer 003D  
                           _Uinit 1568                   __end_of_initSIO 0146  
                           _s_ptr 000B                             _score 0010  
                           _nou_s 03BA             __end_of_JoystickMotor 1714  
                 _HActualitzaHora 1E98       __size_of_escriureCharEEPROM 0026  
                  __pbitbssCOMRAM 03A8                             tablat 000FF5  
                     _LcNewString 00EE                     ??_TiResetTics 0064  
                 ?_SIOcheckKrebut 005F                _UshowUsersCalculat 00BE  
                           ttemp5 0079                             ttemp6 007C  
                           ttemp7 0080                             status 000FD8  
                ?_checkHoraAcabat 005F                             wtemp8 0079  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                 ___lbdiv@divisor 0064                  __end_of_LcGotoXY 1DB0  
            CToAConverteix@numero 0064                   ___lbdiv@counter 0066  
                __end_of_LcLliure 0106                     ??__TiRSITimer 005F  
                __end_of_LcScroll 01AE                        _TiGetTimer 1DB0  
         EscriuPrimeraOrdre@ordre 0065                      __end_of_CtoA 1EE0  
                __end_of_JendGame 01EA                       ?_SIOendGame 005F  
                 __initialization 1A08               ?_UshowUsersCalculat 005F  
              __size_of_CantaData 0020                      __end_of_main 1AE8  
          __end_of_HClearNouSegon 01C2                      __end_of_menu 0A24  
         ?_SIOHaAcabatPuntuacions 005F             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005F                 __end_of_GLCDMotor 0FC8  
                __end_of_TeTeclat 1548                     _indexNextUser 002C  
                 _hi_ha_hora_sio2 03A8                            ??_CtoA 0064  
                          ??_main 0075                            ??_menu 00DA  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0018            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001A                  GLCDMotor@length2 0019  
                      _JnovaTecla 011E                  __end_of_UgetTop5 0042  
                          ?_LcLCD 005F                            ?_SMSon 005F  
                    ?_CToAobtenir 0064                            ?_Minit 005F  
            ??_UshowUsersCalculat 0064                            ?_Sinit 005F  
                          ?_Uinit 005F                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1E04  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0064                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0064                __size_of_SiFerMenu 0004  
                       ??_LcClear 0072                         ??_CantaIR 0066  
                          i2l4761 1C62                            i2l4765 1C6A  
                          i2l4769 1C80                    LcGotoXY@Fisics 006D  
                  LcGotoXY@Column 0071                     ??_WaitForBusy 006B  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
                  _sumaPulsacions 003C                 __end_of_CToAReset 013E  
                          _SMSoff 01A2                SIONovaDireccio@num 0064  
                          _LcInit 1714                      _MNouJoystick 0186  
                  _UgetNumUsuaris 01CA                            _SMotor 1280  
             escriureCharEEPROM@c 0065                            _TeInit 0166  
                          _Espera 1F02                      _LcGotoXY$334 006F  
                          _Krebut 03A9    __end_of_SIOHaAcabatPuntuacions 01E2  
                          _RowAct 003F                     ?_miraPassword 005F  
             __end_of_TiResetTics 1F8A                            Uinit@k 006A  
                __end_of_high_rsi 0032                            _h_Tics 0009  
                 ?_HClearNouSegon 005F                         ??___lbdiv 0065  
                   ?_CToAHaAcabat 005F                  __end_of_initHora 014E  
             __end_of__TiRSITimer 1C8A                            _horaTX 0001  
                __end_of_menuList 0292                            clear_0 1A4E  
                          clear_1 1A5A                            clear_2 1A6C  
                          _jugant 03AE                            _segons 0015  
                      _UenviaChar 006C                            isa$std 000001  
                _llegirCharEEPROM 007C                __size_of_UgetScore 000E  
                      UenviaPas@c 0065       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 00B2                         ??_initSIO 0065  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0D2C                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1EBC                 ??_SIONovaDireccio 0064  
                __end_of_motorJoc 1876                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0064  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 1D30                      TeTeclat@cols 0036  
                ___lbdiv@dividend 0065                         ?_GLCDInit 005F  
                   ?_UcheckExists 005F                        __accesstop 0080  
         __end_of__initialization 1A72            __end_of_UgetNumUsuaris 01CE  
               __end_of_LcPutChar 1C44                     _JnovaDireccio 0126  
                JnovaDireccio@dir 0064                     ___rparam_used 000001  
                  ??_miraPassword 0069                     __end_of_LcLCD 1BEA  
                     ?_TiGetTimer 005F                     __end_of_SMSon 01A2  
               SIONovaTecla@tecla 0064                    __pcstackCOMRAM 005F  
                   __end_of_Minit 0186               __end_of_WaitForBusy 1D10  
                   __end_of_Sinit 0176                     __end_of_Uinit 1618  
               __end_of_NoFerMenu 01E6                         ?_HGetTime 0064  
                    __pidataBANK0 1F96                    ??_CToAHaAcabat 0064  
            __size_of_initAltaveu 0008                 __end_of_URegister 01DA  
               __end_of_HnoJugant 01BA                 __end_of_SiFerMenu 01DE  
                      __end_ofPL2 0FD6                        __end_ofPL4 0FDE  
                      __end_ofPL6 1552                        __end_ofPL8 0FE8  
                ___lbdiv@quotient 0067                 __end_of_TiGetTics 1E50  
                     _TiInitTimer 1DDC                       ?_JnovaTecla 005F  
                         ??_LcLCD 0073                           ??_SMSon 0064  
                       ?_LcGotoXY 006C                         ?_LcLliure 005F  
                         ??_Minit 0065                         ?_LcScroll 005F  
                         ??_Sinit 0065                   JnovaTecla@tecla 0064  
                         ??_Uinit 0068              __size_of_init_eusart 0016  
                       ?_JendGame 005F                    ??_UcheckExists 0064  
             MNouJoystick@posicio 0064                        ??_GLCDInit 0065  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 005F  
                     _TiResetTics 1F7A                   ?_UgetNumUsuaris 005F  
                  ?_JnovaDireccio 005F                     ??_UmotorUsers 0069  
               __end_of_UgetScore 009A                     ?_JoystickInit 005F  
                         ?_SMSoff 005F                           ?_LcInit 005F  
                   _CantaPartAlta 1B4E                           ?_SMotor 005F  
                         ?_TeInit 005F                           ?_Espera 006B  
               __end_of_UenviaPas 006C                       __TiRSITimer 1C4C  
             _indexNextUserStruct 002B                         ?_UgetTop5 005F  
               __end_of_UnewScore 2000                        ??_HGetTime 0066  
                   ?_UgetUserName 0064                  ??_compareStrings 0067  
                         _BAUDCON 000FB8                       ?_UenviaChar 0064  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 01CA  
                         LcInit@i 0070                  ?_HActualitzaHora 0064  
                      ??_LcGotoXY 006D                      ?_MNovaLletra 005F  
                      ??_LcLliure 0064                        ??_LcScroll 0067  
                ??_SIOcheckKrebut 0064               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0064  
                         _HJugant 0196                         ?_high_rsi 005F  
                         _JJuguem 012E                           _LcClear 1EE0  
                         _CantaIR 1F5E                      ?_LcNewString 0067  
                  ??_JoystickInit 0064                         ?_initHora 005F  
                      ??_TeTeclat 006B                       _WaitForBusy 1CD2  
                  ?_CantaPartAlta 005F             __end_of_SsetNovaTecla 015E  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A4  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 0064                      ??_SIOendGame 0064  
                       ?_motorSIO 005F                         ?_motorJoc 005F  
                  ??_UgetUserName 0066                 _getArrayShowUsers 1F42  
             __end_of_UmotorUsers 122E          ?_UcheckExistsNotFinished 005F  
                         ___lbdiv 1D48                     ?_motorAltaveu 005F  
                    __psmallconst 0200                ?_getArrayShowUsers 0064  
                         __pcinit 1A08      __end_of_UcheckExistsGetError 01D2  
                         _ferMenu 03B2                        _init_ports 1F24  
                         __ramtop 0200                           __ptext0 1A80  
                         __ptext1 0A72                           __ptext2 1FF6  
                         __ptext3 17D2                           __ptext4 1E50  
                         __ptext5 01AE                           __ptext6 009A  
                         __ptext7 0106                           __ptext8 010E  
                         __ptext9 0116                         _T0CONbits 000FD5  
                       _GLCDMotor 0D64                         CantaIR@IR 0066  
                         _initSIO 013E                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 0064  
             ??_getArrayShowUsers 0066                       UenviaChar@c 0065  
                   ?_SIOEnviaHora 005F              __end_of_miraPassword 1E98  
      __end_of_escriureCharEEPROM 1E2A                  LcNewString@new_s 0067  
                 WaitForBusy@Busy 006B                       Uinit@k_1175 006B  
                    _do_showUsers 03B5                           _userPtr 0007  
               GLCDMostraMenu@num 0064                __end_of_SIOendGame 01B2  
                      ??_high_rsi 0060              __end_of_CToAHaAcabat 01F2  
            end_of_initialization 1A72                           _usuaris 0100  
                   UgetScore@quin 0064                   ??_JnovaDireccio 0064  
                      ??_initHora 0065          __end_of_llegirCharEEPROM 008C  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 0000  
                 TiGetTics@Handle 0068                     _MsetNovaTecla 015E  
             __size_of_UenviaChar 0010                 _conversorJoystick 1E50  
               __end_of_motorHora 198C                  ??_HClearNouSegon 0064  
                      _novaLletra 0051         __end_of_getArrayShowUsers 1F5E  
              ?_conversorJoystick 005F                   _usuariActualSIO 004A  
                      ??_motorSIO 0073                         _CToAReset 0136  
                      ??_motorJoc 0072                   TiGetTics@actual 0069  
                   ?_SIONovaTecla 005F                        GLCDMotor@j 001F  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 0116                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006B          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 002D              __end_of_UcheckExists 01D6  
                   TeTeclat@files 0035               ??_conversorJoystick 0064  
              SIOStartGame@usuari 0064            __size_of_JoystickMotor 00D6  
                   TeTeclat@state 0037                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 005F  
                   ?_SIOStartGame 005F                    ??_SIOEnviaHora 0064  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 00A6  
               UnewScore@scoretmp 0064                    _GLCDMostraMenu 00D6  
       __end_of_conversorJoystick 1E74                   ??_CantaPartAlta 0064  
                  ?_MsetNovaTecla 005F                         _CantaData 1D10  
               __size_of_GLCDInit 0008                       _UmotorUsers 0FFC  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 00D6  
                  __end_of_SMSoff 01A8                      ??_TiGetTimer 0064  
                  __end_of_LcInit 17C8                    ??_SIONovaTecla 0064  
                      ?_CToAReset 005F                    __end_of_SMotor 1424  
            __end_of_teclaPremuda 029E                         _LcPutChar 1C04  
                  __end_of_TeInit 016E                 motorAltaveu@state 0023  
                  __end_of_Espera 1F24                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 19F0                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1FB1                       ?_init_ports 005F  
                       _NoFerMenu 01E2                         _ColumnAct 003E  
            __end_of_JoystickInit 005C                    ??_SIOStartGame 0064  
                       _URegister 01D6                         _HnoJugant 01B6  
                    ?_TiInitTimer 005F                      ??_JnovaTecla 0064  
                       _SiFerMenu 01DA                       __end_ofPL10 0A30  
                     __end_ofPL20 1258                       __end_ofPL12 0FF2  
                     __end_ofPL30 1F96                       __end_ofPL22 1266  
                     __end_ofPL14 1568                       __end_ofPL40 1626  
                     __end_ofPL32 0A3A                       __end_ofPL24 1908  
                     __end_ofPL16 123C                       __end_ofPL50 0A56  
                     __end_ofPL42 1634                       __end_ofPL34 1D3E  
                     __end_ofPL26 1278                       __end_ofPL18 1DDC  
                     __end_ofPL60 0D5A                       __end_ofPL52 0D44  
                     __end_ofPL44 19FE                       __end_ofPL36 0A40  
                     __end_ofPL28 0D38                       __end_ofPL70 163E  
                     __end_ofPL62 004A                       __end_ofPL54 0D50  
                     __end_ofPL46 0A4A                       __end_ofPL38 1BF8  
                     __end_ofPL80 1CD2                       __end_ofPL72 1F02  
                     __end_ofPL64 0D64                       __end_ofPL56 1CC8  
                     __end_ofPL48 1C04                       __end_ofPL90 0A5C  
                     __end_ofPL82 1D48                       __end_ofPL74 17D2  
                     __end_ofPL66 1C94                       __end_ofPL58 1280  
                     __end_ofPL92 0A62                       __end_ofPL84 142E  
                     __end_ofPL76 1BB4                       __end_ofPL68 1A08  
                     __end_ofPL94 0A6A                       __end_ofPL86 1B4E  
                     __end_ofPL78 0FFC                       __end_ofPL96 0A72  
                     __end_ofPL88 1C4C               start_initialization 1A08  
                       _TiGetTics 1E2A            __end_of_GLCDMostraMenu 00E2  
                      ?_HNouSegon 005F                  ??_UgetNumUsuaris 0064  
                UmotorUsers@state 0027                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1FF6                __end_of_TiGetTimer 1DCE  
                   JJuguem@usuari 0064              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 163E                 __size_of_JendGame 0004  
                    ?_TiResetTics 005F                        ?_CantaData 005F  
            _UcheckExistsGetError 01CE           __end_of_SIONovaDireccio 011E  
            __size_of_LcNewString 000C                          ??_SMSoff 0064  
                        ??_LcInit 006F                         _NovaTecla 0052  
               __size_of_TeTeclat 011A                          ??_SMotor 006B  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 0065  
                    ?__TiRSITimer 005F                     ??_initAltaveu 0065  
                        ??_Espera 006D                         _UgetScore 008C  
              __end_of_JnovaTecla 0126                        ?_LcPutChar 005F  
                       _UenviaPas 005C                 __size_of_UgetTop5 000C  
                     __pdataBANK0 00BF                    motorHora@state 0014  
                    _menuDaltGLCD 0021                      ??_UenviaChar 0065  
                       _UnewScore 1FF6                        ?_NoFerMenu 005F  
           __size_of_miraPassword 0024                       ??_GLCDMotor 0073  
                      ?_URegister 005F                        ?_HnoJugant 005F  
               ??_checkHoraAcabat 0064                     ??_init_eusart 0064  
                      ?_SiFerMenu 005F                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                     __pcstackBANK0 00DA  
                      ?_TiGetTics 0064                   ?_GLCDMostraMenu 005F  
                        ?_HJugant 005F                    ?_JoystickMotor 005F  
                 ??_MsetNovaTecla 0064              __end_of_motorAltaveu 18F0  
                        ?_JJuguem 005F                          ?_LcClear 005F  
                        ?_CantaIR 005F        __size_of_conversorJoystick 0024  
              _calculateShowUsers 01C6                    _CantaPartBaixa 1AE8  
        ??_SIOHaAcabatPuntuacions 0064             ?_UcheckExistsGetError 005F  
               __size_of_high_rsi 002A                      ?_WaitForBusy 005F  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0064  
              SsetNovaTecla@tecla 0064                __end_of_UenviaChar 007C  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 005F  
                      ?_UgetScore 005F                       ??_CToAReset 0064  
            __end_of_SIOEnviaHora 01B6                      _miraPassword 1E74  
                       __pintcode 0008                          ?___lbdiv 0064  
                   ??_playAltaveu 0064                        ?_UenviaPas 0064  
               __size_of_motorSIO 02BA                 __size_of_motorJoc 00A4  
                 CantaPartBaixa@c 0065                      _CToAHaAcabat 01EE  
             __end_of_initAltaveu 0156                        ?_UnewScore 005F  
                       _arrayZero 0045                          ?_initSIO 005F  
                     __smallconst 0200                         _convertir 0047  
                   ??_CToAobtenir 0066                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 0064  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 0116                    __size_of_Sinit 0008  
                     ??_HNouSegon 0064                    __size_of_Uinit 00B0  
                     _direccioSIO 0049                       _direccioJoc 0013  
          __end_of_CantaPartBaixa 1B44                JoystickMotor@state 0017  
                        _GLCDInit 018E                       _do_register 03B6  
             __end_of_init_eusart 1FE2                         _newString 03B1  
                    _UcheckExists 01D2                         _loginText 00D2  
                       _jugantSIO 03AA          __size_of_HActualitzaHora 0024  
                       _jugantJoc 03AB                      UgetTop5@quin 0064  
                     ??_CantaData 0066                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 005F                     ?_MNouJoystick 005F  
                ?_SIONovaDireccio 005F              __end_of_SIOStartGame 010E  
                   UenviaChar@pos 0064                _escriureCharEEPROM 1E04  
                       _novaTecla 0054                ??_llegirCharEEPROM 0064  
                   motorSIO@state 000D                          _PIR1bits 000F9E  
                     ??_LcPutChar 0072                         _timerGLCD 0022  
                       _motorHora 1908                          _RCONbits 000FD0  
                       _reproduir 03B3                          _HGetTime 01BA  
           __size_of_JoystickInit 0012                         _timerHora 0016  
                       _timerMenu 0032               ?_escriureCharEEPROM 0064  
                     ??_NoFerMenu 0064                        _ADCON0bits 000FC2  
                     ??_URegister 0064                       ??_HnoJugant 0064  
                     ??_SiFerMenu 0064             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 01C6            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006B                         _zeroTecla 003A  
                        _LcGotoXY 1D7C                    _usuariLoguejat 004F  
                        _LcLliure 00FA                       ??_TiGetTics 0066  
         __size_of_compareStrings 002A               llegirCharEEPROM@pos 0064  
            __size_of_TiInitTimer 0028                          _LcScroll 01A8  
                 ??_JoystickMotor 0065                     GLCDMotor@max1 004E  
                   GLCDMotor@max2 004D                     GLCDMotor@min1 001E  
                   GLCDMotor@min2 001D                      _teclaPremuda 0292  
                        _JendGame 01E6                         _usuariJoc 004C  
                     LcGotoXY@Row 006C                         copy_data0 1A1C  
                       copy_data1 1A3C              ??_escriureCharEEPROM 0065  
                 ?_CantaPartBaixa 005F               __end_of_CToAobtenir 01EE  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0064  
           escriureCharEEPROM@pos 0064                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 142E             __end_of_JnovaDireccio 012E  
                  ??_MNouJoystick 0064                    _do_updateScore 03B4  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 005F  
                    _JoystickInit 004A                        _EECON1bits 000FA6  
                    _registerText 00C7                       _indexUsuari 0030  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0012                          __Hrparam 0000  
                     _initAltaveu 014E                       ??_UgetScore 0064  
                        _UgetTop5 0036                         menu@state 002E  
                        __Lrparam 0000                        ?_motorHora 005F  
            __size_of__TiRSITimer 003E                      _UgetUserName 1FE2  
                     ??_UenviaPas 0065                  __size_of___lbdiv 0034  
                    _novaDireccio 0050                       ??_UnewScore 0064  
                    ??_init_ports 0064               HActualitzaHora@nova 0064  
      __end_of_UshowUsersCalculat 00CA                          _charActu 000F  
                     _init_eusart 1FCC                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007A                      _novaTeclaJOC 004B  
                    _novaTeclaSIO 0048                   _do_check_exists 03B7  
                        __ptext10 01B2                          __ptext11 01B6  
              _EscriuPrimeraOrdre 198C                          __ptext20 1E74  
                        __ptext12 00A6                          __ptext21 1F42  
                        __ptext13 0196                          __ptext30 006C  
                        __ptext22 00B2                          __ptext14 01BA  
                        __ptext31 00CA                          __ptext23 01C6  
                        __ptext15 01BE                          __ptext40 01A8  
                        __ptext32 01CE                          __ptext24 00BE  
                        __ptext16 1908                          __ptext41 011E  
                        __ptext33 01D2                          __ptext25 1FE2  
                        __ptext17 01C2                          __ptext50 0136  
                        __ptext42 0126                          __ptext34 01D6  
                        __ptext26 0036                          __ptext18 1876  
                        __ptext51 1F24                          __ptext43 01E6  
                        __ptext35 01DA                          __ptext27 008C  
                        __ptext19 02F0                          __ptext60 007C  
                        __ptext52 1FCC                          __ptext44 012E  
                        __ptext36 019C                          __ptext28 01CA  
                        __ptext61 1D48                          __ptext53 013E  
                        __ptext45 1E98                          __ptext37 01A2  
                        __ptext29 005C                          __ptext70 017E  
                        __ptext62 1DDC                          __ptext54 0146  
                        __ptext46 00D6                          __ptext38 01DE  
                        __ptext71 1BB4                          __ptext63 142E  
                        __ptext55 014E                          __ptext47 01EA  
                        __ptext39 01E2                          __ptext80 00EE  
                        __ptext72 1714                          __ptext64 0156  
                        __ptext56 0FFC                          __ptext48 01EE  
                        __ptext81 00FA                          __ptext73 198C  
                        __ptext65 015E                          __ptext57 1E04  
                        __ptext49 00E2                          __ptext90 1E2A  
                        __ptext82 1EE0                          __ptext74 163E  
                        __ptext66 0166                          __ptext58 1C94  
                        __ptext91 018E                          __ptext83 1D7C  
                        __ptext75 0186                          __ptext67 016E  
                        __ptext59 1568                          __ptext92 1DB0  
                        __ptext84 1CD2                          __ptext76 004A  
                        __ptext68 1280                          __ptext93 1EBC  
                        __ptext85 1F5E                          __ptext77 0D64  
                        __ptext69 0176                          __ptext86 1AE8  
                        __ptext78 1C04                          __ptext95 1C4C  
                        __ptext87 1B4E                          __ptext79 1D10  
                        __ptext88 1F02                          __ptext89 1F7A  
                  CantaPartAlta@c 0065                       _lletraASCII 0055  
                        _high_rsi 0008                          _copsNota 0024  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 0146                       _lletraInici 00BF  
                        _menuDalt 0031             __size_of_SIOEnviaHora 0004  
                        _menuList 0201               ?_EscriuPrimeraOrdre 005F  
                   __size_of_main 0068                     __size_of_menu 0734  
           __end_of_CantaPartAlta 1BAA                    _CToAConverteix 00E2  
                   CantaData@Data 0066                          _tiTeclat 0038  
              __end_of_init_ports 1F42                          _setSMSon 03B9  
                   _SsetNovaTecla 0156              __size_of_WaitForBusy 003E  
                        _nouSegon 03AD                          _scoreUsr 0028  
                        _motorSIO 0A72                 ??_HActualitzaHora 0065  
                        _motorJoc 17D2                   _checkHoraAcabat 00B2  
                        _timerSIO 0011                          _timerSMS 003B  
                        isa$xinst 000000                          int$flags 0078  
                    UenviaPas@pos 0064                       _playAltaveu 01C2  
                    _motorAltaveu 1876           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 01DE              ??_EscriuPrimeraOrdre 0064  
                      LcInit@rows 006F                  ??_GLCDMostraMenu 0064  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 00CA  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0064  
                     _CToAobtenir 01EA                      _SIOEnviaHora 01B2  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0069  
                        intlevel2 0000                      _timerAltaveu 0025  
                  _arrayShowUsers 00A5            __end_of_CToAConverteix 00EE  
                      LcPutChar@c 0072                    ?_SsetNovaTecla 005F  
               MNovaLletra@lletra 0064                   compareStrings@a 0064  
                 compareStrings@b 0065                       ??_motorHora 006B  
                    _SIONovaTecla 010E                       _tempsAcabat 03AC  
                     GLCDMotor@k1 001C                       GLCDMotor@k2 001B  
            __end_of_MNouJoystick 018E                      _SIOStartGame 0106  
                  _compareStrings 1C94                       _tmpPassword 00AD  
             __end_of_MNovaLletra 017E                   ?_CToAConverteix 005F  
           __end_of_MsetNovaTecla 0166           __end_of_checkHoraAcabat 00BE  
                     _tmpUsername 00B6                    _SIOcheckKrebut 009A  
                     SMotor@state 0039           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 00FA              __size_of_UmotorUsers 0232  
                      _SIOendGame 01AE  
