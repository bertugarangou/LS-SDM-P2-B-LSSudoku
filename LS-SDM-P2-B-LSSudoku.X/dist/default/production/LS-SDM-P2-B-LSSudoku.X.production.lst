

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 22 12:57:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.32
    60                           ; Generated 02/02/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4321 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  000D6C                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _lletraInici
   100  000D6C  41                 	db	65
   101  000D6D  44                 	db	68
   102  000D6E  47                 	db	71
   103  000D6F  4A                 	db	74
   104  000D70  4D                 	db	77
   105  000D71  50                 	db	80
   106  000D72  54                 	db	84
   107  000D73  57                 	db	87
   108  000D74  00                 	db	0
   109                           
   110                           ;initializer for _novaLletra
   111  000D75  FF                 	db	255
   112                           
   113                           ;initializer for _NovaTecla
   114  000D76  FF                 	db	255
   115                           
   116                           ;initializer for _ultimaTecla
   117  000D77  FF                 	db	255
   118                           
   119                           ;initializer for _timerSMS
   120  000D78  FF                 	db	255
   121                           
   122                           ;initializer for _novaTecla
   123  000D79  FF                 	db	255
   124                           
   125                           ;initializer for _lletraASCII
   126  000D7A  FF                 	db	255
   127                           
   128                           ;initializer for _teclaPremuda
   129  000D7B  01                 	db	1
   130  000D7C  02                 	db	2
   131  000D7D  03                 	db	3
   132  000D7E  04                 	db	4
   133  000D7F  05                 	db	5
   134  000D80  06                 	db	6
   135  000D81  07                 	db	7
   136  000D82  08                 	db	8
   137  000D83  09                 	db	9
   138  000D84  0A                 	db	10
   139  000D85  00                 	db	0
   140  000D86  0B                 	db	11
   141  0000                     _T0CONbits	set	4053
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR0H	set	4055
   144  0000                     _T0CON	set	4053
   145  0000                     _INTCONbits	set	4082
   146  0000                     _RCONbits	set	4048
   147  0000                     _PORTDbits	set	3971
   148  0000                     _EECON1bits	set	4006
   149  0000                     _LATD	set	3980
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISC	set	3988
   152  0000                     _LATBbits	set	3978
   153  0000                     _TRISB	set	3987
   154  0000                     _TRISA	set	3986
   155  0000                     _PORTCbits	set	3970
   156  0000                     _LATDbits	set	3980
   157  0000                     _LATCbits	set	3979
   158  0000                     _TRISDbits	set	3989
   159  0000                     _TRISCbits	set	3988
   160                           
   161                           	psect	smallconst
   162  000200                     __psmallconst:
   163                           	callstack 0
   164  000200  00                 	db	0
   165  000201                     STR_2:
   166  000201  32                 	db	50	;'2'
   167  000202  2E                 	db	46
   168  000203  52                 	db	82	;'R'
   169  000204  45                 	db	69	;'E'
   170  000205  47                 	db	71	;'G'
   171  000206  49                 	db	73	;'I'
   172  000207  53                 	db	83	;'S'
   173  000208  54                 	db	84	;'T'
   174  000209  45                 	db	69	;'E'
   175  00020A  52                 	db	82	;'R'
   176  00020B  00                 	db	0
   177  00020C                     STR_1:
   178  00020C  31                 	db	49	;'1'
   179  00020D  2E                 	db	46
   180  00020E  4C                 	db	76	;'L'
   181  00020F  4F                 	db	79	;'O'
   182  000210  47                 	db	71	;'G'
   183  000211  49                 	db	73	;'I'
   184  000212  4E                 	db	78	;'N'
   185  000213  00                 	db	0
   186  000214                     STR_4:
   187  000214  50                 	db	80	;'P'
   188  000215  53                 	db	83	;'S'
   189  000216  57                 	db	87	;'W'
   190  000217  44                 	db	68	;'D'
   191  000218  3A                 	db	58	;':'
   192  000219  20                 	db	32
   193  00021A  00                 	db	0
   194  00021B                     STR_3:
   195  00021B  55                 	db	85	;'U'
   196  00021C  53                 	db	83	;'S'
   197  00021D  45                 	db	69	;'E'
   198  00021E  52                 	db	82	;'R'
   199  00021F  3A                 	db	58	;':'
   200  000220  20                 	db	32
   201  000221  00                 	db	0
   202  000222  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207  000A9E                     __pcinit:
   208                           	callstack 0
   209  000A9E                     start_initialization:
   210                           	callstack 0
   211  000A9E                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to COMRAM (27 bytes)
   215                           ; load TBLPTR registers with __pidataCOMRAM
   216  000A9E  0E6C               	movlw	low __pidataCOMRAM
   217  000AA0  6EF6               	movwf	tblptrl,c
   218  000AA2  0E0D               	movlw	high __pidataCOMRAM
   219  000AA4  6EF7               	movwf	tblptrh,c
   220  000AA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   221  000AA8  6EF8               	movwf	tblptru,c
   222  000AAA  EE00  F046         	lfsr	0,__pdataCOMRAM
   223  000AAE  EE10 F01B          	lfsr	1,27
   224  000AB2                     copy_data0:
   225  000AB2  0009               	tblrd		*+
   226  000AB4  CFF5 FFEE          	movff	tablat,postinc0
   227  000AB8  50E5               	movf	postdec1,w,c
   228  000ABA  50E1               	movf	fsr1l,w,c
   229  000ABC  E1FA               	bnz	copy_data0
   230                           
   231                           ; Clear objects allocated to BANK1 (184 bytes)
   232  000ABE  EE01  F000         	lfsr	0,__pbssBANK1
   233  000AC2  0EB8               	movlw	184
   234  000AC4                     clear_0:
   235  000AC4  6AEE               	clrf	postinc0,c
   236  000AC6  06E8               	decf	wreg,f,c
   237  000AC8  E1FD               	bnz	clear_0
   238                           
   239                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   240  000ACA  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   241                           
   242                           ; Clear objects allocated to COMRAM (69 bytes)
   243  000ACC  EE00  F001         	lfsr	0,__pbssCOMRAM
   244  000AD0  0E45               	movlw	69
   245  000AD2                     clear_1:
   246  000AD2  6AEE               	clrf	postinc0,c
   247  000AD4  06E8               	decf	wreg,f,c
   248  000AD6  E1FD               	bnz	clear_1
   249  000AD8                     end_of_initialization:
   250                           	callstack 0
   251  000AD8                     __end_of__initialization:
   252                           	callstack 0
   253  000AD8  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  000ADA  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  000ADC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  000ADE  6EF8               	movwf	tblptru,c
   257  000AE0  0100               	movlb	0
   258  000AE2  EFEA  F005         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bitbssCOMRAM
   261  0003B8                     __pbitbssCOMRAM:
   262                           	callstack 0
   263  0003B8                     _return_error:
   264                           	callstack 0
   265  0003B8                     	ds	1
   266  0003B9                     _do_check_exists:
   267                           	callstack 0
   268  0003B9                     	ds	1
   269  0003BA                     _loginNOTRegister:
   270                           	callstack 0
   271  0003BA                     	ds	1
   272  0003BB                     _setSMSon:
   273                           	callstack 0
   274  0003BB                     	ds	1
   275  0003BC                     _nou_s:
   276                           	callstack 0
   277  0003BC                     	ds	1
   278                           
   279                           	psect	bssCOMRAM
   280  000001                     __pbssCOMRAM:
   281                           	callstack 0
   282  000001                     _s_Timers:
   283                           	callstack 0
   284  000001                     	ds	24
   285  000019                     _tmpPassword:
   286                           	callstack 0
   287  000019                     	ds	2
   288  00001B                     _tmpUsername:
   289                           	callstack 0
   290  00001B                     	ds	2
   291  00001D                     _h_Tics:
   292                           	callstack 0
   293  00001D                     	ds	2
   294  00001F                     UmotorUsers@state:
   295                           	callstack 0
   296  00001F                     	ds	1
   297  000020                     _i:
   298                           	callstack 0
   299  000020                     	ds	1
   300  000021                     _indexLastUser:
   301                           	callstack 0
   302  000021                     	ds	1
   303  000022                     _numUsuaris:
   304                           	callstack 0
   305  000022                     	ds	1
   306  000023                     _currentUsrIndex:
   307                           	callstack 0
   308  000023                     	ds	1
   309  000024                     menu@state:
   310                           	callstack 0
   311  000024                     	ds	1
   312  000025                     _timerMenu:
   313                           	callstack 0
   314  000025                     	ds	1
   315  000026                     _j:
   316                           	callstack 0
   317  000026                     	ds	1
   318  000027                     _counter:
   319                           	callstack 0
   320  000027                     	ds	1
   321  000028                     TeTeclat@files:
   322                           	callstack 0
   323  000028                     	ds	1
   324  000029                     TeTeclat@cols:
   325                           	callstack 0
   326  000029                     	ds	1
   327  00002A                     TeTeclat@state:
   328                           	callstack 0
   329  00002A                     	ds	1
   330  00002B                     _tiTeclat:
   331                           	callstack 0
   332  00002B                     	ds	1
   333  00002C                     SMotor@state:
   334                           	callstack 0
   335  00002C                     	ds	1
   336  00002D                     _sumaPulsacions:
   337                           	callstack 0
   338  00002D                     	ds	1
   339  00002E                     _s_ptr:
   340                           	callstack 0
   341  00002E                     	ds	1
   342  00002F                     _Timer:
   343                           	callstack 0
   344  00002F                     	ds	1
   345  000030                     _ColumnAct:
   346                           	callstack 0
   347  000030                     	ds	1
   348  000031                     _RowAct:
   349                           	callstack 0
   350  000031                     	ds	1
   351  000032                     _Columns:
   352                           	callstack 0
   353  000032                     	ds	1
   354  000033                     _Rows:
   355                           	callstack 0
   356  000033                     	ds	1
   357  000034                     _password:
   358                           	callstack 0
   359  000034                     	ds	9
   360  00003D                     _username:
   361                           	callstack 0
   362  00003D                     	ds	9
   363                           
   364                           	psect	dataCOMRAM
   365  000046                     __pdataCOMRAM:
   366                           	callstack 0
   367  000046                     _lletraInici:
   368                           	callstack 0
   369  000046                     	ds	9
   370  00004F                     _novaLletra:
   371                           	callstack 0
   372  00004F                     	ds	1
   373  000050                     _NovaTecla:
   374                           	callstack 0
   375  000050                     	ds	1
   376  000051                     _ultimaTecla:
   377                           	callstack 0
   378  000051                     	ds	1
   379  000052                     _timerSMS:
   380                           	callstack 0
   381  000052                     	ds	1
   382  000053                     _novaTecla:
   383                           	callstack 0
   384  000053                     	ds	1
   385  000054                     _lletraASCII:
   386                           	callstack 0
   387  000054                     	ds	1
   388  000055                     _teclaPremuda:
   389                           	callstack 0
   390  000055                     	ds	12
   391                           
   392                           	psect	bssBANK1
   393  000100                     __pbssBANK1:
   394                           	callstack 0
   395  000100                     _usuaris:
   396                           	callstack 0
   397  000100                     	ds	184
   398                           
   399                           	psect	cstackCOMRAM
   400  000061                     __pcstackCOMRAM:
   401                           	callstack 0
   402  000061                     
   403                           ; 1 bytes @ 0x0
   404  000061                     	ds	1
   405  000062                     ??_high_rsi:
   406                           
   407                           ; 1 bytes @ 0x1
   408  000062                     	ds	4
   409  000066                     ??_EscriuPrimeraOrdre:
   410  000066                     ??_CantaPartAlta:
   411  000066                     ??_CantaPartBaixa:
   412  000066                     ?_TiGetTics:
   413                           	callstack 0
   414  000066                     LcNewString@new_s:
   415                           	callstack 0
   416  000066                     SsetNovaTecla@tecla:
   417                           	callstack 0
   418  000066                     TiResetTics@Handle:
   419                           	callstack 0
   420  000066                     MsetNovaTecla@tecla:
   421                           	callstack 0
   422  000066                     MNovaLletra@lletra:
   423                           	callstack 0
   424  000066                     UsetData@user:
   425                           	callstack 0
   426  000066                     compareStrings@a:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x5
   430  000066                     	ds	1
   431  000067                     CantaPartAlta@c:
   432                           	callstack 0
   433  000067                     CantaPartBaixa@c:
   434                           	callstack 0
   435  000067                     EscriuPrimeraOrdre@ordre:
   436                           	callstack 0
   437  000067                     UsetData@pass:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x6
   441  000067                     	ds	1
   442  000068                     ??_TiGetTics:
   443  000068                     CantaIR@IR:
   444                           	callstack 0
   445  000068                     CantaData@Data:
   446                           	callstack 0
   447  000068                     compareStrings@b:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x7
   451  000068                     	ds	2
   452  00006A                     ??_compareStrings:
   453  00006A                     TiGetTics@Handle:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x9
   457  00006A                     	ds	1
   458  00006B                     TiGetTics@actual:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xA
   462  00006B                     	ds	1
   463  00006C                     ??_UmotorUsers:
   464                           
   465                           ; 1 bytes @ 0xB
   466  00006C                     	ds	1
   467  00006D                     ??_SMotor:
   468  00006D                     ??_TeTeclat:
   469  00006D                     WaitForBusy@Busy:
   470                           	callstack 0
   471  00006D                     Espera@ms:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xC
   475  00006D                     	ds	1
   476  00006E                     LcGotoXY@Row:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0xD
   480  00006E                     	ds	1
   481  00006F                     ??_Espera:
   482  00006F                     LcGotoXY@Fisics:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xE
   486  00006F                     	ds	1
   487  000070                     Espera@Timer:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xF
   491  000070                     	ds	1
   492  000071                     LcInit@columns:
   493                           	callstack 0
   494  000071                     _LcGotoXY$342:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x10
   498  000071                     	ds	1
   499  000072                     LcInit@rows:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x11
   503  000072                     	ds	1
   504  000073                     LcGotoXY@Column:
   505                           	callstack 0
   506  000073                     LcInit@i:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x12
   510  000073                     	ds	1
   511  000074                     LcPutChar@c:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x13
   515  000074                     	ds	1
   516  000075                     ??_menu:
   517  000075                     
   518                           ; 1 bytes @ 0x14
   519  000075                     	ds	2
   520  000077                     
   521                           ; 1 bytes @ 0x16
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 69 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1
   541 ;;      Params:         0       0       0
   542 ;;      Locals:         0       0       0
   543 ;;      Temps:          0       0       0
   544 ;;      Totals:         0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels required when called: 7
   547 ;; This function calls:
   548 ;;		_LcInit
   549 ;;		_LcLCD
   550 ;;		_Minit
   551 ;;		_SMotor
   552 ;;		_Sinit
   553 ;;		_TeInit
   554 ;;		_TeTeclat
   555 ;;		_TiInitTimer
   556 ;;		_UmotorUsers
   557 ;;		_init_ports
   558 ;;		_menu
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565  000BD4                     __ptext0:
   566                           	callstack 0
   567  000BD4                     _main:
   568                           	callstack 24
   569                           
   570                           ;main.c: 70:     init_ports();
   571                           
   572                           ;incstack = 0
   573  000BD4  ECA6  F006         	call	_init_ports	;wreg free
   574                           
   575                           ;main.c: 71:     TiInitTimer();
   576  000BD8  EC06  F006         	call	_TiInitTimer	;wreg free
   577                           
   578                           ;main.c: 72:     TeInit();
   579  000BDC  ECF5  F006         	call	_TeInit	;wreg free
   580                           
   581                           ;main.c: 73:     Sinit();
   582  000BE0  ECF9  F006         	call	_Sinit	;wreg free
   583                           
   584                           ;main.c: 74:     SMotor();
   585  000BE4  EC38  F002         	call	_SMotor	;wreg free
   586                           
   587                           ;main.c: 77:     LcInit(2,16);
   588  000BE8  0E10               	movlw	16
   589  000BEA  6E71               	movwf	LcInit@columns^0,c
   590  000BEC  0E02               	movlw	2
   591  000BEE  ECC0  F003         	call	_LcInit
   592                           
   593                           ;main.c: 78:     Minit();
   594  000BF2  EC01  F007         	call	_Minit	;wreg free
   595  000BF6                     l2615:
   596                           
   597                           ;main.c: 82:         menu();
   598  000BF6  EC12  F001         	call	_menu	;wreg free
   599                           
   600                           ;main.c: 84:         UmotorUsers();
   601  000BFA  EC93  F005         	call	_UmotorUsers	;wreg free
   602                           
   603                           ;main.c: 85:         TeTeclat();
   604  000BFE  EC0E  F003         	call	_TeTeclat	;wreg free
   605                           
   606                           ;main.c: 86:         SMotor();
   607  000C02  EC38  F002         	call	_SMotor	;wreg free
   608                           
   609                           ;main.c: 87:         LcLCD();
   610  000C06  EC54  F006         	call	_LcLCD	;wreg free
   611  000C0A  D7F5               	goto	l2615
   612  000C0C                     __end_of_main:
   613                           	callstack 0
   614                           
   615 ;; *************** function _menu *****************
   616 ;; Defined at:
   617 ;;		line 27 in file "Menu.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1
   631 ;;      Params:         0       0       0
   632 ;;      Locals:         0       0       0
   633 ;;      Temps:          2       0       0
   634 ;;      Totals:         2       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 6
   638 ;; This function calls:
   639 ;;		_LcClear
   640 ;;		_LcGotoXY
   641 ;;		_LcLliure
   642 ;;		_LcNewString
   643 ;;		_LcPutChar
   644 ;;		_SMSon
   645 ;;		_UcheckExists
   646 ;;		_UcheckExistsGetError
   647 ;;		_UgetNumUsuaris
   648 ;;		_UsetData
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text1
   655  000224                     __ptext1:
   656                           	callstack 0
   657  000224                     _menu:
   658                           	callstack 24
   659                           
   660                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
   661                           
   662                           ;incstack = 0
   663  000224  D0F4               	goto	l2489
   664  000226                     l2339:
   665                           
   666                           ;Menu.c: 32:    LcClear();
   667  000226  EC82  F006         	call	_LcClear	;wreg free
   668                           
   669                           ;Menu.c: 33:    LcNewString("1.LOGIN");
   670  00022A  0E0C               	movlw	low STR_1
   671  00022C  6E66               	movwf	LcNewString@new_s^0,c
   672  00022E  ECE9  F006         	call	_LcNewString	;wreg free
   673                           
   674                           ;Menu.c: 34:    state = 1;
   675  000232  0E01               	movlw	1
   676  000234  6E24               	movwf	menu@state^0,c
   677                           
   678                           ;Menu.c: 35:   break;
   679  000236  0012               	return	
   680  000238                     l2345:
   681                           
   682                           ;Menu.c: 37:    if (LcLliure()) {
   683  000238  ECDD  F006         	call	_LcLliure	;wreg free
   684  00023C  A0D8               	btfss	status,0,c
   685  00023E  0012               	return	
   686                           
   687                           ;Menu.c: 38:     LcGotoXY(0,1);
   688  000240  0E01               	movlw	1
   689  000242  6E6E               	movwf	LcGotoXY@Row^0,c
   690  000244  0E00               	movlw	0
   691  000246  ECB0  F005         	call	_LcGotoXY
   692                           
   693                           ;Menu.c: 39:     LcNewString("2.REGISTER");
   694  00024A  0E01               	movlw	low STR_2
   695  00024C  6E66               	movwf	LcNewString@new_s^0,c
   696  00024E  ECE9  F006         	call	_LcNewString	;wreg free
   697                           
   698                           ;Menu.c: 40:     NovaTecla = -1;
   699  000252  6850               	setf	_NovaTecla^0,c
   700                           
   701                           ;Menu.c: 41:     state = 2;
   702  000254  0E02               	movlw	2
   703  000256  6E24               	movwf	menu@state^0,c
   704  000258  0012               	return	
   705  00025A                     l2355:
   706                           
   707                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   708  00025A  0450               	decf	_NovaTecla^0,w,c
   709  00025C  A4D8               	btfss	status,2,c
   710  00025E  D009               	goto	l2363
   711  000260  EC08  F007         	call	_UgetNumUsuaris	;wreg free
   712  000264  0900               	iorlw	0
   713  000266  B4D8               	btfsc	status,2,c
   714  000268  D004               	goto	l2363
   715                           
   716                           ;Menu.c: 46:     loginNOTRegister = 1;
   717  00026A  8477               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   718  00026C                     l2361:
   719                           
   720                           ;Menu.c: 47:     state = 3;
   721  00026C  0E03               	movlw	3
   722  00026E  6E24               	movwf	menu@state^0,c
   723                           
   724                           ;Menu.c: 48:    }
   725  000270  0012               	return	
   726  000272                     l2363:
   727  000272  0E02               	movlw	2
   728  000274  1850               	xorwf	_NovaTecla^0,w,c
   729  000276  A4D8               	btfss	status,2,c
   730  000278  0012               	return	
   731  00027A  EC08  F007         	call	_UgetNumUsuaris	;wreg free
   732  00027E  6E75               	movwf	??_menu^0,c
   733  000280  0E08               	movlw	8
   734  000282  6075               	cpfslt	??_menu^0,c
   735  000284  0012               	return	
   736                           
   737                           ;Menu.c: 50:     loginNOTRegister = 0;
   738  000286  9477               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   739  000288  D7F1               	goto	l2361
   740  00028A                     l415:
   741                           
   742                           ;Menu.c: 55:    NovaTecla = -1;
   743  00028A  6850               	setf	_NovaTecla^0,c
   744                           
   745                           ;Menu.c: 56:    LcClear();
   746  00028C  EC82  F006         	call	_LcClear	;wreg free
   747                           
   748                           ;Menu.c: 57:    LcNewString("USER: ");
   749  000290  0E1B               	movlw	low STR_3
   750  000292  6E66               	movwf	LcNewString@new_s^0,c
   751  000294  ECE9  F006         	call	_LcNewString	;wreg free
   752                           
   753                           ;Menu.c: 58:    state = 4;
   754  000298  0E04               	movlw	4
   755  00029A  6E24               	movwf	menu@state^0,c
   756                           
   757                           ;Menu.c: 59:   break;
   758  00029C  0012               	return	
   759  00029E                     l2377:
   760                           
   761                           ;Menu.c: 61:    if (LcLliure()) {
   762  00029E  ECDD  F006         	call	_LcLliure	;wreg free
   763  0002A2  A0D8               	btfss	status,0,c
   764  0002A4  0012               	return	
   765                           
   766                           ;Menu.c: 62:     LcGotoXY(0,1);
   767  0002A6  0E01               	movlw	1
   768  0002A8  6E6E               	movwf	LcGotoXY@Row^0,c
   769  0002AA  0E00               	movlw	0
   770  0002AC  ECB0  F005         	call	_LcGotoXY
   771                           
   772                           ;Menu.c: 63:     LcNewString("PSWD: ");
   773  0002B0  0E14               	movlw	low STR_4
   774  0002B2  6E66               	movwf	LcNewString@new_s^0,c
   775  0002B4  ECE9  F006         	call	_LcNewString	;wreg free
   776                           
   777                           ;Menu.c: 64:     state = 5;
   778  0002B8  0E05               	movlw	5
   779  0002BA  6E24               	movwf	menu@state^0,c
   780  0002BC  0012               	return	
   781  0002BE                     l2385:
   782                           
   783                           ;Menu.c: 68:    if (LcLliure()) {
   784  0002BE  ECDD  F006         	call	_LcLliure	;wreg free
   785  0002C2  A0D8               	btfss	status,0,c
   786  0002C4  0012               	return	
   787                           
   788                           ;Menu.c: 69:     LcGotoXY(6,0);
   789  0002C6  0E00               	movlw	0
   790  0002C8  6E6E               	movwf	LcGotoXY@Row^0,c
   791  0002CA  0E06               	movlw	6
   792  0002CC  ECB0  F005         	call	_LcGotoXY
   793                           
   794                           ;Menu.c: 70:     SMSon();
   795  0002D0  EC05  F007         	call	_SMSon	;wreg free
   796                           
   797                           ;Menu.c: 71:     j =0;
   798  0002D4  0E00               	movlw	0
   799  0002D6  6E26               	movwf	_j^0,c
   800  0002D8                     l2393:
   801                           
   802                           ;Menu.c: 72:     state = 6;
   803  0002D8  0E06               	movlw	6
   804  0002DA  6E24               	movwf	menu@state^0,c
   805  0002DC  0012               	return	
   806  0002DE                     l2395:
   807                           
   808                           ;Menu.c: 76:    if (novaLletra > 47 && NovaTecla < 11) {
   809  0002DE  504F               	movf	_novaLletra^0,w,c
   810  0002E0  0A80               	xorlw	128
   811  0002E2  0F50               	addlw	-176
   812  0002E4  A0D8               	btfss	status,0,c
   813  0002E6  D014               	goto	l2411
   814  0002E8  5050               	movf	_NovaTecla^0,w,c
   815  0002EA  0A80               	xorlw	128
   816  0002EC  0F75               	addlw	-139
   817  0002EE  B0D8               	btfsc	status,0,c
   818  0002F0  D00F               	goto	l2411
   819                           
   820                           ;Menu.c: 77:     LcPutChar(novaLletra);
   821  0002F2  504F               	movf	_novaLletra^0,w,c
   822  0002F4  ECFF  F004         	call	_LcPutChar
   823                           
   824                           ;Menu.c: 78:     username[j] = novaLletra;
   825  0002F8  5026               	movf	_j^0,w,c
   826  0002FA  0F3D               	addlw	low _username
   827  0002FC  6ED9               	movwf	fsr2l,c
   828  0002FE  6ADA               	clrf	fsr2h,c
   829  000300  C04F  FFDF         	movff	_novaLletra,indf2
   830                           
   831                           ;Menu.c: 79:     NovaTecla = -1;
   832  000304  6850               	setf	_NovaTecla^0,c
   833                           
   834                           ;Menu.c: 80:     novaLletra = -1;
   835  000306  684F               	setf	_novaLletra^0,c
   836                           
   837                           ;Menu.c: 81:     j++;
   838  000308  2A26               	incf	_j^0,f,c
   839                           
   840                           ;Menu.c: 82:     state = 7;
   841  00030A  0E07               	movlw	7
   842  00030C  6E24               	movwf	menu@state^0,c
   843                           
   844                           ;Menu.c: 83:    }
   845  00030E  0012               	return	
   846  000310                     l2411:
   847  000310  0E0B               	movlw	11
   848  000312  1850               	xorwf	_NovaTecla^0,w,c
   849  000314  A4D8               	btfss	status,2,c
   850  000316  0012               	return	
   851                           
   852                           ;Menu.c: 85:     j = 8;
   853  000318  0E08               	movlw	8
   854  00031A  6E26               	movwf	_j^0,c
   855                           
   856                           ;Menu.c: 86:     state = 7;
   857  00031C  0E07               	movlw	7
   858  00031E  6E24               	movwf	menu@state^0,c
   859  000320  0012               	return	
   860  000322                     l2415:
   861                           
   862                           ;Menu.c: 90:    if (j != 8) {
   863  000322  0E08               	movlw	8
   864  000324  1826               	xorwf	_j^0,w,c
   865  000326  A4D8               	btfss	status,2,c
   866  000328  D7D7               	goto	l2393
   867  00032A  0E08               	movlw	8
   868  00032C  1826               	xorwf	_j^0,w,c
   869  00032E  A4D8               	btfss	status,2,c
   870  000330  0012               	return	
   871                           
   872                           ;Menu.c: 94:     LcGotoXY(6,1);
   873  000332  0E01               	movlw	1
   874  000334  6E6E               	movwf	LcGotoXY@Row^0,c
   875  000336  0E06               	movlw	6
   876  000338  ECB0  F005         	call	_LcGotoXY
   877                           
   878                           ;Menu.c: 95:     username[j] = novaLletra;
   879  00033C  5026               	movf	_j^0,w,c
   880  00033E  0F3D               	addlw	low _username
   881  000340  6ED9               	movwf	fsr2l,c
   882  000342  6ADA               	clrf	fsr2h,c
   883  000344  C04F  FFDF         	movff	_novaLletra,indf2
   884                           
   885                           ;Menu.c: 96:     NovaTecla = -1;
   886  000348  6850               	setf	_NovaTecla^0,c
   887                           
   888                           ;Menu.c: 97:     novaLletra = -1;
   889  00034A  684F               	setf	_novaLletra^0,c
   890                           
   891                           ;Menu.c: 98:     j = 0;
   892  00034C  0E00               	movlw	0
   893  00034E  6E26               	movwf	_j^0,c
   894  000350                     l2431:
   895                           
   896                           ;Menu.c: 99:     state = 8;
   897  000350  0E08               	movlw	8
   898  000352  6E24               	movwf	menu@state^0,c
   899  000354  0012               	return	
   900  000356                     l2433:
   901                           
   902                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla < 11) {
   903  000356  504F               	movf	_novaLletra^0,w,c
   904  000358  0A80               	xorlw	128
   905  00035A  0F50               	addlw	-176
   906  00035C  A0D8               	btfss	status,0,c
   907  00035E  D014               	goto	l2449
   908  000360  5050               	movf	_NovaTecla^0,w,c
   909  000362  0A80               	xorlw	128
   910  000364  0F75               	addlw	-139
   911  000366  B0D8               	btfsc	status,0,c
   912  000368  D00F               	goto	l2449
   913                           
   914                           ;Menu.c: 104:     LcPutChar(novaLletra);
   915  00036A  504F               	movf	_novaLletra^0,w,c
   916  00036C  ECFF  F004         	call	_LcPutChar
   917                           
   918                           ;Menu.c: 105:     password[j] = novaLletra;
   919  000370  5026               	movf	_j^0,w,c
   920  000372  0F34               	addlw	low _password
   921  000374  6ED9               	movwf	fsr2l,c
   922  000376  6ADA               	clrf	fsr2h,c
   923  000378  C04F  FFDF         	movff	_novaLletra,indf2
   924                           
   925                           ;Menu.c: 106:     NovaTecla = -1;
   926  00037C  6850               	setf	_NovaTecla^0,c
   927                           
   928                           ;Menu.c: 107:     novaLletra = -1;
   929  00037E  684F               	setf	_novaLletra^0,c
   930                           
   931                           ;Menu.c: 108:     j++;
   932  000380  2A26               	incf	_j^0,f,c
   933                           
   934                           ;Menu.c: 109:     state = 9;
   935  000382  0E09               	movlw	9
   936  000384  6E24               	movwf	menu@state^0,c
   937                           
   938                           ;Menu.c: 110:    }
   939  000386  0012               	return	
   940  000388                     l2449:
   941  000388  0E0B               	movlw	11
   942  00038A  1850               	xorwf	_NovaTecla^0,w,c
   943  00038C  A4D8               	btfss	status,2,c
   944  00038E  0012               	return	
   945                           
   946                           ;Menu.c: 112:     j = 8;
   947  000390  0E08               	movlw	8
   948  000392  6E26               	movwf	_j^0,c
   949                           
   950                           ;Menu.c: 113:     state = 9;
   951  000394  0E09               	movlw	9
   952  000396  6E24               	movwf	menu@state^0,c
   953  000398  0012               	return	
   954  00039A                     l2453:
   955                           
   956                           ;Menu.c: 117:    if (j != 8) {
   957  00039A  0E08               	movlw	8
   958  00039C  1826               	xorwf	_j^0,w,c
   959  00039E  A4D8               	btfss	status,2,c
   960  0003A0  D7D7               	goto	l2431
   961  0003A2  0E08               	movlw	8
   962  0003A4  1826               	xorwf	_j^0,w,c
   963  0003A6  A4D8               	btfss	status,2,c
   964  0003A8  0012               	return	
   965                           
   966                           ;Menu.c: 121:     password[j] = novaLletra;
   967  0003AA  5026               	movf	_j^0,w,c
   968  0003AC  0F34               	addlw	low _password
   969  0003AE  6ED9               	movwf	fsr2l,c
   970  0003B0  6ADA               	clrf	fsr2h,c
   971  0003B2  C04F  FFDF         	movff	_novaLletra,indf2
   972                           
   973                           ;Menu.c: 122:     NovaTecla = -1;
   974  0003B6  6850               	setf	_NovaTecla^0,c
   975                           
   976                           ;Menu.c: 123:     novaLletra = -1;
   977  0003B8  684F               	setf	_novaLletra^0,c
   978                           
   979                           ;Menu.c: 124:     j = 0;
   980  0003BA  0E00               	movlw	0
   981  0003BC  6E26               	movwf	_j^0,c
   982                           
   983                           ;Menu.c: 125:     LcClear();
   984  0003BE  EC82  F006         	call	_LcClear	;wreg free
   985                           
   986                           ;Menu.c: 126:     UsetData(username, password);
   987  0003C2  0E3D               	movlw	low _username
   988  0003C4  6E66               	movwf	UsetData@user^0,c
   989  0003C6  0E34               	movlw	low _password
   990  0003C8  6E67               	movwf	UsetData@pass^0,c
   991  0003CA  ECD0  F006         	call	_UsetData	;wreg free
   992                           
   993                           ;Menu.c: 127:     UcheckExists();
   994  0003CE  EC0A  F007         	call	_UcheckExists	;wreg free
   995                           
   996                           ;Menu.c: 128:     state = 10;
   997  0003D2  0E0A               	movlw	10
   998  0003D4  6E24               	movwf	menu@state^0,c
   999  0003D6  0012               	return	
  1000  0003D8                     l438:
  1001                           
  1002                           ;Menu.c: 137:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1003  0003D8  B477               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1004  0003DA  D007               	goto	l439
  1005  0003DC  ECD7  F006         	call	_UcheckExistsGetError	;wreg free
  1006  0003E0  B0D8               	btfsc	status,0,c
  1007  0003E2  D003               	goto	l439
  1008                           
  1009                           ;Menu.c: 138:     state = 12;
  1010  0003E4  0E0C               	movlw	12
  1011  0003E6  6E24               	movwf	menu@state^0,c
  1012                           
  1013                           ;Menu.c: 139:    }
  1014  0003E8  0012               	return	
  1015  0003EA                     l439:
  1016  0003EA  A477               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1017  0003EC  D00B               	goto	l441
  1018  0003EE  0EAE               	movlw	low _UcheckExistsGetError
  1019  0003F0  6E75               	movwf	??_menu^0,c
  1020  0003F2  0E0D               	movlw	high _UcheckExistsGetError
  1021  0003F4  6E76               	movwf	(??_menu+1)^0,c
  1022  0003F6  0475               	decf	??_menu^0,w,c
  1023  0003F8  1076               	iorwf	(??_menu+1)^0,w,c
  1024  0003FA  A4D8               	btfss	status,2,c
  1025  0003FC  D003               	goto	l441
  1026                           
  1027                           ;Menu.c: 141:     state = 13;
  1028  0003FE  0E0D               	movlw	13
  1029  000400  6E24               	movwf	menu@state^0,c
  1030                           
  1031                           ;Menu.c: 142:    }
  1032  000402  0012               	return	
  1033  000404                     l441:
  1034  000404  B477               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1035  000406  0012               	return	
  1036                           
  1037                           ;Menu.c: 144:     state = 0;
  1038  000408  0E00               	movlw	0
  1039  00040A  6E24               	movwf	menu@state^0,c
  1040  00040C  0012               	return	
  1041  00040E                     l2489:
  1042  00040E  5024               	movf	menu@state^0,w,c
  1043  000410  6E75               	movwf	??_menu^0,c
  1044  000412  6A76               	clrf	(??_menu+1)^0,c
  1045                           
  1046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1047                           ; Switch size 1, requested type "simple"
  1048                           ; Number of cases is 1, Range of values is 0 to 0
  1049                           ; switch strategies available:
  1050                           ; Name         Instructions Cycles
  1051                           ; simple_byte            4     3 (average)
  1052                           ;	Chosen strategy is simple_byte
  1053  000414  5076               	movf	(??_menu+1)^0,w,c
  1054  000416  0A00               	xorlw	0	; case 0
  1055  000418  A4D8               	btfss	status,2,c
  1056  00041A  0012               	return	
  1057                           
  1058                           ; Switch size 1, requested type "simple"
  1059                           ; Number of cases is 14, Range of values is 0 to 13
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte           43    22 (average)
  1063                           ;	Chosen strategy is simple_byte
  1064  00041C  5075               	movf	??_menu^0,w,c
  1065  00041E  0A00               	xorlw	0	; case 0
  1066  000420  B4D8               	btfsc	status,2,c
  1067  000422  D701               	goto	l2339
  1068  000424  0A01               	xorlw	1	; case 1
  1069  000426  B4D8               	btfsc	status,2,c
  1070  000428  D707               	goto	l2345
  1071  00042A  0A03               	xorlw	3	; case 2
  1072  00042C  B4D8               	btfsc	status,2,c
  1073  00042E  D715               	goto	l2355
  1074  000430  0A01               	xorlw	1	; case 3
  1075  000432  B4D8               	btfsc	status,2,c
  1076  000434  D72A               	goto	l415
  1077  000436  0A07               	xorlw	7	; case 4
  1078  000438  B4D8               	btfsc	status,2,c
  1079  00043A  D731               	goto	l2377
  1080  00043C  0A01               	xorlw	1	; case 5
  1081  00043E  B4D8               	btfsc	status,2,c
  1082  000440  D73E               	goto	l2385
  1083  000442  0A03               	xorlw	3	; case 6
  1084  000444  B4D8               	btfsc	status,2,c
  1085  000446  D74B               	goto	l2395
  1086  000448  0A01               	xorlw	1	; case 7
  1087  00044A  B4D8               	btfsc	status,2,c
  1088  00044C  D76A               	goto	l2415
  1089  00044E  0A0F               	xorlw	15	; case 8
  1090  000450  B4D8               	btfsc	status,2,c
  1091  000452  D781               	goto	l2433
  1092  000454  0A01               	xorlw	1	; case 9
  1093  000456  B4D8               	btfsc	status,2,c
  1094  000458  D7A0               	goto	l2453
  1095  00045A  0A03               	xorlw	3	; case 10
  1096  00045C  B4D8               	btfsc	status,2,c
  1097  00045E  0012               	return	
  1098  000460  0A01               	xorlw	1	; case 11
  1099  000462  B4D8               	btfsc	status,2,c
  1100  000464  D7B9               	goto	l438
  1101  000466  0A07               	xorlw	7	; case 12
  1102  000468  B4D8               	btfsc	status,2,c
  1103  00046A  0012               	return	
  1104  00046C  0A01               	xorlw	1	; case 13
  1105  00046E  0012               	return	
  1106  000470                     __end_of_menu:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _UsetData *****************
  1110 ;; Defined at:
  1111 ;;		line 36 in file "Usuaris.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  user            1    5[COMRAM] PTR unsigned char 
  1114 ;;		 -> username(9), 
  1115 ;;  pass            1    6[COMRAM] PTR unsigned char 
  1116 ;;		 -> password(9), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1
  1128 ;;      Params:         2       0       0
  1129 ;;      Locals:         0       0       0
  1130 ;;      Temps:          0       0       0
  1131 ;;      Totals:         2       0       0
  1132 ;;Total ram usage:        2 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; Hardware stack levels required when called: 2
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_menu
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text2
  1143  000DA0                     __ptext2:
  1144                           	callstack 0
  1145  000DA0                     _UsetData:
  1146                           	callstack 27
  1147                           
  1148                           ;Usuaris.c: 37:     tmpUsername = user;
  1149                           
  1150                           ;incstack = 0
  1151  000DA0  C066  F01B         	movff	UsetData@user,_tmpUsername
  1152  000DA4  6A1C               	clrf	(_tmpUsername+1)^0,c
  1153                           
  1154                           ;Usuaris.c: 38:     tmpPassword = pass;
  1155  000DA6  C067  F019         	movff	UsetData@pass,_tmpPassword
  1156  000DAA  6A1A               	clrf	(_tmpPassword+1)^0,c
  1157  000DAC  0012               	return		;funcret
  1158  000DAE                     __end_of_UsetData:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _UgetNumUsuaris *****************
  1162 ;; Defined at:
  1163 ;;		line 23 in file "Usuaris.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      unsigned char 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1
  1177 ;;      Params:         0       0       0
  1178 ;;      Locals:         0       0       0
  1179 ;;      Temps:          0       0       0
  1180 ;;      Totals:         0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 2
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_menu
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text3
  1192  000E10                     __ptext3:
  1193                           	callstack 0
  1194  000E10                     _UgetNumUsuaris:
  1195                           	callstack 27
  1196                           
  1197                           ;Usuaris.c: 24:     return numUsuaris;
  1198                           
  1199                           ;incstack = 0
  1200  000E10  5022               	movf	_numUsuaris^0,w,c
  1201  000E12  0012               	return		;funcret
  1202  000E14                     __end_of_UgetNumUsuaris:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _UcheckExistsGetError *****************
  1206 ;; Defined at:
  1207 ;;		line 33 in file "Usuaris.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1
  1221 ;;      Params:         0       0       0
  1222 ;;      Locals:         0       0       0
  1223 ;;      Temps:          0       0       0
  1224 ;;      Totals:         0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 2
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_menu
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text4
  1236  000DAE                     __ptext4:
  1237                           	callstack 0
  1238  000DAE                     _UcheckExistsGetError:
  1239                           	callstack 27
  1240                           
  1241                           ;Usuaris.c: 34:     return return_error;
  1242                           
  1243                           ;incstack = 0
  1244  000DAE  B077               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1245  000DB0  D002               	goto	l1405
  1246  000DB2  90D8               	bcf	status,0,c
  1247  000DB4  0012               	return	
  1248  000DB6                     l1405:
  1249  000DB6  80D8               	bsf	status,0,c
  1250  000DB8  0012               	return		;funcret
  1251  000DBA                     __end_of_UcheckExistsGetError:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _UcheckExists *****************
  1255 ;; Defined at:
  1256 ;;		line 27 in file "Usuaris.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		None
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1
  1270 ;;      Params:         0       0       0
  1271 ;;      Locals:         0       0       0
  1272 ;;      Temps:          0       0       0
  1273 ;;      Totals:         0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 2
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_menu
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text5
  1285  000E14                     __ptext5:
  1286                           	callstack 0
  1287  000E14                     _UcheckExists:
  1288                           	callstack 27
  1289                           
  1290                           ;Usuaris.c: 28:     do_check_exists = 1;
  1291                           
  1292                           ;incstack = 0
  1293  000E14  8277               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1294  000E16  0012               	return		;funcret
  1295  000E18                     __end_of_UcheckExists:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _SMSon *****************
  1299 ;; Defined at:
  1300 ;;		line 114 in file "Ssms.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		None
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1
  1314 ;;      Params:         0       0       0
  1315 ;;      Locals:         0       0       0
  1316 ;;      Temps:          0       0       0
  1317 ;;      Totals:         0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 2
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_menu
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text6
  1329  000E0A                     __ptext6:
  1330                           	callstack 0
  1331  000E0A                     _SMSon:
  1332                           	callstack 27
  1333                           
  1334                           ;Ssms.c: 115:     setSMSon = 1;
  1335                           
  1336                           ;incstack = 0
  1337  000E0A  8677               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1338                           
  1339                           ;Ssms.c: 116:     novaTecla = -1;
  1340  000E0C  6853               	setf	_novaTecla^0,c
  1341  000E0E  0012               	return		;funcret
  1342  000E10                     __end_of_SMSon:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _LcNewString *****************
  1346 ;; Defined at:
  1347 ;;		line 239 in file "LcTLCD.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1350 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1
  1362 ;;      Params:         1       0       0
  1363 ;;      Locals:         0       0       0
  1364 ;;      Temps:          0       0       0
  1365 ;;      Totals:         1       0       0
  1366 ;;Total ram usage:        1 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 2
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_menu
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text7
  1377  000DD2                     __ptext7:
  1378                           	callstack 0
  1379  000DD2                     _LcNewString:
  1380                           	callstack 27
  1381                           
  1382                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1383                           
  1384                           ;incstack = 0
  1385  000DD2  C066  F02E         	movff	LcNewString@new_s,_s_ptr
  1386                           
  1387                           ;LcTLCD.c: 241:     nou_s = 1;
  1388  000DD6  8877               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1389  000DD8  0012               	return		;funcret
  1390  000DDA                     __end_of_LcNewString:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _LcLliure *****************
  1394 ;; Defined at:
  1395 ;;		line 265 in file "LcTLCD.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;		None               void
  1402 ;; Registers used:
  1403 ;;		status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 2
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_menu
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text8
  1424  000DBA                     __ptext8:
  1425                           	callstack 0
  1426  000DBA                     _LcLliure:
  1427                           	callstack 27
  1428                           
  1429                           ;LcTLCD.c: 266:     return !nou_s;
  1430                           
  1431                           ;incstack = 0
  1432  000DBA  A877               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1433  000DBC  D002               	goto	l1381
  1434  000DBE  90D8               	bcf	status,0,c
  1435  000DC0  0012               	return	
  1436  000DC2                     l1381:
  1437  000DC2  80D8               	bsf	status,0,c
  1438  000DC4  0012               	return		;funcret
  1439  000DC6                     __end_of_LcLliure:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _LcClear *****************
  1443 ;; Defined at:
  1444 ;;		line 82 in file "LcTLCD.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1
  1458 ;;      Params:         0       0       0
  1459 ;;      Locals:         0       0       0
  1460 ;;      Temps:          0       0       0
  1461 ;;      Totals:         0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 5
  1465 ;; This function calls:
  1466 ;;		_CantaIR
  1467 ;;		_Espera
  1468 ;;		_LcGotoXY
  1469 ;;		_WaitForBusy
  1470 ;; This function is called by:
  1471 ;;		_menu
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text9
  1476  000D04                     __ptext9:
  1477                           	callstack 0
  1478  000D04                     _LcClear:
  1479                           	callstack 24
  1480                           
  1481                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1482                           
  1483                           ;incstack = 0
  1484  000D04  EC73  F005         	call	_WaitForBusy	;wreg free
  1485  000D08  0E01               	movlw	1
  1486  000D0A  EC3B  F006         	call	_CantaIR
  1487                           
  1488                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1489  000D0E  0E00               	movlw	0
  1490  000D10  6E6E               	movwf	(Espera@ms+1)^0,c
  1491  000D12  0E03               	movlw	3
  1492  000D14  6E6D               	movwf	Espera@ms^0,c
  1493  000D16  502F               	movf	_Timer^0,w,c
  1494  000D18  EC94  F006         	call	_Espera
  1495                           
  1496                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1497  000D1C  0E00               	movlw	0
  1498  000D1E  6E6E               	movwf	LcGotoXY@Row^0,c
  1499  000D20  0E00               	movlw	0
  1500  000D22  ECB0  F005         	call	_LcGotoXY
  1501  000D26  0012               	return		;funcret
  1502  000D28                     __end_of_LcClear:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _init_ports *****************
  1506 ;; Defined at:
  1507 ;;		line 19 in file "main.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1
  1521 ;;      Params:         0       0       0
  1522 ;;      Locals:         0       0       0
  1523 ;;      Temps:          0       0       0
  1524 ;;      Totals:         0       0       0
  1525 ;;Total ram usage:        0 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 2
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text10
  1536  000D4C                     __ptext10:
  1537                           	callstack 0
  1538  000D4C                     _init_ports:
  1539                           	callstack 28
  1540                           
  1541                           ;incstack = 0
  1542  000D4C  0E03               	movlw	3
  1543  000D4E  6E92               	movwf	146,c	;volatile
  1544  000D50  0EE0               	movlw	224
  1545  000D52  6E93               	movwf	147,c	;volatile
  1546  000D54  968A               	bcf	138,3,c	;volatile
  1547  000D56  908A               	bcf	138,0,c	;volatile
  1548  000D58  928A               	bcf	138,1,c	;volatile
  1549                           
  1550                           ;main.c: 42:     TRISC = 0xC0;
  1551  000D5A  0EC0               	movlw	192
  1552  000D5C  6E94               	movwf	148,c	;volatile
  1553                           
  1554                           ;main.c: 52:     TRISD = 0x8F;
  1555  000D5E  0E8F               	movlw	143
  1556  000D60  6E95               	movwf	149,c	;volatile
  1557                           
  1558                           ;main.c: 53:     LATD = 0x00;
  1559  000D62  0E00               	movlw	0
  1560  000D64  6E8C               	movwf	140,c	;volatile
  1561                           
  1562                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1563  000D66  8EA6               	bsf	166,7,c	;volsfr
  1564                           
  1565                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1566  000D68  9CA6               	bcf	166,6,c	;volsfr
  1567  000D6A  0012               	return		;funcret
  1568  000D6C                     __end_of_init_ports:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _UmotorUsers *****************
  1572 ;; Defined at:
  1573 ;;		line 84 in file "Usuaris.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1
  1587 ;;      Params:         0       0       0
  1588 ;;      Locals:         0       0       0
  1589 ;;      Temps:          2       0       0
  1590 ;;      Totals:         2       0       0
  1591 ;;Total ram usage:        2 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 3
  1594 ;; This function calls:
  1595 ;;		_compareStrings
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text11
  1602  000B26                     __ptext11:
  1603                           	callstack 0
  1604  000B26                     _UmotorUsers:
  1605                           	callstack 27
  1606                           
  1607                           ;Usuaris.c: 85:     static char state = 0;;Usuaris.c: 87:  switch(state) {
  1608                           
  1609                           ;incstack = 0
  1610  000B26  D00C               	goto	l2513
  1611  000B28                     l528:
  1612                           
  1613                           ;Usuaris.c: 89:    if (do_check_exists == 0) {
  1614  000B28  A277               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1615  000B2A  0012               	return	
  1616                           
  1617                           ;Usuaris.c: 91:    else if (do_check_exists == 1) {
  1618  000B2C  A277               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1619  000B2E  0012               	return	
  1620                           
  1621                           ;Usuaris.c: 92:     return_error = 0;
  1622  000B30  9077               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1623                           
  1624                           ;Usuaris.c: 93:     state = 1;
  1625  000B32  0E01               	movlw	1
  1626  000B34  6E1F               	movwf	UmotorUsers@state^0,c
  1627  000B36  0012               	return	
  1628  000B38                     l534:
  1629                           
  1630                           ;Usuaris.c: 104:     do_check_exists = 0;
  1631  000B38  9277               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1632                           
  1633                           ;Usuaris.c: 105:     state = 0;
  1634  000B3A  0E00               	movlw	0
  1635  000B3C  6E1F               	movwf	UmotorUsers@state^0,c
  1636  000B3E  0012               	return	
  1637  000B40                     l2513:
  1638  000B40  501F               	movf	UmotorUsers@state^0,w,c
  1639  000B42  6E6C               	movwf	??_UmotorUsers^0,c
  1640  000B44  6A6D               	clrf	(??_UmotorUsers+1)^0,c
  1641                           
  1642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 1, Range of values is 0 to 0
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte            4     3 (average)
  1648                           ;	Chosen strategy is simple_byte
  1649  000B46  506D               	movf	(??_UmotorUsers+1)^0,w,c
  1650  000B48  0A00               	xorlw	0	; case 0
  1651  000B4A  A4D8               	btfss	status,2,c
  1652  000B4C  0012               	return	
  1653                           
  1654                           ; Switch size 1, requested type "simple"
  1655                           ; Number of cases is 3, Range of values is 0 to 2
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte           10     6 (average)
  1659                           ;	Chosen strategy is simple_byte
  1660  000B4E  506C               	movf	??_UmotorUsers^0,w,c
  1661  000B50  0A00               	xorlw	0	; case 0
  1662  000B52  B4D8               	btfsc	status,2,c
  1663  000B54  D7E9               	goto	l528
  1664  000B56  0A01               	xorlw	1	; case 1
  1665  000B58  B4D8               	btfsc	status,2,c
  1666  000B5A  D7EE               	goto	l534
  1667  000B5C  0A03               	xorlw	3	; case 2
  1668  000B5E  0012               	return	
  1669  000B60                     __end_of_UmotorUsers:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _compareStrings *****************
  1673 ;; Defined at:
  1674 ;;		line 74 in file "Usuaris.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  a               2    5[COMRAM] PTR const unsigned char 
  1677 ;;		 -> username(9), NULL(0), 
  1678 ;;  b               2    7[COMRAM] PTR const unsigned char 
  1679 ;;		 -> usuaris.username(9), usuaris(184), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      unsigned char 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1
  1691 ;;      Params:         4       0       0
  1692 ;;      Locals:         0       0       0
  1693 ;;      Temps:          2       0       0
  1694 ;;      Totals:         6       0       0
  1695 ;;Total ram usage:        6 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 2
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_UmotorUsers
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text12
  1706  000A50                     __ptext12:
  1707                           	callstack 0
  1708  000A50                     _compareStrings:
  1709                           	callstack 27
  1710                           
  1711                           ;Usuaris.c: 75:     while (*a){
  1712                           
  1713                           ;incstack = 0
  1714  000A50  D010               	goto	l2133
  1715  000A52                     l2127:
  1716                           
  1717                           ;Usuaris.c: 76:         if (*a != *b)break;
  1718  000A52  C068  FFD9         	movff	compareStrings@b,fsr2l
  1719  000A56  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  1720  000A5A  C066  FFE1         	movff	compareStrings@a,fsr1l
  1721  000A5E  C067  FFE2         	movff	compareStrings@a+1,fsr1h
  1722  000A62  50DE               	movf	postinc2,w,c
  1723  000A64  18E6               	xorwf	postinc1,w,c
  1724  000A66  A4D8               	btfss	status,2,c
  1725  000A68  D00B               	goto	u1400
  1726                           
  1727                           ;Usuaris.c: 77:         a++;
  1728  000A6A  4A66               	infsnz	compareStrings@a^0,f,c
  1729  000A6C  2A67               	incf	(compareStrings@a+1)^0,f,c
  1730                           
  1731                           ;Usuaris.c: 78:         b++;
  1732  000A6E  4A68               	infsnz	compareStrings@b^0,f,c
  1733  000A70  2A69               	incf	(compareStrings@b+1)^0,f,c
  1734  000A72                     l2133:
  1735                           
  1736                           ;Usuaris.c: 75:     while (*a){
  1737  000A72  C066  FFD9         	movff	compareStrings@a,fsr2l
  1738  000A76  C067  FFDA         	movff	compareStrings@a+1,fsr2h
  1739  000A7A  50DF               	movf	indf2,w,c
  1740  000A7C  A4D8               	btfss	status,2,c
  1741  000A7E  D7E9               	goto	l2127
  1742  000A80                     u1400:
  1743                           
  1744                           ;Usuaris.c: 80:     return *(const unsigned char*)a - *(const unsigned char*)b;
  1745  000A80  C068  FFD9         	movff	compareStrings@b,fsr2l
  1746  000A84  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  1747  000A88  50DF               	movf	indf2,w,c
  1748  000A8A  6E6A               	movwf	??_compareStrings^0,c
  1749  000A8C  C066  FFD9         	movff	compareStrings@a,fsr2l
  1750  000A90  C067  FFDA         	movff	compareStrings@a+1,fsr2h
  1751  000A94  50DF               	movf	indf2,w,c
  1752  000A96  6E6B               	movwf	(??_compareStrings+1)^0,c
  1753  000A98  506A               	movf	??_compareStrings^0,w,c
  1754  000A9A  5C6B               	subwf	(??_compareStrings+1)^0,w,c
  1755  000A9C  0012               	return		;funcret
  1756  000A9E                     __end_of_compareStrings:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _TiInitTimer *****************
  1760 ;; Defined at:
  1761 ;;		line 18 in file "TiTTimer.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1
  1775 ;;      Params:         0       0       0
  1776 ;;      Locals:         0       0       0
  1777 ;;      Temps:          0       0       0
  1778 ;;      Totals:         0       0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 2
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text13
  1790  000C0C                     __ptext13:
  1791                           	callstack 0
  1792  000C0C                     _TiInitTimer:
  1793                           	callstack 28
  1794                           
  1795                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1796                           
  1797                           ;incstack = 0
  1798  000C0C  9ED0               	bcf	208,7,c	;volatile
  1799                           
  1800                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1801  000C0E  8EF2               	bsf	242,7,c	;volatile
  1802                           
  1803                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1804  000C10  8CF2               	bsf	242,6,c	;volatile
  1805                           
  1806                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1807  000C12  8AF2               	bsf	242,5,c	;volatile
  1808                           
  1809                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1810  000C14  94F2               	bcf	242,2,c	;volatile
  1811                           
  1812                           ;TiTTimer.c: 25:     T0CON = 136;
  1813  000C16  0E88               	movlw	136
  1814  000C18  6ED5               	movwf	213,c	;volatile
  1815                           
  1816                           ;TiTTimer.c: 27:     TMR0H = 223;
  1817  000C1A  0EDF               	movlw	223
  1818  000C1C  6ED7               	movwf	215,c	;volatile
  1819                           
  1820                           ;TiTTimer.c: 28:     TMR0L = 148;
  1821  000C1E  0E94               	movlw	148
  1822  000C20  6ED6               	movwf	214,c	;volatile
  1823                           
  1824                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1825  000C22  8ED5               	bsf	213,7,c	;volatile
  1826                           
  1827                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1828  000C24  0E00               	movlw	0
  1829  000C26  6E27               	movwf	_counter^0,c
  1830  000C28                     l1527:
  1831  000C28  0E07               	movlw	7
  1832  000C2A  6427               	cpfsgt	_counter^0,c
  1833  000C2C  D001               	goto	l1531
  1834  000C2E  0012               	return	
  1835  000C30                     l1531:
  1836                           
  1837                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1838  000C30  5027               	movf	_counter^0,w,c
  1839  000C32  0D03               	mullw	3
  1840  000C34  50F3               	movf	243,w,c
  1841  000C36  0F03               	addlw	low (_s_Timers+2)
  1842  000C38  6ED9               	movwf	fsr2l,c
  1843  000C3A  6ADA               	clrf	fsr2h,c
  1844  000C3C  0E00               	movlw	0
  1845  000C3E  6EDF               	movwf	indf2,c
  1846                           
  1847                           ;TiTTimer.c: 33:     }
  1848  000C40  2A27               	incf	_counter^0,f,c
  1849  000C42  D7F2               	goto	l1527
  1850  000C44                     __end_of_TiInitTimer:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _TeTeclat *****************
  1854 ;; Defined at:
  1855 ;;		line 22 in file "TeTeclat.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1
  1869 ;;      Params:         0       0       0
  1870 ;;      Locals:         0       0       0
  1871 ;;      Temps:          3       0       0
  1872 ;;      Totals:         3       0       0
  1873 ;;Total ram usage:        3 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 3
  1876 ;; This function calls:
  1877 ;;		_MsetNovaTecla
  1878 ;;		_SsetNovaTecla
  1879 ;;		_TiGetTics
  1880 ;;		_TiResetTics
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text14
  1887  00061C                     __ptext14:
  1888                           	callstack 0
  1889  00061C                     _TeTeclat:
  1890                           	callstack 27
  1891                           
  1892                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1893                           
  1894                           ;incstack = 0
  1895  00061C  A083               	btfss	131,0,c	;volatile
  1896  00061E  D003               	goto	u1940
  1897  000620  6A6D               	clrf	??_TeTeclat^0,c
  1898  000622  2A6D               	incf	??_TeTeclat^0,f,c
  1899  000624  D001               	goto	u1948
  1900  000626                     u1940:
  1901  000626  6A6D               	clrf	??_TeTeclat^0,c
  1902  000628                     u1948:
  1903  000628  A283               	btfss	131,1,c	;volatile
  1904  00062A  D002               	goto	u1950
  1905  00062C  0E01               	movlw	1
  1906  00062E  D001               	goto	u1956
  1907  000630                     u1950:
  1908  000630  0E00               	movlw	0
  1909  000632                     u1956:
  1910  000632  0D02               	mullw	2
  1911  000634  CFF3 F06E          	movff	prodl,??_TeTeclat+1
  1912  000638  A483               	btfss	131,2,c	;volatile
  1913  00063A  D002               	goto	u1960
  1914  00063C  0E01               	movlw	1
  1915  00063E  D001               	goto	u1966
  1916  000640                     u1960:
  1917  000640  0E00               	movlw	0
  1918  000642                     u1966:
  1919  000642  0D03               	mullw	3
  1920  000644  CFF3 F06F          	movff	prodl,??_TeTeclat+2
  1921  000648  A683               	btfss	131,3,c	;volatile
  1922  00064A  D002               	goto	u1970
  1923  00064C  0E01               	movlw	1
  1924  00064E  D001               	goto	u1976
  1925  000650                     u1970:
  1926  000650  0E00               	movlw	0
  1927  000652                     u1976:
  1928  000652  0D04               	mullw	4
  1929  000654  50F3               	movf	243,w,c
  1930  000656  246F               	addwf	(??_TeTeclat+2)^0,w,c
  1931  000658  246E               	addwf	(??_TeTeclat+1)^0,w,c
  1932  00065A  246D               	addwf	??_TeTeclat^0,w,c
  1933  00065C  6E28               	movwf	TeTeclat@files^0,c
  1934                           
  1935                           ;TeTeclat.c: 27:  switch(state) {
  1936  00065E  D06F               	goto	l2595
  1937  000660                     l2521:
  1938                           
  1939                           ;TeTeclat.c: 29:    if (files==0) {
  1940  000660  5028               	movf	TeTeclat@files^0,w,c
  1941  000662  A4D8               	btfss	status,2,c
  1942  000664  D007               	goto	l2529
  1943                           
  1944                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1945  000666  888C               	bsf	140,4,c	;volatile
  1946                           
  1947                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1948  000668  9A8C               	bcf	140,5,c	;volatile
  1949                           
  1950                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1951  00066A  9C8C               	bcf	140,6,c	;volatile
  1952                           
  1953                           ;TeTeclat.c: 33:     cols=0;
  1954  00066C  0E00               	movlw	0
  1955  00066E  6E29               	movwf	TeTeclat@cols^0,c
  1956  000670                     l2527:
  1957                           
  1958                           ;TeTeclat.c: 34:     state++;
  1959  000670  2A2A               	incf	TeTeclat@state^0,f,c
  1960                           
  1961                           ;TeTeclat.c: 35:    }
  1962  000672  0012               	return	
  1963  000674                     l2529:
  1964  000674  5028               	movf	TeTeclat@files^0,w,c
  1965  000676  B4D8               	btfsc	status,2,c
  1966  000678  0012               	return	
  1967                           
  1968                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1969  00067A  502B               	movf	_tiTeclat^0,w,c
  1970  00067C  ECC4  F006         	call	_TiResetTics
  1971  000680                     l2533:
  1972                           
  1973                           ;TeTeclat.c: 38:     state = 3;
  1974  000680  0E03               	movlw	3
  1975  000682  6E2A               	movwf	TeTeclat@state^0,c
  1976  000684  0012               	return	
  1977  000686                     l2535:
  1978                           
  1979                           ;TeTeclat.c: 42:    if (files==0) {
  1980  000686  5028               	movf	TeTeclat@files^0,w,c
  1981  000688  A4D8               	btfss	status,2,c
  1982  00068A  D005               	goto	l2543
  1983                           
  1984                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  1985  00068C  988C               	bcf	140,4,c	;volatile
  1986                           
  1987                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  1988  00068E  8A8C               	bsf	140,5,c	;volatile
  1989                           
  1990                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  1991  000690  9C8C               	bcf	140,6,c	;volatile
  1992                           
  1993                           ;TeTeclat.c: 46:     cols=1;
  1994  000692  0E01               	movlw	1
  1995  000694  D7EC               	goto	L1
  1996  000696                     l2543:
  1997  000696  5028               	movf	TeTeclat@files^0,w,c
  1998  000698  B4D8               	btfsc	status,2,c
  1999  00069A  0012               	return	
  2000                           
  2001                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  2002  00069C  502B               	movf	_tiTeclat^0,w,c
  2003  00069E  ECC4  F006         	call	_TiResetTics
  2004  0006A2  D7EE               	goto	l2533
  2005  0006A4                     l2549:
  2006                           
  2007                           ;TeTeclat.c: 55:    if (files==0) {
  2008  0006A4  5028               	movf	TeTeclat@files^0,w,c
  2009  0006A6  A4D8               	btfss	status,2,c
  2010  0006A8  D008               	goto	l2555
  2011                           
  2012                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  2013  0006AA  988C               	bcf	140,4,c	;volatile
  2014                           
  2015                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  2016  0006AC  9A8C               	bcf	140,5,c	;volatile
  2017                           
  2018                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  2019  0006AE  8C8C               	bsf	140,6,c	;volatile
  2020                           
  2021                           ;TeTeclat.c: 59:     cols=2;
  2022  0006B0  0E02               	movlw	2
  2023  0006B2  6E29               	movwf	TeTeclat@cols^0,c
  2024                           
  2025                           ;TeTeclat.c: 60:     state = 0;
  2026  0006B4  0E00               	movlw	0
  2027  0006B6  6E2A               	movwf	TeTeclat@state^0,c
  2028                           
  2029                           ;TeTeclat.c: 61:    }
  2030  0006B8  0012               	return	
  2031  0006BA                     l2555:
  2032  0006BA  5028               	movf	TeTeclat@files^0,w,c
  2033  0006BC  B4D8               	btfsc	status,2,c
  2034  0006BE  0012               	return	
  2035                           
  2036                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  2037  0006C0  502B               	movf	_tiTeclat^0,w,c
  2038  0006C2  ECC4  F006         	call	_TiResetTics
  2039  0006C6  D7D4               	goto	l2527
  2040  0006C8                     l2561:
  2041                           
  2042                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  2043  0006C8  502B               	movf	_tiTeclat^0,w,c
  2044  0006CA  EC6C  F006         	call	_TiGetTics
  2045  0006CE  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2046  0006D0  0012               	return	
  2047  0006D2  D7CE               	goto	l2527
  2048  0006D4                     l2565:
  2049                           
  2050                           ;TeTeclat.c: 73:    if (files==0) {
  2051  0006D4  5028               	movf	TeTeclat@files^0,w,c
  2052  0006D6  A4D8               	btfss	status,2,c
  2053  0006D8  D003               	goto	l2569
  2054                           
  2055                           ;TeTeclat.c: 74:     state = 1;
  2056  0006DA  0E01               	movlw	1
  2057  0006DC  6E2A               	movwf	TeTeclat@state^0,c
  2058                           
  2059                           ;TeTeclat.c: 75:    }
  2060  0006DE  0012               	return	
  2061  0006E0                     l2569:
  2062  0006E0  5028               	movf	TeTeclat@files^0,w,c
  2063  0006E2  B4D8               	btfsc	status,2,c
  2064  0006E4  0012               	return	
  2065                           
  2066                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  2067  0006E6  5028               	movf	TeTeclat@files^0,w,c
  2068  0006E8  0D03               	mullw	3
  2069  0006EA  50F3               	movf	243,w,c
  2070  0006EC  0F52               	addlw	low (_teclaPremuda+253)
  2071  0006EE  2429               	addwf	TeTeclat@cols^0,w,c
  2072  0006F0  6ED9               	movwf	fsr2l,c
  2073  0006F2  6ADA               	clrf	fsr2h,c
  2074  0006F4  50DF               	movf	indf2,w,c
  2075  0006F6  ECF1  F006         	call	_MsetNovaTecla
  2076                           
  2077                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  2078  0006FA  5028               	movf	TeTeclat@files^0,w,c
  2079  0006FC  0D03               	mullw	3
  2080  0006FE  50F3               	movf	243,w,c
  2081  000700  0F52               	addlw	low (_teclaPremuda+253)
  2082  000702  2429               	addwf	TeTeclat@cols^0,w,c
  2083  000704  6ED9               	movwf	fsr2l,c
  2084  000706  6ADA               	clrf	fsr2h,c
  2085  000708  50DF               	movf	indf2,w,c
  2086  00070A  ECED  F006         	call	_SsetNovaTecla
  2087  00070E  D7B0               	goto	l2527
  2088  000710                     l2575:
  2089                           
  2090                           ;TeTeclat.c: 84:    if (files==0) {
  2091  000710  5028               	movf	TeTeclat@files^0,w,c
  2092  000712  A4D8               	btfss	status,2,c
  2093  000714  0012               	return	
  2094                           
  2095                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  2096  000716  502B               	movf	_tiTeclat^0,w,c
  2097  000718  ECC4  F006         	call	_TiResetTics
  2098  00071C  D7A9               	goto	l2527
  2099  00071E                     l2581:
  2100                           
  2101                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  2102  00071E  502B               	movf	_tiTeclat^0,w,c
  2103  000720  EC6C  F006         	call	_TiGetTics
  2104  000724  D7D4               	goto	L2
  2105  000726                     l2585:
  2106                           
  2107                           ;TeTeclat.c: 95:    if (files!=0) {
  2108  000726  5028               	movf	TeTeclat@files^0,w,c
  2109  000728  B4D8               	btfsc	status,2,c
  2110  00072A  D003               	goto	l2589
  2111                           
  2112                           ;TeTeclat.c: 96:     state = 5;
  2113  00072C  0E05               	movlw	5
  2114  00072E  6E2A               	movwf	TeTeclat@state^0,c
  2115                           
  2116                           ;TeTeclat.c: 97:    }
  2117  000730  0012               	return	
  2118  000732                     l2589:
  2119  000732  5028               	movf	TeTeclat@files^0,w,c
  2120  000734  A4D8               	btfss	status,2,c
  2121  000736  0012               	return	
  2122                           
  2123                           ;TeTeclat.c: 99:     state = 0;
  2124  000738  0E00               	movlw	0
  2125  00073A  6E2A               	movwf	TeTeclat@state^0,c
  2126  00073C  0012               	return	
  2127  00073E                     l2595:
  2128  00073E  502A               	movf	TeTeclat@state^0,w,c
  2129  000740  6E6D               	movwf	??_TeTeclat^0,c
  2130  000742  6A6E               	clrf	(??_TeTeclat+1)^0,c
  2131                           
  2132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 1, Range of values is 0 to 0
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte            4     3 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139  000744  506E               	movf	(??_TeTeclat+1)^0,w,c
  2140  000746  0A00               	xorlw	0	; case 0
  2141  000748  A4D8               	btfss	status,2,c
  2142  00074A  0012               	return	
  2143                           
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 8, Range of values is 0 to 7
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte           25    13 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  00074C  506D               	movf	??_TeTeclat^0,w,c
  2151  00074E  0A00               	xorlw	0	; case 0
  2152  000750  B4D8               	btfsc	status,2,c
  2153  000752  D786               	goto	l2521
  2154  000754  0A01               	xorlw	1	; case 1
  2155  000756  B4D8               	btfsc	status,2,c
  2156  000758  D796               	goto	l2535
  2157  00075A  0A03               	xorlw	3	; case 2
  2158  00075C  B4D8               	btfsc	status,2,c
  2159  00075E  D7A2               	goto	l2549
  2160  000760  0A01               	xorlw	1	; case 3
  2161  000762  B4D8               	btfsc	status,2,c
  2162  000764  D7B1               	goto	l2561
  2163  000766  0A07               	xorlw	7	; case 4
  2164  000768  B4D8               	btfsc	status,2,c
  2165  00076A  D7B4               	goto	l2565
  2166  00076C  0A01               	xorlw	1	; case 5
  2167  00076E  B4D8               	btfsc	status,2,c
  2168  000770  D7CF               	goto	l2575
  2169  000772  0A03               	xorlw	3	; case 6
  2170  000774  B4D8               	btfsc	status,2,c
  2171  000776  D7D3               	goto	l2581
  2172  000778  0A01               	xorlw	1	; case 7
  2173  00077A  A4D8               	btfss	status,2,c
  2174  00077C  0012               	return	
  2175  00077E  D7D3               	goto	l2585
  2176  000780                     __end_of_TeTeclat:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _SsetNovaTecla *****************
  2180 ;; Defined at:
  2181 ;;		line 110 in file "Ssms.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  tecla           1    wreg     unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  tecla           1    5[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1
  2195 ;;      Params:         0       0       0
  2196 ;;      Locals:         1       0       0
  2197 ;;      Temps:          0       0       0
  2198 ;;      Totals:         1       0       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 2
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_TeTeclat
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text15
  2210  000DDA                     __ptext15:
  2211                           	callstack 0
  2212  000DDA                     _SsetNovaTecla:
  2213                           	callstack 27
  2214                           
  2215                           ;incstack = 0
  2216                           ;SsetNovaTecla@tecla stored from wreg
  2217  000DDA  6E66               	movwf	SsetNovaTecla@tecla^0,c
  2218                           
  2219                           ;Ssms.c: 111:     novaTecla = tecla;
  2220  000DDC  C066  F053         	movff	SsetNovaTecla@tecla,_novaTecla
  2221  000DE0  0012               	return		;funcret
  2222  000DE2                     __end_of_SsetNovaTecla:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _MsetNovaTecla *****************
  2226 ;; Defined at:
  2227 ;;		line 19 in file "Menu.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  tecla           1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  tecla           1    5[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1
  2241 ;;      Params:         0       0       0
  2242 ;;      Locals:         1       0       0
  2243 ;;      Temps:          0       0       0
  2244 ;;      Totals:         1       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 2
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_TeTeclat
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text16
  2256  000DE2                     __ptext16:
  2257                           	callstack 0
  2258  000DE2                     _MsetNovaTecla:
  2259                           	callstack 27
  2260                           
  2261                           ;incstack = 0
  2262                           ;MsetNovaTecla@tecla stored from wreg
  2263  000DE2  6E66               	movwf	MsetNovaTecla@tecla^0,c
  2264                           
  2265                           ;Menu.c: 20:     NovaTecla = tecla;
  2266  000DE4  C066  F050         	movff	MsetNovaTecla@tecla,_NovaTecla
  2267  000DE8  0012               	return		;funcret
  2268  000DEA                     __end_of_MsetNovaTecla:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _TeInit *****************
  2272 ;; Defined at:
  2273 ;;		line 18 in file "TeTeclat.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1
  2287 ;;      Params:         0       0       0
  2288 ;;      Locals:         0       0       0
  2289 ;;      Temps:          0       0       0
  2290 ;;      Totals:         0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 3
  2294 ;; This function calls:
  2295 ;;		_TiGetTimer
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text17
  2302  000DEA                     __ptext17:
  2303                           	callstack 0
  2304  000DEA                     _TeInit:
  2305                           	callstack 27
  2306                           
  2307                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  2308                           
  2309                           ;incstack = 0
  2310  000DEA  ECCD  F005         	call	_TiGetTimer	;wreg free
  2311  000DEE  6E2B               	movwf	_tiTeclat^0,c
  2312  000DF0  0012               	return		;funcret
  2313  000DF2                     __end_of_TeInit:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _Sinit *****************
  2317 ;; Defined at:
  2318 ;;		line 16 in file "Ssms.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1
  2332 ;;      Params:         0       0       0
  2333 ;;      Locals:         0       0       0
  2334 ;;      Temps:          0       0       0
  2335 ;;      Totals:         0       0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 3
  2339 ;; This function calls:
  2340 ;;		_TiGetTimer
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text18
  2347  000DF2                     __ptext18:
  2348                           	callstack 0
  2349  000DF2                     _Sinit:
  2350                           	callstack 27
  2351                           
  2352                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2353                           
  2354                           ;incstack = 0
  2355  000DF2  ECCD  F005         	call	_TiGetTimer	;wreg free
  2356  000DF6  6E52               	movwf	_timerSMS^0,c
  2357  000DF8  0012               	return		;funcret
  2358  000DFA                     __end_of_Sinit:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _SMotor *****************
  2362 ;; Defined at:
  2363 ;;		line 21 in file "Ssms.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1
  2377 ;;      Params:         0       0       0
  2378 ;;      Locals:         0       0       0
  2379 ;;      Temps:          2       0       0
  2380 ;;      Totals:         2       0       0
  2381 ;;Total ram usage:        2 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 3
  2384 ;; This function calls:
  2385 ;;		_MNovaLletra
  2386 ;;		_TiGetTics
  2387 ;;		_TiResetTics
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text19
  2394  000470                     __ptext19:
  2395                           	callstack 0
  2396  000470                     _SMotor:
  2397                           	callstack 27
  2398                           
  2399                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  2400                           
  2401                           ;incstack = 0
  2402  000470  D0B7               	goto	l2331
  2403  000472                     l2203:
  2404                           
  2405                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  2406  000472  2853               	incf	_novaTecla^0,w,c
  2407  000474  A4D8               	btfss	status,2,c
  2408  000476  A677               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2409  000478  D006               	goto	l2211
  2410                           
  2411                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  2412  00047A  5052               	movf	_timerSMS^0,w,c
  2413  00047C  ECC4  F006         	call	_TiResetTics
  2414                           
  2415                           ;Ssms.c: 27:     state = 3;
  2416  000480  0E03               	movlw	3
  2417  000482  6E2C               	movwf	SMotor@state^0,c
  2418                           
  2419                           ;Ssms.c: 28:    }
  2420  000484  0012               	return	
  2421  000486                     l2211:
  2422  000486  2853               	incf	_novaTecla^0,w,c
  2423  000488  A4D8               	btfss	status,2,c
  2424  00048A  0012               	return	
  2425  00048C  5052               	movf	_timerSMS^0,w,c
  2426  00048E  EC6C  F006         	call	_TiGetTics
  2427  000492  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2428  000494  0012               	return	
  2429  000496  0E5A               	movlw	90
  2430  000498  5C66               	subwf	?_TiGetTics^0,w,c
  2431  00049A  0E02               	movlw	2
  2432  00049C  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  2433  00049E  A0D8               	btfss	status,0,c
  2434  0004A0  0012               	return	
  2435  0004A2  2854               	incf	_lletraASCII^0,w,c
  2436  0004A4  B4D8               	btfsc	status,2,c
  2437  0004A6  0012               	return	
  2438  0004A8  A677               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2439  0004AA  0012               	return	
  2440                           
  2441                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  2442  0004AC  5054               	movf	_lletraASCII^0,w,c
  2443  0004AE  ECFD  F006         	call	_MNovaLletra
  2444                           
  2445                           ;Ssms.c: 31:     lletraASCII = -1;
  2446  0004B2  6854               	setf	_lletraASCII^0,c
  2447                           
  2448                           ;Ssms.c: 32:     ultimaTecla = -1;
  2449  0004B4  6851               	setf	_ultimaTecla^0,c
  2450  0004B6  0012               	return	
  2451  0004B8                     l2225:
  2452                           
  2453                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  2454  0004B8  5051               	movf	_ultimaTecla^0,w,c
  2455  0004BA  1853               	xorwf	_novaTecla^0,w,c
  2456  0004BC  A4D8               	btfss	status,2,c
  2457  0004BE  D010               	goto	l2233
  2458  0004C0  5052               	movf	_timerSMS^0,w,c
  2459  0004C2  EC6C  F006         	call	_TiGetTics
  2460  0004C6  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2461  0004C8  D006               	goto	u1510
  2462  0004CA  0E5A               	movlw	90
  2463  0004CC  5C66               	subwf	?_TiGetTics^0,w,c
  2464  0004CE  0E02               	movlw	2
  2465  0004D0  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  2466  0004D2  B0D8               	btfsc	status,0,c
  2467  0004D4  D005               	goto	l2233
  2468  0004D6                     u1510:
  2469                           
  2470                           ;Ssms.c: 37:     novaTecla = -1;
  2471  0004D6  6853               	setf	_novaTecla^0,c
  2472                           
  2473                           ;Ssms.c: 38:     sumaPulsacions++;
  2474  0004D8  2A2D               	incf	_sumaPulsacions^0,f,c
  2475                           
  2476                           ;Ssms.c: 39:     lletraASCII++;
  2477  0004DA  2A54               	incf	_lletraASCII^0,f,c
  2478                           
  2479                           ;Ssms.c: 40:     state++;
  2480  0004DC  2A2C               	incf	SMotor@state^0,f,c
  2481                           
  2482                           ;Ssms.c: 41:    }
  2483  0004DE  0012               	return	
  2484  0004E0                     l2233:
  2485  0004E0  2853               	incf	_novaTecla^0,w,c
  2486  0004E2  B4D8               	btfsc	status,2,c
  2487  0004E4  0012               	return	
  2488  0004E6  5051               	movf	_ultimaTecla^0,w,c
  2489  0004E8  1853               	xorwf	_novaTecla^0,w,c
  2490  0004EA  B4D8               	btfsc	status,2,c
  2491  0004EC  0012               	return	
  2492                           
  2493                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  2494  0004EE  5054               	movf	_lletraASCII^0,w,c
  2495  0004F0  ECFD  F006         	call	_MNovaLletra
  2496                           
  2497                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  2498  0004F4  5053               	movf	_novaTecla^0,w,c
  2499  0004F6  0F44               	addlw	low (_lletraInici+254)
  2500  0004F8  6ED9               	movwf	fsr2l,c
  2501  0004FA  6ADA               	clrf	fsr2h,c
  2502  0004FC  50DF               	movf	indf2,w,c
  2503  0004FE  6E54               	movwf	_lletraASCII^0,c
  2504                           
  2505                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  2506  000500  C053  F051         	movff	_novaTecla,_ultimaTecla
  2507                           
  2508                           ;Ssms.c: 46:     sumaPulsacions = 0;
  2509  000504  0E00               	movlw	0
  2510  000506  6E2D               	movwf	_sumaPulsacions^0,c
  2511                           
  2512                           ;Ssms.c: 47:     novaTecla = -1;
  2513  000508  6853               	setf	_novaTecla^0,c
  2514                           
  2515                           ;Ssms.c: 48:     state--;
  2516  00050A  062C               	decf	SMotor@state^0,f,c
  2517  00050C  0012               	return	
  2518  00050E                     l2249:
  2519                           
  2520                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2521  00050E  0E07               	movlw	7
  2522  000510  1851               	xorwf	_ultimaTecla^0,w,c
  2523  000512  B4D8               	btfsc	status,2,c
  2524  000514  D007               	goto	l2255
  2525  000516  0E09               	movlw	9
  2526  000518  1851               	xorwf	_ultimaTecla^0,w,c
  2527  00051A  B4D8               	btfsc	status,2,c
  2528  00051C  D003               	goto	l2255
  2529                           
  2530                           ;Ssms.c: 53:     state = 5;
  2531  00051E  0E05               	movlw	5
  2532  000520  6E2C               	movwf	SMotor@state^0,c
  2533                           
  2534                           ;Ssms.c: 54:    }
  2535  000522  0012               	return	
  2536  000524                     l2255:
  2537  000524  0E07               	movlw	7
  2538  000526  1851               	xorwf	_ultimaTecla^0,w,c
  2539  000528  B4D8               	btfsc	status,2,c
  2540  00052A  D004               	goto	u1570
  2541  00052C  0E09               	movlw	9
  2542  00052E  1851               	xorwf	_ultimaTecla^0,w,c
  2543  000530  A4D8               	btfss	status,2,c
  2544  000532  0012               	return	
  2545  000534                     u1570:
  2546                           
  2547                           ;Ssms.c: 56:     state = 6;
  2548  000534  0E06               	movlw	6
  2549  000536  6E2C               	movwf	SMotor@state^0,c
  2550  000538  0012               	return	
  2551  00053A                     l2261:
  2552                           
  2553                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  2554  00053A  5053               	movf	_novaTecla^0,w,c
  2555  00053C  0A80               	xorlw	128
  2556  00053E  0F7E               	addlw	-130
  2557  000540  A0D8               	btfss	status,0,c
  2558  000542  D008               	goto	l2267
  2559  000544  5053               	movf	_novaTecla^0,w,c
  2560  000546  0A80               	xorlw	128
  2561  000548  0F76               	addlw	-138
  2562  00054A  B0D8               	btfsc	status,0,c
  2563  00054C  D003               	goto	l2267
  2564                           
  2565                           ;Ssms.c: 61:     state = 1;
  2566  00054E  0E01               	movlw	1
  2567  000550  6E2C               	movwf	SMotor@state^0,c
  2568                           
  2569                           ;Ssms.c: 62:    }
  2570  000552  0012               	return	
  2571  000554                     l2267:
  2572  000554  5053               	movf	_novaTecla^0,w,c
  2573  000556  0A80               	xorlw	128
  2574  000558  0F7E               	addlw	-130
  2575  00055A  B0D8               	btfsc	status,0,c
  2576  00055C  D00B               	goto	l2277
  2577  00055E  2854               	incf	_lletraASCII^0,w,c
  2578  000560  A4D8               	btfss	status,2,c
  2579  000562  D008               	goto	l2277
  2580                           
  2581                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  2582  000564  5053               	movf	_novaTecla^0,w,c
  2583  000566  0F30               	addlw	48
  2584  000568  ECFD  F006         	call	_MNovaLletra
  2585  00056C                     l2273:
  2586                           
  2587                           ;Ssms.c: 65:     novaTecla = -1;
  2588  00056C  6853               	setf	_novaTecla^0,c
  2589  00056E                     l2275:
  2590                           
  2591                           ;Ssms.c: 66:     state = 0;
  2592  00056E  0E00               	movlw	0
  2593  000570  6E2C               	movwf	SMotor@state^0,c
  2594                           
  2595                           ;Ssms.c: 67:    }
  2596  000572  0012               	return	
  2597  000574                     l2277:
  2598  000574  5053               	movf	_novaTecla^0,w,c
  2599  000576  0A80               	xorlw	128
  2600  000578  0F7E               	addlw	-130
  2601  00057A  B0D8               	btfsc	status,0,c
  2602  00057C  0012               	return	
  2603  00057E  2854               	incf	_lletraASCII^0,w,c
  2604  000580  B4D8               	btfsc	status,2,c
  2605  000582  0012               	return	
  2606                           
  2607                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  2608  000584  5054               	movf	_lletraASCII^0,w,c
  2609  000586  ECFD  F006         	call	_MNovaLletra
  2610                           
  2611                           ;Ssms.c: 70:     lletraASCII = -1;
  2612  00058A  6854               	setf	_lletraASCII^0,c
  2613                           
  2614                           ;Ssms.c: 71:     state++;
  2615  00058C  2A2C               	incf	SMotor@state^0,f,c
  2616  00058E  0012               	return	
  2617  000590                     l2287:
  2618                           
  2619                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  2620  000590  5053               	movf	_novaTecla^0,w,c
  2621  000592  0F30               	addlw	48
  2622  000594  ECFD  F006         	call	_MNovaLletra
  2623  000598  D7E9               	goto	l2273
  2624  00059A                     l2293:
  2625                           
  2626                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  2627  00059A  0E04               	movlw	4
  2628  00059C  182D               	xorwf	_sumaPulsacions^0,w,c
  2629  00059E  A4D8               	btfss	status,2,c
  2630  0005A0  D009               	goto	l2301
  2631  0005A2                     u1640:
  2632                           
  2633                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  2634  0005A2  5051               	movf	_ultimaTecla^0,w,c
  2635  0005A4  0F44               	addlw	low (_lletraInici+254)
  2636  0005A6  6ED9               	movwf	fsr2l,c
  2637  0005A8  6ADA               	clrf	fsr2h,c
  2638  0005AA  50DF               	movf	indf2,w,c
  2639  0005AC  6E54               	movwf	_lletraASCII^0,c
  2640                           
  2641                           ;Ssms.c: 82:     sumaPulsacions = 0;
  2642  0005AE  0E00               	movlw	0
  2643  0005B0  6E2D               	movwf	_sumaPulsacions^0,c
  2644  0005B2  D7DD               	goto	l2275
  2645  0005B4                     l2301:
  2646  0005B4  0E03               	movlw	3
  2647  0005B6  182D               	xorwf	_sumaPulsacions^0,w,c
  2648  0005B8  A4D8               	btfss	status,2,c
  2649  0005BA  D004               	goto	l2307
  2650  0005BC                     u1650:
  2651                           
  2652                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  2653  0005BC  5051               	movf	_ultimaTecla^0,w,c
  2654  0005BE  0F30               	addlw	48
  2655  0005C0  6E54               	movwf	_lletraASCII^0,c
  2656  0005C2  D7D5               	goto	l2275
  2657  0005C4                     l2307:
  2658  0005C4  0E03               	movlw	3
  2659  0005C6  602D               	cpfslt	_sumaPulsacions^0,c
  2660  0005C8  0012               	return	
  2661  0005CA  D7D1               	goto	l2275
  2662  0005CC                     l2311:
  2663                           
  2664                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  2665  0005CC  0E04               	movlw	4
  2666  0005CE  182D               	xorwf	_sumaPulsacions^0,w,c
  2667  0005D0  B4D8               	btfsc	status,2,c
  2668  0005D2  D7F4               	goto	u1650
  2669  0005D4  0E05               	movlw	5
  2670  0005D6  182D               	xorwf	_sumaPulsacions^0,w,c
  2671  0005D8  B4D8               	btfsc	status,2,c
  2672  0005DA  D7E3               	goto	u1640
  2673  0005DC  0E04               	movlw	4
  2674  0005DE  D7F3               	goto	L3
  2675  0005E0                     l2331:
  2676  0005E0  502C               	movf	SMotor@state^0,w,c
  2677  0005E2  6E6D               	movwf	??_SMotor^0,c
  2678  0005E4  6A6E               	clrf	(??_SMotor+1)^0,c
  2679                           
  2680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2681                           ; Switch size 1, requested type "simple"
  2682                           ; Number of cases is 1, Range of values is 0 to 0
  2683                           ; switch strategies available:
  2684                           ; Name         Instructions Cycles
  2685                           ; simple_byte            4     3 (average)
  2686                           ;	Chosen strategy is simple_byte
  2687  0005E6  506E               	movf	(??_SMotor+1)^0,w,c
  2688  0005E8  0A00               	xorlw	0	; case 0
  2689  0005EA  A4D8               	btfss	status,2,c
  2690  0005EC  0012               	return	
  2691                           
  2692                           ; Switch size 1, requested type "simple"
  2693                           ; Number of cases is 7, Range of values is 0 to 6
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte           22    12 (average)
  2697                           ;	Chosen strategy is simple_byte
  2698  0005EE  506D               	movf	??_SMotor^0,w,c
  2699  0005F0  0A00               	xorlw	0	; case 0
  2700  0005F2  B4D8               	btfsc	status,2,c
  2701  0005F4  D73E               	goto	l2203
  2702  0005F6  0A01               	xorlw	1	; case 1
  2703  0005F8  B4D8               	btfsc	status,2,c
  2704  0005FA  D75E               	goto	l2225
  2705  0005FC  0A03               	xorlw	3	; case 2
  2706  0005FE  B4D8               	btfsc	status,2,c
  2707  000600  D786               	goto	l2249
  2708  000602  0A01               	xorlw	1	; case 3
  2709  000604  B4D8               	btfsc	status,2,c
  2710  000606  D799               	goto	l2261
  2711  000608  0A07               	xorlw	7	; case 4
  2712  00060A  B4D8               	btfsc	status,2,c
  2713  00060C  D7C1               	goto	l2287
  2714  00060E  0A01               	xorlw	1	; case 5
  2715  000610  B4D8               	btfsc	status,2,c
  2716  000612  D7C3               	goto	l2293
  2717  000614  0A03               	xorlw	3	; case 6
  2718  000616  A4D8               	btfss	status,2,c
  2719  000618  0012               	return	
  2720  00061A  D7D8               	goto	l2311
  2721  00061C                     __end_of_SMotor:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _MNovaLletra *****************
  2725 ;; Defined at:
  2726 ;;		line 23 in file "Menu.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  lletra          1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  lletra          1    5[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1
  2740 ;;      Params:         0       0       0
  2741 ;;      Locals:         1       0       0
  2742 ;;      Temps:          0       0       0
  2743 ;;      Totals:         1       0       0
  2744 ;;Total ram usage:        1 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 2
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_SMotor
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text20
  2755  000DFA                     __ptext20:
  2756                           	callstack 0
  2757  000DFA                     _MNovaLletra:
  2758                           	callstack 27
  2759                           
  2760                           ;incstack = 0
  2761                           ;MNovaLletra@lletra stored from wreg
  2762  000DFA  6E66               	movwf	MNovaLletra@lletra^0,c
  2763                           
  2764                           ;Menu.c: 24:     novaLletra = lletra;
  2765  000DFC  C066  F04F         	movff	MNovaLletra@lletra,_novaLletra
  2766  000E00  0012               	return		;funcret
  2767  000E02                     __end_of_MNovaLletra:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _Minit *****************
  2771 ;; Defined at:
  2772 ;;		line 16 in file "Menu.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1
  2786 ;;      Params:         0       0       0
  2787 ;;      Locals:         0       0       0
  2788 ;;      Temps:          0       0       0
  2789 ;;      Totals:         0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 3
  2793 ;; This function calls:
  2794 ;;		_TiGetTimer
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text21
  2801  000E02                     __ptext21:
  2802                           	callstack 0
  2803  000E02                     _Minit:
  2804                           	callstack 27
  2805                           
  2806                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  2807                           
  2808                           ;incstack = 0
  2809  000E02  ECCD  F005         	call	_TiGetTimer	;wreg free
  2810  000E06  6E25               	movwf	_timerMenu^0,c
  2811  000E08  0012               	return		;funcret
  2812  000E0A                     __end_of_Minit:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _LcLCD *****************
  2816 ;; Defined at:
  2817 ;;		line 254 in file "LcTLCD.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1
  2831 ;;      Params:         0       0       0
  2832 ;;      Locals:         0       0       0
  2833 ;;      Temps:          0       0       0
  2834 ;;      Totals:         0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 6
  2838 ;; This function calls:
  2839 ;;		_LcPutChar
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text22
  2846  000CA8                     __ptext22:
  2847                           	callstack 0
  2848  000CA8                     _LcLCD:
  2849                           	callstack 24
  2850                           
  2851                           ;LcTLCD.c: 255:     if(nou_s == 1){
  2852                           
  2853                           ;incstack = 0
  2854  000CA8  A877               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2855  000CAA  0012               	return	
  2856                           
  2857                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  2858  000CAC  C02E  FFF6         	movff	_s_ptr,tblptrl
  2859  000CB0                     	if	1	;There is more than 1 active tblptr byte
  2860  000CB0  0E02               	movlw	high __smallconst
  2861  000CB2  6EF7               	movwf	tblptrh,c
  2862  000CB4                     	endif
  2863  000CB4                     	if	0	;tblptru may be non-zero
  2864  000CB4                     	endif
  2865  000CB4                     	if	0	;tblptru may be non-zero
  2866  000CB4                     	endif
  2867  000CB4  0008               	tblrd		*
  2868  000CB6  50F5               	movf	tablat,w,c
  2869  000CB8  ECFF  F004         	call	_LcPutChar
  2870                           
  2871                           ;LcTLCD.c: 257:         s_ptr++;
  2872  000CBC  2A2E               	incf	_s_ptr^0,f,c
  2873                           
  2874                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  2875  000CBE  C02E  FFF6         	movff	_s_ptr,tblptrl
  2876  000CC2                     	if	1	;There is more than 1 active tblptr byte
  2877  000CC2  0E02               	movlw	high __smallconst
  2878  000CC4  6EF7               	movwf	tblptrh,c
  2879  000CC6                     	endif
  2880  000CC6                     	if	0	;tblptru may be non-zero
  2881  000CC6                     	endif
  2882  000CC6                     	if	0	;tblptru may be non-zero
  2883  000CC6                     	endif
  2884  000CC6  0008               	tblrd		*
  2885  000CC8  50F5               	movf	tablat,w,c
  2886  000CCA  0900               	iorlw	0
  2887  000CCC  A4D8               	btfss	status,2,c
  2888  000CCE  0012               	return	
  2889                           
  2890                           ;LcTLCD.c: 259:             nou_s = 0;
  2891  000CD0  9877               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2892                           
  2893                           ;LcTLCD.c: 260:             s_ptr=0;
  2894  000CD2  0E00               	movlw	0
  2895  000CD4  6E2E               	movwf	_s_ptr^0,c
  2896  000CD6  0012               	return		;funcret
  2897  000CD8                     __end_of_LcLCD:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _LcPutChar *****************
  2901 ;; Defined at:
  2902 ;;		line 132 in file "LcTLCD.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  c               1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  c               1   19[COMRAM] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1
  2916 ;;      Params:         0       0       0
  2917 ;;      Locals:         1       0       0
  2918 ;;      Temps:          0       0       0
  2919 ;;      Totals:         1       0       0
  2920 ;;Total ram usage:        1 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 5
  2923 ;; This function calls:
  2924 ;;		_CantaData
  2925 ;;		_LcGotoXY
  2926 ;;		_WaitForBusy
  2927 ;; This function is called by:
  2928 ;;		_LcLCD
  2929 ;;		_menu
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text23
  2934  0009FE                     __ptext23:
  2935                           	callstack 0
  2936  0009FE                     _LcPutChar:
  2937                           	callstack 24
  2938                           
  2939                           ;incstack = 0
  2940                           ;LcPutChar@c stored from wreg
  2941  0009FE  6E74               	movwf	LcPutChar@c^0,c
  2942                           
  2943                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  2944  000A00  EC73  F005         	call	_WaitForBusy	;wreg free
  2945  000A04  5074               	movf	LcPutChar@c^0,w,c
  2946  000A06  EC22  F006         	call	_CantaData
  2947                           
  2948                           ;LcTLCD.c: 136:  ++ColumnAct;
  2949  000A0A  2A30               	incf	_ColumnAct^0,f,c
  2950                           
  2951                           ;LcTLCD.c: 138:  if (Rows == 2) {
  2952  000A0C  0E02               	movlw	2
  2953  000A0E  1833               	xorwf	_Rows^0,w,c
  2954  000A10  A4D8               	btfss	status,2,c
  2955  000A12  D010               	goto	l2111
  2956                           
  2957                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  2958  000A14  0E27               	movlw	39
  2959  000A16  6430               	cpfsgt	_ColumnAct^0,c
  2960  000A18  D00D               	goto	l2111
  2961                           
  2962                           ;LcTLCD.c: 140:    ColumnAct = 0;
  2963  000A1A  0E00               	movlw	0
  2964  000A1C  6E30               	movwf	_ColumnAct^0,c
  2965                           
  2966                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  2967  000A1E  2A31               	incf	_RowAct^0,f,c
  2968  000A20  0E01               	movlw	1
  2969  000A22  6431               	cpfsgt	_RowAct^0,c
  2970  000A24  D002               	goto	l2109
  2971  000A26  0E00               	movlw	0
  2972  000A28  6E31               	movwf	_RowAct^0,c
  2973  000A2A                     l2109:
  2974                           
  2975                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  2976  000A2A  C031  F06E         	movff	_RowAct,LcGotoXY@Row
  2977  000A2E  5030               	movf	_ColumnAct^0,w,c
  2978  000A30  ECB0  F005         	call	_LcGotoXY
  2979  000A34                     l2111:
  2980                           
  2981                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  2982  000A34  0431               	decf	_RowAct^0,w,c
  2983  000A36  A4D8               	btfss	status,2,c
  2984  000A38  0012               	return	
  2985                           
  2986                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  2987  000A3A  0E27               	movlw	39
  2988  000A3C  6430               	cpfsgt	_ColumnAct^0,c
  2989  000A3E  D002               	goto	l2117
  2990  000A40  0E00               	movlw	0
  2991  000A42  6E30               	movwf	_ColumnAct^0,c
  2992  000A44                     l2117:
  2993                           
  2994                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  2995  000A44  C031  F06E         	movff	_RowAct,LcGotoXY@Row
  2996  000A48  5030               	movf	_ColumnAct^0,w,c
  2997  000A4A  ECB0  F005         	call	_LcGotoXY
  2998  000A4E  0012               	return		;funcret
  2999  000A50                     __end_of_LcPutChar:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _LcGotoXY *****************
  3003 ;; Defined at:
  3004 ;;		line 104 in file "LcTLCD.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  Column          1    wreg     unsigned char 
  3007 ;;  Row             1   13[COMRAM] unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  Column          1   18[COMRAM] unsigned char 
  3010 ;;  Fisics          2   14[COMRAM] int 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1
  3020 ;;      Params:         1       0       0
  3021 ;;      Locals:         5       0       0
  3022 ;;      Temps:          0       0       0
  3023 ;;      Totals:         6       0       0
  3024 ;;Total ram usage:        6 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 4
  3027 ;; This function calls:
  3028 ;;		_CantaIR
  3029 ;;		_WaitForBusy
  3030 ;; This function is called by:
  3031 ;;		_LcClear
  3032 ;;		_LcPutChar
  3033 ;;		_menu
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text24
  3038  000B60                     __ptext24:
  3039                           	callstack 0
  3040  000B60                     _LcGotoXY:
  3041                           	callstack 24
  3042                           
  3043                           ;incstack = 0
  3044                           ;LcGotoXY@Column stored from wreg
  3045  000B60  6E73               	movwf	LcGotoXY@Column^0,c
  3046                           
  3047                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  3048  000B62  506E               	movf	LcGotoXY@Row^0,w,c
  3049  000B64  B4D8               	btfsc	status,2,c
  3050  000B66  D004               	goto	l2051
  3051  000B68  0E00               	movlw	0
  3052  000B6A  6E72               	movwf	(_LcGotoXY$342+1)^0,c
  3053  000B6C  0E40               	movlw	64
  3054  000B6E  D003               	goto	L4
  3055  000B70                     l2051:
  3056  000B70  0E00               	movlw	0
  3057  000B72  6E72               	movwf	(_LcGotoXY$342+1)^0,c
  3058  000B74  0E00               	movlw	0
  3059  000B76                     L4:
  3060  000B76  6E71               	movwf	_LcGotoXY$342^0,c
  3061  000B78  5073               	movf	LcGotoXY@Column^0,w,c
  3062  000B7A  2471               	addwf	_LcGotoXY$342^0,w,c
  3063  000B7C  6E6F               	movwf	LcGotoXY@Fisics^0,c
  3064  000B7E  0E00               	movlw	0
  3065  000B80  2072               	addwfc	(_LcGotoXY$342+1)^0,w,c
  3066  000B82  6E70               	movwf	(LcGotoXY@Fisics+1)^0,c
  3067                           
  3068                           ;LcTLCD.c: 125:  WaitForBusy();
  3069  000B84  EC73  F005         	call	_WaitForBusy	;wreg free
  3070                           
  3071                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  3072  000B88  506F               	movf	LcGotoXY@Fisics^0,w,c
  3073  000B8A  0980               	iorlw	128
  3074  000B8C  EC3B  F006         	call	_CantaIR
  3075                           
  3076                           ;LcTLCD.c: 128:  RowAct = Row;
  3077  000B90  C06E  F031         	movff	LcGotoXY@Row,_RowAct
  3078                           
  3079                           ;LcTLCD.c: 129:  ColumnAct = Column;
  3080  000B94  C073  F030         	movff	LcGotoXY@Column,_ColumnAct
  3081  000B98  0012               	return		;funcret
  3082  000B9A                     __end_of_LcGotoXY:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _CantaData *****************
  3086 ;; Defined at:
  3087 ;;		line 194 in file "LcTLCD.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  Data            1    wreg     unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  Data            1    7[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1
  3101 ;;      Params:         0       0       0
  3102 ;;      Locals:         1       0       0
  3103 ;;      Temps:          0       0       0
  3104 ;;      Totals:         1       0       0
  3105 ;;Total ram usage:        1 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 3
  3108 ;; This function calls:
  3109 ;;		_CantaPartAlta
  3110 ;;		_CantaPartBaixa
  3111 ;; This function is called by:
  3112 ;;		_LcPutChar
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text25
  3117  000C44                     __ptext25:
  3118                           	callstack 0
  3119  000C44                     _CantaData:
  3120                           	callstack 25
  3121                           
  3122                           ;incstack = 0
  3123                           ;CantaData@Data stored from wreg
  3124  000C44  6E68               	movwf	CantaData@Data^0,c
  3125                           
  3126                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3127  000C46  9694               	bcf	148,3,c	;volatile
  3128  000C48  9494               	bcf	148,2,c	;volatile
  3129  000C4A  9294               	bcf	148,1,c	;volatile
  3130  000C4C  9094               	bcf	148,0,c	;volatile
  3131                           
  3132                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  3133  000C4E  8A8B               	bsf	139,5,c	;volatile
  3134                           
  3135                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  3136  000C50  9E8C               	bcf	140,7,c	;volatile
  3137                           
  3138                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  3139  000C52  888B               	bsf	139,4,c	;volatile
  3140                           
  3141                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  3142  000C54  5068               	movf	CantaData@Data^0,w,c
  3143  000C56  EC9E  F004         	call	_CantaPartAlta
  3144                           
  3145                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  3146  000C5A  888B               	bsf	139,4,c	;volatile
  3147                           
  3148                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  3149  000C5C  988B               	bcf	139,4,c	;volatile
  3150                           
  3151                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  3152  000C5E  988B               	bcf	139,4,c	;volatile
  3153                           
  3154                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  3155  000C60  888B               	bsf	139,4,c	;volatile
  3156                           
  3157                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  3158  000C62  5068               	movf	CantaData@Data^0,w,c
  3159  000C64  EC6A  F004         	call	_CantaPartBaixa
  3160                           
  3161                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  3162  000C68  888B               	bsf	139,4,c	;volatile
  3163                           
  3164                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3165  000C6A  988B               	bcf	139,4,c	;volatile
  3166                           
  3167                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3168  000C6C  8694               	bsf	148,3,c	;volatile
  3169  000C6E  8494               	bsf	148,2,c	;volatile
  3170  000C70  8294               	bsf	148,1,c	;volatile
  3171  000C72  8094               	bsf	148,0,c	;volatile
  3172  000C74  0012               	return		;funcret
  3173  000C76                     __end_of_CantaData:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _LcInit *****************
  3177 ;; Defined at:
  3178 ;;		line 41 in file "LcTLCD.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  rows            1    wreg     unsigned char 
  3181 ;;  columns         1   16[COMRAM] unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  rows            1   17[COMRAM] unsigned char 
  3184 ;;  i               2   18[COMRAM] int 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1
  3194 ;;      Params:         1       0       0
  3195 ;;      Locals:         3       0       0
  3196 ;;      Temps:          0       0       0
  3197 ;;      Totals:         4       0       0
  3198 ;;Total ram usage:        4 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 5
  3201 ;; This function calls:
  3202 ;;		_CantaIR
  3203 ;;		_EscriuPrimeraOrdre
  3204 ;;		_Espera
  3205 ;;		_LcCursorOff
  3206 ;;		_TiGetTimer
  3207 ;;		_WaitForBusy
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text26
  3214  000780                     __ptext26:
  3215                           	callstack 0
  3216  000780                     _LcInit:
  3217                           	callstack 25
  3218                           
  3219                           ;incstack = 0
  3220                           ;LcInit@rows stored from wreg
  3221  000780  6E72               	movwf	LcInit@rows^0,c
  3222                           
  3223                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3224  000782  ECCD  F005         	call	_TiGetTimer	;wreg free
  3225  000786  6E2F               	movwf	_Timer^0,c
  3226                           
  3227                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3228  000788  C072  F033         	movff	LcInit@rows,_Rows
  3229  00078C  C071  F032         	movff	LcInit@columns,_Columns
  3230                           
  3231                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3232  000790  0E00               	movlw	0
  3233  000792  6E30               	movwf	_ColumnAct^0,c
  3234  000794  C030  F031         	movff	_ColumnAct,_RowAct
  3235                           
  3236                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3237  000798  9894               	bcf	148,4,c	;volatile
  3238  00079A  9E95               	bcf	149,7,c	;volatile
  3239  00079C  9A94               	bcf	148,5,c	;volatile
  3240                           
  3241                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3242  00079E  0E00               	movlw	0
  3243  0007A0  6E74               	movwf	(LcInit@i+1)^0,c
  3244  0007A2  0E00               	movlw	0
  3245  0007A4  6E73               	movwf	LcInit@i^0,c
  3246  0007A6                     l2155:
  3247                           
  3248                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3249  0007A6  0E00               	movlw	0
  3250  0007A8  6E6E               	movwf	(Espera@ms+1)^0,c
  3251  0007AA  0E64               	movlw	100
  3252  0007AC  6E6D               	movwf	Espera@ms^0,c
  3253  0007AE  502F               	movf	_Timer^0,w,c
  3254  0007B0  EC94  F006         	call	_Espera
  3255                           
  3256                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3257  0007B4  0E03               	movlw	3
  3258  0007B6  EC2D  F004         	call	_EscriuPrimeraOrdre
  3259                           
  3260                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3261  0007BA  0E00               	movlw	0
  3262  0007BC  6E6E               	movwf	(Espera@ms+1)^0,c
  3263  0007BE  0E05               	movlw	5
  3264  0007C0  6E6D               	movwf	Espera@ms^0,c
  3265  0007C2  502F               	movf	_Timer^0,w,c
  3266  0007C4  EC94  F006         	call	_Espera
  3267                           
  3268                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3269  0007C8  0E03               	movlw	3
  3270  0007CA  EC2D  F004         	call	_EscriuPrimeraOrdre
  3271                           
  3272                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3273  0007CE  0E00               	movlw	0
  3274  0007D0  6E6E               	movwf	(Espera@ms+1)^0,c
  3275  0007D2  0E01               	movlw	1
  3276  0007D4  6E6D               	movwf	Espera@ms^0,c
  3277  0007D6  502F               	movf	_Timer^0,w,c
  3278  0007D8  EC94  F006         	call	_Espera
  3279                           
  3280                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3281  0007DC  0E03               	movlw	3
  3282  0007DE  EC2D  F004         	call	_EscriuPrimeraOrdre
  3283                           
  3284                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3285  0007E2  0E00               	movlw	0
  3286  0007E4  6E6E               	movwf	(Espera@ms+1)^0,c
  3287  0007E6  0E01               	movlw	1
  3288  0007E8  6E6D               	movwf	Espera@ms^0,c
  3289  0007EA  502F               	movf	_Timer^0,w,c
  3290  0007EC  EC94  F006         	call	_Espera
  3291                           
  3292                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  3293  0007F0  0E02               	movlw	2
  3294  0007F2  EC2D  F004         	call	_EscriuPrimeraOrdre
  3295                           
  3296                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  3297  0007F6  0E00               	movlw	0
  3298  0007F8  6E6E               	movwf	(Espera@ms+1)^0,c
  3299  0007FA  0E04               	movlw	4
  3300  0007FC  6E6D               	movwf	Espera@ms^0,c
  3301  0007FE  502F               	movf	_Timer^0,w,c
  3302  000800  EC94  F006         	call	_Espera
  3303                           
  3304                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  3305  000804  0E28               	movlw	40
  3306  000806  EC3B  F006         	call	_CantaIR
  3307                           
  3308                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  3309  00080A  EC73  F005         	call	_WaitForBusy	;wreg free
  3310  00080E  0E08               	movlw	8
  3311  000810  EC3B  F006         	call	_CantaIR
  3312                           
  3313                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  3314  000814  EC73  F005         	call	_WaitForBusy	;wreg free
  3315  000818  0E01               	movlw	1
  3316  00081A  EC3B  F006         	call	_CantaIR
  3317                           
  3318                           ;LcTLCD.c: 71:   Espera(Timer,3);
  3319  00081E  0E00               	movlw	0
  3320  000820  6E6E               	movwf	(Espera@ms+1)^0,c
  3321  000822  0E03               	movlw	3
  3322  000824  6E6D               	movwf	Espera@ms^0,c
  3323  000826  502F               	movf	_Timer^0,w,c
  3324  000828  EC94  F006         	call	_Espera
  3325                           
  3326                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  3327  00082C  EC73  F005         	call	_WaitForBusy	;wreg free
  3328  000830  0E06               	movlw	6
  3329  000832  EC3B  F006         	call	_CantaIR
  3330                           
  3331                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  3332  000836  EC73  F005         	call	_WaitForBusy	;wreg free
  3333  00083A  0E0F               	movlw	15
  3334  00083C  EC3B  F006         	call	_CantaIR
  3335                           
  3336                           ;LcTLCD.c: 74:  }
  3337  000840  4A73               	infsnz	LcInit@i^0,f,c
  3338  000842  2A74               	incf	(LcInit@i+1)^0,f,c
  3339  000844  BE74               	btfsc	(LcInit@i+1)^0,7,c
  3340  000846  D7AF               	goto	l2155
  3341  000848  5074               	movf	(LcInit@i+1)^0,w,c
  3342  00084A  E104               	bnz	u1410
  3343  00084C  0E02               	movlw	2
  3344  00084E  5C73               	subwf	LcInit@i^0,w,c
  3345  000850  A0D8               	btfss	status,0,c
  3346  000852  D7A9               	goto	l2155
  3347  000854                     u1410:
  3348                           
  3349                           ;LcTLCD.c: 79:     LcCursorOff();
  3350  000854  ECE3  F006         	call	_LcCursorOff	;wreg free
  3351  000858  0012               	return		;funcret
  3352  00085A                     __end_of_LcInit:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _TiGetTimer *****************
  3356 ;; Defined at:
  3357 ;;		line 70 in file "TiTTimer.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      unsigned char 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1
  3371 ;;      Params:         0       0       0
  3372 ;;      Locals:         0       0       0
  3373 ;;      Temps:          1       0       0
  3374 ;;      Totals:         1       0       0
  3375 ;;Total ram usage:        1 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 2
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_LcInit
  3382 ;;		_Sinit
  3383 ;;		_TeInit
  3384 ;;		_Minit
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text27
  3389  000B9A                     __ptext27:
  3390                           	callstack 0
  3391  000B9A                     _TiGetTimer:
  3392                           	callstack 27
  3393                           
  3394                           ;TiTTimer.c: 74:     counter=0;
  3395                           
  3396                           ;incstack = 0
  3397  000B9A  0E00               	movlw	0
  3398  000B9C  6E27               	movwf	_counter^0,c
  3399                           
  3400                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3401  000B9E  D007               	goto	l1321
  3402  000BA0                     l1313:
  3403                           
  3404                           ;TiTTimer.c: 76:         counter++;
  3405  000BA0  2A27               	incf	_counter^0,f,c
  3406                           
  3407                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  3408  000BA2  0E08               	movlw	8
  3409  000BA4  1827               	xorwf	_counter^0,w,c
  3410  000BA6  A4D8               	btfss	status,2,c
  3411  000BA8  D002               	goto	l1321
  3412  000BAA  0EFF               	movlw	255
  3413  000BAC  0012               	return	
  3414  000BAE                     l1321:
  3415                           
  3416                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3417  000BAE  5027               	movf	_counter^0,w,c
  3418  000BB0  0D03               	mullw	3
  3419  000BB2  50F3               	movf	243,w,c
  3420  000BB4  0F03               	addlw	low (_s_Timers+2)
  3421  000BB6  6ED9               	movwf	fsr2l,c
  3422  000BB8  6ADA               	clrf	fsr2h,c
  3423  000BBA  04DE               	decf	postinc2,w,c
  3424  000BBC  B4D8               	btfsc	status,2,c
  3425  000BBE  D7F0               	goto	l1313
  3426                           
  3427                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  3428  000BC0  5027               	movf	_counter^0,w,c
  3429  000BC2  0D03               	mullw	3
  3430  000BC4  50F3               	movf	243,w,c
  3431  000BC6  0F03               	addlw	low (_s_Timers+2)
  3432  000BC8  6ED9               	movwf	fsr2l,c
  3433  000BCA  6ADA               	clrf	fsr2h,c
  3434  000BCC  0E01               	movlw	1
  3435  000BCE  6EDF               	movwf	indf2,c
  3436                           
  3437                           ;TiTTimer.c: 80:     return (counter);
  3438  000BD0  5027               	movf	_counter^0,w,c
  3439  000BD2  0012               	return		;funcret
  3440  000BD4                     __end_of_TiGetTimer:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _LcCursorOff *****************
  3444 ;; Defined at:
  3445 ;;		line 97 in file "LcTLCD.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1
  3459 ;;      Params:         0       0       0
  3460 ;;      Locals:         0       0       0
  3461 ;;      Temps:          0       0       0
  3462 ;;      Totals:         0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 4
  3466 ;; This function calls:
  3467 ;;		_CantaIR
  3468 ;;		_WaitForBusy
  3469 ;; This function is called by:
  3470 ;;		_LcInit
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text28
  3475  000DC6                     __ptext28:
  3476                           	callstack 0
  3477  000DC6                     _LcCursorOff:
  3478                           	callstack 25
  3479                           
  3480                           ;LcTLCD.c: 100:  WaitForBusy();
  3481                           
  3482                           ;incstack = 0
  3483  000DC6  EC73  F005         	call	_WaitForBusy	;wreg free
  3484                           
  3485                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  3486  000DCA  0E0C               	movlw	12
  3487  000DCC  EC3B  F006         	call	_CantaIR
  3488  000DD0  0012               	return		;funcret
  3489  000DD2                     __end_of_LcCursorOff:
  3490                           	callstack 0
  3491                           
  3492 ;; *************** function _WaitForBusy *****************
  3493 ;; Defined at:
  3494 ;;		line 210 in file "LcTLCD.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  Busy            1   12[COMRAM] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1
  3508 ;;      Params:         0       0       0
  3509 ;;      Locals:         1       0       0
  3510 ;;      Temps:          0       0       0
  3511 ;;      Totals:         1       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 3
  3515 ;; This function calls:
  3516 ;;		_TiGetTics
  3517 ;;		_TiResetTics
  3518 ;; This function is called by:
  3519 ;;		_LcInit
  3520 ;;		_LcClear
  3521 ;;		_LcCursorOff
  3522 ;;		_LcGotoXY
  3523 ;;		_LcPutChar
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text29
  3528  000AE6                     __ptext29:
  3529                           	callstack 0
  3530  000AE6                     _WaitForBusy:
  3531                           	callstack 25
  3532                           
  3533                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3534                           
  3535                           ;incstack = 0
  3536  000AE6  8694               	bsf	148,3,c	;volatile
  3537  000AE8  8494               	bsf	148,2,c	;volatile
  3538  000AEA  8294               	bsf	148,1,c	;volatile
  3539  000AEC  8094               	bsf	148,0,c	;volatile
  3540                           
  3541                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  3542  000AEE  9A8B               	bcf	139,5,c	;volatile
  3543                           
  3544                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  3545  000AF0  8E8C               	bsf	140,7,c	;volatile
  3546                           
  3547                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  3548  000AF2  502F               	movf	_Timer^0,w,c
  3549  000AF4  ECC4  F006         	call	_TiResetTics
  3550  000AF8                     l2019:
  3551                           
  3552                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3553  000AF8  888B               	bsf	139,4,c	;volatile
  3554  000AFA  888B               	bsf	139,4,c	;volatile
  3555                           
  3556                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  3557  000AFC  0E00               	movlw	0
  3558  000AFE  B682               	btfsc	130,3,c	;volatile
  3559  000B00  0E01               	movlw	1
  3560  000B02  6E6D               	movwf	WaitForBusy@Busy^0,c
  3561                           
  3562                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  3563  000B04  988B               	bcf	139,4,c	;volatile
  3564                           
  3565                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  3566  000B06  988B               	bcf	139,4,c	;volatile
  3567                           
  3568                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3569  000B08  888B               	bsf	139,4,c	;volatile
  3570  000B0A  888B               	bsf	139,4,c	;volatile
  3571                           
  3572                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  3573  000B0C  988B               	bcf	139,4,c	;volatile
  3574                           
  3575                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  3576  000B0E  988B               	bcf	139,4,c	;volatile
  3577                           
  3578                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  3579  000B10  502F               	movf	_Timer^0,w,c
  3580  000B12  EC6C  F006         	call	_TiGetTics
  3581  000B16  5066               	movf	?_TiGetTics^0,w,c
  3582  000B18  1067               	iorwf	(?_TiGetTics+1)^0,w,c
  3583  000B1A  A4D8               	btfss	status,2,c
  3584  000B1C  0012               	return	
  3585                           
  3586                           ;LcTLCD.c: 225:  } while(Busy);
  3587  000B1E  506D               	movf	WaitForBusy@Busy^0,w,c
  3588  000B20  B4D8               	btfsc	status,2,c
  3589  000B22  0012               	return	
  3590  000B24  D7E9               	goto	l2019
  3591  000B26                     __end_of_WaitForBusy:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _CantaIR *****************
  3595 ;; Defined at:
  3596 ;;		line 178 in file "LcTLCD.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  IR              1    wreg     unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  IR              1    7[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1
  3610 ;;      Params:         0       0       0
  3611 ;;      Locals:         1       0       0
  3612 ;;      Temps:          0       0       0
  3613 ;;      Totals:         1       0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 3
  3617 ;; This function calls:
  3618 ;;		_CantaPartAlta
  3619 ;;		_CantaPartBaixa
  3620 ;; This function is called by:
  3621 ;;		_LcInit
  3622 ;;		_LcClear
  3623 ;;		_LcCursorOff
  3624 ;;		_LcGotoXY
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text30
  3629  000C76                     __ptext30:
  3630                           	callstack 0
  3631  000C76                     _CantaIR:
  3632                           	callstack 24
  3633                           
  3634                           ;incstack = 0
  3635                           ;CantaIR@IR stored from wreg
  3636  000C76  6E68               	movwf	CantaIR@IR^0,c
  3637                           
  3638                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3639  000C78  9694               	bcf	148,3,c	;volatile
  3640  000C7A  9494               	bcf	148,2,c	;volatile
  3641  000C7C  9294               	bcf	148,1,c	;volatile
  3642  000C7E  9094               	bcf	148,0,c	;volatile
  3643                           
  3644                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  3645  000C80  9A8B               	bcf	139,5,c	;volatile
  3646                           
  3647                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  3648  000C82  9E8C               	bcf	140,7,c	;volatile
  3649                           
  3650                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  3651  000C84  888B               	bsf	139,4,c	;volatile
  3652                           
  3653                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  3654  000C86  5068               	movf	CantaIR@IR^0,w,c
  3655  000C88  EC9E  F004         	call	_CantaPartAlta
  3656                           
  3657                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  3658  000C8C  888B               	bsf	139,4,c	;volatile
  3659                           
  3660                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  3661  000C8E  988B               	bcf	139,4,c	;volatile
  3662                           
  3663                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  3664  000C90  988B               	bcf	139,4,c	;volatile
  3665                           
  3666                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  3667  000C92  888B               	bsf	139,4,c	;volatile
  3668                           
  3669                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  3670  000C94  5068               	movf	CantaIR@IR^0,w,c
  3671  000C96  EC6A  F004         	call	_CantaPartBaixa
  3672                           
  3673                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  3674  000C9A  888B               	bsf	139,4,c	;volatile
  3675                           
  3676                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  3677  000C9C  988B               	bcf	139,4,c	;volatile
  3678                           
  3679                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3680  000C9E  8694               	bsf	148,3,c	;volatile
  3681  000CA0  8494               	bsf	148,2,c	;volatile
  3682  000CA2  8294               	bsf	148,1,c	;volatile
  3683  000CA4  8094               	bsf	148,0,c	;volatile
  3684  000CA6  0012               	return		;funcret
  3685  000CA8                     __end_of_CantaIR:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _CantaPartBaixa *****************
  3689 ;; Defined at:
  3690 ;;		line 171 in file "LcTLCD.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  c               1    wreg     unsigned char 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  c               1    6[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1
  3704 ;;      Params:         0       0       0
  3705 ;;      Locals:         1       0       0
  3706 ;;      Temps:          1       0       0
  3707 ;;      Totals:         2       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 2
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_CantaIR
  3715 ;;		_CantaData
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text31
  3720  0008D4                     __ptext31:
  3721                           	callstack 0
  3722  0008D4                     _CantaPartBaixa:
  3723                           	callstack 24
  3724                           
  3725                           ;incstack = 0
  3726                           ;CantaPartBaixa@c stored from wreg
  3727  0008D4  6E67               	movwf	CantaPartBaixa@c^0,c
  3728                           
  3729                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  3730  0008D6  A667               	btfss	CantaPartBaixa@c^0,3,c
  3731  0008D8  D003               	goto	u1220
  3732  0008DA  6A66               	clrf	??_CantaPartBaixa^0,c
  3733  0008DC  2A66               	incf	??_CantaPartBaixa^0,f,c
  3734  0008DE  D001               	goto	u1238
  3735  0008E0                     u1220:
  3736  0008E0  6A66               	clrf	??_CantaPartBaixa^0,c
  3737  0008E2                     u1238:
  3738  0008E2  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3739  0008E4  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3740  0008E6  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3741  0008E8  508B               	movf	139,w,c	;volatile
  3742  0008EA  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3743  0008EC  0BF7               	andlw	-9
  3744  0008EE  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3745  0008F0  6E8B               	movwf	139,c	;volatile
  3746                           
  3747                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  3748  0008F2  A467               	btfss	CantaPartBaixa@c^0,2,c
  3749  0008F4  D003               	goto	u1240
  3750  0008F6  6A66               	clrf	??_CantaPartBaixa^0,c
  3751  0008F8  2A66               	incf	??_CantaPartBaixa^0,f,c
  3752  0008FA  D001               	goto	u1258
  3753  0008FC                     u1240:
  3754  0008FC  6A66               	clrf	??_CantaPartBaixa^0,c
  3755  0008FE                     u1258:
  3756  0008FE  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3757  000900  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3758  000902  508B               	movf	139,w,c	;volatile
  3759  000904  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3760  000906  0BFB               	andlw	-5
  3761  000908  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3762  00090A  6E8B               	movwf	139,c	;volatile
  3763                           
  3764                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  3765  00090C  A267               	btfss	CantaPartBaixa@c^0,1,c
  3766  00090E  D003               	goto	u1260
  3767  000910  6A66               	clrf	??_CantaPartBaixa^0,c
  3768  000912  2A66               	incf	??_CantaPartBaixa^0,f,c
  3769  000914  D001               	goto	u1278
  3770  000916                     u1260:
  3771  000916  6A66               	clrf	??_CantaPartBaixa^0,c
  3772  000918                     u1278:
  3773  000918  4666               	rlncf	??_CantaPartBaixa^0,f,c
  3774  00091A  508B               	movf	139,w,c	;volatile
  3775  00091C  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3776  00091E  0BFD               	andlw	-3
  3777  000920  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3778  000922  6E8B               	movwf	139,c	;volatile
  3779                           
  3780                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  3781  000924  A067               	btfss	CantaPartBaixa@c^0,0,c
  3782  000926  D003               	goto	u1280
  3783  000928  6A66               	clrf	??_CantaPartBaixa^0,c
  3784  00092A  2A66               	incf	??_CantaPartBaixa^0,f,c
  3785  00092C  D001               	goto	u1298
  3786  00092E                     u1280:
  3787  00092E  6A66               	clrf	??_CantaPartBaixa^0,c
  3788  000930                     u1298:
  3789  000930  508B               	movf	139,w,c	;volatile
  3790  000932  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3791  000934  0BFE               	andlw	-2
  3792  000936  1866               	xorwf	??_CantaPartBaixa^0,w,c
  3793  000938  6E8B               	movwf	139,c	;volatile
  3794  00093A  0012               	return		;funcret
  3795  00093C                     __end_of_CantaPartBaixa:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _CantaPartAlta *****************
  3799 ;; Defined at:
  3800 ;;		line 164 in file "LcTLCD.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  c               1    wreg     unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  c               1    6[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1
  3814 ;;      Params:         0       0       0
  3815 ;;      Locals:         1       0       0
  3816 ;;      Temps:          1       0       0
  3817 ;;      Totals:         2       0       0
  3818 ;;Total ram usage:        2 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 2
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_CantaIR
  3825 ;;		_CantaData
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text32
  3830  00093C                     __ptext32:
  3831                           	callstack 0
  3832  00093C                     _CantaPartAlta:
  3833                           	callstack 24
  3834                           
  3835                           ;incstack = 0
  3836                           ;CantaPartAlta@c stored from wreg
  3837  00093C  6E67               	movwf	CantaPartAlta@c^0,c
  3838                           
  3839                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  3840  00093E  AE67               	btfss	CantaPartAlta@c^0,7,c
  3841  000940  D003               	goto	u1140
  3842  000942  6A66               	clrf	??_CantaPartAlta^0,c
  3843  000944  2A66               	incf	??_CantaPartAlta^0,f,c
  3844  000946  D001               	goto	u1158
  3845  000948                     u1140:
  3846  000948  6A66               	clrf	??_CantaPartAlta^0,c
  3847  00094A                     u1158:
  3848  00094A  4666               	rlncf	??_CantaPartAlta^0,f,c
  3849  00094C  4666               	rlncf	??_CantaPartAlta^0,f,c
  3850  00094E  4666               	rlncf	??_CantaPartAlta^0,f,c
  3851  000950  508B               	movf	139,w,c	;volatile
  3852  000952  1866               	xorwf	??_CantaPartAlta^0,w,c
  3853  000954  0BF7               	andlw	-9
  3854  000956  1866               	xorwf	??_CantaPartAlta^0,w,c
  3855  000958  6E8B               	movwf	139,c	;volatile
  3856                           
  3857                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  3858  00095A  AC67               	btfss	CantaPartAlta@c^0,6,c
  3859  00095C  D003               	goto	u1160
  3860  00095E  6A66               	clrf	??_CantaPartAlta^0,c
  3861  000960  2A66               	incf	??_CantaPartAlta^0,f,c
  3862  000962  D001               	goto	u1178
  3863  000964                     u1160:
  3864  000964  6A66               	clrf	??_CantaPartAlta^0,c
  3865  000966                     u1178:
  3866  000966  4666               	rlncf	??_CantaPartAlta^0,f,c
  3867  000968  4666               	rlncf	??_CantaPartAlta^0,f,c
  3868  00096A  508B               	movf	139,w,c	;volatile
  3869  00096C  1866               	xorwf	??_CantaPartAlta^0,w,c
  3870  00096E  0BFB               	andlw	-5
  3871  000970  1866               	xorwf	??_CantaPartAlta^0,w,c
  3872  000972  6E8B               	movwf	139,c	;volatile
  3873                           
  3874                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  3875  000974  AA67               	btfss	CantaPartAlta@c^0,5,c
  3876  000976  D003               	goto	u1180
  3877  000978  6A66               	clrf	??_CantaPartAlta^0,c
  3878  00097A  2A66               	incf	??_CantaPartAlta^0,f,c
  3879  00097C  D001               	goto	u1198
  3880  00097E                     u1180:
  3881  00097E  6A66               	clrf	??_CantaPartAlta^0,c
  3882  000980                     u1198:
  3883  000980  4666               	rlncf	??_CantaPartAlta^0,f,c
  3884  000982  508B               	movf	139,w,c	;volatile
  3885  000984  1866               	xorwf	??_CantaPartAlta^0,w,c
  3886  000986  0BFD               	andlw	-3
  3887  000988  1866               	xorwf	??_CantaPartAlta^0,w,c
  3888  00098A  6E8B               	movwf	139,c	;volatile
  3889                           
  3890                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  3891  00098C  A867               	btfss	CantaPartAlta@c^0,4,c
  3892  00098E  D003               	goto	u1200
  3893  000990  6A66               	clrf	??_CantaPartAlta^0,c
  3894  000992  2A66               	incf	??_CantaPartAlta^0,f,c
  3895  000994  D001               	goto	u1218
  3896  000996                     u1200:
  3897  000996  6A66               	clrf	??_CantaPartAlta^0,c
  3898  000998                     u1218:
  3899  000998  508B               	movf	139,w,c	;volatile
  3900  00099A  1866               	xorwf	??_CantaPartAlta^0,w,c
  3901  00099C  0BFE               	andlw	-2
  3902  00099E  1866               	xorwf	??_CantaPartAlta^0,w,c
  3903  0009A0  6E8B               	movwf	139,c	;volatile
  3904  0009A2  0012               	return		;funcret
  3905  0009A4                     __end_of_CantaPartAlta:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function _Espera *****************
  3909 ;; Defined at:
  3910 ;;		line 159 in file "LcTLCD.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  Timer           1    wreg     unsigned char 
  3913 ;;  ms              2   12[COMRAM] int 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  Timer           1   15[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1
  3925 ;;      Params:         2       0       0
  3926 ;;      Locals:         1       0       0
  3927 ;;      Temps:          1       0       0
  3928 ;;      Totals:         4       0       0
  3929 ;;Total ram usage:        4 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 3
  3932 ;; This function calls:
  3933 ;;		_TiGetTics
  3934 ;;		_TiResetTics
  3935 ;; This function is called by:
  3936 ;;		_LcInit
  3937 ;;		_LcClear
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text33
  3942  000D28                     __ptext33:
  3943                           	callstack 0
  3944  000D28                     _Espera:
  3945                           	callstack 25
  3946                           
  3947                           ;incstack = 0
  3948                           ;Espera@Timer stored from wreg
  3949  000D28  6E70               	movwf	Espera@Timer^0,c
  3950                           
  3951                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  3952  000D2A  5070               	movf	Espera@Timer^0,w,c
  3953  000D2C  ECC4  F006         	call	_TiResetTics
  3954  000D30                     l2045:
  3955  000D30  5070               	movf	Espera@Timer^0,w,c
  3956  000D32  EC6C  F006         	call	_TiGetTics
  3957  000D36  506D               	movf	Espera@ms^0,w,c
  3958  000D38  5C66               	subwf	?_TiGetTics^0,w,c
  3959  000D3A  5067               	movf	(?_TiGetTics+1)^0,w,c
  3960  000D3C  0A80               	xorlw	128
  3961  000D3E  6E6F               	movwf	??_Espera^0,c
  3962  000D40  506E               	movf	(Espera@ms+1)^0,w,c
  3963  000D42  0A80               	xorlw	128
  3964  000D44  586F               	subwfb	??_Espera^0,w,c
  3965  000D46  B0D8               	btfsc	status,0,c
  3966  000D48  0012               	return	
  3967  000D4A  D7F2               	goto	l2045
  3968  000D4C                     __end_of_Espera:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _TiResetTics *****************
  3972 ;; Defined at:
  3973 ;;		line 55 in file "TiTTimer.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  Handle          1    wreg     unsigned char 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  Handle          1    5[COMRAM] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1
  3987 ;;      Params:         0       0       0
  3988 ;;      Locals:         1       0       0
  3989 ;;      Temps:          0       0       0
  3990 ;;      Totals:         1       0       0
  3991 ;;Total ram usage:        1 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 2
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_Espera
  3998 ;;		_WaitForBusy
  3999 ;;		_SMotor
  4000 ;;		_TeTeclat
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text34
  4005  000D88                     __ptext34:
  4006                           	callstack 0
  4007  000D88                     _TiResetTics:
  4008                           	callstack 25
  4009                           
  4010                           ;incstack = 0
  4011                           ;TiResetTics@Handle stored from wreg
  4012  000D88  6E66               	movwf	TiResetTics@Handle^0,c
  4013                           
  4014                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  4015  000D8A  5066               	movf	TiResetTics@Handle^0,w,c
  4016  000D8C  0D03               	mullw	3
  4017  000D8E  50F3               	movf	243,w,c
  4018  000D90  0F01               	addlw	low _s_Timers
  4019  000D92  6ED9               	movwf	fsr2l,c
  4020  000D94  6ADA               	clrf	fsr2h,c
  4021  000D96  C01D  FFDE         	movff	_h_Tics,postinc2
  4022  000D9A  C01E  FFDD         	movff	_h_Tics+1,postdec2
  4023  000D9E  0012               	return		;funcret
  4024  000DA0                     __end_of_TiResetTics:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _TiGetTics *****************
  4028 ;; Defined at:
  4029 ;;		line 61 in file "TiTTimer.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  Handle          1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  Handle          1    9[COMRAM] unsigned char 
  4034 ;;  actual          2   10[COMRAM] volatile unsigned int 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  2    5[COMRAM] int 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1
  4044 ;;      Params:         2       0       0
  4045 ;;      Locals:         3       0       0
  4046 ;;      Temps:          2       0       0
  4047 ;;      Totals:         7       0       0
  4048 ;;Total ram usage:        7 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 2
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_Espera
  4055 ;;		_WaitForBusy
  4056 ;;		_SMotor
  4057 ;;		_TeTeclat
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text35
  4062  000CD8                     __ptext35:
  4063                           	callstack 0
  4064  000CD8                     _TiGetTics:
  4065                           	callstack 25
  4066                           
  4067                           ;incstack = 0
  4068                           ;TiGetTics@Handle stored from wreg
  4069  000CD8  6E6A               	movwf	TiGetTics@Handle^0,c
  4070                           
  4071                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  4072  000CDA  C01D  F06B         	movff	_h_Tics,TiGetTics@actual	;volatile
  4073  000CDE  C01E  F06C         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  4074                           
  4075                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  4076  000CE2  506A               	movf	TiGetTics@Handle^0,w,c
  4077  000CE4  0D03               	mullw	3
  4078  000CE6  50F3               	movf	243,w,c
  4079  000CE8  0F01               	addlw	low _s_Timers
  4080  000CEA  6ED9               	movwf	fsr2l,c
  4081  000CEC  6ADA               	clrf	fsr2h,c
  4082  000CEE  CFDE F068          	movff	postinc2,??_TiGetTics
  4083  000CF2  CFDD F069          	movff	postdec2,??_TiGetTics+1
  4084  000CF6  5068               	movf	??_TiGetTics^0,w,c
  4085  000CF8  5C6B               	subwf	TiGetTics@actual^0,w,c	;volatile
  4086  000CFA  6E66               	movwf	?_TiGetTics^0,c
  4087  000CFC  5069               	movf	(??_TiGetTics+1)^0,w,c
  4088  000CFE  586C               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  4089  000D00  6E67               	movwf	(?_TiGetTics+1)^0,c
  4090  000D02  0012               	return		;funcret
  4091  000D04                     __end_of_TiGetTics:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _EscriuPrimeraOrdre *****************
  4095 ;; Defined at:
  4096 ;;		line 228 in file "LcTLCD.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  ordre           1    wreg     unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  ordre           1    6[COMRAM] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1
  4110 ;;      Params:         0       0       0
  4111 ;;      Locals:         1       0       0
  4112 ;;      Temps:          1       0       0
  4113 ;;      Totals:         2       0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 2
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_LcInit
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text36
  4125  00085A                     __ptext36:
  4126                           	callstack 0
  4127  00085A                     _EscriuPrimeraOrdre:
  4128                           	callstack 27
  4129                           
  4130                           ;incstack = 0
  4131                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4132  00085A  6E67               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4133                           
  4134                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4135  00085C  9694               	bcf	148,3,c	;volatile
  4136  00085E  9494               	bcf	148,2,c	;volatile
  4137  000860  9294               	bcf	148,1,c	;volatile
  4138  000862  9094               	bcf	148,0,c	;volatile
  4139  000864  9A8B               	bcf	139,5,c	;volatile
  4140  000866  9E8C               	bcf	140,7,c	;volatile
  4141                           
  4142                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4143  000868  888B               	bsf	139,4,c	;volatile
  4144  00086A  888B               	bsf	139,4,c	;volatile
  4145                           
  4146                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4147  00086C  A667               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4148  00086E  D003               	goto	u230
  4149  000870  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4150  000872  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4151  000874  D001               	goto	u248
  4152  000876                     u230:
  4153  000876  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4154  000878                     u248:
  4155  000878  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4156  00087A  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4157  00087C  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4158  00087E  508B               	movf	139,w,c	;volatile
  4159  000880  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4160  000882  0BF7               	andlw	-9
  4161  000884  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4162  000886  6E8B               	movwf	139,c	;volatile
  4163                           
  4164                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4165  000888  A467               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4166  00088A  D003               	goto	u250
  4167  00088C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4168  00088E  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4169  000890  D001               	goto	u268
  4170  000892                     u250:
  4171  000892  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4172  000894                     u268:
  4173  000894  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4174  000896  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4175  000898  508B               	movf	139,w,c	;volatile
  4176  00089A  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4177  00089C  0BFB               	andlw	-5
  4178  00089E  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4179  0008A0  6E8B               	movwf	139,c	;volatile
  4180                           
  4181                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4182  0008A2  A267               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4183  0008A4  D003               	goto	u270
  4184  0008A6  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4185  0008A8  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4186  0008AA  D001               	goto	u288
  4187  0008AC                     u270:
  4188  0008AC  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4189  0008AE                     u288:
  4190  0008AE  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4191  0008B0  508B               	movf	139,w,c	;volatile
  4192  0008B2  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4193  0008B4  0BFD               	andlw	-3
  4194  0008B6  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4195  0008B8  6E8B               	movwf	139,c	;volatile
  4196                           
  4197                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4198  0008BA  A067               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4199  0008BC  D003               	goto	u290
  4200  0008BE  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4201  0008C0  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  4202  0008C2  D001               	goto	u308
  4203  0008C4                     u290:
  4204  0008C4  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  4205  0008C6                     u308:
  4206  0008C6  508B               	movf	139,w,c	;volatile
  4207  0008C8  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4208  0008CA  0BFE               	andlw	-2
  4209  0008CC  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4210  0008CE  6E8B               	movwf	139,c	;volatile
  4211                           
  4212                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4213  0008D0  988B               	bcf	139,4,c	;volatile
  4214  0008D2  0012               	return		;funcret
  4215  0008D4                     __end_of_EscriuPrimeraOrdre:
  4216                           	callstack 0
  4217                           
  4218 ;; *************** function _high_rsi *****************
  4219 ;; Defined at:
  4220 ;;		line 15 in file "main.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1
  4234 ;;      Params:         0       0       0
  4235 ;;      Locals:         0       0       0
  4236 ;;      Temps:          4       0       0
  4237 ;;      Totals:         4       0       0
  4238 ;;Total ram usage:        4 bytes
  4239 ;; Hardware stack levels used: 1
  4240 ;; Hardware stack levels required when called: 1
  4241 ;; This function calls:
  4242 ;;		__TiRSITimer
  4243 ;; This function is called by:
  4244 ;;		Interrupt level 2
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	intcode
  4249  000008                     __pintcode:
  4250                           	callstack 0
  4251  000008                     _high_rsi:
  4252                           	callstack 24
  4253                           
  4254                           ;incstack = 0
  4255  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4256  00000A  CFD9 F062          	movff	fsr2l,??_high_rsi
  4257  00000E  CFDA F063          	movff	fsr2h,??_high_rsi+1
  4258  000012  CFF3 F064          	movff	prodl,??_high_rsi+2
  4259  000016  CFF4 F065          	movff	prodh,??_high_rsi+3
  4260                           
  4261                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4262  00001A  ECD2  F004         	call	__TiRSITimer	;wreg free
  4263  00001E  C065  FFF4         	movff	??_high_rsi+3,prodh
  4264  000022  C064  FFF3         	movff	??_high_rsi+2,prodl
  4265  000026  C063  FFDA         	movff	??_high_rsi+1,fsr2h
  4266  00002A  C062  FFD9         	movff	??_high_rsi,fsr2l
  4267  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4268  000030  0011               	retfie		f
  4269  000032                     __end_of_high_rsi:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function __TiRSITimer *****************
  4273 ;; Defined at:
  4274 ;;		line 37 in file "TiTTimer.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1
  4288 ;;      Params:         0       0       0
  4289 ;;      Locals:         0       0       0
  4290 ;;      Temps:          1       0       0
  4291 ;;      Totals:         1       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_high_rsi
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text38
  4302  0009A4                     __ptext38:
  4303                           	callstack 0
  4304  0009A4                     __TiRSITimer:
  4305                           	callstack 24
  4306                           
  4307                           ;TiTTimer.c: 39:     TMR0H = 223;
  4308                           
  4309                           ;incstack = 0
  4310  0009A4  0EDF               	movlw	223
  4311  0009A6  6ED7               	movwf	215,c	;volatile
  4312                           
  4313                           ;TiTTimer.c: 40:     TMR0L = 148;
  4314  0009A8  0E94               	movlw	148
  4315  0009AA  6ED6               	movwf	214,c	;volatile
  4316                           
  4317                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  4318  0009AC  94F2               	bcf	242,2,c	;volatile
  4319                           
  4320                           ;TiTTimer.c: 42:     h_Tics++;
  4321  0009AE  4A1D               	infsnz	_h_Tics^0,f,c
  4322  0009B0  2A1E               	incf	(_h_Tics+1)^0,f,c
  4323                           
  4324                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  4325  0009B2  0E48               	movlw	72
  4326  0009B4  5C1D               	subwf	_h_Tics^0,w,c
  4327  0009B6  0EEE               	movlw	238
  4328  0009B8  581E               	subwfb	(_h_Tics+1)^0,w,c
  4329  0009BA  A0D8               	btfss	status,0,c
  4330  0009BC  0012               	return	
  4331                           
  4332                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  4333  0009BE  0E00               	movlw	0
  4334  0009C0  6E27               	movwf	_counter^0,c
  4335  0009C2                     i2l1495:
  4336  0009C2  0E07               	movlw	7
  4337  0009C4  6427               	cpfsgt	_counter^0,c
  4338  0009C6  D001               	goto	i2l1499
  4339  0009C8  D015               	goto	i2l1507
  4340  0009CA                     i2l1499:
  4341                           
  4342                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  4343  0009CA  5027               	movf	_counter^0,w,c
  4344  0009CC  0D03               	mullw	3
  4345  0009CE  50F3               	movf	243,w,c
  4346  0009D0  0F03               	addlw	low (_s_Timers+2)
  4347  0009D2  6ED9               	movwf	fsr2l,c
  4348  0009D4  6ADA               	clrf	fsr2h,c
  4349  0009D6  04DE               	decf	postinc2,w,c
  4350  0009D8  A4D8               	btfss	status,2,c
  4351  0009DA  D00A               	goto	i2l1503
  4352                           
  4353                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  4354  0009DC  5027               	movf	_counter^0,w,c
  4355  0009DE  0D03               	mullw	3
  4356  0009E0  50F3               	movf	243,w,c
  4357  0009E2  0F01               	addlw	low _s_Timers
  4358  0009E4  6ED9               	movwf	fsr2l,c
  4359  0009E6  6ADA               	clrf	fsr2h,c
  4360  0009E8  501D               	movf	_h_Tics^0,w,c
  4361  0009EA  5EDE               	subwf	postinc2,f,c
  4362  0009EC  501E               	movf	(_h_Tics+1)^0,w,c
  4363  0009EE  5ADD               	subwfb	postdec2,f,c
  4364  0009F0                     i2l1503:
  4365                           
  4366                           ;TiTTimer.c: 50:         }
  4367  0009F0  2A27               	incf	_counter^0,f,c
  4368  0009F2  D7E7               	goto	i2l1495
  4369  0009F4                     i2l1507:
  4370                           
  4371                           ;TiTTimer.c: 51:         h_Tics=0;
  4372  0009F4  0E00               	movlw	0
  4373  0009F6  6E1E               	movwf	(_h_Tics+1)^0,c
  4374  0009F8  0E00               	movlw	0
  4375  0009FA  6E1D               	movwf	_h_Tics^0,c
  4376  0009FC  0012               	return		;funcret
  4377  0009FE                     __end_of__TiRSITimer:
  4378                           	callstack 0
  4379                           
  4380                           	psect	text39
  4381  000000                     __ptext39:
  4382                           	callstack 0
  4383                           
  4384                           	psect	rparam
  4385  0000                     
  4386                           	psect	temp
  4387  000078                     btemp:
  4388                           	callstack 0
  4389  000078                     	ds	1
  4390  0000                     int$flags	set	btemp
  4391  0000                     wtemp8	set	btemp+1
  4392  0000                     ttemp5	set	btemp+1
  4393  0000                     ttemp6	set	btemp+4
  4394  0000                     ttemp7	set	btemp+8
  4395                           
  4396                           	psect	idloc
  4397                           
  4398                           ;Config register IDLOC0 @ 0x200000
  4399                           ;	unspecified, using default values
  4400  200000                     	org	2097152
  4401  200000  FF                 	db	255
  4402                           
  4403                           ;Config register IDLOC1 @ 0x200001
  4404                           ;	unspecified, using default values
  4405  200001                     	org	2097153
  4406  200001  FF                 	db	255
  4407                           
  4408                           ;Config register IDLOC2 @ 0x200002
  4409                           ;	unspecified, using default values
  4410  200002                     	org	2097154
  4411  200002  FF                 	db	255
  4412                           
  4413                           ;Config register IDLOC3 @ 0x200003
  4414                           ;	unspecified, using default values
  4415  200003                     	org	2097155
  4416  200003  FF                 	db	255
  4417                           
  4418                           ;Config register IDLOC4 @ 0x200004
  4419                           ;	unspecified, using default values
  4420  200004                     	org	2097156
  4421  200004  FF                 	db	255
  4422                           
  4423                           ;Config register IDLOC5 @ 0x200005
  4424                           ;	unspecified, using default values
  4425  200005                     	org	2097157
  4426  200005  FF                 	db	255
  4427                           
  4428                           ;Config register IDLOC6 @ 0x200006
  4429                           ;	unspecified, using default values
  4430  200006                     	org	2097158
  4431  200006  FF                 	db	255
  4432                           
  4433                           ;Config register IDLOC7 @ 0x200007
  4434                           ;	unspecified, using default values
  4435  200007                     	org	2097159
  4436  200007  FF                 	db	255
  4437                           
  4438                           	psect	config
  4439                           
  4440                           ; Padding undefined space
  4441  300000                     	org	3145728
  4442  300000  FF                 	db	255
  4443                           
  4444                           ;Config register CONFIG1H @ 0x300001
  4445                           ;	Oscillator
  4446                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4447                           ;	Fail-Safe Clock Monitor Enable bit
  4448                           ;	FCMEN = 0x0, unprogrammed default
  4449                           ;	Internal/External Oscillator Switchover bit
  4450                           ;	IESO = 0x0, unprogrammed default
  4451  300001                     	org	3145729
  4452  300001  06                 	db	6
  4453                           
  4454                           ;Config register CONFIG2L @ 0x300002
  4455                           ;	unspecified, using default values
  4456                           ;	Power-up Timer Enable bit
  4457                           ;	PWRT = 0x1, unprogrammed default
  4458                           ;	Brown-out Reset Enable bits
  4459                           ;	BOR = 0x3, unprogrammed default
  4460                           ;	Brown-out Reset Voltage bits
  4461                           ;	BORV = 0x3, unprogrammed default
  4462  300002                     	org	3145730
  4463  300002  1F                 	db	31
  4464                           
  4465                           ;Config register CONFIG2H @ 0x300003
  4466                           ;	Watchdog Timer Enable bit
  4467                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4468                           ;	Watchdog Timer Postscale Select bits
  4469                           ;	WDTPS = 0xF, unprogrammed default
  4470  300003                     	org	3145731
  4471  300003  1E                 	db	30
  4472                           
  4473                           ; Padding undefined space
  4474  300004                     	org	3145732
  4475  300004  FF                 	db	255
  4476                           
  4477                           ;Config register CONFIG3H @ 0x300005
  4478                           ;	CCP2 MUX bit
  4479                           ;	CCP2MX = 0x1, unprogrammed default
  4480                           ;	PORTB A/D Enable bit
  4481                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  4482                           ;	Low-Power Timer1 Oscillator Enable bit
  4483                           ;	LPT1OSC = 0x0, unprogrammed default
  4484                           ;	MCLR Pin Enable bit
  4485                           ;	MCLRE = 0x1, unprogrammed default
  4486  300005                     	org	3145733
  4487  300005  81                 	db	129
  4488                           
  4489                           ;Config register CONFIG4L @ 0x300006
  4490                           ;	Stack Full/Underflow Reset Enable bit
  4491                           ;	STVREN = 0x1, unprogrammed default
  4492                           ;	Single-Supply ICSP Enable bit
  4493                           ;	LVP = OFF, Single-Supply ICSP disabled
  4494                           ;	Boot Block Size Select bits
  4495                           ;	BBSIZ = 0x0, unprogrammed default
  4496                           ;	Extended Instruction Set Enable bit
  4497                           ;	XINST = 0x0, unprogrammed default
  4498                           ;	Background Debugger Enable bit
  4499                           ;	DEBUG = 0x1, unprogrammed default
  4500  300006                     	org	3145734
  4501  300006  81                 	db	129
  4502                           
  4503                           ; Padding undefined space
  4504  300007                     	org	3145735
  4505  300007  FF                 	db	255
  4506                           
  4507                           ;Config register CONFIG5L @ 0x300008
  4508                           ;	unspecified, using default values
  4509                           ;	Code Protection bit
  4510                           ;	CP0 = 0x1, unprogrammed default
  4511                           ;	Code Protection bit
  4512                           ;	CP1 = 0x1, unprogrammed default
  4513  300008                     	org	3145736
  4514  300008  03                 	db	3
  4515                           
  4516                           ;Config register CONFIG5H @ 0x300009
  4517                           ;	unspecified, using default values
  4518                           ;	Boot Block Code Protection bitProtect Boot
  4519                           ;	CPB = 0x1, unprogrammed default
  4520                           ;	Data EEPROM Code Protection bit
  4521                           ;	CPD = 0x1, unprogrammed default
  4522  300009                     	org	3145737
  4523  300009  C0                 	db	192
  4524                           
  4525                           ;Config register CONFIG6L @ 0x30000A
  4526                           ;	unspecified, using default values
  4527                           ;	Write Protection bit
  4528                           ;	WRT0 = 0x1, unprogrammed default
  4529                           ;	Write Protection bit
  4530                           ;	WRT1 = 0x1, unprogrammed default
  4531  30000A                     	org	3145738
  4532  30000A  03                 	db	3
  4533                           
  4534                           ;Config register CONFIG6H @ 0x30000B
  4535                           ;	unspecified, using default values
  4536                           ;	Configuration Register Write Protection bit
  4537                           ;	WRTC = 0x1, unprogrammed default
  4538                           ;	Boot Block Write Protection bit
  4539                           ;	WRTB = 0x1, unprogrammed default
  4540                           ;	Data EEPROM Write Protection bit
  4541                           ;	WRTD = 0x1, unprogrammed default
  4542  30000B                     	org	3145739
  4543  30000B  E0                 	db	224
  4544                           
  4545                           ;Config register CONFIG7L @ 0x30000C
  4546                           ;	unspecified, using default values
  4547                           ;	Table Read Protection bit
  4548                           ;	EBTR0 = 0x1, unprogrammed default
  4549                           ;	Table Read Protection bit
  4550                           ;	EBTR1 = 0x1, unprogrammed default
  4551  30000C                     	org	3145740
  4552  30000C  03                 	db	3
  4553                           
  4554                           ;Config register CONFIG7H @ 0x30000D
  4555                           ;	unspecified, using default values
  4556                           ;	Boot Block Table Read Protection bit
  4557                           ;	EBTRB = 0x1, unprogrammed default
  4558  30000D                     	org	3145741
  4559  30000D  40                 	db	64
  4560                           tosu	equ	0xFFF
  4561                           tosh	equ	0xFFE
  4562                           tosl	equ	0xFFD
  4563                           stkptr	equ	0xFFC
  4564                           pclatu	equ	0xFFB
  4565                           pclath	equ	0xFFA
  4566                           pcl	equ	0xFF9
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           prodh	equ	0xFF4
  4572                           prodl	equ	0xFF3
  4573                           indf0	equ	0xFEF
  4574                           postinc0	equ	0xFEE
  4575                           postdec0	equ	0xFED
  4576                           preinc0	equ	0xFEC
  4577                           plusw0	equ	0xFEB
  4578                           fsr0h	equ	0xFEA
  4579                           fsr0l	equ	0xFE9
  4580                           wreg	equ	0xFE8
  4581                           indf1	equ	0xFE7
  4582                           postinc1	equ	0xFE6
  4583                           postdec1	equ	0xFE5
  4584                           preinc1	equ	0xFE4
  4585                           plusw1	equ	0xFE3
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           bsr	equ	0xFE0
  4589                           indf2	equ	0xFDF
  4590                           postinc2	equ	0xFDE
  4591                           postdec2	equ	0xFDD
  4592                           preinc2	equ	0xFDC
  4593                           plusw2	equ	0xFDB
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      0       0
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(2) Largest target is 9
		 -> username(COMRAM[9]), NULL(NULL[0]), 

    UsetData@pass	PTR unsigned char  size(1) Largest target is 9
		 -> password(COMRAM[9]), 

    tmpPassword	PTR unsigned char  size(2) Largest target is 9
		 -> password(COMRAM[9]), NULL(NULL[0]), 

    UsetData@user	PTR unsigned char  size(1) Largest target is 9
		 -> username(COMRAM[9]), 

    tmpUsername	PTR unsigned char  size(2) Largest target is 9
		 -> username(COMRAM[9]), NULL(NULL[0]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8275
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                        _UmotorUsers
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    4949
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
                     _UgetNumUsuaris
                           _UsetData
 ---------------------------------------------------------------------------------
 (2) _UsetData                                             2     0      2     196
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     264
                                             11 COMRAM     2     2      0
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       6     2      4     264
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _UmotorUsers
     _compareStrings
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UgetNumUsuaris
     _UsetData

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F       7        0.0%
DATA                 0      0     12F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 22 12:57:47 2022

            TiResetTics@Handle 0066               _loginNOTRegister 03BA                              _i 0020  
                            _j 0026         __end_of_compareStrings 0A9E                            l415 028A  
                          l441 0404                            l534 0B38                            l438 03D8  
                          l439 03EA                            l528 0B28                            u230 0876  
                          u250 0892                            u308 08C6                            u270 08AC  
                          u248 0878                            u290 08C4                            u268 0894  
                          u288 08AE               ??_CantaPartBaixa 0066                            wreg 000FE8  
                  _ultimaTecla 0051                           l2111 0A34                           l1313 0BA0  
                         l1321 0BAE                           l2019 0AF8                           l2051 0B70  
                         l2211 0486                           l2203 0472                           l2045 0D30  
                         l2117 0A44                           l2109 0A2A                           l2301 05B4  
                         l2133 0A72                           l1405 0DB6                           l2311 05CC  
                         l2127 0A52                           l2233 04E0                           l2225 04B8  
                         l2155 07A6                           l2307 05C4                           l2331 05E0  
                         l1531 0C30                           l2411 0310                           l2261 053A  
                         l1381 0DC2                           l2255 0524                           l1527 0C28  
                         l2431 0350                           l2415 0322                           l2273 056C  
                         l2249 050E                           l2521 0660                           l2513 0B40  
                         l2433 0356                           l2361 026C                           l2345 0238  
                         l2275 056E                           l2267 0554                           l2363 0272  
                         l2355 025A                           l2339 0226                           l2293 059A  
                         l2277 0574                           l2533 0680                           l2453 039A  
                         l2287 0590                           l2543 0696                           l2535 0686  
                         l2527 0670                           l2615 0BF6                           l2561 06C8  
                         l2529 0674                           l2449 0388                           l2393 02D8  
                         l2385 02BE                           l2377 029E                           l2555 06BA  
                         l2395 02DE                           l2581 071E                           l2565 06D4  
                         l2549 06A4                           l2575 0710                           l2585 0726  
                         l2569 06E0                           l2489 040E                           l2595 073E  
                         l2589 0732                           STR_1 020C                           STR_2 0201  
                         STR_3 021B                           STR_4 0214                           u1200 0996  
                         u1140 0948                           u1220 08E0                           u1160 0964  
                         u1240 08FC                           u1400 0A80                           u1218 0998  
                         u1410 0854                           u1180 097E                           u1260 0916  
                         u1158 094A                           u1238 08E2                           u1510 04D6  
                         u1280 092E                           _LATD 000F8C                           u1178 0966  
                         u1258 08FE                           u1198 0980                           u1278 0918  
                         u1640 05A2                           u1298 0930                           u1650 05BC  
                         u1570 0534                           u1940 0626                           u1950 0630  
                         u1960 0640                           u1970 0650                           u1956 0632  
                         u1948 0628                           u1966 0642                           u1976 0652  
              ??_SsetNovaTecla 0066                           _Rows 0033                   UsetData@pass 0067  
                         _main 0BD4                           _menu 0224                   UsetData@user 0066  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0078  
                         prodh 000FF4                           prodl 000FF3                __end_of_LcClear 0D28  
                         start 0032                __end_of_CantaIR 0CA8                  LcInit@columns 0071  
                 ___param_bank 000000                    Espera@Timer 0070                          ?_main 0061  
                        ?_menu 0061                  ??_TiInitTimer 0066                          _T0CON 000FD5  
              ?_compareStrings 0066                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _LcLCD 0CA8                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _SMSon 0E0A  
                  _MNovaLletra 0DFA                          _Minit 0E02                          _Sinit 0DF2  
                        _Timer 002F                          _s_ptr 002E                          _nou_s 03BC  
                  _LcCursorOff 0DC6                 __pbitbssCOMRAM 03B8                          tablat 000FF5  
                  _LcNewString 0DD2                  ??_TiResetTics 0066                          ttemp5 0079  
                        ttemp6 007C                          ttemp7 0080                          status 000FD8  
                        wtemp8 0079  __size_of_UcheckExistsGetError 000C               __end_of_LcGotoXY 0B9A  
             __end_of_LcLliure 0DC6                  ??__TiRSITimer 0061                     _TiGetTimer 0B9A  
      EscriuPrimeraOrdre@ordre 0067                __initialization 0A9E                  _indexLastUser 0021  
           __size_of_CantaData 0032                   __end_of_main 0C0C                   __end_of_menu 0470  
             __end_of_TeTeclat 0780                         ??_main 0077                         ??_menu 0075  
           __size_of_LcPutChar 0052                  __activetblptr 000002                         ?_LcLCD 0061  
                       ?_SMSon 0061                         ?_Minit 0061                         ?_Sinit 0061  
             __end_of_UsetData 0DAE            __end_of_TiInitTimer 0C44                      ??_LcClear 0074  
                    ??_CantaIR 0068                         i2l1503 09F0                         i2l1507 09F4  
                       i2l1495 09C2                         i2l1499 09CA                 LcGotoXY@Fisics 006F  
               LcGotoXY@Column 0073                  ??_WaitForBusy 006D             __size_of_TiGetTics 002C  
               _sumaPulsacions 002D                         _LcInit 0780                 _UgetNumUsuaris 0E10  
                       _SMotor 0470                         _TeInit 0DEA                         _Espera 0D28  
                 _LcGotoXY$342 0071                         _RowAct 0031            __end_of_TiResetTics 0DA0  
             __end_of_high_rsi 0032                         _h_Tics 001D            __end_of__TiRSITimer 09FE  
                       clear_0 0AC4                         clear_1 0AD2                         isa$std 000001  
  __size_of_EscriuPrimeraOrdre 007A                   __pdataCOMRAM 0046         __size_of_CantaPartAlta 0068  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                _currentUsrIndex 0023              __end_of_CantaData 0C76  
                 TeTeclat@cols 0029                  ?_UcheckExists 0061                     __accesstop 0080  
      __end_of__initialization 0AD8         __end_of_UgetNumUsuaris 0E14              __end_of_LcPutChar 0A50  
                ___rparam_used 000001                  __end_of_LcLCD 0CD8                    ?_TiGetTimer 0061  
                __end_of_SMSon 0E10                 __pcstackCOMRAM 0061                  __end_of_Minit 0E0A  
          __end_of_WaitForBusy 0B26                  __end_of_Sinit 0DFA              __end_of_TiGetTics 0D04  
                  _TiInitTimer 0C0C                        ??_LcLCD 0075                        ??_SMSon 0066  
                    ?_LcGotoXY 006E                      ?_LcLliure 0061                        ??_Minit 0067  
                      ??_Sinit 0067                 ??_UcheckExists 0066                     __pbssBANK1 0100  
                    ?_TeTeclat 0061                    _TiResetTics 0D88                ?_UgetNumUsuaris 0061  
                ??_UmotorUsers 006C                        ?_LcInit 0071                  _CantaPartAlta 093C  
                      ?_SMotor 0061                        ?_TeInit 0061                        ?_Espera 006D  
                  __TiRSITimer 09A4               ??_compareStrings 006A                      ?_UsetData 0066  
       __size_of_MsetNovaTecla 0008                        LcInit@i 0073                     ??_LcGotoXY 006F  
                 ?_MNovaLletra 0061                     ??_LcLliure 0066            __size_of_TiGetTimer 003A  
                 ?_LcCursorOff 0061                      ?_high_rsi 0061                        _LcClear 0D04  
                      _CantaIR 0C76                   ?_LcNewString 0066                     ??_TeTeclat 006D  
                  _WaitForBusy 0AE6                 ?_CantaPartAlta 0061                        _Columns 0032  
        __end_of_SsetNovaTecla 0DE2                __size_of_LcInit 00DA                        __Hparam 0000  
              __size_of_SMotor 01AC                __size_of_TeInit 0008                __size_of_Espera 0024  
                      __Lparam 0000            __end_of_UmotorUsers 0B60                     ??_UsetData 0068  
                 __psmallconst 0200                        __pcinit 0A9E   __end_of_UcheckExistsGetError 0DBA  
                   _init_ports 0D4C                        __ramtop 0200                        __ptext0 0BD4  
                      __ptext1 0224                        __ptext2 0DA0                        __ptext3 0E10  
                      __ptext4 0DAE                        __ptext5 0E14                        __ptext6 0E0A  
                      __ptext7 0DD2                        __ptext8 0DBA                        __ptext9 0D04  
                    _T0CONbits 000FD5                      CantaIR@IR 0068                        _counter 0027  
             LcNewString@new_s 0066                WaitForBusy@Busy 006D                     ??_high_rsi 0062  
         end_of_initialization 0AD8                        _usuaris 0100        __size_of_CantaPartBaixa 0068  
                __Lmediumconst 0000                TiGetTics@Handle 006A                  _MsetNovaTecla 0DE2  
                   _novaLletra 004F                TiGetTics@actual 006B                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     _numUsuaris 0022           __end_of_UcheckExists 0E18  
                TeTeclat@files 0028                  TeTeclat@state 002A                      _PORTCbits 000F82  
                    _PORTDbits 000F83                      _TRISCbits 000F94                      _TRISDbits 000F95  
              ??_CantaPartAlta 0066                 ?_MsetNovaTecla 0061                      _CantaData 0C44  
                  _UmotorUsers 0B26                   ??_TiGetTimer 0066                 __end_of_LcInit 085A  
               __end_of_SMotor 061C                      _LcPutChar 09FE                 __end_of_TeInit 0DF2  
               __end_of_Espera 0D4C     __end_of_EscriuPrimeraOrdre 08D4                  __pidataCOMRAM 0D6C  
                  ?_init_ports 0061                      _ColumnAct 0030                   ?_TiInitTimer 0061  
          start_initialization 0A9E                      _TiGetTics 0CD8               ??_UgetNumUsuaris 0066  
             UmotorUsers@state 001F              __size_of_LcGotoXY 003A             __end_of_TiGetTimer 0BD4  
         __size_of_MNovaLletra 0008              __size_of_LcLliure 000C                   ?_TiResetTics 0061  
         __size_of_LcCursorOff 000C                     ?_CantaData 0061           _UcheckExistsGetError 0DAE  
         __size_of_LcNewString 0008                       ??_LcInit 0072                      _NovaTecla 0050  
            __size_of_TeTeclat 0164                       ??_SMotor 006D                       ??_TeInit 0067  
                 ?__TiRSITimer 0061                       ??_Espera 006F                     ?_LcPutChar 0061  
            __size_of_UsetData 000E                    __pbssCOMRAM 0001                     ?_TiGetTics 0066  
              ??_MsetNovaTecla 0066                       ?_LcClear 0061                       ?_CantaIR 0061  
               _CantaPartBaixa 08D4          ?_UcheckExistsGetError 0061              __size_of_high_rsi 002A  
                 ?_WaitForBusy 0061            __size_of_init_ports 0020             MsetNovaTecla@tecla 0066  
           SsetNovaTecla@tecla 0066          __size_of_UcheckExists 0004                      __pintcode 0008  
              CantaPartBaixa@c 0067                    __smallconst 0200                 __size_of_LcLCD 0030  
               __size_of_SMSon 0006                 __size_of_Minit 0008                 __size_of_Sinit 0008  
       __end_of_CantaPartBaixa 093C                   _UcheckExists 0E14                    ??_CantaData 0068  
                     _LATBbits 000F8A                       _LATCbits 000F8B                       _LATDbits 000F8C  
                    _novaTecla 0053                    ??_LcPutChar 0074                       _RCONbits 000FD0  
                    _timerMenu 0025         __size_of_SsetNovaTecla 0008                       Espera@ms 006D  
                     _LcGotoXY 0B60                       _LcLliure 0DBA                    ??_TiGetTics 0068  
      __size_of_compareStrings 004E           __size_of_TiInitTimer 0038                   _teclaPremuda 0055  
                  LcGotoXY@Row 006E                      copy_data0 0AB2                ?_CantaPartBaixa 0061  
       ??_UcheckExistsGetError 0066               __size_of_LcClear 0024               __size_of_CantaIR 0032  
                     _TeTeclat 061C                   ?_UmotorUsers 0061                     _EECON1bits 000FA6  
         __size_of_TiResetTics 0018                       __Hrparam 0000                      menu@state 0024  
                     __Lrparam 0000           __size_of__TiRSITimer 005A                       _UsetData 0DA0  
                 ??_init_ports 0066                _do_check_exists 03B9                       __ptext10 0D4C  
                     __ptext11 0B26             _EscriuPrimeraOrdre 085A                       __ptext20 0DFA  
                     __ptext12 0A50                       __ptext21 0E02                       __ptext13 0C0C  
                     __ptext30 0C76                       __ptext22 0CA8                       __ptext14 061C  
                     __ptext31 08D4                       __ptext23 09FE                       __ptext15 0DDA  
                     __ptext32 093C                       __ptext24 0B60                       __ptext16 0DE2  
                     __ptext33 0D28                       __ptext25 0C44                       __ptext17 0DEA  
                     __ptext34 0D88                       __ptext26 0780                       __ptext18 0DF2  
                     __ptext35 0CD8                       __ptext27 0B9A                       __ptext19 0470  
                     __ptext36 085A                       __ptext28 0DC6                       __ptext29 0AE6  
                     __ptext38 09A4                       __ptext39 0000                 CantaPartAlta@c 0067  
                  _lletraASCII 0054                       _high_rsi 0008                       _s_Timers 0001  
                  _lletraInici 0046            ?_EscriuPrimeraOrdre 0061                  __size_of_main 0038  
                __size_of_menu 024C          __end_of_CantaPartAlta 09A4                  CantaData@Data 0068  
                     _tiTeclat 002B             __end_of_init_ports 0D6C                       _setSMSon 03BB  
                _SsetNovaTecla 0DDA           __size_of_WaitForBusy 0040                       _password 0034  
                     _timerSMS 0052                       isa$xinst 000000                       int$flags 0078  
                     _username 003D           ??_EscriuPrimeraOrdre 0066                     LcInit@rows 0072  
                   _INTCONbits 000FF2                  ??_MNovaLletra 0066                  ??_LcCursorOff 006E  
                ??_LcNewString 0067                       intlevel2 0000                     LcPutChar@c 0074  
               ?_SsetNovaTecla 0061              MNovaLletra@lletra 0066                compareStrings@a 0066  
              compareStrings@b 0068                   _return_error 03B8                 _compareStrings 0A50  
                  _tmpPassword 0019            __end_of_MNovaLletra 0E02          __end_of_MsetNovaTecla 0DEA  
                  _tmpUsername 001B            __end_of_LcCursorOff 0DD2                    SMotor@state 002C  
      __size_of_UgetNumUsuaris 0004            __end_of_LcNewString 0DDA           __size_of_UmotorUsers 003A  
