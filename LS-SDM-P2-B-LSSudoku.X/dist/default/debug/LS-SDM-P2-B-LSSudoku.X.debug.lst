

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 26 20:03:25 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.32
    64                           ; Generated 02/02/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4321 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  000EA2                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _lletraInici
   104  000EA2  41                 	db	65
   105  000EA3  44                 	db	68
   106  000EA4  47                 	db	71
   107  000EA5  4A                 	db	74
   108  000EA6  4D                 	db	77
   109  000EA7  50                 	db	80
   110  000EA8  54                 	db	84
   111  000EA9  57                 	db	87
   112  000EAA  00                 	db	0
   113                           
   114                           ;initializer for _novaLletra
   115  000EAB  FF                 	db	255
   116                           
   117                           ;initializer for _NovaTecla
   118  000EAC  FF                 	db	255
   119                           
   120                           ;initializer for _ultimaTecla
   121  000EAD  FF                 	db	255
   122                           
   123                           ;initializer for _timerSMS
   124  000EAE  FF                 	db	255
   125                           
   126                           ;initializer for _novaTecla
   127  000EAF  FF                 	db	255
   128                           
   129                           ;initializer for _lletraASCII
   130  000EB0  FF                 	db	255
   131                           
   132                           ;initializer for _teclaPremuda
   133  000EB1  01                 	db	1
   134  000EB2  02                 	db	2
   135  000EB3  03                 	db	3
   136  000EB4  04                 	db	4
   137  000EB5  05                 	db	5
   138  000EB6  06                 	db	6
   139  000EB7  07                 	db	7
   140  000EB8  08                 	db	8
   141  000EB9  09                 	db	9
   142  000EBA  0A                 	db	10
   143  000EBB  00                 	db	0
   144  000EBC  0B                 	db	11
   145  0000                     _PORTDbits	set	3971
   146  0000                     _LATD	set	3980
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _LATBbits	set	3978
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISA	set	3986
   152  0000                     _PORTCbits	set	3970
   153  0000                     _LATDbits	set	3980
   154  0000                     _LATCbits	set	3979
   155  0000                     _TRISDbits	set	3989
   156  0000                     _TRISCbits	set	3988
   157  0000                     _EECON2	set	4007
   158  0000                     _EEDATA	set	4008
   159  0000                     _EEADR	set	4009
   160  0000                     _RCONbits	set	4048
   161  0000                     _EECON1bits	set	4006
   162  0000                     _T0CONbits	set	4053
   163  0000                     _TMR0L	set	4054
   164  0000                     _TMR0H	set	4055
   165  0000                     _T0CON	set	4053
   166  0000                     _INTCONbits	set	4082
   167                           
   168                           	psect	smallconst
   169  000200                     __psmallconst:
   170                           	callstack 0
   171  000200  00                 	db	0
   172  000201                     STR_2:
   173  000201  32                 	db	50	;'2'
   174  000202  2E                 	db	46
   175  000203  52                 	db	82	;'R'
   176  000204  45                 	db	69	;'E'
   177  000205  47                 	db	71	;'G'
   178  000206  49                 	db	73	;'I'
   179  000207  53                 	db	83	;'S'
   180  000208  54                 	db	84	;'T'
   181  000209  45                 	db	69	;'E'
   182  00020A  52                 	db	82	;'R'
   183  00020B  00                 	db	0
   184  00020C                     STR_1:
   185  00020C  31                 	db	49	;'1'
   186  00020D  2E                 	db	46
   187  00020E  4C                 	db	76	;'L'
   188  00020F  4F                 	db	79	;'O'
   189  000210  47                 	db	71	;'G'
   190  000211  49                 	db	73	;'I'
   191  000212  4E                 	db	78	;'N'
   192  000213  00                 	db	0
   193  000214                     STR_4:
   194  000214  50                 	db	80	;'P'
   195  000215  53                 	db	83	;'S'
   196  000216  57                 	db	87	;'W'
   197  000217  44                 	db	68	;'D'
   198  000218  3A                 	db	58	;':'
   199  000219  20                 	db	32
   200  00021A  00                 	db	0
   201  00021B                     STR_3:
   202  00021B  55                 	db	85	;'U'
   203  00021C  53                 	db	83	;'S'
   204  00021D  45                 	db	69	;'E'
   205  00021E  52                 	db	82	;'R'
   206  00021F  3A                 	db	58	;':'
   207  000220  20                 	db	32
   208  000221  00                 	db	0
   209  000222  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214  000B92                     __pcinit:
   215                           	callstack 0
   216  000B92                     start_initialization:
   217                           	callstack 0
   218  000B92                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to COMRAM (27 bytes)
   222                           ; load TBLPTR registers with __pidataCOMRAM
   223  000B92  0EA2               	movlw	low __pidataCOMRAM
   224  000B94  6EF6               	movwf	tblptrl,c
   225  000B96  0E0E               	movlw	high __pidataCOMRAM
   226  000B98  6EF7               	movwf	tblptrh,c
   227  000B9A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   228  000B9C  6EF8               	movwf	tblptru,c
   229  000B9E  EE00  F043         	lfsr	0,__pdataCOMRAM
   230  000BA2  EE10 F01B          	lfsr	1,27
   231  000BA6                     copy_data0:
   232  000BA6  0009               	tblrd		*+
   233  000BA8  CFF5 FFEE          	movff	tablat,postinc0
   234  000BAC  50E5               	movf	postdec1,w,c
   235  000BAE  50E1               	movf	fsr1l,w,c
   236  000BB0  E1FA               	bnz	copy_data0
   237                           
   238                           ; Clear objects allocated to BANK1 (184 bytes)
   239  000BB2  EE01  F000         	lfsr	0,__pbssBANK1
   240  000BB6  0EB8               	movlw	184
   241  000BB8                     clear_0:
   242  000BB8  6AEE               	clrf	postinc0,c
   243  000BBA  06E8               	decf	wreg,f,c
   244  000BBC  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   247  000BBE  6A74               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   248                           
   249                           ; Clear objects allocated to COMRAM (66 bytes)
   250  000BC0  EE00  F001         	lfsr	0,__pbssCOMRAM
   251  000BC4  0E42               	movlw	66
   252  000BC6                     clear_1:
   253  000BC6  6AEE               	clrf	postinc0,c
   254  000BC8  06E8               	decf	wreg,f,c
   255  000BCA  E1FD               	bnz	clear_1
   256  000BCC                     end_of_initialization:
   257                           	callstack 0
   258  000BCC                     __end_of__initialization:
   259                           	callstack 0
   260  000BCC  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   261  000BCE  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   262  000BD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   263  000BD2  6EF8               	movwf	tblptru,c
   264  000BD4  0100               	movlb	0
   265  000BD6  EF10  F006         	goto	_main	;jump to C main() function
   266                           
   267                           	psect	bitbssCOMRAM
   268  0003A0                     __pbitbssCOMRAM:
   269                           	callstack 0
   270  0003A0                     _return_error:
   271                           	callstack 0
   272  0003A0                     	ds	1
   273  0003A1                     _do_check_exists:
   274                           	callstack 0
   275  0003A1                     	ds	1
   276  0003A2                     _loginNOTRegister:
   277                           	callstack 0
   278  0003A2                     	ds	1
   279  0003A3                     _setSMSon:
   280                           	callstack 0
   281  0003A3                     	ds	1
   282  0003A4                     _nou_s:
   283                           	callstack 0
   284  0003A4                     	ds	1
   285                           
   286                           	psect	bssCOMRAM
   287  000001                     __pbssCOMRAM:
   288                           	callstack 0
   289  000001                     _s_Timers:
   290                           	callstack 0
   291  000001                     	ds	24
   292  000019                     _tmpPassword:
   293                           	callstack 0
   294  000019                     	ds	9
   295  000022                     _h_Tics:
   296                           	callstack 0
   297  000022                     	ds	2
   298  000024                     UmotorUsers@state:
   299                           	callstack 0
   300  000024                     	ds	1
   301  000025                     _pos:
   302                           	callstack 0
   303  000025                     	ds	1
   304  000026                     _i:
   305                           	callstack 0
   306  000026                     	ds	1
   307  000027                     _indexLastUser:
   308                           	callstack 0
   309  000027                     	ds	1
   310  000028                     _numUsuaris:
   311                           	callstack 0
   312  000028                     	ds	1
   313  000029                     _currentUsrIndex:
   314                           	callstack 0
   315  000029                     	ds	1
   316  00002A                     menu@state:
   317                           	callstack 0
   318  00002A                     	ds	1
   319  00002B                     _timerMenu:
   320                           	callstack 0
   321  00002B                     	ds	1
   322  00002C                     _j:
   323                           	callstack 0
   324  00002C                     	ds	1
   325  00002D                     _counter:
   326                           	callstack 0
   327  00002D                     	ds	1
   328  00002E                     TeTeclat@files:
   329                           	callstack 0
   330  00002E                     	ds	1
   331  00002F                     TeTeclat@cols:
   332                           	callstack 0
   333  00002F                     	ds	1
   334  000030                     TeTeclat@state:
   335                           	callstack 0
   336  000030                     	ds	1
   337  000031                     _tiTeclat:
   338                           	callstack 0
   339  000031                     	ds	1
   340  000032                     SMotor@state:
   341                           	callstack 0
   342  000032                     	ds	1
   343  000033                     _sumaPulsacions:
   344                           	callstack 0
   345  000033                     	ds	1
   346  000034                     _s_ptr:
   347                           	callstack 0
   348  000034                     	ds	1
   349  000035                     _Timer:
   350                           	callstack 0
   351  000035                     	ds	1
   352  000036                     _ColumnAct:
   353                           	callstack 0
   354  000036                     	ds	1
   355  000037                     _RowAct:
   356                           	callstack 0
   357  000037                     	ds	1
   358  000038                     _Columns:
   359                           	callstack 0
   360  000038                     	ds	1
   361  000039                     _Rows:
   362                           	callstack 0
   363  000039                     	ds	1
   364  00003A                     _tmpUsername:
   365                           	callstack 0
   366  00003A                     	ds	9
   367                           
   368                           	psect	dataCOMRAM
   369  000043                     __pdataCOMRAM:
   370                           	callstack 0
   371  000043                     _lletraInici:
   372                           	callstack 0
   373  000043                     	ds	9
   374  00004C                     _novaLletra:
   375                           	callstack 0
   376  00004C                     	ds	1
   377  00004D                     _NovaTecla:
   378                           	callstack 0
   379  00004D                     	ds	1
   380  00004E                     _ultimaTecla:
   381                           	callstack 0
   382  00004E                     	ds	1
   383  00004F                     _timerSMS:
   384                           	callstack 0
   385  00004F                     	ds	1
   386  000050                     _novaTecla:
   387                           	callstack 0
   388  000050                     	ds	1
   389  000051                     _lletraASCII:
   390                           	callstack 0
   391  000051                     	ds	1
   392  000052                     _teclaPremuda:
   393                           	callstack 0
   394  000052                     	ds	12
   395                           
   396                           	psect	bssBANK1
   397  000100                     __pbssBANK1:
   398                           	callstack 0
   399  000100                     _usuaris:
   400                           	callstack 0
   401  000100                     	ds	184
   402                           
   403                           	psect	cstackCOMRAM
   404  00005E                     __pcstackCOMRAM:
   405                           	callstack 0
   406  00005E                     
   407                           ; 1 bytes @ 0x0
   408  00005E                     	ds	1
   409  00005F                     ??_high_rsi:
   410                           
   411                           ; 1 bytes @ 0x1
   412  00005F                     	ds	4
   413  000063                     ??_EscriuPrimeraOrdre:
   414  000063                     ??_Uinit:
   415  000063                     ??_CantaPartAlta:
   416  000063                     ??_CantaPartBaixa:
   417  000063                     ?_TiGetTics:
   418                           	callstack 0
   419  000063                     LcNewString@new_s:
   420                           	callstack 0
   421  000063                     SsetNovaTecla@tecla:
   422                           	callstack 0
   423  000063                     TiResetTics@Handle:
   424                           	callstack 0
   425  000063                     MsetNovaTecla@tecla:
   426                           	callstack 0
   427  000063                     MNovaLletra@lletra:
   428                           	callstack 0
   429  000063                     UenviaChar@pos:
   430                           	callstack 0
   431  000063                     UenviaPas@pos:
   432                           	callstack 0
   433  000063                     compareStrings@a:
   434                           	callstack 0
   435  000063                     escriureEEPROM@caca:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x5
   439  000063                     	ds	1
   440  000064                     CantaPartAlta@c:
   441                           	callstack 0
   442  000064                     CantaPartBaixa@c:
   443                           	callstack 0
   444  000064                     EscriuPrimeraOrdre@ordre:
   445                           	callstack 0
   446  000064                     UenviaChar@c:
   447                           	callstack 0
   448  000064                     UenviaPas@c:
   449                           	callstack 0
   450  000064                     compareStrings@b:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x6
   454  000064                     	ds	1
   455  000065                     ??_TiGetTics:
   456  000065                     CantaIR@IR:
   457                           	callstack 0
   458  000065                     CantaData@Data:
   459                           	callstack 0
   460  000065                     Uinit@i:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x7
   464  000065                     	ds	1
   465  000066                     ??_compareStrings:
   466  000066                     Uinit@j:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x8
   470  000066                     	ds	1
   471  000067                     TiGetTics@Handle:
   472                           	callstack 0
   473  000067                     Uinit@j_1003:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x9
   477  000067                     	ds	1
   478  000068                     ??_UmotorUsers:
   479  000068                     TiGetTics@actual:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xA
   483  000068                     	ds	2
   484  00006A                     ??_SMotor:
   485  00006A                     ??_TeTeclat:
   486  00006A                     WaitForBusy@Busy:
   487                           	callstack 0
   488  00006A                     Espera@ms:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xC
   492  00006A                     	ds	1
   493  00006B                     LcGotoXY@Row:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xD
   497  00006B                     	ds	1
   498  00006C                     ??_Espera:
   499  00006C                     LcGotoXY@Fisics:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xE
   503  00006C                     	ds	1
   504  00006D                     Espera@Timer:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xF
   508  00006D                     	ds	1
   509  00006E                     LcInit@columns:
   510                           	callstack 0
   511  00006E                     _LcGotoXY$342:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x10
   515  00006E                     	ds	1
   516  00006F                     LcInit@rows:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x11
   520  00006F                     	ds	1
   521  000070                     LcGotoXY@Column:
   522                           	callstack 0
   523  000070                     LcInit@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x12
   527  000070                     	ds	1
   528  000071                     LcPutChar@c:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x13
   532  000071                     	ds	1
   533  000072                     ??_menu:
   534  000072                     
   535                           ; 1 bytes @ 0x14
   536  000072                     	ds	2
   537  000074                     
   538                           ; 1 bytes @ 0x16
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 69 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1
   558 ;;      Params:         0       0       0
   559 ;;      Locals:         0       0       0
   560 ;;      Temps:          0       0       0
   561 ;;      Totals:         0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels required when called: 7
   564 ;; This function calls:
   565 ;;		_LcInit
   566 ;;		_LcLCD
   567 ;;		_Minit
   568 ;;		_SMotor
   569 ;;		_Sinit
   570 ;;		_TeInit
   571 ;;		_TeTeclat
   572 ;;		_TiInitTimer
   573 ;;		_Uinit
   574 ;;		_UmotorUsers
   575 ;;		_escriureEEPROM
   576 ;;		_init_ports
   577 ;;		_menu
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  000C20                     __ptext0:
   585                           	callstack 0
   586  000C20                     _main:
   587                           	callstack 24
   588                           
   589                           ;main.c: 70:     init_ports();
   590                           
   591                           ;incstack = 0
   592  000C20  EC41  F007         	call	_init_ports	;wreg free
   593                           
   594                           ;main.c: 71:     escriureEEPROM();
   595  000C24  ECF0  F006         	call	_escriureEEPROM	;wreg free
   596                           
   597                           ;main.c: 72:     TiInitTimer();
   598  000C28  EC8A  F006         	call	_TiInitTimer	;wreg free
   599                           
   600                           ;main.c: 73:     TeInit();
   601  000C2C  EC9F  F007         	call	_TeInit	;wreg free
   602                           
   603                           ;main.c: 74:     Sinit();
   604  000C30  ECA3  F007         	call	_Sinit	;wreg free
   605                           
   606                           ;main.c: 75:     SMotor();
   607  000C34  EC44  F002         	call	_SMotor	;wreg free
   608                           
   609                           ;main.c: 76:     Uinit();
   610  000C38  EC39  F004         	call	_Uinit	;wreg free
   611                           
   612                           ;main.c: 78:     LcInit(2,16);
   613  000C3C  0E10               	movlw	16
   614  000C3E  6E6E               	movwf	LcInit@columns^0,c
   615  000C40  0E02               	movlw	2
   616  000C42  ECCC  F003         	call	_LcInit
   617                           
   618                           ;main.c: 79:     Minit();
   619  000C46  ECAB  F007         	call	_Minit	;wreg free
   620  000C4A                     l2771:
   621                           
   622                           ;main.c: 83:         menu();
   623  000C4A  EC12  F001         	call	_menu	;wreg free
   624                           
   625                           ;main.c: 85:         UmotorUsers();
   626  000C4E  ECD0  F004         	call	_UmotorUsers	;wreg free
   627                           
   628                           ;main.c: 86:         TeTeclat();
   629  000C52  EC1A  F003         	call	_TeTeclat	;wreg free
   630                           
   631                           ;main.c: 87:         SMotor();
   632  000C56  EC44  F002         	call	_SMotor	;wreg free
   633                           
   634                           ;main.c: 88:         LcLCD();
   635  000C5A  ECD8  F006         	call	_LcLCD	;wreg free
   636  000C5E  D7F5               	goto	l2771
   637  000C60                     __end_of_main:
   638                           	callstack 0
   639                           
   640 ;; *************** function _menu *****************
   641 ;; Defined at:
   642 ;;		line 25 in file "Menu.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1
   656 ;;      Params:         0       0       0
   657 ;;      Locals:         0       0       0
   658 ;;      Temps:          2       0       0
   659 ;;      Totals:         2       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 6
   663 ;; This function calls:
   664 ;;		_LcClear
   665 ;;		_LcGotoXY
   666 ;;		_LcLliure
   667 ;;		_LcNewString
   668 ;;		_LcPutChar
   669 ;;		_SMSoff
   670 ;;		_SMSon
   671 ;;		_UcheckExists
   672 ;;		_UcheckExistsGetError
   673 ;;		_UcheckExistsNotFinished
   674 ;;		_UenviaChar
   675 ;;		_UenviaPas
   676 ;;		_UgetNumUsuaris
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text1
   683  000224                     __ptext1:
   684                           	callstack 0
   685  000224                     _menu:
   686                           	callstack 24
   687                           
   688                           ;Menu.c: 26:   static char state = 0;;Menu.c: 28:  switch(state) {
   689                           
   690                           ;incstack = 0
   691  000224  D100               	goto	l2633
   692  000226                     l2473:
   693                           
   694                           ;Menu.c: 30:    LcClear();
   695  000226  EC1D  F007         	call	_LcClear	;wreg free
   696                           
   697                           ;Menu.c: 31:    LcNewString("1.LOGIN");
   698  00022A  0E0C               	movlw	low STR_1
   699  00022C  6E63               	movwf	LcNewString@new_s^0,c
   700  00022E  EC93  F007         	call	_LcNewString	;wreg free
   701                           
   702                           ;Menu.c: 32:    state = 1;
   703  000232  0E01               	movlw	1
   704  000234  6E2A               	movwf	menu@state^0,c
   705                           
   706                           ;Menu.c: 33:   break;
   707  000236  0012               	return	
   708  000238                     l2479:
   709                           
   710                           ;Menu.c: 35:    if (LcLliure()) {
   711  000238  EC87  F007         	call	_LcLliure	;wreg free
   712  00023C  A0D8               	btfss	status,0,c
   713  00023E  0012               	return	
   714                           
   715                           ;Menu.c: 36:     LcGotoXY(0,1);
   716  000240  0E01               	movlw	1
   717  000242  6E6B               	movwf	LcGotoXY@Row^0,c
   718  000244  0E00               	movlw	0
   719  000246  EC50  F006         	call	_LcGotoXY
   720                           
   721                           ;Menu.c: 37:     LcNewString("2.REGISTER");
   722  00024A  0E01               	movlw	low STR_2
   723  00024C  6E63               	movwf	LcNewString@new_s^0,c
   724  00024E  EC93  F007         	call	_LcNewString	;wreg free
   725                           
   726                           ;Menu.c: 38:     NovaTecla = -1;
   727  000252  684D               	setf	_NovaTecla^0,c
   728                           
   729                           ;Menu.c: 39:     state = 2;
   730  000254  0E02               	movlw	2
   731  000256  6E2A               	movwf	menu@state^0,c
   732  000258  0012               	return	
   733  00025A                     l2489:
   734                           
   735                           ;Menu.c: 43:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   736  00025A  044D               	decf	_NovaTecla^0,w,c
   737  00025C  A4D8               	btfss	status,2,c
   738  00025E  D009               	goto	l2497
   739  000260  ECB5  F007         	call	_UgetNumUsuaris	;wreg free
   740  000264  0900               	iorlw	0
   741  000266  B4D8               	btfsc	status,2,c
   742  000268  D004               	goto	l2497
   743                           
   744                           ;Menu.c: 44:     loginNOTRegister = 1;
   745  00026A  8474               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   746  00026C                     l2495:
   747                           
   748                           ;Menu.c: 45:     state = 3;
   749  00026C  0E03               	movlw	3
   750  00026E  6E2A               	movwf	menu@state^0,c
   751                           
   752                           ;Menu.c: 46:    }
   753  000270  0012               	return	
   754  000272                     l2497:
   755  000272  0E02               	movlw	2
   756  000274  184D               	xorwf	_NovaTecla^0,w,c
   757  000276  A4D8               	btfss	status,2,c
   758  000278  0012               	return	
   759                           
   760                           ;Menu.c: 48:     loginNOTRegister = 0;
   761  00027A  9474               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   762  00027C  D7F7               	goto	l2495
   763  00027E                     l419:
   764                           
   765                           ;Menu.c: 53:    NovaTecla = -1;
   766  00027E  684D               	setf	_NovaTecla^0,c
   767                           
   768                           ;Menu.c: 54:    novaLletra = -1;
   769  000280  684C               	setf	_novaLletra^0,c
   770                           
   771                           ;Menu.c: 55:    LcClear();
   772  000282  EC1D  F007         	call	_LcClear	;wreg free
   773                           
   774                           ;Menu.c: 56:    LcNewString("USER: ");
   775  000286  0E1B               	movlw	low STR_3
   776  000288  6E63               	movwf	LcNewString@new_s^0,c
   777  00028A  EC93  F007         	call	_LcNewString	;wreg free
   778                           
   779                           ;Menu.c: 57:    state = 4;
   780  00028E  0E04               	movlw	4
   781  000290  6E2A               	movwf	menu@state^0,c
   782                           
   783                           ;Menu.c: 58:   break;
   784  000292  0012               	return	
   785  000294                     l2509:
   786                           
   787                           ;Menu.c: 60:    if (LcLliure()) {
   788  000294  EC87  F007         	call	_LcLliure	;wreg free
   789  000298  A0D8               	btfss	status,0,c
   790  00029A  0012               	return	
   791                           
   792                           ;Menu.c: 61:     LcGotoXY(0,1);
   793  00029C  0E01               	movlw	1
   794  00029E  6E6B               	movwf	LcGotoXY@Row^0,c
   795  0002A0  0E00               	movlw	0
   796  0002A2  EC50  F006         	call	_LcGotoXY
   797                           
   798                           ;Menu.c: 62:     LcNewString("PSWD: ");
   799  0002A6  0E14               	movlw	low STR_4
   800  0002A8  6E63               	movwf	LcNewString@new_s^0,c
   801  0002AA  EC93  F007         	call	_LcNewString	;wreg free
   802                           
   803                           ;Menu.c: 63:     state = 5;
   804  0002AE  0E05               	movlw	5
   805  0002B0  6E2A               	movwf	menu@state^0,c
   806  0002B2  0012               	return	
   807  0002B4                     l2517:
   808                           
   809                           ;Menu.c: 67:    if (LcLliure()) {
   810  0002B4  EC87  F007         	call	_LcLliure	;wreg free
   811  0002B8  A0D8               	btfss	status,0,c
   812  0002BA  0012               	return	
   813                           
   814                           ;Menu.c: 68:     LcGotoXY(6,0);
   815  0002BC  0E00               	movlw	0
   816  0002BE  6E6B               	movwf	LcGotoXY@Row^0,c
   817  0002C0  0E06               	movlw	6
   818  0002C2  EC50  F006         	call	_LcGotoXY
   819                           
   820                           ;Menu.c: 69:     SMSon();
   821  0002C6  ECAF  F007         	call	_SMSon	;wreg free
   822                           
   823                           ;Menu.c: 70:     j =0;
   824  0002CA  0E00               	movlw	0
   825  0002CC  6E2C               	movwf	_j^0,c
   826  0002CE                     l2525:
   827                           
   828                           ;Menu.c: 71:     state = 6;
   829  0002CE  0E06               	movlw	6
   830  0002D0  6E2A               	movwf	menu@state^0,c
   831  0002D2  0012               	return	
   832  0002D4                     l2527:
   833                           
   834                           ;Menu.c: 75:    if (novaLletra > 47 && NovaTecla != 10) {
   835  0002D4  504C               	movf	_novaLletra^0,w,c
   836  0002D6  0A80               	xorlw	128
   837  0002D8  0F50               	addlw	-176
   838  0002DA  A0D8               	btfss	status,0,c
   839  0002DC  D00F               	goto	l2537
   840  0002DE  0E0A               	movlw	10
   841  0002E0  184D               	xorwf	_NovaTecla^0,w,c
   842  0002E2  B4D8               	btfsc	status,2,c
   843  0002E4  D00B               	goto	l2537
   844                           
   845                           ;Menu.c: 76:     LcPutChar(novaLletra);
   846  0002E6  504C               	movf	_novaLletra^0,w,c
   847  0002E8  ECA0  F005         	call	_LcPutChar
   848                           
   849                           ;Menu.c: 77:     UenviaChar(novaLletra,j);
   850  0002EC  C02C  F063         	movff	_j,UenviaChar@pos
   851  0002F0  504C               	movf	_novaLletra^0,w,c
   852  0002F2  EC73  F007         	call	_UenviaChar
   853  0002F6                     l2535:
   854                           
   855                           ;Menu.c: 78:     state = 7;
   856  0002F6  0E07               	movlw	7
   857  0002F8  6E2A               	movwf	menu@state^0,c
   858                           
   859                           ;Menu.c: 79:    }
   860  0002FA  0012               	return	
   861  0002FC                     l2537:
   862  0002FC  0E0B               	movlw	11
   863  0002FE  184D               	xorwf	_NovaTecla^0,w,c
   864  000300  A4D8               	btfss	status,2,c
   865  000302  0012               	return	
   866  000304  D7F8               	goto	l2535
   867  000306                     l2541:
   868                           
   869                           ;Menu.c: 85:    if (j != 7 && NovaTecla != 11) {
   870  000306  0E07               	movlw	7
   871  000308  182C               	xorwf	_j^0,w,c
   872  00030A  B4D8               	btfsc	status,2,c
   873  00030C  D008               	goto	l2553
   874  00030E  0E0B               	movlw	11
   875  000310  184D               	xorwf	_NovaTecla^0,w,c
   876  000312  B4D8               	btfsc	status,2,c
   877  000314  D004               	goto	l2553
   878                           
   879                           ;Menu.c: 86:     j++;
   880  000316  2A2C               	incf	_j^0,f,c
   881                           
   882                           ;Menu.c: 87:     NovaTecla = -1;
   883  000318  684D               	setf	_NovaTecla^0,c
   884                           
   885                           ;Menu.c: 88:     novaLletra = -1;
   886  00031A  684C               	setf	_novaLletra^0,c
   887  00031C  D7D8               	goto	l2525
   888  00031E                     l2553:
   889  00031E  0E07               	movlw	7
   890  000320  182C               	xorwf	_j^0,w,c
   891  000322  B4D8               	btfsc	status,2,c
   892  000324  D004               	goto	u2010
   893  000326  0E0B               	movlw	11
   894  000328  184D               	xorwf	_NovaTecla^0,w,c
   895  00032A  A4D8               	btfss	status,2,c
   896  00032C  0012               	return	
   897  00032E                     u2010:
   898                           
   899                           ;Menu.c: 92:     LcGotoXY(6,1);
   900  00032E  0E01               	movlw	1
   901  000330  6E6B               	movwf	LcGotoXY@Row^0,c
   902  000332  0E06               	movlw	6
   903  000334  EC50  F006         	call	_LcGotoXY
   904                           
   905                           ;Menu.c: 93:     UenviaChar('\0',j);
   906  000338  C02C  F063         	movff	_j,UenviaChar@pos
   907  00033C  0E00               	movlw	0
   908  00033E  EC73  F007         	call	_UenviaChar
   909                           
   910                           ;Menu.c: 94:     NovaTecla = -1;
   911  000342  684D               	setf	_NovaTecla^0,c
   912                           
   913                           ;Menu.c: 95:     novaLletra = -1;
   914  000344  684C               	setf	_novaLletra^0,c
   915                           
   916                           ;Menu.c: 96:     j = 0;
   917  000346  0E00               	movlw	0
   918  000348  6E2C               	movwf	_j^0,c
   919  00034A                     l2567:
   920                           
   921                           ;Menu.c: 97:     state = 8;
   922  00034A  0E08               	movlw	8
   923  00034C  6E2A               	movwf	menu@state^0,c
   924  00034E  0012               	return	
   925  000350                     l2569:
   926                           
   927                           ;Menu.c: 101:    if (novaLletra > 47 && NovaTecla != 10) {
   928  000350  504C               	movf	_novaLletra^0,w,c
   929  000352  0A80               	xorlw	128
   930  000354  0F50               	addlw	-176
   931  000356  A0D8               	btfss	status,0,c
   932  000358  D00F               	goto	l2579
   933  00035A  0E0A               	movlw	10
   934  00035C  184D               	xorwf	_NovaTecla^0,w,c
   935  00035E  B4D8               	btfsc	status,2,c
   936  000360  D00B               	goto	l2579
   937                           
   938                           ;Menu.c: 102:     LcPutChar(novaLletra);
   939  000362  504C               	movf	_novaLletra^0,w,c
   940  000364  ECA0  F005         	call	_LcPutChar
   941                           
   942                           ;Menu.c: 103:     UenviaPas(novaLletra,j);
   943  000368  C02C  F063         	movff	_j,UenviaPas@pos
   944  00036C  504C               	movf	_novaLletra^0,w,c
   945  00036E  EC6B  F007         	call	_UenviaPas
   946  000372                     l2577:
   947                           
   948                           ;Menu.c: 104:     state = 9;
   949  000372  0E09               	movlw	9
   950  000374  6E2A               	movwf	menu@state^0,c
   951                           
   952                           ;Menu.c: 105:    }
   953  000376  0012               	return	
   954  000378                     l2579:
   955  000378  0E0B               	movlw	11
   956  00037A  184D               	xorwf	_NovaTecla^0,w,c
   957  00037C  A4D8               	btfss	status,2,c
   958  00037E  0012               	return	
   959  000380  D7F8               	goto	l2577
   960  000382                     l2583:
   961                           
   962                           ;Menu.c: 111:    if (j != 7 && NovaTecla != 11) {
   963  000382  0E07               	movlw	7
   964  000384  182C               	xorwf	_j^0,w,c
   965  000386  B4D8               	btfsc	status,2,c
   966  000388  D008               	goto	l2595
   967  00038A  0E0B               	movlw	11
   968  00038C  184D               	xorwf	_NovaTecla^0,w,c
   969  00038E  B4D8               	btfsc	status,2,c
   970  000390  D004               	goto	l2595
   971                           
   972                           ;Menu.c: 112:     j++;
   973  000392  2A2C               	incf	_j^0,f,c
   974                           
   975                           ;Menu.c: 113:     NovaTecla = -1;
   976  000394  684D               	setf	_NovaTecla^0,c
   977                           
   978                           ;Menu.c: 114:     novaLletra = -1;
   979  000396  684C               	setf	_novaLletra^0,c
   980  000398  D7D8               	goto	l2567
   981  00039A                     l2595:
   982  00039A  0E07               	movlw	7
   983  00039C  182C               	xorwf	_j^0,w,c
   984  00039E  B4D8               	btfsc	status,2,c
   985  0003A0  D004               	goto	u2080
   986  0003A2  0E0B               	movlw	11
   987  0003A4  184D               	xorwf	_NovaTecla^0,w,c
   988  0003A6  A4D8               	btfss	status,2,c
   989  0003A8  0012               	return	
   990  0003AA                     u2080:
   991                           
   992                           ;Menu.c: 118:     UenviaPas('\0',j);
   993  0003AA  C02C  F063         	movff	_j,UenviaPas@pos
   994  0003AE  0E00               	movlw	0
   995  0003B0  EC6B  F007         	call	_UenviaPas
   996                           
   997                           ;Menu.c: 119:     NovaTecla = -1;
   998  0003B4  684D               	setf	_NovaTecla^0,c
   999                           
  1000                           ;Menu.c: 120:     novaLletra = -1;
  1001  0003B6  684C               	setf	_novaLletra^0,c
  1002                           
  1003                           ;Menu.c: 121:     j = 0;
  1004  0003B8  0E00               	movlw	0
  1005  0003BA  6E2C               	movwf	_j^0,c
  1006                           
  1007                           ;Menu.c: 122:     LcClear();
  1008  0003BC  EC1D  F007         	call	_LcClear	;wreg free
  1009                           
  1010                           ;Menu.c: 123:     UcheckExists();
  1011  0003C0  ECB7  F007         	call	_UcheckExists	;wreg free
  1012                           
  1013                           ;Menu.c: 124:     SMSoff();
  1014  0003C4  ECB2  F007         	call	_SMSoff	;wreg free
  1015                           
  1016                           ;Menu.c: 125:     state = 10;
  1017  0003C8  0E0A               	movlw	10
  1018  0003CA  6E2A               	movwf	menu@state^0,c
  1019  0003CC  0012               	return	
  1020  0003CE                     l2615:
  1021                           
  1022                           ;Menu.c: 129:    if (!UcheckExistsNotFinished()) {
  1023  0003CE  EC7B  F007         	call	_UcheckExistsNotFinished	;wreg free
  1024  0003D2  B0D8               	btfsc	status,0,c
  1025  0003D4  0012               	return	
  1026                           
  1027                           ;Menu.c: 130:     state = 11;
  1028  0003D6  0E0B               	movlw	11
  1029  0003D8  6E2A               	movwf	menu@state^0,c
  1030  0003DA  0012               	return	
  1031  0003DC                     l446:
  1032                           
  1033                           ;Menu.c: 134:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1034  0003DC  B474               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1035  0003DE  D007               	goto	l447
  1036  0003E0  EC81  F007         	call	_UcheckExistsGetError	;wreg free
  1037  0003E4  B0D8               	btfsc	status,0,c
  1038  0003E6  D003               	goto	l447
  1039                           
  1040                           ;Menu.c: 135:     state = 12;
  1041  0003E8  0E0C               	movlw	12
  1042  0003EA  6E2A               	movwf	menu@state^0,c
  1043                           
  1044                           ;Menu.c: 136:    }
  1045  0003EC  0012               	return	
  1046  0003EE                     l447:
  1047  0003EE  A474               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1048  0003F0  D007               	goto	l2627
  1049  0003F2  EC81  F007         	call	_UcheckExistsGetError	;wreg free
  1050  0003F6  A0D8               	btfss	status,0,c
  1051  0003F8  D003               	goto	l2627
  1052                           
  1053                           ;Menu.c: 138:     state = 13;
  1054  0003FA  0E0D               	movlw	13
  1055  0003FC  6E2A               	movwf	menu@state^0,c
  1056                           
  1057                           ;Menu.c: 139:    }
  1058  0003FE  0012               	return	
  1059  000400                     l2627:
  1060  000400  A474               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1061  000402  D002               	goto	u2140
  1062  000404  0E01               	movlw	1
  1063  000406  D001               	goto	u2142
  1064  000408                     u2140:
  1065  000408  0E00               	movlw	0
  1066  00040A                     u2142:
  1067  00040A  6E72               	movwf	??_menu^0,c
  1068  00040C  EC81  F007         	call	_UcheckExistsGetError	;wreg free
  1069  000410  A0D8               	btfss	status,0,c
  1070  000412  D002               	goto	u2150
  1071  000414  0E01               	movlw	1
  1072  000416  D001               	goto	u2152
  1073  000418                     u2150:
  1074  000418  0E00               	movlw	0
  1075  00041A                     u2152:
  1076  00041A  1A72               	xorwf	??_menu^0,f,c
  1077  00041C  B4D8               	btfsc	status,2,c
  1078  00041E  0012               	return	
  1079                           
  1080                           ;Menu.c: 141:     state = 0;
  1081  000420  0E00               	movlw	0
  1082  000422  6E2A               	movwf	menu@state^0,c
  1083  000424  0012               	return	
  1084  000426                     l2633:
  1085  000426  502A               	movf	menu@state^0,w,c
  1086  000428  6E72               	movwf	??_menu^0,c
  1087  00042A  6A73               	clrf	(??_menu+1)^0,c
  1088                           
  1089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1090                           ; Switch size 1, requested type "simple"
  1091                           ; Number of cases is 1, Range of values is 0 to 0
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte            4     3 (average)
  1095                           ;	Chosen strategy is simple_byte
  1096  00042C  5073               	movf	(??_menu+1)^0,w,c
  1097  00042E  0A00               	xorlw	0	; case 0
  1098  000430  A4D8               	btfss	status,2,c
  1099  000432  0012               	return	
  1100                           
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 14, Range of values is 0 to 13
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte           43    22 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107  000434  5072               	movf	??_menu^0,w,c
  1108  000436  0A00               	xorlw	0	; case 0
  1109  000438  B4D8               	btfsc	status,2,c
  1110  00043A  D6F5               	goto	l2473
  1111  00043C  0A01               	xorlw	1	; case 1
  1112  00043E  B4D8               	btfsc	status,2,c
  1113  000440  D6FB               	goto	l2479
  1114  000442  0A03               	xorlw	3	; case 2
  1115  000444  B4D8               	btfsc	status,2,c
  1116  000446  D709               	goto	l2489
  1117  000448  0A01               	xorlw	1	; case 3
  1118  00044A  B4D8               	btfsc	status,2,c
  1119  00044C  D718               	goto	l419
  1120  00044E  0A07               	xorlw	7	; case 4
  1121  000450  B4D8               	btfsc	status,2,c
  1122  000452  D720               	goto	l2509
  1123  000454  0A01               	xorlw	1	; case 5
  1124  000456  B4D8               	btfsc	status,2,c
  1125  000458  D72D               	goto	l2517
  1126  00045A  0A03               	xorlw	3	; case 6
  1127  00045C  B4D8               	btfsc	status,2,c
  1128  00045E  D73A               	goto	l2527
  1129  000460  0A01               	xorlw	1	; case 7
  1130  000462  B4D8               	btfsc	status,2,c
  1131  000464  D750               	goto	l2541
  1132  000466  0A0F               	xorlw	15	; case 8
  1133  000468  B4D8               	btfsc	status,2,c
  1134  00046A  D772               	goto	l2569
  1135  00046C  0A01               	xorlw	1	; case 9
  1136  00046E  B4D8               	btfsc	status,2,c
  1137  000470  D788               	goto	l2583
  1138  000472  0A03               	xorlw	3	; case 10
  1139  000474  B4D8               	btfsc	status,2,c
  1140  000476  D7AB               	goto	l2615
  1141  000478  0A01               	xorlw	1	; case 11
  1142  00047A  B4D8               	btfsc	status,2,c
  1143  00047C  D7AF               	goto	l446
  1144  00047E  0A07               	xorlw	7	; case 12
  1145  000480  B4D8               	btfsc	status,2,c
  1146  000482  0012               	return	
  1147  000484  0A01               	xorlw	1	; case 13
  1148  000486  0012               	return	
  1149  000488                     __end_of_menu:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _UgetNumUsuaris *****************
  1153 ;; Defined at:
  1154 ;;		line 25 in file "Usuaris.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      unsigned char 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1
  1168 ;;      Params:         0       0       0
  1169 ;;      Locals:         0       0       0
  1170 ;;      Temps:          0       0       0
  1171 ;;      Totals:         0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 2
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_menu
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text2
  1183  000F6A                     __ptext2:
  1184                           	callstack 0
  1185  000F6A                     _UgetNumUsuaris:
  1186                           	callstack 27
  1187                           
  1188                           ;Usuaris.c: 26:     return numUsuaris;
  1189                           
  1190                           ;incstack = 0
  1191  000F6A  5028               	movf	_numUsuaris^0,w,c
  1192  000F6C  0012               	return		;funcret
  1193  000F6E                     __end_of_UgetNumUsuaris:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _UenviaPas *****************
  1197 ;; Defined at:
  1198 ;;		line 41 in file "Usuaris.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  c               1    wreg     unsigned char 
  1201 ;;  pos             1    5[COMRAM] unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  c               1    6[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1
  1213 ;;      Params:         1       0       0
  1214 ;;      Locals:         1       0       0
  1215 ;;      Temps:          0       0       0
  1216 ;;      Totals:         2       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 2
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_menu
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text3
  1228  000ED6                     __ptext3:
  1229                           	callstack 0
  1230  000ED6                     _UenviaPas:
  1231                           	callstack 27
  1232                           
  1233                           ;incstack = 0
  1234                           ;UenviaPas@c stored from wreg
  1235  000ED6  6E64               	movwf	UenviaPas@c^0,c
  1236                           
  1237                           ;Usuaris.c: 42:     tmpPassword[pos] = c;
  1238  000ED8  5063               	movf	UenviaPas@pos^0,w,c
  1239  000EDA  0F19               	addlw	low _tmpPassword
  1240  000EDC  6ED9               	movwf	fsr2l,c
  1241  000EDE  6ADA               	clrf	fsr2h,c
  1242  000EE0  C064  FFDF         	movff	UenviaPas@c,indf2
  1243  000EE4  0012               	return		;funcret
  1244  000EE6                     __end_of_UenviaPas:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _UenviaChar *****************
  1248 ;; Defined at:
  1249 ;;		line 38 in file "Usuaris.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  c               1    wreg     unsigned char 
  1252 ;;  pos             1    5[COMRAM] unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  c               1    6[COMRAM] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1
  1264 ;;      Params:         1       0       0
  1265 ;;      Locals:         1       0       0
  1266 ;;      Temps:          0       0       0
  1267 ;;      Totals:         2       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 2
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_menu
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text4
  1279  000EE6                     __ptext4:
  1280                           	callstack 0
  1281  000EE6                     _UenviaChar:
  1282                           	callstack 27
  1283                           
  1284                           ;incstack = 0
  1285                           ;UenviaChar@c stored from wreg
  1286  000EE6  6E64               	movwf	UenviaChar@c^0,c
  1287                           
  1288                           ;Usuaris.c: 39:     tmpUsername[pos] = c;
  1289  000EE8  5063               	movf	UenviaChar@pos^0,w,c
  1290  000EEA  0F3A               	addlw	low _tmpUsername
  1291  000EEC  6ED9               	movwf	fsr2l,c
  1292  000EEE  6ADA               	clrf	fsr2h,c
  1293  000EF0  C064  FFDF         	movff	UenviaChar@c,indf2
  1294  000EF4  0012               	return		;funcret
  1295  000EF6                     __end_of_UenviaChar:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _UcheckExistsNotFinished *****************
  1299 ;; Defined at:
  1300 ;;		line 32 in file "Usuaris.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;		None               void
  1307 ;; Registers used:
  1308 ;;		status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1
  1314 ;;      Params:         0       0       0
  1315 ;;      Locals:         0       0       0
  1316 ;;      Temps:          0       0       0
  1317 ;;      Totals:         0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 2
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_menu
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text5
  1329  000EF6                     __ptext5:
  1330                           	callstack 0
  1331  000EF6                     _UcheckExistsNotFinished:
  1332                           	callstack 27
  1333                           
  1334                           ;Usuaris.c: 33:     return do_check_exists;
  1335                           
  1336                           ;incstack = 0
  1337  000EF6  B274               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1338  000EF8  D002               	goto	l1435
  1339  000EFA  90D8               	bcf	status,0,c
  1340  000EFC  0012               	return	
  1341  000EFE                     l1435:
  1342  000EFE  80D8               	bsf	status,0,c
  1343  000F00  0012               	return		;funcret
  1344  000F02                     __end_of_UcheckExistsNotFinished:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _UcheckExistsGetError *****************
  1348 ;; Defined at:
  1349 ;;		line 35 in file "Usuaris.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;		None               void
  1356 ;; Registers used:
  1357 ;;		status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1
  1363 ;;      Params:         0       0       0
  1364 ;;      Locals:         0       0       0
  1365 ;;      Temps:          0       0       0
  1366 ;;      Totals:         0       0       0
  1367 ;;Total ram usage:        0 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 2
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_menu
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text6
  1378  000F02                     __ptext6:
  1379                           	callstack 0
  1380  000F02                     _UcheckExistsGetError:
  1381                           	callstack 27
  1382                           
  1383                           ;Usuaris.c: 36:     return return_error;
  1384                           
  1385                           ;incstack = 0
  1386  000F02  B074               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1387  000F04  D002               	goto	l1443
  1388  000F06  90D8               	bcf	status,0,c
  1389  000F08  0012               	return	
  1390  000F0A                     l1443:
  1391  000F0A  80D8               	bsf	status,0,c
  1392  000F0C  0012               	return		;funcret
  1393  000F0E                     __end_of_UcheckExistsGetError:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _UcheckExists *****************
  1397 ;; Defined at:
  1398 ;;		line 29 in file "Usuaris.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		None
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1
  1412 ;;      Params:         0       0       0
  1413 ;;      Locals:         0       0       0
  1414 ;;      Temps:          0       0       0
  1415 ;;      Totals:         0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 2
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_menu
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text7
  1427  000F6E                     __ptext7:
  1428                           	callstack 0
  1429  000F6E                     _UcheckExists:
  1430                           	callstack 27
  1431                           
  1432                           ;Usuaris.c: 30:     do_check_exists = 1;
  1433                           
  1434                           ;incstack = 0
  1435  000F6E  8274               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1436  000F70  0012               	return		;funcret
  1437  000F72                     __end_of_UcheckExists:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _SMSon *****************
  1441 ;; Defined at:
  1442 ;;		line 114 in file "Ssms.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1
  1456 ;;      Params:         0       0       0
  1457 ;;      Locals:         0       0       0
  1458 ;;      Temps:          0       0       0
  1459 ;;      Totals:         0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 2
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_menu
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text8
  1471  000F5E                     __ptext8:
  1472                           	callstack 0
  1473  000F5E                     _SMSon:
  1474                           	callstack 27
  1475                           
  1476                           ;Ssms.c: 115:     setSMSon = 1;
  1477                           
  1478                           ;incstack = 0
  1479  000F5E  8674               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1480                           
  1481                           ;Ssms.c: 116:     novaTecla = -1;
  1482  000F60  6850               	setf	_novaTecla^0,c
  1483  000F62  0012               	return		;funcret
  1484  000F64                     __end_of_SMSon:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _SMSoff *****************
  1488 ;; Defined at:
  1489 ;;		line 119 in file "Ssms.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		None
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1
  1503 ;;      Params:         0       0       0
  1504 ;;      Locals:         0       0       0
  1505 ;;      Temps:          0       0       0
  1506 ;;      Totals:         0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 2
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_menu
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text9
  1518  000F64                     __ptext9:
  1519                           	callstack 0
  1520  000F64                     _SMSoff:
  1521                           	callstack 27
  1522                           
  1523                           ;Ssms.c: 120:     setSMSon = 0;
  1524                           
  1525                           ;incstack = 0
  1526  000F64  9674               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1527                           
  1528                           ;Ssms.c: 121:     novaTecla = -1;
  1529  000F66  6850               	setf	_novaTecla^0,c
  1530  000F68  0012               	return		;funcret
  1531  000F6A                     __end_of_SMSoff:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _LcNewString *****************
  1535 ;; Defined at:
  1536 ;;		line 239 in file "LcTLCD.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1539 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1
  1551 ;;      Params:         1       0       0
  1552 ;;      Locals:         0       0       0
  1553 ;;      Temps:          0       0       0
  1554 ;;      Totals:         1       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 2
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_menu
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text10
  1566  000F26                     __ptext10:
  1567                           	callstack 0
  1568  000F26                     _LcNewString:
  1569                           	callstack 27
  1570                           
  1571                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1572                           
  1573                           ;incstack = 0
  1574  000F26  C063  F034         	movff	LcNewString@new_s,_s_ptr
  1575                           
  1576                           ;LcTLCD.c: 241:     nou_s = 1;
  1577  000F2A  8874               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1578  000F2C  0012               	return		;funcret
  1579  000F2E                     __end_of_LcNewString:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _LcLliure *****************
  1583 ;; Defined at:
  1584 ;;		line 265 in file "LcTLCD.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;		None               void
  1591 ;; Registers used:
  1592 ;;		status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1
  1598 ;;      Params:         0       0       0
  1599 ;;      Locals:         0       0       0
  1600 ;;      Temps:          0       0       0
  1601 ;;      Totals:         0       0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 2
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_menu
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text11
  1613  000F0E                     __ptext11:
  1614                           	callstack 0
  1615  000F0E                     _LcLliure:
  1616                           	callstack 27
  1617                           
  1618                           ;LcTLCD.c: 266:     return !nou_s;
  1619                           
  1620                           ;incstack = 0
  1621  000F0E  A874               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1622  000F10  D002               	goto	l1407
  1623  000F12  90D8               	bcf	status,0,c
  1624  000F14  0012               	return	
  1625  000F16                     l1407:
  1626  000F16  80D8               	bsf	status,0,c
  1627  000F18  0012               	return		;funcret
  1628  000F1A                     __end_of_LcLliure:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _LcClear *****************
  1632 ;; Defined at:
  1633 ;;		line 82 in file "LcTLCD.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1
  1647 ;;      Params:         0       0       0
  1648 ;;      Locals:         0       0       0
  1649 ;;      Temps:          0       0       0
  1650 ;;      Totals:         0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 5
  1654 ;; This function calls:
  1655 ;;		_CantaIR
  1656 ;;		_Espera
  1657 ;;		_LcGotoXY
  1658 ;;		_WaitForBusy
  1659 ;; This function is called by:
  1660 ;;		_menu
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text12
  1665  000E3A                     __ptext12:
  1666                           	callstack 0
  1667  000E3A                     _LcClear:
  1668                           	callstack 24
  1669                           
  1670                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1671                           
  1672                           ;incstack = 0
  1673  000E3A  EC30  F006         	call	_WaitForBusy	;wreg free
  1674  000E3E  0E01               	movlw	1
  1675  000E40  ECBF  F006         	call	_CantaIR
  1676                           
  1677                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1678  000E44  0E00               	movlw	0
  1679  000E46  6E6B               	movwf	(Espera@ms+1)^0,c
  1680  000E48  0E03               	movlw	3
  1681  000E4A  6E6A               	movwf	Espera@ms^0,c
  1682  000E4C  5035               	movf	_Timer^0,w,c
  1683  000E4E  EC2F  F007         	call	_Espera
  1684                           
  1685                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1686  000E52  0E00               	movlw	0
  1687  000E54  6E6B               	movwf	LcGotoXY@Row^0,c
  1688  000E56  0E00               	movlw	0
  1689  000E58  EC50  F006         	call	_LcGotoXY
  1690  000E5C  0012               	return		;funcret
  1691  000E5E                     __end_of_LcClear:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _init_ports *****************
  1695 ;; Defined at:
  1696 ;;		line 19 in file "main.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1
  1710 ;;      Params:         0       0       0
  1711 ;;      Locals:         0       0       0
  1712 ;;      Temps:          0       0       0
  1713 ;;      Totals:         0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 2
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text13
  1725  000E82                     __ptext13:
  1726                           	callstack 0
  1727  000E82                     _init_ports:
  1728                           	callstack 28
  1729                           
  1730                           ;incstack = 0
  1731  000E82  0E03               	movlw	3
  1732  000E84  6E92               	movwf	146,c	;volatile
  1733  000E86  0EE0               	movlw	224
  1734  000E88  6E93               	movwf	147,c	;volatile
  1735  000E8A  968A               	bcf	138,3,c	;volatile
  1736  000E8C  908A               	bcf	138,0,c	;volatile
  1737  000E8E  928A               	bcf	138,1,c	;volatile
  1738                           
  1739                           ;main.c: 42:     TRISC = 0xC0;
  1740  000E90  0EC0               	movlw	192
  1741  000E92  6E94               	movwf	148,c	;volatile
  1742                           
  1743                           ;main.c: 52:     TRISD = 0x8F;
  1744  000E94  0E8F               	movlw	143
  1745  000E96  6E95               	movwf	149,c	;volatile
  1746                           
  1747                           ;main.c: 53:     LATD = 0x00;
  1748  000E98  0E00               	movlw	0
  1749  000E9A  6E8C               	movwf	140,c	;volatile
  1750                           
  1751                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1752  000E9C  8EA6               	bsf	166,7,c	;volsfr
  1753                           
  1754                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1755  000E9E  9CA6               	bcf	166,6,c	;volsfr
  1756  000EA0  0012               	return		;funcret
  1757  000EA2                     __end_of_init_ports:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _escriureEEPROM *****************
  1761 ;; Defined at:
  1762 ;;		line 129 in file "Usuaris.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  caca            1    5[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1
  1776 ;;      Params:         0       0       0
  1777 ;;      Locals:         1       0       0
  1778 ;;      Temps:          0       0       0
  1779 ;;      Totals:         1       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text14
  1791  000DE0                     __ptext14:
  1792                           	callstack 0
  1793  000DE0                     _escriureEEPROM:
  1794                           	callstack 28
  1795                           
  1796                           ;Usuaris.c: 130:     for(unsigned char caca = 0; caca < 160; caca++){
  1797                           
  1798                           ;incstack = 0
  1799  000DE0  0E00               	movlw	0
  1800  000DE2  6E63               	movwf	escriureEEPROM@caca^0,c
  1801  000DE4                     l1565:
  1802                           
  1803                           ;Usuaris.c: 131:         EEADR = 0;
  1804  000DE4  0E00               	movlw	0
  1805  000DE6  6EA9               	movwf	169,c	;volatile
  1806                           
  1807                           ;Usuaris.c: 132:         EEDATA = 0;
  1808  000DE8  0E00               	movlw	0
  1809  000DEA  6EA8               	movwf	168,c	;volatile
  1810                           
  1811                           ;Usuaris.c: 133:         EECON1bits.EEPGD = 0;
  1812  000DEC  9EA6               	bcf	166,7,c	;volsfr
  1813                           
  1814                           ;Usuaris.c: 134:         EECON1bits.CFGS = 0;
  1815  000DEE  9CA6               	bcf	166,6,c	;volsfr
  1816                           
  1817                           ;Usuaris.c: 135:         EECON1bits.WREN = 1;
  1818  000DF0  84A6               	bsf	166,2,c	;volsfr
  1819                           
  1820                           ;Usuaris.c: 136:         INTCONbits.GIE = 0;
  1821  000DF2  9EF2               	bcf	242,7,c	;volatile
  1822                           
  1823                           ;Usuaris.c: 137:         EECON2 = 85;
  1824  000DF4  0E55               	movlw	85
  1825  000DF6  6EA7               	movwf	167,c	;volsfr
  1826                           
  1827                           ;Usuaris.c: 138:         EECON2 = 170;
  1828  000DF8  0EAA               	movlw	170
  1829  000DFA  6EA7               	movwf	167,c	;volsfr
  1830                           
  1831                           ;Usuaris.c: 139:          EECON1bits.WR = 1;
  1832  000DFC  82A6               	bsf	166,1,c	;volsfr
  1833  000DFE                     l562:
  1834                           
  1835                           ;Usuaris.c: 140:         while(EECON1bits.WR){
  1836  000DFE  B2A6               	btfsc	166,1,c	;volsfr
  1837  000E00  D7FE               	goto	l562
  1838                           
  1839                           ;Usuaris.c: 145:     }
  1840  000E02  2A63               	incf	escriureEEPROM@caca^0,f,c
  1841  000E04  0E9F               	movlw	159
  1842  000E06  6463               	cpfsgt	escriureEEPROM@caca^0,c
  1843  000E08  D7ED               	goto	l1565
  1844                           
  1845                           ;Usuaris.c: 146:    INTCONbits.GIE = 1;
  1846  000E0A  8EF2               	bsf	242,7,c	;volatile
  1847  000E0C  0012               	return		;funcret
  1848  000E0E                     __end_of_escriureEEPROM:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _UmotorUsers *****************
  1852 ;; Defined at:
  1853 ;;		line 97 in file "Usuaris.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1
  1867 ;;      Params:         0       0       0
  1868 ;;      Locals:         0       0       0
  1869 ;;      Temps:          2       0       0
  1870 ;;      Totals:         2       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 3
  1874 ;; This function calls:
  1875 ;;		_compareStrings
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text15
  1882  0009A0                     __ptext15:
  1883                           	callstack 0
  1884  0009A0                     _UmotorUsers:
  1885                           	callstack 27
  1886                           
  1887                           ;Usuaris.c: 98: static char state = 0;;Usuaris.c: 100:  switch(state) {
  1888                           
  1889                           ;incstack = 0
  1890  0009A0  D02B               	goto	l2665
  1891  0009A2                     l547:
  1892                           
  1893                           ;Usuaris.c: 102:    if (do_check_exists == 0) {
  1894  0009A2  A274               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1895  0009A4  0012               	return	
  1896                           
  1897                           ;Usuaris.c: 104:    else if (do_check_exists == 1) {
  1898  0009A6  A274               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1899  0009A8  0012               	return	
  1900                           
  1901                           ;Usuaris.c: 105:     return_error = 0;
  1902  0009AA  9074               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1903                           
  1904                           ;Usuaris.c: 106:     i = 0;
  1905  0009AC  0E00               	movlw	0
  1906  0009AE  6E26               	movwf	_i^0,c
  1907                           
  1908                           ;Usuaris.c: 107:     j = 0;
  1909  0009B0  0E00               	movlw	0
  1910  0009B2  6E2C               	movwf	_j^0,c
  1911                           
  1912                           ;Usuaris.c: 108:     state = 1;
  1913  0009B4  0E01               	movlw	1
  1914  0009B6  6E24               	movwf	UmotorUsers@state^0,c
  1915  0009B8  0012               	return	
  1916  0009BA                     l2647:
  1917                           
  1918                           ;Usuaris.c: 112:    if (i < numUsuaris) {
  1919  0009BA  5028               	movf	_numUsuaris^0,w,c
  1920  0009BC  5C26               	subwf	_i^0,w,c
  1921  0009BE  B0D8               	btfsc	status,0,c
  1922  0009C0  D013               	goto	l2657
  1923                           
  1924                           ;Usuaris.c: 113:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  1925  0009C2  0E3A               	movlw	low _tmpUsername
  1926  0009C4  6E63               	movwf	compareStrings@a^0,c
  1927  0009C6  5026               	movf	_i^0,w,c
  1928  0009C8  0D17               	mullw	23
  1929  0009CA  0E00               	movlw	low _usuaris
  1930  0009CC  24F3               	addwf	243,w,c
  1931  0009CE  6E64               	movwf	compareStrings@b^0,c
  1932  0009D0  0E01               	movlw	high _usuaris
  1933  0009D2  20F4               	addwfc	prodh,w,c
  1934  0009D4  6E65               	movwf	(compareStrings@b+1)^0,c
  1935  0009D6  ECED  F005         	call	_compareStrings	;wreg free
  1936  0009DA  0900               	iorlw	0
  1937  0009DC  B4D8               	btfsc	status,2,c
  1938                           
  1939                           ;Usuaris.c: 114:      return_error = 1;
  1940  0009DE  8074               	bsf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1941                           
  1942                           ;Usuaris.c: 117:     i++;
  1943  0009E0  2A26               	incf	_i^0,f,c
  1944                           
  1945                           ;Usuaris.c: 118:     state = 1;
  1946  0009E2  0E01               	movlw	1
  1947  0009E4  6E24               	movwf	UmotorUsers@state^0,c
  1948                           
  1949                           ;Usuaris.c: 119:    }
  1950  0009E6  0012               	return	
  1951  0009E8                     l2657:
  1952  0009E8  5028               	movf	_numUsuaris^0,w,c
  1953  0009EA  1826               	xorwf	_i^0,w,c
  1954  0009EC  A4D8               	btfss	status,2,c
  1955  0009EE  0012               	return	
  1956                           
  1957                           ;Usuaris.c: 121:     do_check_exists = 0;
  1958  0009F0  9274               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1959                           
  1960                           ;Usuaris.c: 122:     state = 0;
  1961  0009F2  0E00               	movlw	0
  1962  0009F4  6E24               	movwf	UmotorUsers@state^0,c
  1963  0009F6  0012               	return	
  1964  0009F8                     l2665:
  1965  0009F8  5024               	movf	UmotorUsers@state^0,w,c
  1966  0009FA  6E68               	movwf	??_UmotorUsers^0,c
  1967  0009FC  6A69               	clrf	(??_UmotorUsers+1)^0,c
  1968                           
  1969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1970                           ; Switch size 1, requested type "simple"
  1971                           ; Number of cases is 1, Range of values is 0 to 0
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte            4     3 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976  0009FE  5069               	movf	(??_UmotorUsers+1)^0,w,c
  1977  000A00  0A00               	xorlw	0	; case 0
  1978  000A02  A4D8               	btfss	status,2,c
  1979  000A04  0012               	return	
  1980                           
  1981                           ; Switch size 1, requested type "simple"
  1982                           ; Number of cases is 2, Range of values is 0 to 1
  1983                           ; switch strategies available:
  1984                           ; Name         Instructions Cycles
  1985                           ; simple_byte            7     4 (average)
  1986                           ;	Chosen strategy is simple_byte
  1987  000A06  5068               	movf	??_UmotorUsers^0,w,c
  1988  000A08  0A00               	xorlw	0	; case 0
  1989  000A0A  B4D8               	btfsc	status,2,c
  1990  000A0C  D7CA               	goto	l547
  1991  000A0E  0A01               	xorlw	1	; case 1
  1992  000A10  A4D8               	btfss	status,2,c
  1993  000A12  0012               	return	
  1994  000A14  D7D2               	goto	l2647
  1995  000A16                     __end_of_UmotorUsers:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _compareStrings *****************
  1999 ;; Defined at:
  2000 ;;		line 87 in file "Usuaris.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2003 ;;		 -> tmpUsername(9), 
  2004 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2005 ;;		 -> usuaris.username(9), usuaris(184), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1
  2017 ;;      Params:         3       0       0
  2018 ;;      Locals:         0       0       0
  2019 ;;      Temps:          2       0       0
  2020 ;;      Totals:         5       0       0
  2021 ;;Total ram usage:        5 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 2
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_UmotorUsers
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text16
  2032  000BDA                     __ptext16:
  2033                           	callstack 0
  2034  000BDA                     _compareStrings:
  2035                           	callstack 27
  2036                           
  2037                           ;Usuaris.c: 88:     while (*a){
  2038                           
  2039                           ;incstack = 0
  2040  000BDA  D00E               	goto	l2267
  2041  000BDC                     l2261:
  2042                           
  2043                           ;Usuaris.c: 89:         if (*a != *b)break;
  2044  000BDC  C064  FFD9         	movff	compareStrings@b,fsr2l
  2045  000BE0  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  2046  000BE4  5063               	movf	compareStrings@a^0,w,c
  2047  000BE6  6EE1               	movwf	fsr1l,c
  2048  000BE8  6AE2               	clrf	fsr1h,c
  2049  000BEA  50DE               	movf	postinc2,w,c
  2050  000BEC  18E6               	xorwf	postinc1,w,c
  2051  000BEE  A4D8               	btfss	status,2,c
  2052  000BF0  D009               	goto	u1590
  2053                           
  2054                           ;Usuaris.c: 90:         a++;
  2055  000BF2  2A63               	incf	compareStrings@a^0,f,c
  2056                           
  2057                           ;Usuaris.c: 91:         b++;
  2058  000BF4  4A64               	infsnz	compareStrings@b^0,f,c
  2059  000BF6  2A65               	incf	(compareStrings@b+1)^0,f,c
  2060  000BF8                     l2267:
  2061                           
  2062                           ;Usuaris.c: 88:     while (*a){
  2063  000BF8  5063               	movf	compareStrings@a^0,w,c
  2064  000BFA  6ED9               	movwf	fsr2l,c
  2065  000BFC  6ADA               	clrf	fsr2h,c
  2066  000BFE  50DF               	movf	indf2,w,c
  2067  000C00  A4D8               	btfss	status,2,c
  2068  000C02  D7EC               	goto	l2261
  2069  000C04                     u1590:
  2070                           
  2071                           ;Usuaris.c: 93:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2072  000C04  C064  FFD9         	movff	compareStrings@b,fsr2l
  2073  000C08  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  2074  000C0C  50DF               	movf	indf2,w,c
  2075  000C0E  6E66               	movwf	??_compareStrings^0,c
  2076  000C10  5063               	movf	compareStrings@a^0,w,c
  2077  000C12  6ED9               	movwf	fsr2l,c
  2078  000C14  6ADA               	clrf	fsr2h,c
  2079  000C16  50DF               	movf	indf2,w,c
  2080  000C18  6E67               	movwf	(??_compareStrings+1)^0,c
  2081  000C1A  5066               	movf	??_compareStrings^0,w,c
  2082  000C1C  5C67               	subwf	(??_compareStrings+1)^0,w,c
  2083  000C1E  0012               	return		;funcret
  2084  000C20                     __end_of_compareStrings:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _Uinit *****************
  2088 ;; Defined at:
  2089 ;;		line 44 in file "Usuaris.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  j               1    9[COMRAM] unsigned char 
  2094 ;;  j               1    8[COMRAM] unsigned char 
  2095 ;;  i               1    7[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1
  2105 ;;      Params:         0       0       0
  2106 ;;      Locals:         3       0       0
  2107 ;;      Temps:          2       0       0
  2108 ;;      Totals:         5       0       0
  2109 ;;Total ram usage:        5 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 2
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text17
  2120  000872                     __ptext17:
  2121                           	callstack 0
  2122  000872                     _Uinit:
  2123                           	callstack 28
  2124                           
  2125                           ;Usuaris.c: 49:     EEADR = 0;
  2126                           
  2127                           ;incstack = 0
  2128  000872  0E00               	movlw	0
  2129  000874  6EA9               	movwf	169,c	;volatile
  2130                           
  2131                           ;Usuaris.c: 50:     EECON1bits.EEPGD = 0;
  2132  000876  9EA6               	bcf	166,7,c	;volsfr
  2133                           
  2134                           ;Usuaris.c: 51:     EECON1bits.CFGS = 0;
  2135  000878  9CA6               	bcf	166,6,c	;volsfr
  2136                           
  2137                           ;Usuaris.c: 52:     EECON1bits.RD = 1;
  2138  00087A  80A6               	bsf	166,0,c	;volsfr
  2139  00087C                     l515:
  2140  00087C  B0A6               	btfsc	166,0,c	;volsfr
  2141  00087E  D7FE               	goto	l515
  2142                           
  2143                           ;Usuaris.c: 54:     numUsuaris = EEDATA;
  2144  000880  CFA8 F028          	movff	4008,_numUsuaris	;volatile
  2145                           
  2146                           ;Usuaris.c: 58:     EEADR++;
  2147  000884  2AA9               	incf	169,f,c	;volatile
  2148                           
  2149                           ;Usuaris.c: 59:     EECON1bits.EEPGD = 0;
  2150  000886  9EA6               	bcf	166,7,c	;volsfr
  2151                           
  2152                           ;Usuaris.c: 60:     EECON1bits.CFGS = 0;
  2153  000888  9CA6               	bcf	166,6,c	;volsfr
  2154  00088A                     l518:
  2155  00088A  B0A6               	btfsc	166,0,c	;volsfr
  2156  00088C  D7FE               	goto	l518
  2157                           
  2158                           ;Usuaris.c: 63:     indexLastUser = EEDATA;
  2159  00088E  CFA8 F027          	movff	4008,_indexLastUser	;volatile
  2160                           
  2161                           ;Usuaris.c: 64:     EEADR++;
  2162  000892  2AA9               	incf	169,f,c	;volatile
  2163                           
  2164                           ;Usuaris.c: 66:     for(char i = 0; i< numUsuaris; i++){
  2165  000894  0E00               	movlw	0
  2166  000896  6E65               	movwf	Uinit@i^0,c
  2167  000898  D041               	goto	l1785
  2168  00089A                     l1755:
  2169                           
  2170                           ;Usuaris.c: 67:         for(char j = 0; j<9; j++){
  2171  00089A  0E00               	movlw	0
  2172  00089C  6E66               	movwf	Uinit@j^0,c
  2173  00089E                     l523:
  2174                           
  2175                           ;Usuaris.c: 68:             EECON1bits.EEPGD = 0;
  2176  00089E  9EA6               	bcf	166,7,c	;volsfr
  2177                           
  2178                           ;Usuaris.c: 69:             EECON1bits.CFGS = 0;
  2179  0008A0  9CA6               	bcf	166,6,c	;volsfr
  2180                           
  2181                           ;Usuaris.c: 70:             EECON1bits.RD = 1;
  2182  0008A2  80A6               	bsf	166,0,c	;volsfr
  2183  0008A4                     l525:
  2184  0008A4  B0A6               	btfsc	166,0,c	;volsfr
  2185  0008A6  D7FE               	goto	l525
  2186                           
  2187                           ;Usuaris.c: 72:             usuaris[i].username[j] = EEDATA;
  2188  0008A8  5065               	movf	Uinit@i^0,w,c
  2189  0008AA  0D17               	mullw	23
  2190  0008AC  0E00               	movlw	low _usuaris
  2191  0008AE  6E63               	movwf	??_Uinit^0,c
  2192  0008B0  0E01               	movlw	high _usuaris
  2193  0008B2  6E64               	movwf	(??_Uinit+1)^0,c
  2194  0008B4  50F3               	movf	243,w,c
  2195  0008B6  2663               	addwf	??_Uinit^0,f,c
  2196  0008B8  50F4               	movf	244,w,c
  2197  0008BA  2264               	addwfc	(??_Uinit+1)^0,f,c
  2198  0008BC  5066               	movf	Uinit@j^0,w,c
  2199  0008BE  2463               	addwf	??_Uinit^0,w,c
  2200  0008C0  6ED9               	movwf	fsr2l,c
  2201  0008C2  0E00               	movlw	0
  2202  0008C4  2064               	addwfc	(??_Uinit+1)^0,w,c
  2203  0008C6  6EDA               	movwf	fsr2h,c
  2204  0008C8  CFA8 FFDF          	movff	4008,indf2	;volatile
  2205                           
  2206                           ;Usuaris.c: 73:             EEADR++;
  2207  0008CC  2AA9               	incf	169,f,c	;volatile
  2208                           
  2209                           ;Usuaris.c: 74:         }
  2210  0008CE  2A66               	incf	Uinit@j^0,f,c
  2211  0008D0  0E08               	movlw	8
  2212  0008D2  6466               	cpfsgt	Uinit@j^0,c
  2213  0008D4  D7E4               	goto	l523
  2214                           
  2215                           ;Usuaris.c: 75:         for(char j = 0; j<9; j++){
  2216  0008D6  0E00               	movlw	0
  2217  0008D8  6E67               	movwf	Uinit@j_1003^0,c
  2218  0008DA                     l528:
  2219                           
  2220                           ;Usuaris.c: 76:             EECON1bits.EEPGD = 0;
  2221  0008DA  9EA6               	bcf	166,7,c	;volsfr
  2222                           
  2223                           ;Usuaris.c: 77:             EECON1bits.CFGS = 0;
  2224  0008DC  9CA6               	bcf	166,6,c	;volsfr
  2225                           
  2226                           ;Usuaris.c: 78:             EECON1bits.RD = 1;
  2227  0008DE  80A6               	bsf	166,0,c	;volsfr
  2228  0008E0                     l530:
  2229  0008E0  B0A6               	btfsc	166,0,c	;volsfr
  2230  0008E2  D7FE               	goto	l530
  2231                           
  2232                           ;Usuaris.c: 80:             usuaris[i].password[j] = EEDATA;
  2233  0008E4  5065               	movf	Uinit@i^0,w,c
  2234  0008E6  0D17               	mullw	23
  2235  0008E8  0E00               	movlw	low _usuaris
  2236  0008EA  6E63               	movwf	??_Uinit^0,c
  2237  0008EC  0E01               	movlw	high _usuaris
  2238  0008EE  6E64               	movwf	(??_Uinit+1)^0,c
  2239  0008F0  0E09               	movlw	9
  2240  0008F2  2663               	addwf	??_Uinit^0,f,c
  2241  0008F4  0E00               	movlw	0
  2242  0008F6  2264               	addwfc	(??_Uinit+1)^0,f,c
  2243  0008F8  50F3               	movf	243,w,c
  2244  0008FA  2663               	addwf	??_Uinit^0,f,c
  2245  0008FC  50F4               	movf	244,w,c
  2246  0008FE  2264               	addwfc	(??_Uinit+1)^0,f,c
  2247  000900  5067               	movf	Uinit@j_1003^0,w,c
  2248  000902  2463               	addwf	??_Uinit^0,w,c
  2249  000904  6ED9               	movwf	fsr2l,c
  2250  000906  0E00               	movlw	0
  2251  000908  2064               	addwfc	(??_Uinit+1)^0,w,c
  2252  00090A  6EDA               	movwf	fsr2h,c
  2253  00090C  CFA8 FFDF          	movff	4008,indf2	;volatile
  2254                           
  2255                           ;Usuaris.c: 81:             EEADR++;
  2256  000910  2AA9               	incf	169,f,c	;volatile
  2257                           
  2258                           ;Usuaris.c: 82:         }
  2259  000912  2A67               	incf	Uinit@j_1003^0,f,c
  2260  000914  0E08               	movlw	8
  2261  000916  6467               	cpfsgt	Uinit@j_1003^0,c
  2262  000918  D7E0               	goto	l528
  2263                           
  2264                           ;Usuaris.c: 83:     }
  2265  00091A  2A65               	incf	Uinit@i^0,f,c
  2266  00091C                     l1785:
  2267  00091C  5028               	movf	_numUsuaris^0,w,c
  2268  00091E  5C65               	subwf	Uinit@i^0,w,c
  2269  000920  B0D8               	btfsc	status,0,c
  2270  000922  0012               	return	
  2271  000924  D7BA               	goto	l1755
  2272  000926                     __end_of_Uinit:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _TiInitTimer *****************
  2276 ;; Defined at:
  2277 ;;		line 18 in file "TiTTimer.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1
  2291 ;;      Params:         0       0       0
  2292 ;;      Locals:         0       0       0
  2293 ;;      Temps:          0       0       0
  2294 ;;      Totals:         0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 2
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text18
  2306  000D14                     __ptext18:
  2307                           	callstack 0
  2308  000D14                     _TiInitTimer:
  2309                           	callstack 28
  2310                           
  2311                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  2312                           
  2313                           ;incstack = 0
  2314  000D14  9ED0               	bcf	208,7,c	;volatile
  2315                           
  2316                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  2317  000D16  8EF2               	bsf	242,7,c	;volatile
  2318                           
  2319                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  2320  000D18  8CF2               	bsf	242,6,c	;volatile
  2321                           
  2322                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  2323  000D1A  8AF2               	bsf	242,5,c	;volatile
  2324                           
  2325                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  2326  000D1C  94F2               	bcf	242,2,c	;volatile
  2327                           
  2328                           ;TiTTimer.c: 25:     T0CON = 136;
  2329  000D1E  0E88               	movlw	136
  2330  000D20  6ED5               	movwf	213,c	;volatile
  2331                           
  2332                           ;TiTTimer.c: 27:     TMR0H = 223;
  2333  000D22  0EDF               	movlw	223
  2334  000D24  6ED7               	movwf	215,c	;volatile
  2335                           
  2336                           ;TiTTimer.c: 28:     TMR0L = 148;
  2337  000D26  0E94               	movlw	148
  2338  000D28  6ED6               	movwf	214,c	;volatile
  2339                           
  2340                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  2341  000D2A  8ED5               	bsf	213,7,c	;volatile
  2342                           
  2343                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  2344  000D2C  0E00               	movlw	0
  2345  000D2E  6E2D               	movwf	_counter^0,c
  2346  000D30                     l1587:
  2347  000D30  0E07               	movlw	7
  2348  000D32  642D               	cpfsgt	_counter^0,c
  2349  000D34  D001               	goto	l1591
  2350  000D36  0012               	return	
  2351  000D38                     l1591:
  2352                           
  2353                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  2354  000D38  502D               	movf	_counter^0,w,c
  2355  000D3A  0D03               	mullw	3
  2356  000D3C  50F3               	movf	243,w,c
  2357  000D3E  0F03               	addlw	low (_s_Timers+2)
  2358  000D40  6ED9               	movwf	fsr2l,c
  2359  000D42  6ADA               	clrf	fsr2h,c
  2360  000D44  0E00               	movlw	0
  2361  000D46  6EDF               	movwf	indf2,c
  2362                           
  2363                           ;TiTTimer.c: 33:     }
  2364  000D48  2A2D               	incf	_counter^0,f,c
  2365  000D4A  D7F2               	goto	l1587
  2366  000D4C                     __end_of_TiInitTimer:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _TeTeclat *****************
  2370 ;; Defined at:
  2371 ;;		line 22 in file "TeTeclat.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1
  2385 ;;      Params:         0       0       0
  2386 ;;      Locals:         0       0       0
  2387 ;;      Temps:          3       0       0
  2388 ;;      Totals:         3       0       0
  2389 ;;Total ram usage:        3 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 3
  2392 ;; This function calls:
  2393 ;;		_MsetNovaTecla
  2394 ;;		_SsetNovaTecla
  2395 ;;		_TiGetTics
  2396 ;;		_TiResetTics
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text19
  2403  000634                     __ptext19:
  2404                           	callstack 0
  2405  000634                     _TeTeclat:
  2406                           	callstack 27
  2407                           
  2408                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  2409                           
  2410                           ;incstack = 0
  2411  000634  A083               	btfss	131,0,c	;volatile
  2412  000636  D003               	goto	u2220
  2413  000638  6A6A               	clrf	??_TeTeclat^0,c
  2414  00063A  2A6A               	incf	??_TeTeclat^0,f,c
  2415  00063C  D001               	goto	u2228
  2416  00063E                     u2220:
  2417  00063E  6A6A               	clrf	??_TeTeclat^0,c
  2418  000640                     u2228:
  2419  000640  A283               	btfss	131,1,c	;volatile
  2420  000642  D002               	goto	u2230
  2421  000644  0E01               	movlw	1
  2422  000646  D001               	goto	u2236
  2423  000648                     u2230:
  2424  000648  0E00               	movlw	0
  2425  00064A                     u2236:
  2426  00064A  0D02               	mullw	2
  2427  00064C  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  2428  000650  A483               	btfss	131,2,c	;volatile
  2429  000652  D002               	goto	u2240
  2430  000654  0E01               	movlw	1
  2431  000656  D001               	goto	u2246
  2432  000658                     u2240:
  2433  000658  0E00               	movlw	0
  2434  00065A                     u2246:
  2435  00065A  0D03               	mullw	3
  2436  00065C  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  2437  000660  A683               	btfss	131,3,c	;volatile
  2438  000662  D002               	goto	u2250
  2439  000664  0E01               	movlw	1
  2440  000666  D001               	goto	u2256
  2441  000668                     u2250:
  2442  000668  0E00               	movlw	0
  2443  00066A                     u2256:
  2444  00066A  0D04               	mullw	4
  2445  00066C  50F3               	movf	243,w,c
  2446  00066E  246C               	addwf	(??_TeTeclat+2)^0,w,c
  2447  000670  246B               	addwf	(??_TeTeclat+1)^0,w,c
  2448  000672  246A               	addwf	??_TeTeclat^0,w,c
  2449  000674  6E2E               	movwf	TeTeclat@files^0,c
  2450                           
  2451                           ;TeTeclat.c: 27:  switch(state) {
  2452  000676  D06F               	goto	l2747
  2453  000678                     l2673:
  2454                           
  2455                           ;TeTeclat.c: 29:    if (files==0) {
  2456  000678  502E               	movf	TeTeclat@files^0,w,c
  2457  00067A  A4D8               	btfss	status,2,c
  2458  00067C  D007               	goto	l2681
  2459                           
  2460                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  2461  00067E  888C               	bsf	140,4,c	;volatile
  2462                           
  2463                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  2464  000680  9A8C               	bcf	140,5,c	;volatile
  2465                           
  2466                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  2467  000682  9C8C               	bcf	140,6,c	;volatile
  2468                           
  2469                           ;TeTeclat.c: 33:     cols=0;
  2470  000684  0E00               	movlw	0
  2471  000686  6E2F               	movwf	TeTeclat@cols^0,c
  2472  000688                     l2679:
  2473                           
  2474                           ;TeTeclat.c: 34:     state++;
  2475  000688  2A30               	incf	TeTeclat@state^0,f,c
  2476                           
  2477                           ;TeTeclat.c: 35:    }
  2478  00068A  0012               	return	
  2479  00068C                     l2681:
  2480  00068C  502E               	movf	TeTeclat@files^0,w,c
  2481  00068E  B4D8               	btfsc	status,2,c
  2482  000690  0012               	return	
  2483                           
  2484                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  2485  000692  5031               	movf	_tiTeclat^0,w,c
  2486  000694  EC5F  F007         	call	_TiResetTics
  2487  000698                     l2685:
  2488                           
  2489                           ;TeTeclat.c: 38:     state = 3;
  2490  000698  0E03               	movlw	3
  2491  00069A  6E30               	movwf	TeTeclat@state^0,c
  2492  00069C  0012               	return	
  2493  00069E                     l2687:
  2494                           
  2495                           ;TeTeclat.c: 42:    if (files==0) {
  2496  00069E  502E               	movf	TeTeclat@files^0,w,c
  2497  0006A0  A4D8               	btfss	status,2,c
  2498  0006A2  D005               	goto	l2695
  2499                           
  2500                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  2501  0006A4  988C               	bcf	140,4,c	;volatile
  2502                           
  2503                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  2504  0006A6  8A8C               	bsf	140,5,c	;volatile
  2505                           
  2506                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  2507  0006A8  9C8C               	bcf	140,6,c	;volatile
  2508                           
  2509                           ;TeTeclat.c: 46:     cols=1;
  2510  0006AA  0E01               	movlw	1
  2511  0006AC  D7EC               	goto	L1
  2512  0006AE                     l2695:
  2513  0006AE  502E               	movf	TeTeclat@files^0,w,c
  2514  0006B0  B4D8               	btfsc	status,2,c
  2515  0006B2  0012               	return	
  2516                           
  2517                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  2518  0006B4  5031               	movf	_tiTeclat^0,w,c
  2519  0006B6  EC5F  F007         	call	_TiResetTics
  2520  0006BA  D7EE               	goto	l2685
  2521  0006BC                     l2701:
  2522                           
  2523                           ;TeTeclat.c: 55:    if (files==0) {
  2524  0006BC  502E               	movf	TeTeclat@files^0,w,c
  2525  0006BE  A4D8               	btfss	status,2,c
  2526  0006C0  D008               	goto	l2707
  2527                           
  2528                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  2529  0006C2  988C               	bcf	140,4,c	;volatile
  2530                           
  2531                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  2532  0006C4  9A8C               	bcf	140,5,c	;volatile
  2533                           
  2534                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  2535  0006C6  8C8C               	bsf	140,6,c	;volatile
  2536                           
  2537                           ;TeTeclat.c: 59:     cols=2;
  2538  0006C8  0E02               	movlw	2
  2539  0006CA  6E2F               	movwf	TeTeclat@cols^0,c
  2540                           
  2541                           ;TeTeclat.c: 60:     state = 0;
  2542  0006CC  0E00               	movlw	0
  2543  0006CE  6E30               	movwf	TeTeclat@state^0,c
  2544                           
  2545                           ;TeTeclat.c: 61:    }
  2546  0006D0  0012               	return	
  2547  0006D2                     l2707:
  2548  0006D2  502E               	movf	TeTeclat@files^0,w,c
  2549  0006D4  B4D8               	btfsc	status,2,c
  2550  0006D6  0012               	return	
  2551                           
  2552                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  2553  0006D8  5031               	movf	_tiTeclat^0,w,c
  2554  0006DA  EC5F  F007         	call	_TiResetTics
  2555  0006DE  D7D4               	goto	l2679
  2556  0006E0                     l2713:
  2557                           
  2558                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  2559  0006E0  5031               	movf	_tiTeclat^0,w,c
  2560  0006E2  EC07  F007         	call	_TiGetTics
  2561  0006E6  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2562  0006E8  0012               	return	
  2563  0006EA  D7CE               	goto	l2679
  2564  0006EC                     l2717:
  2565                           
  2566                           ;TeTeclat.c: 73:    if (files==0) {
  2567  0006EC  502E               	movf	TeTeclat@files^0,w,c
  2568  0006EE  A4D8               	btfss	status,2,c
  2569  0006F0  D003               	goto	l2721
  2570                           
  2571                           ;TeTeclat.c: 74:     state = 1;
  2572  0006F2  0E01               	movlw	1
  2573  0006F4  6E30               	movwf	TeTeclat@state^0,c
  2574                           
  2575                           ;TeTeclat.c: 75:    }
  2576  0006F6  0012               	return	
  2577  0006F8                     l2721:
  2578  0006F8  502E               	movf	TeTeclat@files^0,w,c
  2579  0006FA  B4D8               	btfsc	status,2,c
  2580  0006FC  0012               	return	
  2581                           
  2582                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  2583  0006FE  502E               	movf	TeTeclat@files^0,w,c
  2584  000700  0D03               	mullw	3
  2585  000702  50F3               	movf	243,w,c
  2586  000704  0F4F               	addlw	low (_teclaPremuda+253)
  2587  000706  242F               	addwf	TeTeclat@cols^0,w,c
  2588  000708  6ED9               	movwf	fsr2l,c
  2589  00070A  6ADA               	clrf	fsr2h,c
  2590  00070C  50DF               	movf	indf2,w,c
  2591  00070E  EC9B  F007         	call	_MsetNovaTecla
  2592                           
  2593                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  2594  000712  502E               	movf	TeTeclat@files^0,w,c
  2595  000714  0D03               	mullw	3
  2596  000716  50F3               	movf	243,w,c
  2597  000718  0F4F               	addlw	low (_teclaPremuda+253)
  2598  00071A  242F               	addwf	TeTeclat@cols^0,w,c
  2599  00071C  6ED9               	movwf	fsr2l,c
  2600  00071E  6ADA               	clrf	fsr2h,c
  2601  000720  50DF               	movf	indf2,w,c
  2602  000722  EC97  F007         	call	_SsetNovaTecla
  2603  000726  D7B0               	goto	l2679
  2604  000728                     l2727:
  2605                           
  2606                           ;TeTeclat.c: 84:    if (files==0) {
  2607  000728  502E               	movf	TeTeclat@files^0,w,c
  2608  00072A  A4D8               	btfss	status,2,c
  2609  00072C  0012               	return	
  2610                           
  2611                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  2612  00072E  5031               	movf	_tiTeclat^0,w,c
  2613  000730  EC5F  F007         	call	_TiResetTics
  2614  000734  D7A9               	goto	l2679
  2615  000736                     l2733:
  2616                           
  2617                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  2618  000736  5031               	movf	_tiTeclat^0,w,c
  2619  000738  EC07  F007         	call	_TiGetTics
  2620  00073C  D7D4               	goto	L2
  2621  00073E                     l2737:
  2622                           
  2623                           ;TeTeclat.c: 95:    if (files!=0) {
  2624  00073E  502E               	movf	TeTeclat@files^0,w,c
  2625  000740  B4D8               	btfsc	status,2,c
  2626  000742  D003               	goto	l2741
  2627                           
  2628                           ;TeTeclat.c: 96:     state = 5;
  2629  000744  0E05               	movlw	5
  2630  000746  6E30               	movwf	TeTeclat@state^0,c
  2631                           
  2632                           ;TeTeclat.c: 97:    }
  2633  000748  0012               	return	
  2634  00074A                     l2741:
  2635  00074A  502E               	movf	TeTeclat@files^0,w,c
  2636  00074C  A4D8               	btfss	status,2,c
  2637  00074E  0012               	return	
  2638                           
  2639                           ;TeTeclat.c: 99:     state = 0;
  2640  000750  0E00               	movlw	0
  2641  000752  6E30               	movwf	TeTeclat@state^0,c
  2642  000754  0012               	return	
  2643  000756                     l2747:
  2644  000756  5030               	movf	TeTeclat@state^0,w,c
  2645  000758  6E6A               	movwf	??_TeTeclat^0,c
  2646  00075A  6A6B               	clrf	(??_TeTeclat+1)^0,c
  2647                           
  2648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 1, Range of values is 0 to 0
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte            4     3 (average)
  2654                           ;	Chosen strategy is simple_byte
  2655  00075C  506B               	movf	(??_TeTeclat+1)^0,w,c
  2656  00075E  0A00               	xorlw	0	; case 0
  2657  000760  A4D8               	btfss	status,2,c
  2658  000762  0012               	return	
  2659                           
  2660                           ; Switch size 1, requested type "simple"
  2661                           ; Number of cases is 8, Range of values is 0 to 7
  2662                           ; switch strategies available:
  2663                           ; Name         Instructions Cycles
  2664                           ; simple_byte           25    13 (average)
  2665                           ;	Chosen strategy is simple_byte
  2666  000764  506A               	movf	??_TeTeclat^0,w,c
  2667  000766  0A00               	xorlw	0	; case 0
  2668  000768  B4D8               	btfsc	status,2,c
  2669  00076A  D786               	goto	l2673
  2670  00076C  0A01               	xorlw	1	; case 1
  2671  00076E  B4D8               	btfsc	status,2,c
  2672  000770  D796               	goto	l2687
  2673  000772  0A03               	xorlw	3	; case 2
  2674  000774  B4D8               	btfsc	status,2,c
  2675  000776  D7A2               	goto	l2701
  2676  000778  0A01               	xorlw	1	; case 3
  2677  00077A  B4D8               	btfsc	status,2,c
  2678  00077C  D7B1               	goto	l2713
  2679  00077E  0A07               	xorlw	7	; case 4
  2680  000780  B4D8               	btfsc	status,2,c
  2681  000782  D7B4               	goto	l2717
  2682  000784  0A01               	xorlw	1	; case 5
  2683  000786  B4D8               	btfsc	status,2,c
  2684  000788  D7CF               	goto	l2727
  2685  00078A  0A03               	xorlw	3	; case 6
  2686  00078C  B4D8               	btfsc	status,2,c
  2687  00078E  D7D3               	goto	l2733
  2688  000790  0A01               	xorlw	1	; case 7
  2689  000792  A4D8               	btfss	status,2,c
  2690  000794  0012               	return	
  2691  000796  D7D3               	goto	l2737
  2692  000798                     __end_of_TeTeclat:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _SsetNovaTecla *****************
  2696 ;; Defined at:
  2697 ;;		line 110 in file "Ssms.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  tecla           1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  tecla           1    5[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1
  2711 ;;      Params:         0       0       0
  2712 ;;      Locals:         1       0       0
  2713 ;;      Temps:          0       0       0
  2714 ;;      Totals:         1       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 2
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_TeTeclat
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text20
  2726  000F2E                     __ptext20:
  2727                           	callstack 0
  2728  000F2E                     _SsetNovaTecla:
  2729                           	callstack 27
  2730                           
  2731                           ;incstack = 0
  2732                           ;SsetNovaTecla@tecla stored from wreg
  2733  000F2E  6E63               	movwf	SsetNovaTecla@tecla^0,c
  2734                           
  2735                           ;Ssms.c: 111:     novaTecla = tecla;
  2736  000F30  C063  F050         	movff	SsetNovaTecla@tecla,_novaTecla
  2737  000F34  0012               	return		;funcret
  2738  000F36                     __end_of_SsetNovaTecla:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _MsetNovaTecla *****************
  2742 ;; Defined at:
  2743 ;;		line 17 in file "Menu.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  tecla           1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  tecla           1    5[COMRAM] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1
  2757 ;;      Params:         0       0       0
  2758 ;;      Locals:         1       0       0
  2759 ;;      Temps:          0       0       0
  2760 ;;      Totals:         1       0       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 2
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_TeTeclat
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text21
  2772  000F36                     __ptext21:
  2773                           	callstack 0
  2774  000F36                     _MsetNovaTecla:
  2775                           	callstack 27
  2776                           
  2777                           ;incstack = 0
  2778                           ;MsetNovaTecla@tecla stored from wreg
  2779  000F36  6E63               	movwf	MsetNovaTecla@tecla^0,c
  2780                           
  2781                           ;Menu.c: 18:     NovaTecla = tecla;
  2782  000F38  C063  F04D         	movff	MsetNovaTecla@tecla,_NovaTecla
  2783  000F3C  0012               	return		;funcret
  2784  000F3E                     __end_of_MsetNovaTecla:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _TeInit *****************
  2788 ;; Defined at:
  2789 ;;		line 18 in file "TeTeclat.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1
  2803 ;;      Params:         0       0       0
  2804 ;;      Locals:         0       0       0
  2805 ;;      Temps:          0       0       0
  2806 ;;      Totals:         0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 3
  2810 ;; This function calls:
  2811 ;;		_TiGetTimer
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text22
  2818  000F3E                     __ptext22:
  2819                           	callstack 0
  2820  000F3E                     _TeInit:
  2821                           	callstack 27
  2822                           
  2823                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  2824                           
  2825                           ;incstack = 0
  2826  000F3E  EC6D  F006         	call	_TiGetTimer	;wreg free
  2827  000F42  6E31               	movwf	_tiTeclat^0,c
  2828  000F44  0012               	return		;funcret
  2829  000F46                     __end_of_TeInit:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _Sinit *****************
  2833 ;; Defined at:
  2834 ;;		line 16 in file "Ssms.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1
  2848 ;;      Params:         0       0       0
  2849 ;;      Locals:         0       0       0
  2850 ;;      Temps:          0       0       0
  2851 ;;      Totals:         0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 3
  2855 ;; This function calls:
  2856 ;;		_TiGetTimer
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text23
  2863  000F46                     __ptext23:
  2864                           	callstack 0
  2865  000F46                     _Sinit:
  2866                           	callstack 27
  2867                           
  2868                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2869                           
  2870                           ;incstack = 0
  2871  000F46  EC6D  F006         	call	_TiGetTimer	;wreg free
  2872  000F4A  6E4F               	movwf	_timerSMS^0,c
  2873  000F4C  0012               	return		;funcret
  2874  000F4E                     __end_of_Sinit:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _SMotor *****************
  2878 ;; Defined at:
  2879 ;;		line 21 in file "Ssms.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1
  2893 ;;      Params:         0       0       0
  2894 ;;      Locals:         0       0       0
  2895 ;;      Temps:          2       0       0
  2896 ;;      Totals:         2       0       0
  2897 ;;Total ram usage:        2 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 3
  2900 ;; This function calls:
  2901 ;;		_MNovaLletra
  2902 ;;		_TiGetTics
  2903 ;;		_TiResetTics
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text24
  2910  000488                     __ptext24:
  2911                           	callstack 0
  2912  000488                     _SMotor:
  2913                           	callstack 27
  2914                           
  2915                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  2916                           
  2917                           ;incstack = 0
  2918  000488  D0B7               	goto	l2465
  2919  00048A                     l2337:
  2920                           
  2921                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  2922  00048A  2850               	incf	_novaTecla^0,w,c
  2923  00048C  A4D8               	btfss	status,2,c
  2924  00048E  A674               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2925  000490  D006               	goto	l2345
  2926                           
  2927                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  2928  000492  504F               	movf	_timerSMS^0,w,c
  2929  000494  EC5F  F007         	call	_TiResetTics
  2930                           
  2931                           ;Ssms.c: 27:     state = 3;
  2932  000498  0E03               	movlw	3
  2933  00049A  6E32               	movwf	SMotor@state^0,c
  2934                           
  2935                           ;Ssms.c: 28:    }
  2936  00049C  0012               	return	
  2937  00049E                     l2345:
  2938  00049E  2850               	incf	_novaTecla^0,w,c
  2939  0004A0  A4D8               	btfss	status,2,c
  2940  0004A2  0012               	return	
  2941  0004A4  504F               	movf	_timerSMS^0,w,c
  2942  0004A6  EC07  F007         	call	_TiGetTics
  2943  0004AA  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2944  0004AC  0012               	return	
  2945  0004AE  0E5A               	movlw	90
  2946  0004B0  5C63               	subwf	?_TiGetTics^0,w,c
  2947  0004B2  0E02               	movlw	2
  2948  0004B4  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  2949  0004B6  A0D8               	btfss	status,0,c
  2950  0004B8  0012               	return	
  2951  0004BA  2851               	incf	_lletraASCII^0,w,c
  2952  0004BC  B4D8               	btfsc	status,2,c
  2953  0004BE  0012               	return	
  2954  0004C0  A674               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2955  0004C2  0012               	return	
  2956                           
  2957                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  2958  0004C4  5051               	movf	_lletraASCII^0,w,c
  2959  0004C6  ECA7  F007         	call	_MNovaLletra
  2960                           
  2961                           ;Ssms.c: 31:     lletraASCII = -1;
  2962  0004CA  6851               	setf	_lletraASCII^0,c
  2963                           
  2964                           ;Ssms.c: 32:     ultimaTecla = -1;
  2965  0004CC  684E               	setf	_ultimaTecla^0,c
  2966  0004CE  0012               	return	
  2967  0004D0                     l2359:
  2968                           
  2969                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  2970  0004D0  504E               	movf	_ultimaTecla^0,w,c
  2971  0004D2  1850               	xorwf	_novaTecla^0,w,c
  2972  0004D4  A4D8               	btfss	status,2,c
  2973  0004D6  D010               	goto	l2367
  2974  0004D8  504F               	movf	_timerSMS^0,w,c
  2975  0004DA  EC07  F007         	call	_TiGetTics
  2976  0004DE  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2977  0004E0  D006               	goto	u1700
  2978  0004E2  0E5A               	movlw	90
  2979  0004E4  5C63               	subwf	?_TiGetTics^0,w,c
  2980  0004E6  0E02               	movlw	2
  2981  0004E8  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  2982  0004EA  B0D8               	btfsc	status,0,c
  2983  0004EC  D005               	goto	l2367
  2984  0004EE                     u1700:
  2985                           
  2986                           ;Ssms.c: 37:     novaTecla = -1;
  2987  0004EE  6850               	setf	_novaTecla^0,c
  2988                           
  2989                           ;Ssms.c: 38:     sumaPulsacions++;
  2990  0004F0  2A33               	incf	_sumaPulsacions^0,f,c
  2991                           
  2992                           ;Ssms.c: 39:     lletraASCII++;
  2993  0004F2  2A51               	incf	_lletraASCII^0,f,c
  2994                           
  2995                           ;Ssms.c: 40:     state++;
  2996  0004F4  2A32               	incf	SMotor@state^0,f,c
  2997                           
  2998                           ;Ssms.c: 41:    }
  2999  0004F6  0012               	return	
  3000  0004F8                     l2367:
  3001  0004F8  2850               	incf	_novaTecla^0,w,c
  3002  0004FA  B4D8               	btfsc	status,2,c
  3003  0004FC  0012               	return	
  3004  0004FE  504E               	movf	_ultimaTecla^0,w,c
  3005  000500  1850               	xorwf	_novaTecla^0,w,c
  3006  000502  B4D8               	btfsc	status,2,c
  3007  000504  0012               	return	
  3008                           
  3009                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  3010  000506  5051               	movf	_lletraASCII^0,w,c
  3011  000508  ECA7  F007         	call	_MNovaLletra
  3012                           
  3013                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  3014  00050C  5050               	movf	_novaTecla^0,w,c
  3015  00050E  0F41               	addlw	low (_lletraInici+254)
  3016  000510  6ED9               	movwf	fsr2l,c
  3017  000512  6ADA               	clrf	fsr2h,c
  3018  000514  50DF               	movf	indf2,w,c
  3019  000516  6E51               	movwf	_lletraASCII^0,c
  3020                           
  3021                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  3022  000518  C050  F04E         	movff	_novaTecla,_ultimaTecla
  3023                           
  3024                           ;Ssms.c: 46:     sumaPulsacions = 0;
  3025  00051C  0E00               	movlw	0
  3026  00051E  6E33               	movwf	_sumaPulsacions^0,c
  3027                           
  3028                           ;Ssms.c: 47:     novaTecla = -1;
  3029  000520  6850               	setf	_novaTecla^0,c
  3030                           
  3031                           ;Ssms.c: 48:     state--;
  3032  000522  0632               	decf	SMotor@state^0,f,c
  3033  000524  0012               	return	
  3034  000526                     l2383:
  3035                           
  3036                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  3037  000526  0E07               	movlw	7
  3038  000528  184E               	xorwf	_ultimaTecla^0,w,c
  3039  00052A  B4D8               	btfsc	status,2,c
  3040  00052C  D007               	goto	l2389
  3041  00052E  0E09               	movlw	9
  3042  000530  184E               	xorwf	_ultimaTecla^0,w,c
  3043  000532  B4D8               	btfsc	status,2,c
  3044  000534  D003               	goto	l2389
  3045                           
  3046                           ;Ssms.c: 53:     state = 5;
  3047  000536  0E05               	movlw	5
  3048  000538  6E32               	movwf	SMotor@state^0,c
  3049                           
  3050                           ;Ssms.c: 54:    }
  3051  00053A  0012               	return	
  3052  00053C                     l2389:
  3053  00053C  0E07               	movlw	7
  3054  00053E  184E               	xorwf	_ultimaTecla^0,w,c
  3055  000540  B4D8               	btfsc	status,2,c
  3056  000542  D004               	goto	u1760
  3057  000544  0E09               	movlw	9
  3058  000546  184E               	xorwf	_ultimaTecla^0,w,c
  3059  000548  A4D8               	btfss	status,2,c
  3060  00054A  0012               	return	
  3061  00054C                     u1760:
  3062                           
  3063                           ;Ssms.c: 56:     state = 6;
  3064  00054C  0E06               	movlw	6
  3065  00054E  6E32               	movwf	SMotor@state^0,c
  3066  000550  0012               	return	
  3067  000552                     l2395:
  3068                           
  3069                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  3070  000552  5050               	movf	_novaTecla^0,w,c
  3071  000554  0A80               	xorlw	128
  3072  000556  0F7E               	addlw	-130
  3073  000558  A0D8               	btfss	status,0,c
  3074  00055A  D008               	goto	l2401
  3075  00055C  5050               	movf	_novaTecla^0,w,c
  3076  00055E  0A80               	xorlw	128
  3077  000560  0F76               	addlw	-138
  3078  000562  B0D8               	btfsc	status,0,c
  3079  000564  D003               	goto	l2401
  3080                           
  3081                           ;Ssms.c: 61:     state = 1;
  3082  000566  0E01               	movlw	1
  3083  000568  6E32               	movwf	SMotor@state^0,c
  3084                           
  3085                           ;Ssms.c: 62:    }
  3086  00056A  0012               	return	
  3087  00056C                     l2401:
  3088  00056C  5050               	movf	_novaTecla^0,w,c
  3089  00056E  0A80               	xorlw	128
  3090  000570  0F7E               	addlw	-130
  3091  000572  B0D8               	btfsc	status,0,c
  3092  000574  D00B               	goto	l2411
  3093  000576  2851               	incf	_lletraASCII^0,w,c
  3094  000578  A4D8               	btfss	status,2,c
  3095  00057A  D008               	goto	l2411
  3096                           
  3097                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  3098  00057C  5050               	movf	_novaTecla^0,w,c
  3099  00057E  0F30               	addlw	48
  3100  000580  ECA7  F007         	call	_MNovaLletra
  3101  000584                     l2407:
  3102                           
  3103                           ;Ssms.c: 65:     novaTecla = -1;
  3104  000584  6850               	setf	_novaTecla^0,c
  3105  000586                     l2409:
  3106                           
  3107                           ;Ssms.c: 66:     state = 0;
  3108  000586  0E00               	movlw	0
  3109  000588  6E32               	movwf	SMotor@state^0,c
  3110                           
  3111                           ;Ssms.c: 67:    }
  3112  00058A  0012               	return	
  3113  00058C                     l2411:
  3114  00058C  5050               	movf	_novaTecla^0,w,c
  3115  00058E  0A80               	xorlw	128
  3116  000590  0F7E               	addlw	-130
  3117  000592  B0D8               	btfsc	status,0,c
  3118  000594  0012               	return	
  3119  000596  2851               	incf	_lletraASCII^0,w,c
  3120  000598  B4D8               	btfsc	status,2,c
  3121  00059A  0012               	return	
  3122                           
  3123                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  3124  00059C  5051               	movf	_lletraASCII^0,w,c
  3125  00059E  ECA7  F007         	call	_MNovaLletra
  3126                           
  3127                           ;Ssms.c: 70:     lletraASCII = -1;
  3128  0005A2  6851               	setf	_lletraASCII^0,c
  3129                           
  3130                           ;Ssms.c: 71:     state++;
  3131  0005A4  2A32               	incf	SMotor@state^0,f,c
  3132  0005A6  0012               	return	
  3133  0005A8                     l2421:
  3134                           
  3135                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  3136  0005A8  5050               	movf	_novaTecla^0,w,c
  3137  0005AA  0F30               	addlw	48
  3138  0005AC  ECA7  F007         	call	_MNovaLletra
  3139  0005B0  D7E9               	goto	l2407
  3140  0005B2                     l2427:
  3141                           
  3142                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  3143  0005B2  0E04               	movlw	4
  3144  0005B4  1833               	xorwf	_sumaPulsacions^0,w,c
  3145  0005B6  A4D8               	btfss	status,2,c
  3146  0005B8  D009               	goto	l2435
  3147  0005BA                     u1830:
  3148                           
  3149                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  3150  0005BA  504E               	movf	_ultimaTecla^0,w,c
  3151  0005BC  0F41               	addlw	low (_lletraInici+254)
  3152  0005BE  6ED9               	movwf	fsr2l,c
  3153  0005C0  6ADA               	clrf	fsr2h,c
  3154  0005C2  50DF               	movf	indf2,w,c
  3155  0005C4  6E51               	movwf	_lletraASCII^0,c
  3156                           
  3157                           ;Ssms.c: 82:     sumaPulsacions = 0;
  3158  0005C6  0E00               	movlw	0
  3159  0005C8  6E33               	movwf	_sumaPulsacions^0,c
  3160  0005CA  D7DD               	goto	l2409
  3161  0005CC                     l2435:
  3162  0005CC  0E03               	movlw	3
  3163  0005CE  1833               	xorwf	_sumaPulsacions^0,w,c
  3164  0005D0  A4D8               	btfss	status,2,c
  3165  0005D2  D004               	goto	l2441
  3166  0005D4                     u1840:
  3167                           
  3168                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  3169  0005D4  504E               	movf	_ultimaTecla^0,w,c
  3170  0005D6  0F30               	addlw	48
  3171  0005D8  6E51               	movwf	_lletraASCII^0,c
  3172  0005DA  D7D5               	goto	l2409
  3173  0005DC                     l2441:
  3174  0005DC  0E03               	movlw	3
  3175  0005DE  6033               	cpfslt	_sumaPulsacions^0,c
  3176  0005E0  0012               	return	
  3177  0005E2  D7D1               	goto	l2409
  3178  0005E4                     l2445:
  3179                           
  3180                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  3181  0005E4  0E04               	movlw	4
  3182  0005E6  1833               	xorwf	_sumaPulsacions^0,w,c
  3183  0005E8  B4D8               	btfsc	status,2,c
  3184  0005EA  D7F4               	goto	u1840
  3185  0005EC  0E05               	movlw	5
  3186  0005EE  1833               	xorwf	_sumaPulsacions^0,w,c
  3187  0005F0  B4D8               	btfsc	status,2,c
  3188  0005F2  D7E3               	goto	u1830
  3189  0005F4  0E04               	movlw	4
  3190  0005F6  D7F3               	goto	L3
  3191  0005F8                     l2465:
  3192  0005F8  5032               	movf	SMotor@state^0,w,c
  3193  0005FA  6E6A               	movwf	??_SMotor^0,c
  3194  0005FC  6A6B               	clrf	(??_SMotor+1)^0,c
  3195                           
  3196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3197                           ; Switch size 1, requested type "simple"
  3198                           ; Number of cases is 1, Range of values is 0 to 0
  3199                           ; switch strategies available:
  3200                           ; Name         Instructions Cycles
  3201                           ; simple_byte            4     3 (average)
  3202                           ;	Chosen strategy is simple_byte
  3203  0005FE  506B               	movf	(??_SMotor+1)^0,w,c
  3204  000600  0A00               	xorlw	0	; case 0
  3205  000602  A4D8               	btfss	status,2,c
  3206  000604  0012               	return	
  3207                           
  3208                           ; Switch size 1, requested type "simple"
  3209                           ; Number of cases is 7, Range of values is 0 to 6
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte           22    12 (average)
  3213                           ;	Chosen strategy is simple_byte
  3214  000606  506A               	movf	??_SMotor^0,w,c
  3215  000608  0A00               	xorlw	0	; case 0
  3216  00060A  B4D8               	btfsc	status,2,c
  3217  00060C  D73E               	goto	l2337
  3218  00060E  0A01               	xorlw	1	; case 1
  3219  000610  B4D8               	btfsc	status,2,c
  3220  000612  D75E               	goto	l2359
  3221  000614  0A03               	xorlw	3	; case 2
  3222  000616  B4D8               	btfsc	status,2,c
  3223  000618  D786               	goto	l2383
  3224  00061A  0A01               	xorlw	1	; case 3
  3225  00061C  B4D8               	btfsc	status,2,c
  3226  00061E  D799               	goto	l2395
  3227  000620  0A07               	xorlw	7	; case 4
  3228  000622  B4D8               	btfsc	status,2,c
  3229  000624  D7C1               	goto	l2421
  3230  000626  0A01               	xorlw	1	; case 5
  3231  000628  B4D8               	btfsc	status,2,c
  3232  00062A  D7C3               	goto	l2427
  3233  00062C  0A03               	xorlw	3	; case 6
  3234  00062E  A4D8               	btfss	status,2,c
  3235  000630  0012               	return	
  3236  000632  D7D8               	goto	l2445
  3237  000634                     __end_of_SMotor:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _MNovaLletra *****************
  3241 ;; Defined at:
  3242 ;;		line 21 in file "Menu.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  lletra          1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  lletra          1    5[COMRAM] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1
  3256 ;;      Params:         0       0       0
  3257 ;;      Locals:         1       0       0
  3258 ;;      Temps:          0       0       0
  3259 ;;      Totals:         1       0       0
  3260 ;;Total ram usage:        1 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 2
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_SMotor
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text25
  3271  000F4E                     __ptext25:
  3272                           	callstack 0
  3273  000F4E                     _MNovaLletra:
  3274                           	callstack 27
  3275                           
  3276                           ;incstack = 0
  3277                           ;MNovaLletra@lletra stored from wreg
  3278  000F4E  6E63               	movwf	MNovaLletra@lletra^0,c
  3279                           
  3280                           ;Menu.c: 22:     novaLletra = lletra;
  3281  000F50  C063  F04C         	movff	MNovaLletra@lletra,_novaLletra
  3282  000F54  0012               	return		;funcret
  3283  000F56                     __end_of_MNovaLletra:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _Minit *****************
  3287 ;; Defined at:
  3288 ;;		line 14 in file "Menu.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1
  3302 ;;      Params:         0       0       0
  3303 ;;      Locals:         0       0       0
  3304 ;;      Temps:          0       0       0
  3305 ;;      Totals:         0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 3
  3309 ;; This function calls:
  3310 ;;		_TiGetTimer
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text26
  3317  000F56                     __ptext26:
  3318                           	callstack 0
  3319  000F56                     _Minit:
  3320                           	callstack 27
  3321                           
  3322                           ;Menu.c: 15:     timerMenu = TiGetTimer();
  3323                           
  3324                           ;incstack = 0
  3325  000F56  EC6D  F006         	call	_TiGetTimer	;wreg free
  3326  000F5A  6E2B               	movwf	_timerMenu^0,c
  3327  000F5C  0012               	return		;funcret
  3328  000F5E                     __end_of_Minit:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _LcLCD *****************
  3332 ;; Defined at:
  3333 ;;		line 254 in file "LcTLCD.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1
  3347 ;;      Params:         0       0       0
  3348 ;;      Locals:         0       0       0
  3349 ;;      Temps:          0       0       0
  3350 ;;      Totals:         0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 6
  3354 ;; This function calls:
  3355 ;;		_LcPutChar
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text27
  3362  000DB0                     __ptext27:
  3363                           	callstack 0
  3364  000DB0                     _LcLCD:
  3365                           	callstack 24
  3366                           
  3367                           ;LcTLCD.c: 255:     if(nou_s == 1){
  3368                           
  3369                           ;incstack = 0
  3370  000DB0  A874               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3371  000DB2  0012               	return	
  3372                           
  3373                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  3374  000DB4  C034  FFF6         	movff	_s_ptr,tblptrl
  3375  000DB8                     	if	1	;There is more than 1 active tblptr byte
  3376  000DB8  0E02               	movlw	high __smallconst
  3377  000DBA  6EF7               	movwf	tblptrh,c
  3378  000DBC                     	endif
  3379  000DBC                     	if	0	;tblptru may be non-zero
  3380  000DBC                     	endif
  3381  000DBC                     	if	0	;tblptru may be non-zero
  3382  000DBC                     	endif
  3383  000DBC  0008               	tblrd		*
  3384  000DBE  50F5               	movf	tablat,w,c
  3385  000DC0  ECA0  F005         	call	_LcPutChar
  3386                           
  3387                           ;LcTLCD.c: 257:         s_ptr++;
  3388  000DC4  2A34               	incf	_s_ptr^0,f,c
  3389                           
  3390                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  3391  000DC6  C034  FFF6         	movff	_s_ptr,tblptrl
  3392  000DCA                     	if	1	;There is more than 1 active tblptr byte
  3393  000DCA  0E02               	movlw	high __smallconst
  3394  000DCC  6EF7               	movwf	tblptrh,c
  3395  000DCE                     	endif
  3396  000DCE                     	if	0	;tblptru may be non-zero
  3397  000DCE                     	endif
  3398  000DCE                     	if	0	;tblptru may be non-zero
  3399  000DCE                     	endif
  3400  000DCE  0008               	tblrd		*
  3401  000DD0  50F5               	movf	tablat,w,c
  3402  000DD2  0900               	iorlw	0
  3403  000DD4  A4D8               	btfss	status,2,c
  3404  000DD6  0012               	return	
  3405                           
  3406                           ;LcTLCD.c: 259:             nou_s = 0;
  3407  000DD8  9874               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3408                           
  3409                           ;LcTLCD.c: 260:             s_ptr=0;
  3410  000DDA  0E00               	movlw	0
  3411  000DDC  6E34               	movwf	_s_ptr^0,c
  3412  000DDE  0012               	return		;funcret
  3413  000DE0                     __end_of_LcLCD:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _LcPutChar *****************
  3417 ;; Defined at:
  3418 ;;		line 132 in file "LcTLCD.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  c               1    wreg     unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  c               1   19[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1
  3432 ;;      Params:         0       0       0
  3433 ;;      Locals:         1       0       0
  3434 ;;      Temps:          0       0       0
  3435 ;;      Totals:         1       0       0
  3436 ;;Total ram usage:        1 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 5
  3439 ;; This function calls:
  3440 ;;		_CantaData
  3441 ;;		_LcGotoXY
  3442 ;;		_WaitForBusy
  3443 ;; This function is called by:
  3444 ;;		_LcLCD
  3445 ;;		_menu
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text28
  3450  000B40                     __ptext28:
  3451                           	callstack 0
  3452  000B40                     _LcPutChar:
  3453                           	callstack 24
  3454                           
  3455                           ;incstack = 0
  3456                           ;LcPutChar@c stored from wreg
  3457  000B40  6E71               	movwf	LcPutChar@c^0,c
  3458                           
  3459                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  3460  000B42  EC30  F006         	call	_WaitForBusy	;wreg free
  3461  000B46  5071               	movf	LcPutChar@c^0,w,c
  3462  000B48  ECA6  F006         	call	_CantaData
  3463                           
  3464                           ;LcTLCD.c: 136:  ++ColumnAct;
  3465  000B4C  2A36               	incf	_ColumnAct^0,f,c
  3466                           
  3467                           ;LcTLCD.c: 138:  if (Rows == 2) {
  3468  000B4E  0E02               	movlw	2
  3469  000B50  1839               	xorwf	_Rows^0,w,c
  3470  000B52  A4D8               	btfss	status,2,c
  3471  000B54  D010               	goto	l2243
  3472                           
  3473                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  3474  000B56  0E27               	movlw	39
  3475  000B58  6436               	cpfsgt	_ColumnAct^0,c
  3476  000B5A  D00D               	goto	l2243
  3477                           
  3478                           ;LcTLCD.c: 140:    ColumnAct = 0;
  3479  000B5C  0E00               	movlw	0
  3480  000B5E  6E36               	movwf	_ColumnAct^0,c
  3481                           
  3482                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  3483  000B60  2A37               	incf	_RowAct^0,f,c
  3484  000B62  0E01               	movlw	1
  3485  000B64  6437               	cpfsgt	_RowAct^0,c
  3486  000B66  D002               	goto	l2241
  3487  000B68  0E00               	movlw	0
  3488  000B6A  6E37               	movwf	_RowAct^0,c
  3489  000B6C                     l2241:
  3490                           
  3491                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  3492  000B6C  C037  F06B         	movff	_RowAct,LcGotoXY@Row
  3493  000B70  5036               	movf	_ColumnAct^0,w,c
  3494  000B72  EC50  F006         	call	_LcGotoXY
  3495  000B76                     l2243:
  3496                           
  3497                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  3498  000B76  0437               	decf	_RowAct^0,w,c
  3499  000B78  A4D8               	btfss	status,2,c
  3500  000B7A  0012               	return	
  3501                           
  3502                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  3503  000B7C  0E27               	movlw	39
  3504  000B7E  6436               	cpfsgt	_ColumnAct^0,c
  3505  000B80  D002               	goto	l2249
  3506  000B82  0E00               	movlw	0
  3507  000B84  6E36               	movwf	_ColumnAct^0,c
  3508  000B86                     l2249:
  3509                           
  3510                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  3511  000B86  C037  F06B         	movff	_RowAct,LcGotoXY@Row
  3512  000B8A  5036               	movf	_ColumnAct^0,w,c
  3513  000B8C  EC50  F006         	call	_LcGotoXY
  3514  000B90  0012               	return		;funcret
  3515  000B92                     __end_of_LcPutChar:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _LcGotoXY *****************
  3519 ;; Defined at:
  3520 ;;		line 104 in file "LcTLCD.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  Column          1    wreg     unsigned char 
  3523 ;;  Row             1   13[COMRAM] unsigned char 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  Column          1   18[COMRAM] unsigned char 
  3526 ;;  Fisics          2   14[COMRAM] int 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1
  3536 ;;      Params:         1       0       0
  3537 ;;      Locals:         5       0       0
  3538 ;;      Temps:          0       0       0
  3539 ;;      Totals:         6       0       0
  3540 ;;Total ram usage:        6 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 4
  3543 ;; This function calls:
  3544 ;;		_CantaIR
  3545 ;;		_WaitForBusy
  3546 ;; This function is called by:
  3547 ;;		_LcClear
  3548 ;;		_LcPutChar
  3549 ;;		_menu
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text29
  3554  000CA0                     __ptext29:
  3555                           	callstack 0
  3556  000CA0                     _LcGotoXY:
  3557                           	callstack 24
  3558                           
  3559                           ;incstack = 0
  3560                           ;LcGotoXY@Column stored from wreg
  3561  000CA0  6E70               	movwf	LcGotoXY@Column^0,c
  3562                           
  3563                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  3564  000CA2  506B               	movf	LcGotoXY@Row^0,w,c
  3565  000CA4  B4D8               	btfsc	status,2,c
  3566  000CA6  D004               	goto	l2183
  3567  000CA8  0E00               	movlw	0
  3568  000CAA  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  3569  000CAC  0E40               	movlw	64
  3570  000CAE  D003               	goto	L4
  3571  000CB0                     l2183:
  3572  000CB0  0E00               	movlw	0
  3573  000CB2  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  3574  000CB4  0E00               	movlw	0
  3575  000CB6                     L4:
  3576  000CB6  6E6E               	movwf	_LcGotoXY$342^0,c
  3577  000CB8  5070               	movf	LcGotoXY@Column^0,w,c
  3578  000CBA  246E               	addwf	_LcGotoXY$342^0,w,c
  3579  000CBC  6E6C               	movwf	LcGotoXY@Fisics^0,c
  3580  000CBE  0E00               	movlw	0
  3581  000CC0  206F               	addwfc	(_LcGotoXY$342+1)^0,w,c
  3582  000CC2  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  3583                           
  3584                           ;LcTLCD.c: 125:  WaitForBusy();
  3585  000CC4  EC30  F006         	call	_WaitForBusy	;wreg free
  3586                           
  3587                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  3588  000CC8  506C               	movf	LcGotoXY@Fisics^0,w,c
  3589  000CCA  0980               	iorlw	128
  3590  000CCC  ECBF  F006         	call	_CantaIR
  3591                           
  3592                           ;LcTLCD.c: 128:  RowAct = Row;
  3593  000CD0  C06B  F037         	movff	LcGotoXY@Row,_RowAct
  3594                           
  3595                           ;LcTLCD.c: 129:  ColumnAct = Column;
  3596  000CD4  C070  F036         	movff	LcGotoXY@Column,_ColumnAct
  3597  000CD8  0012               	return		;funcret
  3598  000CDA                     __end_of_LcGotoXY:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _CantaData *****************
  3602 ;; Defined at:
  3603 ;;		line 194 in file "LcTLCD.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  Data            1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  Data            1    7[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1
  3617 ;;      Params:         0       0       0
  3618 ;;      Locals:         1       0       0
  3619 ;;      Temps:          0       0       0
  3620 ;;      Totals:         1       0       0
  3621 ;;Total ram usage:        1 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 3
  3624 ;; This function calls:
  3625 ;;		_CantaPartAlta
  3626 ;;		_CantaPartBaixa
  3627 ;; This function is called by:
  3628 ;;		_LcPutChar
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text30
  3633  000D4C                     __ptext30:
  3634                           	callstack 0
  3635  000D4C                     _CantaData:
  3636                           	callstack 25
  3637                           
  3638                           ;incstack = 0
  3639                           ;CantaData@Data stored from wreg
  3640  000D4C  6E65               	movwf	CantaData@Data^0,c
  3641                           
  3642                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3643  000D4E  9694               	bcf	148,3,c	;volatile
  3644  000D50  9494               	bcf	148,2,c	;volatile
  3645  000D52  9294               	bcf	148,1,c	;volatile
  3646  000D54  9094               	bcf	148,0,c	;volatile
  3647                           
  3648                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  3649  000D56  8A8B               	bsf	139,5,c	;volatile
  3650                           
  3651                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  3652  000D58  9E8C               	bcf	140,7,c	;volatile
  3653                           
  3654                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  3655  000D5A  888B               	bsf	139,4,c	;volatile
  3656                           
  3657                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  3658  000D5C  5065               	movf	CantaData@Data^0,w,c
  3659  000D5E  EC3F  F005         	call	_CantaPartAlta
  3660                           
  3661                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  3662  000D62  888B               	bsf	139,4,c	;volatile
  3663                           
  3664                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  3665  000D64  988B               	bcf	139,4,c	;volatile
  3666                           
  3667                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  3668  000D66  988B               	bcf	139,4,c	;volatile
  3669                           
  3670                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  3671  000D68  888B               	bsf	139,4,c	;volatile
  3672                           
  3673                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  3674  000D6A  5065               	movf	CantaData@Data^0,w,c
  3675  000D6C  EC0B  F005         	call	_CantaPartBaixa
  3676                           
  3677                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  3678  000D70  888B               	bsf	139,4,c	;volatile
  3679                           
  3680                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3681  000D72  988B               	bcf	139,4,c	;volatile
  3682                           
  3683                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3684  000D74  8694               	bsf	148,3,c	;volatile
  3685  000D76  8494               	bsf	148,2,c	;volatile
  3686  000D78  8294               	bsf	148,1,c	;volatile
  3687  000D7A  8094               	bsf	148,0,c	;volatile
  3688  000D7C  0012               	return		;funcret
  3689  000D7E                     __end_of_CantaData:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _LcInit *****************
  3693 ;; Defined at:
  3694 ;;		line 41 in file "LcTLCD.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  rows            1    wreg     unsigned char 
  3697 ;;  columns         1   16[COMRAM] unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  rows            1   17[COMRAM] unsigned char 
  3700 ;;  i               2   18[COMRAM] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1
  3710 ;;      Params:         1       0       0
  3711 ;;      Locals:         3       0       0
  3712 ;;      Temps:          0       0       0
  3713 ;;      Totals:         4       0       0
  3714 ;;Total ram usage:        4 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 5
  3717 ;; This function calls:
  3718 ;;		_CantaIR
  3719 ;;		_EscriuPrimeraOrdre
  3720 ;;		_Espera
  3721 ;;		_LcCursorOff
  3722 ;;		_TiGetTimer
  3723 ;;		_WaitForBusy
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text31
  3730  000798                     __ptext31:
  3731                           	callstack 0
  3732  000798                     _LcInit:
  3733                           	callstack 25
  3734                           
  3735                           ;incstack = 0
  3736                           ;LcInit@rows stored from wreg
  3737  000798  6E6F               	movwf	LcInit@rows^0,c
  3738                           
  3739                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3740  00079A  EC6D  F006         	call	_TiGetTimer	;wreg free
  3741  00079E  6E35               	movwf	_Timer^0,c
  3742                           
  3743                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3744  0007A0  C06F  F039         	movff	LcInit@rows,_Rows
  3745  0007A4  C06E  F038         	movff	LcInit@columns,_Columns
  3746                           
  3747                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3748  0007A8  0E00               	movlw	0
  3749  0007AA  6E36               	movwf	_ColumnAct^0,c
  3750  0007AC  C036  F037         	movff	_ColumnAct,_RowAct
  3751                           
  3752                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3753  0007B0  9894               	bcf	148,4,c	;volatile
  3754  0007B2  9E95               	bcf	149,7,c	;volatile
  3755  0007B4  9A94               	bcf	148,5,c	;volatile
  3756                           
  3757                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3758  0007B6  0E00               	movlw	0
  3759  0007B8  6E71               	movwf	(LcInit@i+1)^0,c
  3760  0007BA  0E00               	movlw	0
  3761  0007BC  6E70               	movwf	LcInit@i^0,c
  3762  0007BE                     l2289:
  3763                           
  3764                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3765  0007BE  0E00               	movlw	0
  3766  0007C0  6E6B               	movwf	(Espera@ms+1)^0,c
  3767  0007C2  0E64               	movlw	100
  3768  0007C4  6E6A               	movwf	Espera@ms^0,c
  3769  0007C6  5035               	movf	_Timer^0,w,c
  3770  0007C8  EC2F  F007         	call	_Espera
  3771                           
  3772                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3773  0007CC  0E03               	movlw	3
  3774  0007CE  EC93  F004         	call	_EscriuPrimeraOrdre
  3775                           
  3776                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3777  0007D2  0E00               	movlw	0
  3778  0007D4  6E6B               	movwf	(Espera@ms+1)^0,c
  3779  0007D6  0E05               	movlw	5
  3780  0007D8  6E6A               	movwf	Espera@ms^0,c
  3781  0007DA  5035               	movf	_Timer^0,w,c
  3782  0007DC  EC2F  F007         	call	_Espera
  3783                           
  3784                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3785  0007E0  0E03               	movlw	3
  3786  0007E2  EC93  F004         	call	_EscriuPrimeraOrdre
  3787                           
  3788                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3789  0007E6  0E00               	movlw	0
  3790  0007E8  6E6B               	movwf	(Espera@ms+1)^0,c
  3791  0007EA  0E01               	movlw	1
  3792  0007EC  6E6A               	movwf	Espera@ms^0,c
  3793  0007EE  5035               	movf	_Timer^0,w,c
  3794  0007F0  EC2F  F007         	call	_Espera
  3795                           
  3796                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3797  0007F4  0E03               	movlw	3
  3798  0007F6  EC93  F004         	call	_EscriuPrimeraOrdre
  3799                           
  3800                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3801  0007FA  0E00               	movlw	0
  3802  0007FC  6E6B               	movwf	(Espera@ms+1)^0,c
  3803  0007FE  0E01               	movlw	1
  3804  000800  6E6A               	movwf	Espera@ms^0,c
  3805  000802  5035               	movf	_Timer^0,w,c
  3806  000804  EC2F  F007         	call	_Espera
  3807                           
  3808                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  3809  000808  0E02               	movlw	2
  3810  00080A  EC93  F004         	call	_EscriuPrimeraOrdre
  3811                           
  3812                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  3813  00080E  0E00               	movlw	0
  3814  000810  6E6B               	movwf	(Espera@ms+1)^0,c
  3815  000812  0E04               	movlw	4
  3816  000814  6E6A               	movwf	Espera@ms^0,c
  3817  000816  5035               	movf	_Timer^0,w,c
  3818  000818  EC2F  F007         	call	_Espera
  3819                           
  3820                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  3821  00081C  0E28               	movlw	40
  3822  00081E  ECBF  F006         	call	_CantaIR
  3823                           
  3824                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  3825  000822  EC30  F006         	call	_WaitForBusy	;wreg free
  3826  000826  0E08               	movlw	8
  3827  000828  ECBF  F006         	call	_CantaIR
  3828                           
  3829                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  3830  00082C  EC30  F006         	call	_WaitForBusy	;wreg free
  3831  000830  0E01               	movlw	1
  3832  000832  ECBF  F006         	call	_CantaIR
  3833                           
  3834                           ;LcTLCD.c: 71:   Espera(Timer,3);
  3835  000836  0E00               	movlw	0
  3836  000838  6E6B               	movwf	(Espera@ms+1)^0,c
  3837  00083A  0E03               	movlw	3
  3838  00083C  6E6A               	movwf	Espera@ms^0,c
  3839  00083E  5035               	movf	_Timer^0,w,c
  3840  000840  EC2F  F007         	call	_Espera
  3841                           
  3842                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  3843  000844  EC30  F006         	call	_WaitForBusy	;wreg free
  3844  000848  0E06               	movlw	6
  3845  00084A  ECBF  F006         	call	_CantaIR
  3846                           
  3847                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  3848  00084E  EC30  F006         	call	_WaitForBusy	;wreg free
  3849  000852  0E0F               	movlw	15
  3850  000854  ECBF  F006         	call	_CantaIR
  3851                           
  3852                           ;LcTLCD.c: 74:  }
  3853  000858  4A70               	infsnz	LcInit@i^0,f,c
  3854  00085A  2A71               	incf	(LcInit@i+1)^0,f,c
  3855  00085C  BE71               	btfsc	(LcInit@i+1)^0,7,c
  3856  00085E  D7AF               	goto	l2289
  3857  000860  5071               	movf	(LcInit@i+1)^0,w,c
  3858  000862  E104               	bnz	u1600
  3859  000864  0E02               	movlw	2
  3860  000866  5C70               	subwf	LcInit@i^0,w,c
  3861  000868  A0D8               	btfss	status,0,c
  3862  00086A  D7A9               	goto	l2289
  3863  00086C                     u1600:
  3864                           
  3865                           ;LcTLCD.c: 79:     LcCursorOff();
  3866  00086C  EC8D  F007         	call	_LcCursorOff	;wreg free
  3867  000870  0012               	return		;funcret
  3868  000872                     __end_of_LcInit:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function _TiGetTimer *****************
  3872 ;; Defined at:
  3873 ;;		line 70 in file "TiTTimer.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      unsigned char 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1
  3887 ;;      Params:         0       0       0
  3888 ;;      Locals:         0       0       0
  3889 ;;      Temps:          1       0       0
  3890 ;;      Totals:         1       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_LcInit
  3898 ;;		_Sinit
  3899 ;;		_TeInit
  3900 ;;		_Minit
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text32
  3905  000CDA                     __ptext32:
  3906                           	callstack 0
  3907  000CDA                     _TiGetTimer:
  3908                           	callstack 27
  3909                           
  3910                           ;TiTTimer.c: 74:     counter=0;
  3911                           
  3912                           ;incstack = 0
  3913  000CDA  0E00               	movlw	0
  3914  000CDC  6E2D               	movwf	_counter^0,c
  3915                           
  3916                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3917  000CDE  D007               	goto	l1347
  3918  000CE0                     l1339:
  3919                           
  3920                           ;TiTTimer.c: 76:         counter++;
  3921  000CE0  2A2D               	incf	_counter^0,f,c
  3922                           
  3923                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  3924  000CE2  0E08               	movlw	8
  3925  000CE4  182D               	xorwf	_counter^0,w,c
  3926  000CE6  A4D8               	btfss	status,2,c
  3927  000CE8  D002               	goto	l1347
  3928  000CEA  0EFF               	movlw	255
  3929  000CEC  0012               	return	
  3930  000CEE                     l1347:
  3931                           
  3932                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3933  000CEE  502D               	movf	_counter^0,w,c
  3934  000CF0  0D03               	mullw	3
  3935  000CF2  50F3               	movf	243,w,c
  3936  000CF4  0F03               	addlw	low (_s_Timers+2)
  3937  000CF6  6ED9               	movwf	fsr2l,c
  3938  000CF8  6ADA               	clrf	fsr2h,c
  3939  000CFA  04DE               	decf	postinc2,w,c
  3940  000CFC  B4D8               	btfsc	status,2,c
  3941  000CFE  D7F0               	goto	l1339
  3942                           
  3943                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  3944  000D00  502D               	movf	_counter^0,w,c
  3945  000D02  0D03               	mullw	3
  3946  000D04  50F3               	movf	243,w,c
  3947  000D06  0F03               	addlw	low (_s_Timers+2)
  3948  000D08  6ED9               	movwf	fsr2l,c
  3949  000D0A  6ADA               	clrf	fsr2h,c
  3950  000D0C  0E01               	movlw	1
  3951  000D0E  6EDF               	movwf	indf2,c
  3952                           
  3953                           ;TiTTimer.c: 80:     return (counter);
  3954  000D10  502D               	movf	_counter^0,w,c
  3955  000D12  0012               	return		;funcret
  3956  000D14                     __end_of_TiGetTimer:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _LcCursorOff *****************
  3960 ;; Defined at:
  3961 ;;		line 97 in file "LcTLCD.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1
  3975 ;;      Params:         0       0       0
  3976 ;;      Locals:         0       0       0
  3977 ;;      Temps:          0       0       0
  3978 ;;      Totals:         0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 4
  3982 ;; This function calls:
  3983 ;;		_CantaIR
  3984 ;;		_WaitForBusy
  3985 ;; This function is called by:
  3986 ;;		_LcInit
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text33
  3991  000F1A                     __ptext33:
  3992                           	callstack 0
  3993  000F1A                     _LcCursorOff:
  3994                           	callstack 25
  3995                           
  3996                           ;LcTLCD.c: 100:  WaitForBusy();
  3997                           
  3998                           ;incstack = 0
  3999  000F1A  EC30  F006         	call	_WaitForBusy	;wreg free
  4000                           
  4001                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4002  000F1E  0E0C               	movlw	12
  4003  000F20  ECBF  F006         	call	_CantaIR
  4004  000F24  0012               	return		;funcret
  4005  000F26                     __end_of_LcCursorOff:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _WaitForBusy *****************
  4009 ;; Defined at:
  4010 ;;		line 210 in file "LcTLCD.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  Busy            1   12[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1
  4024 ;;      Params:         0       0       0
  4025 ;;      Locals:         1       0       0
  4026 ;;      Temps:          0       0       0
  4027 ;;      Totals:         1       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 3
  4031 ;; This function calls:
  4032 ;;		_TiGetTics
  4033 ;;		_TiResetTics
  4034 ;; This function is called by:
  4035 ;;		_LcInit
  4036 ;;		_LcClear
  4037 ;;		_LcCursorOff
  4038 ;;		_LcGotoXY
  4039 ;;		_LcPutChar
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text34
  4044  000C60                     __ptext34:
  4045                           	callstack 0
  4046  000C60                     _WaitForBusy:
  4047                           	callstack 25
  4048                           
  4049                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4050                           
  4051                           ;incstack = 0
  4052  000C60  8694               	bsf	148,3,c	;volatile
  4053  000C62  8494               	bsf	148,2,c	;volatile
  4054  000C64  8294               	bsf	148,1,c	;volatile
  4055  000C66  8094               	bsf	148,0,c	;volatile
  4056                           
  4057                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  4058  000C68  9A8B               	bcf	139,5,c	;volatile
  4059                           
  4060                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  4061  000C6A  8E8C               	bsf	140,7,c	;volatile
  4062                           
  4063                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  4064  000C6C  5035               	movf	_Timer^0,w,c
  4065  000C6E  EC5F  F007         	call	_TiResetTics
  4066  000C72                     l2151:
  4067                           
  4068                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4069  000C72  888B               	bsf	139,4,c	;volatile
  4070  000C74  888B               	bsf	139,4,c	;volatile
  4071                           
  4072                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  4073  000C76  0E00               	movlw	0
  4074  000C78  B682               	btfsc	130,3,c	;volatile
  4075  000C7A  0E01               	movlw	1
  4076  000C7C  6E6A               	movwf	WaitForBusy@Busy^0,c
  4077                           
  4078                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  4079  000C7E  988B               	bcf	139,4,c	;volatile
  4080                           
  4081                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  4082  000C80  988B               	bcf	139,4,c	;volatile
  4083                           
  4084                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4085  000C82  888B               	bsf	139,4,c	;volatile
  4086  000C84  888B               	bsf	139,4,c	;volatile
  4087                           
  4088                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  4089  000C86  988B               	bcf	139,4,c	;volatile
  4090                           
  4091                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  4092  000C88  988B               	bcf	139,4,c	;volatile
  4093                           
  4094                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  4095  000C8A  5035               	movf	_Timer^0,w,c
  4096  000C8C  EC07  F007         	call	_TiGetTics
  4097  000C90  5063               	movf	?_TiGetTics^0,w,c
  4098  000C92  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  4099  000C94  A4D8               	btfss	status,2,c
  4100  000C96  0012               	return	
  4101                           
  4102                           ;LcTLCD.c: 225:  } while(Busy);
  4103  000C98  506A               	movf	WaitForBusy@Busy^0,w,c
  4104  000C9A  B4D8               	btfsc	status,2,c
  4105  000C9C  0012               	return	
  4106  000C9E  D7E9               	goto	l2151
  4107  000CA0                     __end_of_WaitForBusy:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _CantaIR *****************
  4111 ;; Defined at:
  4112 ;;		line 178 in file "LcTLCD.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  IR              1    wreg     unsigned char 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  IR              1    7[COMRAM] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1
  4126 ;;      Params:         0       0       0
  4127 ;;      Locals:         1       0       0
  4128 ;;      Temps:          0       0       0
  4129 ;;      Totals:         1       0       0
  4130 ;;Total ram usage:        1 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 3
  4133 ;; This function calls:
  4134 ;;		_CantaPartAlta
  4135 ;;		_CantaPartBaixa
  4136 ;; This function is called by:
  4137 ;;		_LcInit
  4138 ;;		_LcClear
  4139 ;;		_LcCursorOff
  4140 ;;		_LcGotoXY
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text35
  4145  000D7E                     __ptext35:
  4146                           	callstack 0
  4147  000D7E                     _CantaIR:
  4148                           	callstack 24
  4149                           
  4150                           ;incstack = 0
  4151                           ;CantaIR@IR stored from wreg
  4152  000D7E  6E65               	movwf	CantaIR@IR^0,c
  4153                           
  4154                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  4155  000D80  9694               	bcf	148,3,c	;volatile
  4156  000D82  9494               	bcf	148,2,c	;volatile
  4157  000D84  9294               	bcf	148,1,c	;volatile
  4158  000D86  9094               	bcf	148,0,c	;volatile
  4159                           
  4160                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  4161  000D88  9A8B               	bcf	139,5,c	;volatile
  4162                           
  4163                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  4164  000D8A  9E8C               	bcf	140,7,c	;volatile
  4165                           
  4166                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  4167  000D8C  888B               	bsf	139,4,c	;volatile
  4168                           
  4169                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  4170  000D8E  5065               	movf	CantaIR@IR^0,w,c
  4171  000D90  EC3F  F005         	call	_CantaPartAlta
  4172                           
  4173                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  4174  000D94  888B               	bsf	139,4,c	;volatile
  4175                           
  4176                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  4177  000D96  988B               	bcf	139,4,c	;volatile
  4178                           
  4179                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  4180  000D98  988B               	bcf	139,4,c	;volatile
  4181                           
  4182                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  4183  000D9A  888B               	bsf	139,4,c	;volatile
  4184                           
  4185                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  4186  000D9C  5065               	movf	CantaIR@IR^0,w,c
  4187  000D9E  EC0B  F005         	call	_CantaPartBaixa
  4188                           
  4189                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  4190  000DA2  888B               	bsf	139,4,c	;volatile
  4191                           
  4192                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  4193  000DA4  988B               	bcf	139,4,c	;volatile
  4194                           
  4195                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4196  000DA6  8694               	bsf	148,3,c	;volatile
  4197  000DA8  8494               	bsf	148,2,c	;volatile
  4198  000DAA  8294               	bsf	148,1,c	;volatile
  4199  000DAC  8094               	bsf	148,0,c	;volatile
  4200  000DAE  0012               	return		;funcret
  4201  000DB0                     __end_of_CantaIR:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function _CantaPartBaixa *****************
  4205 ;; Defined at:
  4206 ;;		line 171 in file "LcTLCD.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  c               1    wreg     unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  c               1    6[COMRAM] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1
  4220 ;;      Params:         0       0       0
  4221 ;;      Locals:         1       0       0
  4222 ;;      Temps:          1       0       0
  4223 ;;      Totals:         2       0       0
  4224 ;;Total ram usage:        2 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 2
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_CantaIR
  4231 ;;		_CantaData
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text36
  4236  000A16                     __ptext36:
  4237                           	callstack 0
  4238  000A16                     _CantaPartBaixa:
  4239                           	callstack 24
  4240                           
  4241                           ;incstack = 0
  4242                           ;CantaPartBaixa@c stored from wreg
  4243  000A16  6E64               	movwf	CantaPartBaixa@c^0,c
  4244                           
  4245                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  4246  000A18  A664               	btfss	CantaPartBaixa@c^0,3,c
  4247  000A1A  D003               	goto	u1410
  4248  000A1C  6A63               	clrf	??_CantaPartBaixa^0,c
  4249  000A1E  2A63               	incf	??_CantaPartBaixa^0,f,c
  4250  000A20  D001               	goto	u1428
  4251  000A22                     u1410:
  4252  000A22  6A63               	clrf	??_CantaPartBaixa^0,c
  4253  000A24                     u1428:
  4254  000A24  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4255  000A26  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4256  000A28  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4257  000A2A  508B               	movf	139,w,c	;volatile
  4258  000A2C  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4259  000A2E  0BF7               	andlw	-9
  4260  000A30  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4261  000A32  6E8B               	movwf	139,c	;volatile
  4262                           
  4263                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  4264  000A34  A464               	btfss	CantaPartBaixa@c^0,2,c
  4265  000A36  D003               	goto	u1430
  4266  000A38  6A63               	clrf	??_CantaPartBaixa^0,c
  4267  000A3A  2A63               	incf	??_CantaPartBaixa^0,f,c
  4268  000A3C  D001               	goto	u1448
  4269  000A3E                     u1430:
  4270  000A3E  6A63               	clrf	??_CantaPartBaixa^0,c
  4271  000A40                     u1448:
  4272  000A40  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4273  000A42  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4274  000A44  508B               	movf	139,w,c	;volatile
  4275  000A46  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4276  000A48  0BFB               	andlw	-5
  4277  000A4A  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4278  000A4C  6E8B               	movwf	139,c	;volatile
  4279                           
  4280                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  4281  000A4E  A264               	btfss	CantaPartBaixa@c^0,1,c
  4282  000A50  D003               	goto	u1450
  4283  000A52  6A63               	clrf	??_CantaPartBaixa^0,c
  4284  000A54  2A63               	incf	??_CantaPartBaixa^0,f,c
  4285  000A56  D001               	goto	u1468
  4286  000A58                     u1450:
  4287  000A58  6A63               	clrf	??_CantaPartBaixa^0,c
  4288  000A5A                     u1468:
  4289  000A5A  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4290  000A5C  508B               	movf	139,w,c	;volatile
  4291  000A5E  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4292  000A60  0BFD               	andlw	-3
  4293  000A62  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4294  000A64  6E8B               	movwf	139,c	;volatile
  4295                           
  4296                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  4297  000A66  A064               	btfss	CantaPartBaixa@c^0,0,c
  4298  000A68  D003               	goto	u1470
  4299  000A6A  6A63               	clrf	??_CantaPartBaixa^0,c
  4300  000A6C  2A63               	incf	??_CantaPartBaixa^0,f,c
  4301  000A6E  D001               	goto	u1488
  4302  000A70                     u1470:
  4303  000A70  6A63               	clrf	??_CantaPartBaixa^0,c
  4304  000A72                     u1488:
  4305  000A72  508B               	movf	139,w,c	;volatile
  4306  000A74  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4307  000A76  0BFE               	andlw	-2
  4308  000A78  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4309  000A7A  6E8B               	movwf	139,c	;volatile
  4310  000A7C  0012               	return		;funcret
  4311  000A7E                     __end_of_CantaPartBaixa:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function _CantaPartAlta *****************
  4315 ;; Defined at:
  4316 ;;		line 164 in file "LcTLCD.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  c               1    wreg     unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  c               1    6[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1
  4330 ;;      Params:         0       0       0
  4331 ;;      Locals:         1       0       0
  4332 ;;      Temps:          1       0       0
  4333 ;;      Totals:         2       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 2
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_CantaIR
  4341 ;;		_CantaData
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text37
  4346  000A7E                     __ptext37:
  4347                           	callstack 0
  4348  000A7E                     _CantaPartAlta:
  4349                           	callstack 24
  4350                           
  4351                           ;incstack = 0
  4352                           ;CantaPartAlta@c stored from wreg
  4353  000A7E  6E64               	movwf	CantaPartAlta@c^0,c
  4354                           
  4355                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  4356  000A80  AE64               	btfss	CantaPartAlta@c^0,7,c
  4357  000A82  D003               	goto	u1330
  4358  000A84  6A63               	clrf	??_CantaPartAlta^0,c
  4359  000A86  2A63               	incf	??_CantaPartAlta^0,f,c
  4360  000A88  D001               	goto	u1348
  4361  000A8A                     u1330:
  4362  000A8A  6A63               	clrf	??_CantaPartAlta^0,c
  4363  000A8C                     u1348:
  4364  000A8C  4663               	rlncf	??_CantaPartAlta^0,f,c
  4365  000A8E  4663               	rlncf	??_CantaPartAlta^0,f,c
  4366  000A90  4663               	rlncf	??_CantaPartAlta^0,f,c
  4367  000A92  508B               	movf	139,w,c	;volatile
  4368  000A94  1863               	xorwf	??_CantaPartAlta^0,w,c
  4369  000A96  0BF7               	andlw	-9
  4370  000A98  1863               	xorwf	??_CantaPartAlta^0,w,c
  4371  000A9A  6E8B               	movwf	139,c	;volatile
  4372                           
  4373                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  4374  000A9C  AC64               	btfss	CantaPartAlta@c^0,6,c
  4375  000A9E  D003               	goto	u1350
  4376  000AA0  6A63               	clrf	??_CantaPartAlta^0,c
  4377  000AA2  2A63               	incf	??_CantaPartAlta^0,f,c
  4378  000AA4  D001               	goto	u1368
  4379  000AA6                     u1350:
  4380  000AA6  6A63               	clrf	??_CantaPartAlta^0,c
  4381  000AA8                     u1368:
  4382  000AA8  4663               	rlncf	??_CantaPartAlta^0,f,c
  4383  000AAA  4663               	rlncf	??_CantaPartAlta^0,f,c
  4384  000AAC  508B               	movf	139,w,c	;volatile
  4385  000AAE  1863               	xorwf	??_CantaPartAlta^0,w,c
  4386  000AB0  0BFB               	andlw	-5
  4387  000AB2  1863               	xorwf	??_CantaPartAlta^0,w,c
  4388  000AB4  6E8B               	movwf	139,c	;volatile
  4389                           
  4390                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  4391  000AB6  AA64               	btfss	CantaPartAlta@c^0,5,c
  4392  000AB8  D003               	goto	u1370
  4393  000ABA  6A63               	clrf	??_CantaPartAlta^0,c
  4394  000ABC  2A63               	incf	??_CantaPartAlta^0,f,c
  4395  000ABE  D001               	goto	u1388
  4396  000AC0                     u1370:
  4397  000AC0  6A63               	clrf	??_CantaPartAlta^0,c
  4398  000AC2                     u1388:
  4399  000AC2  4663               	rlncf	??_CantaPartAlta^0,f,c
  4400  000AC4  508B               	movf	139,w,c	;volatile
  4401  000AC6  1863               	xorwf	??_CantaPartAlta^0,w,c
  4402  000AC8  0BFD               	andlw	-3
  4403  000ACA  1863               	xorwf	??_CantaPartAlta^0,w,c
  4404  000ACC  6E8B               	movwf	139,c	;volatile
  4405                           
  4406                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  4407  000ACE  A864               	btfss	CantaPartAlta@c^0,4,c
  4408  000AD0  D003               	goto	u1390
  4409  000AD2  6A63               	clrf	??_CantaPartAlta^0,c
  4410  000AD4  2A63               	incf	??_CantaPartAlta^0,f,c
  4411  000AD6  D001               	goto	u1408
  4412  000AD8                     u1390:
  4413  000AD8  6A63               	clrf	??_CantaPartAlta^0,c
  4414  000ADA                     u1408:
  4415  000ADA  508B               	movf	139,w,c	;volatile
  4416  000ADC  1863               	xorwf	??_CantaPartAlta^0,w,c
  4417  000ADE  0BFE               	andlw	-2
  4418  000AE0  1863               	xorwf	??_CantaPartAlta^0,w,c
  4419  000AE2  6E8B               	movwf	139,c	;volatile
  4420  000AE4  0012               	return		;funcret
  4421  000AE6                     __end_of_CantaPartAlta:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _Espera *****************
  4425 ;; Defined at:
  4426 ;;		line 159 in file "LcTLCD.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  Timer           1    wreg     unsigned char 
  4429 ;;  ms              2   12[COMRAM] int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  Timer           1   15[COMRAM] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1
  4441 ;;      Params:         2       0       0
  4442 ;;      Locals:         1       0       0
  4443 ;;      Temps:          1       0       0
  4444 ;;      Totals:         4       0       0
  4445 ;;Total ram usage:        4 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 3
  4448 ;; This function calls:
  4449 ;;		_TiGetTics
  4450 ;;		_TiResetTics
  4451 ;; This function is called by:
  4452 ;;		_LcInit
  4453 ;;		_LcClear
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text38
  4458  000E5E                     __ptext38:
  4459                           	callstack 0
  4460  000E5E                     _Espera:
  4461                           	callstack 25
  4462                           
  4463                           ;incstack = 0
  4464                           ;Espera@Timer stored from wreg
  4465  000E5E  6E6D               	movwf	Espera@Timer^0,c
  4466                           
  4467                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  4468  000E60  506D               	movf	Espera@Timer^0,w,c
  4469  000E62  EC5F  F007         	call	_TiResetTics
  4470  000E66                     l2177:
  4471  000E66  506D               	movf	Espera@Timer^0,w,c
  4472  000E68  EC07  F007         	call	_TiGetTics
  4473  000E6C  506A               	movf	Espera@ms^0,w,c
  4474  000E6E  5C63               	subwf	?_TiGetTics^0,w,c
  4475  000E70  5064               	movf	(?_TiGetTics+1)^0,w,c
  4476  000E72  0A80               	xorlw	128
  4477  000E74  6E6C               	movwf	??_Espera^0,c
  4478  000E76  506B               	movf	(Espera@ms+1)^0,w,c
  4479  000E78  0A80               	xorlw	128
  4480  000E7A  586C               	subwfb	??_Espera^0,w,c
  4481  000E7C  B0D8               	btfsc	status,0,c
  4482  000E7E  0012               	return	
  4483  000E80  D7F2               	goto	l2177
  4484  000E82                     __end_of_Espera:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _TiResetTics *****************
  4488 ;; Defined at:
  4489 ;;		line 55 in file "TiTTimer.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  Handle          1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  Handle          1    5[COMRAM] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1
  4503 ;;      Params:         0       0       0
  4504 ;;      Locals:         1       0       0
  4505 ;;      Temps:          0       0       0
  4506 ;;      Totals:         1       0       0
  4507 ;;Total ram usage:        1 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 2
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_Espera
  4514 ;;		_WaitForBusy
  4515 ;;		_SMotor
  4516 ;;		_TeTeclat
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text39
  4521  000EBE                     __ptext39:
  4522                           	callstack 0
  4523  000EBE                     _TiResetTics:
  4524                           	callstack 25
  4525                           
  4526                           ;incstack = 0
  4527                           ;TiResetTics@Handle stored from wreg
  4528  000EBE  6E63               	movwf	TiResetTics@Handle^0,c
  4529                           
  4530                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  4531  000EC0  5063               	movf	TiResetTics@Handle^0,w,c
  4532  000EC2  0D03               	mullw	3
  4533  000EC4  50F3               	movf	243,w,c
  4534  000EC6  0F01               	addlw	low _s_Timers
  4535  000EC8  6ED9               	movwf	fsr2l,c
  4536  000ECA  6ADA               	clrf	fsr2h,c
  4537  000ECC  C022  FFDE         	movff	_h_Tics,postinc2
  4538  000ED0  C023  FFDD         	movff	_h_Tics+1,postdec2
  4539  000ED4  0012               	return		;funcret
  4540  000ED6                     __end_of_TiResetTics:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _TiGetTics *****************
  4544 ;; Defined at:
  4545 ;;		line 61 in file "TiTTimer.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  Handle          1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  Handle          1    9[COMRAM] unsigned char 
  4550 ;;  actual          2   10[COMRAM] volatile unsigned int 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2    5[COMRAM] int 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1
  4560 ;;      Params:         2       0       0
  4561 ;;      Locals:         3       0       0
  4562 ;;      Temps:          2       0       0
  4563 ;;      Totals:         7       0       0
  4564 ;;Total ram usage:        7 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 2
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_Espera
  4571 ;;		_WaitForBusy
  4572 ;;		_SMotor
  4573 ;;		_TeTeclat
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text40
  4578  000E0E                     __ptext40:
  4579                           	callstack 0
  4580  000E0E                     _TiGetTics:
  4581                           	callstack 25
  4582                           
  4583                           ;incstack = 0
  4584                           ;TiGetTics@Handle stored from wreg
  4585  000E0E  6E67               	movwf	TiGetTics@Handle^0,c
  4586                           
  4587                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  4588  000E10  C022  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  4589  000E14  C023  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  4590                           
  4591                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  4592  000E18  5067               	movf	TiGetTics@Handle^0,w,c
  4593  000E1A  0D03               	mullw	3
  4594  000E1C  50F3               	movf	243,w,c
  4595  000E1E  0F01               	addlw	low _s_Timers
  4596  000E20  6ED9               	movwf	fsr2l,c
  4597  000E22  6ADA               	clrf	fsr2h,c
  4598  000E24  CFDE F065          	movff	postinc2,??_TiGetTics
  4599  000E28  CFDD F066          	movff	postdec2,??_TiGetTics+1
  4600  000E2C  5065               	movf	??_TiGetTics^0,w,c
  4601  000E2E  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  4602  000E30  6E63               	movwf	?_TiGetTics^0,c
  4603  000E32  5066               	movf	(??_TiGetTics+1)^0,w,c
  4604  000E34  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  4605  000E36  6E64               	movwf	(?_TiGetTics+1)^0,c
  4606  000E38  0012               	return		;funcret
  4607  000E3A                     __end_of_TiGetTics:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function _EscriuPrimeraOrdre *****************
  4611 ;; Defined at:
  4612 ;;		line 228 in file "LcTLCD.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  ordre           1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  ordre           1    6[COMRAM] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1
  4626 ;;      Params:         0       0       0
  4627 ;;      Locals:         1       0       0
  4628 ;;      Temps:          1       0       0
  4629 ;;      Totals:         2       0       0
  4630 ;;Total ram usage:        2 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 2
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_LcInit
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text41
  4641  000926                     __ptext41:
  4642                           	callstack 0
  4643  000926                     _EscriuPrimeraOrdre:
  4644                           	callstack 27
  4645                           
  4646                           ;incstack = 0
  4647                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4648  000926  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4649                           
  4650                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4651  000928  9694               	bcf	148,3,c	;volatile
  4652  00092A  9494               	bcf	148,2,c	;volatile
  4653  00092C  9294               	bcf	148,1,c	;volatile
  4654  00092E  9094               	bcf	148,0,c	;volatile
  4655  000930  9A8B               	bcf	139,5,c	;volatile
  4656  000932  9E8C               	bcf	140,7,c	;volatile
  4657                           
  4658                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4659  000934  888B               	bsf	139,4,c	;volatile
  4660  000936  888B               	bsf	139,4,c	;volatile
  4661                           
  4662                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4663  000938  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4664  00093A  D003               	goto	u230
  4665  00093C  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4666  00093E  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4667  000940  D001               	goto	u248
  4668  000942                     u230:
  4669  000942  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4670  000944                     u248:
  4671  000944  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4672  000946  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4673  000948  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4674  00094A  508B               	movf	139,w,c	;volatile
  4675  00094C  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4676  00094E  0BF7               	andlw	-9
  4677  000950  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4678  000952  6E8B               	movwf	139,c	;volatile
  4679                           
  4680                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4681  000954  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4682  000956  D003               	goto	u250
  4683  000958  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4684  00095A  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4685  00095C  D001               	goto	u268
  4686  00095E                     u250:
  4687  00095E  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4688  000960                     u268:
  4689  000960  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4690  000962  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4691  000964  508B               	movf	139,w,c	;volatile
  4692  000966  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4693  000968  0BFB               	andlw	-5
  4694  00096A  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4695  00096C  6E8B               	movwf	139,c	;volatile
  4696                           
  4697                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4698  00096E  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4699  000970  D003               	goto	u270
  4700  000972  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4701  000974  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4702  000976  D001               	goto	u288
  4703  000978                     u270:
  4704  000978  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4705  00097A                     u288:
  4706  00097A  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4707  00097C  508B               	movf	139,w,c	;volatile
  4708  00097E  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4709  000980  0BFD               	andlw	-3
  4710  000982  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4711  000984  6E8B               	movwf	139,c	;volatile
  4712                           
  4713                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4714  000986  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4715  000988  D003               	goto	u290
  4716  00098A  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4717  00098C  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4718  00098E  D001               	goto	u308
  4719  000990                     u290:
  4720  000990  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4721  000992                     u308:
  4722  000992  508B               	movf	139,w,c	;volatile
  4723  000994  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4724  000996  0BFE               	andlw	-2
  4725  000998  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4726  00099A  6E8B               	movwf	139,c	;volatile
  4727                           
  4728                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4729  00099C  988B               	bcf	139,4,c	;volatile
  4730  00099E  0012               	return		;funcret
  4731  0009A0                     __end_of_EscriuPrimeraOrdre:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _high_rsi *****************
  4735 ;; Defined at:
  4736 ;;		line 15 in file "main.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1
  4750 ;;      Params:         0       0       0
  4751 ;;      Locals:         0       0       0
  4752 ;;      Temps:          4       0       0
  4753 ;;      Totals:         4       0       0
  4754 ;;Total ram usage:        4 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 1
  4757 ;; This function calls:
  4758 ;;		__TiRSITimer
  4759 ;; This function is called by:
  4760 ;;		Interrupt level 2
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	intcode
  4765  000008                     __pintcode:
  4766                           	callstack 0
  4767  000008                     _high_rsi:
  4768                           	callstack 24
  4769                           
  4770                           ;incstack = 0
  4771  000008  8275               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4772  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
  4773  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
  4774  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
  4775  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
  4776                           
  4777                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4778  00001A  EC73  F005         	call	__TiRSITimer	;wreg free
  4779  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
  4780  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
  4781  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
  4782  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
  4783  00002E  9275               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4784  000030  0011               	retfie		f
  4785  000032                     __end_of_high_rsi:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function __TiRSITimer *****************
  4789 ;; Defined at:
  4790 ;;		line 37 in file "TiTTimer.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1
  4804 ;;      Params:         0       0       0
  4805 ;;      Locals:         0       0       0
  4806 ;;      Temps:          1       0       0
  4807 ;;      Totals:         1       0       0
  4808 ;;Total ram usage:        1 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_high_rsi
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text43
  4818  000AE6                     __ptext43:
  4819                           	callstack 0
  4820  000AE6                     __TiRSITimer:
  4821                           	callstack 24
  4822                           
  4823                           ;TiTTimer.c: 39:     TMR0H = 223;
  4824                           
  4825                           ;incstack = 0
  4826  000AE6  0EDF               	movlw	223
  4827  000AE8  6ED7               	movwf	215,c	;volatile
  4828                           
  4829                           ;TiTTimer.c: 40:     TMR0L = 148;
  4830  000AEA  0E94               	movlw	148
  4831  000AEC  6ED6               	movwf	214,c	;volatile
  4832                           
  4833                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  4834  000AEE  94F2               	bcf	242,2,c	;volatile
  4835                           
  4836                           ;TiTTimer.c: 42:     h_Tics++;
  4837  000AF0  4A22               	infsnz	_h_Tics^0,f,c
  4838  000AF2  2A23               	incf	(_h_Tics+1)^0,f,c
  4839                           
  4840                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  4841  000AF4  0E48               	movlw	72
  4842  000AF6  5C22               	subwf	_h_Tics^0,w,c
  4843  000AF8  0EEE               	movlw	238
  4844  000AFA  5823               	subwfb	(_h_Tics+1)^0,w,c
  4845  000AFC  A0D8               	btfss	status,0,c
  4846  000AFE  0012               	return	
  4847                           
  4848                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  4849  000B00  0E00               	movlw	0
  4850  000B02  6E2D               	movwf	_counter^0,c
  4851  000B04                     i2l1533:
  4852  000B04  0E07               	movlw	7
  4853  000B06  642D               	cpfsgt	_counter^0,c
  4854  000B08  D001               	goto	i2l1537
  4855  000B0A  D015               	goto	i2l1545
  4856  000B0C                     i2l1537:
  4857                           
  4858                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  4859  000B0C  502D               	movf	_counter^0,w,c
  4860  000B0E  0D03               	mullw	3
  4861  000B10  50F3               	movf	243,w,c
  4862  000B12  0F03               	addlw	low (_s_Timers+2)
  4863  000B14  6ED9               	movwf	fsr2l,c
  4864  000B16  6ADA               	clrf	fsr2h,c
  4865  000B18  04DE               	decf	postinc2,w,c
  4866  000B1A  A4D8               	btfss	status,2,c
  4867  000B1C  D00A               	goto	i2l1541
  4868                           
  4869                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  4870  000B1E  502D               	movf	_counter^0,w,c
  4871  000B20  0D03               	mullw	3
  4872  000B22  50F3               	movf	243,w,c
  4873  000B24  0F01               	addlw	low _s_Timers
  4874  000B26  6ED9               	movwf	fsr2l,c
  4875  000B28  6ADA               	clrf	fsr2h,c
  4876  000B2A  5022               	movf	_h_Tics^0,w,c
  4877  000B2C  5EDE               	subwf	postinc2,f,c
  4878  000B2E  5023               	movf	(_h_Tics+1)^0,w,c
  4879  000B30  5ADD               	subwfb	postdec2,f,c
  4880  000B32                     i2l1541:
  4881                           
  4882                           ;TiTTimer.c: 50:         }
  4883  000B32  2A2D               	incf	_counter^0,f,c
  4884  000B34  D7E7               	goto	i2l1533
  4885  000B36                     i2l1545:
  4886                           
  4887                           ;TiTTimer.c: 51:         h_Tics=0;
  4888  000B36  0E00               	movlw	0
  4889  000B38  6E23               	movwf	(_h_Tics+1)^0,c
  4890  000B3A  0E00               	movlw	0
  4891  000B3C  6E22               	movwf	_h_Tics^0,c
  4892  000B3E  0012               	return		;funcret
  4893  000B40                     __end_of__TiRSITimer:
  4894                           	callstack 0
  4895                           
  4896                           	psect	rparam
  4897  0000                     
  4898                           	psect	temp
  4899  000075                     btemp:
  4900                           	callstack 0
  4901  000075                     	ds	1
  4902  0000                     int$flags	set	btemp
  4903  0000                     wtemp8	set	btemp+1
  4904  0000                     ttemp5	set	btemp+1
  4905  0000                     ttemp6	set	btemp+4
  4906  0000                     ttemp7	set	btemp+8
  4907                           
  4908                           	psect	idloc
  4909                           
  4910                           ;Config register IDLOC0 @ 0x200000
  4911                           ;	unspecified, using default values
  4912  200000                     	org	2097152
  4913  200000  FF                 	db	255
  4914                           
  4915                           ;Config register IDLOC1 @ 0x200001
  4916                           ;	unspecified, using default values
  4917  200001                     	org	2097153
  4918  200001  FF                 	db	255
  4919                           
  4920                           ;Config register IDLOC2 @ 0x200002
  4921                           ;	unspecified, using default values
  4922  200002                     	org	2097154
  4923  200002  FF                 	db	255
  4924                           
  4925                           ;Config register IDLOC3 @ 0x200003
  4926                           ;	unspecified, using default values
  4927  200003                     	org	2097155
  4928  200003  FF                 	db	255
  4929                           
  4930                           ;Config register IDLOC4 @ 0x200004
  4931                           ;	unspecified, using default values
  4932  200004                     	org	2097156
  4933  200004  FF                 	db	255
  4934                           
  4935                           ;Config register IDLOC5 @ 0x200005
  4936                           ;	unspecified, using default values
  4937  200005                     	org	2097157
  4938  200005  FF                 	db	255
  4939                           
  4940                           ;Config register IDLOC6 @ 0x200006
  4941                           ;	unspecified, using default values
  4942  200006                     	org	2097158
  4943  200006  FF                 	db	255
  4944                           
  4945                           ;Config register IDLOC7 @ 0x200007
  4946                           ;	unspecified, using default values
  4947  200007                     	org	2097159
  4948  200007  FF                 	db	255
  4949                           
  4950                           	psect	config
  4951                           
  4952                           ; Padding undefined space
  4953  300000                     	org	3145728
  4954  300000  FF                 	db	255
  4955                           
  4956                           ;Config register CONFIG1H @ 0x300001
  4957                           ;	Oscillator
  4958                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4959                           ;	Fail-Safe Clock Monitor Enable bit
  4960                           ;	FCMEN = 0x0, unprogrammed default
  4961                           ;	Internal/External Oscillator Switchover bit
  4962                           ;	IESO = 0x0, unprogrammed default
  4963  300001                     	org	3145729
  4964  300001  06                 	db	6
  4965                           
  4966                           ;Config register CONFIG2L @ 0x300002
  4967                           ;	unspecified, using default values
  4968                           ;	Power-up Timer Enable bit
  4969                           ;	PWRT = 0x1, unprogrammed default
  4970                           ;	Brown-out Reset Enable bits
  4971                           ;	BOR = 0x3, unprogrammed default
  4972                           ;	Brown-out Reset Voltage bits
  4973                           ;	BORV = 0x3, unprogrammed default
  4974  300002                     	org	3145730
  4975  300002  1F                 	db	31
  4976                           
  4977                           ;Config register CONFIG2H @ 0x300003
  4978                           ;	Watchdog Timer Enable bit
  4979                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4980                           ;	Watchdog Timer Postscale Select bits
  4981                           ;	WDTPS = 0xF, unprogrammed default
  4982  300003                     	org	3145731
  4983  300003  1E                 	db	30
  4984                           
  4985                           ; Padding undefined space
  4986  300004                     	org	3145732
  4987  300004  FF                 	db	255
  4988                           
  4989                           ;Config register CONFIG3H @ 0x300005
  4990                           ;	CCP2 MUX bit
  4991                           ;	CCP2MX = 0x1, unprogrammed default
  4992                           ;	PORTB A/D Enable bit
  4993                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  4994                           ;	Low-Power Timer1 Oscillator Enable bit
  4995                           ;	LPT1OSC = 0x0, unprogrammed default
  4996                           ;	MCLR Pin Enable bit
  4997                           ;	MCLRE = 0x1, unprogrammed default
  4998  300005                     	org	3145733
  4999  300005  81                 	db	129
  5000                           
  5001                           ;Config register CONFIG4L @ 0x300006
  5002                           ;	Stack Full/Underflow Reset Enable bit
  5003                           ;	STVREN = 0x1, unprogrammed default
  5004                           ;	Single-Supply ICSP Enable bit
  5005                           ;	LVP = OFF, Single-Supply ICSP disabled
  5006                           ;	Boot Block Size Select bits
  5007                           ;	BBSIZ = 0x0, unprogrammed default
  5008                           ;	Extended Instruction Set Enable bit
  5009                           ;	XINST = 0x0, unprogrammed default
  5010                           ;	Background Debugger Enable bit
  5011                           ;	DEBUG = 0x1, unprogrammed default
  5012  300006                     	org	3145734
  5013  300006  81                 	db	129
  5014                           
  5015                           ; Padding undefined space
  5016  300007                     	org	3145735
  5017  300007  FF                 	db	255
  5018                           
  5019                           ;Config register CONFIG5L @ 0x300008
  5020                           ;	unspecified, using default values
  5021                           ;	Code Protection bit
  5022                           ;	CP0 = 0x1, unprogrammed default
  5023                           ;	Code Protection bit
  5024                           ;	CP1 = 0x1, unprogrammed default
  5025  300008                     	org	3145736
  5026  300008  03                 	db	3
  5027                           
  5028                           ;Config register CONFIG5H @ 0x300009
  5029                           ;	unspecified, using default values
  5030                           ;	Boot Block Code Protection bitProtect Boot
  5031                           ;	CPB = 0x1, unprogrammed default
  5032                           ;	Data EEPROM Code Protection bit
  5033                           ;	CPD = 0x1, unprogrammed default
  5034  300009                     	org	3145737
  5035  300009  C0                 	db	192
  5036                           
  5037                           ;Config register CONFIG6L @ 0x30000A
  5038                           ;	unspecified, using default values
  5039                           ;	Write Protection bit
  5040                           ;	WRT0 = 0x1, unprogrammed default
  5041                           ;	Write Protection bit
  5042                           ;	WRT1 = 0x1, unprogrammed default
  5043  30000A                     	org	3145738
  5044  30000A  03                 	db	3
  5045                           
  5046                           ;Config register CONFIG6H @ 0x30000B
  5047                           ;	unspecified, using default values
  5048                           ;	Configuration Register Write Protection bit
  5049                           ;	WRTC = 0x1, unprogrammed default
  5050                           ;	Boot Block Write Protection bit
  5051                           ;	WRTB = 0x1, unprogrammed default
  5052                           ;	Data EEPROM Write Protection bit
  5053                           ;	WRTD = 0x1, unprogrammed default
  5054  30000B                     	org	3145739
  5055  30000B  E0                 	db	224
  5056                           
  5057                           ;Config register CONFIG7L @ 0x30000C
  5058                           ;	unspecified, using default values
  5059                           ;	Table Read Protection bit
  5060                           ;	EBTR0 = 0x1, unprogrammed default
  5061                           ;	Table Read Protection bit
  5062                           ;	EBTR1 = 0x1, unprogrammed default
  5063  30000C                     	org	3145740
  5064  30000C  03                 	db	3
  5065                           
  5066                           ;Config register CONFIG7H @ 0x30000D
  5067                           ;	unspecified, using default values
  5068                           ;	Boot Block Table Read Protection bit
  5069                           ;	EBTRB = 0x1, unprogrammed default
  5070  30000D                     	org	3145741
  5071  30000D  40                 	db	64
  5072                           tosu	equ	0xFFF
  5073                           tosh	equ	0xFFE
  5074                           tosl	equ	0xFFD
  5075                           stkptr	equ	0xFFC
  5076                           pclatu	equ	0xFFB
  5077                           pclath	equ	0xFFA
  5078                           pcl	equ	0xFF9
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           prodh	equ	0xFF4
  5084                           prodl	equ	0xFF3
  5085                           indf0	equ	0xFEF
  5086                           postinc0	equ	0xFEE
  5087                           postdec0	equ	0xFED
  5088                           preinc0	equ	0xFEC
  5089                           plusw0	equ	0xFEB
  5090                           fsr0h	equ	0xFEA
  5091                           fsr0l	equ	0xFE9
  5092                           wreg	equ	0xFE8
  5093                           indf1	equ	0xFE7
  5094                           postinc1	equ	0xFE6
  5095                           postdec1	equ	0xFE5
  5096                           preinc1	equ	0xFE4
  5097                           plusw1	equ	0xFE3
  5098                           fsr1h	equ	0xFE2
  5099                           fsr1l	equ	0xFE1
  5100                           bsr	equ	0xFE0
  5101                           indf2	equ	0xFDF
  5102                           postinc2	equ	0xFDE
  5103                           postdec2	equ	0xFDD
  5104                           preinc2	equ	0xFDC
  5105                           plusw2	equ	0xFDB
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         250
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     116
    BANK0           128      0       0
    BANK1           244      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8636
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    5145
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     264
                                             10 COMRAM     2     2      0
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
   _escriureEEPROM
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      B8       6       75.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      74       1       92.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C       7        0.0%
DATA                 0      0     12C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 26 20:03:25 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03A2  
                               _i 0026                                 _j 002C  
       ??_UcheckExistsNotFinished 0063            __end_of_compareStrings 0C20  
                             l530 08E0                               l523 089E  
                             l515 087C                               l419 027E  
                             l525 08A4                               l518 088A  
                             l446 03DC                               l447 03EE  
                             l528 08DA                               l562 0DFE  
                             l547 09A2                               u230 0942  
                             u250 095E                               u308 0992  
                             u270 0978                               u248 0944  
                             u290 0990                               u268 0960  
                             u288 097A                               _pos 0025  
                ??_CantaPartBaixa 0063                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 004E  
                            l2151 0C72                              l1407 0F16  
                            l2241 0B6C                              l2401 056C  
                            l1339 0CE0                              l1347 0CEE  
                            l2243 0B76                              l2411 058C  
                            l1443 0F0A                              l1435 0EFE  
                            l2421 05A8                              l2261 0BDC  
                            l2183 0CB0                              l2407 0584  
                            l2177 0E66                              l2249 0B86  
                            l2441 05DC                              l2409 0586  
                            l2345 049E                              l2337 048A  
                            l2435 05CC                              l2427 05B2  
                            l2267 0BF8                              l2445 05E4  
                            l2701 06BC                              l1565 0DE4  
                            l2541 0306                              l2525 02CE  
                            l2517 02B4                              l2509 0294  
                            l2383 0526                              l2367 04F8  
                            l2359 04D0                              l1591 0D38  
                            l2615 03CE                              l2535 02F6  
                            l2527 02D4                              l2289 07BE  
                            l2465 05F8                              l2721 06F8  
                            l2713 06E0                              l2553 031E  
                            l2537 02FC                              l2473 0226  
                            l2633 0426                              l2395 0552  
                            l2707 06D2                              l1587 0D30  
                            l1755 089A                              l2627 0400  
                            l2389 053C                              l2741 074A  
                            l2733 0736                              l2717 06EC  
                            l2727 0728                              l2647 09BA  
                            l2583 0382                              l2567 034A  
                            l2495 026C                              l2479 0238  
                            l2737 073E                              l2681 068C  
                            l2673 0678                              l1785 091C  
                            l2657 09E8                              l2665 09F8  
                            l2577 0372                              l2569 0350  
                            l2497 0272                              l2489 025A  
                            l2747 0756                              l2595 039A  
                            l2579 0378                              l2771 0C4A  
                            l2685 0698                              l2695 06AE  
                            l2687 069E                              l2679 0688  
                            STR_1 020C                              STR_2 0201  
                            STR_3 021B                              STR_4 0214  
                            u2010 032E                              u1330 0A8A  
                            u1410 0A22                              u2220 063E  
                            u2140 0408                              u1350 0AA6  
                            u1430 0A3E                              u2230 0648  
                            u2150 0418                              u2142 040A  
                            u1408 0ADA                              u1600 086C  
                            u2240 0658                              u2152 041A  
                            u2080 03AA                              _LATD 000F8C  
                            u1370 0AC0                              u1450 0A58  
                            u2250 0668                              u1348 0A8C  
                            u1428 0A24                              u1700 04EE  
                            u2236 064A                              u2228 0640  
                            u1390 0AD8                              u1470 0A70  
                            u2246 065A                              u1368 0AA8  
                            u1448 0A40                              u2256 066A  
                            u1388 0AC2                              u1468 0A5A  
                            u1830 05BA                              u1590 0C04  
                            u1488 0A72                              u1840 05D4  
                            u1760 054C                   ??_SsetNovaTecla 0063  
                            _Rows 0039                              _main 0C20  
                            _menu 0224                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0075                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 0E5E  
                            start 0032                   __end_of_CantaIR 0DB0  
                   LcInit@columns 006E                      ___param_bank 000000  
                     Espera@Timer 006D                             ?_main 005E  
         __size_of_escriureEEPROM 002E                             ?_menu 005E  
                           _EEADR 000FA9                     ??_TiInitTimer 0063  
                           _T0CON 000FD5                   ?_compareStrings 0063  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 0DB0                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 0F5E  
                     _MNovaLletra 0F4E                             _Minit 0F56  
                           _Sinit 0F46                             _Timer 0035  
                           _Uinit 0872                             _s_ptr 0034  
                           _nou_s 03A4                       _LcCursorOff 0F1A  
                  __pbitbssCOMRAM 03A0                             tablat 000FF5  
                     _LcNewString 0F26                     ??_TiResetTics 0063  
                           ttemp5 0076                             ttemp6 0079  
                           ttemp7 007D                             status 000FD8  
                           wtemp8 0076     __size_of_UcheckExistsGetError 000C  
                __end_of_LcGotoXY 0CDA                  __end_of_LcLliure 0F1A  
                   ??__TiRSITimer 005E                        _TiGetTimer 0CDA  
         EscriuPrimeraOrdre@ordre 0064                   __initialization 0B92  
                   _indexLastUser 0027                __size_of_CantaData 0032  
                    __end_of_main 0C60                      __end_of_menu 0488  
                __end_of_TeTeclat 0798                            ??_main 0074  
                          ??_menu 0072                __size_of_LcPutChar 0052  
                   __activetblptr 000002                            ?_LcLCD 005E  
                          ?_SMSon 005E                            ?_Minit 005E  
                          ?_Sinit 005E                            ?_Uinit 005E  
             __end_of_TiInitTimer 0D4C                            _EEDATA 000FA8  
                          _EECON2 000FA7                         ??_LcClear 0071  
                       ??_CantaIR 0065                            i2l1541 0B32  
                          i2l1533 0B04                            i2l1545 0B36  
                          i2l1537 0B0C                    LcGotoXY@Fisics 006C  
                  LcGotoXY@Column 0070                     ??_WaitForBusy 006A  
              __size_of_TiGetTics 002C                    _sumaPulsacions 0033  
                          _SMSoff 0F64                            _LcInit 0798  
                  _UgetNumUsuaris 0F6A                            _SMotor 0488  
                          _TeInit 0F3E                            _Espera 0E5E  
                    _LcGotoXY$342 006E                            _RowAct 0037  
             __end_of_TiResetTics 0ED6                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 0022               __end_of__TiRSITimer 0B40  
                          clear_0 0BB8                            clear_1 0BC6  
                      _UenviaChar 0EE6                            isa$std 000001  
                      UenviaPas@c 0064       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 0043            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0029  
               __end_of_CantaData 0D7E                      TeTeclat@cols 002F  
                   ?_UcheckExists 005E                        __accesstop 0080  
         __end_of__initialization 0BCC            __end_of_UgetNumUsuaris 0F6E  
               __end_of_LcPutChar 0B92                     ___rparam_used 000001  
                   __end_of_LcLCD 0DE0                       ?_TiGetTimer 005E  
                   __end_of_SMSon 0F64                    __pcstackCOMRAM 005E  
                   __end_of_Minit 0F5E               __end_of_WaitForBusy 0CA0  
                   __end_of_Sinit 0F4E                     __end_of_Uinit 0926  
                  _escriureEEPROM 0DE0                 __end_of_TiGetTics 0E3A  
                     _TiInitTimer 0D14                           ??_LcLCD 0072  
                         ??_SMSon 0063                         ?_LcGotoXY 006B  
                       ?_LcLliure 005E                           ??_Minit 0064  
                         ??_Sinit 0064                           ??_Uinit 0063  
                  ??_UcheckExists 0063                        __pbssBANK1 0100  
                       ?_TeTeclat 005E                       _TiResetTics 0EBE  
                 ?_UgetNumUsuaris 005E                     ??_UmotorUsers 0068  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 0A7E                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 0EE6                       __TiRSITimer 0AE6  
                ??_compareStrings 0066            __end_of_escriureEEPROM 0E0E  
                     ?_UenviaChar 0063            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0070                        ??_LcGotoXY 006C  
                    ?_MNovaLletra 005E                        ??_LcLliure 0063  
             __size_of_TiGetTimer 003A                      ?_LcCursorOff 005E  
                       ?_high_rsi 005E                           _LcClear 0E3A  
                         _CantaIR 0D7E                      ?_LcNewString 0063  
                      ??_TeTeclat 006A                       _WaitForBusy 0C60  
                  ?_CantaPartAlta 005E                           _Columns 0038  
           __end_of_SsetNovaTecla 0F36                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00DA                           __Hparam 0000  
                 __size_of_SMotor 01AC                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
             __end_of_UmotorUsers 0A16          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                      __psmallconst 0200  
                         __pcinit 0B92      __end_of_UcheckExistsGetError 0F0E  
                      _init_ports 0E82                           __ramtop 0200  
                         __ptext0 0C20                           __ptext1 0224  
                         __ptext2 0F6A                           __ptext3 0ED6  
                         __ptext4 0EE6                           __ptext5 0EF6  
                         __ptext6 0F02                           __ptext7 0F6E  
                         __ptext8 0F5E                           __ptext9 0F64  
                       _T0CONbits 000FD5                         CantaIR@IR 0065  
                         _counter 002D                       UenviaChar@c 0064  
                LcNewString@new_s 0063                       Uinit@j_1003 0067  
                 WaitForBusy@Busy 006A                        ??_high_rsi 005F  
            end_of_initialization 0BCC                           _usuaris 0100  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 0067                     _MsetNovaTecla 0F36  
             __size_of_UenviaChar 0010                        _novaLletra 004C  
                 TiGetTics@actual 0068                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      _numUsuaris 0028              __end_of_UcheckExists 0F72  
                   TeTeclat@files 002E                     TeTeclat@state 0030  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                 ??_CantaPartAlta 0063                    ?_MsetNovaTecla 005E  
                       _CantaData 0D4C                       _UmotorUsers 09A0  
 __end_of_UcheckExistsNotFinished 0F02                    __end_of_SMSoff 0F6A  
                    ??_TiGetTimer 0063                    __end_of_LcInit 0872  
                  __end_of_SMotor 0634                         _LcPutChar 0B40  
                  __end_of_TeInit 0F46                    __end_of_Espera 0E82  
      __end_of_EscriuPrimeraOrdre 09A0                     __pidataCOMRAM 0EA2  
                     ?_init_ports 005E                         _ColumnAct 0036  
                    ?_TiInitTimer 005E               start_initialization 0B92  
                       _TiGetTics 0E0E                  ??_UgetNumUsuaris 0063  
                UmotorUsers@state 0024                 __size_of_LcGotoXY 003A  
              __end_of_TiGetTimer 0D14              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                      ?_TiResetTics 005E  
            __size_of_LcCursorOff 000C                        ?_CantaData 005E  
            _UcheckExistsGetError 0F02              __size_of_LcNewString 0008  
                        ??_SMSoff 0063                          ??_LcInit 006F  
                       _NovaTecla 004D                 __size_of_TeTeclat 0164  
                        ??_SMotor 006A                          ??_TeInit 0064  
                    ?__TiRSITimer 005E                          ??_Espera 006C  
                      ?_LcPutChar 005E                         _UenviaPas 0ED6  
                    ??_UenviaChar 0064                       __pbssCOMRAM 0001  
                      ?_TiGetTics 0063                   ??_MsetNovaTecla 0063  
                        ?_LcClear 005E                          ?_CantaIR 005E  
                  _CantaPartBaixa 0A16             ?_UcheckExistsGetError 005E  
               __size_of_high_rsi 002A                      ?_WaitForBusy 005E  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 0063  
              SsetNovaTecla@tecla 0063                __end_of_UenviaChar 0EF6  
                ??_escriureEEPROM 0063             __size_of_UcheckExists 0004  
                       __pintcode 0008                        ?_UenviaPas 0063  
                 CantaPartBaixa@c 0064                       __smallconst 0200  
                  __size_of_LcLCD 0030                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 0A7E                escriureEEPROM@caca 0063  
                    _UcheckExists 0F6E                       ??_CantaData 0065  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     UenviaChar@pos 0063  
                       _novaTecla 0050                       ??_LcPutChar 0071  
                        _RCONbits 000FD0                         _timerMenu 002B  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006A  
                        _LcGotoXY 0CA0                          _LcLliure 0F0E  
                     ??_TiGetTics 0065           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                      _teclaPremuda 0052  
                     LcGotoXY@Row 006B                         copy_data0 0BA6  
                 ?_CantaPartBaixa 005E            ??_UcheckExistsGetError 0063  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0634                      ?_UmotorUsers 005E  
                      _EECON1bits 000FA6              __size_of_TiResetTics 0018  
                        __Hrparam 0000                         menu@state 002A  
                        __Lrparam 0000              __size_of__TiRSITimer 005A  
                     ??_UenviaPas 0064                      ??_init_ports 0063  
                 _do_check_exists 03A1                          __ptext10 0F26  
                        __ptext11 0F0E                _EscriuPrimeraOrdre 0926  
                        __ptext20 0F2E                          __ptext12 0E3A  
                        __ptext21 0F36                          __ptext13 0E82  
                        __ptext30 0D4C                          __ptext22 0F3E  
                        __ptext14 0DE0                          __ptext31 0798  
                        __ptext23 0F46                          __ptext15 09A0  
                        __ptext40 0E0E                          __ptext32 0CDA  
                        __ptext24 0488                          __ptext16 0BDA  
                        __ptext41 0926                          __ptext33 0F1A  
                        __ptext25 0F4E                          __ptext17 0872  
                        __ptext34 0C60                          __ptext26 0F56  
                        __ptext18 0D14                          __ptext43 0AE6  
                        __ptext35 0D7E                          __ptext27 0DB0  
                        __ptext19 0634                          __ptext36 0A16  
                        __ptext28 0B40                          __ptext37 0A7E  
                        __ptext29 0CA0                          __ptext38 0E5E  
                        __ptext39 0EBE                    CantaPartAlta@c 0064  
                     _lletraASCII 0051                          _high_rsi 0008  
                        _s_Timers 0001                       _lletraInici 0043  
             ?_EscriuPrimeraOrdre 005E                     __size_of_main 0040  
                   __size_of_menu 0264             __end_of_CantaPartAlta 0AE6  
                   CantaData@Data 0065                          _tiTeclat 0031  
              __end_of_init_ports 0EA2                          _setSMSon 03A3  
                   _SsetNovaTecla 0F2E              __size_of_WaitForBusy 0040  
                        _timerSMS 004F                          isa$xinst 000000  
                        int$flags 0075                      UenviaPas@pos 0063  
            ??_EscriuPrimeraOrdre 0063                        LcInit@rows 006F  
         _UcheckExistsNotFinished 0EF6                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0063                     ??_LcCursorOff 006B  
                   ??_LcNewString 0064                          intlevel2 0000  
                      LcPutChar@c 0071                    ?_SsetNovaTecla 005E  
               MNovaLletra@lletra 0063                   compareStrings@a 0063  
                 compareStrings@b 0064                      _return_error 03A0  
                  _compareStrings 0BDA                       _tmpPassword 0019  
             __end_of_MNovaLletra 0F56             __end_of_MsetNovaTecla 0F3E  
                     _tmpUsername 003A               __end_of_LcCursorOff 0F26  
                     SMotor@state 0032           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 0F2E              __size_of_UmotorUsers 0076  
