

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 05 11:14:26 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   104                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   105                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   106                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   108  0000                     
   109                           ; Version 2.32
   110                           ; Generated 02/02/2021 GMT
   111                           ; 
   112                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F4321 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	idataCOMRAM
   146  001D7A                     __pidataCOMRAM:
   147                           	callstack 0
   148                           
   149                           ;initializer for _arrayZero
   150  001D7A  30                 	db	48
   151  001D7B  20                 	db	32
   152  001D7C  00                 	db	0
   153                           
   154                           ;initializer for _convertir
   155  001D7D  FA                 	db	250
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001D7E  FF                 	db	255
   159                           
   160                           ;initializer for _direccioSIO
   161  001D7F  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001D80  FF                 	db	255
   165                           
   166                           ;initializer for _novaTeclaJOC
   167  001D81  FF                 	db	255
   168                           
   169                           ;initializer for _usuariJoc
   170  001D82  FF                 	db	255
   171                           
   172                           ;initializer for GLCDMotor@max2
   173  001D83  0F                 	db	15
   174                           
   175                           ;initializer for GLCDMotor@max1
   176  001D84  0F                 	db	15
   177                           
   178                           ;initializer for _usuariLoguejat
   179  001D85  FF                 	db	255
   180                           
   181                           ;initializer for _novaDireccio
   182  001D86  FF                 	db	255
   183                           
   184                           ;initializer for _novaLletra
   185  001D87  FF                 	db	255
   186                           
   187                           ;initializer for _NovaTecla
   188  001D88  FF                 	db	255
   189                           
   190                           ;initializer for _ultimaTecla
   191  001D89  FF                 	db	255
   192                           
   193                           ;initializer for _timerSMS
   194  001D8A  FF                 	db	255
   195                           
   196                           ;initializer for _novaTecla
   197  001D8B  FF                 	db	255
   198                           
   199                           ;initializer for _lletraASCII
   200  001D8C  FF                 	db	255
   201                           
   202                           ;initializer for _hora
   203  001D8D  33                 	db	51
   204  001D8E  30                 	db	48
   205  001D8F  3A                 	db	58
   206  001D90  30                 	db	48
   207  001D91  30                 	db	48
   208  001D92  00                 	db	0
   209                           
   210                           ;initializer for _stringScore
   211  001D93  30                 	db	48
   212  001D94  30                 	db	48
   213  001D95  00                 	db	0
   214                           
   215                           	psect	idataBANK0
   216  001C9E                     __pidataBANK0:
   217                           	callstack 0
   218                           
   219                           ;initializer for _lletraInici
   220  001C9E  41                 	db	65
   221  001C9F  44                 	db	68
   222  001CA0  47                 	db	71
   223  001CA1  4A                 	db	74
   224  001CA2  4D                 	db	77
   225  001CA3  50                 	db	80
   226  001CA4  54                 	db	84
   227  001CA5  57                 	db	87
   228  001CA6  00                 	db	0
   229                           
   230                           ;initializer for _teclaPremuda
   231  001CA7  01                 	db	1
   232  001CA8  02                 	db	2
   233  001CA9  03                 	db	3
   234  001CAA  04                 	db	4
   235  001CAB  05                 	db	5
   236  001CAC  06                 	db	6
   237  001CAD  07                 	db	7
   238  001CAE  08                 	db	8
   239  001CAF  09                 	db	9
   240  001CB0  0A                 	db	10
   241  001CB1  00                 	db	0
   242  001CB2  0B                 	db	11
   243                           
   244                           ;initializer for _registerText
   245  001CB3  32                 	db	50
   246  001CB4  2E                 	db	46
   247  001CB5  52                 	db	82
   248  001CB6  45                 	db	69
   249  001CB7  47                 	db	71
   250  001CB8  49                 	db	73
   251  001CB9  53                 	db	83
   252  001CBA  54                 	db	84
   253  001CBB  45                 	db	69
   254  001CBC  52                 	db	82
   255  001CBD  00                 	db	0
   256                           
   257                           ;initializer for _loginText
   258  001CBE  31                 	db	49
   259  001CBF  2E                 	db	46
   260  001CC0  4C                 	db	76
   261  001CC1  4F                 	db	79
   262  001CC2  47                 	db	71
   263  001CC3  49                 	db	73
   264  001CC4  4E                 	db	78
   265  001CC5  00                 	db	0
   266                           
   267                           	psect	smallconst
   268  000200                     __psmallconst:
   269                           	callstack 0
   270  000200  00                 	db	0
   271  000201                     _menuList:
   272                           	callstack 0
   273  000201  31                 	db	49
   274  000202  2E                 	db	46
   275  000203  50                 	db	80
   276  000204  6C                 	db	108
   277  000205  61                 	db	97
   278  000206  79                 	db	121
   279  000207  20                 	db	32
   280  000208  61                 	db	97
   281  000209  20                 	db	32
   282  00020A  47                 	db	71
   283  00020B  61                 	db	97
   284  00020C  6D                 	db	109
   285  00020D  65                 	db	101
   286  00020E  00                 	db	0
   287  00020F  00                 	db	0
   288  000210  00                 	db	0
   289  000211  00                 	db	0
   290  000212  00                 	db	0
   291  000213  00                 	db	0
   292  000214  00                 	db	0
   293  000215  00                 	db	0
   294  000216  00                 	db	0
   295  000217  00                 	db	0
   296  000218  00                 	db	0
   297  000219  00                 	db	0
   298  00021A  00                 	db	0
   299  00021B  00                 	db	0
   300  00021C  00                 	db	0
   301  00021D  00                 	db	0
   302  00021E  32                 	db	50
   303  00021F  2E                 	db	46
   304  000220  4D                 	db	77
   305  000221  6F                 	db	111
   306  000222  64                 	db	100
   307  000223  69                 	db	105
   308  000224  66                 	db	102
   309  000225  79                 	db	121
   310  000226  20                 	db	32
   311  000227  54                 	db	84
   312  000228  69                 	db	105
   313  000229  6D                 	db	109
   314  00022A  65                 	db	101
   315  00022B  00                 	db	0
   316  00022C  00                 	db	0
   317  00022D  00                 	db	0
   318  00022E  00                 	db	0
   319  00022F  00                 	db	0
   320  000230  00                 	db	0
   321  000231  00                 	db	0
   322  000232  00                 	db	0
   323  000233  00                 	db	0
   324  000234  00                 	db	0
   325  000235  00                 	db	0
   326  000236  00                 	db	0
   327  000237  00                 	db	0
   328  000238  00                 	db	0
   329  000239  00                 	db	0
   330  00023A  00                 	db	0
   331  00023B  33                 	db	51
   332  00023C  2E                 	db	46
   333  00023D  53                 	db	83
   334  00023E  68                 	db	104
   335  00023F  6F                 	db	111
   336  000240  77                 	db	119
   337  000241  20                 	db	32
   338  000242  47                 	db	71
   339  000243  65                 	db	101
   340  000244  6E                 	db	110
   341  000245  65                 	db	101
   342  000246  72                 	db	114
   343  000247  61                 	db	97
   344  000248  6C                 	db	108
   345  000249  20                 	db	32
   346  00024A  54                 	db	84
   347  00024B  6F                 	db	111
   348  00024C  70                 	db	112
   349  00024D  20                 	db	32
   350  00024E  35                 	db	53
   351  00024F  20                 	db	32
   352  000250  53                 	db	83
   353  000251  63                 	db	99
   354  000252  6F                 	db	111
   355  000253  72                 	db	114
   356  000254  65                 	db	101
   357  000255  73                 	db	115
   358  000256  20                 	db	32
   359  000257  00                 	db	0
   360  000258  34                 	db	52
   361  000259  2E                 	db	46
   362  00025A  4C                 	db	76
   363  00025B  6F                 	db	111
   364  00025C  67                 	db	103
   365  00025D  6F                 	db	111
   366  00025E  75                 	db	117
   367  00025F  74                 	db	116
   368  000260  00                 	db	0
   369  000261  00                 	db	0
   370  000262  00                 	db	0
   371  000263  00                 	db	0
   372  000264  00                 	db	0
   373  000265  00                 	db	0
   374  000266  00                 	db	0
   375  000267  00                 	db	0
   376  000268  00                 	db	0
   377  000269  00                 	db	0
   378  00026A  00                 	db	0
   379  00026B  00                 	db	0
   380  00026C  00                 	db	0
   381  00026D  00                 	db	0
   382  00026E  00                 	db	0
   383  00026F  00                 	db	0
   384  000270  00                 	db	0
   385  000271  00                 	db	0
   386  000272  00                 	db	0
   387  000273  00                 	db	0
   388  000274  00                 	db	0
   389  000275  35                 	db	53
   390  000276  2E                 	db	46
   391  000277  53                 	db	83
   392  000278  68                 	db	104
   393  000279  6F                 	db	111
   394  00027A  77                 	db	119
   395  00027B  20                 	db	32
   396  00027C  41                 	db	65
   397  00027D  6C                 	db	108
   398  00027E  6C                 	db	108
   399  00027F  20                 	db	32
   400  000280  55                 	db	85
   401  000281  73                 	db	115
   402  000282  65                 	db	101
   403  000283  72                 	db	114
   404  000284  73                 	db	115
   405  000285  00                 	db	0
   406  000286  00                 	db	0
   407  000287  00                 	db	0
   408  000288  00                 	db	0
   409  000289  00                 	db	0
   410  00028A  00                 	db	0
   411  00028B  00                 	db	0
   412  00028C  00                 	db	0
   413  00028D  00                 	db	0
   414  00028E  00                 	db	0
   415  00028F  00                 	db	0
   416  000290  00                 	db	0
   417  000291  00                 	db	0
   418  000292                     __end_of_menuList:
   419                           	callstack 0
   420  0000                     _PIR1bits	set	3998
   421  0000                     _RCREG	set	4014
   422  0000                     _TXREG	set	4013
   423  0000                     _TXSTAbits	set	4012
   424  0000                     _ADCON0bits	set	4034
   425  0000                     _ADRESH	set	4036
   426  0000                     _ADCON2	set	4032
   427  0000                     _ADCON1	set	4033
   428  0000                     _ADCON0	set	4034
   429  0000                     _EECON2	set	4007
   430  0000                     _EEDATA	set	4008
   431  0000                     _EEADR	set	4009
   432  0000                     _T0CONbits	set	4053
   433  0000                     _TMR0L	set	4054
   434  0000                     _TMR0H	set	4055
   435  0000                     _T0CON	set	4053
   436  0000                     _INTCONbits	set	4082
   437  0000                     _RCONbits	set	4048
   438  0000                     _PORTDbits	set	3971
   439  0000                     _SPBRG	set	4015
   440  0000                     _SPBRGH	set	4016
   441  0000                     _BAUDCON	set	4024
   442  0000                     _RCSTA	set	4011
   443  0000                     _TXSTA	set	4012
   444  0000                     _EECON1bits	set	4006
   445  0000                     _LATD	set	3980
   446  0000                     _TRISD	set	3989
   447  0000                     _TRISC	set	3988
   448  0000                     _LATBbits	set	3978
   449  0000                     _TRISB	set	3987
   450  0000                     _TRISA	set	3986
   451  0000                     _PORTCbits	set	3970
   452  0000                     _LATDbits	set	3980
   453  0000                     _LATCbits	set	3979
   454  0000                     _TRISDbits	set	3989
   455  0000                     _TRISCbits	set	3988
   456  000292                     STR_5:
   457  000292  54                 	db	84	;'T'
   458  000293  49                 	db	73	;'I'
   459  000294  4D                 	db	77	;'M'
   460  000295  45                 	db	69	;'E'
   461  000296  20                 	db	32
   462  000297  52                 	db	82	;'R'
   463  000298  45                 	db	69	;'E'
   464  000299  4D                 	db	77	;'M'
   465  00029A  41                 	db	65	;'A'
   466  00029B  49                 	db	73	;'I'
   467  00029C  4E                 	db	78	;'N'
   468  00029D  49                 	db	73	;'I'
   469  00029E  4E                 	db	78	;'N'
   470  00029F  47                 	db	71	;'G'
   471  0002A0  3A                 	db	58	;':'
   472  0002A1  00                 	db	0
   473  0002A2                     STR_4:
   474  0002A2  4D                 	db	77	;'M'
   475  0002A3  6F                 	db	111	;'o'
   476  0002A4  64                 	db	100	;'d'
   477  0002A5  69                 	db	105	;'i'
   478  0002A6  66                 	db	102	;'f'
   479  0002A7  79                 	db	121	;'y'
   480  0002A8  20                 	db	32
   481  0002A9  54                 	db	84	;'T'
   482  0002AA  69                 	db	105	;'i'
   483  0002AB  6D                 	db	109	;'m'
   484  0002AC  65                 	db	101	;'e'
   485  0002AD  3A                 	db	58	;':'
   486  0002AE  00                 	db	0
   487  0002AF                     STR_7:
   488  0002AF  54                 	db	84	;'T'
   489  0002B0  49                 	db	73	;'I'
   490  0002B1  4D                 	db	77	;'M'
   491  0002B2  45                 	db	69	;'E'
   492  0002B3  20                 	db	32
   493  0002B4  4C                 	db	76	;'L'
   494  0002B5  45                 	db	69	;'E'
   495  0002B6  46                 	db	70	;'F'
   496  0002B7  54                 	db	84	;'T'
   497  0002B8  3A                 	db	58	;':'
   498  0002B9  20                 	db	32
   499  0002BA  00                 	db	0
   500  0002BB                     STR_3:
   501  0002BB  42                 	db	66	;'B'
   502  0002BC  59                 	db	89	;'Y'
   503  0002BD  45                 	db	69	;'E'
   504  0002BE  20                 	db	32
   505  0002BF  42                 	db	66	;'B'
   506  0002C0  59                 	db	89	;'Y'
   507  0002C1  45                 	db	69	;'E'
   508  0002C2  20                 	db	32
   509  0002C3  00                 	db	0
   510  0002C4                     STR_8:
   511  0002C4  53                 	db	83	;'S'
   512  0002C5  43                 	db	67	;'C'
   513  0002C6  4F                 	db	79	;'O'
   514  0002C7  52                 	db	82	;'R'
   515  0002C8  45                 	db	69	;'E'
   516  0002C9  3A                 	db	58	;':'
   517  0002CA  20                 	db	32
   518  0002CB  00                 	db	0
   519  0002CC                     STR_6:
   520  0002CC  45                 	db	69	;'E'
   521  0002CD  52                 	db	82	;'R'
   522  0002CE  52                 	db	82	;'R'
   523  0002CF  4F                 	db	79	;'O'
   524  0002D0  52                 	db	82	;'R'
   525  0002D1  53                 	db	83	;'S'
   526  0002D2  3A                 	db	58	;':'
   527  0002D3  00                 	db	0
   528  0002D4                     STR_2:
   529  0002D4  50                 	db	80	;'P'
   530  0002D5  53                 	db	83	;'S'
   531  0002D6  57                 	db	87	;'W'
   532  0002D7  44                 	db	68	;'D'
   533  0002D8  3A                 	db	58	;':'
   534  0002D9  20                 	db	32
   535  0002DA  00                 	db	0
   536  0002DB                     STR_1:
   537  0002DB  55                 	db	85	;'U'
   538  0002DC  53                 	db	83	;'S'
   539  0002DD  45                 	db	69	;'E'
   540  0002DE  52                 	db	82	;'R'
   541  0002DF  3A                 	db	58	;':'
   542  0002E0  20                 	db	32
   543  0002E1  00                 	db	0
   544  0002E2  00                 	db	0	; dummy byte at the end
   545  0000                     
   546                           ; #config settings
   547                           
   548                           	psect	cinit
   549  00174C                     __pcinit:
   550                           	callstack 0
   551  00174C                     start_initialization:
   552                           	callstack 0
   553  00174C                     __initialization:
   554                           	callstack 0
   555                           
   556                           ; Initialize objects allocated to BANK0 (40 bytes)
   557                           ; load TBLPTR registers with __pidataBANK0
   558  00174C  0E9E               	movlw	low __pidataBANK0
   559  00174E  6EF6               	movwf	tblptrl,c
   560  001750  0E1C               	movlw	high __pidataBANK0
   561  001752  6EF7               	movwf	tblptrh,c
   562  001754  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   563  001756  6EF8               	movwf	tblptru,c
   564  001758  EE00  F080         	lfsr	0,__pdataBANK0
   565  00175C  EE10 F028          	lfsr	1,40
   566  001760                     copy_data0:
   567  001760  0009               	tblrd		*+
   568  001762  CFF5 FFEE          	movff	tablat,postinc0
   569  001766  50E5               	movf	postdec1,w,c
   570  001768  50E1               	movf	fsr1l,w,c
   571  00176A  E1FA               	bnz	copy_data0
   572                           
   573                           ; Initialize objects allocated to COMRAM (28 bytes)
   574                           ; load TBLPTR registers with __pidataCOMRAM
   575  00176C  0E7A               	movlw	low __pidataCOMRAM
   576  00176E  6EF6               	movwf	tblptrl,c
   577  001770  0E1D               	movlw	high __pidataCOMRAM
   578  001772  6EF7               	movwf	tblptrh,c
   579  001774  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   580  001776  6EF8               	movwf	tblptru,c
   581  001778  EE00  F045         	lfsr	0,__pdataCOMRAM
   582  00177C  EE10 F01C          	lfsr	1,28
   583  001780                     copy_data1:
   584  001780  0009               	tblrd		*+
   585  001782  CFF5 FFEE          	movff	tablat,postinc0
   586  001786  50E5               	movf	postdec1,w,c
   587  001788  50E1               	movf	fsr1l,w,c
   588  00178A  E1FA               	bnz	copy_data1
   589                           
   590                           ; Clear objects allocated to BANK1 (184 bytes)
   591  00178C  EE01  F000         	lfsr	0,__pbssBANK1
   592  001790  0EB8               	movlw	184
   593  001792                     clear_0:
   594  001792  6AEE               	clrf	postinc0,c
   595  001794  06E8               	decf	wreg,f,c
   596  001796  E1FD               	bnz	clear_0
   597                           
   598                           ; Clear objects allocated to BANK0 (33 bytes)
   599  001798  EE00  F0A8         	lfsr	0,__pbssBANK0
   600  00179C  0E21               	movlw	33
   601  00179E                     clear_1:
   602  00179E  6AEE               	clrf	postinc0,c
   603  0017A0  06E8               	decf	wreg,f,c
   604  0017A2  E1FD               	bnz	clear_1
   605                           
   606                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   607  0017A4  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   608  0017A6  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   609  0017A8  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   610                           
   611                           ; Clear objects allocated to COMRAM (68 bytes)
   612  0017AA  EE00  F001         	lfsr	0,__pbssCOMRAM
   613  0017AE  0E44               	movlw	68
   614  0017B0                     clear_2:
   615  0017B0  6AEE               	clrf	postinc0,c
   616  0017B2  06E8               	decf	wreg,f,c
   617  0017B4  E1FD               	bnz	clear_2
   618  0017B6                     end_of_initialization:
   619                           	callstack 0
   620  0017B6                     __end_of__initialization:
   621                           	callstack 0
   622  0017B6  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   623  0017B8  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   624  0017BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   625  0017BC  6EF8               	movwf	tblptru,c
   626  0017BE  0100               	movlb	0
   627  0017C0  EFE2  F00B         	goto	_main	;jump to C main() function
   628                           
   629                           	psect	bitbssCOMRAM
   630  0003B8                     __pbitbssCOMRAM:
   631                           	callstack 0
   632  0003B8                     _Krebut:
   633                           	callstack 0
   634  0003B8                     	ds	1
   635  0003B9                     _jugantSIO:
   636                           	callstack 0
   637  0003B9                     	ds	1
   638  0003BA                     _jugantJoc:
   639                           	callstack 0
   640  0003BA                     	ds	1
   641  0003BB                     _tempsAcabat:
   642                           	callstack 0
   643  0003BB                     	ds	1
   644  0003BC                     _nouSegon:
   645                           	callstack 0
   646  0003BC                     	ds	1
   647  0003BD                     _jugant:
   648                           	callstack 0
   649  0003BD                     	ds	1
   650  0003BE                     _cap2:
   651                           	callstack 0
   652  0003BE                     	ds	1
   653  0003BF                     _cap1:
   654                           	callstack 0
   655  0003BF                     	ds	1
   656  0003C0                     _newString:
   657                           	callstack 0
   658  0003C0                     	ds	1
   659  0003C1                     _ferMenu:
   660                           	callstack 0
   661  0003C1                     	ds	1
   662  0003C2                     _reproduir:
   663                           	callstack 0
   664  0003C2                     	ds	1
   665  0003C3                     _borram:
   666                           	callstack 0
   667  0003C3                     	ds	1
   668  0003C4                     _do_register:
   669                           	callstack 0
   670  0003C4                     	ds	1
   671  0003C5                     _do_check_exists:
   672                           	callstack 0
   673  0003C5                     	ds	1
   674  0003C6                     _loginNOTRegister:
   675                           	callstack 0
   676  0003C6                     	ds	1
   677  0003C7                     _setSMSon:
   678                           	callstack 0
   679  0003C7                     	ds	1
   680  0003C8                     _nou_s:
   681                           	callstack 0
   682  0003C8                     	ds	1
   683                           
   684                           	psect	bssCOMRAM
   685  000001                     __pbssCOMRAM:
   686                           	callstack 0
   687  000001                     _userPtr:
   688                           	callstack 0
   689  000001                     	ds	2
   690  000003                     _h_Tics:
   691                           	callstack 0
   692  000003                     	ds	2
   693  000005                     _s_ptr:
   694                           	callstack 0
   695  000005                     	ds	2
   696  000007                     motorSIO@state:
   697                           	callstack 0
   698  000007                     	ds	1
   699  000008                     _timerSIO:
   700                           	callstack 0
   701  000008                     	ds	1
   702  000009                     _rebut:
   703                           	callstack 0
   704  000009                     	ds	1
   705  00000A                     motorJoc@state:
   706                           	callstack 0
   707  00000A                     	ds	1
   708  00000B                     _direccioJoc:
   709                           	callstack 0
   710  00000B                     	ds	1
   711  00000C                     motorHora@state:
   712                           	callstack 0
   713  00000C                     	ds	1
   714  00000D                     _segons:
   715                           	callstack 0
   716  00000D                     	ds	1
   717  00000E                     _timerHora:
   718                           	callstack 0
   719  00000E                     	ds	1
   720  00000F                     JoystickMotor@state:
   721                           	callstack 0
   722  00000F                     	ds	1
   723  000010                     _ultimaTeclaAD:
   724                           	callstack 0
   725  000010                     	ds	1
   726  000011                     GLCDMotor@length2:
   727                           	callstack 0
   728  000011                     	ds	1
   729  000012                     GLCDMotor@length1:
   730                           	callstack 0
   731  000012                     	ds	1
   732  000013                     GLCDMotor@k2:
   733                           	callstack 0
   734  000013                     	ds	1
   735  000014                     GLCDMotor@k1:
   736                           	callstack 0
   737  000014                     	ds	1
   738  000015                     GLCDMotor@min2:
   739                           	callstack 0
   740  000015                     	ds	1
   741  000016                     GLCDMotor@min1:
   742                           	callstack 0
   743  000016                     	ds	1
   744  000017                     GLCDMotor@j:
   745                           	callstack 0
   746  000017                     	ds	1
   747  000018                     GLCDMotor@state:
   748                           	callstack 0
   749  000018                     	ds	1
   750  000019                     _menuDaltGLCD:
   751                           	callstack 0
   752  000019                     	ds	1
   753  00001A                     _timerGLCD:
   754                           	callstack 0
   755  00001A                     	ds	1
   756  00001B                     motorAltaveu@state:
   757                           	callstack 0
   758  00001B                     	ds	1
   759  00001C                     _copsNota:
   760                           	callstack 0
   761  00001C                     	ds	1
   762  00001D                     _timerAltaveu:
   763                           	callstack 0
   764  00001D                     	ds	1
   765  00001E                     _nota:
   766                           	callstack 0
   767  00001E                     	ds	1
   768  00001F                     UmotorUsers@state:
   769                           	callstack 0
   770  00001F                     	ds	1
   771  000020                     _j:
   772                           	callstack 0
   773  000020                     	ds	1
   774  000021                     _i:
   775                           	callstack 0
   776  000021                     	ds	1
   777  000022                     _indexNextUserStruct:
   778                           	callstack 0
   779  000022                     	ds	1
   780  000023                     _indexNextUser:
   781                           	callstack 0
   782  000023                     	ds	1
   783  000024                     _numUsuaris:
   784                           	callstack 0
   785  000024                     	ds	1
   786  000025                     _currentUsrIndex:
   787                           	callstack 0
   788  000025                     	ds	1
   789  000026                     menu@state:
   790                           	callstack 0
   791  000026                     	ds	1
   792  000027                     _indexUsuari:
   793                           	callstack 0
   794  000027                     	ds	1
   795  000028                     _menuDalt:
   796                           	callstack 0
   797  000028                     	ds	1
   798  000029                     _timerMenu:
   799                           	callstack 0
   800  000029                     	ds	1
   801  00002A                     _tmp:
   802                           	callstack 0
   803  00002A                     	ds	1
   804  00002B                     _counter:
   805                           	callstack 0
   806  00002B                     	ds	1
   807  00002C                     TeTeclat@files:
   808                           	callstack 0
   809  00002C                     	ds	1
   810  00002D                     TeTeclat@cols:
   811                           	callstack 0
   812  00002D                     	ds	1
   813  00002E                     TeTeclat@state:
   814                           	callstack 0
   815  00002E                     	ds	1
   816  00002F                     _tiTeclat:
   817                           	callstack 0
   818  00002F                     	ds	1
   819  000030                     SMotor@state:
   820                           	callstack 0
   821  000030                     	ds	1
   822  000031                     _zeroTecla:
   823                           	callstack 0
   824  000031                     	ds	1
   825  000032                     _sumaPulsacions:
   826                           	callstack 0
   827  000032                     	ds	1
   828  000033                     _Timer:
   829                           	callstack 0
   830  000033                     	ds	1
   831  000034                     _ColumnAct:
   832                           	callstack 0
   833  000034                     	ds	1
   834  000035                     _RowAct:
   835                           	callstack 0
   836  000035                     	ds	1
   837  000036                     _Columns:
   838                           	callstack 0
   839  000036                     	ds	1
   840  000037                     _Rows:
   841                           	callstack 0
   842  000037                     	ds	1
   843  000038                     _tmpUsername:
   844                           	callstack 0
   845  000038                     	ds	9
   846  000041                     _horaTmp:
   847                           	callstack 0
   848  000041                     	ds	4
   849                           
   850                           	psect	dataCOMRAM
   851  000045                     __pdataCOMRAM:
   852                           	callstack 0
   853  000045                     _arrayZero:
   854                           	callstack 0
   855  000045                     	ds	3
   856  000048                     _convertir:
   857                           	callstack 0
   858  000048                     	ds	1
   859  000049                     _novaTeclaSIO:
   860                           	callstack 0
   861  000049                     	ds	1
   862  00004A                     _direccioSIO:
   863                           	callstack 0
   864  00004A                     	ds	1
   865  00004B                     _usuariActualSIO:
   866                           	callstack 0
   867  00004B                     	ds	1
   868  00004C                     _novaTeclaJOC:
   869                           	callstack 0
   870  00004C                     	ds	1
   871  00004D                     _usuariJoc:
   872                           	callstack 0
   873  00004D                     	ds	1
   874  00004E                     GLCDMotor@max2:
   875                           	callstack 0
   876  00004E                     	ds	1
   877  00004F                     GLCDMotor@max1:
   878                           	callstack 0
   879  00004F                     	ds	1
   880  000050                     _usuariLoguejat:
   881                           	callstack 0
   882  000050                     	ds	1
   883  000051                     _novaDireccio:
   884                           	callstack 0
   885  000051                     	ds	1
   886  000052                     _novaLletra:
   887                           	callstack 0
   888  000052                     	ds	1
   889  000053                     _NovaTecla:
   890                           	callstack 0
   891  000053                     	ds	1
   892  000054                     _ultimaTecla:
   893                           	callstack 0
   894  000054                     	ds	1
   895  000055                     _timerSMS:
   896                           	callstack 0
   897  000055                     	ds	1
   898  000056                     _novaTecla:
   899                           	callstack 0
   900  000056                     	ds	1
   901  000057                     _lletraASCII:
   902                           	callstack 0
   903  000057                     	ds	1
   904  000058                     _hora:
   905                           	callstack 0
   906  000058                     	ds	6
   907  00005E                     _stringScore:
   908                           	callstack 0
   909  00005E                     	ds	3
   910                           
   911                           	psect	bssBANK0
   912  0000A8                     __pbssBANK0:
   913                           	callstack 0
   914  0000A8                     _s_Timers:
   915                           	callstack 0
   916  0000A8                     	ds	24
   917  0000C0                     _tmpPassword:
   918                           	callstack 0
   919  0000C0                     	ds	9
   920                           
   921                           	psect	dataBANK0
   922  000080                     __pdataBANK0:
   923                           	callstack 0
   924  000080                     _lletraInici:
   925                           	callstack 0
   926  000080                     	ds	9
   927  000089                     _teclaPremuda:
   928                           	callstack 0
   929  000089                     	ds	12
   930  000095                     _registerText:
   931                           	callstack 0
   932  000095                     	ds	11
   933  0000A0                     _loginText:
   934                           	callstack 0
   935  0000A0                     	ds	8
   936                           
   937                           	psect	bssBANK1
   938  000100                     __pbssBANK1:
   939                           	callstack 0
   940  000100                     _usuaris:
   941                           	callstack 0
   942  000100                     	ds	184
   943                           
   944                           	psect	cstackCOMRAM
   945  000061                     __pcstackCOMRAM:
   946                           	callstack 0
   947  000061                     
   948                           ; 1 bytes @ 0x0
   949  000061                     	ds	1
   950  000062                     ??_high_rsi:
   951                           
   952                           ; 1 bytes @ 0x1
   953  000062                     	ds	4
   954  000066                     ??_EscriuPrimeraOrdre:
   955  000066                     ??_Uinit:
   956  000066                     ??_UcheckExistsGetError:
   957  000066                     ??_CantaPartAlta:
   958  000066                     ??_CantaPartBaixa:
   959  000066                     ?_TiGetTics:
   960                           	callstack 0
   961  000066                     ?_UgetUserName:
   962                           	callstack 0
   963  000066                     SsetNovaTecla@tecla:
   964                           	callstack 0
   965  000066                     TiResetTics@Handle:
   966                           	callstack 0
   967  000066                     MsetNovaTecla@tecla:
   968                           	callstack 0
   969  000066                     MNovaLletra@lletra:
   970                           	callstack 0
   971  000066                     MNouJoystick@posicio:
   972                           	callstack 0
   973  000066                     UenviaChar@pos:
   974                           	callstack 0
   975  000066                     UenviaPas@pos:
   976                           	callstack 0
   977  000066                     escriureCharEEPROM@pos:
   978                           	callstack 0
   979  000066                     compareStrings@a:
   980                           	callstack 0
   981  000066                     escriureEEPROM@caca:
   982                           	callstack 0
   983  000066                     GLCDMostraMenu@num:
   984                           	callstack 0
   985  000066                     HActualitzaHora@nova:
   986                           	callstack 0
   987  000066                     JJuguem@usuari:
   988                           	callstack 0
   989  000066                     JnovaTecla@tecla:
   990                           	callstack 0
   991  000066                     JnovaDireccio@dir:
   992                           	callstack 0
   993  000066                     conversorJoystick@direc:
   994                           	callstack 0
   995  000066                     SIONovaDireccio@num:
   996                           	callstack 0
   997  000066                     SIOStartGame@usuari:
   998                           	callstack 0
   999  000066                     SIONovaTecla@tecla:
  1000                           	callstack 0
  1001  000066                     CToAConverteix@numero:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x5
  1005  000066                     	ds	1
  1006  000067                     ??_JoystickMotor:
  1007  000067                     CantaPartAlta@c:
  1008                           	callstack 0
  1009  000067                     CantaPartBaixa@c:
  1010                           	callstack 0
  1011  000067                     EscriuPrimeraOrdre@ordre:
  1012                           	callstack 0
  1013  000067                     UenviaChar@c:
  1014                           	callstack 0
  1015  000067                     UenviaPas@c:
  1016                           	callstack 0
  1017  000067                     escriureCharEEPROM@c:
  1018                           	callstack 0
  1019  000067                     compareStrings@b:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  000067                     	ds	1
  1024  000068                     ??_TiGetTics:
  1025  000068                     CantaIR@IR:
  1026                           	callstack 0
  1027  000068                     CantaData@Data:
  1028                           	callstack 0
  1029  000068                     UgetUserName@quin:
  1030                           	callstack 0
  1031  000068                     Uinit@i:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x7
  1035  000068                     	ds	1
  1036  000069                     ??_compareStrings:
  1037  000069                     Uinit@j:
  1038                           	callstack 0
  1039  000069                     LcNewString@new_s:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8
  1043  000069                     	ds	1
  1044  00006A                     TiGetTics@Handle:
  1045                           	callstack 0
  1046  00006A                     Uinit@j_1156:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x9
  1050  00006A                     	ds	1
  1051  00006B                     ??_UmotorUsers:
  1052  00006B                     TiGetTics@actual:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xA
  1056  00006B                     	ds	2
  1057  00006D                     ??_SMotor:
  1058  00006D                     ??_motorHora:
  1059  00006D                     ??_motorAltaveu:
  1060  00006D                     ??_TeTeclat:
  1061  00006D                     WaitForBusy@Busy:
  1062                           	callstack 0
  1063  00006D                     Espera@ms:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0xC
  1067  00006D                     	ds	1
  1068  00006E                     LcGotoXY@Row:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xD
  1072  00006E                     	ds	1
  1073  00006F                     ??_Espera:
  1074  00006F                     LcGotoXY@Fisics:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xE
  1078  00006F                     	ds	1
  1079  000070                     Espera@Timer:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0xF
  1083  000070                     	ds	1
  1084  000071                     LcInit@columns:
  1085                           	callstack 0
  1086  000071                     _LcGotoXY$336:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x10
  1090  000071                     	ds	1
  1091  000072                     LcInit@rows:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095  000072                     	ds	1
  1096  000073                     LcGotoXY@Column:
  1097                           	callstack 0
  1098  000073                     LcInit@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x12
  1102  000073                     	ds	1
  1103  000074                     ??_motorJoc:
  1104  000074                     LcPutChar@c:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108  000074                     	ds	1
  1109  000075                     ??_motorSIO:
  1110  000075                     ??_menu:
  1111  000075                     ??_GLCDMotor:
  1112  000075                     
  1113                           ; 1 bytes @ 0x14
  1114  000075                     	ds	2
  1115  000077                     
  1116                           ; 1 bytes @ 0x16
  1117 ;;
  1118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1119 ;;
  1120 ;; *************** function _main *****************
  1121 ;; Defined at:
  1122 ;;		line 76 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1
  1136 ;;      Params:         0       0       0
  1137 ;;      Locals:         0       0       0
  1138 ;;      Temps:          0       0       0
  1139 ;;      Totals:         0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels required when called: 7
  1142 ;; This function calls:
  1143 ;;		_CtoA
  1144 ;;		_GLCDInit
  1145 ;;		_GLCDMotor
  1146 ;;		_JoystickInit
  1147 ;;		_JoystickMotor
  1148 ;;		_LcInit
  1149 ;;		_LcLCD
  1150 ;;		_Minit
  1151 ;;		_SMotor
  1152 ;;		_Sinit
  1153 ;;		_TeInit
  1154 ;;		_TeTeclat
  1155 ;;		_TiInitTimer
  1156 ;;		_Uinit
  1157 ;;		_UmotorUsers
  1158 ;;		_escriure2usuarisStruct
  1159 ;;		_escriureEEPROM
  1160 ;;		_initAltaveu
  1161 ;;		_initHora
  1162 ;;		_initSIO
  1163 ;;		_init_eusart
  1164 ;;		_init_ports
  1165 ;;		_menu
  1166 ;;		_motorAltaveu
  1167 ;;		_motorHora
  1168 ;;		_motorJoc
  1169 ;;		_motorSIO
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text0
  1176  0017C4                     __ptext0:
  1177                           	callstack 0
  1178  0017C4                     _main:
  1179                           	callstack 24
  1180                           
  1181                           ;main.c: 77:     init_ports();
  1182                           
  1183                           ;incstack = 0
  1184  0017C4  ECAD  F00E         	call	_init_ports	;wreg free
  1185                           
  1186                           ;main.c: 78:     escriureEEPROM();
  1187  0017C8  EC0C  F00E         	call	_escriureEEPROM	;wreg free
  1188                           
  1189                           ;main.c: 79:     init_eusart();
  1190  0017CC  ECD7  F00E         	call	_init_eusart	;wreg free
  1191                           
  1192                           ;main.c: 80:     TiInitTimer();
  1193  0017D0  EC88  F00D         	call	_TiInitTimer	;wreg free
  1194                           
  1195                           ;main.c: 81:     TeInit();
  1196  0017D4  EC6A  F00F         	call	_TeInit	;wreg free
  1197                           
  1198                           ;main.c: 82:     Sinit();
  1199  0017D8  EC6E  F00F         	call	_Sinit	;wreg free
  1200                           
  1201                           ;main.c: 83:     SMotor();
  1202  0017DC  ECB6  F006         	call	_SMotor	;wreg free
  1203                           
  1204                           ;main.c: 84:     Uinit();
  1205  0017E0  ECC0  F00A         	call	_Uinit	;wreg free
  1206                           
  1207                           ;main.c: 85:     initAltaveu();
  1208  0017E4  EC5E  F00F         	call	_initAltaveu	;wreg free
  1209                           
  1210                           ;main.c: 86:     GLCDInit();
  1211  0017E8  EC7E  F00F         	call	_GLCDInit	;wreg free
  1212                           
  1213                           ;main.c: 87:     JoystickInit();
  1214  0017EC  ECEC  F00E         	call	_JoystickInit	;wreg free
  1215                           
  1216                           ;main.c: 88:     initHora();
  1217  0017F0  EC5A  F00F         	call	_initHora	;wreg free
  1218                           
  1219                           ;main.c: 89:     initSIO();
  1220  0017F4  EC56  F00F         	call	_initSIO	;wreg free
  1221                           
  1222                           ;main.c: 91:     LcInit(2,16);
  1223  0017F8  0E10               	movlw	16
  1224  0017FA  6E71               	movwf	LcInit@columns^0,c
  1225  0017FC  0E02               	movlw	2
  1226  0017FE  EC98  F009         	call	_LcInit
  1227                           
  1228                           ;main.c: 92:     Minit();
  1229  001802  EC76  F00F         	call	_Minit	;wreg free
  1230                           
  1231                           ;main.c: 94:     escriure2usuarisStruct();
  1232  001806  EC23  F00E         	call	_escriure2usuarisStruct	;wreg free
  1233  00180A                     l5611:
  1234                           
  1235                           ;main.c: 97:         motorJoc();
  1236  00180A  EC08  F00A         	call	_motorJoc	;wreg free
  1237                           
  1238                           ;main.c: 98:         motorSIO();
  1239  00180E  ECA8  F005         	call	_motorSIO	;wreg free
  1240                           
  1241                           ;main.c: 99:         motorHora();
  1242  001812  EC1A  F00B         	call	_motorHora	;wreg free
  1243                           
  1244                           ;main.c: 100:         JoystickMotor();
  1245  001816  EC23  F009         	call	_JoystickMotor	;wreg free
  1246                           
  1247                           ;main.c: 101:         menu();
  1248  00181A  EC72  F001         	call	_menu	;wreg free
  1249                           
  1250                           ;main.c: 102:         CtoA();
  1251  00181E  EC63  F00E         	call	_CtoA	;wreg free
  1252                           
  1253                           ;main.c: 103:         motorAltaveu();
  1254  001822  EC65  F00A         	call	_motorAltaveu	;wreg free
  1255                           
  1256                           ;main.c: 104:         UmotorUsers();
  1257  001826  ECB4  F007         	call	_UmotorUsers	;wreg free
  1258                           
  1259                           ;main.c: 105:         GLCDMotor();
  1260  00182A  ECC3  F003         	call	_GLCDMotor	;wreg free
  1261                           
  1262                           ;main.c: 106:         TeTeclat();
  1263  00182E  EC71  F008         	call	_TeTeclat	;wreg free
  1264                           
  1265                           ;main.c: 107:         SMotor();
  1266  001832  ECB6  F006         	call	_SMotor	;wreg free
  1267                           
  1268                           ;main.c: 108:         LcLCD();
  1269  001836  EC86  F00C         	call	_LcLCD	;wreg free
  1270  00183A  D7E7               	goto	l5611
  1271  00183C                     __end_of_main:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _motorSIO *****************
  1275 ;; Defined at:
  1276 ;;		line 42 in file "SIO.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/1
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1
  1290 ;;      Params:         0       0       0
  1291 ;;      Locals:         0       0       0
  1292 ;;      Temps:          2       0       0
  1293 ;;      Totals:         2       0       0
  1294 ;;Total ram usage:        2 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 6
  1297 ;; This function calls:
  1298 ;;		_CToAConverteix
  1299 ;;		_CToAHaAcabat
  1300 ;;		_CToAobtenir
  1301 ;;		_HGetTime
  1302 ;;		_LcClear
  1303 ;;		_LcGotoXY
  1304 ;;		_LcLliure
  1305 ;;		_LcNewString
  1306 ;;		_LcPutChar
  1307 ;;		_TiGetTics
  1308 ;;		_TiResetTics
  1309 ;;		_UgetUserName
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text1
  1316  000B50                     __ptext1:
  1317                           	callstack 0
  1318  000B50                     _motorSIO:
  1319                           	callstack 24
  1320                           
  1321                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1322                           
  1323                           ;incstack = 0
  1324  000B50  D0E6               	goto	l4729
  1325  000B52                     l4613:
  1326                           
  1327                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1328  000B52  BE4B               	btfsc	_usuariActualSIO^0,7,c
  1329  000B54  0012               	return	
  1330                           
  1331                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1332  000B56  504B               	movf	_usuariActualSIO^0,w,c
  1333  000B58  ECE2  F00E         	call	_UgetUserName
  1334  000B5C  C066  F001         	movff	?_UgetUserName,_userPtr
  1335  000B60  C067  F002         	movff	?_UgetUserName+1,_userPtr+1
  1336                           
  1337                           ;SIO.c: 49:     jugantSIO = 1;
  1338  000B64  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1339                           
  1340                           ;SIO.c: 50:     Krebut = 0;
  1341  000B66  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1342                           
  1343                           ;SIO.c: 51:     state = 1;
  1344  000B68  0E01               	movlw	1
  1345  000B6A  6E07               	movwf	motorSIO@state^0,c
  1346  000B6C  0012               	return	
  1347  000B6E                     l4623:
  1348                           
  1349                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1350  000B6E  C001  FFD9         	movff	_userPtr,fsr2l
  1351  000B72  C002  FFDA         	movff	_userPtr+1,fsr2h
  1352  000B76  50DF               	movf	indf2,w,c
  1353  000B78  B4D8               	btfsc	status,2,c
  1354  000B7A  A2AC               	btfss	172,1,c	;volatile
  1355  000B7C  D008               	goto	l4631
  1356                           
  1357                           ;SIO.c: 56:     TXREG = '\0';
  1358  000B7E  0E00               	movlw	0
  1359  000B80  6EAD               	movwf	173,c	;volatile
  1360                           
  1361                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1362  000B82  0E00               	movlw	0
  1363  000B84  6E49               	movwf	_novaTeclaSIO^0,c
  1364                           
  1365                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1366  000B86  868A               	bsf	138,3,c	;volatile
  1367                           
  1368                           ;SIO.c: 59:     state = 2;
  1369  000B88  0E02               	movlw	2
  1370  000B8A  6E07               	movwf	motorSIO@state^0,c
  1371                           
  1372                           ;SIO.c: 60:    }
  1373  000B8C  0012               	return	
  1374  000B8E                     l4631:
  1375  000B8E  C001  FFD9         	movff	_userPtr,fsr2l
  1376  000B92  C002  FFDA         	movff	_userPtr+1,fsr2h
  1377  000B96  50DF               	movf	indf2,w,c
  1378  000B98  B4D8               	btfsc	status,2,c
  1379  000B9A  0012               	return	
  1380  000B9C  A2AC               	btfss	172,1,c	;volatile
  1381  000B9E  0012               	return	
  1382                           
  1383                           ;SIO.c: 62:     TXREG = *userPtr;
  1384  000BA0  C001  FFD9         	movff	_userPtr,fsr2l
  1385  000BA4  C002  FFDA         	movff	_userPtr+1,fsr2h
  1386  000BA8  50DF               	movf	indf2,w,c
  1387  000BAA  6EAD               	movwf	173,c	;volatile
  1388                           
  1389                           ;SIO.c: 63:     userPtr++;
  1390  000BAC  4A01               	infsnz	_userPtr^0,f,c
  1391  000BAE  2A02               	incf	(_userPtr+1)^0,f,c
  1392  000BB0  0012               	return	
  1393  000BB2                     l4639:
  1394                           
  1395                           ;SIO.c: 67:    if (RCREG == 'K') {
  1396  000BB2  0E4B               	movlw	75
  1397  000BB4  18AE               	xorwf	174,w,c
  1398  000BB6  A4D8               	btfss	status,2,c
  1399  000BB8  0012               	return	
  1400                           
  1401                           ;SIO.c: 68:     Krebut = 1;
  1402  000BBA  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1403  000BBC                     l4643:
  1404                           
  1405                           ;SIO.c: 69:     state = 3;
  1406  000BBC  0E03               	movlw	3
  1407  000BBE  6E07               	movwf	motorSIO@state^0,c
  1408  000BC0  0012               	return	
  1409  000BC2                     l4645:
  1410                           
  1411                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1412  000BC2  284A               	incf	_direccioSIO^0,w,c
  1413  000BC4  A4D8               	btfss	status,2,c
  1414  000BC6  A2AC               	btfss	172,1,c	;volatile
  1415  000BC8  D004               	goto	l4653
  1416                           
  1417                           ;SIO.c: 74:     TXREG = direccioSIO;
  1418  000BCA  C04A  FFAD         	movff	_direccioSIO,4013	;volatile
  1419                           
  1420                           ;SIO.c: 75:     direccioSIO = -1;
  1421  000BCE  684A               	setf	_direccioSIO^0,c
  1422  000BD0  D7F5               	goto	l4643
  1423  000BD2                     l4653:
  1424  000BD2  0E30               	movlw	48
  1425  000BD4  6449               	cpfsgt	_novaTeclaSIO^0,c
  1426  000BD6  D00C               	goto	l1159
  1427  000BD8  0E3A               	movlw	58
  1428  000BDA  6049               	cpfslt	_novaTeclaSIO^0,c
  1429  000BDC  D009               	goto	l1159
  1430  000BDE  A2AC               	btfss	172,1,c	;volatile
  1431  000BE0  D007               	goto	l1159
  1432                           
  1433                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1434  000BE2  C049  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1435                           
  1436                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1437  000BE6  0E00               	movlw	0
  1438  000BE8  6E49               	movwf	_novaTeclaSIO^0,c
  1439                           
  1440                           ;SIO.c: 81:     state = 3;
  1441  000BEA  0E03               	movlw	3
  1442  000BEC  6E07               	movwf	motorSIO@state^0,c
  1443                           
  1444                           ;SIO.c: 82:    }
  1445  000BEE  0012               	return	
  1446  000BF0                     l1159:
  1447  000BF0  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1448  000BF2  D002               	goto	u3910
  1449  000BF4  B2AC               	btfsc	172,1,c	;volatile
  1450  000BF6  D002               	goto	u3920
  1451  000BF8                     u3910:
  1452  000BF8  AA9E               	btfss	158,5,c	;volatile
  1453  000BFA  0012               	return	
  1454  000BFC                     u3920:
  1455                           
  1456                           ;SIO.c: 84:     LcClear();
  1457  000BFC  EC89  F00E         	call	_LcClear	;wreg free
  1458                           
  1459                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1460  000C00  0ECC               	movlw	low STR_6
  1461  000C02  6E69               	movwf	LcNewString@new_s^0,c
  1462  000C04  5069               	movf	LcNewString@new_s^0,w,c
  1463  000C06  A4D8               	btfss	status,2,c
  1464  000C08  0E02               	movlw	high __smallconst
  1465  000C0A  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  1466  000C0C  EC29  F00F         	call	_LcNewString	;wreg free
  1467                           
  1468                           ;SIO.c: 86:     TXREG = 'F';
  1469  000C10  0E46               	movlw	70
  1470  000C12  6EAD               	movwf	173,c	;volatile
  1471                           
  1472                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1473  000C14  0E00               	movlw	0
  1474  000C16  6E49               	movwf	_novaTeclaSIO^0,c
  1475                           
  1476                           ;SIO.c: 88:     state = 4;
  1477  000C18  0E04               	movlw	4
  1478  000C1A  6E07               	movwf	motorSIO@state^0,c
  1479  000C1C  0012               	return	
  1480  000C1E                     l1166:
  1481                           
  1482                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1483  000C1E  AA9E               	btfss	158,5,c	;volatile
  1484  000C20  0012               	return	
  1485                           
  1486                           ;SIO.c: 93:     CToAConverteix(RCREG);
  1487  000C22  50AE               	movf	174,w,c	;volatile
  1488  000C24  EC05  F00F         	call	_CToAConverteix
  1489                           
  1490                           ;SIO.c: 94:     TiResetTics(timerSIO);
  1491  000C28  5008               	movf	_timerSIO^0,w,c
  1492  000C2A  ECCB  F00E         	call	_TiResetTics
  1493  000C2E                     l4679:
  1494                           
  1495                           ;SIO.c: 95:     state = 5;
  1496  000C2E  0E05               	movlw	5
  1497  000C30  6E07               	movwf	motorSIO@state^0,c
  1498  000C32  0012               	return	
  1499  000C34                     l4681:
  1500                           
  1501                           ;SIO.c: 99:    if (TiGetTics(timerSIO) > 2490) {
  1502  000C34  5008               	movf	_timerSIO^0,w,c
  1503  000C36  EC39  F00E         	call	_TiGetTics
  1504  000C3A  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  1505  000C3C  D013               	goto	l4689
  1506  000C3E  0EBB               	movlw	187
  1507  000C40  5C66               	subwf	?_TiGetTics^0,w,c
  1508  000C42  0E09               	movlw	9
  1509  000C44  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  1510  000C46  A0D8               	btfss	status,0,c
  1511  000C48  D00D               	goto	l4689
  1512                           
  1513                           ;SIO.c: 100:     LcClear();
  1514  000C4A  EC89  F00E         	call	_LcClear	;wreg free
  1515                           
  1516                           ;SIO.c: 101:     LcNewString("TIME LEFT: ");
  1517  000C4E  0EAF               	movlw	low STR_7
  1518  000C50  6E69               	movwf	LcNewString@new_s^0,c
  1519  000C52  5069               	movf	LcNewString@new_s^0,w,c
  1520  000C54  A4D8               	btfss	status,2,c
  1521  000C56  0E02               	movlw	high __smallconst
  1522  000C58  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  1523  000C5A  EC29  F00F         	call	_LcNewString	;wreg free
  1524                           
  1525                           ;SIO.c: 102:     state = 7;
  1526  000C5E  0E07               	movlw	7
  1527  000C60  6E07               	movwf	motorSIO@state^0,c
  1528                           
  1529                           ;SIO.c: 103:    }
  1530  000C62  0012               	return	
  1531  000C64                     l4689:
  1532  000C64  5008               	movf	_timerSIO^0,w,c
  1533  000C66  EC39  F00E         	call	_TiGetTics
  1534  000C6A  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  1535  000C6C  D006               	goto	u3950
  1536  000C6E  0EBA               	movlw	186
  1537  000C70  5C66               	subwf	?_TiGetTics^0,w,c
  1538  000C72  0E09               	movlw	9
  1539  000C74  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  1540  000C76  B0D8               	btfsc	status,0,c
  1541  000C78  0012               	return	
  1542  000C7A                     u3950:
  1543  000C7A  AA9E               	btfss	158,5,c	;volatile
  1544  000C7C  0012               	return	
  1545  000C7E  EC2F  F00F         	call	_LcLliure	;wreg free
  1546  000C82  A0D8               	btfss	status,0,c
  1547  000C84  0012               	return	
  1548                           
  1549                           ;SIO.c: 105:     LcGotoXY(0,1);
  1550  000C86  0E01               	movlw	1
  1551  000C88  6E6E               	movwf	LcGotoXY@Row^0,c
  1552  000C8A  0E00               	movlw	0
  1553  000C8C  EC4E  F00D         	call	_LcGotoXY
  1554                           
  1555                           ;SIO.c: 106:     LcPutChar(RCREG);
  1556  000C90  50AE               	movf	174,w,c	;volatile
  1557  000C92  ECE2  F00C         	call	_LcPutChar
  1558                           
  1559                           ;SIO.c: 107:     state = 6;
  1560  000C96  0E06               	movlw	6
  1561  000C98  6E07               	movwf	motorSIO@state^0,c
  1562  000C9A  0012               	return	
  1563  000C9C                     l4699:
  1564                           
  1565                           ;SIO.c: 111:    if (LcLliure()) {
  1566  000C9C  EC2F  F00F         	call	_LcLliure	;wreg free
  1567  000CA0  A0D8               	btfss	status,0,c
  1568  000CA2  0012               	return	
  1569                           
  1570                           ;SIO.c: 112:     LcNewString(HGetTime());
  1571  000CA4  EC93  F00F         	call	_HGetTime	;wreg free
  1572  000CA8  6E75               	movwf	??_motorSIO^0,c
  1573  000CAA  C075  F069         	movff	??_motorSIO,LcNewString@new_s
  1574  000CAE  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  1575  000CB0  EC29  F00F         	call	_LcNewString	;wreg free
  1576                           
  1577                           ;SIO.c: 113:     state = 8;
  1578  000CB4  0E08               	movlw	8
  1579  000CB6  6E07               	movwf	motorSIO@state^0,c
  1580  000CB8  0012               	return	
  1581  000CBA                     l1174:
  1582                           
  1583                           ;SIO.c: 117:    if (PIR1bits.RCIF) {
  1584  000CBA  AA9E               	btfss	158,5,c	;volatile
  1585  000CBC  0012               	return	
  1586                           
  1587                           ;SIO.c: 118:     LcPutChar(RCREG);
  1588  000CBE  50AE               	movf	174,w,c	;volatile
  1589  000CC0  ECE2  F00C         	call	_LcPutChar
  1590                           
  1591                           ;SIO.c: 119:                 TiResetTics(timerSIO);
  1592  000CC4  5008               	movf	_timerSIO^0,w,c
  1593  000CC6  ECCB  F00E         	call	_TiResetTics
  1594  000CCA  D7B1               	goto	l4679
  1595  000CCC                     l4709:
  1596                           
  1597                           ;SIO.c: 124:    if (LcLliure()) {
  1598  000CCC  EC2F  F00F         	call	_LcLliure	;wreg free
  1599  000CD0  A0D8               	btfss	status,0,c
  1600  000CD2  0012               	return	
  1601                           
  1602                           ;SIO.c: 125:     LcGotoXY(0,1);
  1603  000CD4  0E01               	movlw	1
  1604  000CD6  6E6E               	movwf	LcGotoXY@Row^0,c
  1605  000CD8  0E00               	movlw	0
  1606  000CDA  EC4E  F00D         	call	_LcGotoXY
  1607                           
  1608                           ;SIO.c: 126:     LcNewString("SCORE: ");
  1609  000CDE  0EC4               	movlw	low STR_8
  1610  000CE0  6E69               	movwf	LcNewString@new_s^0,c
  1611  000CE2  5069               	movf	LcNewString@new_s^0,w,c
  1612  000CE4  A4D8               	btfss	status,2,c
  1613  000CE6  0E02               	movlw	high __smallconst
  1614  000CE8  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  1615  000CEA  EC29  F00F         	call	_LcNewString	;wreg free
  1616                           
  1617                           ;SIO.c: 127:     state = 9;
  1618  000CEE  0E09               	movlw	9
  1619  000CF0  6E07               	movwf	motorSIO@state^0,c
  1620  000CF2  0012               	return	
  1621  000CF4                     l4717:
  1622                           
  1623                           ;SIO.c: 131:    if (LcLliure() && CToAHaAcabat() == 250) {
  1624  000CF4  EC2F  F00F         	call	_LcLliure	;wreg free
  1625  000CF8  A0D8               	btfss	status,0,c
  1626  000CFA  0012               	return	
  1627  000CFC  EC8D  F00F         	call	_CToAHaAcabat	;wreg free
  1628  000D00  0AFA               	xorlw	250
  1629  000D02  A4D8               	btfss	status,2,c
  1630  000D04  0012               	return	
  1631                           
  1632                           ;SIO.c: 132:     LcNewString(CToAobtenir());
  1633  000D06  EC8B  F00F         	call	_CToAobtenir	;wreg free
  1634  000D0A  6E75               	movwf	??_motorSIO^0,c
  1635  000D0C  C075  F069         	movff	??_motorSIO,LcNewString@new_s
  1636  000D10  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  1637  000D12  EC29  F00F         	call	_LcNewString	;wreg free
  1638                           
  1639                           ;SIO.c: 133:     usuariActualSIO = -1;
  1640  000D16  684B               	setf	_usuariActualSIO^0,c
  1641                           
  1642                           ;SIO.c: 134:     state = 0;
  1643  000D18  0E00               	movlw	0
  1644  000D1A  6E07               	movwf	motorSIO@state^0,c
  1645  000D1C  0012               	return	
  1646  000D1E                     l4729:
  1647  000D1E  5007               	movf	motorSIO@state^0,w,c
  1648  000D20  6E75               	movwf	??_motorSIO^0,c
  1649  000D22  6A76               	clrf	(??_motorSIO+1)^0,c
  1650                           
  1651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1652                           ; Switch size 1, requested type "simple"
  1653                           ; Number of cases is 1, Range of values is 0 to 0
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte            4     3 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  000D24  5076               	movf	(??_motorSIO+1)^0,w,c
  1659  000D26  0A00               	xorlw	0	; case 0
  1660  000D28  A4D8               	btfss	status,2,c
  1661  000D2A  0012               	return	
  1662                           
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 10, Range of values is 0 to 9
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte           31    16 (average)
  1668                           ;	Chosen strategy is simple_byte
  1669  000D2C  5075               	movf	??_motorSIO^0,w,c
  1670  000D2E  0A00               	xorlw	0	; case 0
  1671  000D30  B4D8               	btfsc	status,2,c
  1672  000D32  D70F               	goto	l4613
  1673  000D34  0A01               	xorlw	1	; case 1
  1674  000D36  B4D8               	btfsc	status,2,c
  1675  000D38  D71A               	goto	l4623
  1676  000D3A  0A03               	xorlw	3	; case 2
  1677  000D3C  B4D8               	btfsc	status,2,c
  1678  000D3E  D739               	goto	l4639
  1679  000D40  0A01               	xorlw	1	; case 3
  1680  000D42  B4D8               	btfsc	status,2,c
  1681  000D44  D73E               	goto	l4645
  1682  000D46  0A07               	xorlw	7	; case 4
  1683  000D48  B4D8               	btfsc	status,2,c
  1684  000D4A  D769               	goto	l1166
  1685  000D4C  0A01               	xorlw	1	; case 5
  1686  000D4E  B4D8               	btfsc	status,2,c
  1687  000D50  D771               	goto	l4681
  1688  000D52  0A03               	xorlw	3	; case 6
  1689  000D54  B4D8               	btfsc	status,2,c
  1690  000D56  D7B1               	goto	l1174
  1691  000D58  0A01               	xorlw	1	; case 7
  1692  000D5A  B4D8               	btfsc	status,2,c
  1693  000D5C  D79F               	goto	l4699
  1694  000D5E  0A0F               	xorlw	15	; case 8
  1695  000D60  B4D8               	btfsc	status,2,c
  1696  000D62  D7B4               	goto	l4709
  1697  000D64  0A01               	xorlw	1	; case 9
  1698  000D66  A4D8               	btfss	status,2,c
  1699  000D68  0012               	return	
  1700  000D6A  D7C4               	goto	l4717
  1701  000D6C                     __end_of_motorSIO:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _CToAobtenir *****************
  1705 ;; Defined at:
  1706 ;;		line 7 in file "CtoA.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      PTR unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/1
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1
  1720 ;;      Params:         2       0       0
  1721 ;;      Locals:         0       0       0
  1722 ;;      Temps:          0       0       0
  1723 ;;      Totals:         2       0       0
  1724 ;;Total ram usage:        2 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_motorSIO
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text2
  1735  001F16                     __ptext2:
  1736                           	callstack 0
  1737  001F16                     _CToAobtenir:
  1738                           	callstack 27
  1739                           
  1740                           ;CtoA.c: 8:     return stringScore;
  1741                           
  1742                           ;incstack = 0
  1743  001F16  0E5E               	movlw	_stringScore& (0+255)
  1744  001F18  0012               	return		;funcret
  1745  001F1A                     __end_of_CToAobtenir:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _CToAHaAcabat *****************
  1749 ;; Defined at:
  1750 ;;		line 10 in file "CtoA.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      unsigned char 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/1
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1
  1764 ;;      Params:         0       0       0
  1765 ;;      Locals:         0       0       0
  1766 ;;      Temps:          0       0       0
  1767 ;;      Totals:         0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 2
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_motorSIO
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text3
  1779  001F1A                     __ptext3:
  1780                           	callstack 0
  1781  001F1A                     _CToAHaAcabat:
  1782                           	callstack 27
  1783                           
  1784                           ;CtoA.c: 11:     return convertir;
  1785                           
  1786                           ;incstack = 0
  1787  001F1A  5048               	movf	_convertir^0,w,c
  1788  001F1C  0012               	return		;funcret
  1789  001F1E                     __end_of_CToAHaAcabat:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _CToAConverteix *****************
  1793 ;; Defined at:
  1794 ;;		line 18 in file "CtoA.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  numero          1    wreg     unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  numero          1    5[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/1
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1
  1808 ;;      Params:         0       0       0
  1809 ;;      Locals:         1       0       0
  1810 ;;      Temps:          0       0       0
  1811 ;;      Totals:         1       0       0
  1812 ;;Total ram usage:        1 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 3
  1815 ;; This function calls:
  1816 ;;		_CToAReset
  1817 ;; This function is called by:
  1818 ;;		_motorSIO
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text4
  1823  001E0A                     __ptext4:
  1824                           	callstack 0
  1825  001E0A                     _CToAConverteix:
  1826                           	callstack 26
  1827                           
  1828                           ;incstack = 0
  1829                           ;CToAConverteix@numero stored from wreg
  1830  001E0A  6E66               	movwf	CToAConverteix@numero^0,c
  1831                           
  1832                           ;CtoA.c: 19:     CToAReset();
  1833  001E0C  EC35  F00F         	call	_CToAReset	;wreg free
  1834                           
  1835                           ;CtoA.c: 20:     convertir = numero;
  1836  001E10  C066  F048         	movff	CToAConverteix@numero,_convertir
  1837  001E14  0012               	return		;funcret
  1838  001E16                     __end_of_CToAConverteix:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _CToAReset *****************
  1842 ;; Defined at:
  1843 ;;		line 14 in file "CtoA.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/1
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1
  1857 ;;      Params:         0       0       0
  1858 ;;      Locals:         0       0       0
  1859 ;;      Temps:          0       0       0
  1860 ;;      Totals:         0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_CToAConverteix
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text5
  1872  001E6A                     __ptext5:
  1873                           	callstack 0
  1874  001E6A                     _CToAReset:
  1875                           	callstack 26
  1876                           
  1877                           ;CtoA.c: 15:     stringScore[0] = '0';
  1878                           
  1879                           ;incstack = 0
  1880  001E6A  0E30               	movlw	48
  1881  001E6C  6E5E               	movwf	_stringScore^0,c
  1882                           
  1883                           ;CtoA.c: 16:     stringScore[1] = '0';
  1884  001E6E  0E30               	movlw	48
  1885  001E70  6E5F               	movwf	(_stringScore+1)^0,c
  1886  001E72  0012               	return		;funcret
  1887  001E74                     __end_of_CToAReset:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _motorJoc *****************
  1891 ;; Defined at:
  1892 ;;		line 48 in file "Joc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/1
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1
  1906 ;;      Params:         0       0       0
  1907 ;;      Locals:         0       0       0
  1908 ;;      Temps:          2       0       0
  1909 ;;      Totals:         2       0       0
  1910 ;;Total ram usage:        2 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 5
  1913 ;; This function calls:
  1914 ;;		_HClearNouSegon
  1915 ;;		_HGetTime
  1916 ;;		_HJugant
  1917 ;;		_HNouSegon
  1918 ;;		_HnoJugant
  1919 ;;		_LcGotoXY
  1920 ;;		_LcLliure
  1921 ;;		_LcNewString
  1922 ;;		_SIONovaDireccio
  1923 ;;		_SIONovaTecla
  1924 ;;		_SIOStartGame
  1925 ;;		_SIOcheckKrebut
  1926 ;;		_SIOendGame
  1927 ;;		_conversorJoystick
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text6
  1934  001410                     __ptext6:
  1935                           	callstack 0
  1936  001410                     _motorJoc:
  1937                           	callstack 25
  1938                           
  1939                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1940                           
  1941                           ;incstack = 0
  1942  001410  D04A               	goto	l4605
  1943  001412                     l4553:
  1944                           
  1945                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1946  001412  284D               	incf	_usuariJoc^0,w,c
  1947  001414  B4D8               	btfsc	status,2,c
  1948  001416  0012               	return	
  1949                           
  1950                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1951  001418  504D               	movf	_usuariJoc^0,w,c
  1952  00141A  EC3A  F00F         	call	_SIOStartGame
  1953                           
  1954                           ;Joc.c: 55:     jugantJoc = 1;
  1955  00141E  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1956                           
  1957                           ;Joc.c: 56:     state = 2;
  1958  001420  0E02               	movlw	2
  1959  001422  6E0A               	movwf	motorJoc@state^0,c
  1960                           
  1961                           ;Joc.c: 58:   break;
  1962                           
  1963                           ;Joc.c: 57:    }
  1964  001424  0012               	return	
  1965  001426                     l1054:
  1966                           
  1967                           ;Joc.c: 60:    if (!jugantJoc) {
  1968  001426  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1969  001428  D009               	goto	l4569
  1970                           
  1971                           ;Joc.c: 61:     usuariJoc = -1;
  1972  00142A  684D               	setf	_usuariJoc^0,c
  1973                           
  1974                           ;Joc.c: 62:     HnoJugant();
  1975  00142C  EC91  F00F         	call	_HnoJugant	;wreg free
  1976                           
  1977                           ;Joc.c: 63:     SIOendGame();
  1978  001430  EC8F  F00F         	call	_SIOendGame	;wreg free
  1979                           
  1980                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1981  001434  968A               	bcf	138,3,c	;volatile
  1982                           
  1983                           ;Joc.c: 65:     state = 0;
  1984  001436  0E00               	movlw	0
  1985  001438  6E0A               	movwf	motorJoc@state^0,c
  1986                           
  1987                           ;Joc.c: 66:    }
  1988  00143A  0012               	return	
  1989  00143C                     l4569:
  1990  00143C  BE0B               	btfsc	_direccioJoc^0,7,c
  1991  00143E  D009               	goto	l4577
  1992                           
  1993                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1994  001440  500B               	movf	_direccioJoc^0,w,c
  1995  001442  ECA4  F00D         	call	_conversorJoystick
  1996  001446  EC42  F00F         	call	_SIONovaDireccio
  1997                           
  1998                           ;Joc.c: 69:     direccioJoc = -1;
  1999  00144A  680B               	setf	_direccioJoc^0,c
  2000  00144C                     l4575:
  2001                           
  2002                           ;Joc.c: 70:     state = 1;
  2003  00144C  0E01               	movlw	1
  2004  00144E  6E0A               	movwf	motorJoc@state^0,c
  2005                           
  2006                           ;Joc.c: 71:    }
  2007  001450  0012               	return	
  2008  001452                     l4577:
  2009  001452  EC11  F00F         	call	_HNouSegon	;wreg free
  2010  001456  A0D8               	btfss	status,0,c
  2011  001458  D014               	goto	l4589
  2012  00145A  EC2F  F00F         	call	_LcLliure	;wreg free
  2013  00145E  A0D8               	btfss	status,0,c
  2014  001460  D010               	goto	l4589
  2015                           
  2016                           ;Joc.c: 73:     HClearNouSegon();
  2017  001462  EC95  F00F         	call	_HClearNouSegon	;wreg free
  2018                           
  2019                           ;Joc.c: 74:     LcGotoXY(0,1);
  2020  001466  0E01               	movlw	1
  2021  001468  6E6E               	movwf	LcGotoXY@Row^0,c
  2022  00146A  0E00               	movlw	0
  2023  00146C  EC4E  F00D         	call	_LcGotoXY
  2024                           
  2025                           ;Joc.c: 75:     LcNewString(HGetTime());
  2026  001470  EC93  F00F         	call	_HGetTime	;wreg free
  2027  001474  6E74               	movwf	??_motorJoc^0,c
  2028  001476  C074  F069         	movff	??_motorJoc,LcNewString@new_s
  2029  00147A  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  2030  00147C  EC29  F00F         	call	_LcNewString	;wreg free
  2031  001480  D7E5               	goto	l4575
  2032  001482                     l4589:
  2033  001482  504C               	movf	_novaTeclaJOC^0,w,c
  2034  001484  0A80               	xorlw	128
  2035  001486  0F7F               	addlw	-129
  2036  001488  A0D8               	btfss	status,0,c
  2037  00148A  0012               	return	
  2038                           
  2039                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  2040  00148C  504C               	movf	_novaTeclaJOC^0,w,c
  2041  00148E  0F30               	addlw	48
  2042  001490  EC3E  F00F         	call	_SIONovaTecla
  2043                           
  2044                           ;Joc.c: 80:     novaTeclaJOC = -1;
  2045  001494  684C               	setf	_novaTeclaJOC^0,c
  2046  001496  D7DA               	goto	l4575
  2047  001498                     l4597:
  2048                           
  2049                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  2050  001498  EC0B  F00F         	call	_SIOcheckKrebut	;wreg free
  2051  00149C  A0D8               	btfss	status,0,c
  2052  00149E  0012               	return	
  2053                           
  2054                           ;Joc.c: 86:     HJugant();
  2055  0014A0  EC82  F00F         	call	_HJugant	;wreg free
  2056  0014A4  D7D3               	goto	l4575
  2057  0014A6                     l4605:
  2058  0014A6  500A               	movf	motorJoc@state^0,w,c
  2059  0014A8  6E74               	movwf	??_motorJoc^0,c
  2060  0014AA  6A75               	clrf	(??_motorJoc+1)^0,c
  2061                           
  2062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2063                           ; Switch size 1, requested type "simple"
  2064                           ; Number of cases is 1, Range of values is 0 to 0
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte            4     3 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069  0014AC  5075               	movf	(??_motorJoc+1)^0,w,c
  2070  0014AE  0A00               	xorlw	0	; case 0
  2071  0014B0  A4D8               	btfss	status,2,c
  2072  0014B2  0012               	return	
  2073                           
  2074                           ; Switch size 1, requested type "simple"
  2075                           ; Number of cases is 3, Range of values is 0 to 2
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte           10     6 (average)
  2079                           ;	Chosen strategy is simple_byte
  2080  0014B4  5074               	movf	??_motorJoc^0,w,c
  2081  0014B6  0A00               	xorlw	0	; case 0
  2082  0014B8  B4D8               	btfsc	status,2,c
  2083  0014BA  D7AB               	goto	l4553
  2084  0014BC  0A01               	xorlw	1	; case 1
  2085  0014BE  B4D8               	btfsc	status,2,c
  2086  0014C0  D7B2               	goto	l1054
  2087  0014C2  0A03               	xorlw	3	; case 2
  2088  0014C4  A4D8               	btfss	status,2,c
  2089  0014C6  0012               	return	
  2090  0014C8  D7E7               	goto	l4597
  2091  0014CA                     __end_of_motorJoc:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _conversorJoystick *****************
  2095 ;; Defined at:
  2096 ;;		line 31 in file "Joc.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  direc           1    wreg     unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  direc           1    5[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/1
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1
  2110 ;;      Params:         0       0       0
  2111 ;;      Locals:         1       0       0
  2112 ;;      Temps:          0       0       0
  2113 ;;      Totals:         1       0       0
  2114 ;;Total ram usage:        1 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 2
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_motorJoc
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text7
  2125  001B48                     __ptext7:
  2126                           	callstack 0
  2127  001B48                     _conversorJoystick:
  2128                           	callstack 27
  2129                           
  2130                           ;incstack = 0
  2131                           ;conversorJoystick@direc stored from wreg
  2132  001B48  6E66               	movwf	conversorJoystick@direc^0,c
  2133                           
  2134                           ;Joc.c: 33:     if (direc==2) {
  2135  001B4A  0E02               	movlw	2
  2136  001B4C  1866               	xorwf	conversorJoystick@direc^0,w,c
  2137  001B4E  A4D8               	btfss	status,2,c
  2138  001B50  D002               	goto	l2183
  2139                           
  2140                           ;Joc.c: 34:         return 'W';
  2141  001B52  0E57               	movlw	87
  2142  001B54  0012               	return	
  2143  001B56                     l2183:
  2144                           
  2145                           ;Joc.c: 36:     if (direc==6) {
  2146  001B56  0E06               	movlw	6
  2147  001B58  1866               	xorwf	conversorJoystick@direc^0,w,c
  2148  001B5A  A4D8               	btfss	status,2,c
  2149  001B5C  D002               	goto	l2189
  2150                           
  2151                           ;Joc.c: 37:         return 'D';
  2152  001B5E  0E44               	movlw	68
  2153  001B60  0012               	return	
  2154  001B62                     l2189:
  2155                           
  2156                           ;Joc.c: 39:     if (direc==8) {
  2157  001B62  0E08               	movlw	8
  2158  001B64  1866               	xorwf	conversorJoystick@direc^0,w,c
  2159  001B66  A4D8               	btfss	status,2,c
  2160  001B68  D002               	goto	l2195
  2161                           
  2162                           ;Joc.c: 40:         return 'S';
  2163  001B6A  0E53               	movlw	83
  2164  001B6C  0012               	return	
  2165  001B6E                     l2195:
  2166                           
  2167                           ;Joc.c: 42:     if (direc==4) {
  2168  001B6E  0E04               	movlw	4
  2169  001B70  1866               	xorwf	conversorJoystick@direc^0,w,c
  2170  001B72  A4D8               	btfss	status,2,c
  2171  001B74  D002               	goto	l2201
  2172                           
  2173                           ;Joc.c: 43:         return 'A';
  2174  001B76  0E41               	movlw	65
  2175  001B78  0012               	return	
  2176  001B7A                     l2201:
  2177                           
  2178                           ;Joc.c: 45:     return 0;
  2179  001B7A  0E00               	movlw	0
  2180  001B7C  0012               	return		;funcret
  2181  001B7E                     __end_of_conversorJoystick:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _SIOendGame *****************
  2185 ;; Defined at:
  2186 ;;		line 22 in file "SIO.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		None
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/1
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1
  2200 ;;      Params:         0       0       0
  2201 ;;      Locals:         0       0       0
  2202 ;;      Temps:          0       0       0
  2203 ;;      Totals:         0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 2
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_motorJoc
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text8
  2215  001F1E                     __ptext8:
  2216                           	callstack 0
  2217  001F1E                     _SIOendGame:
  2218                           	callstack 27
  2219                           
  2220                           ;SIO.c: 23:     jugantSIO = 0;
  2221                           
  2222                           ;incstack = 0
  2223  001F1E  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2224  001F20  0012               	return		;funcret
  2225  001F22                     __end_of_SIOendGame:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _SIOcheckKrebut *****************
  2229 ;; Defined at:
  2230 ;;		line 25 in file "SIO.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/1
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1
  2244 ;;      Params:         0       0       0
  2245 ;;      Locals:         0       0       0
  2246 ;;      Temps:          0       0       0
  2247 ;;      Totals:         0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 2
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_motorJoc
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text9
  2259  001E16                     __ptext9:
  2260                           	callstack 0
  2261  001E16                     _SIOcheckKrebut:
  2262                           	callstack 27
  2263                           
  2264                           ;SIO.c: 26:     return Krebut;
  2265                           
  2266                           ;incstack = 0
  2267  001E16  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2268  001E18  D002               	goto	l2217
  2269  001E1A  90D8               	bcf	status,0,c
  2270  001E1C  0012               	return	
  2271  001E1E                     l2217:
  2272  001E1E  80D8               	bsf	status,0,c
  2273  001E20  0012               	return		;funcret
  2274  001E22                     __end_of_SIOcheckKrebut:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _SIOStartGame *****************
  2278 ;; Defined at:
  2279 ;;		line 32 in file "SIO.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  usuari          1    wreg     unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  usuari          1    5[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/1
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1
  2293 ;;      Params:         0       0       0
  2294 ;;      Locals:         1       0       0
  2295 ;;      Temps:          0       0       0
  2296 ;;      Totals:         1       0       0
  2297 ;;Total ram usage:        1 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_motorJoc
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text10
  2308  001E74                     __ptext10:
  2309                           	callstack 0
  2310  001E74                     _SIOStartGame:
  2311                           	callstack 27
  2312                           
  2313                           ;incstack = 0
  2314                           ;SIOStartGame@usuari stored from wreg
  2315  001E74  6E66               	movwf	SIOStartGame@usuari^0,c
  2316                           
  2317                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2318  001E76  C066  F04B         	movff	SIOStartGame@usuari,_usuariActualSIO
  2319  001E7A  0012               	return		;funcret
  2320  001E7C                     __end_of_SIOStartGame:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _SIONovaTecla *****************
  2324 ;; Defined at:
  2325 ;;		line 39 in file "SIO.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  tecla           1    wreg     char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  tecla           1    5[COMRAM] char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/1
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1
  2339 ;;      Params:         0       0       0
  2340 ;;      Locals:         1       0       0
  2341 ;;      Temps:          0       0       0
  2342 ;;      Totals:         1       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 2
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_motorJoc
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text11
  2354  001E7C                     __ptext11:
  2355                           	callstack 0
  2356  001E7C                     _SIONovaTecla:
  2357                           	callstack 27
  2358                           
  2359                           ;incstack = 0
  2360                           ;SIONovaTecla@tecla stored from wreg
  2361  001E7C  6E66               	movwf	SIONovaTecla@tecla^0,c
  2362                           
  2363                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2364  001E7E  C066  F049         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2365  001E82  0012               	return		;funcret
  2366  001E84                     __end_of_SIONovaTecla:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _SIONovaDireccio *****************
  2370 ;; Defined at:
  2371 ;;		line 28 in file "SIO.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  num             1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  num             1    5[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/1
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1
  2385 ;;      Params:         0       0       0
  2386 ;;      Locals:         1       0       0
  2387 ;;      Temps:          0       0       0
  2388 ;;      Totals:         1       0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_motorJoc
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text12
  2400  001E84                     __ptext12:
  2401                           	callstack 0
  2402  001E84                     _SIONovaDireccio:
  2403                           	callstack 27
  2404                           
  2405                           ;incstack = 0
  2406                           ;SIONovaDireccio@num stored from wreg
  2407  001E84  6E66               	movwf	SIONovaDireccio@num^0,c
  2408                           
  2409                           ;SIO.c: 29:     direccioSIO = num;
  2410  001E86  C066  F04A         	movff	SIONovaDireccio@num,_direccioSIO
  2411  001E8A  0012               	return		;funcret
  2412  001E8C                     __end_of_SIONovaDireccio:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _HnoJugant *****************
  2416 ;; Defined at:
  2417 ;;		line 34 in file "Hora.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		None
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/1
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1
  2431 ;;      Params:         0       0       0
  2432 ;;      Locals:         0       0       0
  2433 ;;      Temps:          0       0       0
  2434 ;;      Totals:         0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 2
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_motorJoc
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text13
  2446  001F22                     __ptext13:
  2447                           	callstack 0
  2448  001F22                     _HnoJugant:
  2449                           	callstack 27
  2450                           
  2451                           ;Hora.c: 35:     jugant = 0;
  2452                           
  2453                           ;incstack = 0
  2454  001F22  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2455  001F24  0012               	return		;funcret
  2456  001F26                     __end_of_HnoJugant:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _HNouSegon *****************
  2460 ;; Defined at:
  2461 ;;		line 22 in file "Hora.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/1
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1
  2475 ;;      Params:         0       0       0
  2476 ;;      Locals:         0       0       0
  2477 ;;      Temps:          0       0       0
  2478 ;;      Totals:         0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 2
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_motorJoc
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text14
  2490  001E22                     __ptext14:
  2491                           	callstack 0
  2492  001E22                     _HNouSegon:
  2493                           	callstack 27
  2494                           
  2495                           ;Hora.c: 23:     return nouSegon;
  2496                           
  2497                           ;incstack = 0
  2498  001E22  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2499  001E24  D002               	goto	l2163
  2500  001E26  90D8               	bcf	status,0,c
  2501  001E28  0012               	return	
  2502  001E2A                     l2163:
  2503  001E2A  80D8               	bsf	status,0,c
  2504  001E2C  0012               	return		;funcret
  2505  001E2E                     __end_of_HNouSegon:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _HJugant *****************
  2509 ;; Defined at:
  2510 ;;		line 37 in file "Hora.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		None
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/1
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1
  2524 ;;      Params:         0       0       0
  2525 ;;      Locals:         0       0       0
  2526 ;;      Temps:          0       0       0
  2527 ;;      Totals:         0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_motorJoc
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text15
  2539  001F04                     __ptext15:
  2540                           	callstack 0
  2541  001F04                     _HJugant:
  2542                           	callstack 27
  2543                           
  2544                           ;Hora.c: 38:     jugant = 1;
  2545                           
  2546                           ;incstack = 0
  2547  001F04  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2548                           
  2549                           ;Hora.c: 39:     tempsAcabat = 0;
  2550  001F06  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2551  001F08  0012               	return		;funcret
  2552  001F0A                     __end_of_HJugant:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _HGetTime *****************
  2556 ;; Defined at:
  2557 ;;		line 30 in file "Hora.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      PTR unsigned char 
  2564 ;; Registers used:
  2565 ;;		wreg
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/1
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1
  2571 ;;      Params:         2       0       0
  2572 ;;      Locals:         0       0       0
  2573 ;;      Temps:          0       0       0
  2574 ;;      Totals:         2       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 2
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_motorJoc
  2582 ;;		_motorSIO
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text16
  2587  001F26                     __ptext16:
  2588                           	callstack 0
  2589  001F26                     _HGetTime:
  2590                           	callstack 27
  2591                           
  2592                           ;Hora.c: 31:     return hora;
  2593                           
  2594                           ;incstack = 0
  2595  001F26  0E58               	movlw	_hora& (0+255)
  2596  001F28  0012               	return		;funcret
  2597  001F2A                     __end_of_HGetTime:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _HClearNouSegon *****************
  2601 ;; Defined at:
  2602 ;;		line 26 in file "Hora.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		None
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/1
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1
  2616 ;;      Params:         0       0       0
  2617 ;;      Locals:         0       0       0
  2618 ;;      Temps:          0       0       0
  2619 ;;      Totals:         0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 2
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_motorJoc
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text17
  2631  001F2A                     __ptext17:
  2632                           	callstack 0
  2633  001F2A                     _HClearNouSegon:
  2634                           	callstack 27
  2635                           
  2636                           ;Hora.c: 27:     nouSegon = 0;
  2637                           
  2638                           ;incstack = 0
  2639  001F2A  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2640  001F2C  0012               	return		;funcret
  2641  001F2E                     __end_of_HClearNouSegon:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _motorHora *****************
  2645 ;; Defined at:
  2646 ;;		line 45 in file "Hora.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/1
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1
  2660 ;;      Params:         0       0       0
  2661 ;;      Locals:         0       0       0
  2662 ;;      Temps:          2       0       0
  2663 ;;      Totals:         2       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 3
  2667 ;; This function calls:
  2668 ;;		_TiGetTics
  2669 ;;		_TiResetTics
  2670 ;;		_playAltaveu
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text18
  2677  001634                     __ptext18:
  2678                           	callstack 0
  2679  001634                     _motorHora:
  2680                           	callstack 27
  2681                           
  2682                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2683                           
  2684                           ;incstack = 0
  2685  001634  D042               	goto	l4787
  2686  001636                     l4737:
  2687                           
  2688                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2689  001636  500E               	movf	_timerHora^0,w,c
  2690  001638  EC39  F00E         	call	_TiGetTics
  2691  00163C  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  2692  00163E  0012               	return	
  2693  001640  0EB5               	movlw	181
  2694  001642  5C66               	subwf	?_TiGetTics^0,w,c
  2695  001644  0E04               	movlw	4
  2696  001646  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  2697  001648  A0D8               	btfss	status,0,c
  2698  00164A  0012               	return	
  2699                           
  2700                           ;Hora.c: 51:     TiResetTics(timerHora);
  2701  00164C  500E               	movf	_timerHora^0,w,c
  2702  00164E  ECCB  F00E         	call	_TiResetTics
  2703                           
  2704                           ;Hora.c: 52:     if(jugant){
  2705  001652  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2706  001654  D02F               	goto	l4783
  2707                           
  2708                           ;Hora.c: 53:       nouSegon = 1;
  2709  001656  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2710                           
  2711                           ;Hora.c: 55:      hora[4]--;
  2712  001658  065C               	decf	(_hora+4)^0,f,c
  2713                           
  2714                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2715  00165A  0E2F               	movlw	47
  2716  00165C  185C               	xorwf	(_hora+4)^0,w,c
  2717  00165E  A4D8               	btfss	status,2,c
  2718  001660  D003               	goto	l4753
  2719                           
  2720                           ;Hora.c: 57:       hora[4] = '9';
  2721  001662  0E39               	movlw	57
  2722  001664  6E5C               	movwf	(_hora+4)^0,c
  2723                           
  2724                           ;Hora.c: 58:       hora[3]--;
  2725  001666  065B               	decf	(_hora+3)^0,f,c
  2726  001668                     l4753:
  2727                           
  2728                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2729  001668  0E2F               	movlw	47
  2730  00166A  185B               	xorwf	(_hora+3)^0,w,c
  2731  00166C  A4D8               	btfss	status,2,c
  2732  00166E  D003               	goto	l4759
  2733                           
  2734                           ;Hora.c: 62:       hora[3] = '5';
  2735  001670  0E35               	movlw	53
  2736  001672  6E5B               	movwf	(_hora+3)^0,c
  2737                           
  2738                           ;Hora.c: 63:       hora[1]--;
  2739  001674  0659               	decf	(_hora+1)^0,f,c
  2740  001676                     l4759:
  2741                           
  2742                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2743  001676  0E2F               	movlw	47
  2744  001678  1859               	xorwf	(_hora+1)^0,w,c
  2745  00167A  A4D8               	btfss	status,2,c
  2746  00167C  D003               	goto	l4765
  2747                           
  2748                           ;Hora.c: 67:       hora[1] = '9';
  2749  00167E  0E39               	movlw	57
  2750  001680  6E59               	movwf	(_hora+1)^0,c
  2751                           
  2752                           ;Hora.c: 68:       hora[0]--;
  2753  001682  0658               	decf	_hora^0,f,c
  2754  001684                     l4765:
  2755                           
  2756                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2757  001684  0E30               	movlw	48
  2758  001686  1858               	xorwf	_hora^0,w,c
  2759  001688  A4D8               	btfss	status,2,c
  2760  00168A  D00C               	goto	l4775
  2761  00168C  0E30               	movlw	48
  2762  00168E  1859               	xorwf	(_hora+1)^0,w,c
  2763  001690  A4D8               	btfss	status,2,c
  2764  001692  D008               	goto	l4775
  2765  001694  0E30               	movlw	48
  2766  001696  185B               	xorwf	(_hora+3)^0,w,c
  2767  001698  A4D8               	btfss	status,2,c
  2768  00169A  D004               	goto	l4775
  2769  00169C  0E30               	movlw	48
  2770  00169E  185C               	xorwf	(_hora+4)^0,w,c
  2771  0016A0  B4D8               	btfsc	status,2,c
  2772                           
  2773                           ;Hora.c: 72:       tempsAcabat = 1;
  2774  0016A2  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2775  0016A4                     l4775:
  2776                           
  2777                           ;Hora.c: 75:      segons++;
  2778  0016A4  2A0D               	incf	_segons^0,f,c
  2779                           
  2780                           ;Hora.c: 76:      if(segons > 59){
  2781  0016A6  0E3B               	movlw	59
  2782  0016A8  640D               	cpfsgt	_segons^0,c
  2783  0016AA  D004               	goto	l4783
  2784                           
  2785                           ;Hora.c: 77:       playAltaveu();
  2786  0016AC  EC97  F00F         	call	_playAltaveu	;wreg free
  2787                           
  2788                           ;Hora.c: 78:       segons = 0;
  2789  0016B0  0E00               	movlw	0
  2790  0016B2  6E0D               	movwf	_segons^0,c
  2791  0016B4                     l4783:
  2792                           
  2793                           ;Hora.c: 81:     state = 0;
  2794  0016B4  0E00               	movlw	0
  2795  0016B6  6E0C               	movwf	motorHora@state^0,c
  2796  0016B8  0012               	return	
  2797  0016BA                     l4787:
  2798  0016BA  500C               	movf	motorHora@state^0,w,c
  2799  0016BC  6E6D               	movwf	??_motorHora^0,c
  2800  0016BE  6A6E               	clrf	(??_motorHora+1)^0,c
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809  0016C0  506E               	movf	(??_motorHora+1)^0,w,c
  2810  0016C2  0A00               	xorlw	0	; case 0
  2811  0016C4  A4D8               	btfss	status,2,c
  2812  0016C6  0012               	return	
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 1, Range of values is 0 to 0
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte            4     3 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820  0016C8  506D               	movf	??_motorHora^0,w,c
  2821  0016CA  0A00               	xorlw	0	; case 0
  2822  0016CC  A4D8               	btfss	status,2,c
  2823  0016CE  0012               	return	
  2824  0016D0  D7B2               	goto	l4737
  2825  0016D2                     __end_of_motorHora:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function _playAltaveu *****************
  2829 ;; Defined at:
  2830 ;;		line 14 in file "Altaveu.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		None
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/1
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1
  2844 ;;      Params:         0       0       0
  2845 ;;      Locals:         0       0       0
  2846 ;;      Temps:          0       0       0
  2847 ;;      Totals:         0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 2
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_motorHora
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text19
  2859  001F2E                     __ptext19:
  2860                           	callstack 0
  2861  001F2E                     _playAltaveu:
  2862                           	callstack 27
  2863                           
  2864                           ;Altaveu.c: 15:     reproduir = 1;
  2865                           
  2866                           ;incstack = 0
  2867  001F2E  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2868  001F30  0012               	return		;funcret
  2869  001F32                     __end_of_playAltaveu:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _motorAltaveu *****************
  2873 ;; Defined at:
  2874 ;;		line 17 in file "Altaveu.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/1
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1
  2888 ;;      Params:         0       0       0
  2889 ;;      Locals:         0       0       0
  2890 ;;      Temps:          3       0       0
  2891 ;;      Totals:         3       0       0
  2892 ;;Total ram usage:        3 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 3
  2895 ;; This function calls:
  2896 ;;		_TiGetTics
  2897 ;;		_TiResetTics
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text20
  2904  0014CA                     __ptext20:
  2905                           	callstack 0
  2906  0014CA                     _motorAltaveu:
  2907                           	callstack 27
  2908                           
  2909                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2910                           
  2911                           ;incstack = 0
  2912  0014CA  D048               	goto	l5209
  2913  0014CC                     l752:
  2914                           
  2915                           ;Altaveu.c: 22:    if (reproduir) {
  2916  0014CC  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2917  0014CE  0012               	return	
  2918                           
  2919                           ;Altaveu.c: 23:     nota = 1;
  2920  0014D0  0E01               	movlw	1
  2921  0014D2  6E1E               	movwf	_nota^0,c
  2922                           
  2923                           ;Altaveu.c: 24:     copsNota = 0;
  2924  0014D4  0E00               	movlw	0
  2925  0014D6  6E1C               	movwf	_copsNota^0,c
  2926                           
  2927                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2928  0014D8  501D               	movf	_timerAltaveu^0,w,c
  2929  0014DA  ECCB  F00E         	call	_TiResetTics
  2930  0014DE                     l5173:
  2931                           
  2932                           ;Altaveu.c: 26:     state = 1;
  2933  0014DE  0E01               	movlw	1
  2934  0014E0  6E1B               	movwf	motorAltaveu@state^0,c
  2935  0014E2  0012               	return	
  2936  0014E4                     l5175:
  2937                           
  2938                           ;Altaveu.c: 30:    if (nota > 5) {
  2939  0014E4  0E05               	movlw	5
  2940  0014E6  641E               	cpfsgt	_nota^0,c
  2941  0014E8  D004               	goto	l5181
  2942                           
  2943                           ;Altaveu.c: 31:     reproduir = 0;
  2944  0014EA  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2945                           
  2946                           ;Altaveu.c: 32:     state = 0;
  2947  0014EC  0E00               	movlw	0
  2948  0014EE  6E1B               	movwf	motorAltaveu@state^0,c
  2949                           
  2950                           ;Altaveu.c: 33:    }
  2951  0014F0  0012               	return	
  2952  0014F2                     l5181:
  2953  0014F2  0EA8               	movlw	168
  2954  0014F4  181C               	xorwf	_copsNota^0,w,c
  2955  0014F6  A4D8               	btfss	status,2,c
  2956  0014F8  D004               	goto	l5189
  2957                           
  2958                           ;Altaveu.c: 35:     nota++;
  2959  0014FA  2A1E               	incf	_nota^0,f,c
  2960                           
  2961                           ;Altaveu.c: 36:     copsNota = 0;
  2962  0014FC  0E00               	movlw	0
  2963  0014FE  6E1C               	movwf	_copsNota^0,c
  2964  001500  D7EE               	goto	l5173
  2965  001502                     l5189:
  2966  001502  501D               	movf	_timerAltaveu^0,w,c
  2967  001504  EC39  F00E         	call	_TiGetTics
  2968  001508  501E               	movf	_nota^0,w,c
  2969  00150A  6E6D               	movwf	??_motorAltaveu^0,c
  2970  00150C  6A6E               	clrf	(??_motorAltaveu+1)^0,c
  2971  00150E  5066               	movf	?_TiGetTics^0,w,c
  2972  001510  5C6D               	subwf	??_motorAltaveu^0,w,c
  2973  001512  506E               	movf	(??_motorAltaveu+1)^0,w,c
  2974  001514  0A80               	xorlw	128
  2975  001516  6E6F               	movwf	(??_motorAltaveu+2)^0,c
  2976  001518  5067               	movf	(?_TiGetTics+1)^0,w,c
  2977  00151A  0A80               	xorlw	128
  2978  00151C  586F               	subwfb	(??_motorAltaveu+2)^0,w,c
  2979  00151E  B0D8               	btfsc	status,0,c
  2980  001520  0012               	return	
  2981                           
  2982                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2983  001522  808A               	bsf	138,0,c	;volatile
  2984                           
  2985                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2986  001524  501D               	movf	_timerAltaveu^0,w,c
  2987  001526  ECCB  F00E         	call	_TiResetTics
  2988                           
  2989                           ;Altaveu.c: 42:     state = 2;
  2990  00152A  0E02               	movlw	2
  2991  00152C  6E1B               	movwf	motorAltaveu@state^0,c
  2992  00152E  0012               	return	
  2993  001530                     l5197:
  2994                           
  2995                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2996  001530  501D               	movf	_timerAltaveu^0,w,c
  2997  001532  EC39  F00E         	call	_TiGetTics
  2998  001536  501E               	movf	_nota^0,w,c
  2999  001538  6E6D               	movwf	??_motorAltaveu^0,c
  3000  00153A  6A6E               	clrf	(??_motorAltaveu+1)^0,c
  3001  00153C  5066               	movf	?_TiGetTics^0,w,c
  3002  00153E  5C6D               	subwf	??_motorAltaveu^0,w,c
  3003  001540  506E               	movf	(??_motorAltaveu+1)^0,w,c
  3004  001542  0A80               	xorlw	128
  3005  001544  6E6F               	movwf	(??_motorAltaveu+2)^0,c
  3006  001546  5067               	movf	(?_TiGetTics+1)^0,w,c
  3007  001548  0A80               	xorlw	128
  3008  00154A  586F               	subwfb	(??_motorAltaveu+2)^0,w,c
  3009  00154C  B0D8               	btfsc	status,0,c
  3010  00154E  0012               	return	
  3011                           
  3012                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  3013  001550  908A               	bcf	138,0,c	;volatile
  3014                           
  3015                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  3016  001552  501D               	movf	_timerAltaveu^0,w,c
  3017  001554  ECCB  F00E         	call	_TiResetTics
  3018                           
  3019                           ;Altaveu.c: 49:     copsNota++;
  3020  001558  2A1C               	incf	_copsNota^0,f,c
  3021  00155A  D7C1               	goto	l5173
  3022  00155C                     l5209:
  3023  00155C  501B               	movf	motorAltaveu@state^0,w,c
  3024  00155E  6E6D               	movwf	??_motorAltaveu^0,c
  3025  001560  6A6E               	clrf	(??_motorAltaveu+1)^0,c
  3026                           
  3027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3028                           ; Switch size 1, requested type "simple"
  3029                           ; Number of cases is 1, Range of values is 0 to 0
  3030                           ; switch strategies available:
  3031                           ; Name         Instructions Cycles
  3032                           ; simple_byte            4     3 (average)
  3033                           ;	Chosen strategy is simple_byte
  3034  001562  506E               	movf	(??_motorAltaveu+1)^0,w,c
  3035  001564  0A00               	xorlw	0	; case 0
  3036  001566  A4D8               	btfss	status,2,c
  3037  001568  0012               	return	
  3038                           
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 3, Range of values is 0 to 2
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte           10     6 (average)
  3044                           ;	Chosen strategy is simple_byte
  3045  00156A  506D               	movf	??_motorAltaveu^0,w,c
  3046  00156C  0A00               	xorlw	0	; case 0
  3047  00156E  B4D8               	btfsc	status,2,c
  3048  001570  D7AD               	goto	l752
  3049  001572  0A01               	xorlw	1	; case 1
  3050  001574  B4D8               	btfsc	status,2,c
  3051  001576  D7B6               	goto	l5175
  3052  001578  0A03               	xorlw	3	; case 2
  3053  00157A  A4D8               	btfss	status,2,c
  3054  00157C  0012               	return	
  3055  00157E  D7D8               	goto	l5197
  3056  001580                     __end_of_motorAltaveu:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _menu *****************
  3060 ;; Defined at:
  3061 ;;		line 40 in file "Menu.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/1
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1
  3075 ;;      Params:         0       0       0
  3076 ;;      Locals:         0       0       0
  3077 ;;      Temps:          2       0       0
  3078 ;;      Totals:         2       0       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 6
  3082 ;; This function calls:
  3083 ;;		_GLCDMostraMenu
  3084 ;;		_HActualitzaHora
  3085 ;;		_JJuguem
  3086 ;;		_JendGame
  3087 ;;		_JnovaDireccio
  3088 ;;		_JnovaTecla
  3089 ;;		_LcClear
  3090 ;;		_LcGotoXY
  3091 ;;		_LcLliure
  3092 ;;		_LcNewString
  3093 ;;		_LcPutChar
  3094 ;;		_NoFerMenu
  3095 ;;		_SIOHaAcabatPuntuacions
  3096 ;;		_SMSoff
  3097 ;;		_SMSon
  3098 ;;		_SiFerMenu
  3099 ;;		_TiGetTics
  3100 ;;		_TiResetTics
  3101 ;;		_URegister
  3102 ;;		_UcheckExists
  3103 ;;		_UcheckExistsGetError
  3104 ;;		_UcheckExistsNotFinished
  3105 ;;		_UenviaChar
  3106 ;;		_UenviaPas
  3107 ;;		_UgetNumUsuaris
  3108 ;;		_UgetUserName
  3109 ;;		_checkHoraAcabat
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text21
  3116  0002E4                     __ptext21:
  3117                           	callstack 0
  3118  0002E4                     _menu:
  3119                           	callstack 24
  3120                           
  3121                           ;Menu.c: 41:  static char state = 0;;Menu.c: 43:  switch(state) {
  3122                           
  3123                           ;incstack = 0
  3124  0002E4  D202               	goto	l5161
  3125  0002E6                     l4795:
  3126                           
  3127                           ;Menu.c: 45:    LcClear();
  3128  0002E6  EC89  F00E         	call	_LcClear	;wreg free
  3129                           
  3130                           ;Menu.c: 46:    LcNewString(loginText);
  3131  0002EA  0EA0               	movlw	low _loginText
  3132  0002EC  6E69               	movwf	LcNewString@new_s^0,c
  3133  0002EE  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  3134  0002F0  EC29  F00F         	call	_LcNewString	;wreg free
  3135                           
  3136                           ;Menu.c: 47:    state = 1;
  3137  0002F4  0E01               	movlw	1
  3138  0002F6  6E26               	movwf	menu@state^0,c
  3139                           
  3140                           ;Menu.c: 48:   break;
  3141  0002F8  0012               	return	
  3142  0002FA                     l4801:
  3143                           
  3144                           ;Menu.c: 50:    if (LcLliure()) {
  3145  0002FA  EC2F  F00F         	call	_LcLliure	;wreg free
  3146  0002FE  A0D8               	btfss	status,0,c
  3147  000300  0012               	return	
  3148                           
  3149                           ;Menu.c: 51:     LcGotoXY(0,1);
  3150  000302  0E01               	movlw	1
  3151  000304  6E6E               	movwf	LcGotoXY@Row^0,c
  3152  000306  0E00               	movlw	0
  3153  000308  EC4E  F00D         	call	_LcGotoXY
  3154                           
  3155                           ;Menu.c: 52:     LcNewString(registerText);
  3156  00030C  0E95               	movlw	low _registerText
  3157  00030E  6E69               	movwf	LcNewString@new_s^0,c
  3158  000310  6A6A               	clrf	(LcNewString@new_s+1)^0,c
  3159  000312  EC29  F00F         	call	_LcNewString	;wreg free
  3160                           
  3161                           ;Menu.c: 53:     NovaTecla = -1;
  3162  000316  6853               	setf	_NovaTecla^0,c
  3163                           
  3164                           ;Menu.c: 54:     state = 2;
  3165  000318  0E02               	movlw	2
  3166  00031A  6E26               	movwf	menu@state^0,c
  3167                           
  3168                           ;Menu.c: 56:   break;
  3169                           
  3170                           ;Menu.c: 55:    }
  3171  00031C  0012               	return	
  3172  00031E                     l4811:
  3173                           
  3174                           ;Menu.c: 58:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3175  00031E  0453               	decf	_NovaTecla^0,w,c
  3176  000320  A4D8               	btfss	status,2,c
  3177  000322  D009               	goto	l4819
  3178  000324  EC99  F00F         	call	_UgetNumUsuaris	;wreg free
  3179  000328  0900               	iorlw	0
  3180  00032A  B4D8               	btfsc	status,2,c
  3181  00032C  D004               	goto	l4819
  3182                           
  3183                           ;Menu.c: 59:     loginNOTRegister = 1;
  3184  00032E  8C78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3185  000330                     l4817:
  3186                           
  3187                           ;Menu.c: 60:     state = 3;
  3188  000330  0E03               	movlw	3
  3189  000332  6E26               	movwf	menu@state^0,c
  3190                           
  3191                           ;Menu.c: 61:    }
  3192  000334  0012               	return	
  3193  000336                     l4819:
  3194  000336  0E02               	movlw	2
  3195  000338  1853               	xorwf	_NovaTecla^0,w,c
  3196  00033A  A4D8               	btfss	status,2,c
  3197  00033C  0012               	return	
  3198                           
  3199                           ;Menu.c: 63:     loginNOTRegister = 0;
  3200  00033E  9C78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3201  000340  D7F7               	goto	l4817
  3202  000342                     l495:
  3203                           
  3204                           ;Menu.c: 68:    NovaTecla = -1;
  3205  000342  6853               	setf	_NovaTecla^0,c
  3206                           
  3207                           ;Menu.c: 69:    novaLletra = -1;
  3208  000344  6852               	setf	_novaLletra^0,c
  3209                           
  3210                           ;Menu.c: 70:    LcClear();
  3211  000346  EC89  F00E         	call	_LcClear	;wreg free
  3212                           
  3213                           ;Menu.c: 71:    LcNewString("USER: ");
  3214  00034A  0EDB               	movlw	low STR_1
  3215  00034C  6E69               	movwf	LcNewString@new_s^0,c
  3216  00034E  5069               	movf	LcNewString@new_s^0,w,c
  3217  000350  A4D8               	btfss	status,2,c
  3218  000352  0E02               	movlw	high __smallconst
  3219  000354  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  3220  000356  EC29  F00F         	call	_LcNewString	;wreg free
  3221                           
  3222                           ;Menu.c: 72:    state = 4;
  3223  00035A  0E04               	movlw	4
  3224  00035C  6E26               	movwf	menu@state^0,c
  3225                           
  3226                           ;Menu.c: 73:   break;
  3227  00035E  0012               	return	
  3228  000360                     l4831:
  3229                           
  3230                           ;Menu.c: 75:    if (LcLliure()) {
  3231  000360  EC2F  F00F         	call	_LcLliure	;wreg free
  3232  000364  A0D8               	btfss	status,0,c
  3233  000366  0012               	return	
  3234                           
  3235                           ;Menu.c: 76:     LcGotoXY(0,1);
  3236  000368  0E01               	movlw	1
  3237  00036A  6E6E               	movwf	LcGotoXY@Row^0,c
  3238  00036C  0E00               	movlw	0
  3239  00036E  EC4E  F00D         	call	_LcGotoXY
  3240                           
  3241                           ;Menu.c: 77:     LcNewString("PSWD: ");
  3242  000372  0ED4               	movlw	low STR_2
  3243  000374  6E69               	movwf	LcNewString@new_s^0,c
  3244  000376  5069               	movf	LcNewString@new_s^0,w,c
  3245  000378  A4D8               	btfss	status,2,c
  3246  00037A  0E02               	movlw	high __smallconst
  3247  00037C  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  3248  00037E  EC29  F00F         	call	_LcNewString	;wreg free
  3249                           
  3250                           ;Menu.c: 78:     state = 5;
  3251  000382  0E05               	movlw	5
  3252  000384  6E26               	movwf	menu@state^0,c
  3253  000386  0012               	return	
  3254  000388                     l4839:
  3255                           
  3256                           ;Menu.c: 82:    if (LcLliure()) {
  3257  000388  EC2F  F00F         	call	_LcLliure	;wreg free
  3258  00038C  A0D8               	btfss	status,0,c
  3259  00038E  0012               	return	
  3260                           
  3261                           ;Menu.c: 83:     LcGotoXY(6,0);
  3262  000390  0E00               	movlw	0
  3263  000392  6E6E               	movwf	LcGotoXY@Row^0,c
  3264  000394  0E06               	movlw	6
  3265  000396  EC4E  F00D         	call	_LcGotoXY
  3266                           
  3267                           ;Menu.c: 84:     SMSon();
  3268  00039A  EC85  F00F         	call	_SMSon	;wreg free
  3269                           
  3270                           ;Menu.c: 85:     tmp =0;
  3271  00039E  0E00               	movlw	0
  3272  0003A0  6E2A               	movwf	_tmp^0,c
  3273  0003A2                     l4847:
  3274                           
  3275                           ;Menu.c: 86:     state = 6;
  3276  0003A2  0E06               	movlw	6
  3277  0003A4  6E26               	movwf	menu@state^0,c
  3278  0003A6  0012               	return	
  3279  0003A8                     l4849:
  3280                           
  3281                           ;Menu.c: 90:    if (novaLletra > 47 && NovaTecla != 10) {
  3282  0003A8  5052               	movf	_novaLletra^0,w,c
  3283  0003AA  0A80               	xorlw	128
  3284  0003AC  0F50               	addlw	-176
  3285  0003AE  A0D8               	btfss	status,0,c
  3286  0003B0  D00F               	goto	l4859
  3287  0003B2  0E0A               	movlw	10
  3288  0003B4  1853               	xorwf	_NovaTecla^0,w,c
  3289  0003B6  B4D8               	btfsc	status,2,c
  3290  0003B8  D00B               	goto	l4859
  3291                           
  3292                           ;Menu.c: 91:     LcPutChar(novaLletra);
  3293  0003BA  5052               	movf	_novaLletra^0,w,c
  3294  0003BC  ECE2  F00C         	call	_LcPutChar
  3295                           
  3296                           ;Menu.c: 92:     UenviaChar(novaLletra,tmp);
  3297  0003C0  C02A  F066         	movff	_tmp,UenviaChar@pos
  3298  0003C4  5052               	movf	_novaLletra^0,w,c
  3299  0003C6  ECFD  F00E         	call	_UenviaChar
  3300  0003CA                     l4857:
  3301                           
  3302                           ;Menu.c: 93:     state = 7;
  3303  0003CA  0E07               	movlw	7
  3304  0003CC  6E26               	movwf	menu@state^0,c
  3305                           
  3306                           ;Menu.c: 94:    }
  3307  0003CE  0012               	return	
  3308  0003D0                     l4859:
  3309  0003D0  0E0B               	movlw	11
  3310  0003D2  1853               	xorwf	_NovaTecla^0,w,c
  3311  0003D4  A4D8               	btfss	status,2,c
  3312  0003D6  0012               	return	
  3313  0003D8  D7F8               	goto	l4857
  3314  0003DA                     l4863:
  3315                           
  3316                           ;Menu.c: 100:    if (tmp != 7 && NovaTecla != 11) {
  3317  0003DA  0E07               	movlw	7
  3318  0003DC  182A               	xorwf	_tmp^0,w,c
  3319  0003DE  B4D8               	btfsc	status,2,c
  3320  0003E0  D008               	goto	l4875
  3321  0003E2  0E0B               	movlw	11
  3322  0003E4  1853               	xorwf	_NovaTecla^0,w,c
  3323  0003E6  B4D8               	btfsc	status,2,c
  3324  0003E8  D004               	goto	l4875
  3325                           
  3326                           ;Menu.c: 101:     tmp++;
  3327  0003EA  2A2A               	incf	_tmp^0,f,c
  3328                           
  3329                           ;Menu.c: 102:     NovaTecla = -1;
  3330  0003EC  6853               	setf	_NovaTecla^0,c
  3331                           
  3332                           ;Menu.c: 103:     novaLletra = -1;
  3333  0003EE  6852               	setf	_novaLletra^0,c
  3334  0003F0  D7D8               	goto	l4847
  3335  0003F2                     l4875:
  3336  0003F2  0E07               	movlw	7
  3337  0003F4  182A               	xorwf	_tmp^0,w,c
  3338  0003F6  B4D8               	btfsc	status,2,c
  3339  0003F8  D004               	goto	u4250
  3340  0003FA  0E0B               	movlw	11
  3341  0003FC  1853               	xorwf	_NovaTecla^0,w,c
  3342  0003FE  A4D8               	btfss	status,2,c
  3343  000400  0012               	return	
  3344  000402                     u4250:
  3345                           
  3346                           ;Menu.c: 107:     LcGotoXY(6,1);
  3347  000402  0E01               	movlw	1
  3348  000404  6E6E               	movwf	LcGotoXY@Row^0,c
  3349  000406  0E06               	movlw	6
  3350  000408  EC4E  F00D         	call	_LcGotoXY
  3351                           
  3352                           ;Menu.c: 108:     UenviaChar('\0',tmp);
  3353  00040C  C02A  F066         	movff	_tmp,UenviaChar@pos
  3354  000410  0E00               	movlw	0
  3355  000412  ECFD  F00E         	call	_UenviaChar
  3356                           
  3357                           ;Menu.c: 109:     NovaTecla = -1;
  3358  000416  6853               	setf	_NovaTecla^0,c
  3359                           
  3360                           ;Menu.c: 110:     novaLletra = -1;
  3361  000418  6852               	setf	_novaLletra^0,c
  3362                           
  3363                           ;Menu.c: 111:     tmp = 0;
  3364  00041A  0E00               	movlw	0
  3365  00041C  6E2A               	movwf	_tmp^0,c
  3366  00041E                     l4889:
  3367                           
  3368                           ;Menu.c: 112:     state = 8;
  3369  00041E  0E08               	movlw	8
  3370  000420  6E26               	movwf	menu@state^0,c
  3371  000422  0012               	return	
  3372  000424                     l4891:
  3373                           
  3374                           ;Menu.c: 116:    if (novaLletra > 47 && NovaTecla != 10) {
  3375  000424  5052               	movf	_novaLletra^0,w,c
  3376  000426  0A80               	xorlw	128
  3377  000428  0F50               	addlw	-176
  3378  00042A  A0D8               	btfss	status,0,c
  3379  00042C  D00F               	goto	l4901
  3380  00042E  0E0A               	movlw	10
  3381  000430  1853               	xorwf	_NovaTecla^0,w,c
  3382  000432  B4D8               	btfsc	status,2,c
  3383  000434  D00B               	goto	l4901
  3384                           
  3385                           ;Menu.c: 117:     LcPutChar(novaLletra);
  3386  000436  5052               	movf	_novaLletra^0,w,c
  3387  000438  ECE2  F00C         	call	_LcPutChar
  3388                           
  3389                           ;Menu.c: 118:     UenviaPas(novaLletra,tmp);
  3390  00043C  C02A  F066         	movff	_tmp,UenviaPas@pos
  3391  000440  5052               	movf	_novaLletra^0,w,c
  3392  000442  ECF5  F00E         	call	_UenviaPas
  3393  000446                     l4899:
  3394                           
  3395                           ;Menu.c: 119:     state = 9;
  3396  000446  0E09               	movlw	9
  3397  000448  6E26               	movwf	menu@state^0,c
  3398                           
  3399                           ;Menu.c: 120:    }
  3400  00044A  0012               	return	
  3401  00044C                     l4901:
  3402  00044C  0E0B               	movlw	11
  3403  00044E  1853               	xorwf	_NovaTecla^0,w,c
  3404  000450  A4D8               	btfss	status,2,c
  3405  000452  0012               	return	
  3406  000454  D7F8               	goto	l4899
  3407  000456                     l4905:
  3408                           
  3409                           ;Menu.c: 126:    if (tmp != 7 && NovaTecla != 11) {
  3410  000456  0E07               	movlw	7
  3411  000458  182A               	xorwf	_tmp^0,w,c
  3412  00045A  B4D8               	btfsc	status,2,c
  3413  00045C  D008               	goto	l4917
  3414  00045E  0E0B               	movlw	11
  3415  000460  1853               	xorwf	_NovaTecla^0,w,c
  3416  000462  B4D8               	btfsc	status,2,c
  3417  000464  D004               	goto	l4917
  3418                           
  3419                           ;Menu.c: 127:     tmp++;
  3420  000466  2A2A               	incf	_tmp^0,f,c
  3421                           
  3422                           ;Menu.c: 128:     NovaTecla = -1;
  3423  000468  6853               	setf	_NovaTecla^0,c
  3424                           
  3425                           ;Menu.c: 129:     novaLletra = -1;
  3426  00046A  6852               	setf	_novaLletra^0,c
  3427  00046C  D7D8               	goto	l4889
  3428  00046E                     l4917:
  3429  00046E  0E07               	movlw	7
  3430  000470  182A               	xorwf	_tmp^0,w,c
  3431  000472  B4D8               	btfsc	status,2,c
  3432  000474  D004               	goto	u4320
  3433  000476  0E0B               	movlw	11
  3434  000478  1853               	xorwf	_NovaTecla^0,w,c
  3435  00047A  A4D8               	btfss	status,2,c
  3436  00047C  0012               	return	
  3437  00047E                     u4320:
  3438                           
  3439                           ;Menu.c: 133:     UenviaPas('\0',tmp);
  3440  00047E  C02A  F066         	movff	_tmp,UenviaPas@pos
  3441  000482  0E00               	movlw	0
  3442  000484  ECF5  F00E         	call	_UenviaPas
  3443                           
  3444                           ;Menu.c: 134:     NovaTecla = -1;
  3445  000488  6853               	setf	_NovaTecla^0,c
  3446                           
  3447                           ;Menu.c: 135:     novaLletra = -1;
  3448  00048A  6852               	setf	_novaLletra^0,c
  3449                           
  3450                           ;Menu.c: 136:     tmp = 0;
  3451  00048C  0E00               	movlw	0
  3452  00048E  6E2A               	movwf	_tmp^0,c
  3453                           
  3454                           ;Menu.c: 137:     UcheckExists();
  3455  000490  EC9B  F00F         	call	_UcheckExists	;wreg free
  3456                           
  3457                           ;Menu.c: 138:     SMSoff();
  3458  000494  EC88  F00F         	call	_SMSoff	;wreg free
  3459                           
  3460                           ;Menu.c: 139:     state = 10;
  3461  000498  0E0A               	movlw	10
  3462  00049A  6E26               	movwf	menu@state^0,c
  3463  00049C  0012               	return	
  3464  00049E                     l4935:
  3465                           
  3466                           ;Menu.c: 143:    if (!UcheckExistsNotFinished()) {
  3467  00049E  EC1D  F00F         	call	_UcheckExistsNotFinished	;wreg free
  3468  0004A2  B0D8               	btfsc	status,0,c
  3469  0004A4  0012               	return	
  3470                           
  3471                           ;Menu.c: 144:     indexUsuari = UcheckExistsGetError();
  3472  0004A6  EC46  F00F         	call	_UcheckExistsGetError	;wreg free
  3473  0004AA  A0D8               	btfss	status,0,c
  3474  0004AC  D002               	goto	u4340
  3475  0004AE  0E01               	movlw	1
  3476  0004B0  D001               	goto	u4350
  3477  0004B2                     u4340:
  3478  0004B2  0E00               	movlw	0
  3479  0004B4                     u4350:
  3480  0004B4  6E27               	movwf	_indexUsuari^0,c
  3481                           
  3482                           ;Menu.c: 145:     state = 11;
  3483  0004B6  0E0B               	movlw	11
  3484  0004B8  6E26               	movwf	menu@state^0,c
  3485  0004BA  0012               	return	
  3486  0004BC                     l4941:
  3487                           
  3488                           ;Menu.c: 150:     state = 12;
  3489  0004BC  0E0C               	movlw	12
  3490  0004BE  6E26               	movwf	menu@state^0,c
  3491                           
  3492                           ;Menu.c: 151:    }
  3493  0004C0  0012               	return	
  3494  0004C2                     l4947:
  3495                           
  3496                           ;Menu.c: 154:     state = 0;
  3497  0004C2  0E00               	movlw	0
  3498  0004C4  6E26               	movwf	menu@state^0,c
  3499                           
  3500                           ;Menu.c: 155:    }
  3501  0004C6  0012               	return	
  3502  0004C8                     l4959:
  3503                           
  3504                           ;Menu.c: 165:    LcClear();
  3505  0004C8  EC89  F00E         	call	_LcClear	;wreg free
  3506                           
  3507                           ;Menu.c: 166:    SiFerMenu();
  3508  0004CC  EC9F  F00F         	call	_SiFerMenu	;wreg free
  3509                           
  3510                           ;Menu.c: 167:    GLCDMostraMenu(menuDalt);
  3511  0004D0  5028               	movf	_menuDalt^0,w,c
  3512  0004D2  EC23  F00F         	call	_GLCDMostraMenu
  3513                           
  3514                           ;Menu.c: 168:    novaDireccio = -1;
  3515  0004D6  6851               	setf	_novaDireccio^0,c
  3516                           
  3517                           ;Menu.c: 169:    NovaTecla = -1;
  3518  0004D8  6853               	setf	_NovaTecla^0,c
  3519                           
  3520                           ;Menu.c: 170:    state = 13;
  3521  0004DA  0E0D               	movlw	13
  3522  0004DC  6E26               	movwf	menu@state^0,c
  3523                           
  3524                           ;Menu.c: 171:   break;
  3525  0004DE  0012               	return	
  3526  0004E0                     l4971:
  3527                           
  3528                           ;Menu.c: 173:    if (novaDireccio == 8) {
  3529  0004E0  0E08               	movlw	8
  3530  0004E2  1851               	xorwf	_novaDireccio^0,w,c
  3531  0004E4  A4D8               	btfss	status,2,c
  3532  0004E6  D005               	goto	l4979
  3533                           
  3534                           ;Menu.c: 174:     if(menuDalt < 4) menuDalt++;
  3535  0004E8  0E04               	movlw	4
  3536  0004EA  6028               	cpfslt	_menuDalt^0,c
  3537  0004EC  D7E7               	goto	l4941
  3538  0004EE  2A28               	incf	_menuDalt^0,f,c
  3539  0004F0  D7E5               	goto	l4941
  3540  0004F2                     l4979:
  3541  0004F2  0E02               	movlw	2
  3542  0004F4  1851               	xorwf	_novaDireccio^0,w,c
  3543  0004F6  A4D8               	btfss	status,2,c
  3544  0004F8  D005               	goto	l4987
  3545                           
  3546                           ;Menu.c: 178:     if(menuDalt > 0) menuDalt--;
  3547  0004FA  5028               	movf	_menuDalt^0,w,c
  3548  0004FC  B4D8               	btfsc	status,2,c
  3549  0004FE  D7DE               	goto	l4941
  3550  000500  0628               	decf	_menuDalt^0,f,c
  3551  000502  D7DC               	goto	l4941
  3552  000504                     l4987:
  3553  000504  0E0B               	movlw	11
  3554  000506  1853               	xorwf	_NovaTecla^0,w,c
  3555  000508  A4D8               	btfss	status,2,c
  3556  00050A  D013               	goto	l4999
  3557  00050C  0E03               	movlw	3
  3558  00050E  1828               	xorwf	_menuDalt^0,w,c
  3559  000510  A4D8               	btfss	status,2,c
  3560  000512  D00F               	goto	l4999
  3561                           
  3562                           ;Menu.c: 182:     NoFerMenu();
  3563  000514  ECA3  F00F         	call	_NoFerMenu	;wreg free
  3564                           
  3565                           ;Menu.c: 183:     LcClear();
  3566  000518  EC89  F00E         	call	_LcClear	;wreg free
  3567                           
  3568                           ;Menu.c: 184:     LcNewString("BYE BYE ");
  3569  00051C  0EBB               	movlw	low STR_3
  3570  00051E  6E69               	movwf	LcNewString@new_s^0,c
  3571  000520  5069               	movf	LcNewString@new_s^0,w,c
  3572  000522  A4D8               	btfss	status,2,c
  3573  000524  0E02               	movlw	high __smallconst
  3574  000526  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  3575  000528  EC29  F00F         	call	_LcNewString	;wreg free
  3576                           
  3577                           ;Menu.c: 185:     state = 14;
  3578  00052C  0E0E               	movlw	14
  3579  00052E  6E26               	movwf	menu@state^0,c
  3580                           
  3581                           ;Menu.c: 186:    }
  3582  000530  0012               	return	
  3583  000532                     l4999:
  3584  000532  0E0B               	movlw	11
  3585  000534  1853               	xorwf	_NovaTecla^0,w,c
  3586  000536  A4D8               	btfss	status,2,c
  3587  000538  D013               	goto	l5013
  3588  00053A  0428               	decf	_menuDalt^0,w,c
  3589  00053C  A4D8               	btfss	status,2,c
  3590  00053E  D010               	goto	l5013
  3591                           
  3592                           ;Menu.c: 188:     LcClear();
  3593  000540  EC89  F00E         	call	_LcClear	;wreg free
  3594                           
  3595                           ;Menu.c: 189:     NoFerMenu();
  3596  000544  ECA3  F00F         	call	_NoFerMenu	;wreg free
  3597                           
  3598                           ;Menu.c: 190:     LcNewString("Modify Time:");
  3599  000548  0EA2               	movlw	low STR_4
  3600  00054A  6E69               	movwf	LcNewString@new_s^0,c
  3601  00054C  5069               	movf	LcNewString@new_s^0,w,c
  3602  00054E  A4D8               	btfss	status,2,c
  3603  000550  0E02               	movlw	high __smallconst
  3604  000552  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  3605  000554  EC29  F00F         	call	_LcNewString	;wreg free
  3606                           
  3607                           ;Menu.c: 191:     NovaTecla = -1;
  3608  000558  6853               	setf	_NovaTecla^0,c
  3609                           
  3610                           ;Menu.c: 192:     state = 16;
  3611  00055A  0E10               	movlw	16
  3612  00055C  6E26               	movwf	menu@state^0,c
  3613                           
  3614                           ;Menu.c: 193:    }
  3615  00055E  0012               	return	
  3616  000560                     l5013:
  3617  000560  5028               	movf	_menuDalt^0,w,c
  3618  000562  A4D8               	btfss	status,2,c
  3619  000564  0012               	return	
  3620  000566  0E0B               	movlw	11
  3621  000568  1853               	xorwf	_NovaTecla^0,w,c
  3622  00056A  A4D8               	btfss	status,2,c
  3623  00056C  0012               	return	
  3624                           
  3625                           ;Menu.c: 195:     NoFerMenu();
  3626  00056E  ECA3  F00F         	call	_NoFerMenu	;wreg free
  3627                           
  3628                           ;Menu.c: 196:     NovaTecla = -1;
  3629  000572  6853               	setf	_NovaTecla^0,c
  3630                           
  3631                           ;Menu.c: 197:     LcClear();
  3632  000574  EC89  F00E         	call	_LcClear	;wreg free
  3633                           
  3634                           ;Menu.c: 198:     LcNewString("TIME REMAINING:");
  3635  000578  0E92               	movlw	low STR_5
  3636  00057A  6E69               	movwf	LcNewString@new_s^0,c
  3637  00057C  5069               	movf	LcNewString@new_s^0,w,c
  3638  00057E  A4D8               	btfss	status,2,c
  3639  000580  0E02               	movlw	high __smallconst
  3640  000582  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  3641  000584  EC29  F00F         	call	_LcNewString	;wreg free
  3642                           
  3643                           ;Menu.c: 199:     JJuguem(indexUsuari);
  3644  000588  5027               	movf	_indexUsuari^0,w,c
  3645  00058A  EC52  F00F         	call	_JJuguem
  3646  00058E                     l5027:
  3647                           
  3648                           ;Menu.c: 200:     state = 21;
  3649  00058E  0E15               	movlw	21
  3650  000590  6E26               	movwf	menu@state^0,c
  3651  000592  0012               	return	
  3652  000594                     l5029:
  3653                           
  3654                           ;Menu.c: 204:    if (LcLliure()) {
  3655  000594  EC2F  F00F         	call	_LcLliure	;wreg free
  3656  000598  A0D8               	btfss	status,0,c
  3657  00059A  0012               	return	
  3658                           
  3659                           ;Menu.c: 205:     LcNewString(UgetUserName(indexUsuari));
  3660  00059C  5027               	movf	_indexUsuari^0,w,c
  3661  00059E  ECE2  F00E         	call	_UgetUserName
  3662  0005A2  C066  F069         	movff	?_UgetUserName,LcNewString@new_s
  3663  0005A6  C067  F06A         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3664  0005AA  EC29  F00F         	call	_LcNewString	;wreg free
  3665                           
  3666                           ;Menu.c: 206:     TiResetTics(timerMenu);
  3667  0005AE  5029               	movf	_timerMenu^0,w,c
  3668  0005B0  ECCB  F00E         	call	_TiResetTics
  3669                           
  3670                           ;Menu.c: 207:     state = 15;
  3671  0005B4  0E0F               	movlw	15
  3672  0005B6  6E26               	movwf	menu@state^0,c
  3673  0005B8  0012               	return	
  3674  0005BA                     l5037:
  3675                           
  3676                           ;Menu.c: 211:    if (TiGetTics(timerMenu) > 2410) {
  3677  0005BA  5029               	movf	_timerMenu^0,w,c
  3678  0005BC  EC39  F00E         	call	_TiGetTics
  3679  0005C0  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  3680  0005C2  0012               	return	
  3681  0005C4  0E6B               	movlw	107
  3682  0005C6  5C66               	subwf	?_TiGetTics^0,w,c
  3683  0005C8  0E09               	movlw	9
  3684  0005CA  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  3685  0005CC  A0D8               	btfss	status,0,c
  3686  0005CE  0012               	return	
  3687  0005D0  D778               	goto	l4947
  3688  0005D2                     l5041:
  3689                           
  3690                           ;Menu.c: 216:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3691  0005D2  EC2F  F00F         	call	_LcLliure	;wreg free
  3692  0005D6  B0D8               	btfsc	status,0,c
  3693  0005D8  BE53               	btfsc	_NovaTecla^0,7,c
  3694  0005DA  D04B               	goto	l5107
  3695  0005DC  5053               	movf	_NovaTecla^0,w,c
  3696  0005DE  0A80               	xorlw	128
  3697  0005E0  0F76               	addlw	-138
  3698  0005E2  B0D8               	btfsc	status,0,c
  3699  0005E4  D046               	goto	l5107
  3700                           
  3701                           ;Menu.c: 217:     LcGotoXY(0,1);
  3702  0005E6  0E01               	movlw	1
  3703  0005E8  6E6E               	movwf	LcGotoXY@Row^0,c
  3704  0005EA  0E00               	movlw	0
  3705  0005EC  EC4E  F00D         	call	_LcGotoXY
  3706                           
  3707                           ;Menu.c: 218:     horaTmp[0] = NovaTecla+48;
  3708  0005F0  5053               	movf	_NovaTecla^0,w,c
  3709  0005F2  0F30               	addlw	48
  3710  0005F4  6E41               	movwf	_horaTmp^0,c
  3711                           
  3712                           ;Menu.c: 219:     LcPutChar(horaTmp[0]);
  3713  0005F6  5041               	movf	_horaTmp^0,w,c
  3714  0005F8  ECE2  F00C         	call	_LcPutChar
  3715                           
  3716                           ;Menu.c: 220:     NovaTecla = -1;
  3717  0005FC  6853               	setf	_NovaTecla^0,c
  3718                           
  3719                           ;Menu.c: 221:     state = 17;
  3720  0005FE  0E11               	movlw	17
  3721  000600                     L1:
  3722  000600  6E26               	movwf	menu@state^0,c
  3723                           
  3724                           ;Menu.c: 222:    }
  3725  000602  0012               	return	
  3726  000604                     L2:
  3727  000604  1853               	xorwf	_NovaTecla^0,w,c
  3728  000606  A4D8               	btfss	status,2,c
  3729  000608  0012               	return	
  3730  00060A  D758               	goto	l4941
  3731  00060C                     l5061:
  3732                           
  3733                           ;Menu.c: 228:    if (NovaTecla > -1 && NovaTecla < 10) {
  3734  00060C  BE53               	btfsc	_NovaTecla^0,7,c
  3735  00060E  D031               	goto	l5107
  3736  000610  5053               	movf	_NovaTecla^0,w,c
  3737  000612  0A80               	xorlw	128
  3738  000614  0F76               	addlw	-138
  3739  000616  B0D8               	btfsc	status,0,c
  3740  000618  D02C               	goto	l5107
  3741                           
  3742                           ;Menu.c: 229:     horaTmp[1] = NovaTecla+48;
  3743  00061A  5053               	movf	_NovaTecla^0,w,c
  3744  00061C  0F30               	addlw	48
  3745  00061E  6E42               	movwf	(_horaTmp+1)^0,c
  3746                           
  3747                           ;Menu.c: 230:     LcPutChar(horaTmp[1]);
  3748  000620  5042               	movf	(_horaTmp+1)^0,w,c
  3749  000622  ECE2  F00C         	call	_LcPutChar
  3750                           
  3751                           ;Menu.c: 231:     NovaTecla = -1;
  3752  000626  6853               	setf	_NovaTecla^0,c
  3753                           
  3754                           ;Menu.c: 232:     LcPutChar(':');
  3755  000628  0E3A               	movlw	58
  3756  00062A  ECE2  F00C         	call	_LcPutChar
  3757                           
  3758                           ;Menu.c: 233:     state = 18;
  3759  00062E  0E12               	movlw	18
  3760  000630  D7E7               	goto	L1
  3761  000632                     l5079:
  3762                           
  3763                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3764  000632  BE53               	btfsc	_NovaTecla^0,7,c
  3765  000634  D01E               	goto	l5107
  3766  000636  5053               	movf	_NovaTecla^0,w,c
  3767  000638  0A80               	xorlw	128
  3768  00063A  0F76               	addlw	-138
  3769  00063C  B0D8               	btfsc	status,0,c
  3770  00063E  D019               	goto	l5107
  3771                           
  3772                           ;Menu.c: 241:     horaTmp[2] = NovaTecla+48;
  3773  000640  5053               	movf	_NovaTecla^0,w,c
  3774  000642  0F30               	addlw	48
  3775  000644  6E43               	movwf	(_horaTmp+2)^0,c
  3776                           
  3777                           ;Menu.c: 242:     LcPutChar(horaTmp[2]);
  3778  000646  5043               	movf	(_horaTmp+2)^0,w,c
  3779  000648  ECE2  F00C         	call	_LcPutChar
  3780                           
  3781                           ;Menu.c: 243:     NovaTecla = -1;
  3782  00064C  6853               	setf	_NovaTecla^0,c
  3783                           
  3784                           ;Menu.c: 244:     state = 19;
  3785  00064E  0E13               	movlw	19
  3786  000650  D7D7               	goto	L1
  3787  000652                     l5095:
  3788                           
  3789                           ;Menu.c: 251:    if (NovaTecla > -1 && NovaTecla < 10) {
  3790  000652  BE53               	btfsc	_NovaTecla^0,7,c
  3791  000654  D00E               	goto	l5107
  3792  000656  5053               	movf	_NovaTecla^0,w,c
  3793  000658  0A80               	xorlw	128
  3794  00065A  0F76               	addlw	-138
  3795  00065C  B0D8               	btfsc	status,0,c
  3796  00065E  D009               	goto	l5107
  3797                           
  3798                           ;Menu.c: 252:     horaTmp[3] = NovaTecla+48;
  3799  000660  5053               	movf	_NovaTecla^0,w,c
  3800  000662  0F30               	addlw	48
  3801  000664  6E44               	movwf	(_horaTmp+3)^0,c
  3802                           
  3803                           ;Menu.c: 253:     LcPutChar(horaTmp[3]);
  3804  000666  5044               	movf	(_horaTmp+3)^0,w,c
  3805  000668  ECE2  F00C         	call	_LcPutChar
  3806                           
  3807                           ;Menu.c: 254:     NovaTecla = -1;
  3808  00066C  6853               	setf	_NovaTecla^0,c
  3809                           
  3810                           ;Menu.c: 255:     state = 20;
  3811  00066E  0E14               	movlw	20
  3812  000670  D7C7               	goto	L1
  3813  000672                     l5107:
  3814  000672  0E0A               	movlw	10
  3815  000674  D7C7               	goto	L2
  3816  000676                     l5111:
  3817                           
  3818                           ;Menu.c: 262:    if (NovaTecla == 11) {
  3819  000676  0E0B               	movlw	11
  3820  000678  1853               	xorwf	_NovaTecla^0,w,c
  3821  00067A  A4D8               	btfss	status,2,c
  3822  00067C  D7FA               	goto	l5107
  3823                           
  3824                           ;Menu.c: 263:     HActualitzaHora(horaTmp);
  3825  00067E  0E41               	movlw	low _horaTmp
  3826  000680  6E66               	movwf	HActualitzaHora@nova^0,c
  3827  000682  ECBF  F00D         	call	_HActualitzaHora	;wreg free
  3828                           
  3829                           ;Menu.c: 264:     NovaTecla = -1;
  3830  000686  6853               	setf	_NovaTecla^0,c
  3831  000688  D719               	goto	l4941
  3832  00068A                     l5123:
  3833                           
  3834                           ;Menu.c: 272:    if (NovaTecla == 10 && LcLliure() || checkHoraAcabat()) {
  3835  00068A  0E0A               	movlw	10
  3836  00068C  1853               	xorwf	_NovaTecla^0,w,c
  3837  00068E  A4D8               	btfss	status,2,c
  3838  000690  D004               	goto	u4640
  3839  000692  EC2F  F00F         	call	_LcLliure	;wreg free
  3840  000696  B0D8               	btfsc	status,0,c
  3841  000698  D004               	goto	u4650
  3842  00069A                     u4640:
  3843  00069A  EC17  F00F         	call	_checkHoraAcabat	;wreg free
  3844  00069E  A0D8               	btfss	status,0,c
  3845  0006A0  D007               	goto	l5135
  3846  0006A2                     u4650:
  3847                           
  3848                           ;Menu.c: 273:     LcClear();
  3849  0006A2  EC89  F00E         	call	_LcClear	;wreg free
  3850                           
  3851                           ;Menu.c: 274:     JendGame();
  3852  0006A6  ECA5  F00F         	call	_JendGame	;wreg free
  3853                           
  3854                           ;Menu.c: 275:     state = 22;
  3855  0006AA  0E16               	movlw	22
  3856  0006AC  6E26               	movwf	menu@state^0,c
  3857                           
  3858                           ;Menu.c: 276:    }
  3859  0006AE  0012               	return	
  3860  0006B0                     l5135:
  3861  0006B0  5053               	movf	_NovaTecla^0,w,c
  3862  0006B2  0A80               	xorlw	128
  3863  0006B4  0F7F               	addlw	-129
  3864  0006B6  A0D8               	btfss	status,0,c
  3865  0006B8  D00A               	goto	l5145
  3866  0006BA  5053               	movf	_NovaTecla^0,w,c
  3867  0006BC  0A80               	xorlw	128
  3868  0006BE  0F76               	addlw	-138
  3869  0006C0  B0D8               	btfsc	status,0,c
  3870  0006C2  D005               	goto	l5145
  3871                           
  3872                           ;Menu.c: 278:     JnovaTecla(NovaTecla);
  3873  0006C4  5053               	movf	_NovaTecla^0,w,c
  3874  0006C6  EC4A  F00F         	call	_JnovaTecla
  3875                           
  3876                           ;Menu.c: 279:     NovaTecla = -1;
  3877  0006CA  6853               	setf	_NovaTecla^0,c
  3878  0006CC  D760               	goto	l5027
  3879  0006CE                     l5145:
  3880  0006CE  BE51               	btfsc	_novaDireccio^0,7,c
  3881  0006D0  0012               	return	
  3882                           
  3883                           ;Menu.c: 283:     JnovaDireccio(novaDireccio);
  3884  0006D2  5051               	movf	_novaDireccio^0,w,c
  3885  0006D4  EC4E  F00F         	call	_JnovaDireccio
  3886                           
  3887                           ;Menu.c: 284:     novaDireccio = -1;
  3888  0006D8  6851               	setf	_novaDireccio^0,c
  3889  0006DA  D759               	goto	l5027
  3890  0006DC                     l5153:
  3891                           
  3892                           ;Menu.c: 289:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3893  0006DC  ECA1  F00F         	call	_SIOHaAcabatPuntuacions	;wreg free
  3894  0006E0  0900               	iorlw	0
  3895  0006E2  B4D8               	btfsc	status,2,c
  3896  0006E4  0012               	return	
  3897  0006E6  0E0B               	movlw	11
  3898  0006E8  D78D               	goto	L2
  3899  0006EA                     l5161:
  3900  0006EA  5026               	movf	menu@state^0,w,c
  3901  0006EC  6E75               	movwf	??_menu^0,c
  3902  0006EE  6A76               	clrf	(??_menu+1)^0,c
  3903                           
  3904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3905                           ; Switch size 1, requested type "simple"
  3906                           ; Number of cases is 1, Range of values is 0 to 0
  3907                           ; switch strategies available:
  3908                           ; Name         Instructions Cycles
  3909                           ; simple_byte            4     3 (average)
  3910                           ;	Chosen strategy is simple_byte
  3911  0006F0  5076               	movf	(??_menu+1)^0,w,c
  3912  0006F2  0A00               	xorlw	0	; case 0
  3913  0006F4  A4D8               	btfss	status,2,c
  3914  0006F6  0012               	return	
  3915                           
  3916                           ; Switch size 1, requested type "simple"
  3917                           ; Number of cases is 23, Range of values is 0 to 22
  3918                           ; switch strategies available:
  3919                           ; Name         Instructions Cycles
  3920                           ; simple_byte           70    36 (average)
  3921                           ;	Chosen strategy is simple_byte
  3922  0006F8  5075               	movf	??_menu^0,w,c
  3923  0006FA  0A00               	xorlw	0	; case 0
  3924  0006FC  B4D8               	btfsc	status,2,c
  3925  0006FE  D5F3               	goto	l4795
  3926  000700  0A01               	xorlw	1	; case 1
  3927  000702  B4D8               	btfsc	status,2,c
  3928  000704  D5FA               	goto	l4801
  3929  000706  0A03               	xorlw	3	; case 2
  3930  000708  B4D8               	btfsc	status,2,c
  3931  00070A  D609               	goto	l4811
  3932  00070C  0A01               	xorlw	1	; case 3
  3933  00070E  B4D8               	btfsc	status,2,c
  3934  000710  D618               	goto	l495
  3935  000712  0A07               	xorlw	7	; case 4
  3936  000714  B4D8               	btfsc	status,2,c
  3937  000716  D624               	goto	l4831
  3938  000718  0A01               	xorlw	1	; case 5
  3939  00071A  B4D8               	btfsc	status,2,c
  3940  00071C  D635               	goto	l4839
  3941  00071E  0A03               	xorlw	3	; case 6
  3942  000720  B4D8               	btfsc	status,2,c
  3943  000722  D642               	goto	l4849
  3944  000724  0A01               	xorlw	1	; case 7
  3945  000726  B4D8               	btfsc	status,2,c
  3946  000728  D658               	goto	l4863
  3947  00072A  0A0F               	xorlw	15	; case 8
  3948  00072C  B4D8               	btfsc	status,2,c
  3949  00072E  D67A               	goto	l4891
  3950  000730  0A01               	xorlw	1	; case 9
  3951  000732  B4D8               	btfsc	status,2,c
  3952  000734  D690               	goto	l4905
  3953  000736  0A03               	xorlw	3	; case 10
  3954  000738  B4D8               	btfsc	status,2,c
  3955  00073A  D6B1               	goto	l4935
  3956  00073C  0A01               	xorlw	1	; case 11
  3957  00073E  B4D8               	btfsc	status,2,c
  3958  000740  D6BD               	goto	l4941
  3959  000742  0A07               	xorlw	7	; case 12
  3960  000744  B4D8               	btfsc	status,2,c
  3961  000746  D6C0               	goto	l4959
  3962  000748  0A01               	xorlw	1	; case 13
  3963  00074A  B4D8               	btfsc	status,2,c
  3964  00074C  D6C9               	goto	l4971
  3965  00074E  0A03               	xorlw	3	; case 14
  3966  000750  B4D8               	btfsc	status,2,c
  3967  000752  D720               	goto	l5029
  3968  000754  0A01               	xorlw	1	; case 15
  3969  000756  B4D8               	btfsc	status,2,c
  3970  000758  D730               	goto	l5037
  3971  00075A  0A1F               	xorlw	31	; case 16
  3972  00075C  B4D8               	btfsc	status,2,c
  3973  00075E  D739               	goto	l5041
  3974  000760  0A01               	xorlw	1	; case 17
  3975  000762  B4D8               	btfsc	status,2,c
  3976  000764  D753               	goto	l5061
  3977  000766  0A03               	xorlw	3	; case 18
  3978  000768  B4D8               	btfsc	status,2,c
  3979  00076A  D763               	goto	l5079
  3980  00076C  0A01               	xorlw	1	; case 19
  3981  00076E  B4D8               	btfsc	status,2,c
  3982  000770  D770               	goto	l5095
  3983  000772  0A07               	xorlw	7	; case 20
  3984  000774  B4D8               	btfsc	status,2,c
  3985  000776  D77F               	goto	l5111
  3986  000778  0A01               	xorlw	1	; case 21
  3987  00077A  B4D8               	btfsc	status,2,c
  3988  00077C  D786               	goto	l5123
  3989  00077E  0A03               	xorlw	3	; case 22
  3990  000780  A4D8               	btfss	status,2,c
  3991  000782  0012               	return	
  3992  000784  D7AB               	goto	l5153
  3993  000786                     __end_of_menu:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _checkHoraAcabat *****************
  3997 ;; Defined at:
  3998 ;;		line 41 in file "Hora.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;		None               void
  4005 ;; Registers used:
  4006 ;;		status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/1
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1
  4012 ;;      Params:         0       0       0
  4013 ;;      Locals:         0       0       0
  4014 ;;      Temps:          0       0       0
  4015 ;;      Totals:         0       0       0
  4016 ;;Total ram usage:        0 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 2
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_menu
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text22
  4027  001E2E                     __ptext22:
  4028                           	callstack 0
  4029  001E2E                     _checkHoraAcabat:
  4030                           	callstack 27
  4031                           
  4032                           ;Hora.c: 42:     return tempsAcabat;
  4033                           
  4034                           ;incstack = 0
  4035  001E2E  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4036  001E30  D002               	goto	l4215
  4037  001E32  90D8               	bcf	status,0,c
  4038  001E34  0012               	return	
  4039  001E36                     l4215:
  4040  001E36  80D8               	bsf	status,0,c
  4041  001E38  0012               	return		;funcret
  4042  001E3A                     __end_of_checkHoraAcabat:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _UgetUserName *****************
  4046 ;; Defined at:
  4047 ;;		line 27 in file "Usuaris.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  quin            1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  quin            1    7[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2    5[COMRAM] PTR unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, prodl, prodh
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/1
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1
  4061 ;;      Params:         2       0       0
  4062 ;;      Locals:         1       0       0
  4063 ;;      Temps:          0       0       0
  4064 ;;      Totals:         3       0       0
  4065 ;;Total ram usage:        3 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 2
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_menu
  4072 ;;		_motorSIO
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text23
  4077  001DC4                     __ptext23:
  4078                           	callstack 0
  4079  001DC4                     _UgetUserName:
  4080                           	callstack 27
  4081                           
  4082                           ;incstack = 0
  4083                           ;UgetUserName@quin stored from wreg
  4084  001DC4  6E68               	movwf	UgetUserName@quin^0,c
  4085                           
  4086                           ;Usuaris.c: 28:     return usuaris[quin].username;
  4087  001DC6  5068               	movf	UgetUserName@quin^0,w,c
  4088  001DC8  0D17               	mullw	23
  4089  001DCA  0E00               	movlw	low _usuaris
  4090  001DCC  24F3               	addwf	243,w,c
  4091  001DCE  6E66               	movwf	?_UgetUserName^0,c
  4092  001DD0  0E01               	movlw	high _usuaris
  4093  001DD2  20F4               	addwfc	prodh,w,c
  4094  001DD4  6E67               	movwf	(?_UgetUserName+1)^0,c
  4095  001DD6  0012               	return		;funcret
  4096  001DD8                     __end_of_UgetUserName:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _UgetNumUsuaris *****************
  4100 ;; Defined at:
  4101 ;;		line 30 in file "Usuaris.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      unsigned char 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/1
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1
  4115 ;;      Params:         0       0       0
  4116 ;;      Locals:         0       0       0
  4117 ;;      Temps:          0       0       0
  4118 ;;      Totals:         0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 2
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_menu
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text24
  4130  001F32                     __ptext24:
  4131                           	callstack 0
  4132  001F32                     _UgetNumUsuaris:
  4133                           	callstack 27
  4134                           
  4135                           ;Usuaris.c: 31:     return numUsuaris;
  4136                           
  4137                           ;incstack = 0
  4138  001F32  5024               	movf	_numUsuaris^0,w,c
  4139  001F34  0012               	return		;funcret
  4140  001F36                     __end_of_UgetNumUsuaris:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _UenviaPas *****************
  4144 ;; Defined at:
  4145 ;;		line 46 in file "Usuaris.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  c               1    wreg     unsigned char 
  4148 ;;  pos             1    5[COMRAM] unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  c               1    6[COMRAM] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/1
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1
  4160 ;;      Params:         1       0       0
  4161 ;;      Locals:         1       0       0
  4162 ;;      Temps:          0       0       0
  4163 ;;      Totals:         2       0       0
  4164 ;;Total ram usage:        2 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 2
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_menu
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text25
  4175  001DEA                     __ptext25:
  4176                           	callstack 0
  4177  001DEA                     _UenviaPas:
  4178                           	callstack 27
  4179                           
  4180                           ;incstack = 0
  4181                           ;UenviaPas@c stored from wreg
  4182  001DEA  6E67               	movwf	UenviaPas@c^0,c
  4183                           
  4184                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  4185  001DEC  5066               	movf	UenviaPas@pos^0,w,c
  4186  001DEE  0FC0               	addlw	low _tmpPassword
  4187  001DF0  6ED9               	movwf	fsr2l,c
  4188  001DF2  6ADA               	clrf	fsr2h,c
  4189  001DF4  C067  FFDF         	movff	UenviaPas@c,indf2
  4190  001DF8  0012               	return		;funcret
  4191  001DFA                     __end_of_UenviaPas:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _UenviaChar *****************
  4195 ;; Defined at:
  4196 ;;		line 43 in file "Usuaris.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  c               1    wreg     unsigned char 
  4199 ;;  pos             1    5[COMRAM] unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  c               1    6[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/1
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1
  4211 ;;      Params:         1       0       0
  4212 ;;      Locals:         1       0       0
  4213 ;;      Temps:          0       0       0
  4214 ;;      Totals:         2       0       0
  4215 ;;Total ram usage:        2 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 2
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_menu
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text26
  4226  001DFA                     __ptext26:
  4227                           	callstack 0
  4228  001DFA                     _UenviaChar:
  4229                           	callstack 27
  4230                           
  4231                           ;incstack = 0
  4232                           ;UenviaChar@c stored from wreg
  4233  001DFA  6E67               	movwf	UenviaChar@c^0,c
  4234                           
  4235                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  4236  001DFC  5066               	movf	UenviaChar@pos^0,w,c
  4237  001DFE  0F38               	addlw	low _tmpUsername
  4238  001E00  6ED9               	movwf	fsr2l,c
  4239  001E02  6ADA               	clrf	fsr2h,c
  4240  001E04  C067  FFDF         	movff	UenviaChar@c,indf2
  4241  001E08  0012               	return		;funcret
  4242  001E0A                     __end_of_UenviaChar:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _UcheckExistsNotFinished *****************
  4246 ;; Defined at:
  4247 ;;		line 37 in file "Usuaris.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/1
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1
  4261 ;;      Params:         0       0       0
  4262 ;;      Locals:         0       0       0
  4263 ;;      Temps:          0       0       0
  4264 ;;      Totals:         0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; Hardware stack levels required when called: 2
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_menu
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text27
  4276  001E3A                     __ptext27:
  4277                           	callstack 0
  4278  001E3A                     _UcheckExistsNotFinished:
  4279                           	callstack 27
  4280                           
  4281                           ;Usuaris.c: 38:     return do_check_exists;
  4282                           
  4283                           ;incstack = 0
  4284  001E3A  BA78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4285  001E3C  D002               	goto	l4177
  4286  001E3E  90D8               	bcf	status,0,c
  4287  001E40  0012               	return	
  4288  001E42                     l4177:
  4289  001E42  80D8               	bsf	status,0,c
  4290  001E44  0012               	return		;funcret
  4291  001E46                     __end_of_UcheckExistsNotFinished:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _UcheckExistsGetError *****************
  4295 ;; Defined at:
  4296 ;;		line 40 in file "Usuaris.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/1
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1
  4310 ;;      Params:         0       0       0
  4311 ;;      Locals:         0       0       0
  4312 ;;      Temps:          1       0       0
  4313 ;;      Totals:         1       0       0
  4314 ;;Total ram usage:        1 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 2
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_menu
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text28
  4325  001E8C                     __ptext28:
  4326                           	callstack 0
  4327  001E8C                     _UcheckExistsGetError:
  4328                           	callstack 27
  4329                           
  4330                           ;Usuaris.c: 41:     return usuariLoguejat;
  4331                           
  4332                           ;incstack = 0
  4333  001E8C  C050  F066         	movff	_usuariLoguejat,??_UcheckExistsGetError
  4334  001E90  3066               	rrcf	??_UcheckExistsGetError^0,w,c
  4335  001E92  0012               	return		;funcret
  4336  001E94                     __end_of_UcheckExistsGetError:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _UcheckExists *****************
  4340 ;; Defined at:
  4341 ;;		line 34 in file "Usuaris.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		None
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/1
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1
  4355 ;;      Params:         0       0       0
  4356 ;;      Locals:         0       0       0
  4357 ;;      Temps:          0       0       0
  4358 ;;      Totals:         0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 2
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_menu
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text29
  4370  001F36                     __ptext29:
  4371                           	callstack 0
  4372  001F36                     _UcheckExists:
  4373                           	callstack 27
  4374                           
  4375                           ;Usuaris.c: 35:     do_check_exists = 1;
  4376                           
  4377                           ;incstack = 0
  4378  001F36  8A78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4379  001F38  0012               	return		;funcret
  4380  001F3A                     __end_of_UcheckExists:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _URegister *****************
  4384 ;; Defined at:
  4385 ;;		line 54 in file "Usuaris.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		None
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1
  4399 ;;      Params:         0       0       0
  4400 ;;      Locals:         0       0       0
  4401 ;;      Temps:          0       0       0
  4402 ;;      Totals:         0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 2
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_menu
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text30
  4414  001F3A                     __ptext30:
  4415                           	callstack 0
  4416  001F3A                     _URegister:
  4417                           	callstack 27
  4418                           
  4419                           ;Usuaris.c: 55:     do_register = 1;
  4420                           
  4421                           ;incstack = 0
  4422  001F3A  8878               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4423  001F3C  0012               	return		;funcret
  4424  001F3E                     __end_of_URegister:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _SiFerMenu *****************
  4428 ;; Defined at:
  4429 ;;		line 19 in file "GestioLCD.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		None
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/1
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1
  4443 ;;      Params:         0       0       0
  4444 ;;      Locals:         0       0       0
  4445 ;;      Temps:          0       0       0
  4446 ;;      Totals:         0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 2
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_menu
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text31
  4458  001F3E                     __ptext31:
  4459                           	callstack 0
  4460  001F3E                     _SiFerMenu:
  4461                           	callstack 27
  4462                           
  4463                           ;GestioLCD.c: 20:     ferMenu = 1;
  4464                           
  4465                           ;incstack = 0
  4466  001F3E  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4467  001F40  0012               	return		;funcret
  4468  001F42                     __end_of_SiFerMenu:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _SMSon *****************
  4472 ;; Defined at:
  4473 ;;		line 130 in file "Ssms.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		None
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/1
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1
  4487 ;;      Params:         0       0       0
  4488 ;;      Locals:         0       0       0
  4489 ;;      Temps:          0       0       0
  4490 ;;      Totals:         0       0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 2
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_menu
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text32
  4502  001F0A                     __ptext32:
  4503                           	callstack 0
  4504  001F0A                     _SMSon:
  4505                           	callstack 27
  4506                           
  4507                           ;Ssms.c: 131:     setSMSon = 1;
  4508                           
  4509                           ;incstack = 0
  4510  001F0A  8E78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4511                           
  4512                           ;Ssms.c: 132:     novaTecla = -1;
  4513  001F0C  6856               	setf	_novaTecla^0,c
  4514  001F0E  0012               	return		;funcret
  4515  001F10                     __end_of_SMSon:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _SMSoff *****************
  4519 ;; Defined at:
  4520 ;;		line 135 in file "Ssms.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		None
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/1
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1
  4534 ;;      Params:         0       0       0
  4535 ;;      Locals:         0       0       0
  4536 ;;      Temps:          0       0       0
  4537 ;;      Totals:         0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 2
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_menu
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text33
  4549  001F10                     __ptext33:
  4550                           	callstack 0
  4551  001F10                     _SMSoff:
  4552                           	callstack 27
  4553                           
  4554                           ;Ssms.c: 136:     setSMSon = 0;
  4555                           
  4556                           ;incstack = 0
  4557  001F10  9E78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4558                           
  4559                           ;Ssms.c: 137:     novaTecla = -1;
  4560  001F12  6856               	setf	_novaTecla^0,c
  4561  001F14  0012               	return		;funcret
  4562  001F16                     __end_of_SMSoff:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _SIOHaAcabatPuntuacions *****************
  4566 ;; Defined at:
  4567 ;;		line 36 in file "SIO.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      char 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/1
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1
  4581 ;;      Params:         0       0       0
  4582 ;;      Locals:         0       0       0
  4583 ;;      Temps:          0       0       0
  4584 ;;      Totals:         0       0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 2
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_menu
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text34
  4596  001F42                     __ptext34:
  4597                           	callstack 0
  4598  001F42                     _SIOHaAcabatPuntuacions:
  4599                           	callstack 27
  4600                           
  4601                           ;SIO.c: 37:     return usuariActualSIO;
  4602                           
  4603                           ;incstack = 0
  4604  001F42  504B               	movf	_usuariActualSIO^0,w,c
  4605  001F44  0012               	return		;funcret
  4606  001F46                     __end_of_SIOHaAcabatPuntuacions:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _NoFerMenu *****************
  4610 ;; Defined at:
  4611 ;;		line 22 in file "GestioLCD.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		None
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/1
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1
  4625 ;;      Params:         0       0       0
  4626 ;;      Locals:         0       0       0
  4627 ;;      Temps:          0       0       0
  4628 ;;      Totals:         0       0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 2
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_menu
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text35
  4640  001F46                     __ptext35:
  4641                           	callstack 0
  4642  001F46                     _NoFerMenu:
  4643                           	callstack 27
  4644                           
  4645                           ;GestioLCD.c: 23:     ferMenu = 0;
  4646                           
  4647                           ;incstack = 0
  4648  001F46  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4649  001F48  0012               	return		;funcret
  4650  001F4A                     __end_of_NoFerMenu:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _JnovaTecla *****************
  4654 ;; Defined at:
  4655 ;;		line 16 in file "Joc.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  tecla           1    wreg     char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  tecla           1    5[COMRAM] char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/1
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1
  4669 ;;      Params:         0       0       0
  4670 ;;      Locals:         1       0       0
  4671 ;;      Temps:          0       0       0
  4672 ;;      Totals:         1       0       0
  4673 ;;Total ram usage:        1 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 2
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_menu
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text36
  4684  001E94                     __ptext36:
  4685                           	callstack 0
  4686  001E94                     _JnovaTecla:
  4687                           	callstack 27
  4688                           
  4689                           ;incstack = 0
  4690                           ;JnovaTecla@tecla stored from wreg
  4691  001E94  6E66               	movwf	JnovaTecla@tecla^0,c
  4692                           
  4693                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  4694  001E96  C066  F04C         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4695  001E9A  0012               	return		;funcret
  4696  001E9C                     __end_of_JnovaTecla:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _JnovaDireccio *****************
  4700 ;; Defined at:
  4701 ;;		line 19 in file "Joc.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  dir             1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  dir             1    5[COMRAM] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/1
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1
  4715 ;;      Params:         0       0       0
  4716 ;;      Locals:         1       0       0
  4717 ;;      Temps:          0       0       0
  4718 ;;      Totals:         1       0       0
  4719 ;;Total ram usage:        1 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 2
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_menu
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text37
  4730  001E9C                     __ptext37:
  4731                           	callstack 0
  4732  001E9C                     _JnovaDireccio:
  4733                           	callstack 27
  4734                           
  4735                           ;incstack = 0
  4736                           ;JnovaDireccio@dir stored from wreg
  4737  001E9C  6E66               	movwf	JnovaDireccio@dir^0,c
  4738                           
  4739                           ;Joc.c: 20:     direccioJoc = dir;
  4740  001E9E  C066  F00B         	movff	JnovaDireccio@dir,_direccioJoc
  4741  001EA2  0012               	return		;funcret
  4742  001EA4                     __end_of_JnovaDireccio:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _JendGame *****************
  4746 ;; Defined at:
  4747 ;;		line 27 in file "Joc.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		None
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/1
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1
  4761 ;;      Params:         0       0       0
  4762 ;;      Locals:         0       0       0
  4763 ;;      Temps:          0       0       0
  4764 ;;      Totals:         0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 2
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_menu
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text38
  4776  001F4A                     __ptext38:
  4777                           	callstack 0
  4778  001F4A                     _JendGame:
  4779                           	callstack 27
  4780                           
  4781                           ;Joc.c: 28:     jugantJoc = 0;
  4782                           
  4783                           ;incstack = 0
  4784  001F4A  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  4785  001F4C  0012               	return		;funcret
  4786  001F4E                     __end_of_JendGame:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _JJuguem *****************
  4790 ;; Defined at:
  4791 ;;		line 13 in file "Joc.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  usuari          1    wreg     unsigned char 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  usuari          1    5[COMRAM] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/1
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1
  4805 ;;      Params:         0       0       0
  4806 ;;      Locals:         1       0       0
  4807 ;;      Temps:          0       0       0
  4808 ;;      Totals:         1       0       0
  4809 ;;Total ram usage:        1 bytes
  4810 ;; Hardware stack levels used: 1
  4811 ;; Hardware stack levels required when called: 2
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_menu
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text39
  4820  001EA4                     __ptext39:
  4821                           	callstack 0
  4822  001EA4                     _JJuguem:
  4823                           	callstack 27
  4824                           
  4825                           ;incstack = 0
  4826                           ;JJuguem@usuari stored from wreg
  4827  001EA4  6E66               	movwf	JJuguem@usuari^0,c
  4828                           
  4829                           ;Joc.c: 14:     usuariJoc = usuari;
  4830  001EA6  C066  F04D         	movff	JJuguem@usuari,_usuariJoc
  4831  001EAA  0012               	return		;funcret
  4832  001EAC                     __end_of_JJuguem:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _HActualitzaHora *****************
  4836 ;; Defined at:
  4837 ;;		line 15 in file "Hora.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4840 ;;		 -> horaTmp(4), 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/1
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1
  4852 ;;      Params:         1       0       0
  4853 ;;      Locals:         0       0       0
  4854 ;;      Temps:          0       0       0
  4855 ;;      Totals:         1       0       0
  4856 ;;Total ram usage:        1 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 2
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_menu
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text40
  4867  001B7E                     __ptext40:
  4868                           	callstack 0
  4869  001B7E                     _HActualitzaHora:
  4870                           	callstack 27
  4871                           
  4872                           ;Hora.c: 16:     hora[0] = nova[0];
  4873                           
  4874                           ;incstack = 0
  4875  001B7E  5066               	movf	HActualitzaHora@nova^0,w,c
  4876  001B80  6ED9               	movwf	fsr2l,c
  4877  001B82  6ADA               	clrf	fsr2h,c
  4878  001B84  50DF               	movf	indf2,w,c
  4879  001B86  6E58               	movwf	_hora^0,c
  4880                           
  4881                           ;Hora.c: 17:     hora[1] = nova[1];
  4882  001B88  5066               	movf	HActualitzaHora@nova^0,w,c
  4883  001B8A  6ED9               	movwf	fsr2l,c
  4884  001B8C  6ADA               	clrf	fsr2h,c
  4885  001B8E  0E01               	movlw	1
  4886  001B90  26D9               	addwf	fsr2l,f,c
  4887  001B92  50DF               	movf	indf2,w,c
  4888  001B94  6E59               	movwf	(_hora+1)^0,c
  4889                           
  4890                           ;Hora.c: 18:     hora[3] = nova[2];
  4891  001B96  5066               	movf	HActualitzaHora@nova^0,w,c
  4892  001B98  6ED9               	movwf	fsr2l,c
  4893  001B9A  6ADA               	clrf	fsr2h,c
  4894  001B9C  0E02               	movlw	2
  4895  001B9E  26D9               	addwf	fsr2l,f,c
  4896  001BA0  50DF               	movf	indf2,w,c
  4897  001BA2  6E5B               	movwf	(_hora+3)^0,c
  4898                           
  4899                           ;Hora.c: 19:     hora[4] = nova[3];
  4900  001BA4  5066               	movf	HActualitzaHora@nova^0,w,c
  4901  001BA6  6ED9               	movwf	fsr2l,c
  4902  001BA8  6ADA               	clrf	fsr2h,c
  4903  001BAA  0E03               	movlw	3
  4904  001BAC  26D9               	addwf	fsr2l,f,c
  4905  001BAE  50DF               	movf	indf2,w,c
  4906  001BB0  6E5C               	movwf	(_hora+4)^0,c
  4907  001BB2  0012               	return		;funcret
  4908  001BB4                     __end_of_HActualitzaHora:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _GLCDMostraMenu *****************
  4912 ;; Defined at:
  4913 ;;		line 30 in file "GestioLCD.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  num             1    wreg     unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  num             1    5[COMRAM] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/1
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1
  4927 ;;      Params:         0       0       0
  4928 ;;      Locals:         1       0       0
  4929 ;;      Temps:          0       0       0
  4930 ;;      Totals:         1       0       0
  4931 ;;Total ram usage:        1 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 2
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_menu
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text41
  4942  001E46                     __ptext41:
  4943                           	callstack 0
  4944  001E46                     _GLCDMostraMenu:
  4945                           	callstack 27
  4946                           
  4947                           ;incstack = 0
  4948                           ;GLCDMostraMenu@num stored from wreg
  4949  001E46  6E66               	movwf	GLCDMostraMenu@num^0,c
  4950                           
  4951                           ;GestioLCD.c: 31:     newString = 1;
  4952  001E48  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  4953                           
  4954                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  4955  001E4A  C066  F019         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  4956                           
  4957                           ;GestioLCD.c: 33:     ferMenu = 1;
  4958  001E4E  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4959  001E50  0012               	return		;funcret
  4960  001E52                     __end_of_GLCDMostraMenu:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _init_ports *****************
  4964 ;; Defined at:
  4965 ;;		line 26 in file "main.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1
  4979 ;;      Params:         0       0       0
  4980 ;;      Locals:         0       0       0
  4981 ;;      Temps:          0       0       0
  4982 ;;      Totals:         0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 2
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text42
  4994  001D5A                     __ptext42:
  4995                           	callstack 0
  4996  001D5A                     _init_ports:
  4997                           	callstack 28
  4998                           
  4999                           ;incstack = 0
  5000  001D5A  0E03               	movlw	3
  5001  001D5C  6E92               	movwf	146,c	;volatile
  5002  001D5E  0EE0               	movlw	224
  5003  001D60  6E93               	movwf	147,c	;volatile
  5004  001D62  968A               	bcf	138,3,c	;volatile
  5005  001D64  908A               	bcf	138,0,c	;volatile
  5006  001D66  928A               	bcf	138,1,c	;volatile
  5007                           
  5008                           ;main.c: 49:     TRISC = 0xC0;
  5009  001D68  0EC0               	movlw	192
  5010  001D6A  6E94               	movwf	148,c	;volatile
  5011                           
  5012                           ;main.c: 59:     TRISD = 0x8F;
  5013  001D6C  0E8F               	movlw	143
  5014  001D6E  6E95               	movwf	149,c	;volatile
  5015                           
  5016                           ;main.c: 60:     LATD = 0x00;
  5017  001D70  0E00               	movlw	0
  5018  001D72  6E8C               	movwf	140,c	;volatile
  5019                           
  5020                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5021  001D74  8EA6               	bsf	166,7,c	;volsfr
  5022                           
  5023                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5024  001D76  9CA6               	bcf	166,6,c	;volsfr
  5025  001D78  0012               	return		;funcret
  5026  001D7A                     __end_of_init_ports:
  5027                           	callstack 0
  5028                           
  5029 ;; *************** function _init_eusart *****************
  5030 ;; Defined at:
  5031 ;;		line 67 in file "main.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1
  5045 ;;      Params:         0       0       0
  5046 ;;      Locals:         0       0       0
  5047 ;;      Temps:          0       0       0
  5048 ;;      Totals:         0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 2
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text43
  5060  001DAE                     __ptext43:
  5061                           	callstack 0
  5062  001DAE                     _init_eusart:
  5063                           	callstack 28
  5064                           
  5065                           ;main.c: 68:     TXSTA = 0x24;
  5066                           
  5067                           ;incstack = 0
  5068  001DAE  0E24               	movlw	36
  5069  001DB0  6EAC               	movwf	172,c	;volatile
  5070                           
  5071                           ;main.c: 69:     RCSTA = 0x90;
  5072  001DB2  0E90               	movlw	144
  5073  001DB4  6EAB               	movwf	171,c	;volatile
  5074                           
  5075                           ;main.c: 70:     BAUDCON = 0x08;
  5076  001DB6  0E08               	movlw	8
  5077  001DB8  6EB8               	movwf	184,c	;volatile
  5078                           
  5079                           ;main.c: 71:     SPBRGH = 0x04;
  5080  001DBA  0E04               	movlw	4
  5081  001DBC  6EB0               	movwf	176,c	;volatile
  5082                           
  5083                           ;main.c: 72:     SPBRG = 0x10;
  5084  001DBE  0E10               	movlw	16
  5085  001DC0  6EAF               	movwf	175,c	;volatile
  5086  001DC2  0012               	return		;funcret
  5087  001DC4                     __end_of_init_eusart:
  5088                           	callstack 0
  5089                           
  5090 ;; *************** function _initSIO *****************
  5091 ;; Defined at:
  5092 ;;		line 18 in file "SIO.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1
  5106 ;;      Params:         0       0       0
  5107 ;;      Locals:         0       0       0
  5108 ;;      Temps:          0       0       0
  5109 ;;      Totals:         0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used: 1
  5112 ;; Hardware stack levels required when called: 3
  5113 ;; This function calls:
  5114 ;;		_TiGetTimer
  5115 ;; This function is called by:
  5116 ;;		_main
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text44
  5121  001EAC                     __ptext44:
  5122                           	callstack 0
  5123  001EAC                     _initSIO:
  5124                           	callstack 27
  5125                           
  5126                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  5127                           
  5128                           ;incstack = 0
  5129  001EAC  EC6B  F00D         	call	_TiGetTimer	;wreg free
  5130  001EB0  6E08               	movwf	_timerSIO^0,c
  5131  001EB2  0012               	return		;funcret
  5132  001EB4                     __end_of_initSIO:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function _initHora *****************
  5136 ;; Defined at:
  5137 ;;		line 11 in file "Hora.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1
  5151 ;;      Params:         0       0       0
  5152 ;;      Locals:         0       0       0
  5153 ;;      Temps:          0       0       0
  5154 ;;      Totals:         0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; Hardware stack levels required when called: 3
  5158 ;; This function calls:
  5159 ;;		_TiGetTimer
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text45
  5166  001EB4                     __ptext45:
  5167                           	callstack 0
  5168  001EB4                     _initHora:
  5169                           	callstack 27
  5170                           
  5171                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5172                           
  5173                           ;incstack = 0
  5174  001EB4  EC6B  F00D         	call	_TiGetTimer	;wreg free
  5175  001EB8  6E0E               	movwf	_timerHora^0,c
  5176  001EBA  0012               	return		;funcret
  5177  001EBC                     __end_of_initHora:
  5178                           	callstack 0
  5179                           
  5180 ;; *************** function _initAltaveu *****************
  5181 ;; Defined at:
  5182 ;;		line 10 in file "Altaveu.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1
  5196 ;;      Params:         0       0       0
  5197 ;;      Locals:         0       0       0
  5198 ;;      Temps:          0       0       0
  5199 ;;      Totals:         0       0       0
  5200 ;;Total ram usage:        0 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 3
  5203 ;; This function calls:
  5204 ;;		_TiGetTimer
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text46
  5211  001EBC                     __ptext46:
  5212                           	callstack 0
  5213  001EBC                     _initAltaveu:
  5214                           	callstack 27
  5215                           
  5216                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5217                           
  5218                           ;incstack = 0
  5219  001EBC  EC6B  F00D         	call	_TiGetTimer	;wreg free
  5220  001EC0  6E1D               	movwf	_timerAltaveu^0,c
  5221  001EC2  0012               	return		;funcret
  5222  001EC4                     __end_of_initAltaveu:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _escriureEEPROM *****************
  5226 ;; Defined at:
  5227 ;;		line 208 in file "Usuaris.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  caca            1    5[COMRAM] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1
  5241 ;;      Params:         0       0       0
  5242 ;;      Locals:         1       0       0
  5243 ;;      Temps:          0       0       0
  5244 ;;      Totals:         1       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 2
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text47
  5256  001C18                     __ptext47:
  5257                           	callstack 0
  5258  001C18                     _escriureEEPROM:
  5259                           	callstack 28
  5260                           
  5261                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  5262                           
  5263                           ;incstack = 0
  5264  001C18  0E00               	movlw	0
  5265  001C1A  6E66               	movwf	escriureEEPROM@caca^0,c
  5266  001C1C                     l2341:
  5267                           
  5268                           ;Usuaris.c: 210:         EEADR = 0;
  5269  001C1C  0E00               	movlw	0
  5270  001C1E  6EA9               	movwf	169,c	;volatile
  5271                           
  5272                           ;Usuaris.c: 211:         EEDATA = 0;
  5273  001C20  0E00               	movlw	0
  5274  001C22  6EA8               	movwf	168,c	;volatile
  5275                           
  5276                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  5277  001C24  9EA6               	bcf	166,7,c	;volsfr
  5278                           
  5279                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  5280  001C26  9CA6               	bcf	166,6,c	;volsfr
  5281                           
  5282                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  5283  001C28  84A6               	bsf	166,2,c	;volsfr
  5284                           
  5285                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  5286  001C2A  9EF2               	bcf	242,7,c	;volatile
  5287                           
  5288                           ;Usuaris.c: 216:         EECON2 = 85;
  5289  001C2C  0E55               	movlw	85
  5290  001C2E  6EA7               	movwf	167,c	;volsfr
  5291                           
  5292                           ;Usuaris.c: 217:         EECON2 = 170;
  5293  001C30  0EAA               	movlw	170
  5294  001C32  6EA7               	movwf	167,c	;volsfr
  5295                           
  5296                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  5297  001C34  82A6               	bsf	166,1,c	;volsfr
  5298  001C36                     l721:
  5299                           
  5300                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  5301  001C36  B2A6               	btfsc	166,1,c	;volsfr
  5302  001C38  D7FE               	goto	l721
  5303                           
  5304                           ;Usuaris.c: 224:     }
  5305  001C3A  2A66               	incf	escriureEEPROM@caca^0,f,c
  5306  001C3C  0E9F               	movlw	159
  5307  001C3E  6466               	cpfsgt	escriureEEPROM@caca^0,c
  5308  001C40  D7ED               	goto	l2341
  5309                           
  5310                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  5311  001C42  8EF2               	bsf	242,7,c	;volatile
  5312  001C44  0012               	return		;funcret
  5313  001C46                     __end_of_escriureEEPROM:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _escriure2usuarisStruct *****************
  5317 ;; Defined at:
  5318 ;;		line 115 in file "Usuaris.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 3F/1
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1
  5332 ;;      Params:         0       0       0
  5333 ;;      Locals:         0       0       0
  5334 ;;      Temps:          0       0       0
  5335 ;;      Totals:         0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 2
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text48
  5347  001C46                     __ptext48:
  5348                           	callstack 0
  5349  001C46                     _escriure2usuarisStruct:
  5350                           	callstack 28
  5351                           
  5352                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  5353                           
  5354                           ;incstack = 0
  5355  001C46  0E01               	movlw	1
  5356  001C48  0101               	movlb	1	; () banked
  5357  001C4A  6F00               	movwf	_usuaris& (0+255),b
  5358                           
  5359                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  5360  001C4C  0E01               	movlw	1
  5361  001C4E  6F09               	movwf	(_usuaris+9)& (0+255),b
  5362                           
  5363                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  5364  001C50  0E31               	movlw	49
  5365  001C52  6F17               	movwf	(_usuaris+23)& (0+255),b
  5366                           
  5367                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  5368  001C54  0E31               	movlw	49
  5369  001C56  6F20               	movwf	(_usuaris+32)& (0+255),b
  5370                           
  5371                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  5372  001C58  0E00               	movlw	0
  5373  001C5A  6F01               	movwf	(_usuaris+1)& (0+255),b
  5374                           
  5375                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  5376  001C5C  0E00               	movlw	0
  5377  001C5E  6F0A               	movwf	(_usuaris+10)& (0+255),b
  5378                           
  5379                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  5380  001C60  0E00               	movlw	0
  5381  001C62  6F18               	movwf	(_usuaris+24)& (0+255),b
  5382                           
  5383                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  5384  001C64  0E00               	movlw	0
  5385  001C66  6F21               	movwf	(_usuaris+33)& (0+255),b
  5386                           
  5387                           ;Usuaris.c: 125:     numUsuaris = 2;
  5388  001C68  0E02               	movlw	2
  5389  001C6A  6E24               	movwf	_numUsuaris^0,c
  5390                           
  5391                           ;Usuaris.c: 126:     indexNextUser = 2;
  5392  001C6C  0E02               	movlw	2
  5393  001C6E  6E23               	movwf	_indexNextUser^0,c
  5394                           
  5395                           ; BSR set to: 1
  5396  001C70  0012               	return		;funcret
  5397  001C72                     __end_of_escriure2usuarisStruct:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _UmotorUsers *****************
  5401 ;; Defined at:
  5402 ;;		line 139 in file "Usuaris.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/1
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1
  5416 ;;      Params:         0       0       0
  5417 ;;      Locals:         0       0       0
  5418 ;;      Temps:          2       0       0
  5419 ;;      Totals:         2       0       0
  5420 ;;Total ram usage:        2 bytes
  5421 ;; Hardware stack levels used: 1
  5422 ;; Hardware stack levels required when called: 3
  5423 ;; This function calls:
  5424 ;;		_compareStrings
  5425 ;;		_escriureCharEEPROM
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text49
  5432  000F68                     __ptext49:
  5433                           	callstack 0
  5434  000F68                     _UmotorUsers:
  5435                           	callstack 27
  5436                           
  5437                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;incstack = 0
  5441  000F68  D0A7               	goto	l5295
  5442  000F6A                     l693:
  5443                           
  5444                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  5445  000F6A  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5446  000F6C  B878               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5447  000F6E  D005               	goto	l694
  5448                           
  5449                           ;Usuaris.c: 145:     i = 0;
  5450  000F70  0E00               	movlw	0
  5451  000F72  6E21               	movwf	_i^0,c
  5452                           
  5453                           ;Usuaris.c: 146:     j = 0;
  5454  000F74  0E00               	movlw	0
  5455  000F76  6E20               	movwf	_j^0,c
  5456                           
  5457                           ;Usuaris.c: 147:    }
  5458  000F78  0012               	return	
  5459  000F7A                     l694:
  5460  000F7A  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5461  000F7C  D004               	goto	l696
  5462                           
  5463                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  5464  000F7E  6850               	setf	_usuariLoguejat^0,c
  5465  000F80                     l5223:
  5466                           
  5467                           ;Usuaris.c: 150:     state = 1;
  5468  000F80  0E01               	movlw	1
  5469  000F82  6E1F               	movwf	UmotorUsers@state^0,c
  5470                           
  5471                           ;Usuaris.c: 151:    }
  5472  000F84  0012               	return	
  5473  000F86                     l696:
  5474  000F86  A878               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5475  000F88  0012               	return	
  5476  000F8A                     u4790:
  5477                           
  5478                           ;Usuaris.c: 153:     state = 2;
  5479  000F8A  0E02               	movlw	2
  5480  000F8C  6E1F               	movwf	UmotorUsers@state^0,c
  5481                           
  5482                           ;Usuaris.c: 155:   break;
  5483  000F8E  0012               	return	
  5484  000F90                     l5227:
  5485                           
  5486                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  5487  000F90  5024               	movf	_numUsuaris^0,w,c
  5488  000F92  5C21               	subwf	_i^0,w,c
  5489  000F94  B0D8               	btfsc	status,0,c
  5490  000F96  D014               	goto	l5237
  5491                           
  5492                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  5493  000F98  0E38               	movlw	low _tmpUsername
  5494  000F9A  6E66               	movwf	compareStrings@a^0,c
  5495  000F9C  5021               	movf	_i^0,w,c
  5496  000F9E  0D17               	mullw	23
  5497  000FA0  0E00               	movlw	low _usuaris
  5498  000FA2  24F3               	addwf	243,w,c
  5499  000FA4  6E67               	movwf	compareStrings@b^0,c
  5500  000FA6  0E01               	movlw	high _usuaris
  5501  000FA8  20F4               	addwfc	prodh,w,c
  5502  000FAA  6E68               	movwf	(compareStrings@b+1)^0,c
  5503  000FAC  EC0B  F00D         	call	_compareStrings	;wreg free
  5504  000FB0  0900               	iorlw	0
  5505  000FB2  A4D8               	btfss	status,2,c
  5506  000FB4  D003               	goto	l5233
  5507                           
  5508                           ;Usuaris.c: 160:      usuariLoguejat = i;
  5509  000FB6  C021  F050         	movff	_i,_usuariLoguejat
  5510                           
  5511                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  5512  000FBA  868A               	bsf	138,3,c	;volatile
  5513  000FBC                     l5233:
  5514                           
  5515                           ;Usuaris.c: 166:     i++;
  5516  000FBC  2A21               	incf	_i^0,f,c
  5517  000FBE  D7E0               	goto	l5223
  5518  000FC0                     l5237:
  5519  000FC0  5024               	movf	_numUsuaris^0,w,c
  5520  000FC2  1821               	xorwf	_i^0,w,c
  5521  000FC4  A4D8               	btfss	status,2,c
  5522  000FC6  0012               	return	
  5523                           
  5524                           ;Usuaris.c: 170:     do_check_exists = 0;
  5525  000FC8  9A78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5526  000FCA                     l5241:
  5527                           
  5528                           ;Usuaris.c: 171:     state = 0;
  5529  000FCA  0E00               	movlw	0
  5530  000FCC  6E1F               	movwf	UmotorUsers@state^0,c
  5531  000FCE  0012               	return	
  5532  000FD0                     l5243:
  5533                           
  5534                           ;Usuaris.c: 176:    if (i != 8) {
  5535  000FD0  0E08               	movlw	8
  5536  000FD2  1821               	xorwf	_i^0,w,c
  5537  000FD4  B4D8               	btfsc	status,2,c
  5538  000FD6  D022               	goto	l5255
  5539                           
  5540                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5541  000FD8  C023  F066         	movff	_indexNextUser,escriureCharEEPROM@pos
  5542  000FDC  5021               	movf	_i^0,w,c
  5543  000FDE  0F38               	addlw	low _tmpUsername
  5544  000FE0  6ED9               	movwf	fsr2l,c
  5545  000FE2  6ADA               	clrf	fsr2h,c
  5546  000FE4  50DF               	movf	indf2,w,c
  5547  000FE6  EC77  F00E         	call	_escriureCharEEPROM
  5548  000FEA  2A23               	incf	_indexNextUser^0,f,c
  5549                           
  5550                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5551  000FEC  5021               	movf	_i^0,w,c
  5552  000FEE  0F38               	addlw	low _tmpUsername
  5553  000FF0  6ED9               	movwf	fsr2l,c
  5554  000FF2  6ADA               	clrf	fsr2h,c
  5555  000FF4  5022               	movf	_indexNextUserStruct^0,w,c
  5556  000FF6  0D17               	mullw	23
  5557  000FF8  0E00               	movlw	low _usuaris
  5558  000FFA  6E6B               	movwf	??_UmotorUsers^0,c
  5559  000FFC  0E01               	movlw	high _usuaris
  5560  000FFE  6E6C               	movwf	(??_UmotorUsers+1)^0,c
  5561  001000  50F3               	movf	243,w,c
  5562  001002  266B               	addwf	??_UmotorUsers^0,f,c
  5563  001004  50F4               	movf	244,w,c
  5564  001006  226C               	addwfc	(??_UmotorUsers+1)^0,f,c
  5565  001008  5021               	movf	_i^0,w,c
  5566  00100A  246B               	addwf	??_UmotorUsers^0,w,c
  5567  00100C  6EE1               	movwf	fsr1l,c
  5568  00100E  0E00               	movlw	0
  5569  001010  206C               	addwfc	(??_UmotorUsers+1)^0,w,c
  5570  001012  6EE2               	movwf	fsr1h,c
  5571  001014  CFDF FFE7          	movff	indf2,indf1
  5572                           
  5573                           ;Usuaris.c: 179:     i++;
  5574  001018  2A21               	incf	_i^0,f,c
  5575  00101A  D7B7               	goto	u4790
  5576  00101C                     l5255:
  5577  00101C  0E08               	movlw	8
  5578  00101E  1821               	xorwf	_i^0,w,c
  5579  001020  A4D8               	btfss	status,2,c
  5580  001022  0012               	return	
  5581                           
  5582                           ;Usuaris.c: 183:     i = 0;
  5583  001024  0E00               	movlw	0
  5584  001026  6E21               	movwf	_i^0,c
  5585                           
  5586                           ;Usuaris.c: 184:     state = 3;
  5587  001028  0E03               	movlw	3
  5588  00102A  6E1F               	movwf	UmotorUsers@state^0,c
  5589  00102C  0012               	return	
  5590  00102E                     l5259:
  5591                           
  5592                           ;Usuaris.c: 188:    if (i != 8) {
  5593  00102E  0E08               	movlw	8
  5594  001030  1821               	xorwf	_i^0,w,c
  5595  001032  B4D8               	btfsc	status,2,c
  5596  001034  D028               	goto	l5271
  5597                           
  5598                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5599  001036  C023  F066         	movff	_indexNextUser,escriureCharEEPROM@pos
  5600  00103A  5021               	movf	_i^0,w,c
  5601  00103C  0FC0               	addlw	low _tmpPassword
  5602  00103E  6ED9               	movwf	fsr2l,c
  5603  001040  6ADA               	clrf	fsr2h,c
  5604  001042  50DF               	movf	indf2,w,c
  5605  001044  EC77  F00E         	call	_escriureCharEEPROM
  5606  001048  2A23               	incf	_indexNextUser^0,f,c
  5607                           
  5608                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5609  00104A  5021               	movf	_i^0,w,c
  5610  00104C  0FC0               	addlw	low _tmpPassword
  5611  00104E  6ED9               	movwf	fsr2l,c
  5612  001050  6ADA               	clrf	fsr2h,c
  5613  001052  5022               	movf	_indexNextUserStruct^0,w,c
  5614  001054  0D17               	mullw	23
  5615  001056  0E00               	movlw	low _usuaris
  5616  001058  6E6B               	movwf	??_UmotorUsers^0,c
  5617  00105A  0E01               	movlw	high _usuaris
  5618  00105C  6E6C               	movwf	(??_UmotorUsers+1)^0,c
  5619  00105E  0E09               	movlw	9
  5620  001060  266B               	addwf	??_UmotorUsers^0,f,c
  5621  001062  0E00               	movlw	0
  5622  001064  226C               	addwfc	(??_UmotorUsers+1)^0,f,c
  5623  001066  50F3               	movf	243,w,c
  5624  001068  266B               	addwf	??_UmotorUsers^0,f,c
  5625  00106A  50F4               	movf	244,w,c
  5626  00106C  226C               	addwfc	(??_UmotorUsers+1)^0,f,c
  5627  00106E  5021               	movf	_i^0,w,c
  5628  001070  246B               	addwf	??_UmotorUsers^0,w,c
  5629  001072  6EE1               	movwf	fsr1l,c
  5630  001074  0E00               	movlw	0
  5631  001076  206C               	addwfc	(??_UmotorUsers+1)^0,w,c
  5632  001078  6EE2               	movwf	fsr1h,c
  5633  00107A  CFDF FFE7          	movff	indf2,indf1
  5634                           
  5635                           ;Usuaris.c: 191:     i++;
  5636  00107E  2A21               	incf	_i^0,f,c
  5637                           
  5638                           ;Usuaris.c: 192:     state = 3;
  5639  001080  0E03               	movlw	3
  5640  001082  6E1F               	movwf	UmotorUsers@state^0,c
  5641                           
  5642                           ;Usuaris.c: 193:    }
  5643  001084  0012               	return	
  5644  001086                     l5271:
  5645  001086  0E08               	movlw	8
  5646  001088  1821               	xorwf	_i^0,w,c
  5647  00108A  A4D8               	btfss	status,2,c
  5648  00108C  0012               	return	
  5649                           
  5650                           ;Usuaris.c: 195:     do_register = 0;
  5651  00108E  9878               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5652                           
  5653                           ;Usuaris.c: 196:     indexNextUser++;
  5654  001090  2A23               	incf	_indexNextUser^0,f,c
  5655                           
  5656                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5657  001092  0E9F               	movlw	159
  5658  001094  1823               	xorwf	_indexNextUser^0,w,c
  5659  001096  A4D8               	btfss	status,2,c
  5660  001098  D002               	goto	l5281
  5661  00109A  0E10               	movlw	16
  5662  00109C  6E23               	movwf	_indexNextUser^0,c
  5663  00109E                     l5281:
  5664                           
  5665                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5666  00109E  2A22               	incf	_indexNextUserStruct^0,f,c
  5667                           
  5668                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5669  0010A0  0E08               	movlw	8
  5670  0010A2  1822               	xorwf	_indexNextUserStruct^0,w,c
  5671  0010A4  A4D8               	btfss	status,2,c
  5672  0010A6  D002               	goto	l5287
  5673  0010A8  0E00               	movlw	0
  5674  0010AA  6E22               	movwf	_indexNextUserStruct^0,c
  5675  0010AC                     l5287:
  5676                           
  5677                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5678  0010AC  0E08               	movlw	8
  5679  0010AE  1824               	xorwf	_numUsuaris^0,w,c
  5680  0010B0  B4D8               	btfsc	status,2,c
  5681  0010B2  D78B               	goto	l5241
  5682  0010B4  2A24               	incf	_numUsuaris^0,f,c
  5683  0010B6  D789               	goto	l5241
  5684  0010B8                     l5295:
  5685  0010B8  501F               	movf	UmotorUsers@state^0,w,c
  5686  0010BA  6E6B               	movwf	??_UmotorUsers^0,c
  5687  0010BC  6A6C               	clrf	(??_UmotorUsers+1)^0,c
  5688                           
  5689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5690                           ; Switch size 1, requested type "simple"
  5691                           ; Number of cases is 1, Range of values is 0 to 0
  5692                           ; switch strategies available:
  5693                           ; Name         Instructions Cycles
  5694                           ; simple_byte            4     3 (average)
  5695                           ;	Chosen strategy is simple_byte
  5696  0010BE  506C               	movf	(??_UmotorUsers+1)^0,w,c
  5697  0010C0  0A00               	xorlw	0	; case 0
  5698  0010C2  A4D8               	btfss	status,2,c
  5699  0010C4  0012               	return	
  5700                           
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 4, Range of values is 0 to 3
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte           13     7 (average)
  5706                           ;	Chosen strategy is simple_byte
  5707  0010C6  506B               	movf	??_UmotorUsers^0,w,c
  5708  0010C8  0A00               	xorlw	0	; case 0
  5709  0010CA  B4D8               	btfsc	status,2,c
  5710  0010CC  D74E               	goto	l693
  5711  0010CE  0A01               	xorlw	1	; case 1
  5712  0010D0  B4D8               	btfsc	status,2,c
  5713  0010D2  D75E               	goto	l5227
  5714  0010D4  0A03               	xorlw	3	; case 2
  5715  0010D6  B4D8               	btfsc	status,2,c
  5716  0010D8  D77B               	goto	l5243
  5717  0010DA  0A01               	xorlw	1	; case 3
  5718  0010DC  A4D8               	btfss	status,2,c
  5719  0010DE  0012               	return	
  5720  0010E0  D7A6               	goto	l5259
  5721  0010E2                     __end_of_UmotorUsers:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _escriureCharEEPROM *****************
  5725 ;; Defined at:
  5726 ;;		line 57 in file "Usuaris.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  c               1    wreg     unsigned char 
  5729 ;;  pos             1    5[COMRAM] unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  c               1    6[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/1
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1
  5741 ;;      Params:         1       0       0
  5742 ;;      Locals:         1       0       0
  5743 ;;      Temps:          0       0       0
  5744 ;;      Totals:         2       0       0
  5745 ;;Total ram usage:        2 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 2
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_UmotorUsers
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text50
  5756  001CEE                     __ptext50:
  5757                           	callstack 0
  5758  001CEE                     _escriureCharEEPROM:
  5759                           	callstack 27
  5760                           
  5761                           ;incstack = 0
  5762                           ;escriureCharEEPROM@c stored from wreg
  5763  001CEE  6E67               	movwf	escriureCharEEPROM@c^0,c
  5764                           
  5765                           ;Usuaris.c: 58:     EEADR = pos;
  5766  001CF0  C066  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5767                           
  5768                           ;Usuaris.c: 59:     EEDATA = c;
  5769  001CF4  C067  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5770                           
  5771                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5772  001CF8  9EA6               	bcf	166,7,c	;volsfr
  5773                           
  5774                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5775  001CFA  9CA6               	bcf	166,6,c	;volsfr
  5776                           
  5777                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5778  001CFC  84A6               	bsf	166,2,c	;volsfr
  5779                           
  5780                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5781  001CFE  9EF2               	bcf	242,7,c	;volatile
  5782                           
  5783                           ;Usuaris.c: 64:     EECON2 = 85;
  5784  001D00  0E55               	movlw	85
  5785  001D02  6EA7               	movwf	167,c	;volsfr
  5786                           
  5787                           ;Usuaris.c: 65:     EECON2 = 170;
  5788  001D04  0EAA               	movlw	170
  5789  001D06  6EA7               	movwf	167,c	;volsfr
  5790                           
  5791                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5792  001D08  82A6               	bsf	166,1,c	;volsfr
  5793  001D0A                     l652:
  5794  001D0A  B2A6               	btfsc	166,1,c	;volsfr
  5795  001D0C  D7FE               	goto	l652
  5796                           
  5797                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5798  001D0E  8EF2               	bsf	242,7,c	;volatile
  5799  001D10  0012               	return		;funcret
  5800  001D12                     __end_of_escriureCharEEPROM:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _compareStrings *****************
  5804 ;; Defined at:
  5805 ;;		line 129 in file "Usuaris.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5808 ;;		 -> tmpUsername(9), 
  5809 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5810 ;;		 -> usuaris.username(9), usuaris(184), 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      unsigned char 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/1
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1
  5822 ;;      Params:         3       0       0
  5823 ;;      Locals:         0       0       0
  5824 ;;      Temps:          2       0       0
  5825 ;;      Totals:         5       0       0
  5826 ;;Total ram usage:        5 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; Hardware stack levels required when called: 2
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_UmotorUsers
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text51
  5837  001A16                     __ptext51:
  5838                           	callstack 0
  5839  001A16                     _compareStrings:
  5840                           	callstack 27
  5841                           
  5842                           ;Usuaris.c: 130:     while (*a){
  5843                           
  5844                           ;incstack = 0
  5845  001A16  D00E               	goto	l4255
  5846  001A18                     l4249:
  5847                           
  5848                           ;Usuaris.c: 131:         if (*a != *b)break;
  5849  001A18  C067  FFD9         	movff	compareStrings@b,fsr2l
  5850  001A1C  C068  FFDA         	movff	compareStrings@b+1,fsr2h
  5851  001A20  5066               	movf	compareStrings@a^0,w,c
  5852  001A22  6EE1               	movwf	fsr1l,c
  5853  001A24  6AE2               	clrf	fsr1h,c
  5854  001A26  50DE               	movf	postinc2,w,c
  5855  001A28  18E6               	xorwf	postinc1,w,c
  5856  001A2A  A4D8               	btfss	status,2,c
  5857  001A2C  D009               	goto	u3290
  5858                           
  5859                           ;Usuaris.c: 132:         a++;
  5860  001A2E  2A66               	incf	compareStrings@a^0,f,c
  5861                           
  5862                           ;Usuaris.c: 133:         b++;
  5863  001A30  4A67               	infsnz	compareStrings@b^0,f,c
  5864  001A32  2A68               	incf	(compareStrings@b+1)^0,f,c
  5865  001A34                     l4255:
  5866                           
  5867                           ;Usuaris.c: 130:     while (*a){
  5868  001A34  5066               	movf	compareStrings@a^0,w,c
  5869  001A36  6ED9               	movwf	fsr2l,c
  5870  001A38  6ADA               	clrf	fsr2h,c
  5871  001A3A  50DF               	movf	indf2,w,c
  5872  001A3C  A4D8               	btfss	status,2,c
  5873  001A3E  D7EC               	goto	l4249
  5874  001A40                     u3290:
  5875                           
  5876                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  5877  001A40  C067  FFD9         	movff	compareStrings@b,fsr2l
  5878  001A44  C068  FFDA         	movff	compareStrings@b+1,fsr2h
  5879  001A48  50DF               	movf	indf2,w,c
  5880  001A4A  6E69               	movwf	??_compareStrings^0,c
  5881  001A4C  5066               	movf	compareStrings@a^0,w,c
  5882  001A4E  6ED9               	movwf	fsr2l,c
  5883  001A50  6ADA               	clrf	fsr2h,c
  5884  001A52  50DF               	movf	indf2,w,c
  5885  001A54  6E6A               	movwf	(??_compareStrings+1)^0,c
  5886  001A56  5069               	movf	??_compareStrings^0,w,c
  5887  001A58  5C6A               	subwf	(??_compareStrings+1)^0,w,c
  5888  001A5A  0012               	return		;funcret
  5889  001A5C                     __end_of_compareStrings:
  5890                           	callstack 0
  5891                           
  5892 ;; *************** function _Uinit *****************
  5893 ;; Defined at:
  5894 ;;		line 70 in file "Usuaris.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  j               1    9[COMRAM] unsigned char 
  5899 ;;  j               1    8[COMRAM] unsigned char 
  5900 ;;  i               1    7[COMRAM] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1
  5910 ;;      Params:         0       0       0
  5911 ;;      Locals:         3       0       0
  5912 ;;      Temps:          2       0       0
  5913 ;;      Totals:         5       0       0
  5914 ;;Total ram usage:        5 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 2
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_main
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text52
  5925  001580                     __ptext52:
  5926                           	callstack 0
  5927  001580                     _Uinit:
  5928                           	callstack 28
  5929                           
  5930                           ;Usuaris.c: 75:     EEADR = 0;
  5931                           
  5932                           ;incstack = 0
  5933  001580  0E00               	movlw	0
  5934  001582  6EA9               	movwf	169,c	;volatile
  5935                           
  5936                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  5937  001584  9EA6               	bcf	166,7,c	;volsfr
  5938                           
  5939                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  5940  001586  9CA6               	bcf	166,6,c	;volsfr
  5941                           
  5942                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  5943  001588  80A6               	bsf	166,0,c	;volsfr
  5944  00158A                     l658:
  5945  00158A  B0A6               	btfsc	166,0,c	;volsfr
  5946  00158C  D7FE               	goto	l658
  5947                           
  5948                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  5949  00158E  CFA8 F024          	movff	4008,_numUsuaris	;volatile
  5950                           
  5951                           ;Usuaris.c: 83:     EEADR++;
  5952  001592  2AA9               	incf	169,f,c	;volatile
  5953                           
  5954                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  5955  001594  9EA6               	bcf	166,7,c	;volsfr
  5956                           
  5957                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  5958  001596  9CA6               	bcf	166,6,c	;volsfr
  5959  001598                     l661:
  5960  001598  B0A6               	btfsc	166,0,c	;volsfr
  5961  00159A  D7FE               	goto	l661
  5962                           
  5963                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  5964  00159C  CFA8 F023          	movff	4008,_indexNextUser	;volatile
  5965                           
  5966                           ;Usuaris.c: 90:     EEADR++;
  5967  0015A0  2AA9               	incf	169,f,c	;volatile
  5968                           
  5969                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  5970  0015A2  0E00               	movlw	0
  5971  0015A4  6E68               	movwf	Uinit@i^0,c
  5972  0015A6  D041               	goto	l2589
  5973  0015A8                     l2559:
  5974                           
  5975                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  5976  0015A8  0E00               	movlw	0
  5977  0015AA  6E69               	movwf	Uinit@j^0,c
  5978  0015AC                     l666:
  5979                           
  5980                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  5981  0015AC  9EA6               	bcf	166,7,c	;volsfr
  5982                           
  5983                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  5984  0015AE  9CA6               	bcf	166,6,c	;volsfr
  5985                           
  5986                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  5987  0015B0  80A6               	bsf	166,0,c	;volsfr
  5988  0015B2                     l668:
  5989  0015B2  B0A6               	btfsc	166,0,c	;volsfr
  5990  0015B4  D7FE               	goto	l668
  5991                           
  5992                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  5993  0015B6  5068               	movf	Uinit@i^0,w,c
  5994  0015B8  0D17               	mullw	23
  5995  0015BA  0E00               	movlw	low _usuaris
  5996  0015BC  6E66               	movwf	??_Uinit^0,c
  5997  0015BE  0E01               	movlw	high _usuaris
  5998  0015C0  6E67               	movwf	(??_Uinit+1)^0,c
  5999  0015C2  50F3               	movf	243,w,c
  6000  0015C4  2666               	addwf	??_Uinit^0,f,c
  6001  0015C6  50F4               	movf	244,w,c
  6002  0015C8  2267               	addwfc	(??_Uinit+1)^0,f,c
  6003  0015CA  5069               	movf	Uinit@j^0,w,c
  6004  0015CC  2466               	addwf	??_Uinit^0,w,c
  6005  0015CE  6ED9               	movwf	fsr2l,c
  6006  0015D0  0E00               	movlw	0
  6007  0015D2  2067               	addwfc	(??_Uinit+1)^0,w,c
  6008  0015D4  6EDA               	movwf	fsr2h,c
  6009  0015D6  CFA8 FFDF          	movff	4008,indf2	;volatile
  6010                           
  6011                           ;Usuaris.c: 99:             EEADR++;
  6012  0015DA  2AA9               	incf	169,f,c	;volatile
  6013                           
  6014                           ;Usuaris.c: 100:         }
  6015  0015DC  2A69               	incf	Uinit@j^0,f,c
  6016  0015DE  0E08               	movlw	8
  6017  0015E0  6469               	cpfsgt	Uinit@j^0,c
  6018  0015E2  D7E4               	goto	l666
  6019                           
  6020                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  6021  0015E4  0E00               	movlw	0
  6022  0015E6  6E6A               	movwf	Uinit@j_1156^0,c
  6023  0015E8                     l671:
  6024                           
  6025                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  6026  0015E8  9EA6               	bcf	166,7,c	;volsfr
  6027                           
  6028                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  6029  0015EA  9CA6               	bcf	166,6,c	;volsfr
  6030                           
  6031                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  6032  0015EC  80A6               	bsf	166,0,c	;volsfr
  6033  0015EE                     l673:
  6034  0015EE  B0A6               	btfsc	166,0,c	;volsfr
  6035  0015F0  D7FE               	goto	l673
  6036                           
  6037                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  6038  0015F2  5068               	movf	Uinit@i^0,w,c
  6039  0015F4  0D17               	mullw	23
  6040  0015F6  0E00               	movlw	low _usuaris
  6041  0015F8  6E66               	movwf	??_Uinit^0,c
  6042  0015FA  0E01               	movlw	high _usuaris
  6043  0015FC  6E67               	movwf	(??_Uinit+1)^0,c
  6044  0015FE  0E09               	movlw	9
  6045  001600  2666               	addwf	??_Uinit^0,f,c
  6046  001602  0E00               	movlw	0
  6047  001604  2267               	addwfc	(??_Uinit+1)^0,f,c
  6048  001606  50F3               	movf	243,w,c
  6049  001608  2666               	addwf	??_Uinit^0,f,c
  6050  00160A  50F4               	movf	244,w,c
  6051  00160C  2267               	addwfc	(??_Uinit+1)^0,f,c
  6052  00160E  506A               	movf	Uinit@j_1156^0,w,c
  6053  001610  2466               	addwf	??_Uinit^0,w,c
  6054  001612  6ED9               	movwf	fsr2l,c
  6055  001614  0E00               	movlw	0
  6056  001616  2067               	addwfc	(??_Uinit+1)^0,w,c
  6057  001618  6EDA               	movwf	fsr2h,c
  6058  00161A  CFA8 FFDF          	movff	4008,indf2	;volatile
  6059                           
  6060                           ;Usuaris.c: 107:             EEADR++;
  6061  00161E  2AA9               	incf	169,f,c	;volatile
  6062                           
  6063                           ;Usuaris.c: 108:         }
  6064  001620  2A6A               	incf	Uinit@j_1156^0,f,c
  6065  001622  0E08               	movlw	8
  6066  001624  646A               	cpfsgt	Uinit@j_1156^0,c
  6067  001626  D7E0               	goto	l671
  6068                           
  6069                           ;Usuaris.c: 109:     }
  6070  001628  2A68               	incf	Uinit@i^0,f,c
  6071  00162A                     l2589:
  6072  00162A  5024               	movf	_numUsuaris^0,w,c
  6073  00162C  5C68               	subwf	Uinit@i^0,w,c
  6074  00162E  B0D8               	btfsc	status,0,c
  6075  001630  0012               	return	
  6076  001632  D7BA               	goto	l2559
  6077  001634                     __end_of_Uinit:
  6078                           	callstack 0
  6079                           
  6080 ;; *************** function _TiInitTimer *****************
  6081 ;; Defined at:
  6082 ;;		line 18 in file "TiTTimer.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      void 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1
  6096 ;;      Params:         0       0       0
  6097 ;;      Locals:         0       0       0
  6098 ;;      Temps:          0       0       0
  6099 ;;      Totals:         0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 2
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_main
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text53
  6111  001B10                     __ptext53:
  6112                           	callstack 0
  6113  001B10                     _TiInitTimer:
  6114                           	callstack 28
  6115                           
  6116                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6117                           
  6118                           ;incstack = 0
  6119  001B10  9ED0               	bcf	208,7,c	;volatile
  6120                           
  6121                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6122  001B12  8EF2               	bsf	242,7,c	;volatile
  6123                           
  6124                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6125  001B14  8CF2               	bsf	242,6,c	;volatile
  6126                           
  6127                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6128  001B16  8AF2               	bsf	242,5,c	;volatile
  6129                           
  6130                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6131  001B18  94F2               	bcf	242,2,c	;volatile
  6132                           
  6133                           ;TiTTimer.c: 25:     T0CON = 136;
  6134  001B1A  0E88               	movlw	136
  6135  001B1C  6ED5               	movwf	213,c	;volatile
  6136                           
  6137                           ;TiTTimer.c: 27:     TMR0H = 223;
  6138  001B1E  0EDF               	movlw	223
  6139  001B20  6ED7               	movwf	215,c	;volatile
  6140                           
  6141                           ;TiTTimer.c: 28:     TMR0L = 148;
  6142  001B22  0E94               	movlw	148
  6143  001B24  6ED6               	movwf	214,c	;volatile
  6144                           
  6145                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6146  001B26  8ED5               	bsf	213,7,c	;volatile
  6147                           
  6148                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6149  001B28  0E00               	movlw	0
  6150  001B2A  6E2B               	movwf	_counter^0,c
  6151  001B2C                     l4363:
  6152  001B2C  0E07               	movlw	7
  6153  001B2E  642B               	cpfsgt	_counter^0,c
  6154  001B30  D001               	goto	l4367
  6155  001B32  0012               	return	
  6156  001B34                     l4367:
  6157                           
  6158                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6159  001B34  502B               	movf	_counter^0,w,c
  6160  001B36  0D03               	mullw	3
  6161  001B38  50F3               	movf	243,w,c
  6162  001B3A  0FAA               	addlw	low (_s_Timers+2)
  6163  001B3C  6ED9               	movwf	fsr2l,c
  6164  001B3E  6ADA               	clrf	fsr2h,c
  6165  001B40  0E00               	movlw	0
  6166  001B42  6EDF               	movwf	indf2,c
  6167                           
  6168                           ;TiTTimer.c: 33:     }
  6169  001B44  2A2B               	incf	_counter^0,f,c
  6170  001B46  D7F2               	goto	l4363
  6171  001B48                     __end_of_TiInitTimer:
  6172                           	callstack 0
  6173                           
  6174 ;; *************** function _TeTeclat *****************
  6175 ;; Defined at:
  6176 ;;		line 22 in file "TeTeclat.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/1
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1
  6190 ;;      Params:         0       0       0
  6191 ;;      Locals:         0       0       0
  6192 ;;      Temps:          3       0       0
  6193 ;;      Totals:         3       0       0
  6194 ;;Total ram usage:        3 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 3
  6197 ;; This function calls:
  6198 ;;		_MsetNovaTecla
  6199 ;;		_SsetNovaTecla
  6200 ;;		_TiGetTics
  6201 ;;		_TiResetTics
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text54
  6208  0010E2                     __ptext54:
  6209                           	callstack 0
  6210  0010E2                     _TeTeclat:
  6211                           	callstack 27
  6212                           
  6213                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6214                           
  6215                           ;incstack = 0
  6216  0010E2  A083               	btfss	131,0,c	;volatile
  6217  0010E4  D003               	goto	u5290
  6218  0010E6  6A6D               	clrf	??_TeTeclat^0,c
  6219  0010E8  2A6D               	incf	??_TeTeclat^0,f,c
  6220  0010EA  D001               	goto	u5298
  6221  0010EC                     u5290:
  6222  0010EC  6A6D               	clrf	??_TeTeclat^0,c
  6223  0010EE                     u5298:
  6224  0010EE  A283               	btfss	131,1,c	;volatile
  6225  0010F0  D002               	goto	u5300
  6226  0010F2  0E01               	movlw	1
  6227  0010F4  D001               	goto	u5306
  6228  0010F6                     u5300:
  6229  0010F6  0E00               	movlw	0
  6230  0010F8                     u5306:
  6231  0010F8  0D02               	mullw	2
  6232  0010FA  CFF3 F06E          	movff	prodl,??_TeTeclat+1
  6233  0010FE  A483               	btfss	131,2,c	;volatile
  6234  001100  D002               	goto	u5310
  6235  001102  0E01               	movlw	1
  6236  001104  D001               	goto	u5316
  6237  001106                     u5310:
  6238  001106  0E00               	movlw	0
  6239  001108                     u5316:
  6240  001108  0D03               	mullw	3
  6241  00110A  CFF3 F06F          	movff	prodl,??_TeTeclat+2
  6242  00110E  A683               	btfss	131,3,c	;volatile
  6243  001110  D002               	goto	u5320
  6244  001112  0E01               	movlw	1
  6245  001114  D001               	goto	u5326
  6246  001116                     u5320:
  6247  001116  0E00               	movlw	0
  6248  001118                     u5326:
  6249  001118  0D04               	mullw	4
  6250  00111A  50F3               	movf	243,w,c
  6251  00111C  246F               	addwf	(??_TeTeclat+2)^0,w,c
  6252  00111E  246E               	addwf	(??_TeTeclat+1)^0,w,c
  6253  001120  246D               	addwf	??_TeTeclat^0,w,c
  6254  001122  6E2C               	movwf	TeTeclat@files^0,c
  6255                           
  6256                           ;TeTeclat.c: 27:  switch(state) {
  6257  001124  D06F               	goto	l5571
  6258  001126                     l5497:
  6259                           
  6260                           ;TeTeclat.c: 29:    if (files==0) {
  6261  001126  502C               	movf	TeTeclat@files^0,w,c
  6262  001128  A4D8               	btfss	status,2,c
  6263  00112A  D007               	goto	l5505
  6264                           
  6265                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  6266  00112C  888C               	bsf	140,4,c	;volatile
  6267                           
  6268                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  6269  00112E  9A8C               	bcf	140,5,c	;volatile
  6270                           
  6271                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  6272  001130  9C8C               	bcf	140,6,c	;volatile
  6273                           
  6274                           ;TeTeclat.c: 33:     cols=0;
  6275  001132  0E00               	movlw	0
  6276  001134  6E2D               	movwf	TeTeclat@cols^0,c
  6277  001136                     l5503:
  6278                           
  6279                           ;TeTeclat.c: 34:     state++;
  6280  001136  2A2E               	incf	TeTeclat@state^0,f,c
  6281                           
  6282                           ;TeTeclat.c: 35:    }
  6283  001138  0012               	return	
  6284  00113A                     l5505:
  6285  00113A  502C               	movf	TeTeclat@files^0,w,c
  6286  00113C  B4D8               	btfsc	status,2,c
  6287  00113E  0012               	return	
  6288                           
  6289                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  6290  001140  502F               	movf	_tiTeclat^0,w,c
  6291  001142  ECCB  F00E         	call	_TiResetTics
  6292  001146                     l5509:
  6293                           
  6294                           ;TeTeclat.c: 38:     state = 3;
  6295  001146  0E03               	movlw	3
  6296  001148  6E2E               	movwf	TeTeclat@state^0,c
  6297  00114A  0012               	return	
  6298  00114C                     l5511:
  6299                           
  6300                           ;TeTeclat.c: 42:    if (files==0) {
  6301  00114C  502C               	movf	TeTeclat@files^0,w,c
  6302  00114E  A4D8               	btfss	status,2,c
  6303  001150  D005               	goto	l5519
  6304                           
  6305                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  6306  001152  988C               	bcf	140,4,c	;volatile
  6307                           
  6308                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  6309  001154  8A8C               	bsf	140,5,c	;volatile
  6310                           
  6311                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  6312  001156  9C8C               	bcf	140,6,c	;volatile
  6313                           
  6314                           ;TeTeclat.c: 46:     cols=1;
  6315  001158  0E01               	movlw	1
  6316  00115A  D7EC               	goto	L3
  6317  00115C                     l5519:
  6318  00115C  502C               	movf	TeTeclat@files^0,w,c
  6319  00115E  B4D8               	btfsc	status,2,c
  6320  001160  0012               	return	
  6321                           
  6322                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  6323  001162  502F               	movf	_tiTeclat^0,w,c
  6324  001164  ECCB  F00E         	call	_TiResetTics
  6325  001168  D7EE               	goto	l5509
  6326  00116A                     l5525:
  6327                           
  6328                           ;TeTeclat.c: 55:    if (files==0) {
  6329  00116A  502C               	movf	TeTeclat@files^0,w,c
  6330  00116C  A4D8               	btfss	status,2,c
  6331  00116E  D008               	goto	l5531
  6332                           
  6333                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  6334  001170  988C               	bcf	140,4,c	;volatile
  6335                           
  6336                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  6337  001172  9A8C               	bcf	140,5,c	;volatile
  6338                           
  6339                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  6340  001174  8C8C               	bsf	140,6,c	;volatile
  6341                           
  6342                           ;TeTeclat.c: 59:     cols=2;
  6343  001176  0E02               	movlw	2
  6344  001178  6E2D               	movwf	TeTeclat@cols^0,c
  6345                           
  6346                           ;TeTeclat.c: 60:     state = 0;
  6347  00117A  0E00               	movlw	0
  6348  00117C  6E2E               	movwf	TeTeclat@state^0,c
  6349                           
  6350                           ;TeTeclat.c: 61:    }
  6351  00117E  0012               	return	
  6352  001180                     l5531:
  6353  001180  502C               	movf	TeTeclat@files^0,w,c
  6354  001182  B4D8               	btfsc	status,2,c
  6355  001184  0012               	return	
  6356                           
  6357                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  6358  001186  502F               	movf	_tiTeclat^0,w,c
  6359  001188  ECCB  F00E         	call	_TiResetTics
  6360  00118C  D7D4               	goto	l5503
  6361  00118E                     l5537:
  6362                           
  6363                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  6364  00118E  502F               	movf	_tiTeclat^0,w,c
  6365  001190  EC39  F00E         	call	_TiGetTics
  6366  001194  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  6367  001196  0012               	return	
  6368  001198  D7CE               	goto	l5503
  6369  00119A                     l5541:
  6370                           
  6371                           ;TeTeclat.c: 73:    if (files==0) {
  6372  00119A  502C               	movf	TeTeclat@files^0,w,c
  6373  00119C  A4D8               	btfss	status,2,c
  6374  00119E  D003               	goto	l5545
  6375                           
  6376                           ;TeTeclat.c: 74:     state = 1;
  6377  0011A0  0E01               	movlw	1
  6378  0011A2  6E2E               	movwf	TeTeclat@state^0,c
  6379                           
  6380                           ;TeTeclat.c: 75:    }
  6381  0011A4  0012               	return	
  6382  0011A6                     l5545:
  6383  0011A6  502C               	movf	TeTeclat@files^0,w,c
  6384  0011A8  B4D8               	btfsc	status,2,c
  6385  0011AA  0012               	return	
  6386                           
  6387                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  6388  0011AC  502C               	movf	TeTeclat@files^0,w,c
  6389  0011AE  0D03               	mullw	3
  6390  0011B0  50F3               	movf	243,w,c
  6391  0011B2  0F86               	addlw	low (_teclaPremuda+253)
  6392  0011B4  242D               	addwf	TeTeclat@cols^0,w,c
  6393  0011B6  6ED9               	movwf	fsr2l,c
  6394  0011B8  6ADA               	clrf	fsr2h,c
  6395  0011BA  50DF               	movf	indf2,w,c
  6396  0011BC  EC66  F00F         	call	_MsetNovaTecla
  6397                           
  6398                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  6399  0011C0  502C               	movf	TeTeclat@files^0,w,c
  6400  0011C2  0D03               	mullw	3
  6401  0011C4  50F3               	movf	243,w,c
  6402  0011C6  0F86               	addlw	low (_teclaPremuda+253)
  6403  0011C8  242D               	addwf	TeTeclat@cols^0,w,c
  6404  0011CA  6ED9               	movwf	fsr2l,c
  6405  0011CC  6ADA               	clrf	fsr2h,c
  6406  0011CE  50DF               	movf	indf2,w,c
  6407  0011D0  EC62  F00F         	call	_SsetNovaTecla
  6408  0011D4  D7B0               	goto	l5503
  6409  0011D6                     l5551:
  6410                           
  6411                           ;TeTeclat.c: 84:    if (files==0) {
  6412  0011D6  502C               	movf	TeTeclat@files^0,w,c
  6413  0011D8  A4D8               	btfss	status,2,c
  6414  0011DA  0012               	return	
  6415                           
  6416                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  6417  0011DC  502F               	movf	_tiTeclat^0,w,c
  6418  0011DE  ECCB  F00E         	call	_TiResetTics
  6419  0011E2  D7A9               	goto	l5503
  6420  0011E4                     l5557:
  6421                           
  6422                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  6423  0011E4  502F               	movf	_tiTeclat^0,w,c
  6424  0011E6  EC39  F00E         	call	_TiGetTics
  6425  0011EA  D7D4               	goto	L4
  6426  0011EC                     l5561:
  6427                           
  6428                           ;TeTeclat.c: 95:    if (files!=0) {
  6429  0011EC  502C               	movf	TeTeclat@files^0,w,c
  6430  0011EE  B4D8               	btfsc	status,2,c
  6431  0011F0  D003               	goto	l5565
  6432                           
  6433                           ;TeTeclat.c: 96:     state = 5;
  6434  0011F2  0E05               	movlw	5
  6435  0011F4  6E2E               	movwf	TeTeclat@state^0,c
  6436                           
  6437                           ;TeTeclat.c: 97:    }
  6438  0011F6  0012               	return	
  6439  0011F8                     l5565:
  6440  0011F8  502C               	movf	TeTeclat@files^0,w,c
  6441  0011FA  A4D8               	btfss	status,2,c
  6442  0011FC  0012               	return	
  6443                           
  6444                           ;TeTeclat.c: 99:     state = 0;
  6445  0011FE  0E00               	movlw	0
  6446  001200  6E2E               	movwf	TeTeclat@state^0,c
  6447  001202  0012               	return	
  6448  001204                     l5571:
  6449  001204  502E               	movf	TeTeclat@state^0,w,c
  6450  001206  6E6D               	movwf	??_TeTeclat^0,c
  6451  001208  6A6E               	clrf	(??_TeTeclat+1)^0,c
  6452                           
  6453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6454                           ; Switch size 1, requested type "simple"
  6455                           ; Number of cases is 1, Range of values is 0 to 0
  6456                           ; switch strategies available:
  6457                           ; Name         Instructions Cycles
  6458                           ; simple_byte            4     3 (average)
  6459                           ;	Chosen strategy is simple_byte
  6460  00120A  506E               	movf	(??_TeTeclat+1)^0,w,c
  6461  00120C  0A00               	xorlw	0	; case 0
  6462  00120E  A4D8               	btfss	status,2,c
  6463  001210  0012               	return	
  6464                           
  6465                           ; Switch size 1, requested type "simple"
  6466                           ; Number of cases is 8, Range of values is 0 to 7
  6467                           ; switch strategies available:
  6468                           ; Name         Instructions Cycles
  6469                           ; simple_byte           25    13 (average)
  6470                           ;	Chosen strategy is simple_byte
  6471  001212  506D               	movf	??_TeTeclat^0,w,c
  6472  001214  0A00               	xorlw	0	; case 0
  6473  001216  B4D8               	btfsc	status,2,c
  6474  001218  D786               	goto	l5497
  6475  00121A  0A01               	xorlw	1	; case 1
  6476  00121C  B4D8               	btfsc	status,2,c
  6477  00121E  D796               	goto	l5511
  6478  001220  0A03               	xorlw	3	; case 2
  6479  001222  B4D8               	btfsc	status,2,c
  6480  001224  D7A2               	goto	l5525
  6481  001226  0A01               	xorlw	1	; case 3
  6482  001228  B4D8               	btfsc	status,2,c
  6483  00122A  D7B1               	goto	l5537
  6484  00122C  0A07               	xorlw	7	; case 4
  6485  00122E  B4D8               	btfsc	status,2,c
  6486  001230  D7B4               	goto	l5541
  6487  001232  0A01               	xorlw	1	; case 5
  6488  001234  B4D8               	btfsc	status,2,c
  6489  001236  D7CF               	goto	l5551
  6490  001238  0A03               	xorlw	3	; case 6
  6491  00123A  B4D8               	btfsc	status,2,c
  6492  00123C  D7D3               	goto	l5557
  6493  00123E  0A01               	xorlw	1	; case 7
  6494  001240  A4D8               	btfss	status,2,c
  6495  001242  0012               	return	
  6496  001244  D7D3               	goto	l5561
  6497  001246                     __end_of_TeTeclat:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _SsetNovaTecla *****************
  6501 ;; Defined at:
  6502 ;;		line 126 in file "Ssms.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  tecla           1    wreg     unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  tecla           1    5[COMRAM] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/1
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1
  6516 ;;      Params:         0       0       0
  6517 ;;      Locals:         1       0       0
  6518 ;;      Temps:          0       0       0
  6519 ;;      Totals:         1       0       0
  6520 ;;Total ram usage:        1 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 2
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_TeTeclat
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text55
  6531  001EC4                     __ptext55:
  6532                           	callstack 0
  6533  001EC4                     _SsetNovaTecla:
  6534                           	callstack 27
  6535                           
  6536                           ;incstack = 0
  6537                           ;SsetNovaTecla@tecla stored from wreg
  6538  001EC4  6E66               	movwf	SsetNovaTecla@tecla^0,c
  6539                           
  6540                           ;Ssms.c: 127:     novaTecla = tecla;
  6541  001EC6  C066  F056         	movff	SsetNovaTecla@tecla,_novaTecla
  6542  001ECA  0012               	return		;funcret
  6543  001ECC                     __end_of_SsetNovaTecla:
  6544                           	callstack 0
  6545                           
  6546 ;; *************** function _MsetNovaTecla *****************
  6547 ;; Defined at:
  6548 ;;		line 29 in file "Menu.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  tecla           1    wreg     unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  tecla           1    5[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/1
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1
  6562 ;;      Params:         0       0       0
  6563 ;;      Locals:         1       0       0
  6564 ;;      Temps:          0       0       0
  6565 ;;      Totals:         1       0       0
  6566 ;;Total ram usage:        1 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 2
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_TeTeclat
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text56
  6577  001ECC                     __ptext56:
  6578                           	callstack 0
  6579  001ECC                     _MsetNovaTecla:
  6580                           	callstack 27
  6581                           
  6582                           ;incstack = 0
  6583                           ;MsetNovaTecla@tecla stored from wreg
  6584  001ECC  6E66               	movwf	MsetNovaTecla@tecla^0,c
  6585                           
  6586                           ;Menu.c: 30:     NovaTecla = tecla;
  6587  001ECE  C066  F053         	movff	MsetNovaTecla@tecla,_NovaTecla
  6588  001ED2  0012               	return		;funcret
  6589  001ED4                     __end_of_MsetNovaTecla:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _TeInit *****************
  6593 ;; Defined at:
  6594 ;;		line 18 in file "TeTeclat.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1
  6608 ;;      Params:         0       0       0
  6609 ;;      Locals:         0       0       0
  6610 ;;      Temps:          0       0       0
  6611 ;;      Totals:         0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 3
  6615 ;; This function calls:
  6616 ;;		_TiGetTimer
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text57
  6623  001ED4                     __ptext57:
  6624                           	callstack 0
  6625  001ED4                     _TeInit:
  6626                           	callstack 27
  6627                           
  6628                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  6629                           
  6630                           ;incstack = 0
  6631  001ED4  EC6B  F00D         	call	_TiGetTimer	;wreg free
  6632  001ED8  6E2F               	movwf	_tiTeclat^0,c
  6633  001EDA  0012               	return		;funcret
  6634  001EDC                     __end_of_TeInit:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _Sinit *****************
  6638 ;; Defined at:
  6639 ;;		line 18 in file "Ssms.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1
  6653 ;;      Params:         0       0       0
  6654 ;;      Locals:         0       0       0
  6655 ;;      Temps:          0       0       0
  6656 ;;      Totals:         0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 3
  6660 ;; This function calls:
  6661 ;;		_TiGetTimer
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text58
  6668  001EDC                     __ptext58:
  6669                           	callstack 0
  6670  001EDC                     _Sinit:
  6671                           	callstack 27
  6672                           
  6673                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6674                           
  6675                           ;incstack = 0
  6676  001EDC  EC6B  F00D         	call	_TiGetTimer	;wreg free
  6677  001EE0  6E55               	movwf	_timerSMS^0,c
  6678  001EE2  0012               	return		;funcret
  6679  001EE4                     __end_of_Sinit:
  6680                           	callstack 0
  6681                           
  6682 ;; *************** function _SMotor *****************
  6683 ;; Defined at:
  6684 ;;		line 22 in file "Ssms.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1
  6698 ;;      Params:         0       0       0
  6699 ;;      Locals:         0       0       0
  6700 ;;      Temps:          2       0       0
  6701 ;;      Totals:         2       0       0
  6702 ;;Total ram usage:        2 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 3
  6705 ;; This function calls:
  6706 ;;		_MNovaLletra
  6707 ;;		_TiGetTics
  6708 ;;		_TiResetTics
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text59
  6715  000D6C                     __ptext59:
  6716                           	callstack 0
  6717  000D6C                     _SMotor:
  6718                           	callstack 27
  6719                           
  6720                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6721                           
  6722                           ;incstack = 0
  6723  000D6C  D0DF               	goto	l4535
  6724  000D6E                     l4379:
  6725                           
  6726                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6727  000D6E  2856               	incf	_novaTecla^0,w,c
  6728  000D70  A4D8               	btfss	status,2,c
  6729  000D72  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6730  000D74  D006               	goto	l4387
  6731                           
  6732                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6733  000D76  5055               	movf	_timerSMS^0,w,c
  6734  000D78  ECCB  F00E         	call	_TiResetTics
  6735                           
  6736                           ;Ssms.c: 29:     state = 3;
  6737  000D7C  0E03               	movlw	3
  6738  000D7E  6E30               	movwf	SMotor@state^0,c
  6739                           
  6740                           ;Ssms.c: 30:    }
  6741  000D80  0012               	return	
  6742  000D82                     l4387:
  6743  000D82  2856               	incf	_novaTecla^0,w,c
  6744  000D84  A4D8               	btfss	status,2,c
  6745  000D86  0012               	return	
  6746  000D88  5055               	movf	_timerSMS^0,w,c
  6747  000D8A  EC39  F00E         	call	_TiGetTics
  6748  000D8E  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  6749  000D90  0012               	return	
  6750  000D92  0E5A               	movlw	90
  6751  000D94  5C66               	subwf	?_TiGetTics^0,w,c
  6752  000D96  0E02               	movlw	2
  6753  000D98  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  6754  000D9A  A0D8               	btfss	status,0,c
  6755  000D9C  0012               	return	
  6756  000D9E  2857               	incf	_lletraASCII^0,w,c
  6757  000DA0  B4D8               	btfsc	status,2,c
  6758  000DA2  0012               	return	
  6759  000DA4  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6760  000DA6  0012               	return	
  6761                           
  6762                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6763  000DA8  5057               	movf	_lletraASCII^0,w,c
  6764  000DAA  EC72  F00F         	call	_MNovaLletra
  6765                           
  6766                           ;Ssms.c: 33:     lletraASCII = -1;
  6767  000DAE  6857               	setf	_lletraASCII^0,c
  6768                           
  6769                           ;Ssms.c: 34:     ultimaTecla = -1;
  6770  000DB0  6854               	setf	_ultimaTecla^0,c
  6771                           
  6772                           ;Ssms.c: 35:     zeroTecla = 0;
  6773  000DB2  0E00               	movlw	0
  6774  000DB4  6E31               	movwf	_zeroTecla^0,c
  6775  000DB6                     l4403:
  6776                           
  6777                           ;Ssms.c: 36:     state = 0;
  6778  000DB6  0E00               	movlw	0
  6779  000DB8  6E30               	movwf	SMotor@state^0,c
  6780  000DBA  0012               	return	
  6781  000DBC                     l4405:
  6782                           
  6783                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6784  000DBC  5054               	movf	_ultimaTecla^0,w,c
  6785  000DBE  1856               	xorwf	_novaTecla^0,w,c
  6786  000DC0  A4D8               	btfss	status,2,c
  6787  000DC2  D011               	goto	l4415
  6788  000DC4  5055               	movf	_timerSMS^0,w,c
  6789  000DC6  EC39  F00E         	call	_TiGetTics
  6790  000DCA  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  6791  000DCC  D006               	goto	u3460
  6792  000DCE  0E5A               	movlw	90
  6793  000DD0  5C66               	subwf	?_TiGetTics^0,w,c
  6794  000DD2  0E02               	movlw	2
  6795  000DD4  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  6796  000DD6  B0D8               	btfsc	status,0,c
  6797  000DD8  D006               	goto	l4415
  6798  000DDA                     u3460:
  6799                           
  6800                           ;Ssms.c: 41:     novaTecla = -1;
  6801  000DDA  6856               	setf	_novaTecla^0,c
  6802                           
  6803                           ;Ssms.c: 42:     sumaPulsacions++;
  6804  000DDC  2A32               	incf	_sumaPulsacions^0,f,c
  6805                           
  6806                           ;Ssms.c: 43:     lletraASCII++;
  6807  000DDE  2A57               	incf	_lletraASCII^0,f,c
  6808                           
  6809                           ;Ssms.c: 44:     state = 2;
  6810  000DE0  0E02               	movlw	2
  6811  000DE2  6E30               	movwf	SMotor@state^0,c
  6812                           
  6813                           ;Ssms.c: 45:    }
  6814  000DE4  0012               	return	
  6815  000DE6                     l4415:
  6816  000DE6  2856               	incf	_novaTecla^0,w,c
  6817  000DE8  B4D8               	btfsc	status,2,c
  6818  000DEA  0012               	return	
  6819  000DEC  5054               	movf	_ultimaTecla^0,w,c
  6820  000DEE  1856               	xorwf	_novaTecla^0,w,c
  6821  000DF0  B4D8               	btfsc	status,2,c
  6822  000DF2  0012               	return	
  6823                           
  6824                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6825  000DF4  5057               	movf	_lletraASCII^0,w,c
  6826  000DF6  EC72  F00F         	call	_MNovaLletra
  6827                           
  6828                           ;Ssms.c: 48:     if(novaTecla != 0){
  6829  000DFA  5056               	movf	_novaTecla^0,w,c
  6830  000DFC  B4D8               	btfsc	status,2,c
  6831  000DFE  D006               	goto	l4427
  6832                           
  6833                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6834  000E00  5056               	movf	_novaTecla^0,w,c
  6835  000E02  0F7E               	addlw	low (_lletraInici+254)
  6836  000E04  6ED9               	movwf	fsr2l,c
  6837  000E06  6ADA               	clrf	fsr2h,c
  6838  000E08  50DF               	movf	indf2,w,c
  6839  000E0A  D001               	goto	L11
  6840  000E0C                     l4427:
  6841                           
  6842                           ;Ssms.c: 52:       lletraASCII = '0';
  6843  000E0C  0E30               	movlw	48
  6844  000E0E                     L11:
  6845  000E0E  6E57               	movwf	_lletraASCII^0,c
  6846                           
  6847                           ;Ssms.c: 53:       zeroTecla=0;
  6848  000E10  0E00               	movlw	0
  6849  000E12  6E31               	movwf	_zeroTecla^0,c
  6850                           
  6851                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6852  000E14  C056  F054         	movff	_novaTecla,_ultimaTecla
  6853                           
  6854                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6855  000E18  0E00               	movlw	0
  6856  000E1A  6E32               	movwf	_sumaPulsacions^0,c
  6857                           
  6858                           ;Ssms.c: 57:     novaTecla = -1;
  6859  000E1C  6856               	setf	_novaTecla^0,c
  6860                           
  6861                           ;Ssms.c: 58:     state = 0;
  6862  000E1E  0E00               	movlw	0
  6863  000E20  6E30               	movwf	SMotor@state^0,c
  6864  000E22  0012               	return	
  6865  000E24                     l4433:
  6866                           
  6867                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6868  000E24  0E07               	movlw	7
  6869  000E26  1854               	xorwf	_ultimaTecla^0,w,c
  6870  000E28  B4D8               	btfsc	status,2,c
  6871  000E2A  D00A               	goto	l4441
  6872  000E2C  0E09               	movlw	9
  6873  000E2E  1854               	xorwf	_ultimaTecla^0,w,c
  6874  000E30  B4D8               	btfsc	status,2,c
  6875  000E32  D006               	goto	l4441
  6876  000E34  5054               	movf	_ultimaTecla^0,w,c
  6877  000E36  B4D8               	btfsc	status,2,c
  6878  000E38  D003               	goto	l4441
  6879                           
  6880                           ;Ssms.c: 63:     state = 5;
  6881  000E3A  0E05               	movlw	5
  6882  000E3C  6E30               	movwf	SMotor@state^0,c
  6883                           
  6884                           ;Ssms.c: 64:    }
  6885  000E3E  0012               	return	
  6886  000E40                     l4441:
  6887  000E40  0E07               	movlw	7
  6888  000E42  1854               	xorwf	_ultimaTecla^0,w,c
  6889  000E44  B4D8               	btfsc	status,2,c
  6890  000E46  D004               	goto	u3540
  6891  000E48  0E09               	movlw	9
  6892  000E4A  1854               	xorwf	_ultimaTecla^0,w,c
  6893  000E4C  A4D8               	btfss	status,2,c
  6894  000E4E  D003               	goto	l4447
  6895  000E50                     u3540:
  6896                           
  6897                           ;Ssms.c: 66:     state = 6;
  6898  000E50  0E06               	movlw	6
  6899  000E52  6E30               	movwf	SMotor@state^0,c
  6900                           
  6901                           ;Ssms.c: 67:    }
  6902  000E54  0012               	return	
  6903  000E56                     l4447:
  6904  000E56  5054               	movf	_ultimaTecla^0,w,c
  6905  000E58  A4D8               	btfss	status,2,c
  6906  000E5A  0012               	return	
  6907                           
  6908                           ;Ssms.c: 69:     zeroTecla++;
  6909  000E5C  2A31               	incf	_zeroTecla^0,f,c
  6910                           
  6911                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6912  000E5E  0E02               	movlw	2
  6913  000E60  1831               	xorwf	_zeroTecla^0,w,c
  6914  000E62  A4D8               	btfss	status,2,c
  6915  000E64  D002               	goto	l4455
  6916  000E66  0E00               	movlw	0
  6917  000E68  6E31               	movwf	_zeroTecla^0,c
  6918  000E6A                     l4455:
  6919                           
  6920                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  6921  000E6A  5031               	movf	_zeroTecla^0,w,c
  6922  000E6C  0F45               	addlw	low _arrayZero
  6923  000E6E  6ED9               	movwf	fsr2l,c
  6924  000E70  6ADA               	clrf	fsr2h,c
  6925  000E72  50DF               	movf	indf2,w,c
  6926  000E74  D04B               	goto	L6
  6927  000E76                     l4459:
  6928                           
  6929                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  6930  000E76  5056               	movf	_novaTecla^0,w,c
  6931  000E78  0A80               	xorlw	128
  6932  000E7A  0F7E               	addlw	-130
  6933  000E7C  B0D8               	btfsc	status,0,c
  6934  000E7E  D003               	goto	u3580
  6935  000E80  5056               	movf	_novaTecla^0,w,c
  6936  000E82  A4D8               	btfss	status,2,c
  6937  000E84  D008               	goto	l4467
  6938  000E86                     u3580:
  6939  000E86  5056               	movf	_novaTecla^0,w,c
  6940  000E88  0A80               	xorlw	128
  6941  000E8A  0F76               	addlw	-138
  6942  000E8C  B0D8               	btfsc	status,0,c
  6943  000E8E  D003               	goto	l4467
  6944                           
  6945                           ;Ssms.c: 77:     state = 1;
  6946  000E90  0E01               	movlw	1
  6947  000E92  6E30               	movwf	SMotor@state^0,c
  6948                           
  6949                           ;Ssms.c: 78:    }
  6950  000E94  0012               	return	
  6951  000E96                     l4467:
  6952  000E96  5056               	movf	_novaTecla^0,w,c
  6953  000E98  B4D8               	btfsc	status,2,c
  6954  000E9A  D00E               	goto	l4479
  6955  000E9C  5056               	movf	_novaTecla^0,w,c
  6956  000E9E  0A80               	xorlw	128
  6957  000EA0  0F7E               	addlw	-130
  6958  000EA2  B0D8               	btfsc	status,0,c
  6959  000EA4  D009               	goto	l4479
  6960  000EA6  2857               	incf	_lletraASCII^0,w,c
  6961  000EA8  A4D8               	btfss	status,2,c
  6962  000EAA  D006               	goto	l4479
  6963                           
  6964                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  6965  000EAC  5056               	movf	_novaTecla^0,w,c
  6966  000EAE  0F30               	addlw	48
  6967  000EB0  EC72  F00F         	call	_MNovaLletra
  6968  000EB4                     l4475:
  6969                           
  6970                           ;Ssms.c: 81:     novaTecla = -1;
  6971  000EB4  6856               	setf	_novaTecla^0,c
  6972  000EB6  D77F               	goto	l4403
  6973  000EB8                     l4479:
  6974  000EB8  5056               	movf	_novaTecla^0,w,c
  6975  000EBA  B4D8               	btfsc	status,2,c
  6976  000EBC  0012               	return	
  6977  000EBE  5056               	movf	_novaTecla^0,w,c
  6978  000EC0  0A80               	xorlw	128
  6979  000EC2  0F7E               	addlw	-130
  6980  000EC4  B0D8               	btfsc	status,0,c
  6981  000EC6  0012               	return	
  6982  000EC8  2857               	incf	_lletraASCII^0,w,c
  6983  000ECA  B4D8               	btfsc	status,2,c
  6984  000ECC  0012               	return	
  6985                           
  6986                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  6987  000ECE  5057               	movf	_lletraASCII^0,w,c
  6988  000ED0  EC72  F00F         	call	_MNovaLletra
  6989                           
  6990                           ;Ssms.c: 86:     lletraASCII = -1;
  6991  000ED4  6857               	setf	_lletraASCII^0,c
  6992                           
  6993                           ;Ssms.c: 87:     state = 4;
  6994  000ED6  0E04               	movlw	4
  6995  000ED8  6E30               	movwf	SMotor@state^0,c
  6996  000EDA  0012               	return	
  6997  000EDC                     l4491:
  6998                           
  6999                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  7000  000EDC  5056               	movf	_novaTecla^0,w,c
  7001  000EDE  0F30               	addlw	48
  7002  000EE0  EC72  F00F         	call	_MNovaLletra
  7003  000EE4  D7E7               	goto	l4475
  7004  000EE6                     l4497:
  7005                           
  7006                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  7007  000EE6  0E04               	movlw	4
  7008  000EE8  1832               	xorwf	_sumaPulsacions^0,w,c
  7009  000EEA  A4D8               	btfss	status,2,c
  7010  000EEC  D009               	goto	l4505
  7011  000EEE                     u3660:
  7012                           
  7013                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  7014  000EEE  5054               	movf	_ultimaTecla^0,w,c
  7015  000EF0  0F7E               	addlw	low (_lletraInici+254)
  7016  000EF2  6ED9               	movwf	fsr2l,c
  7017  000EF4  6ADA               	clrf	fsr2h,c
  7018  000EF6  50DF               	movf	indf2,w,c
  7019  000EF8  6E57               	movwf	_lletraASCII^0,c
  7020                           
  7021                           ;Ssms.c: 98:     sumaPulsacions = 0;
  7022  000EFA  0E00               	movlw	0
  7023  000EFC  6E32               	movwf	_sumaPulsacions^0,c
  7024  000EFE  D75B               	goto	l4403
  7025  000F00                     l4505:
  7026  000F00  0E03               	movlw	3
  7027  000F02  1832               	xorwf	_sumaPulsacions^0,w,c
  7028  000F04  A4D8               	btfss	status,2,c
  7029  000F06  D004               	goto	l4511
  7030  000F08                     u3670:
  7031                           
  7032                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  7033  000F08  5054               	movf	_ultimaTecla^0,w,c
  7034  000F0A  0F30               	addlw	48
  7035  000F0C                     L6:
  7036  000F0C  6E57               	movwf	_lletraASCII^0,c
  7037  000F0E  D753               	goto	l4403
  7038  000F10                     l4511:
  7039  000F10  0E03               	movlw	3
  7040  000F12  6032               	cpfslt	_sumaPulsacions^0,c
  7041  000F14  0012               	return	
  7042  000F16  D74F               	goto	l4403
  7043  000F18                     l4515:
  7044                           
  7045                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  7046  000F18  0E04               	movlw	4
  7047  000F1A  1832               	xorwf	_sumaPulsacions^0,w,c
  7048  000F1C  B4D8               	btfsc	status,2,c
  7049  000F1E  D7F4               	goto	u3670
  7050  000F20  0E05               	movlw	5
  7051  000F22  1832               	xorwf	_sumaPulsacions^0,w,c
  7052  000F24  B4D8               	btfsc	status,2,c
  7053  000F26  D7E3               	goto	u3660
  7054  000F28  0E04               	movlw	4
  7055  000F2A  D7F3               	goto	L7
  7056  000F2C                     l4535:
  7057  000F2C  5030               	movf	SMotor@state^0,w,c
  7058  000F2E  6E6D               	movwf	??_SMotor^0,c
  7059  000F30  6A6E               	clrf	(??_SMotor+1)^0,c
  7060                           
  7061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7062                           ; Switch size 1, requested type "simple"
  7063                           ; Number of cases is 1, Range of values is 0 to 0
  7064                           ; switch strategies available:
  7065                           ; Name         Instructions Cycles
  7066                           ; simple_byte            4     3 (average)
  7067                           ;	Chosen strategy is simple_byte
  7068  000F32  506E               	movf	(??_SMotor+1)^0,w,c
  7069  000F34  0A00               	xorlw	0	; case 0
  7070  000F36  A4D8               	btfss	status,2,c
  7071  000F38  0012               	return	
  7072                           
  7073                           ; Switch size 1, requested type "simple"
  7074                           ; Number of cases is 7, Range of values is 0 to 6
  7075                           ; switch strategies available:
  7076                           ; Name         Instructions Cycles
  7077                           ; simple_byte           22    12 (average)
  7078                           ;	Chosen strategy is simple_byte
  7079  000F3A  506D               	movf	??_SMotor^0,w,c
  7080  000F3C  0A00               	xorlw	0	; case 0
  7081  000F3E  B4D8               	btfsc	status,2,c
  7082  000F40  D716               	goto	l4379
  7083  000F42  0A01               	xorlw	1	; case 1
  7084  000F44  B4D8               	btfsc	status,2,c
  7085  000F46  D73A               	goto	l4405
  7086  000F48  0A03               	xorlw	3	; case 2
  7087  000F4A  B4D8               	btfsc	status,2,c
  7088  000F4C  D76B               	goto	l4433
  7089  000F4E  0A01               	xorlw	1	; case 3
  7090  000F50  B4D8               	btfsc	status,2,c
  7091  000F52  D791               	goto	l4459
  7092  000F54  0A07               	xorlw	7	; case 4
  7093  000F56  B4D8               	btfsc	status,2,c
  7094  000F58  D7C1               	goto	l4491
  7095  000F5A  0A01               	xorlw	1	; case 5
  7096  000F5C  B4D8               	btfsc	status,2,c
  7097  000F5E  D7C3               	goto	l4497
  7098  000F60  0A03               	xorlw	3	; case 6
  7099  000F62  A4D8               	btfss	status,2,c
  7100  000F64  0012               	return	
  7101  000F66  D7D8               	goto	l4515
  7102  000F68                     __end_of_SMotor:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _MNovaLletra *****************
  7106 ;; Defined at:
  7107 ;;		line 33 in file "Menu.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  lletra          1    wreg     unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  lletra          1    5[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1
  7121 ;;      Params:         0       0       0
  7122 ;;      Locals:         1       0       0
  7123 ;;      Temps:          0       0       0
  7124 ;;      Totals:         1       0       0
  7125 ;;Total ram usage:        1 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 2
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_SMotor
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text60
  7136  001EE4                     __ptext60:
  7137                           	callstack 0
  7138  001EE4                     _MNovaLletra:
  7139                           	callstack 27
  7140                           
  7141                           ;incstack = 0
  7142                           ;MNovaLletra@lletra stored from wreg
  7143  001EE4  6E66               	movwf	MNovaLletra@lletra^0,c
  7144                           
  7145                           ;Menu.c: 34:     novaLletra = lletra;
  7146  001EE6  C066  F052         	movff	MNovaLletra@lletra,_novaLletra
  7147  001EEA  0012               	return		;funcret
  7148  001EEC                     __end_of_MNovaLletra:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function _Minit *****************
  7152 ;; Defined at:
  7153 ;;		line 26 in file "Menu.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1
  7167 ;;      Params:         0       0       0
  7168 ;;      Locals:         0       0       0
  7169 ;;      Temps:          0       0       0
  7170 ;;      Totals:         0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 3
  7174 ;; This function calls:
  7175 ;;		_TiGetTimer
  7176 ;; This function is called by:
  7177 ;;		_main
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text61
  7182  001EEC                     __ptext61:
  7183                           	callstack 0
  7184  001EEC                     _Minit:
  7185                           	callstack 27
  7186                           
  7187                           ;Menu.c: 27:     timerMenu = TiGetTimer();
  7188                           
  7189                           ;incstack = 0
  7190  001EEC  EC6B  F00D         	call	_TiGetTimer	;wreg free
  7191  001EF0  6E29               	movwf	_timerMenu^0,c
  7192  001EF2  0012               	return		;funcret
  7193  001EF4                     __end_of_Minit:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _LcLCD *****************
  7197 ;; Defined at:
  7198 ;;		line 246 in file "LcTLCD.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/1
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1
  7212 ;;      Params:         0       0       0
  7213 ;;      Locals:         0       0       0
  7214 ;;      Temps:          0       0       0
  7215 ;;      Totals:         0       0       0
  7216 ;;Total ram usage:        0 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 6
  7219 ;; This function calls:
  7220 ;;		_LcPutChar
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text62
  7227  00190C                     __ptext62:
  7228                           	callstack 0
  7229  00190C                     _LcLCD:
  7230                           	callstack 24
  7231                           
  7232                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7233                           
  7234                           ;incstack = 0
  7235  00190C  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7236  00190E  0012               	return	
  7237                           
  7238                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7239  001910  C005  FFF6         	movff	_s_ptr,tblptrl
  7240  001914  C006  FFF7         	movff	_s_ptr+1,tblptrh
  7241  001918  6AF8               	clrf	tblptru,c
  7242  00191A  0E01               	movlw	(high __ramtop+-1)
  7243  00191C  64F7               	cpfsgt	tblptrh,c
  7244  00191E  D003               	bra	u3327
  7245  001920  0008               	tblrd		*
  7246  001922  50F5               	movf	tablat,w,c
  7247  001924  D005               	bra	u3320
  7248  001926                     u3327:
  7249  001926  CFF6 FFE1          	movff	tblptrl,fsr1l
  7250  00192A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7251  00192E  50E7               	movf	indf1,w,c
  7252  001930                     u3320:
  7253  001930  ECE2  F00C         	call	_LcPutChar
  7254                           
  7255                           ;LcTLCD.c: 249:         s_ptr++;
  7256  001934  4A05               	infsnz	_s_ptr^0,f,c
  7257  001936  2A06               	incf	(_s_ptr+1)^0,f,c
  7258                           
  7259                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7260  001938  C005  FFF6         	movff	_s_ptr,tblptrl
  7261  00193C  C006  FFF7         	movff	_s_ptr+1,tblptrh
  7262  001940  6AF8               	clrf	tblptru,c
  7263  001942  0E01               	movlw	(high __ramtop+-1)
  7264  001944  64F7               	cpfsgt	tblptrh,c
  7265  001946  D003               	bra	u3337
  7266  001948  0008               	tblrd		*
  7267  00194A  50F5               	movf	tablat,w,c
  7268  00194C  D005               	bra	u3330
  7269  00194E                     u3337:
  7270  00194E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7271  001952  CFF7 FFE2          	movff	tblptrh,fsr1h
  7272  001956  50E7               	movf	indf1,w,c
  7273  001958                     u3330:
  7274  001958  0900               	iorlw	0
  7275  00195A  A4D8               	btfss	status,2,c
  7276  00195C  0012               	return	
  7277                           
  7278                           ;LcTLCD.c: 251:             nou_s = 0;
  7279  00195E  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7280                           
  7281                           ;LcTLCD.c: 252:             s_ptr=0;
  7282  001960  0E00               	movlw	0
  7283  001962  6E05               	movwf	_s_ptr^0,c
  7284  001964  0E00               	movlw	0
  7285  001966  6E06               	movwf	(_s_ptr+1)^0,c
  7286  001968  0012               	return		;funcret
  7287  00196A                     __end_of_LcLCD:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function _LcInit *****************
  7291 ;; Defined at:
  7292 ;;		line 41 in file "LcTLCD.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  rows            1    wreg     unsigned char 
  7295 ;;  columns         1   16[COMRAM] unsigned char 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  rows            1   17[COMRAM] unsigned char 
  7298 ;;  i               2   18[COMRAM] int 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1
  7308 ;;      Params:         1       0       0
  7309 ;;      Locals:         3       0       0
  7310 ;;      Temps:          0       0       0
  7311 ;;      Totals:         4       0       0
  7312 ;;Total ram usage:        4 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 4
  7315 ;; This function calls:
  7316 ;;		_CantaIR
  7317 ;;		_EscriuPrimeraOrdre
  7318 ;;		_Espera
  7319 ;;		_TiGetTimer
  7320 ;;		_WaitForBusy
  7321 ;; This function is called by:
  7322 ;;		_main
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text63
  7327  001330                     __ptext63:
  7328                           	callstack 0
  7329  001330                     _LcInit:
  7330                           	callstack 26
  7331                           
  7332                           ;incstack = 0
  7333                           ;LcInit@rows stored from wreg
  7334  001330  6E72               	movwf	LcInit@rows^0,c
  7335                           
  7336                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7337  001332  EC6B  F00D         	call	_TiGetTimer	;wreg free
  7338  001336  6E33               	movwf	_Timer^0,c
  7339                           
  7340                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  7341  001338  C072  F037         	movff	LcInit@rows,_Rows
  7342  00133C  C071  F036         	movff	LcInit@columns,_Columns
  7343                           
  7344                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7345  001340  0E00               	movlw	0
  7346  001342  6E34               	movwf	_ColumnAct^0,c
  7347  001344  C034  F035         	movff	_ColumnAct,_RowAct
  7348                           
  7349                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7350  001348  9894               	bcf	148,4,c	;volatile
  7351  00134A  9E95               	bcf	149,7,c	;volatile
  7352  00134C  9A94               	bcf	148,5,c	;volatile
  7353                           
  7354                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7355  00134E  0E00               	movlw	0
  7356  001350  6E74               	movwf	(LcInit@i+1)^0,c
  7357  001352  0E00               	movlw	0
  7358  001354  6E73               	movwf	LcInit@i^0,c
  7359  001356                     l4285:
  7360                           
  7361                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7362  001356  0E00               	movlw	0
  7363  001358  6E6E               	movwf	(Espera@ms+1)^0,c
  7364  00135A  0E64               	movlw	100
  7365  00135C  6E6D               	movwf	Espera@ms^0,c
  7366  00135E  5033               	movf	_Timer^0,w,c
  7367  001360  EC9B  F00E         	call	_Espera
  7368                           
  7369                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  7370  001364  0E03               	movlw	3
  7371  001366  EC69  F00B         	call	_EscriuPrimeraOrdre
  7372                           
  7373                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  7374  00136A  0E00               	movlw	0
  7375  00136C  6E6E               	movwf	(Espera@ms+1)^0,c
  7376  00136E  0E05               	movlw	5
  7377  001370  6E6D               	movwf	Espera@ms^0,c
  7378  001372  5033               	movf	_Timer^0,w,c
  7379  001374  EC9B  F00E         	call	_Espera
  7380                           
  7381                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  7382  001378  0E03               	movlw	3
  7383  00137A  EC69  F00B         	call	_EscriuPrimeraOrdre
  7384                           
  7385                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  7386  00137E  0E00               	movlw	0
  7387  001380  6E6E               	movwf	(Espera@ms+1)^0,c
  7388  001382  0E01               	movlw	1
  7389  001384  6E6D               	movwf	Espera@ms^0,c
  7390  001386  5033               	movf	_Timer^0,w,c
  7391  001388  EC9B  F00E         	call	_Espera
  7392                           
  7393                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  7394  00138C  0E03               	movlw	3
  7395  00138E  EC69  F00B         	call	_EscriuPrimeraOrdre
  7396                           
  7397                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  7398  001392  0E00               	movlw	0
  7399  001394  6E6E               	movwf	(Espera@ms+1)^0,c
  7400  001396  0E01               	movlw	1
  7401  001398  6E6D               	movwf	Espera@ms^0,c
  7402  00139A  5033               	movf	_Timer^0,w,c
  7403  00139C  EC9B  F00E         	call	_Espera
  7404                           
  7405                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  7406  0013A0  0E02               	movlw	2
  7407  0013A2  EC69  F00B         	call	_EscriuPrimeraOrdre
  7408                           
  7409                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  7410  0013A6  0E00               	movlw	0
  7411  0013A8  6E6E               	movwf	(Espera@ms+1)^0,c
  7412  0013AA  0E04               	movlw	4
  7413  0013AC  6E6D               	movwf	Espera@ms^0,c
  7414  0013AE  5033               	movf	_Timer^0,w,c
  7415  0013B0  EC9B  F00E         	call	_Espera
  7416                           
  7417                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  7418  0013B4  0E28               	movlw	40
  7419  0013B6  ECF3  F00D         	call	_CantaIR
  7420                           
  7421                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  7422  0013BA  EC2E  F00D         	call	_WaitForBusy	;wreg free
  7423  0013BE  0E08               	movlw	8
  7424  0013C0  ECF3  F00D         	call	_CantaIR
  7425                           
  7426                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  7427  0013C4  EC2E  F00D         	call	_WaitForBusy	;wreg free
  7428  0013C8  0E01               	movlw	1
  7429  0013CA  ECF3  F00D         	call	_CantaIR
  7430                           
  7431                           ;LcTLCD.c: 71:   Espera(Timer,3);
  7432  0013CE  0E00               	movlw	0
  7433  0013D0  6E6E               	movwf	(Espera@ms+1)^0,c
  7434  0013D2  0E03               	movlw	3
  7435  0013D4  6E6D               	movwf	Espera@ms^0,c
  7436  0013D6  5033               	movf	_Timer^0,w,c
  7437  0013D8  EC9B  F00E         	call	_Espera
  7438                           
  7439                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  7440  0013DC  EC2E  F00D         	call	_WaitForBusy	;wreg free
  7441  0013E0  0E06               	movlw	6
  7442  0013E2  ECF3  F00D         	call	_CantaIR
  7443                           
  7444                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  7445  0013E6  EC2E  F00D         	call	_WaitForBusy	;wreg free
  7446  0013EA  0E0F               	movlw	15
  7447  0013EC  ECF3  F00D         	call	_CantaIR
  7448                           
  7449                           ;LcTLCD.c: 74:  }
  7450  0013F0  4A73               	infsnz	LcInit@i^0,f,c
  7451  0013F2  2A74               	incf	(LcInit@i+1)^0,f,c
  7452  0013F4  BE74               	btfsc	(LcInit@i+1)^0,7,c
  7453  0013F6  D7AF               	goto	l4285
  7454  0013F8  5074               	movf	(LcInit@i+1)^0,w,c
  7455  0013FA  E104               	bnz	u3300
  7456  0013FC  0E02               	movlw	2
  7457  0013FE  5C73               	subwf	LcInit@i^0,w,c
  7458  001400  A0D8               	btfss	status,0,c
  7459  001402  D7A9               	goto	l4285
  7460  001404                     u3300:
  7461                           
  7462                           ;LcTLCD.c: 80:     WaitForBusy();
  7463  001404  EC2E  F00D         	call	_WaitForBusy	;wreg free
  7464                           
  7465                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  7466  001408  0E0C               	movlw	12
  7467  00140A  ECF3  F00D         	call	_CantaIR
  7468  00140E  0012               	return		;funcret
  7469  001410                     __end_of_LcInit:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _EscriuPrimeraOrdre *****************
  7473 ;; Defined at:
  7474 ;;		line 230 in file "LcTLCD.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  ordre           1    wreg     unsigned char 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  ordre           1    6[COMRAM] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1
  7488 ;;      Params:         0       0       0
  7489 ;;      Locals:         1       0       0
  7490 ;;      Temps:          1       0       0
  7491 ;;      Totals:         2       0       0
  7492 ;;Total ram usage:        2 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 2
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_LcInit
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text64
  7503  0016D2                     __ptext64:
  7504                           	callstack 0
  7505  0016D2                     _EscriuPrimeraOrdre:
  7506                           	callstack 27
  7507                           
  7508                           ;incstack = 0
  7509                           ;EscriuPrimeraOrdre@ordre stored from wreg
  7510  0016D2  6E67               	movwf	EscriuPrimeraOrdre@ordre^0,c
  7511                           
  7512                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  7513  0016D4  9694               	bcf	148,3,c	;volatile
  7514  0016D6  9494               	bcf	148,2,c	;volatile
  7515  0016D8  9294               	bcf	148,1,c	;volatile
  7516  0016DA  9094               	bcf	148,0,c	;volatile
  7517  0016DC  9A8B               	bcf	139,5,c	;volatile
  7518  0016DE  9E8C               	bcf	140,7,c	;volatile
  7519                           
  7520                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  7521  0016E0  888B               	bsf	139,4,c	;volatile
  7522  0016E2  888B               	bsf	139,4,c	;volatile
  7523                           
  7524                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  7525  0016E4  A667               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  7526  0016E6  D003               	goto	u230
  7527  0016E8  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7528  0016EA  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  7529  0016EC  D001               	goto	u248
  7530  0016EE                     u230:
  7531  0016EE  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7532  0016F0                     u248:
  7533  0016F0  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7534  0016F2  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7535  0016F4  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7536  0016F6  508B               	movf	139,w,c	;volatile
  7537  0016F8  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7538  0016FA  0BF7               	andlw	-9
  7539  0016FC  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7540  0016FE  6E8B               	movwf	139,c	;volatile
  7541                           
  7542                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7543  001700  A467               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7544  001702  D003               	goto	u250
  7545  001704  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7546  001706  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  7547  001708  D001               	goto	u268
  7548  00170A                     u250:
  7549  00170A  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7550  00170C                     u268:
  7551  00170C  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7552  00170E  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7553  001710  508B               	movf	139,w,c	;volatile
  7554  001712  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7555  001714  0BFB               	andlw	-5
  7556  001716  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7557  001718  6E8B               	movwf	139,c	;volatile
  7558                           
  7559                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7560  00171A  A267               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7561  00171C  D003               	goto	u270
  7562  00171E  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7563  001720  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  7564  001722  D001               	goto	u288
  7565  001724                     u270:
  7566  001724  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7567  001726                     u288:
  7568  001726  4666               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7569  001728  508B               	movf	139,w,c	;volatile
  7570  00172A  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7571  00172C  0BFD               	andlw	-3
  7572  00172E  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7573  001730  6E8B               	movwf	139,c	;volatile
  7574                           
  7575                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7576  001732  A067               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7577  001734  D003               	goto	u290
  7578  001736  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7579  001738  2A66               	incf	??_EscriuPrimeraOrdre^0,f,c
  7580  00173A  D001               	goto	u308
  7581  00173C                     u290:
  7582  00173C  6A66               	clrf	??_EscriuPrimeraOrdre^0,c
  7583  00173E                     u308:
  7584  00173E  508B               	movf	139,w,c	;volatile
  7585  001740  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7586  001742  0BFE               	andlw	-2
  7587  001744  1866               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7588  001746  6E8B               	movwf	139,c	;volatile
  7589                           
  7590                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7591  001748  988B               	bcf	139,4,c	;volatile
  7592  00174A  0012               	return		;funcret
  7593  00174C                     __end_of_EscriuPrimeraOrdre:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function _JoystickMotor *****************
  7597 ;; Defined at:
  7598 ;;		line 18 in file "Joystick.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;		None
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/1
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1
  7612 ;;      Params:         0       0       0
  7613 ;;      Locals:         0       0       0
  7614 ;;      Temps:          2       0       0
  7615 ;;      Totals:         2       0       0
  7616 ;;Total ram usage:        2 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 3
  7619 ;; This function calls:
  7620 ;;		_MNouJoystick
  7621 ;; This function is called by:
  7622 ;;		_main
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text65
  7627  001246                     __ptext65:
  7628                           	callstack 0
  7629  001246                     _JoystickMotor:
  7630                           	callstack 27
  7631                           
  7632                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7633                           
  7634                           ;incstack = 0
  7635  001246  D05A               	goto	l2927
  7636  001248                     l902:
  7637                           
  7638                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7639  001248  B2C2               	btfsc	194,1,c	;volatile
  7640  00124A  D00B               	goto	l903
  7641  00124C  0EC8               	movlw	200
  7642  00124E  60C4               	cpfslt	196,c	;volatile
  7643  001250  D008               	goto	l903
  7644  001252  0E32               	movlw	50
  7645  001254  64C4               	cpfsgt	196,c	;volatile
  7646  001256  D005               	goto	l903
  7647                           
  7648                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7649  001258  0E07               	movlw	7
  7650  00125A  6EC2               	movwf	194,c	;volatile
  7651                           
  7652                           ;Joystick.c: 24:                 cap1 = 1;
  7653  00125C  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7654  00125E                     l2857:
  7655                           
  7656                           ;Joystick.c: 25:     state++;
  7657  00125E  2A0F               	incf	JoystickMotor@state^0,f,c
  7658                           
  7659                           ;Joystick.c: 26:    }
  7660  001260  D05B               	goto	l910
  7661  001262                     l903:
  7662  001262  B2C2               	btfsc	194,1,c	;volatile
  7663  001264  D010               	goto	l905
  7664  001266  0EC7               	movlw	199
  7665  001268  64C4               	cpfsgt	196,c	;volatile
  7666  00126A  D00D               	goto	l905
  7667                           
  7668                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7669  00126C  0E02               	movlw	2
  7670  00126E  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7671  001270  B4D8               	btfsc	status,2,c
  7672  001272  D003               	goto	l2865
  7673  001274  0E02               	movlw	2
  7674  001276  EC7A  F00F         	call	_MNouJoystick
  7675  00127A                     l2865:
  7676                           
  7677                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7678  00127A  0E02               	movlw	2
  7679  00127C  6E10               	movwf	_ultimaTeclaAD^0,c
  7680                           
  7681                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7682  00127E  0E07               	movlw	7
  7683  001280  6EC2               	movwf	194,c	;volatile
  7684                           
  7685                           ;Joystick.c: 31:                 cap1 = 0;
  7686  001282  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7687  001284  D7EC               	goto	l2857
  7688  001286                     l905:
  7689  001286  B2C2               	btfsc	194,1,c	;volatile
  7690  001288  D047               	goto	l910
  7691  00128A  0E33               	movlw	51
  7692  00128C  60C4               	cpfslt	196,c	;volatile
  7693  00128E  D044               	goto	l910
  7694                           
  7695                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7696  001290  0E08               	movlw	8
  7697  001292  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7698  001294  B4D8               	btfsc	status,2,c
  7699  001296  D003               	goto	l2879
  7700  001298  0E08               	movlw	8
  7701  00129A  EC7A  F00F         	call	_MNouJoystick
  7702  00129E                     l2879:
  7703                           
  7704                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7705  00129E  0E08               	movlw	8
  7706  0012A0  D7ED               	goto	L8
  7707  0012A2                     l911:
  7708                           
  7709                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7710  0012A2  B2C2               	btfsc	194,1,c	;volatile
  7711  0012A4  D00B               	goto	l912
  7712  0012A6  0EC8               	movlw	200
  7713  0012A8  60C4               	cpfslt	196,c	;volatile
  7714  0012AA  D008               	goto	l912
  7715  0012AC  0E32               	movlw	50
  7716  0012AE  64C4               	cpfsgt	196,c	;volatile
  7717  0012B0  D005               	goto	l912
  7718                           
  7719                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7720  0012B2  0E03               	movlw	3
  7721  0012B4  6EC2               	movwf	194,c	;volatile
  7722                           
  7723                           ;Joystick.c: 45:                 cap2 = 1;
  7724  0012B6  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7725  0012B8                     l2895:
  7726                           
  7727                           ;Joystick.c: 46:     state--;
  7728  0012B8  060F               	decf	JoystickMotor@state^0,f,c
  7729                           
  7730                           ;Joystick.c: 47:    }
  7731  0012BA  D02E               	goto	l910
  7732  0012BC                     l912:
  7733  0012BC  B2C2               	btfsc	194,1,c	;volatile
  7734  0012BE  D010               	goto	l914
  7735  0012C0  0EC7               	movlw	199
  7736  0012C2  64C4               	cpfsgt	196,c	;volatile
  7737  0012C4  D00D               	goto	l914
  7738                           
  7739                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7740  0012C6  0E06               	movlw	6
  7741  0012C8  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7742  0012CA  B4D8               	btfsc	status,2,c
  7743  0012CC  D003               	goto	l2903
  7744  0012CE  0E06               	movlw	6
  7745  0012D0  EC7A  F00F         	call	_MNouJoystick
  7746  0012D4                     l2903:
  7747                           
  7748                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7749  0012D4  0E06               	movlw	6
  7750  0012D6  6E10               	movwf	_ultimaTeclaAD^0,c
  7751                           
  7752                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7753  0012D8  0E03               	movlw	3
  7754  0012DA  6EC2               	movwf	194,c	;volatile
  7755                           
  7756                           ;Joystick.c: 52:                 cap2 = 0;
  7757  0012DC  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7758  0012DE  D7EC               	goto	l2895
  7759  0012E0                     l914:
  7760  0012E0  B2C2               	btfsc	194,1,c	;volatile
  7761  0012E2  D01A               	goto	l910
  7762  0012E4  0E33               	movlw	51
  7763  0012E6  60C4               	cpfslt	196,c	;volatile
  7764  0012E8  D017               	goto	l910
  7765                           
  7766                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7767  0012EA  0E04               	movlw	4
  7768  0012EC  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7769  0012EE  B4D8               	btfsc	status,2,c
  7770  0012F0  D003               	goto	l2917
  7771  0012F2  0E04               	movlw	4
  7772  0012F4  EC7A  F00F         	call	_MNouJoystick
  7773  0012F8                     l2917:
  7774                           
  7775                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7776  0012F8  0E04               	movlw	4
  7777  0012FA  D7ED               	goto	L9
  7778  0012FC                     l2927:
  7779  0012FC  500F               	movf	JoystickMotor@state^0,w,c
  7780  0012FE  6E67               	movwf	??_JoystickMotor^0,c
  7781  001300  6A68               	clrf	(??_JoystickMotor+1)^0,c
  7782                           
  7783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7784                           ; Switch size 1, requested type "simple"
  7785                           ; Number of cases is 1, Range of values is 0 to 0
  7786                           ; switch strategies available:
  7787                           ; Name         Instructions Cycles
  7788                           ; simple_byte            4     3 (average)
  7789                           ;	Chosen strategy is simple_byte
  7790  001302  5068               	movf	(??_JoystickMotor+1)^0,w,c
  7791  001304  0A00               	xorlw	0	; case 0
  7792  001306  A4D8               	btfss	status,2,c
  7793  001308  D007               	goto	l910
  7794                           
  7795                           ; Switch size 1, requested type "simple"
  7796                           ; Number of cases is 2, Range of values is 0 to 1
  7797                           ; switch strategies available:
  7798                           ; Name         Instructions Cycles
  7799                           ; simple_byte            7     4 (average)
  7800                           ;	Chosen strategy is simple_byte
  7801  00130A  5067               	movf	??_JoystickMotor^0,w,c
  7802  00130C  0A00               	xorlw	0	; case 0
  7803  00130E  B4D8               	btfsc	status,2,c
  7804  001310  D79B               	goto	l902
  7805  001312  0A01               	xorlw	1	; case 1
  7806  001314  B4D8               	btfsc	status,2,c
  7807  001316  D7C5               	goto	l911
  7808  001318                     l910:
  7809                           
  7810                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7811  001318  AE77               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7812  00131A  0012               	return	
  7813  00131C  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7814  00131E  0012               	return	
  7815  001320  5010               	movf	_ultimaTeclaAD^0,w,c
  7816  001322  B4D8               	btfsc	status,2,c
  7817  001324  0012               	return	
  7818                           
  7819                           ;Joystick.c: 66:         MNouJoystick(-1);
  7820  001326  0EFF               	movlw	255
  7821  001328  EC7A  F00F         	call	_MNouJoystick
  7822                           
  7823                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  7824  00132C  6810               	setf	_ultimaTeclaAD^0,c
  7825  00132E  0012               	return		;funcret
  7826  001330                     __end_of_JoystickMotor:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _MNouJoystick *****************
  7830 ;; Defined at:
  7831 ;;		line 36 in file "Menu.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  posicio         1    wreg     char 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  posicio         1    5[COMRAM] char 
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/1
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1
  7845 ;;      Params:         0       0       0
  7846 ;;      Locals:         1       0       0
  7847 ;;      Temps:          0       0       0
  7848 ;;      Totals:         1       0       0
  7849 ;;Total ram usage:        1 bytes
  7850 ;; Hardware stack levels used: 1
  7851 ;; Hardware stack levels required when called: 2
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_JoystickMotor
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text66
  7860  001EF4                     __ptext66:
  7861                           	callstack 0
  7862  001EF4                     _MNouJoystick:
  7863                           	callstack 27
  7864                           
  7865                           ;incstack = 0
  7866                           ;MNouJoystick@posicio stored from wreg
  7867  001EF4  6E66               	movwf	MNouJoystick@posicio^0,c
  7868                           
  7869                           ;Menu.c: 37:     novaDireccio = posicio;
  7870  001EF6  C066  F051         	movff	MNouJoystick@posicio,_novaDireccio
  7871  001EFA  0012               	return		;funcret
  7872  001EFC                     __end_of_MNouJoystick:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function _JoystickInit *****************
  7876 ;; Defined at:
  7877 ;;		line 12 in file "Joystick.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      void 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1
  7891 ;;      Params:         0       0       0
  7892 ;;      Locals:         0       0       0
  7893 ;;      Temps:          0       0       0
  7894 ;;      Totals:         0       0       0
  7895 ;;Total ram usage:        0 bytes
  7896 ;; Hardware stack levels used: 1
  7897 ;; Hardware stack levels required when called: 2
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text67
  7906  001DD8                     __ptext67:
  7907                           	callstack 0
  7908  001DD8                     _JoystickInit:
  7909                           	callstack 28
  7910                           
  7911                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7912                           
  7913                           ;incstack = 0
  7914  001DD8  0E01               	movlw	1
  7915  001DDA  6EC2               	movwf	194,c	;volatile
  7916                           
  7917                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7918  001DDC  0E0D               	movlw	13
  7919  001DDE  6EC1               	movwf	193,c	;volatile
  7920                           
  7921                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7922  001DE0  0E09               	movlw	9
  7923  001DE2  6EC0               	movwf	192,c	;volatile
  7924                           
  7925                           ;Joystick.c: 16:     ADRESH = 127;
  7926  001DE4  0E7F               	movlw	127
  7927  001DE6  6EC4               	movwf	196,c	;volatile
  7928  001DE8  0012               	return		;funcret
  7929  001DEA                     __end_of_JoystickInit:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function _GLCDMotor *****************
  7933 ;; Defined at:
  7934 ;;		line 36 in file "GestioLCD.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/1
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1
  7948 ;;      Params:         0       0       0
  7949 ;;      Locals:         0       0       0
  7950 ;;      Temps:          2       0       0
  7951 ;;      Totals:         2       0       0
  7952 ;;Total ram usage:        2 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 6
  7955 ;; This function calls:
  7956 ;;		_LcClear
  7957 ;;		_LcGotoXY
  7958 ;;		_LcLliure
  7959 ;;		_LcNewString
  7960 ;;		_LcPutChar
  7961 ;;		_TiGetTics
  7962 ;;		_TiResetTics
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text68
  7969  000786                     __ptext68:
  7970                           	callstack 0
  7971  000786                     _GLCDMotor:
  7972                           	callstack 24
  7973                           
  7974                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  7975                           
  7976                           ;incstack = 0
  7977  000786  D1B7               	goto	l5489
  7978  000788                     l5303:
  7979                           
  7980                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7981  000788  0E11               	movlw	17
  7982  00078A  6012               	cpfslt	GLCDMotor@length1^0,c
  7983  00078C  D017               	goto	l5313
  7984  00078E  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7985  000790  D015               	goto	l5313
  7986                           
  7987                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  7988  000792  0E00               	movlw	0
  7989  000794  6E6E               	movwf	LcGotoXY@Row^0,c
  7990  000796  0E00               	movlw	0
  7991  000798  EC4E  F00D         	call	_LcGotoXY
  7992                           
  7993                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  7994  00079C  5019               	movf	_menuDaltGLCD^0,w,c
  7995  00079E  0D1D               	mullw	29
  7996  0007A0  50F3               	movf	243,w,c
  7997  0007A2  0F01               	addlw	low _menuList
  7998  0007A4  6E75               	movwf	??_GLCDMotor^0,c
  7999  0007A6  C075  F069         	movff	??_GLCDMotor,LcNewString@new_s
  8000  0007AA  5069               	movf	LcNewString@new_s^0,w,c
  8001  0007AC  A4D8               	btfss	status,2,c
  8002  0007AE  0E02               	movlw	high __smallconst
  8003  0007B0  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  8004  0007B2  EC29  F00F         	call	_LcNewString	;wreg free
  8005                           
  8006                           ;GestioLCD.c: 53:     state = 5;
  8007  0007B6  0E05               	movlw	5
  8008  0007B8  6E18               	movwf	GLCDMotor@state^0,c
  8009                           
  8010                           ;GestioLCD.c: 54:    }
  8011  0007BA  0012               	return	
  8012  0007BC                     l5313:
  8013  0007BC  0E10               	movlw	16
  8014  0007BE  6412               	cpfsgt	GLCDMotor@length1^0,c
  8015  0007C0  0012               	return	
  8016  0007C2  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8017  0007C4  0012               	return	
  8018  0007C6                     u4930:
  8019                           
  8020                           ;GestioLCD.c: 56:     state++;
  8021  0007C6  2A18               	incf	GLCDMotor@state^0,f,c
  8022  0007C8  0012               	return	
  8023  0007CA                     l5319:
  8024                           
  8025                           ;GestioLCD.c: 60:    if (j>=16) {
  8026  0007CA  0E0F               	movlw	15
  8027  0007CC  6417               	cpfsgt	GLCDMotor@j^0,c
  8028  0007CE  D02B               	goto	l5333
  8029                           
  8030                           ;GestioLCD.c: 61:     min1++;
  8031  0007D0  2A16               	incf	GLCDMotor@min1^0,f,c
  8032                           
  8033                           ;GestioLCD.c: 62:     max1++;
  8034  0007D2  2A4F               	incf	GLCDMotor@max1^0,f,c
  8035                           
  8036                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8037  0007D4  5019               	movf	_menuDaltGLCD^0,w,c
  8038  0007D6  0D1D               	mullw	29
  8039  0007D8  50F3               	movf	243,w,c
  8040  0007DA  0F01               	addlw	low _menuList
  8041  0007DC  244F               	addwf	GLCDMotor@max1^0,w,c
  8042  0007DE  6E75               	movwf	??_GLCDMotor^0,c
  8043  0007E0  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8044  0007E4                     	if	1	;There is more than 1 active tblptr byte
  8045  0007E4  0E02               	movlw	high __smallconst
  8046  0007E6  6EF7               	movwf	tblptrh,c
  8047  0007E8                     	endif
  8048  0007E8                     	if	0	;tblptru may be non-zero
  8049  0007E8                     	endif
  8050  0007E8                     	if	0	;tblptru may be non-zero
  8051  0007E8                     	endif
  8052  0007E8  0008               	tblrd		*
  8053  0007EA  50F5               	movf	tablat,w,c
  8054  0007EC  0900               	iorlw	0
  8055  0007EE  A4D8               	btfss	status,2,c
  8056  0007F0  D002               	goto	l5327
  8057  0007F2  0E00               	movlw	0
  8058  0007F4  6E4F               	movwf	GLCDMotor@max1^0,c
  8059  0007F6                     l5327:
  8060                           
  8061                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8062  0007F6  5019               	movf	_menuDaltGLCD^0,w,c
  8063  0007F8  0D1D               	mullw	29
  8064  0007FA  50F3               	movf	243,w,c
  8065  0007FC  0F01               	addlw	low _menuList
  8066  0007FE  2416               	addwf	GLCDMotor@min1^0,w,c
  8067  000800  6E75               	movwf	??_GLCDMotor^0,c
  8068  000802  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8069  000806                     	if	1	;There is more than 1 active tblptr byte
  8070  000806  0E02               	movlw	high __smallconst
  8071  000808  6EF7               	movwf	tblptrh,c
  8072  00080A                     	endif
  8073  00080A                     	if	0	;tblptru may be non-zero
  8074  00080A                     	endif
  8075  00080A                     	if	0	;tblptru may be non-zero
  8076  00080A                     	endif
  8077  00080A  0008               	tblrd		*
  8078  00080C  50F5               	movf	tablat,w,c
  8079  00080E  0900               	iorlw	0
  8080  000810  A4D8               	btfss	status,2,c
  8081  000812  D002               	goto	l833
  8082  000814  0E00               	movlw	0
  8083  000816  6E16               	movwf	GLCDMotor@min1^0,c
  8084  000818                     l833:
  8085                           
  8086                           ;GestioLCD.c: 65:     j=0;
  8087  000818  0E00               	movlw	0
  8088  00081A  6E17               	movwf	GLCDMotor@j^0,c
  8089                           
  8090                           ;GestioLCD.c: 66:     k1=min1;
  8091  00081C  C016  F014         	movff	GLCDMotor@min1,GLCDMotor@k1
  8092                           
  8093                           ;GestioLCD.c: 67:     state = 6;
  8094  000820  0E06               	movlw	6
  8095  000822  6E18               	movwf	GLCDMotor@state^0,c
  8096                           
  8097                           ;GestioLCD.c: 68:    }
  8098  000824  0012               	return	
  8099  000826                     l5333:
  8100  000826  0E10               	movlw	16
  8101  000828  6017               	cpfslt	GLCDMotor@j^0,c
  8102  00082A  0012               	return	
  8103                           
  8104                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8105  00082C  0E00               	movlw	0
  8106  00082E  6E6E               	movwf	LcGotoXY@Row^0,c
  8107  000830  5017               	movf	GLCDMotor@j^0,w,c
  8108  000832  EC4E  F00D         	call	_LcGotoXY
  8109                           
  8110                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8111  000836  5019               	movf	_menuDaltGLCD^0,w,c
  8112  000838  0D1D               	mullw	29
  8113  00083A  50F3               	movf	243,w,c
  8114  00083C  0F01               	addlw	low _menuList
  8115  00083E  2414               	addwf	GLCDMotor@k1^0,w,c
  8116  000840  6E75               	movwf	??_GLCDMotor^0,c
  8117  000842  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8118  000846                     	if	1	;There is more than 1 active tblptr byte
  8119  000846  0E02               	movlw	high __smallconst
  8120  000848  6EF7               	movwf	tblptrh,c
  8121  00084A                     	endif
  8122  00084A                     	if	0	;tblptru may be non-zero
  8123  00084A                     	endif
  8124  00084A                     	if	0	;tblptru may be non-zero
  8125  00084A                     	endif
  8126  00084A  0008               	tblrd		*
  8127  00084C  50F5               	movf	tablat,w,c
  8128  00084E  ECE2  F00C         	call	_LcPutChar
  8129                           
  8130                           ;GestioLCD.c: 72:     j++;
  8131  000852  2A17               	incf	GLCDMotor@j^0,f,c
  8132                           
  8133                           ;GestioLCD.c: 73:     k1++;
  8134  000854  2A14               	incf	GLCDMotor@k1^0,f,c
  8135                           
  8136                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8137  000856  5019               	movf	_menuDaltGLCD^0,w,c
  8138  000858  0D1D               	mullw	29
  8139  00085A  50F3               	movf	243,w,c
  8140  00085C  0F01               	addlw	low _menuList
  8141  00085E  2414               	addwf	GLCDMotor@k1^0,w,c
  8142  000860  6E75               	movwf	??_GLCDMotor^0,c
  8143  000862  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8144  000866                     	if	1	;There is more than 1 active tblptr byte
  8145  000866  0E02               	movlw	high __smallconst
  8146  000868  6EF7               	movwf	tblptrh,c
  8147  00086A                     	endif
  8148  00086A                     	if	0	;tblptru may be non-zero
  8149  00086A                     	endif
  8150  00086A                     	if	0	;tblptru may be non-zero
  8151  00086A                     	endif
  8152  00086A  0008               	tblrd		*
  8153  00086C  50F5               	movf	tablat,w,c
  8154  00086E  0900               	iorlw	0
  8155  000870  A4D8               	btfss	status,2,c
  8156  000872  0012               	return	
  8157  000874  0E00               	movlw	0
  8158  000876  6E14               	movwf	GLCDMotor@k1^0,c
  8159  000878  0012               	return	
  8160  00087A                     l5347:
  8161                           
  8162                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8163  00087A  0E04               	movlw	4
  8164  00087C  6019               	cpfslt	_menuDaltGLCD^0,c
  8165  00087E  D012               	goto	u5030
  8166  000880  D7A2               	goto	u4930
  8167  000882                     u5000:
  8168                           
  8169                           ;GestioLCD.c: 82:     state = 0;
  8170  000882  0E00               	movlw	0
  8171  000884  6E18               	movwf	GLCDMotor@state^0,c
  8172  000886  0012               	return	
  8173  000888                     l5355:
  8174                           
  8175                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8176  000888  EC2F  F00F         	call	_LcLliure	;wreg free
  8177  00088C  A0D8               	btfss	status,0,c
  8178  00088E  D006               	goto	l5361
  8179  000890  0E04               	movlw	4
  8180  000892  6019               	cpfslt	_menuDaltGLCD^0,c
  8181  000894  D003               	goto	l5361
  8182                           
  8183                           ;GestioLCD.c: 87:     state = 7;
  8184  000896  0E07               	movlw	7
  8185  000898  6E18               	movwf	GLCDMotor@state^0,c
  8186                           
  8187                           ;GestioLCD.c: 88:    }
  8188  00089A  0012               	return	
  8189  00089C                     l5361:
  8190  00089C  EC2F  F00F         	call	_LcLliure	;wreg free
  8191  0008A0  A0D8               	btfss	status,0,c
  8192  0008A2  0012               	return	
  8193  0008A4                     u5030:
  8194  0008A4  0E03               	movlw	3
  8195  0008A6  6419               	cpfsgt	_menuDaltGLCD^0,c
  8196  0008A8  0012               	return	
  8197  0008AA  D7EB               	goto	u5000
  8198  0008AC                     l845:
  8199                           
  8200                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8201  0008AC  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8202  0008AE  0012               	return	
  8203  0008B0  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8204  0008B2  0012               	return	
  8205                           
  8206                           ;GestioLCD.c: 95:     length1 = 0;
  8207  0008B4  0E00               	movlw	0
  8208  0008B6  6E12               	movwf	GLCDMotor@length1^0,c
  8209                           
  8210                           ;GestioLCD.c: 96:     length2 = 0;
  8211  0008B8  0E00               	movlw	0
  8212  0008BA  6E11               	movwf	GLCDMotor@length2^0,c
  8213                           
  8214                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8215  0008BC  0E00               	movlw	0
  8216  0008BE  6E6E               	movwf	LcGotoXY@Row^0,c
  8217  0008C0  0E00               	movlw	0
  8218  0008C2  EC4E  F00D         	call	_LcGotoXY
  8219                           
  8220                           ;GestioLCD.c: 98:     min1 = 0;
  8221  0008C6  0E00               	movlw	0
  8222  0008C8  6E16               	movwf	GLCDMotor@min1^0,c
  8223                           
  8224                           ;GestioLCD.c: 99:     max1 = 15;
  8225  0008CA  0E0F               	movlw	15
  8226  0008CC  6E4F               	movwf	GLCDMotor@max1^0,c
  8227                           
  8228                           ;GestioLCD.c: 100:     min2 = 0;
  8229  0008CE  0E00               	movlw	0
  8230  0008D0  6E15               	movwf	GLCDMotor@min2^0,c
  8231                           
  8232                           ;GestioLCD.c: 101:     max2 = 15;
  8233  0008D2  0E0F               	movlw	15
  8234  0008D4  6E4E               	movwf	GLCDMotor@max2^0,c
  8235                           
  8236                           ;GestioLCD.c: 102:     j = 0;
  8237  0008D6  0E00               	movlw	0
  8238  0008D8  6E17               	movwf	GLCDMotor@j^0,c
  8239                           
  8240                           ;GestioLCD.c: 103:     k1 = 0;
  8241  0008DA  0E00               	movlw	0
  8242  0008DC  6E14               	movwf	GLCDMotor@k1^0,c
  8243                           
  8244                           ;GestioLCD.c: 104:     k2 = 0;
  8245  0008DE  0E00               	movlw	0
  8246  0008E0  6E13               	movwf	GLCDMotor@k2^0,c
  8247                           
  8248                           ;GestioLCD.c: 105:     newString = 0;
  8249  0008E2  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8250  0008E4  D770               	goto	u4930
  8251  0008E6                     l5391:
  8252                           
  8253                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8254  0008E6  5019               	movf	_menuDaltGLCD^0,w,c
  8255  0008E8  0D1D               	mullw	29
  8256  0008EA  50F3               	movf	243,w,c
  8257  0008EC  0F01               	addlw	low _menuList
  8258  0008EE  2412               	addwf	GLCDMotor@length1^0,w,c
  8259  0008F0  6E75               	movwf	??_GLCDMotor^0,c
  8260  0008F2  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8261  0008F6                     	if	1	;There is more than 1 active tblptr byte
  8262  0008F6  0E02               	movlw	high __smallconst
  8263  0008F8  6EF7               	movwf	tblptrh,c
  8264  0008FA                     	endif
  8265  0008FA                     	if	0	;tblptru may be non-zero
  8266  0008FA                     	endif
  8267  0008FA                     	if	0	;tblptru may be non-zero
  8268  0008FA                     	endif
  8269  0008FA  0008               	tblrd		*
  8270  0008FC  50F5               	movf	tablat,w,c
  8271  0008FE  0900               	iorlw	0
  8272  000900  A4D8               	btfss	status,2,c
  8273  000902  D004               	goto	l5397
  8274  000904  0E03               	movlw	3
  8275  000906  6419               	cpfsgt	_menuDaltGLCD^0,c
  8276  000908  D001               	goto	l5397
  8277  00090A  D75D               	goto	u4930
  8278  00090C                     l5397:
  8279  00090C  5019               	movf	_menuDaltGLCD^0,w,c
  8280  00090E  0D1D               	mullw	29
  8281  000910  50F3               	movf	243,w,c
  8282  000912  0F01               	addlw	low _menuList
  8283  000914  2412               	addwf	GLCDMotor@length1^0,w,c
  8284  000916  6E75               	movwf	??_GLCDMotor^0,c
  8285  000918  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8286  00091C                     	if	1	;There is more than 1 active tblptr byte
  8287  00091C  0E02               	movlw	high __smallconst
  8288  00091E  6EF7               	movwf	tblptrh,c
  8289  000920                     	endif
  8290  000920                     	if	0	;tblptru may be non-zero
  8291  000920                     	endif
  8292  000920                     	if	0	;tblptru may be non-zero
  8293  000920                     	endif
  8294  000920  0008               	tblrd		*
  8295  000922  50F5               	movf	tablat,w,c
  8296  000924  0900               	iorlw	0
  8297  000926  B4D8               	btfsc	status,2,c
  8298  000928  D002               	goto	l5401
  8299                           
  8300                           ;GestioLCD.c: 114:     length1++;
  8301  00092A  2A12               	incf	GLCDMotor@length1^0,f,c
  8302                           
  8303                           ;GestioLCD.c: 115:    }
  8304  00092C  0012               	return	
  8305  00092E                     l5401:
  8306  00092E  0E04               	movlw	4
  8307  000930  6019               	cpfslt	_menuDaltGLCD^0,c
  8308  000932  0012               	return	
  8309  000934  5019               	movf	_menuDaltGLCD^0,w,c
  8310  000936  0D1D               	mullw	29
  8311  000938  50F3               	movf	243,w,c
  8312  00093A  0F01               	addlw	low _menuList
  8313  00093C  2412               	addwf	GLCDMotor@length1^0,w,c
  8314  00093E  6E75               	movwf	??_GLCDMotor^0,c
  8315  000940  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8316  000944                     	if	1	;There is more than 1 active tblptr byte
  8317  000944  0E02               	movlw	high __smallconst
  8318  000946  6EF7               	movwf	tblptrh,c
  8319  000948                     	endif
  8320  000948                     	if	0	;tblptru may be non-zero
  8321  000948                     	endif
  8322  000948                     	if	0	;tblptru may be non-zero
  8323  000948                     	endif
  8324  000948  0008               	tblrd		*
  8325  00094A  50F5               	movf	tablat,w,c
  8326  00094C  0900               	iorlw	0
  8327  00094E  A4D8               	btfss	status,2,c
  8328  000950  0012               	return	
  8329                           
  8330                           ;GestioLCD.c: 117:     state = 13;
  8331  000952  0E0D               	movlw	13
  8332  000954  6E18               	movwf	GLCDMotor@state^0,c
  8333  000956  0012               	return	
  8334  000958                     l5407:
  8335                           
  8336                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8337  000958  0E11               	movlw	17
  8338  00095A  6011               	cpfslt	GLCDMotor@length2^0,c
  8339  00095C  D019               	goto	l5417
  8340  00095E  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8341  000960  D017               	goto	l5417
  8342                           
  8343                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8344  000962  0E01               	movlw	1
  8345  000964  6E6E               	movwf	LcGotoXY@Row^0,c
  8346  000966  0E00               	movlw	0
  8347  000968  EC4E  F00D         	call	_LcGotoXY
  8348                           
  8349                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8350  00096C  5019               	movf	_menuDaltGLCD^0,w,c
  8351  00096E  0D1D               	mullw	29
  8352  000970  CFF3 F075          	movff	prodl,??_GLCDMotor
  8353  000974  0E1D               	movlw	29
  8354  000976  2675               	addwf	??_GLCDMotor^0,f,c
  8355  000978  5075               	movf	??_GLCDMotor^0,w,c
  8356  00097A  0F01               	addlw	low _menuList
  8357  00097C  6E76               	movwf	(??_GLCDMotor+1)^0,c
  8358  00097E  C076  F069         	movff	??_GLCDMotor+1,LcNewString@new_s
  8359  000982  5069               	movf	LcNewString@new_s^0,w,c
  8360  000984  A4D8               	btfss	status,2,c
  8361  000986  0E02               	movlw	high __smallconst
  8362  000988  6E6A               	movwf	(LcNewString@new_s+1)^0,c
  8363  00098A  EC29  F00F         	call	_LcNewString	;wreg free
  8364  00098E  D71B               	goto	u4930
  8365  000990                     l5417:
  8366  000990  0E10               	movlw	16
  8367  000992  6411               	cpfsgt	GLCDMotor@length2^0,c
  8368  000994  0012               	return	
  8369  000996  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8370  000998  0012               	return	
  8371                           
  8372                           ;GestioLCD.c: 127:     state = 9;
  8373  00099A  0E09               	movlw	9
  8374  00099C  6E18               	movwf	GLCDMotor@state^0,c
  8375  00099E  0012               	return	
  8376  0009A0                     l5423:
  8377                           
  8378                           ;GestioLCD.c: 131:    if (j<16) {
  8379  0009A0  0E10               	movlw	16
  8380  0009A2  6017               	cpfslt	GLCDMotor@j^0,c
  8381  0009A4  D02B               	goto	l5437
  8382                           
  8383                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8384  0009A6  0E01               	movlw	1
  8385  0009A8  6E6E               	movwf	LcGotoXY@Row^0,c
  8386  0009AA  5017               	movf	GLCDMotor@j^0,w,c
  8387  0009AC  EC4E  F00D         	call	_LcGotoXY
  8388                           
  8389                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8390  0009B0  5019               	movf	_menuDaltGLCD^0,w,c
  8391  0009B2  0D1D               	mullw	29
  8392  0009B4  50F3               	movf	243,w,c
  8393  0009B6  0F01               	addlw	low _menuList
  8394  0009B8  2413               	addwf	GLCDMotor@k2^0,w,c
  8395  0009BA  6E75               	movwf	??_GLCDMotor^0,c
  8396  0009BC  0E1D               	movlw	29
  8397  0009BE  2675               	addwf	??_GLCDMotor^0,f,c
  8398  0009C0  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8399  0009C4                     	if	1	;There is more than 1 active tblptr byte
  8400  0009C4  0E02               	movlw	high __smallconst
  8401  0009C6  6EF7               	movwf	tblptrh,c
  8402  0009C8                     	endif
  8403  0009C8                     	if	0	;tblptru may be non-zero
  8404  0009C8                     	endif
  8405  0009C8                     	if	0	;tblptru may be non-zero
  8406  0009C8                     	endif
  8407  0009C8  0008               	tblrd		*
  8408  0009CA  50F5               	movf	tablat,w,c
  8409  0009CC  ECE2  F00C         	call	_LcPutChar
  8410                           
  8411                           ;GestioLCD.c: 134:     j++;
  8412  0009D0  2A17               	incf	GLCDMotor@j^0,f,c
  8413                           
  8414                           ;GestioLCD.c: 135:     k2++;
  8415  0009D2  2A13               	incf	GLCDMotor@k2^0,f,c
  8416                           
  8417                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8418  0009D4  5019               	movf	_menuDaltGLCD^0,w,c
  8419  0009D6  0D1D               	mullw	29
  8420  0009D8  50F3               	movf	243,w,c
  8421  0009DA  0F01               	addlw	low _menuList
  8422  0009DC  2413               	addwf	GLCDMotor@k2^0,w,c
  8423  0009DE  6E75               	movwf	??_GLCDMotor^0,c
  8424  0009E0  0E1D               	movlw	29
  8425  0009E2  2675               	addwf	??_GLCDMotor^0,f,c
  8426  0009E4  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8427  0009E8                     	if	1	;There is more than 1 active tblptr byte
  8428  0009E8  0E02               	movlw	high __smallconst
  8429  0009EA  6EF7               	movwf	tblptrh,c
  8430  0009EC                     	endif
  8431  0009EC                     	if	0	;tblptru may be non-zero
  8432  0009EC                     	endif
  8433  0009EC                     	if	0	;tblptru may be non-zero
  8434  0009EC                     	endif
  8435  0009EC  0008               	tblrd		*
  8436  0009EE  50F5               	movf	tablat,w,c
  8437  0009F0  0900               	iorlw	0
  8438  0009F2  A4D8               	btfss	status,2,c
  8439  0009F4  0012               	return	
  8440  0009F6  0E00               	movlw	0
  8441  0009F8  6E13               	movwf	GLCDMotor@k2^0,c
  8442  0009FA  0012               	return	
  8443  0009FC                     l5437:
  8444  0009FC  0E0F               	movlw	15
  8445  0009FE  6417               	cpfsgt	GLCDMotor@j^0,c
  8446  000A00  0012               	return	
  8447                           
  8448                           ;GestioLCD.c: 139:     min2++;
  8449  000A02  2A15               	incf	GLCDMotor@min2^0,f,c
  8450                           
  8451                           ;GestioLCD.c: 140:     max2++;
  8452  000A04  2A4E               	incf	GLCDMotor@max2^0,f,c
  8453                           
  8454                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8455  000A06  5019               	movf	_menuDaltGLCD^0,w,c
  8456  000A08  0D1D               	mullw	29
  8457  000A0A  50F3               	movf	243,w,c
  8458  000A0C  0F01               	addlw	low _menuList
  8459  000A0E  244E               	addwf	GLCDMotor@max2^0,w,c
  8460  000A10  6E75               	movwf	??_GLCDMotor^0,c
  8461  000A12  0E1D               	movlw	29
  8462  000A14  2675               	addwf	??_GLCDMotor^0,f,c
  8463  000A16  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8464  000A1A                     	if	1	;There is more than 1 active tblptr byte
  8465  000A1A  0E02               	movlw	high __smallconst
  8466  000A1C  6EF7               	movwf	tblptrh,c
  8467  000A1E                     	endif
  8468  000A1E                     	if	0	;tblptru may be non-zero
  8469  000A1E                     	endif
  8470  000A1E                     	if	0	;tblptru may be non-zero
  8471  000A1E                     	endif
  8472  000A1E  0008               	tblrd		*
  8473  000A20  50F5               	movf	tablat,w,c
  8474  000A22  0900               	iorlw	0
  8475  000A24  A4D8               	btfss	status,2,c
  8476  000A26  D002               	goto	l5445
  8477  000A28  0E00               	movlw	0
  8478  000A2A  6E4E               	movwf	GLCDMotor@max2^0,c
  8479  000A2C                     l5445:
  8480                           
  8481                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8482  000A2C  5019               	movf	_menuDaltGLCD^0,w,c
  8483  000A2E  0D1D               	mullw	29
  8484  000A30  50F3               	movf	243,w,c
  8485  000A32  0F01               	addlw	low _menuList
  8486  000A34  2415               	addwf	GLCDMotor@min2^0,w,c
  8487  000A36  6E75               	movwf	??_GLCDMotor^0,c
  8488  000A38  0E1D               	movlw	29
  8489  000A3A  2675               	addwf	??_GLCDMotor^0,f,c
  8490  000A3C  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8491  000A40                     	if	1	;There is more than 1 active tblptr byte
  8492  000A40  0E02               	movlw	high __smallconst
  8493  000A42  6EF7               	movwf	tblptrh,c
  8494  000A44                     	endif
  8495  000A44                     	if	0	;tblptru may be non-zero
  8496  000A44                     	endif
  8497  000A44                     	if	0	;tblptru may be non-zero
  8498  000A44                     	endif
  8499  000A44  0008               	tblrd		*
  8500  000A46  50F5               	movf	tablat,w,c
  8501  000A48  0900               	iorlw	0
  8502  000A4A  A4D8               	btfss	status,2,c
  8503  000A4C  D002               	goto	l863
  8504  000A4E  0E00               	movlw	0
  8505  000A50  6E15               	movwf	GLCDMotor@min2^0,c
  8506  000A52                     l863:
  8507                           
  8508                           ;GestioLCD.c: 143:     j=0;
  8509  000A52  0E00               	movlw	0
  8510  000A54  6E17               	movwf	GLCDMotor@j^0,c
  8511                           
  8512                           ;GestioLCD.c: 144:     k2=min2;
  8513  000A56  C015  F013         	movff	GLCDMotor@min2,GLCDMotor@k2
  8514  000A5A  D6B5               	goto	u4930
  8515  000A5C                     l5453:
  8516                           
  8517                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8518  000A5C  501A               	movf	_timerGLCD^0,w,c
  8519  000A5E  EC39  F00E         	call	_TiGetTics
  8520  000A62  BE67               	btfsc	(?_TiGetTics+1)^0,7,c
  8521  000A64  D00E               	goto	l865
  8522  000A66  0EB5               	movlw	181
  8523  000A68  5C66               	subwf	?_TiGetTics^0,w,c
  8524  000A6A  0E04               	movlw	4
  8525  000A6C  5867               	subwfb	(?_TiGetTics+1)^0,w,c
  8526  000A6E  B0D8               	btfsc	status,0,c
  8527  000A70  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8528  000A72  D007               	goto	l865
  8529  000A74  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8530  000A76  D005               	goto	l865
  8531                           
  8532                           ;GestioLCD.c: 150:     LcClear();
  8533  000A78  EC89  F00E         	call	_LcClear	;wreg free
  8534  000A7C                     l5461:
  8535                           
  8536                           ;GestioLCD.c: 151:     state = 2;
  8537  000A7C  0E02               	movlw	2
  8538  000A7E  6E18               	movwf	GLCDMotor@state^0,c
  8539                           
  8540                           ;GestioLCD.c: 152:    }
  8541  000A80  0012               	return	
  8542  000A82                     l865:
  8543  000A82  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8544  000A84  0012               	return	
  8545  000A86  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8546  000A88  0012               	return	
  8547                           
  8548                           ;GestioLCD.c: 154:     LcClear();
  8549  000A8A  EC89  F00E         	call	_LcClear	;wreg free
  8550  000A8E  D6F9               	goto	u5000
  8551  000A90                     l5469:
  8552                           
  8553                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8554  000A90  501A               	movf	_timerGLCD^0,w,c
  8555  000A92  ECCB  F00E         	call	_TiResetTics
  8556  000A96  D697               	goto	u4930
  8557  000A98                     l5473:
  8558                           
  8559                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8560  000A98  EC2F  F00F         	call	_LcLliure	;wreg free
  8561  000A9C  A0D8               	btfss	status,0,c
  8562  000A9E  0012               	return	
  8563                           
  8564                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8565  000AA0  501A               	movf	_timerGLCD^0,w,c
  8566  000AA2  ECCB  F00E         	call	_TiResetTics
  8567                           
  8568                           ;GestioLCD.c: 165:     state = 11;
  8569  000AA6  0E0B               	movlw	11
  8570  000AA8  6E18               	movwf	GLCDMotor@state^0,c
  8571  000AAA  0012               	return	
  8572  000AAC                     l5479:
  8573                           
  8574                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8575  000AAC  5019               	movf	_menuDaltGLCD^0,w,c
  8576  000AAE  0D1D               	mullw	29
  8577  000AB0  50F3               	movf	243,w,c
  8578  000AB2  0F01               	addlw	low _menuList
  8579  000AB4  2411               	addwf	GLCDMotor@length2^0,w,c
  8580  000AB6  6E75               	movwf	??_GLCDMotor^0,c
  8581  000AB8  0E1D               	movlw	29
  8582  000ABA  2675               	addwf	??_GLCDMotor^0,f,c
  8583  000ABC  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8584  000AC0                     	if	1	;There is more than 1 active tblptr byte
  8585  000AC0  0E02               	movlw	high __smallconst
  8586  000AC2  6EF7               	movwf	tblptrh,c
  8587  000AC4                     	endif
  8588  000AC4                     	if	0	;tblptru may be non-zero
  8589  000AC4                     	endif
  8590  000AC4                     	if	0	;tblptru may be non-zero
  8591  000AC4                     	endif
  8592  000AC4  0008               	tblrd		*
  8593  000AC6  50F5               	movf	tablat,w,c
  8594  000AC8  0900               	iorlw	0
  8595  000ACA  B4D8               	btfsc	status,2,c
  8596  000ACC  D002               	goto	l5483
  8597                           
  8598                           ;GestioLCD.c: 170:     length2++;
  8599  000ACE  2A11               	incf	GLCDMotor@length2^0,f,c
  8600                           
  8601                           ;GestioLCD.c: 171:    }
  8602  000AD0  0012               	return	
  8603  000AD2                     l5483:
  8604  000AD2  5019               	movf	_menuDaltGLCD^0,w,c
  8605  000AD4  0D1D               	mullw	29
  8606  000AD6  50F3               	movf	243,w,c
  8607  000AD8  0F01               	addlw	low _menuList
  8608  000ADA  2411               	addwf	GLCDMotor@length2^0,w,c
  8609  000ADC  6E75               	movwf	??_GLCDMotor^0,c
  8610  000ADE  0E1D               	movlw	29
  8611  000AE0  2675               	addwf	??_GLCDMotor^0,f,c
  8612  000AE2  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8613  000AE6                     	if	1	;There is more than 1 active tblptr byte
  8614  000AE6  0E02               	movlw	high __smallconst
  8615  000AE8  6EF7               	movwf	tblptrh,c
  8616  000AEA                     	endif
  8617  000AEA                     	if	0	;tblptru may be non-zero
  8618  000AEA                     	endif
  8619  000AEA                     	if	0	;tblptru may be non-zero
  8620  000AEA                     	endif
  8621  000AEA  0008               	tblrd		*
  8622  000AEC  50F5               	movf	tablat,w,c
  8623  000AEE  0900               	iorlw	0
  8624  000AF0  A4D8               	btfss	status,2,c
  8625  000AF2  0012               	return	
  8626  000AF4  D7C3               	goto	l5461
  8627  000AF6                     l5489:
  8628  000AF6  5018               	movf	GLCDMotor@state^0,w,c
  8629  000AF8  6E75               	movwf	??_GLCDMotor^0,c
  8630  000AFA  6A76               	clrf	(??_GLCDMotor+1)^0,c
  8631                           
  8632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8633                           ; Switch size 1, requested type "simple"
  8634                           ; Number of cases is 1, Range of values is 0 to 0
  8635                           ; switch strategies available:
  8636                           ; Name         Instructions Cycles
  8637                           ; simple_byte            4     3 (average)
  8638                           ;	Chosen strategy is simple_byte
  8639  000AFC  5076               	movf	(??_GLCDMotor+1)^0,w,c
  8640  000AFE  0A00               	xorlw	0	; case 0
  8641  000B00  A4D8               	btfss	status,2,c
  8642  000B02  0012               	return	
  8643                           
  8644                           ; Switch size 1, requested type "simple"
  8645                           ; Number of cases is 12, Range of values is 0 to 13
  8646                           ; switch strategies available:
  8647                           ; Name         Instructions Cycles
  8648                           ; simple_byte           37    19 (average)
  8649                           ;	Chosen strategy is simple_byte
  8650  000B04  5075               	movf	??_GLCDMotor^0,w,c
  8651  000B06  0A00               	xorlw	0	; case 0
  8652  000B08  B4D8               	btfsc	status,2,c
  8653  000B0A  D6D0               	goto	l845
  8654  000B0C  0A01               	xorlw	1	; case 1
  8655  000B0E  B4D8               	btfsc	status,2,c
  8656  000B10  D6EA               	goto	l5391
  8657  000B12  0A03               	xorlw	3	; case 2
  8658  000B14  B4D8               	btfsc	status,2,c
  8659  000B16  D638               	goto	l5303
  8660  000B18  0A01               	xorlw	1	; case 3
  8661  000B1A  B4D8               	btfsc	status,2,c
  8662  000B1C  D656               	goto	l5319
  8663  000B1E  0A06               	xorlw	6	; case 5
  8664  000B20  B4D8               	btfsc	status,2,c
  8665  000B22  D6B2               	goto	l5355
  8666  000B24  0A03               	xorlw	3	; case 6
  8667  000B26  B4D8               	btfsc	status,2,c
  8668  000B28  D6A8               	goto	l5347
  8669  000B2A  0A01               	xorlw	1	; case 7
  8670  000B2C  B4D8               	btfsc	status,2,c
  8671  000B2E  D714               	goto	l5407
  8672  000B30  0A0F               	xorlw	15	; case 8
  8673  000B32  B4D8               	btfsc	status,2,c
  8674  000B34  D7B1               	goto	l5473
  8675  000B36  0A01               	xorlw	1	; case 9
  8676  000B38  B4D8               	btfsc	status,2,c
  8677  000B3A  D732               	goto	l5423
  8678  000B3C  0A03               	xorlw	3	; case 10
  8679  000B3E  B4D8               	btfsc	status,2,c
  8680  000B40  D7A7               	goto	l5469
  8681  000B42  0A01               	xorlw	1	; case 11
  8682  000B44  B4D8               	btfsc	status,2,c
  8683  000B46  D78A               	goto	l5453
  8684  000B48  0A06               	xorlw	6	; case 13
  8685  000B4A  A4D8               	btfss	status,2,c
  8686  000B4C  0012               	return	
  8687  000B4E  D7AE               	goto	l5479
  8688  000B50                     __end_of_GLCDMotor:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function _LcPutChar *****************
  8692 ;; Defined at:
  8693 ;;		line 134 in file "LcTLCD.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  c               1    wreg     unsigned char 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  c               1   19[COMRAM] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/1
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1
  8707 ;;      Params:         0       0       0
  8708 ;;      Locals:         1       0       0
  8709 ;;      Temps:          0       0       0
  8710 ;;      Totals:         1       0       0
  8711 ;;Total ram usage:        1 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 5
  8714 ;; This function calls:
  8715 ;;		_CantaData
  8716 ;;		_LcGotoXY
  8717 ;;		_WaitForBusy
  8718 ;; This function is called by:
  8719 ;;		_LcLCD
  8720 ;;		_menu
  8721 ;;		_GLCDMotor
  8722 ;;		_motorSIO
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text69
  8727  0019C4                     __ptext69:
  8728                           	callstack 0
  8729  0019C4                     _LcPutChar:
  8730                           	callstack 24
  8731                           
  8732                           ;incstack = 0
  8733                           ;LcPutChar@c stored from wreg
  8734  0019C4  6E74               	movwf	LcPutChar@c^0,c
  8735                           
  8736                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8737  0019C6  EC2E  F00D         	call	_WaitForBusy	;wreg free
  8738  0019CA  5074               	movf	LcPutChar@c^0,w,c
  8739  0019CC  ECDA  F00D         	call	_CantaData
  8740                           
  8741                           ;LcTLCD.c: 138:  ++ColumnAct;
  8742  0019D0  2A34               	incf	_ColumnAct^0,f,c
  8743                           
  8744                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8745  0019D2  0E02               	movlw	2
  8746  0019D4  1837               	xorwf	_Rows^0,w,c
  8747  0019D6  A4D8               	btfss	status,2,c
  8748  0019D8  D010               	goto	l4133
  8749                           
  8750                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8751  0019DA  0E27               	movlw	39
  8752  0019DC  6434               	cpfsgt	_ColumnAct^0,c
  8753  0019DE  D00D               	goto	l4133
  8754                           
  8755                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8756  0019E0  0E00               	movlw	0
  8757  0019E2  6E34               	movwf	_ColumnAct^0,c
  8758                           
  8759                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8760  0019E4  2A35               	incf	_RowAct^0,f,c
  8761  0019E6  0E01               	movlw	1
  8762  0019E8  6435               	cpfsgt	_RowAct^0,c
  8763  0019EA  D002               	goto	l4131
  8764  0019EC  0E00               	movlw	0
  8765  0019EE  6E35               	movwf	_RowAct^0,c
  8766  0019F0                     l4131:
  8767                           
  8768                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8769  0019F0  C035  F06E         	movff	_RowAct,LcGotoXY@Row
  8770  0019F4  5034               	movf	_ColumnAct^0,w,c
  8771  0019F6  EC4E  F00D         	call	_LcGotoXY
  8772  0019FA                     l4133:
  8773                           
  8774                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8775  0019FA  0435               	decf	_RowAct^0,w,c
  8776  0019FC  A4D8               	btfss	status,2,c
  8777  0019FE  0012               	return	
  8778                           
  8779                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8780  001A00  0E27               	movlw	39
  8781  001A02  6434               	cpfsgt	_ColumnAct^0,c
  8782  001A04  D002               	goto	l4139
  8783  001A06  0E00               	movlw	0
  8784  001A08  6E34               	movwf	_ColumnAct^0,c
  8785  001A0A                     l4139:
  8786                           
  8787                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8788  001A0A  C035  F06E         	movff	_RowAct,LcGotoXY@Row
  8789  001A0E  5034               	movf	_ColumnAct^0,w,c
  8790  001A10  EC4E  F00D         	call	_LcGotoXY
  8791  001A14  0012               	return		;funcret
  8792  001A16                     __end_of_LcPutChar:
  8793                           	callstack 0
  8794                           
  8795 ;; *************** function _CantaData *****************
  8796 ;; Defined at:
  8797 ;;		line 196 in file "LcTLCD.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  Data            1    wreg     unsigned char 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  Data            1    7[COMRAM] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/1
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1
  8811 ;;      Params:         0       0       0
  8812 ;;      Locals:         1       0       0
  8813 ;;      Temps:          0       0       0
  8814 ;;      Totals:         1       0       0
  8815 ;;Total ram usage:        1 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 3
  8818 ;; This function calls:
  8819 ;;		_CantaPartAlta
  8820 ;;		_CantaPartBaixa
  8821 ;; This function is called by:
  8822 ;;		_LcPutChar
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text70
  8827  001BB4                     __ptext70:
  8828                           	callstack 0
  8829  001BB4                     _CantaData:
  8830                           	callstack 25
  8831                           
  8832                           ;incstack = 0
  8833                           ;CantaData@Data stored from wreg
  8834  001BB4  6E68               	movwf	CantaData@Data^0,c
  8835                           
  8836                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8837  001BB6  9694               	bcf	148,3,c	;volatile
  8838  001BB8  9494               	bcf	148,2,c	;volatile
  8839  001BBA  9294               	bcf	148,1,c	;volatile
  8840  001BBC  9094               	bcf	148,0,c	;volatile
  8841                           
  8842                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8843  001BBE  8A8B               	bsf	139,5,c	;volatile
  8844                           
  8845                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8846  001BC0  9E8C               	bcf	140,7,c	;volatile
  8847                           
  8848                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8849  001BC2  888B               	bsf	139,4,c	;volatile
  8850                           
  8851                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8852  001BC4  5068               	movf	CantaData@Data^0,w,c
  8853  001BC6  EC52  F00C         	call	_CantaPartAlta
  8854                           
  8855                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8856  001BCA  888B               	bsf	139,4,c	;volatile
  8857                           
  8858                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8859  001BCC  988B               	bcf	139,4,c	;volatile
  8860                           
  8861                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8862  001BCE  988B               	bcf	139,4,c	;volatile
  8863                           
  8864                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8865  001BD0  888B               	bsf	139,4,c	;volatile
  8866                           
  8867                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8868  001BD2  5068               	movf	CantaData@Data^0,w,c
  8869  001BD4  EC1E  F00C         	call	_CantaPartBaixa
  8870                           
  8871                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8872  001BD8  888B               	bsf	139,4,c	;volatile
  8873                           
  8874                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8875  001BDA  988B               	bcf	139,4,c	;volatile
  8876                           
  8877                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8878  001BDC  8694               	bsf	148,3,c	;volatile
  8879  001BDE  8494               	bsf	148,2,c	;volatile
  8880  001BE0  8294               	bsf	148,1,c	;volatile
  8881  001BE2  8094               	bsf	148,0,c	;volatile
  8882  001BE4  0012               	return		;funcret
  8883  001BE6                     __end_of_CantaData:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _LcNewString *****************
  8887 ;; Defined at:
  8888 ;;		line 241 in file "LcTLCD.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8891 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  8892 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8893 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  8894 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, status,2, status,0
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/1
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1
  8906 ;;      Params:         2       0       0
  8907 ;;      Locals:         0       0       0
  8908 ;;      Temps:          0       0       0
  8909 ;;      Totals:         2       0       0
  8910 ;;Total ram usage:        2 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 2
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_menu
  8917 ;;		_GLCDMotor
  8918 ;;		_motorJoc
  8919 ;;		_motorSIO
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text71
  8924  001E52                     __ptext71:
  8925                           	callstack 0
  8926  001E52                     _LcNewString:
  8927                           	callstack 27
  8928                           
  8929                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8930                           
  8931                           ;incstack = 0
  8932  001E52  C069  F005         	movff	LcNewString@new_s,_s_ptr
  8933  001E56  C06A  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8934                           
  8935                           ;LcTLCD.c: 243:     nou_s = 1;
  8936  001E5A  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8937  001E5C  0012               	return		;funcret
  8938  001E5E                     __end_of_LcNewString:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function _LcLliure *****************
  8942 ;; Defined at:
  8943 ;;		line 257 in file "LcTLCD.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;		None               void
  8950 ;; Registers used:
  8951 ;;		status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/1
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1
  8957 ;;      Params:         0       0       0
  8958 ;;      Locals:         0       0       0
  8959 ;;      Temps:          0       0       0
  8960 ;;      Totals:         0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 2
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_menu
  8968 ;;		_GLCDMotor
  8969 ;;		_motorJoc
  8970 ;;		_motorSIO
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text72
  8975  001E5E                     __ptext72:
  8976                           	callstack 0
  8977  001E5E                     _LcLliure:
  8978                           	callstack 27
  8979                           
  8980                           ;LcTLCD.c: 258:     return !nou_s;
  8981                           
  8982                           ;incstack = 0
  8983  001E5E  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8984  001E60  D002               	goto	l4149
  8985  001E62  90D8               	bcf	status,0,c
  8986  001E64  0012               	return	
  8987  001E66                     l4149:
  8988  001E66  80D8               	bsf	status,0,c
  8989  001E68  0012               	return		;funcret
  8990  001E6A                     __end_of_LcLliure:
  8991                           	callstack 0
  8992                           
  8993 ;; *************** function _LcClear *****************
  8994 ;; Defined at:
  8995 ;;		line 84 in file "LcTLCD.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/1
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1
  9009 ;;      Params:         0       0       0
  9010 ;;      Locals:         0       0       0
  9011 ;;      Temps:          0       0       0
  9012 ;;      Totals:         0       0       0
  9013 ;;Total ram usage:        0 bytes
  9014 ;; Hardware stack levels used: 1
  9015 ;; Hardware stack levels required when called: 5
  9016 ;; This function calls:
  9017 ;;		_CantaIR
  9018 ;;		_Espera
  9019 ;;		_LcGotoXY
  9020 ;;		_WaitForBusy
  9021 ;; This function is called by:
  9022 ;;		_menu
  9023 ;;		_GLCDMotor
  9024 ;;		_motorSIO
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text73
  9029  001D12                     __ptext73:
  9030                           	callstack 0
  9031  001D12                     _LcClear:
  9032                           	callstack 24
  9033                           
  9034                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9035                           
  9036                           ;incstack = 0
  9037  001D12  EC2E  F00D         	call	_WaitForBusy	;wreg free
  9038  001D16  0E01               	movlw	1
  9039  001D18  ECF3  F00D         	call	_CantaIR
  9040                           
  9041                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9042  001D1C  0E00               	movlw	0
  9043  001D1E  6E6E               	movwf	(Espera@ms+1)^0,c
  9044  001D20  0E03               	movlw	3
  9045  001D22  6E6D               	movwf	Espera@ms^0,c
  9046  001D24  5033               	movf	_Timer^0,w,c
  9047  001D26  EC9B  F00E         	call	_Espera
  9048                           
  9049                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9050  001D2A  0E00               	movlw	0
  9051  001D2C  6E6E               	movwf	LcGotoXY@Row^0,c
  9052  001D2E  0E00               	movlw	0
  9053  001D30  EC4E  F00D         	call	_LcGotoXY
  9054  001D34  0012               	return		;funcret
  9055  001D36                     __end_of_LcClear:
  9056                           	callstack 0
  9057                           
  9058 ;; *************** function _LcGotoXY *****************
  9059 ;; Defined at:
  9060 ;;		line 106 in file "LcTLCD.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  Column          1    wreg     unsigned char 
  9063 ;;  Row             1   13[COMRAM] unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  Column          1   18[COMRAM] unsigned char 
  9066 ;;  Fisics          2   14[COMRAM] int 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/1
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1
  9076 ;;      Params:         1       0       0
  9077 ;;      Locals:         5       0       0
  9078 ;;      Temps:          0       0       0
  9079 ;;      Totals:         6       0       0
  9080 ;;Total ram usage:        6 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; Hardware stack levels required when called: 4
  9083 ;; This function calls:
  9084 ;;		_CantaIR
  9085 ;;		_WaitForBusy
  9086 ;; This function is called by:
  9087 ;;		_LcClear
  9088 ;;		_LcPutChar
  9089 ;;		_menu
  9090 ;;		_GLCDMotor
  9091 ;;		_motorJoc
  9092 ;;		_motorSIO
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text74
  9097  001A9C                     __ptext74:
  9098                           	callstack 0
  9099  001A9C                     _LcGotoXY:
  9100                           	callstack 24
  9101                           
  9102                           ;incstack = 0
  9103                           ;LcGotoXY@Column stored from wreg
  9104  001A9C  6E73               	movwf	LcGotoXY@Column^0,c
  9105                           
  9106                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9107  001A9E  506E               	movf	LcGotoXY@Row^0,w,c
  9108  001AA0  B4D8               	btfsc	status,2,c
  9109  001AA2  D004               	goto	l4059
  9110  001AA4  0E00               	movlw	0
  9111  001AA6  6E72               	movwf	(_LcGotoXY$336+1)^0,c
  9112  001AA8  0E40               	movlw	64
  9113  001AAA  D003               	goto	L10
  9114  001AAC                     l4059:
  9115  001AAC  0E00               	movlw	0
  9116  001AAE  6E72               	movwf	(_LcGotoXY$336+1)^0,c
  9117  001AB0  0E00               	movlw	0
  9118  001AB2                     L10:
  9119  001AB2  6E71               	movwf	_LcGotoXY$336^0,c
  9120  001AB4  5073               	movf	LcGotoXY@Column^0,w,c
  9121  001AB6  2471               	addwf	_LcGotoXY$336^0,w,c
  9122  001AB8  6E6F               	movwf	LcGotoXY@Fisics^0,c
  9123  001ABA  0E00               	movlw	0
  9124  001ABC  2072               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9125  001ABE  6E70               	movwf	(LcGotoXY@Fisics+1)^0,c
  9126                           
  9127                           ;LcTLCD.c: 127:  WaitForBusy();
  9128  001AC0  EC2E  F00D         	call	_WaitForBusy	;wreg free
  9129                           
  9130                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9131  001AC4  506F               	movf	LcGotoXY@Fisics^0,w,c
  9132  001AC6  0980               	iorlw	128
  9133  001AC8  ECF3  F00D         	call	_CantaIR
  9134                           
  9135                           ;LcTLCD.c: 130:  RowAct = Row;
  9136  001ACC  C06E  F035         	movff	LcGotoXY@Row,_RowAct
  9137                           
  9138                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9139  001AD0  C073  F034         	movff	LcGotoXY@Column,_ColumnAct
  9140  001AD4  0012               	return		;funcret
  9141  001AD6                     __end_of_LcGotoXY:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function _WaitForBusy *****************
  9145 ;; Defined at:
  9146 ;;		line 212 in file "LcTLCD.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  Busy            1   12[COMRAM] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1
  9160 ;;      Params:         0       0       0
  9161 ;;      Locals:         1       0       0
  9162 ;;      Temps:          0       0       0
  9163 ;;      Totals:         1       0       0
  9164 ;;Total ram usage:        1 bytes
  9165 ;; Hardware stack levels used: 1
  9166 ;; Hardware stack levels required when called: 3
  9167 ;; This function calls:
  9168 ;;		_TiGetTics
  9169 ;;		_TiResetTics
  9170 ;; This function is called by:
  9171 ;;		_LcInit
  9172 ;;		_LcClear
  9173 ;;		_LcGotoXY
  9174 ;;		_LcPutChar
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text75
  9179  001A5C                     __ptext75:
  9180                           	callstack 0
  9181  001A5C                     _WaitForBusy:
  9182                           	callstack 25
  9183                           
  9184                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9185                           
  9186                           ;incstack = 0
  9187  001A5C  8694               	bsf	148,3,c	;volatile
  9188  001A5E  8494               	bsf	148,2,c	;volatile
  9189  001A60  8294               	bsf	148,1,c	;volatile
  9190  001A62  8094               	bsf	148,0,c	;volatile
  9191                           
  9192                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9193  001A64  9A8B               	bcf	139,5,c	;volatile
  9194                           
  9195                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9196  001A66  8E8C               	bsf	140,7,c	;volatile
  9197                           
  9198                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9199  001A68  5033               	movf	_Timer^0,w,c
  9200  001A6A  ECCB  F00E         	call	_TiResetTics
  9201  001A6E                     l4027:
  9202                           
  9203                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9204  001A6E  888B               	bsf	139,4,c	;volatile
  9205  001A70  888B               	bsf	139,4,c	;volatile
  9206                           
  9207                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9208  001A72  0E00               	movlw	0
  9209  001A74  B682               	btfsc	130,3,c	;volatile
  9210  001A76  0E01               	movlw	1
  9211  001A78  6E6D               	movwf	WaitForBusy@Busy^0,c
  9212                           
  9213                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9214  001A7A  988B               	bcf	139,4,c	;volatile
  9215                           
  9216                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9217  001A7C  988B               	bcf	139,4,c	;volatile
  9218                           
  9219                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9220  001A7E  888B               	bsf	139,4,c	;volatile
  9221  001A80  888B               	bsf	139,4,c	;volatile
  9222                           
  9223                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9224  001A82  988B               	bcf	139,4,c	;volatile
  9225                           
  9226                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9227  001A84  988B               	bcf	139,4,c	;volatile
  9228                           
  9229                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9230  001A86  5033               	movf	_Timer^0,w,c
  9231  001A88  EC39  F00E         	call	_TiGetTics
  9232  001A8C  5066               	movf	?_TiGetTics^0,w,c
  9233  001A8E  1067               	iorwf	(?_TiGetTics+1)^0,w,c
  9234  001A90  A4D8               	btfss	status,2,c
  9235  001A92  0012               	return	
  9236                           
  9237                           ;LcTLCD.c: 227:  } while(Busy);
  9238  001A94  506D               	movf	WaitForBusy@Busy^0,w,c
  9239  001A96  B4D8               	btfsc	status,2,c
  9240  001A98  0012               	return	
  9241  001A9A  D7E9               	goto	l4027
  9242  001A9C                     __end_of_WaitForBusy:
  9243                           	callstack 0
  9244                           
  9245 ;; *************** function _CantaIR *****************
  9246 ;; Defined at:
  9247 ;;		line 180 in file "LcTLCD.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  IR              1    wreg     unsigned char 
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;  IR              1    7[COMRAM] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1
  9261 ;;      Params:         0       0       0
  9262 ;;      Locals:         1       0       0
  9263 ;;      Temps:          0       0       0
  9264 ;;      Totals:         1       0       0
  9265 ;;Total ram usage:        1 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 3
  9268 ;; This function calls:
  9269 ;;		_CantaPartAlta
  9270 ;;		_CantaPartBaixa
  9271 ;; This function is called by:
  9272 ;;		_LcInit
  9273 ;;		_LcClear
  9274 ;;		_LcGotoXY
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text76
  9279  001BE6                     __ptext76:
  9280                           	callstack 0
  9281  001BE6                     _CantaIR:
  9282                           	callstack 24
  9283                           
  9284                           ;incstack = 0
  9285                           ;CantaIR@IR stored from wreg
  9286  001BE6  6E68               	movwf	CantaIR@IR^0,c
  9287                           
  9288                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9289  001BE8  9694               	bcf	148,3,c	;volatile
  9290  001BEA  9494               	bcf	148,2,c	;volatile
  9291  001BEC  9294               	bcf	148,1,c	;volatile
  9292  001BEE  9094               	bcf	148,0,c	;volatile
  9293                           
  9294                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9295  001BF0  9A8B               	bcf	139,5,c	;volatile
  9296                           
  9297                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9298  001BF2  9E8C               	bcf	140,7,c	;volatile
  9299                           
  9300                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9301  001BF4  888B               	bsf	139,4,c	;volatile
  9302                           
  9303                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9304  001BF6  5068               	movf	CantaIR@IR^0,w,c
  9305  001BF8  EC52  F00C         	call	_CantaPartAlta
  9306                           
  9307                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9308  001BFC  888B               	bsf	139,4,c	;volatile
  9309                           
  9310                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9311  001BFE  988B               	bcf	139,4,c	;volatile
  9312                           
  9313                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9314  001C00  988B               	bcf	139,4,c	;volatile
  9315                           
  9316                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9317  001C02  888B               	bsf	139,4,c	;volatile
  9318                           
  9319                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9320  001C04  5068               	movf	CantaIR@IR^0,w,c
  9321  001C06  EC1E  F00C         	call	_CantaPartBaixa
  9322                           
  9323                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9324  001C0A  888B               	bsf	139,4,c	;volatile
  9325                           
  9326                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9327  001C0C  988B               	bcf	139,4,c	;volatile
  9328                           
  9329                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9330  001C0E  8694               	bsf	148,3,c	;volatile
  9331  001C10  8494               	bsf	148,2,c	;volatile
  9332  001C12  8294               	bsf	148,1,c	;volatile
  9333  001C14  8094               	bsf	148,0,c	;volatile
  9334  001C16  0012               	return		;funcret
  9335  001C18                     __end_of_CantaIR:
  9336                           	callstack 0
  9337                           
  9338 ;; *************** function _CantaPartBaixa *****************
  9339 ;; Defined at:
  9340 ;;		line 173 in file "LcTLCD.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  c               1    wreg     unsigned char 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  c               1    6[COMRAM] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, status,2, status,0
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/1
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1
  9354 ;;      Params:         0       0       0
  9355 ;;      Locals:         1       0       0
  9356 ;;      Temps:          1       0       0
  9357 ;;      Totals:         2       0       0
  9358 ;;Total ram usage:        2 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 2
  9361 ;; This function calls:
  9362 ;;		Nothing
  9363 ;; This function is called by:
  9364 ;;		_CantaIR
  9365 ;;		_CantaData
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text77
  9370  00183C                     __ptext77:
  9371                           	callstack 0
  9372  00183C                     _CantaPartBaixa:
  9373                           	callstack 24
  9374                           
  9375                           ;incstack = 0
  9376                           ;CantaPartBaixa@c stored from wreg
  9377  00183C  6E67               	movwf	CantaPartBaixa@c^0,c
  9378                           
  9379                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9380  00183E  A667               	btfss	CantaPartBaixa@c^0,3,c
  9381  001840  D003               	goto	u3050
  9382  001842  6A66               	clrf	??_CantaPartBaixa^0,c
  9383  001844  2A66               	incf	??_CantaPartBaixa^0,f,c
  9384  001846  D001               	goto	u3068
  9385  001848                     u3050:
  9386  001848  6A66               	clrf	??_CantaPartBaixa^0,c
  9387  00184A                     u3068:
  9388  00184A  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9389  00184C  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9390  00184E  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9391  001850  508B               	movf	139,w,c	;volatile
  9392  001852  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9393  001854  0BF7               	andlw	-9
  9394  001856  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9395  001858  6E8B               	movwf	139,c	;volatile
  9396                           
  9397                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9398  00185A  A467               	btfss	CantaPartBaixa@c^0,2,c
  9399  00185C  D003               	goto	u3070
  9400  00185E  6A66               	clrf	??_CantaPartBaixa^0,c
  9401  001860  2A66               	incf	??_CantaPartBaixa^0,f,c
  9402  001862  D001               	goto	u3088
  9403  001864                     u3070:
  9404  001864  6A66               	clrf	??_CantaPartBaixa^0,c
  9405  001866                     u3088:
  9406  001866  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9407  001868  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9408  00186A  508B               	movf	139,w,c	;volatile
  9409  00186C  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9410  00186E  0BFB               	andlw	-5
  9411  001870  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9412  001872  6E8B               	movwf	139,c	;volatile
  9413                           
  9414                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9415  001874  A267               	btfss	CantaPartBaixa@c^0,1,c
  9416  001876  D003               	goto	u3090
  9417  001878  6A66               	clrf	??_CantaPartBaixa^0,c
  9418  00187A  2A66               	incf	??_CantaPartBaixa^0,f,c
  9419  00187C  D001               	goto	u3108
  9420  00187E                     u3090:
  9421  00187E  6A66               	clrf	??_CantaPartBaixa^0,c
  9422  001880                     u3108:
  9423  001880  4666               	rlncf	??_CantaPartBaixa^0,f,c
  9424  001882  508B               	movf	139,w,c	;volatile
  9425  001884  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9426  001886  0BFD               	andlw	-3
  9427  001888  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9428  00188A  6E8B               	movwf	139,c	;volatile
  9429                           
  9430                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9431  00188C  A067               	btfss	CantaPartBaixa@c^0,0,c
  9432  00188E  D003               	goto	u3110
  9433  001890  6A66               	clrf	??_CantaPartBaixa^0,c
  9434  001892  2A66               	incf	??_CantaPartBaixa^0,f,c
  9435  001894  D001               	goto	u3128
  9436  001896                     u3110:
  9437  001896  6A66               	clrf	??_CantaPartBaixa^0,c
  9438  001898                     u3128:
  9439  001898  508B               	movf	139,w,c	;volatile
  9440  00189A  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9441  00189C  0BFE               	andlw	-2
  9442  00189E  1866               	xorwf	??_CantaPartBaixa^0,w,c
  9443  0018A0  6E8B               	movwf	139,c	;volatile
  9444  0018A2  0012               	return		;funcret
  9445  0018A4                     __end_of_CantaPartBaixa:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _CantaPartAlta *****************
  9449 ;; Defined at:
  9450 ;;		line 166 in file "LcTLCD.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  c               1    wreg     unsigned char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  c               1    6[COMRAM] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/1
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1
  9464 ;;      Params:         0       0       0
  9465 ;;      Locals:         1       0       0
  9466 ;;      Temps:          1       0       0
  9467 ;;      Totals:         2       0       0
  9468 ;;Total ram usage:        2 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 2
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_CantaIR
  9475 ;;		_CantaData
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text78
  9480  0018A4                     __ptext78:
  9481                           	callstack 0
  9482  0018A4                     _CantaPartAlta:
  9483                           	callstack 24
  9484                           
  9485                           ;incstack = 0
  9486                           ;CantaPartAlta@c stored from wreg
  9487  0018A4  6E67               	movwf	CantaPartAlta@c^0,c
  9488                           
  9489                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9490  0018A6  AE67               	btfss	CantaPartAlta@c^0,7,c
  9491  0018A8  D003               	goto	u2970
  9492  0018AA  6A66               	clrf	??_CantaPartAlta^0,c
  9493  0018AC  2A66               	incf	??_CantaPartAlta^0,f,c
  9494  0018AE  D001               	goto	u2988
  9495  0018B0                     u2970:
  9496  0018B0  6A66               	clrf	??_CantaPartAlta^0,c
  9497  0018B2                     u2988:
  9498  0018B2  4666               	rlncf	??_CantaPartAlta^0,f,c
  9499  0018B4  4666               	rlncf	??_CantaPartAlta^0,f,c
  9500  0018B6  4666               	rlncf	??_CantaPartAlta^0,f,c
  9501  0018B8  508B               	movf	139,w,c	;volatile
  9502  0018BA  1866               	xorwf	??_CantaPartAlta^0,w,c
  9503  0018BC  0BF7               	andlw	-9
  9504  0018BE  1866               	xorwf	??_CantaPartAlta^0,w,c
  9505  0018C0  6E8B               	movwf	139,c	;volatile
  9506                           
  9507                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9508  0018C2  AC67               	btfss	CantaPartAlta@c^0,6,c
  9509  0018C4  D003               	goto	u2990
  9510  0018C6  6A66               	clrf	??_CantaPartAlta^0,c
  9511  0018C8  2A66               	incf	??_CantaPartAlta^0,f,c
  9512  0018CA  D001               	goto	u3008
  9513  0018CC                     u2990:
  9514  0018CC  6A66               	clrf	??_CantaPartAlta^0,c
  9515  0018CE                     u3008:
  9516  0018CE  4666               	rlncf	??_CantaPartAlta^0,f,c
  9517  0018D0  4666               	rlncf	??_CantaPartAlta^0,f,c
  9518  0018D2  508B               	movf	139,w,c	;volatile
  9519  0018D4  1866               	xorwf	??_CantaPartAlta^0,w,c
  9520  0018D6  0BFB               	andlw	-5
  9521  0018D8  1866               	xorwf	??_CantaPartAlta^0,w,c
  9522  0018DA  6E8B               	movwf	139,c	;volatile
  9523                           
  9524                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9525  0018DC  AA67               	btfss	CantaPartAlta@c^0,5,c
  9526  0018DE  D003               	goto	u3010
  9527  0018E0  6A66               	clrf	??_CantaPartAlta^0,c
  9528  0018E2  2A66               	incf	??_CantaPartAlta^0,f,c
  9529  0018E4  D001               	goto	u3028
  9530  0018E6                     u3010:
  9531  0018E6  6A66               	clrf	??_CantaPartAlta^0,c
  9532  0018E8                     u3028:
  9533  0018E8  4666               	rlncf	??_CantaPartAlta^0,f,c
  9534  0018EA  508B               	movf	139,w,c	;volatile
  9535  0018EC  1866               	xorwf	??_CantaPartAlta^0,w,c
  9536  0018EE  0BFD               	andlw	-3
  9537  0018F0  1866               	xorwf	??_CantaPartAlta^0,w,c
  9538  0018F2  6E8B               	movwf	139,c	;volatile
  9539                           
  9540                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9541  0018F4  A867               	btfss	CantaPartAlta@c^0,4,c
  9542  0018F6  D003               	goto	u3030
  9543  0018F8  6A66               	clrf	??_CantaPartAlta^0,c
  9544  0018FA  2A66               	incf	??_CantaPartAlta^0,f,c
  9545  0018FC  D001               	goto	u3048
  9546  0018FE                     u3030:
  9547  0018FE  6A66               	clrf	??_CantaPartAlta^0,c
  9548  001900                     u3048:
  9549  001900  508B               	movf	139,w,c	;volatile
  9550  001902  1866               	xorwf	??_CantaPartAlta^0,w,c
  9551  001904  0BFE               	andlw	-2
  9552  001906  1866               	xorwf	??_CantaPartAlta^0,w,c
  9553  001908  6E8B               	movwf	139,c	;volatile
  9554  00190A  0012               	return		;funcret
  9555  00190C                     __end_of_CantaPartAlta:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function _Espera *****************
  9559 ;; Defined at:
  9560 ;;		line 161 in file "LcTLCD.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  Timer           1    wreg     unsigned char 
  9563 ;;  ms              2   12[COMRAM] int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  Timer           1   15[COMRAM] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  1    wreg      void 
  9568 ;; Registers used:
  9569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1
  9575 ;;      Params:         2       0       0
  9576 ;;      Locals:         1       0       0
  9577 ;;      Temps:          1       0       0
  9578 ;;      Totals:         4       0       0
  9579 ;;Total ram usage:        4 bytes
  9580 ;; Hardware stack levels used: 1
  9581 ;; Hardware stack levels required when called: 3
  9582 ;; This function calls:
  9583 ;;		_TiGetTics
  9584 ;;		_TiResetTics
  9585 ;; This function is called by:
  9586 ;;		_LcInit
  9587 ;;		_LcClear
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text79
  9592  001D36                     __ptext79:
  9593                           	callstack 0
  9594  001D36                     _Espera:
  9595                           	callstack 25
  9596                           
  9597                           ;incstack = 0
  9598                           ;Espera@Timer stored from wreg
  9599  001D36  6E70               	movwf	Espera@Timer^0,c
  9600                           
  9601                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9602  001D38  5070               	movf	Espera@Timer^0,w,c
  9603  001D3A  ECCB  F00E         	call	_TiResetTics
  9604  001D3E                     l4053:
  9605  001D3E  5070               	movf	Espera@Timer^0,w,c
  9606  001D40  EC39  F00E         	call	_TiGetTics
  9607  001D44  506D               	movf	Espera@ms^0,w,c
  9608  001D46  5C66               	subwf	?_TiGetTics^0,w,c
  9609  001D48  5067               	movf	(?_TiGetTics+1)^0,w,c
  9610  001D4A  0A80               	xorlw	128
  9611  001D4C  6E6F               	movwf	??_Espera^0,c
  9612  001D4E  506E               	movf	(Espera@ms+1)^0,w,c
  9613  001D50  0A80               	xorlw	128
  9614  001D52  586F               	subwfb	??_Espera^0,w,c
  9615  001D54  B0D8               	btfsc	status,0,c
  9616  001D56  0012               	return	
  9617  001D58  D7F2               	goto	l4053
  9618  001D5A                     __end_of_Espera:
  9619                           	callstack 0
  9620                           
  9621 ;; *************** function _TiResetTics *****************
  9622 ;; Defined at:
  9623 ;;		line 55 in file "TiTTimer.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  Handle          1    wreg     unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  Handle          1    5[COMRAM] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/1
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1
  9637 ;;      Params:         0       0       0
  9638 ;;      Locals:         1       0       0
  9639 ;;      Temps:          0       0       0
  9640 ;;      Totals:         1       0       0
  9641 ;;Total ram usage:        1 bytes
  9642 ;; Hardware stack levels used: 1
  9643 ;; Hardware stack levels required when called: 2
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_Espera
  9648 ;;		_WaitForBusy
  9649 ;;		_SMotor
  9650 ;;		_TeTeclat
  9651 ;;		_menu
  9652 ;;		_motorAltaveu
  9653 ;;		_GLCDMotor
  9654 ;;		_motorHora
  9655 ;;		_motorSIO
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text80
  9660  001D96                     __ptext80:
  9661                           	callstack 0
  9662  001D96                     _TiResetTics:
  9663                           	callstack 27
  9664                           
  9665                           ;incstack = 0
  9666                           ;TiResetTics@Handle stored from wreg
  9667  001D96  6E66               	movwf	TiResetTics@Handle^0,c
  9668                           
  9669                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9670  001D98  5066               	movf	TiResetTics@Handle^0,w,c
  9671  001D9A  0D03               	mullw	3
  9672  001D9C  50F3               	movf	243,w,c
  9673  001D9E  0FA8               	addlw	low _s_Timers
  9674  001DA0  6ED9               	movwf	fsr2l,c
  9675  001DA2  6ADA               	clrf	fsr2h,c
  9676  001DA4  C003  FFDE         	movff	_h_Tics,postinc2
  9677  001DA8  C004  FFDD         	movff	_h_Tics+1,postdec2
  9678  001DAC  0012               	return		;funcret
  9679  001DAE                     __end_of_TiResetTics:
  9680                           	callstack 0
  9681                           
  9682 ;; *************** function _TiGetTics *****************
  9683 ;; Defined at:
  9684 ;;		line 61 in file "TiTTimer.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  Handle          1    wreg     unsigned char 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  Handle          1    9[COMRAM] unsigned char 
  9689 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  2    5[COMRAM] int 
  9692 ;; Registers used:
  9693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/1
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1
  9699 ;;      Params:         2       0       0
  9700 ;;      Locals:         3       0       0
  9701 ;;      Temps:          2       0       0
  9702 ;;      Totals:         7       0       0
  9703 ;;Total ram usage:        7 bytes
  9704 ;; Hardware stack levels used: 1
  9705 ;; Hardware stack levels required when called: 2
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_Espera
  9710 ;;		_WaitForBusy
  9711 ;;		_SMotor
  9712 ;;		_TeTeclat
  9713 ;;		_menu
  9714 ;;		_motorAltaveu
  9715 ;;		_GLCDMotor
  9716 ;;		_motorHora
  9717 ;;		_motorSIO
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text81
  9722  001C72                     __ptext81:
  9723                           	callstack 0
  9724  001C72                     _TiGetTics:
  9725                           	callstack 27
  9726                           
  9727                           ;incstack = 0
  9728                           ;TiGetTics@Handle stored from wreg
  9729  001C72  6E6A               	movwf	TiGetTics@Handle^0,c
  9730                           
  9731                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9732  001C74  C003  F06B         	movff	_h_Tics,TiGetTics@actual	;volatile
  9733  001C78  C004  F06C         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9734                           
  9735                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9736  001C7C  506A               	movf	TiGetTics@Handle^0,w,c
  9737  001C7E  0D03               	mullw	3
  9738  001C80  50F3               	movf	243,w,c
  9739  001C82  0FA8               	addlw	low _s_Timers
  9740  001C84  6ED9               	movwf	fsr2l,c
  9741  001C86  6ADA               	clrf	fsr2h,c
  9742  001C88  CFDE F068          	movff	postinc2,??_TiGetTics
  9743  001C8C  CFDD F069          	movff	postdec2,??_TiGetTics+1
  9744  001C90  5068               	movf	??_TiGetTics^0,w,c
  9745  001C92  5C6B               	subwf	TiGetTics@actual^0,w,c	;volatile
  9746  001C94  6E66               	movwf	?_TiGetTics^0,c
  9747  001C96  5069               	movf	(??_TiGetTics+1)^0,w,c
  9748  001C98  586C               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9749  001C9A  6E67               	movwf	(?_TiGetTics+1)^0,c
  9750  001C9C  0012               	return		;funcret
  9751  001C9E                     __end_of_TiGetTics:
  9752                           	callstack 0
  9753                           
  9754 ;; *************** function _GLCDInit *****************
  9755 ;; Defined at:
  9756 ;;		line 26 in file "GestioLCD.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;		None
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1
  9770 ;;      Params:         0       0       0
  9771 ;;      Locals:         0       0       0
  9772 ;;      Temps:          0       0       0
  9773 ;;      Totals:         0       0       0
  9774 ;;Total ram usage:        0 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; Hardware stack levels required when called: 3
  9777 ;; This function calls:
  9778 ;;		_TiGetTimer
  9779 ;; This function is called by:
  9780 ;;		_main
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text82
  9785  001EFC                     __ptext82:
  9786                           	callstack 0
  9787  001EFC                     _GLCDInit:
  9788                           	callstack 27
  9789                           
  9790                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9791                           
  9792                           ;incstack = 0
  9793  001EFC  EC6B  F00D         	call	_TiGetTimer	;wreg free
  9794  001F00  6E1A               	movwf	_timerGLCD^0,c
  9795  001F02  0012               	return		;funcret
  9796  001F04                     __end_of_GLCDInit:
  9797                           	callstack 0
  9798                           
  9799 ;; *************** function _TiGetTimer *****************
  9800 ;; Defined at:
  9801 ;;		line 70 in file "TiTTimer.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      unsigned char 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1
  9815 ;;      Params:         0       0       0
  9816 ;;      Locals:         0       0       0
  9817 ;;      Temps:          1       0       0
  9818 ;;      Totals:         1       0       0
  9819 ;;Total ram usage:        1 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 2
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_LcInit
  9826 ;;		_Sinit
  9827 ;;		_TeInit
  9828 ;;		_Minit
  9829 ;;		_initAltaveu
  9830 ;;		_GLCDInit
  9831 ;;		_initHora
  9832 ;;		_initSIO
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text83
  9837  001AD6                     __ptext83:
  9838                           	callstack 0
  9839  001AD6                     _TiGetTimer:
  9840                           	callstack 27
  9841                           
  9842                           ;TiTTimer.c: 74:     counter=0;
  9843                           
  9844                           ;incstack = 0
  9845  001AD6  0E00               	movlw	0
  9846  001AD8  6E2B               	movwf	_counter^0,c
  9847                           
  9848                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9849  001ADA  D007               	goto	l4099
  9850  001ADC                     l4091:
  9851                           
  9852                           ;TiTTimer.c: 76:         counter++;
  9853  001ADC  2A2B               	incf	_counter^0,f,c
  9854                           
  9855                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9856  001ADE  0E08               	movlw	8
  9857  001AE0  182B               	xorwf	_counter^0,w,c
  9858  001AE2  A4D8               	btfss	status,2,c
  9859  001AE4  D002               	goto	l4099
  9860  001AE6  0EFF               	movlw	255
  9861  001AE8  0012               	return	
  9862  001AEA                     l4099:
  9863                           
  9864                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9865  001AEA  502B               	movf	_counter^0,w,c
  9866  001AEC  0D03               	mullw	3
  9867  001AEE  50F3               	movf	243,w,c
  9868  001AF0  0FAA               	addlw	low (_s_Timers+2)
  9869  001AF2  6ED9               	movwf	fsr2l,c
  9870  001AF4  6ADA               	clrf	fsr2h,c
  9871  001AF6  04DE               	decf	postinc2,w,c
  9872  001AF8  B4D8               	btfsc	status,2,c
  9873  001AFA  D7F0               	goto	l4091
  9874                           
  9875                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9876  001AFC  502B               	movf	_counter^0,w,c
  9877  001AFE  0D03               	mullw	3
  9878  001B00  50F3               	movf	243,w,c
  9879  001B02  0FAA               	addlw	low (_s_Timers+2)
  9880  001B04  6ED9               	movwf	fsr2l,c
  9881  001B06  6ADA               	clrf	fsr2h,c
  9882  001B08  0E01               	movlw	1
  9883  001B0A  6EDF               	movwf	indf2,c
  9884                           
  9885                           ;TiTTimer.c: 80:     return (counter);
  9886  001B0C  502B               	movf	_counter^0,w,c
  9887  001B0E  0012               	return		;funcret
  9888  001B10                     __end_of_TiGetTimer:
  9889                           	callstack 0
  9890                           
  9891 ;; *************** function _CtoA *****************
  9892 ;; Defined at:
  9893 ;;		line 23 in file "CtoA.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;		None
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;		None
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/1
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMRAM   BANK0   BANK1
  9907 ;;      Params:         0       0       0
  9908 ;;      Locals:         0       0       0
  9909 ;;      Temps:          0       0       0
  9910 ;;      Totals:         0       0       0
  9911 ;;Total ram usage:        0 bytes
  9912 ;; Hardware stack levels used: 1
  9913 ;; Hardware stack levels required when called: 2
  9914 ;; This function calls:
  9915 ;;		Nothing
  9916 ;; This function is called by:
  9917 ;;		_main
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text84
  9922  001CC6                     __ptext84:
  9923                           	callstack 0
  9924  001CC6                     _CtoA:
  9925                           	callstack 28
  9926                           
  9927                           ;CtoA.c: 24:     if (convertir != 250) {
  9928                           
  9929                           ;incstack = 0
  9930  001CC6  0EFA               	movlw	250
  9931  001CC8  1848               	xorwf	_convertir^0,w,c
  9932  001CCA  B4D8               	btfsc	status,2,c
  9933  001CCC  0012               	return	
  9934                           
  9935                           ;CtoA.c: 25:     if (convertir != 0){
  9936  001CCE  5048               	movf	_convertir^0,w,c
  9937  001CD0  B4D8               	btfsc	status,2,c
  9938  001CD2  D00A               	goto	l3329
  9939                           
  9940                           ;CtoA.c: 26:      stringScore[1]++;
  9941  001CD4  2A5F               	incf	(_stringScore+1)^0,f,c
  9942                           
  9943                           ;CtoA.c: 27:      if (stringScore[1] == 58) {
  9944  001CD6  0E3A               	movlw	58
  9945  001CD8  185F               	xorwf	(_stringScore+1)^0,w,c
  9946  001CDA  A4D8               	btfss	status,2,c
  9947  001CDC  D003               	goto	l3327
  9948                           
  9949                           ;CtoA.c: 28:       stringScore[1] = '0';
  9950  001CDE  0E30               	movlw	48
  9951  001CE0  6E5F               	movwf	(_stringScore+1)^0,c
  9952                           
  9953                           ;CtoA.c: 29:       stringScore[0]++;
  9954  001CE2  2A5E               	incf	_stringScore^0,f,c
  9955  001CE4                     l3327:
  9956                           
  9957                           ;CtoA.c: 31:      convertir--;
  9958  001CE4  0648               	decf	_convertir^0,f,c
  9959                           
  9960                           ;CtoA.c: 32:     } else {
  9961  001CE6  0012               	return	
  9962  001CE8                     l3329:
  9963                           
  9964                           ;CtoA.c: 33:      convertir = 250;
  9965  001CE8  0EFA               	movlw	250
  9966  001CEA  6E48               	movwf	_convertir^0,c
  9967  001CEC  0012               	return		;funcret
  9968  001CEE                     __end_of_CtoA:
  9969                           	callstack 0
  9970                           
  9971 ;; *************** function _high_rsi *****************
  9972 ;; Defined at:
  9973 ;;		line 22 in file "main.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMRAM   BANK0   BANK1
  9987 ;;      Params:         0       0       0
  9988 ;;      Locals:         0       0       0
  9989 ;;      Temps:          4       0       0
  9990 ;;      Totals:         4       0       0
  9991 ;;Total ram usage:        4 bytes
  9992 ;; Hardware stack levels used: 1
  9993 ;; Hardware stack levels required when called: 1
  9994 ;; This function calls:
  9995 ;;		__TiRSITimer
  9996 ;; This function is called by:
  9997 ;;		Interrupt level 2
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	intcode
 10002  000008                     __pintcode:
 10003                           	callstack 0
 10004  000008                     _high_rsi:
 10005                           	callstack 24
 10006                           
 10007                           ;incstack = 0
 10008  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10009  00000A  CFD9 F062          	movff	fsr2l,??_high_rsi
 10010  00000E  CFDA F063          	movff	fsr2h,??_high_rsi+1
 10011  000012  CFF3 F064          	movff	prodl,??_high_rsi+2
 10012  000016  CFF4 F065          	movff	prodh,??_high_rsi+3
 10013  00001A  ECB5  F00C         	call	__TiRSITimer	;wreg free
 10014  00001E  C065  FFF4         	movff	??_high_rsi+3,prodh
 10015  000022  C064  FFF3         	movff	??_high_rsi+2,prodl
 10016  000026  C063  FFDA         	movff	??_high_rsi+1,fsr2h
 10017  00002A  C062  FFD9         	movff	??_high_rsi,fsr2l
 10018  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10019  000030  0011               	retfie		f
 10020  000032                     __end_of_high_rsi:
 10021                           	callstack 0
 10022                           
 10023 ;; *************** function __TiRSITimer *****************
 10024 ;; Defined at:
 10025 ;;		line 37 in file "TiTTimer.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1
 10039 ;;      Params:         0       0       0
 10040 ;;      Locals:         0       0       0
 10041 ;;      Temps:          1       0       0
 10042 ;;      Totals:         1       0       0
 10043 ;;Total ram usage:        1 bytes
 10044 ;; Hardware stack levels used: 1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_high_rsi
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text86
 10053  00196A                     __ptext86:
 10054                           	callstack 0
 10055  00196A                     __TiRSITimer:
 10056                           	callstack 24
 10057                           
 10058                           ;TiTTimer.c: 39:     TMR0H = 223;
 10059                           
 10060                           ;incstack = 0
 10061  00196A  0EDF               	movlw	223
 10062  00196C  6ED7               	movwf	215,c	;volatile
 10063                           
 10064                           ;TiTTimer.c: 40:     TMR0L = 148;
 10065  00196E  0E94               	movlw	148
 10066  001970  6ED6               	movwf	214,c	;volatile
 10067                           
 10068                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10069  001972  94F2               	bcf	242,2,c	;volatile
 10070                           
 10071                           ;TiTTimer.c: 42:     h_Tics++;
 10072  001974  4A03               	infsnz	_h_Tics^0,f,c
 10073  001976  2A04               	incf	(_h_Tics+1)^0,f,c
 10074                           
 10075                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10076  001978  0E48               	movlw	72
 10077  00197A  5C03               	subwf	_h_Tics^0,w,c
 10078  00197C  0EEE               	movlw	238
 10079  00197E  5804               	subwfb	(_h_Tics+1)^0,w,c
 10080  001980  A0D8               	btfss	status,0,c
 10081  001982  0012               	return	
 10082                           
 10083                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10084  001984  0E00               	movlw	0
 10085  001986  6E2B               	movwf	_counter^0,c
 10086  001988                     i2l4343:
 10087  001988  0E07               	movlw	7
 10088  00198A  642B               	cpfsgt	_counter^0,c
 10089  00198C  D001               	goto	i2l4347
 10090  00198E  D015               	goto	i2l4355
 10091  001990                     i2l4347:
 10092                           
 10093                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10094  001990  502B               	movf	_counter^0,w,c
 10095  001992  0D03               	mullw	3
 10096  001994  50F3               	movf	243,w,c
 10097  001996  0FAA               	addlw	low (_s_Timers+2)
 10098  001998  6ED9               	movwf	fsr2l,c
 10099  00199A  6ADA               	clrf	fsr2h,c
 10100  00199C  04DE               	decf	postinc2,w,c
 10101  00199E  A4D8               	btfss	status,2,c
 10102  0019A0  D00A               	goto	i2l4351
 10103                           
 10104                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10105  0019A2  502B               	movf	_counter^0,w,c
 10106  0019A4  0D03               	mullw	3
 10107  0019A6  50F3               	movf	243,w,c
 10108  0019A8  0FA8               	addlw	low _s_Timers
 10109  0019AA  6ED9               	movwf	fsr2l,c
 10110  0019AC  6ADA               	clrf	fsr2h,c
 10111  0019AE  5003               	movf	_h_Tics^0,w,c
 10112  0019B0  5EDE               	subwf	postinc2,f,c
 10113  0019B2  5004               	movf	(_h_Tics+1)^0,w,c
 10114  0019B4  5ADD               	subwfb	postdec2,f,c
 10115  0019B6                     i2l4351:
 10116                           
 10117                           ;TiTTimer.c: 50:         }
 10118  0019B6  2A2B               	incf	_counter^0,f,c
 10119  0019B8  D7E7               	goto	i2l4343
 10120  0019BA                     i2l4355:
 10121                           
 10122                           ;TiTTimer.c: 51:         h_Tics=0;
 10123  0019BA  0E00               	movlw	0
 10124  0019BC  6E04               	movwf	(_h_Tics+1)^0,c
 10125  0019BE  0E00               	movlw	0
 10126  0019C0  6E03               	movwf	_h_Tics^0,c
 10127  0019C2  0012               	return		;funcret
 10128  0019C4                     __end_of__TiRSITimer:
 10129                           	callstack 0
 10130                           
 10131                           	psect	rparam
 10132  0000                     
 10133                           	psect	temp
 10134  00007A                     btemp:
 10135                           	callstack 0
 10136  00007A                     	ds	1
 10137  0000                     int$flags	set	btemp
 10138  0000                     wtemp8	set	btemp+1
 10139  0000                     ttemp5	set	btemp+1
 10140  0000                     ttemp6	set	btemp+4
 10141  0000                     ttemp7	set	btemp+8
 10142                           
 10143                           	psect	idloc
 10144                           
 10145                           ;Config register IDLOC0 @ 0x200000
 10146                           ;	unspecified, using default values
 10147  200000                     	org	2097152
 10148  200000  FF                 	db	255
 10149                           
 10150                           ;Config register IDLOC1 @ 0x200001
 10151                           ;	unspecified, using default values
 10152  200001                     	org	2097153
 10153  200001  FF                 	db	255
 10154                           
 10155                           ;Config register IDLOC2 @ 0x200002
 10156                           ;	unspecified, using default values
 10157  200002                     	org	2097154
 10158  200002  FF                 	db	255
 10159                           
 10160                           ;Config register IDLOC3 @ 0x200003
 10161                           ;	unspecified, using default values
 10162  200003                     	org	2097155
 10163  200003  FF                 	db	255
 10164                           
 10165                           ;Config register IDLOC4 @ 0x200004
 10166                           ;	unspecified, using default values
 10167  200004                     	org	2097156
 10168  200004  FF                 	db	255
 10169                           
 10170                           ;Config register IDLOC5 @ 0x200005
 10171                           ;	unspecified, using default values
 10172  200005                     	org	2097157
 10173  200005  FF                 	db	255
 10174                           
 10175                           ;Config register IDLOC6 @ 0x200006
 10176                           ;	unspecified, using default values
 10177  200006                     	org	2097158
 10178  200006  FF                 	db	255
 10179                           
 10180                           ;Config register IDLOC7 @ 0x200007
 10181                           ;	unspecified, using default values
 10182  200007                     	org	2097159
 10183  200007  FF                 	db	255
 10184                           
 10185                           	psect	config
 10186                           
 10187                           ; Padding undefined space
 10188  300000                     	org	3145728
 10189  300000  FF                 	db	255
 10190                           
 10191                           ;Config register CONFIG1H @ 0x300001
 10192                           ;	Oscillator
 10193                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10194                           ;	Fail-Safe Clock Monitor Enable bit
 10195                           ;	FCMEN = 0x0, unprogrammed default
 10196                           ;	Internal/External Oscillator Switchover bit
 10197                           ;	IESO = 0x0, unprogrammed default
 10198  300001                     	org	3145729
 10199  300001  06                 	db	6
 10200                           
 10201                           ;Config register CONFIG2L @ 0x300002
 10202                           ;	unspecified, using default values
 10203                           ;	Power-up Timer Enable bit
 10204                           ;	PWRT = 0x1, unprogrammed default
 10205                           ;	Brown-out Reset Enable bits
 10206                           ;	BOR = 0x3, unprogrammed default
 10207                           ;	Brown-out Reset Voltage bits
 10208                           ;	BORV = 0x3, unprogrammed default
 10209  300002                     	org	3145730
 10210  300002  1F                 	db	31
 10211                           
 10212                           ;Config register CONFIG2H @ 0x300003
 10213                           ;	Watchdog Timer Enable bit
 10214                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10215                           ;	Watchdog Timer Postscale Select bits
 10216                           ;	WDTPS = 0xF, unprogrammed default
 10217  300003                     	org	3145731
 10218  300003  1E                 	db	30
 10219                           
 10220                           ; Padding undefined space
 10221  300004                     	org	3145732
 10222  300004  FF                 	db	255
 10223                           
 10224                           ;Config register CONFIG3H @ 0x300005
 10225                           ;	CCP2 MUX bit
 10226                           ;	CCP2MX = 0x1, unprogrammed default
 10227                           ;	PORTB A/D Enable bit
 10228                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10229                           ;	Low-Power Timer1 Oscillator Enable bit
 10230                           ;	LPT1OSC = 0x0, unprogrammed default
 10231                           ;	MCLR Pin Enable bit
 10232                           ;	MCLRE = 0x1, unprogrammed default
 10233  300005                     	org	3145733
 10234  300005  81                 	db	129
 10235                           
 10236                           ;Config register CONFIG4L @ 0x300006
 10237                           ;	Stack Full/Underflow Reset Enable bit
 10238                           ;	STVREN = 0x1, unprogrammed default
 10239                           ;	Single-Supply ICSP Enable bit
 10240                           ;	LVP = OFF, Single-Supply ICSP disabled
 10241                           ;	Boot Block Size Select bits
 10242                           ;	BBSIZ = 0x0, unprogrammed default
 10243                           ;	Extended Instruction Set Enable bit
 10244                           ;	XINST = 0x0, unprogrammed default
 10245                           ;	Background Debugger Enable bit
 10246                           ;	DEBUG = 0x1, unprogrammed default
 10247  300006                     	org	3145734
 10248  300006  81                 	db	129
 10249                           
 10250                           ; Padding undefined space
 10251  300007                     	org	3145735
 10252  300007  FF                 	db	255
 10253                           
 10254                           ;Config register CONFIG5L @ 0x300008
 10255                           ;	unspecified, using default values
 10256                           ;	Code Protection bit
 10257                           ;	CP0 = 0x1, unprogrammed default
 10258                           ;	Code Protection bit
 10259                           ;	CP1 = 0x1, unprogrammed default
 10260  300008                     	org	3145736
 10261  300008  03                 	db	3
 10262                           
 10263                           ;Config register CONFIG5H @ 0x300009
 10264                           ;	unspecified, using default values
 10265                           ;	Boot Block Code Protection bitProtect Boot
 10266                           ;	CPB = 0x1, unprogrammed default
 10267                           ;	Data EEPROM Code Protection bit
 10268                           ;	CPD = 0x1, unprogrammed default
 10269  300009                     	org	3145737
 10270  300009  C0                 	db	192
 10271                           
 10272                           ;Config register CONFIG6L @ 0x30000A
 10273                           ;	unspecified, using default values
 10274                           ;	Write Protection bit
 10275                           ;	WRT0 = 0x1, unprogrammed default
 10276                           ;	Write Protection bit
 10277                           ;	WRT1 = 0x1, unprogrammed default
 10278  30000A                     	org	3145738
 10279  30000A  03                 	db	3
 10280                           
 10281                           ;Config register CONFIG6H @ 0x30000B
 10282                           ;	unspecified, using default values
 10283                           ;	Configuration Register Write Protection bit
 10284                           ;	WRTC = 0x1, unprogrammed default
 10285                           ;	Boot Block Write Protection bit
 10286                           ;	WRTB = 0x1, unprogrammed default
 10287                           ;	Data EEPROM Write Protection bit
 10288                           ;	WRTD = 0x1, unprogrammed default
 10289  30000B                     	org	3145739
 10290  30000B  E0                 	db	224
 10291                           
 10292                           ;Config register CONFIG7L @ 0x30000C
 10293                           ;	unspecified, using default values
 10294                           ;	Table Read Protection bit
 10295                           ;	EBTR0 = 0x1, unprogrammed default
 10296                           ;	Table Read Protection bit
 10297                           ;	EBTR1 = 0x1, unprogrammed default
 10298  30000C                     	org	3145740
 10299  30000C  03                 	db	3
 10300                           
 10301                           ;Config register CONFIG7H @ 0x30000D
 10302                           ;	unspecified, using default values
 10303                           ;	Boot Block Table Read Protection bit
 10304                           ;	EBTRB = 0x1, unprogrammed default
 10305  30000D                     	org	3145741
 10306  30000D  40                 	db	64
 10307                           tosu	equ	0xFFF
 10308                           tosh	equ	0xFFE
 10309                           tosl	equ	0xFFD
 10310                           stkptr	equ	0xFFC
 10311                           pclatu	equ	0xFFB
 10312                           pclath	equ	0xFFA
 10313                           pcl	equ	0xFF9
 10314                           tblptru	equ	0xFF8
 10315                           tblptrh	equ	0xFF7
 10316                           tblptrl	equ	0xFF6
 10317                           tablat	equ	0xFF5
 10318                           prodh	equ	0xFF4
 10319                           prodl	equ	0xFF3
 10320                           indf0	equ	0xFEF
 10321                           postinc0	equ	0xFEE
 10322                           postdec0	equ	0xFED
 10323                           preinc0	equ	0xFEC
 10324                           plusw0	equ	0xFEB
 10325                           fsr0h	equ	0xFEA
 10326                           fsr0l	equ	0xFE9
 10327                           wreg	equ	0xFE8
 10328                           indf1	equ	0xFE7
 10329                           postinc1	equ	0xFE6
 10330                           postdec1	equ	0xFE5
 10331                           preinc1	equ	0xFE4
 10332                           plusw1	equ	0xFE3
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           bsr	equ	0xFE0
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           postdec2	equ	0xFDD
 10339                           preinc2	equ	0xFDC
 10340                           plusw2	equ	0xFDB
 10341                           fsr2h	equ	0xFDA
 10342                           fsr2l	equ	0xFD9
 10343                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    145
    Data        68
    BSS         285
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     121
    BANK0           128      0      73
    BANK1           256      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_menu
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30660
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    7632
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    3004
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    8261
                                             20 COMRAM     2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                    _checkHoraAcabat
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1993
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1201
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    7595
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1993
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1238
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2636
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1661
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _checkHoraAcabat
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      49       4       57.0%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17A       7        0.0%
DATA                 0      0     17A       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 05 11:14:26 2022

               TiResetTics@Handle 0066                  _loginNOTRegister 03C6  
                               _i 0021                                 _j 0020  
                UgetUserName@quin 0068         ??_UcheckExistsNotFinished 0066  
          __end_of_compareStrings 1A5C                               l721 1C36  
                             l652 1D0A                               l661 1598  
                             l910 1318                               l902 1248  
                             l911 12A2                               l903 1262  
                             l671 15E8                               l495 0342  
                             l912 12BC                               l752 14CC  
                             l833 0818                               l905 1286  
                             l673 15EE                               l914 12E0  
                             l666 15AC                               l658 158A  
                             l668 15B2                               l845 08AC  
                             l693 0F6A                               l694 0F7A  
                             l863 0A52                               l696 0F86  
                             l865 0A82                               u230 16EE  
                             u250 170A                               u308 173E  
                             u270 1724                               u248 16F0  
                             u290 173C                               u268 170C  
                             u288 1726                               _tmp 002A  
                ??_CantaPartBaixa 0066                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0054  
              __size_of_GLCDMotor 03CA                              l1054 1426  
                            l2201 1B7A                              l1174 0CBA  
                            l1166 0C1E                              l1159 0BF0  
                            l2217 1E1E                              l2163 1E2A  
                            l2341 1C1C                              l2183 1B56  
                            l4027 1A6E                              l4131 19F0  
                            l2195 1B6E                              l4053 1D3E  
                            l4133 19FA                              l5013 0560  
                            l2189 1B62                              l3327 1CE4  
                            l4215 1E36                              l5111 0676  
                            l3329 1CE8                              l5041 05D2  
                            l4091 1ADC                              l4059 1AAC  
                            l4139 1A0A                              l4403 0DB6  
                            l5123 068A                              l5107 0672  
                            l5027 058E                              l4149 1E66  
                            l4405 0DBC                              l5061 060C  
                            l5037 05BA                              l5029 0594  
                            l5303 0788                              l2903 12D4  
                            l4511 0F10                              l4415 0DE6  
                            l2559 15A8                              l4255 1A34  
                            l5223 0F80                              l5135 06B0  
                            l5401 092E                              l5313 07BC  
                            l4505 0F00                              l4441 0E40  
                            l4433 0E24                              l4249 1A18  
                            l5241 0FCA                              l5233 0FBC  
                            l4177 1E42                              l5153 06DC  
                            l5145 06CE                              l5161 06EA  
                            l5209 155C                              l4099 1AEA  
                            l4515 0F18                              l4427 0E0C  
                            l4363 1B2C                              l5243 0FD0  
                            l5227 0F90                              l5333 0826  
                            l2917 12F8                              l4285 1356  
                            l2589 162A                              l5237 0FC0  
                            l5181 14F2                              l5173 14DE  
                            l4605 14A6                              l4613 0B52  
                            l5423 09A0                              l5407 0958  
                            l5327 07F6                              l5319 07CA  
                            l2927 12FC                              l4455 0E6A  
                            l4447 0E56                              l4535 0F2C  
                            l5511 114C                              l5503 1136  
                            l4367 1B34                              l5271 1086  
                            l5255 101C                              l5095 0652  
                            l5079 0632                              l5175 14E4  
                            l4631 0B8E                              l4623 0B6E  
                            l5417 0990                              l5361 089C  
                            l2865 127A                              l2857 125E  
                            l5505 113A                              l5281 109E  
                            l4801 02FA                              l4553 1412  
                            l5355 0888                              l5347 087A  
                            l4491 0EDC                              l4475 0EB4  
                            l4467 0E96                              l4459 0E76  
                            l4387 0D82                              l4379 0D6E  
                            l5531 1180                              l5259 102E  
                            l4811 031E                              l4643 0BBC  
                            l5611 180A                              l5461 0A7C  
                            l5453 0A5C                              l5445 0A2C  
                            l5437 09FC                              l5541 119A  
                            l5525 116A                              l5509 1146  
                            l4901 044C                              l5197 1530  
                            l5189 1502                              l4717 0CF4  
                            l4709 0CCC                              l4653 0BD2  
                            l4645 0BC2                              l5391 08E6  
                            l2895 12B8                              l2879 129E  
                            l4479 0EB8                              l5551 11D6  
                            l5519 115C                              l5287 10AC  
                            l5295 10B8                              l4831 0360  
                            l4575 144C                              l4639 0BB2  
                            l5473 0A98                              l4497 0EE6  
                            l5561 11EC                              l5545 11A6  
                            l5537 118E                              l4905 0456  
                            l4817 0330                              l4753 1668  
                            l4737 1636                              l4577 1452  
                            l4569 143C                              l4681 0C34  
                            l4729 0D1E                              l5483 0AD2  
                            l5571 1204                              l4819 0336  
                            l5469 0A90                              l5397 090C  
                            l5565 11F8                              l5557 11E4  
                            l4941 04BC                              l4917 046E  
                            l4765 1684                              l4597 1498  
                            l4589 1482                              l5479 0AAC  
                            l4935 049E                              l4863 03DA  
                            l4847 03A2                              l4839 0388  
                            l4775 16A4                              l4759 1676  
                            l4783 16B4                              l4679 0C2E  
                            l5489 0AF6                              l5497 1126  
                            l4857 03CA                              l4849 03A8  
                            l4689 0C64                              l4971 04E0  
                            l4947 04C2                              l4891 0424  
                            l4875 03F2                              l4859 03D0  
                            l4795 02E6                              l4787 16BA  
                            l4699 0C9C                              l4959 04C8  
                            l4889 041E                              l4987 0504  
                            l4979 04F2                              l4899 0446  
                            l4999 0532                              STR_1 02DB  
                            STR_2 02D4                              STR_3 02BB  
                            STR_4 02A2                              STR_5 0292  
                            STR_6 02CC                              STR_7 02AF  
                            STR_8 02C4                              u3010 18E6  
                            u3030 18FE                              u3110 1896  
                            u3008 18CE                              _LATD 000F8C  
                            u3050 1848                              u3028 18E8  
                            u3108 1880                              u3300 1404  
                            u3070 1864                              u3048 1900  
                            u3128 1898                              u5000 0882  
                            u3320 1930                              u3090 187E  
                            u3330 1958                              u3068 184A  
                            u5030 08A4                              u3327 1926  
                            u3088 1866                              u4320 047E  
                            u3337 194E                              u3290 1A40  
                            u4250 0402                              u3540 0E50  
                            u3460 0DDA                              u5300 10F6  
                            u4340 04B2                              u5310 1106  
                            u4350 04B4                              u5320 1116  
                            u5306 10F8                              u3660 0EEE  
                            u3580 0E86                              u5316 1108  
                            u3670 0F08                              u5326 1118  
                            u3910 0BF8                              u4640 069A  
                            u3920 0BFC                              u2970 18B0  
                            u5290 10EC                              u4650 06A2  
                            u2990 18CC                              u3950 0C7A  
                            u4930 07C6                              u5298 10EE  
                            u2988 18B2                              u4790 0F8A  
                            _CtoA 1CC6                   ??_SsetNovaTecla 0066  
          __end_of_SIOcheckKrebut 1E22                              _cap1 03BF  
                            _Rows 0037                              _cap2 03BE  
                            _main 17C4                              _hora 0058  
                            _menu 02E4                              _nota 001E  
                 __end_of_HJugant 1F0A                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 007A  
                 __end_of_JJuguem 1EAC                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1D36  
                            start 0032                   __end_of_CantaIR 1C18  
                    ?_initAltaveu 0061                     LcInit@columns 0071  
                    ___param_bank 000000                       _stringScore 005E  
                __end_of_GLCDInit 1F04          __size_of_SIONovaDireccio 0008  
                  _HClearNouSegon 1F2A                             ?_CtoA 0061  
              __size_of_CToAReset 000A                       Espera@Timer 0070  
                           ?_main 0061           __size_of_escriureEEPROM 002E  
                           ?_menu 0061                             _EEADR 000FA9  
                   ??_TiInitTimer 0066                             _T0CON 000FD5  
                 ?_compareStrings 0066                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 190C                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 0061  
                           _TXREG 000FAD                             _SMSon 1F0A  
                           _TXSTA 000FAC                       _MNovaLletra 1EE4  
                           _Minit 1EEC                  __end_of_HGetTime 1F2A  
                           _Sinit 1EDC                             _Timer 0033  
                           _Uinit 1580                   __end_of_initSIO 1EB4  
                           _rebut 0009                             _s_ptr 0005  
                           _nou_s 03C8             __end_of_JoystickMotor 1330  
                 _HActualitzaHora 1B7E       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03B8                             tablat 000FF5  
                     _LcNewString 1E52                     ??_TiResetTics 0066  
                 ?_SIOcheckKrebut 0061                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                  ?_checkHoraAcabat 0061  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1AD6  
            CToAConverteix@numero 0066                  __end_of_LcLliure 1E6A  
                   ??__TiRSITimer 0061                        _TiGetTimer 1AD6  
         EscriuPrimeraOrdre@ordre 0067                      __end_of_CtoA 1CEE  
                __end_of_JendGame 1F4E                       ?_SIOendGame 0061  
                 __initialization 174C                __size_of_CantaData 0032  
                    __end_of_main 183C            __end_of_HClearNouSegon 1F2E  
                    __end_of_menu 0786           ?_SIOHaAcabatPuntuacions 0061  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 0061  
               __end_of_GLCDMotor 0B50                  __end_of_TeTeclat 1246  
                   _indexNextUser 0023                            ??_CtoA 0066  
                          ??_main 0077                            ??_menu 0075  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                   _ultimaTeclaAD 0010            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0012                  GLCDMotor@length2 0011  
                      _JnovaTecla 1E94                            ?_LcLCD 0061  
                          ?_SMSon 0061                      ?_CToAobtenir 0066  
                          ?_Minit 0061                            ?_Sinit 0061  
                          ?_Uinit 0061                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1B48  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0066                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0066                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 0066                         ??_LcClear 0074  
                       ??_CantaIR 0068                            i2l4351 19B6  
                          i2l4343 1988                            i2l4355 19BA  
                          i2l4347 1990                    LcGotoXY@Fisics 006F  
                  LcGotoXY@Column 0073                     ??_WaitForBusy 006D  
              __size_of_TiGetTics 002C                            _SPBRGH 000FB0  
                  _sumaPulsacions 0032                 __end_of_CToAReset 1E74  
                          _SMSoff 1F10                SIONovaDireccio@num 0066  
                          _LcInit 1330                      _MNouJoystick 1EF4  
                  _UgetNumUsuaris 1F32                            _SMotor 0D6C  
             escriureCharEEPROM@c 0067                            _TeInit 1ED4  
                          _Espera 1D36                      _LcGotoXY$336 0071  
                          _Krebut 03B8    __end_of_SIOHaAcabatPuntuacions 1F46  
                          _RowAct 0035               __end_of_TiResetTics 1DAE  
                          Uinit@i 0068                            Uinit@j 0069  
                __end_of_high_rsi 0032                            _h_Tics 0003  
                 ?_HClearNouSegon 0061                     ?_CToAHaAcabat 0061  
                __end_of_initHora 1EBC                            _borram 03C3  
             __end_of__TiRSITimer 19C4                  __end_of_menuList 0292  
                          clear_0 1792                            clear_1 179E  
                          clear_2 17B0                            _jugant 03BD  
                          _segons 000D                        _UenviaChar 1DFA  
                          isa$std 000001                        UenviaPas@c 0067  
     __size_of_EscriuPrimeraOrdre 007A                 __end_of_HNouSegon 1E2E  
                       ??_initSIO 0067                      __pdataCOMRAM 0045  
          __size_of_CantaPartAlta 0068                  __end_of_motorSIO 0D6C  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 1BB4  
               ??_SIONovaDireccio 0066                  __end_of_motorJoc 14CA  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 0066                   _currentUsrIndex 0025  
             __size_of_SIOendGame 0004                 __end_of_CantaData 1BE6  
                    TeTeclat@cols 002D                         ?_GLCDInit 0061  
                   ?_UcheckExists 0061                        __accesstop 0080  
         __end_of__initialization 17B6            __end_of_UgetNumUsuaris 1F36  
               __end_of_LcPutChar 1A16                     _JnovaDireccio 1E9C  
                JnovaDireccio@dir 0066                     ___rparam_used 000001  
                   __end_of_LcLCD 196A                       ?_TiGetTimer 0061  
                   __end_of_SMSon 1F10                 SIONovaTecla@tecla 0066  
                  __pcstackCOMRAM 0061                     __end_of_Minit 1EF4  
             __end_of_WaitForBusy 1A9C                     __end_of_Sinit 1EE4  
                   __end_of_Uinit 1634                 __end_of_NoFerMenu 1F4A  
                       ?_HGetTime 0066                      __pidataBANK0 1C9E  
                  ??_CToAHaAcabat 0066              __size_of_initAltaveu 0008  
               __end_of_URegister 1F3E                 __end_of_HnoJugant 1F26  
               __end_of_SiFerMenu 1F42                    _escriureEEPROM 1C18  
               __end_of_TiGetTics 1C9E                       _TiInitTimer 1B10  
                     ?_JnovaTecla 0061                           ??_LcLCD 0075  
                         ??_SMSon 0066                         ?_LcGotoXY 006E  
                       ?_LcLliure 0061                           ??_Minit 0067  
                         ??_Sinit 0067                   JnovaTecla@tecla 0066  
                         ??_Uinit 0066              __size_of_init_eusart 0016  
                       ?_JendGame 0061                    ??_UcheckExists 0066  
             MNouJoystick@posicio 0066                        ??_GLCDInit 0067  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 00A8  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 002C  
                       ?_TeTeclat 0061                       _TiResetTics 1D96  
                 ?_UgetNumUsuaris 0061                    ?_JnovaDireccio 0061  
                   ??_UmotorUsers 006B                     ?_JoystickInit 0061  
                         ?_SMSoff 0061                           ?_LcInit 0071  
                   _CantaPartAlta 18A4                           ?_SMotor 0061  
                         ?_TeInit 0061                           ?_Espera 006D  
               __end_of_UenviaPas 1DFA                       __TiRSITimer 196A  
             _indexNextUserStruct 0022                        ??_HGetTime 0068  
                   ?_UgetUserName 0066                  ??_compareStrings 0069  
          __end_of_escriureEEPROM 1C46                           _BAUDCON 000FB8  
                     ?_UenviaChar 0066              __size_of_playAltaveu 0004  
              __size_of_motorHora 009E            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0073                  ?_HActualitzaHora 0066  
                      ??_LcGotoXY 006F                      ?_MNovaLletra 0061  
                      ??_LcLliure 0066                  ??_SIOcheckKrebut 0066  
             __size_of_TiGetTimer 003A              __size_of_CToAobtenir 0004  
                      ??_JendGame 0066                           _HJugant 1F04  
                       ?_high_rsi 0061                           _JJuguem 1EA4  
                         _LcClear 1D12                           _CantaIR 1BE6  
                    ?_LcNewString 0069                    ??_JoystickInit 0066  
                       ?_initHora 0061                        ??_TeTeclat 006D  
                     _WaitForBusy 1A5C                    ?_CantaPartAlta 0061  
                         _Columns 0036             __end_of_SsetNovaTecla 1ECC  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E0  
                         __Hparam 0000                   __size_of_SMotor 01FC  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
                    ??_SIOendGame 0066                         ?_motorSIO 0061  
                       ?_motorJoc 0061                    ??_UgetUserName 0068  
             __end_of_UmotorUsers 10E2          ?_UcheckExistsNotFinished 0061  
                 ?_escriureEEPROM 0061                     ?_motorAltaveu 0061  
                    __psmallconst 0200            _escriure2usuarisStruct 1C46  
                         __pcinit 174C      __end_of_UcheckExistsGetError 1E94  
                         _ferMenu 03C1                        _init_ports 1D5A  
                         __ramtop 0200                           __ptext0 17C4  
                         __ptext1 0B50                           __ptext2 1F16  
                         __ptext3 1F1A                           __ptext4 1E0A  
                         __ptext5 1E6A                           __ptext6 1410  
                         __ptext7 1B48                           __ptext8 1F1E  
                         __ptext9 1E16                         _T0CONbits 000FD5  
                       _GLCDMotor 0786                         CantaIR@IR 0068  
                         _initSIO 1EAC                           _counter 002B  
                         _horaTmp 0041            conversorJoystick@direc 0066  
                     UenviaChar@c 0067        __end_of_escriureCharEEPROM 1D12  
                LcNewString@new_s 0069                   WaitForBusy@Busy 006D  
                     Uinit@j_1156 006A                           _userPtr 0001  
               GLCDMostraMenu@num 0066                __end_of_SIOendGame 1F22  
                      ??_high_rsi 0062              __end_of_CToAHaAcabat 1F1E  
            end_of_initialization 17B6                           _usuaris 0100  
                 ??_JnovaDireccio 0066                        ??_initHora 0067  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 006A                     _MsetNovaTecla 1ECC  
             __size_of_UenviaChar 0010                 _conversorJoystick 1B48  
               __end_of_motorHora 16D2                  ??_HClearNouSegon 0066  
                      _novaLletra 0052                ?_conversorJoystick 0061  
                 _usuariActualSIO 004B                        ??_motorSIO 0075  
                       _CToAReset 1E6A                        ??_motorJoc 0074  
                 TiGetTics@actual 006B                     ?_SIONovaTecla 0061  
                      GLCDMotor@j 0017                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1E84  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006D  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 0024  
            __end_of_UcheckExists 1F3A                     TeTeclat@files 002C  
             ??_conversorJoystick 0066                SIOStartGame@usuari 0066  
          __size_of_JoystickMotor 00EA                     TeTeclat@state 002E  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0061                     ?_SIOStartGame 0061  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _HNouSegon 1E22                    _GLCDMostraMenu 1E46  
       __end_of_conversorJoystick 1B7E                   ??_CantaPartAlta 0066  
                  ?_MsetNovaTecla 0061                         _CantaData 1BB4  
               __size_of_GLCDInit 0008                       _UmotorUsers 0F68  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1E46  
                  __end_of_SMSoff 1F16                      ??_TiGetTimer 0066  
                  __end_of_LcInit 1410                    ??_SIONovaTecla 0066  
                      ?_CToAReset 0061                    __end_of_SMotor 0F68  
                       _LcPutChar 19C4                    __end_of_TeInit 1EDC  
               motorAltaveu@state 001B                    __end_of_Espera 1D5A  
                  GLCDMotor@state 0018        __end_of_EscriuPrimeraOrdre 174C  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1D7A  
                     ?_init_ports 0061                         _NoFerMenu 1F46  
                       _ColumnAct 0034              __end_of_JoystickInit 1DEA  
                  ??_SIOStartGame 0066                         _URegister 1F3A  
                       _HnoJugant 1F22                      ?_TiInitTimer 0061  
                    ??_JnovaTecla 0066                         _SiFerMenu 1F3E  
             start_initialization 174C                         _TiGetTics 1C72  
          __end_of_GLCDMostraMenu 1E52                        ?_HNouSegon 0061  
                ??_UgetNumUsuaris 0066                  UmotorUsers@state 001F  
               __size_of_LcGotoXY 003A              __end_of_UgetUserName 1DD8  
              __end_of_TiGetTimer 1B10                     JJuguem@usuari 0066  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 1246                 __size_of_JendGame 0004  
                    ?_TiResetTics 0061                        ?_CantaData 0061  
            _UcheckExistsGetError 1E8C           __end_of_SIONovaDireccio 1E8C  
            __size_of_LcNewString 000C                          ??_SMSoff 0066  
                        ??_LcInit 0072                         _NovaTecla 0053  
               __size_of_TeTeclat 0164                          ??_SMotor 006D  
                        ??_TeInit 0067                      ?__TiRSITimer 0061  
                   ??_initAltaveu 0067                          ??_Espera 006F  
              __end_of_JnovaTecla 1E9C                        ?_LcPutChar 0061  
                       _UenviaPas 1DEA                       __pdataBANK0 0080  
                  motorHora@state 000C                      _menuDaltGLCD 0019  
                    ??_UenviaChar 0067                        ?_NoFerMenu 0061  
                     ??_GLCDMotor 0075                        ?_URegister 0061  
                      ?_HnoJugant 0061                 ??_checkHoraAcabat 0066  
                   ??_init_eusart 0066                        ?_SiFerMenu 0061  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                      ?_TiGetTics 0066                   ?_GLCDMostraMenu 0061  
                        ?_HJugant 0061                    ?_JoystickMotor 0061  
                 ??_MsetNovaTecla 0066              __end_of_motorAltaveu 1580  
                        ?_JJuguem 0061                          ?_LcClear 0061  
                        ?_CantaIR 0061        __size_of_conversorJoystick 0036  
                  _CantaPartBaixa 183C          ??_SIOHaAcabatPuntuacions 0066  
           ?_UcheckExistsGetError 0061                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0061               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 0066                SsetNovaTecla@tecla 0066  
              __end_of_UenviaChar 1E0A           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008                  ??_escriureEEPROM 0066  
           __size_of_UcheckExists 0004                       ??_CToAReset 0066  
         ?_escriure2usuarisStruct 0061                         __pintcode 0008  
                   ??_playAltaveu 0066                        ?_UenviaPas 0066  
               __size_of_motorSIO 021C                 __size_of_motorJoc 00BA  
                 CantaPartBaixa@c 0067                      _CToAHaAcabat 1F1A  
             __end_of_initAltaveu 1EC4                         _arrayZero 0045  
                        ?_initSIO 0061                       __smallconst 0200  
                       _convertir 0048                     ??_CToAobtenir 0068  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1E84                    __size_of_Sinit 0008  
                     ??_HNouSegon 0066                    __size_of_Uinit 00B4  
                     _direccioSIO 004A                       _direccioJoc 000B  
          __end_of_CantaPartBaixa 18A4                JoystickMotor@state 000F  
                        _GLCDInit 1EFC                escriureEEPROM@caca 0066  
                     _do_register 03C4               __end_of_init_eusart 1DC4  
                       _newString 03C0                      _UcheckExists 1F36  
                       _loginText 00A0                         _jugantSIO 03B9  
        __size_of_HActualitzaHora 0036                         _jugantJoc 03BA  
                     ??_CantaData 0068                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0061                  ?_SIONovaDireccio 0061  
            __end_of_SIOStartGame 1E7C                     UenviaChar@pos 0066  
  __end_of_escriure2usuarisStruct 1C72                _escriureCharEEPROM 1CEE  
                       _novaTecla 0056                     motorSIO@state 0007  
                        _PIR1bits 000F9E                       ??_LcPutChar 0074  
                       _timerGLCD 001A                         _motorHora 1634  
                        _RCONbits 000FD0                         _reproduir 03C2  
                        _HGetTime 1F26             __size_of_JoystickInit 0012  
                       _timerHora 000E                         _timerMenu 0029  
             ?_escriureCharEEPROM 0066                       ??_NoFerMenu 0066  
                      _ADCON0bits 000FC2                       ??_URegister 0066  
                     ??_HnoJugant 0066                       ??_SiFerMenu 0066  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1F32  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006D  
                       _zeroTecla 0031                          _LcGotoXY 1A9C  
                  _usuariLoguejat 0050                          _LcLliure 1E5E  
                     ??_TiGetTics 0068           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                   ??_JoystickMotor 0067  
                   GLCDMotor@max1 004F                     GLCDMotor@max2 004E  
                   GLCDMotor@min1 0016                     GLCDMotor@min2 0015  
                    _teclaPremuda 0089                          _JendGame 1F4A  
                       _usuariJoc 004D                       LcGotoXY@Row 006E  
                       copy_data0 1760                         copy_data1 1780  
            ??_escriureCharEEPROM 0067                   ?_CantaPartBaixa 0061  
             __end_of_CToAobtenir 1F1A                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0066             escriureCharEEPROM@pos 0066  
                __size_of_JJuguem 0008                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 10E2  
           __end_of_JnovaDireccio 1EA4                    ??_MNouJoystick 0066  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 0061  
                    _JoystickInit 1DD8                        _EECON1bits 000FA6  
                    _registerText 0095                       _indexUsuari 0027  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0018  
                   motorJoc@state 000A                          __Hrparam 0000  
                     _initAltaveu 1EBC                         menu@state 0026  
                        __Lrparam 0000                        ?_motorHora 0061  
            __size_of__TiRSITimer 005A                      _UgetUserName 1DC4  
                     ??_UenviaPas 0067                      _novaDireccio 0051  
                    ??_init_ports 0066               HActualitzaHora@nova 0066  
                     _init_eusart 1DAE                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 00B6                      _novaTeclaJOC 004C  
                    _novaTeclaSIO 0049                   _do_check_exists 03C5  
                        __ptext10 1E74                          __ptext11 1E7C  
              _EscriuPrimeraOrdre 16D2                          __ptext20 14CA  
                        __ptext12 1E84                          __ptext21 02E4  
                        __ptext13 1F22                          __ptext30 1F3A  
                        __ptext22 1E2E                          __ptext14 1E22  
                        __ptext31 1F3E                          __ptext23 1DC4  
                        __ptext15 1F04                          __ptext40 1B7E  
                        __ptext32 1F0A                          __ptext24 1F32  
                        __ptext16 1F26                          __ptext41 1E46  
                        __ptext33 1F10                          __ptext25 1DEA  
                        __ptext17 1F2A                          __ptext50 1CEE  
                        __ptext42 1D5A                          __ptext34 1F42  
                        __ptext26 1DFA                          __ptext18 1634  
                        __ptext51 1A16                          __ptext43 1DAE  
                        __ptext35 1F46                          __ptext27 1E3A  
                        __ptext19 1F2E                          __ptext60 1EE4  
                        __ptext52 1580                          __ptext44 1EAC  
                        __ptext36 1E94                          __ptext28 1E8C  
                        __ptext61 1EEC                          __ptext53 1B10  
                        __ptext45 1EB4                          __ptext37 1E9C  
                        __ptext29 1F36                          __ptext70 1BB4  
                        __ptext62 190C                          __ptext54 10E2  
                        __ptext46 1EBC                          __ptext38 1F4A  
                        __ptext71 1E52                          __ptext63 1330  
                        __ptext55 1EC4                          __ptext47 1C18  
                        __ptext39 1EA4                          __ptext80 1D96  
                        __ptext72 1E5E                          __ptext64 16D2  
                        __ptext56 1ECC                          __ptext48 1C46  
                        __ptext81 1C72                          __ptext73 1D12  
                        __ptext65 1246                          __ptext57 1ED4  
                        __ptext49 0F68                          __ptext82 1EFC  
                        __ptext74 1A9C                          __ptext66 1EF4  
                        __ptext58 1EDC                          __ptext83 1AD6  
                        __ptext75 1A5C                          __ptext67 1DD8  
                        __ptext59 0D6C                          __ptext84 1CC6  
                        __ptext76 1BE6                          __ptext68 0786  
                        __ptext77 183C                          __ptext69 19C4  
                        __ptext86 196A                          __ptext78 18A4  
                        __ptext79 1D36                    CantaPartAlta@c 0067  
                     _lletraASCII 0057                          _high_rsi 0008  
                        _copsNota 001C                          _s_Timers 00A8  
                   __size_of_CtoA 0028                          _initHora 1EB4  
                     _lletraInici 0080                          _menuDalt 0028  
                        _menuList 0201               ?_EscriuPrimeraOrdre 0061  
                   __size_of_main 0078                     __size_of_menu 04A2  
           __end_of_CantaPartAlta 190C                    _CToAConverteix 1E0A  
                   CantaData@Data 0068                          _tiTeclat 002F  
              __end_of_init_ports 1D7A                          _setSMSon 03C7  
                   _SsetNovaTecla 1EC4              __size_of_WaitForBusy 0040  
                        _nouSegon 03BC                          _motorSIO 0B50  
               ??_HActualitzaHora 0067                          _motorJoc 1410  
                 _checkHoraAcabat 1E2E                          _timerSIO 0008  
                        _timerSMS 0055                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 0066  
                     _playAltaveu 1F2E                      _motorAltaveu 14CA  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 1F42  
            ??_EscriuPrimeraOrdre 0066                        LcInit@rows 0072  
                ??_GLCDMostraMenu 0066             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1E3A                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0066                       _CToAobtenir 1F16  
           __size_of_SIOStartGame 0008                     ??_LcNewString 006B  
                        intlevel2 0000                      _timerAltaveu 001D  
          __end_of_CToAConverteix 1E16                        LcPutChar@c 0074  
                  ?_SsetNovaTecla 0061                 MNovaLletra@lletra 0066  
                 compareStrings@a 0066                   compareStrings@b 0067  
                     ??_motorHora 006D                      _SIONovaTecla 1E7C  
                     _tempsAcabat 03BB                       GLCDMotor@k1 0014  
                     GLCDMotor@k2 0013              __end_of_MNouJoystick 1EFC  
                    _SIOStartGame 1E74                    _compareStrings 1A16  
                     _tmpPassword 00C0               __end_of_MNovaLletra 1EEC  
                 ?_CToAConverteix 0061             __end_of_MsetNovaTecla 1ED4  
         __end_of_checkHoraAcabat 1E3A                       _tmpUsername 0038  
                  _SIOcheckKrebut 1E16                       SMotor@state 0030  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1E5E  
            __size_of_UmotorUsers 017A                        _SIOendGame 1F1E  
