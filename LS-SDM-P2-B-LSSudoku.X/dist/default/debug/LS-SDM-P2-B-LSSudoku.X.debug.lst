

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 20 11:53:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.32
    48                           ; Generated 02/02/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4321 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  000946                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _lletraInici
    88  000946  41                 	db	65
    89  000947  44                 	db	68
    90  000948  47                 	db	71
    91  000949  4A                 	db	74
    92  00094A  4D                 	db	77
    93  00094B  50                 	db	80
    94  00094C  54                 	db	84
    95  00094D  57                 	db	87
    96  00094E  00                 	db	0
    97                           
    98                           ;initializer for _novaLletra
    99  00094F  FF                 	db	255
   100                           
   101                           ;initializer for _NovaTecla
   102  000950  FF                 	db	255
   103                           
   104                           ;initializer for _ultimaTecla
   105  000951  FF                 	db	255
   106                           
   107                           ;initializer for _timerSMS
   108  000952  FF                 	db	255
   109                           
   110                           ;initializer for _novaTecla
   111  000953  FF                 	db	255
   112                           
   113                           ;initializer for _lletraASCII
   114  000954  FF                 	db	255
   115                           
   116                           ;initializer for _teclaPremuda
   117  000955  01                 	db	1
   118  000956  02                 	db	2
   119  000957  03                 	db	3
   120  000958  04                 	db	4
   121  000959  05                 	db	5
   122  00095A  06                 	db	6
   123  00095B  07                 	db	7
   124  00095C  08                 	db	8
   125  00095D  09                 	db	9
   126  00095E  0A                 	db	10
   127  00095F  00                 	db	0
   128  000960  0B                 	db	11
   129  0000                     _PORTDbits	set	3971
   130  0000                     _LATD	set	3980
   131  0000                     _TRISD	set	3989
   132  0000                     _TRISC	set	3988
   133  0000                     _LATBbits	set	3978
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISA	set	3986
   136  0000                     _PORTCbits	set	3970
   137  0000                     _LATDbits	set	3980
   138  0000                     _LATCbits	set	3979
   139  0000                     _TRISDbits	set	3989
   140  0000                     _TRISCbits	set	3988
   141  0000                     _RCONbits	set	4048
   142  0000                     _T0CONbits	set	4053
   143  0000                     _TMR0L	set	4054
   144  0000                     _TMR0H	set	4055
   145  0000                     _T0CON	set	4053
   146  0000                     _INTCONbits	set	4082
   147                           
   148                           	psect	smallconst
   149  000200                     __psmallconst:
   150                           	callstack 0
   151  000200  00                 	db	0
   152  000201                     STR_2:
   153  000201  32                 	db	50	;'2'
   154  000202  2E                 	db	46
   155  000203  52                 	db	82	;'R'
   156  000204  45                 	db	69	;'E'
   157  000205  47                 	db	71	;'G'
   158  000206  49                 	db	73	;'I'
   159  000207  53                 	db	83	;'S'
   160  000208  54                 	db	84	;'T'
   161  000209  45                 	db	69	;'E'
   162  00020A  52                 	db	82	;'R'
   163  00020B  00                 	db	0
   164  00020C                     STR_3:
   165  00020C  4C                 	db	76	;'L'
   166  00020D  2D                 	db	45
   167  00020E  55                 	db	85	;'U'
   168  00020F  53                 	db	83	;'S'
   169  000210  45                 	db	69	;'E'
   170  000211  52                 	db	82	;'R'
   171  000212  3A                 	db	58	;':'
   172  000213  20                 	db	32
   173  000214  00                 	db	0
   174  000215                     STR_4:
   175  000215  52                 	db	82	;'R'
   176  000216  2D                 	db	45
   177  000217  55                 	db	85	;'U'
   178  000218  53                 	db	83	;'S'
   179  000219  45                 	db	69	;'E'
   180  00021A  52                 	db	82	;'R'
   181  00021B  3A                 	db	58	;':'
   182  00021C  20                 	db	32
   183  00021D  00                 	db	0
   184  00021E                     STR_1:
   185  00021E  31                 	db	49	;'1'
   186  00021F  2E                 	db	46
   187  000220  4C                 	db	76	;'L'
   188  000221  4F                 	db	79	;'O'
   189  000222  47                 	db	71	;'G'
   190  000223  49                 	db	73	;'I'
   191  000224  4E                 	db	78	;'N'
   192  000225  00                 	db	0
   193  000226  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198  000736                     __pcinit:
   199                           	callstack 0
   200  000736                     start_initialization:
   201                           	callstack 0
   202  000736                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to COMRAM (27 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  000736  0E46               	movlw	low __pidataCOMRAM
   208  000738  6EF6               	movwf	tblptrl,c
   209  00073A  0E09               	movlw	high __pidataCOMRAM
   210  00073C  6EF7               	movwf	tblptrh,c
   211  00073E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000740  6EF8               	movwf	tblptru,c
   213  000742  EE00  F02C         	lfsr	0,__pdataCOMRAM
   214  000746  EE10 F01B          	lfsr	1,27
   215  00074A                     copy_data0:
   216  00074A  0009               	tblrd		*+
   217  00074C  CFF5 FFEE          	movff	tablat,postinc0
   218  000750  50E5               	movf	postdec1,w,c
   219  000752  50E1               	movf	fsr1l,w,c
   220  000754  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   223  000756  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   224                           
   225                           ; Clear objects allocated to COMRAM (43 bytes)
   226  000758  EE00  F001         	lfsr	0,__pbssCOMRAM
   227  00075C  0E2B               	movlw	43
   228  00075E                     clear_0:
   229  00075E  6AEE               	clrf	postinc0,c
   230  000760  06E8               	decf	wreg,f,c
   231  000762  E1FD               	bnz	clear_0
   232  000764                     end_of_initialization:
   233                           	callstack 0
   234  000764                     __end_of__initialization:
   235                           	callstack 0
   236  000764  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  000766  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  000768  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  00076A  6EF8               	movwf	tblptru,c
   240  00076C  0100               	movlb	0
   241  00076E  EF6F  F004         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bitbssCOMRAM
   244  0002E0                     __pbitbssCOMRAM:
   245                           	callstack 0
   246  0002E0                     _setSMSon:
   247                           	callstack 0
   248  0002E0                     	ds	1
   249  0002E1                     _nou_s:
   250                           	callstack 0
   251  0002E1                     	ds	1
   252                           
   253                           	psect	bssCOMRAM
   254  000001                     __pbssCOMRAM:
   255                           	callstack 0
   256  000001                     _s_Timers:
   257                           	callstack 0
   258  000001                     	ds	24
   259  000019                     _h_Tics:
   260                           	callstack 0
   261  000019                     	ds	2
   262  00001B                     _numUsuaris:
   263                           	callstack 0
   264  00001B                     	ds	1
   265  00001C                     menu@state:
   266                           	callstack 0
   267  00001C                     	ds	1
   268  00001D                     _timerMenu:
   269                           	callstack 0
   270  00001D                     	ds	1
   271  00001E                     _menuDalt:
   272                           	callstack 0
   273  00001E                     	ds	1
   274  00001F                     _counter:
   275                           	callstack 0
   276  00001F                     	ds	1
   277  000020                     TeTeclat@files:
   278                           	callstack 0
   279  000020                     	ds	1
   280  000021                     TeTeclat@cols:
   281                           	callstack 0
   282  000021                     	ds	1
   283  000022                     TeTeclat@state:
   284                           	callstack 0
   285  000022                     	ds	1
   286  000023                     _tiTeclat:
   287                           	callstack 0
   288  000023                     	ds	1
   289  000024                     	ds	1
   290  000025                     _sumaPulsacions:
   291                           	callstack 0
   292  000025                     	ds	1
   293  000026                     _s_ptr:
   294                           	callstack 0
   295  000026                     	ds	1
   296  000027                     _Timer:
   297                           	callstack 0
   298  000027                     	ds	1
   299  000028                     _ColumnAct:
   300                           	callstack 0
   301  000028                     	ds	1
   302  000029                     _RowAct:
   303                           	callstack 0
   304  000029                     	ds	1
   305  00002A                     _Columns:
   306                           	callstack 0
   307  00002A                     	ds	1
   308  00002B                     _Rows:
   309                           	callstack 0
   310  00002B                     	ds	1
   311                           
   312                           	psect	dataCOMRAM
   313  00002C                     __pdataCOMRAM:
   314                           	callstack 0
   315  00002C                     _lletraInici:
   316                           	callstack 0
   317  00002C                     	ds	9
   318  000035                     _novaLletra:
   319                           	callstack 0
   320  000035                     	ds	1
   321  000036                     _NovaTecla:
   322                           	callstack 0
   323  000036                     	ds	1
   324  000037                     _ultimaTecla:
   325                           	callstack 0
   326  000037                     	ds	1
   327  000038                     _timerSMS:
   328                           	callstack 0
   329  000038                     	ds	1
   330  000039                     _novaTecla:
   331                           	callstack 0
   332  000039                     	ds	1
   333  00003A                     _lletraASCII:
   334                           	callstack 0
   335  00003A                     	ds	1
   336  00003B                     _teclaPremuda:
   337                           	callstack 0
   338  00003B                     	ds	12
   339                           
   340                           	psect	cstackCOMRAM
   341  000047                     __pcstackCOMRAM:
   342                           	callstack 0
   343  000047                     
   344                           ; 1 bytes @ 0x0
   345  000047                     	ds	1
   346  000048                     ??_high_rsi:
   347                           
   348                           ; 1 bytes @ 0x1
   349  000048                     	ds	4
   350  00004C                     ??_EscriuPrimeraOrdre:
   351  00004C                     ??_CantaPartAlta:
   352  00004C                     ??_CantaPartBaixa:
   353  00004C                     ?_TiGetTics:
   354                           	callstack 0
   355  00004C                     LcNewString@new_s:
   356                           	callstack 0
   357  00004C                     SsetNovaTecla@tecla:
   358                           	callstack 0
   359  00004C                     TiResetTics@Handle:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363  00004C                     	ds	1
   364  00004D                     CantaPartAlta@c:
   365                           	callstack 0
   366  00004D                     CantaPartBaixa@c:
   367                           	callstack 0
   368  00004D                     EscriuPrimeraOrdre@ordre:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x6
   372  00004D                     	ds	1
   373  00004E                     ??_TiGetTics:
   374  00004E                     CantaIR@IR:
   375                           	callstack 0
   376  00004E                     CantaData@Data:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x7
   380  00004E                     	ds	2
   381  000050                     TiGetTics@Handle:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x9
   385  000050                     	ds	1
   386  000051                     TiGetTics@actual:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xA
   390  000051                     	ds	2
   391  000053                     ??_TeTeclat:
   392  000053                     WaitForBusy@Busy:
   393                           	callstack 0
   394  000053                     Espera@ms:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xC
   398  000053                     	ds	1
   399  000054                     LcGotoXY@Row:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0xD
   403  000054                     	ds	1
   404  000055                     ??_Espera:
   405  000055                     LcGotoXY@Fisics:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xE
   409  000055                     	ds	1
   410  000056                     Espera@Timer:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xF
   414  000056                     	ds	1
   415  000057                     LcInit@columns:
   416                           	callstack 0
   417  000057                     _LcGotoXY$336:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x10
   421  000057                     	ds	1
   422  000058                     LcInit@rows:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x11
   426  000058                     	ds	1
   427  000059                     LcGotoXY@Column:
   428                           	callstack 0
   429  000059                     LcInit@i:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x12
   433  000059                     	ds	1
   434  00005A                     ??_menu:
   435  00005A                     LcPutChar@c:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x13
   439  00005A                     	ds	1
   440  00005B                     
   441                           ; 1 bytes @ 0x14
   442  00005B                     	ds	1
   443  00005C                     
   444                           ; 1 bytes @ 0x15
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 63 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1
   464 ;;      Params:         0       0       0
   465 ;;      Locals:         0       0       0
   466 ;;      Temps:          0       0       0
   467 ;;      Totals:         0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels required when called: 7
   470 ;; This function calls:
   471 ;;		_LcInit
   472 ;;		_LcLCD
   473 ;;		_Minit
   474 ;;		_TeInit
   475 ;;		_TeTeclat
   476 ;;		_TiInitTimer
   477 ;;		_init_ports
   478 ;;		_menu
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text0
   485  0008DE                     __ptext0:
   486                           	callstack 0
   487  0008DE                     _main:
   488                           	callstack 24
   489                           
   490                           ;main.c: 64:     init_ports();
   491                           
   492                           ;incstack = 0
   493  0008DE  EC95  F004         	call	_init_ports	;wreg free
   494                           
   495                           ;main.c: 65:     TiInitTimer();
   496  0008E2  ECF3  F003         	call	_TiInitTimer	;wreg free
   497                           
   498                           ;main.c: 66:     TeInit();
   499  0008E6  ECDE  F004         	call	_TeInit	;wreg free
   500                           
   501                           ;main.c: 68:     LcInit(2,16);
   502  0008EA  0E10               	movlw	16
   503  0008EC  6E57               	movwf	LcInit@columns^0,c
   504  0008EE  0E02               	movlw	2
   505  0008F0  ECBC  F001         	call	_LcInit
   506                           
   507                           ;main.c: 69:     Minit();
   508  0008F4  ECE2  F004         	call	_Minit	;wreg free
   509  0008F8                     l1846:
   510                           
   511                           ;main.c: 73:         menu();
   512  0008F8  EC29  F002         	call	_menu	;wreg free
   513                           
   514                           ;main.c: 74:         TeTeclat();
   515  0008FC  EC14  F001         	call	_TeTeclat	;wreg free
   516                           
   517                           ;main.c: 76:         LcLCD();
   518  000900  EC41  F004         	call	_LcLCD	;wreg free
   519  000904  D7F9               	goto	l1846
   520  000906                     __end_of_main:
   521                           	callstack 0
   522                           
   523 ;; *************** function _menu *****************
   524 ;; Defined at:
   525 ;;		line 16 in file "Menu.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1
   539 ;;      Params:         0       0       0
   540 ;;      Locals:         0       0       0
   541 ;;      Temps:          2       0       0
   542 ;;      Totals:         2       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 5
   546 ;; This function calls:
   547 ;;		_LcClear
   548 ;;		_LcGotoXY
   549 ;;		_LcLliure
   550 ;;		_LcNewString
   551 ;;		_UgetNumUsuaris
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text1
   558  000452                     __ptext1:
   559                           	callstack 0
   560  000452                     _menu:
   561                           	callstack 25
   562                           
   563                           ;Menu.c: 17:  static char state = 0;;Menu.c: 19:  switch(state) {
   564                           
   565                           ;incstack = 0
   566  000452  D040               	goto	l1748
   567  000454                     l1706:
   568                           
   569                           ;Menu.c: 21:    LcClear();
   570  000454  ECB1  F004         	call	_LcClear	;wreg free
   571                           
   572                           ;Menu.c: 22:    LcNewString("1.LOGIN");
   573  000458  0E1E               	movlw	low STR_1
   574  00045A  6E4C               	movwf	LcNewString@new_s^0,c
   575  00045C  ECD6  F004         	call	_LcNewString	;wreg free
   576                           
   577                           ;Menu.c: 23:    state = 1;
   578  000460  0E01               	movlw	1
   579  000462  6E1C               	movwf	menu@state^0,c
   580                           
   581                           ;Menu.c: 24:   break;
   582  000464  0012               	return	
   583  000466                     l1712:
   584                           
   585                           ;Menu.c: 26:    if (LcLliure()) {
   586  000466  ECCA  F004         	call	_LcLliure	;wreg free
   587  00046A  A0D8               	btfss	status,0,c
   588  00046C  0012               	return	
   589                           
   590                           ;Menu.c: 27:     LcGotoXY(0,1);
   591  00046E  0E01               	movlw	1
   592  000470  6E54               	movwf	LcGotoXY@Row^0,c
   593  000472  0E00               	movlw	0
   594  000474  ECB9  F003         	call	_LcGotoXY
   595                           
   596                           ;Menu.c: 28:     LcNewString("2.REGISTER");
   597  000478  0E01               	movlw	low STR_2
   598  00047A  6E4C               	movwf	LcNewString@new_s^0,c
   599  00047C  ECD6  F004         	call	_LcNewString	;wreg free
   600                           
   601                           ;Menu.c: 29:     NovaTecla = -1;
   602  000480  6836               	setf	_NovaTecla^0,c
   603                           
   604                           ;Menu.c: 30:     state = 2;
   605  000482  0E02               	movlw	2
   606  000484  6E1C               	movwf	menu@state^0,c
   607  000486  0012               	return	
   608  000488                     l1722:
   609                           
   610                           ;Menu.c: 34:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   611  000488  0436               	decf	_NovaTecla^0,w,c
   612  00048A  A4D8               	btfss	status,2,c
   613  00048C  D00F               	goto	l1734
   614  00048E  ECE6  F004         	call	_UgetNumUsuaris	;wreg free
   615  000492  0900               	iorlw	0
   616  000494  B4D8               	btfsc	status,2,c
   617  000496  D00A               	goto	l1734
   618                           
   619                           ;Menu.c: 35:     NovaTecla = -1;
   620  000498  6836               	setf	_NovaTecla^0,c
   621                           
   622                           ;Menu.c: 36:     LcClear();
   623  00049A  ECB1  F004         	call	_LcClear	;wreg free
   624                           
   625                           ;Menu.c: 37:                 LcNewString("L-USER: ");
   626  00049E  0E0C               	movlw	low STR_3
   627  0004A0  6E4C               	movwf	LcNewString@new_s^0,c
   628  0004A2  ECD6  F004         	call	_LcNewString	;wreg free
   629                           
   630                           ;Menu.c: 38:     state = 3;
   631  0004A6  0E03               	movlw	3
   632  0004A8  6E1C               	movwf	menu@state^0,c
   633                           
   634                           ;Menu.c: 39:    }
   635  0004AA  0012               	return	
   636  0004AC                     l1734:
   637  0004AC  0E02               	movlw	2
   638  0004AE  1836               	xorwf	_NovaTecla^0,w,c
   639  0004B0  A4D8               	btfss	status,2,c
   640  0004B2  0012               	return	
   641  0004B4  ECE6  F004         	call	_UgetNumUsuaris	;wreg free
   642  0004B8  6E5A               	movwf	??_menu^0,c
   643  0004BA  0E08               	movlw	8
   644  0004BC  605A               	cpfslt	??_menu^0,c
   645  0004BE  0012               	return	
   646                           
   647                           ;Menu.c: 41:     NovaTecla = -1;
   648  0004C0  6836               	setf	_NovaTecla^0,c
   649                           
   650                           ;Menu.c: 42:     LcClear();
   651  0004C2  ECB1  F004         	call	_LcClear	;wreg free
   652                           
   653                           ;Menu.c: 43:                 LcNewString("R-USER: ");
   654  0004C6  0E15               	movlw	low STR_4
   655  0004C8  6E4C               	movwf	LcNewString@new_s^0,c
   656  0004CA  ECD6  F004         	call	_LcNewString	;wreg free
   657                           
   658                           ;Menu.c: 44:     state = 4;
   659  0004CE  0E04               	movlw	4
   660  0004D0  6E1C               	movwf	menu@state^0,c
   661  0004D2  0012               	return	
   662  0004D4                     l1748:
   663  0004D4  501C               	movf	menu@state^0,w,c
   664  0004D6  6E5A               	movwf	??_menu^0,c
   665  0004D8  6A5B               	clrf	(??_menu+1)^0,c
   666                           
   667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   668                           ; Switch size 1, requested type "simple"
   669                           ; Number of cases is 1, Range of values is 0 to 0
   670                           ; switch strategies available:
   671                           ; Name         Instructions Cycles
   672                           ; simple_byte            4     3 (average)
   673                           ;	Chosen strategy is simple_byte
   674  0004DA  505B               	movf	(??_menu+1)^0,w,c
   675  0004DC  0A00               	xorlw	0	; case 0
   676  0004DE  A4D8               	btfss	status,2,c
   677  0004E0  0012               	return	
   678                           
   679                           ; Switch size 1, requested type "simple"
   680                           ; Number of cases is 5, Range of values is 0 to 4
   681                           ; switch strategies available:
   682                           ; Name         Instructions Cycles
   683                           ; simple_byte           16     9 (average)
   684                           ;	Chosen strategy is simple_byte
   685  0004E2  505A               	movf	??_menu^0,w,c
   686  0004E4  0A00               	xorlw	0	; case 0
   687  0004E6  B4D8               	btfsc	status,2,c
   688  0004E8  D7B5               	goto	l1706
   689  0004EA  0A01               	xorlw	1	; case 1
   690  0004EC  B4D8               	btfsc	status,2,c
   691  0004EE  D7BB               	goto	l1712
   692  0004F0  0A03               	xorlw	3	; case 2
   693  0004F2  B4D8               	btfsc	status,2,c
   694  0004F4  D7C9               	goto	l1722
   695  0004F6  0A01               	xorlw	1	; case 3
   696  0004F8  B4D8               	btfsc	status,2,c
   697  0004FA  0012               	return	
   698  0004FC  0A07               	xorlw	7	; case 4
   699  0004FE  0012               	return	
   700  000500                     __end_of_menu:
   701                           	callstack 0
   702                           
   703 ;; *************** function _UgetNumUsuaris *****************
   704 ;; Defined at:
   705 ;;		line 7 in file "Usuaris.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      unsigned char 
   712 ;; Registers used:
   713 ;;		wreg, status,2
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1
   719 ;;      Params:         0       0       0
   720 ;;      Locals:         0       0       0
   721 ;;      Temps:          0       0       0
   722 ;;      Totals:         0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 2
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_menu
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text2
   734  0009CC                     __ptext2:
   735                           	callstack 0
   736  0009CC                     _UgetNumUsuaris:
   737                           	callstack 27
   738                           
   739                           ;Usuaris.c: 8:     return numUsuaris;
   740                           
   741                           ;incstack = 0
   742  0009CC  501B               	movf	_numUsuaris^0,w,c
   743  0009CE  0012               	return		;funcret
   744  0009D0                     __end_of_UgetNumUsuaris:
   745                           	callstack 0
   746                           
   747 ;; *************** function _LcNewString *****************
   748 ;; Defined at:
   749 ;;		line 238 in file "LcTLCD.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  new_s           1    5[COMRAM] PTR unsigned char 
   752 ;;		 -> STR_4(9), STR_3(9), STR_2(11), STR_1(8), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1
   764 ;;      Params:         1       0       0
   765 ;;      Locals:         0       0       0
   766 ;;      Temps:          0       0       0
   767 ;;      Totals:         1       0       0
   768 ;;Total ram usage:        1 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 2
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_menu
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text3
   779  0009AC                     __ptext3:
   780                           	callstack 0
   781  0009AC                     _LcNewString:
   782                           	callstack 27
   783                           
   784                           ;LcTLCD.c: 239:     s_ptr = new_s;
   785                           
   786                           ;incstack = 0
   787  0009AC  C04C  F026         	movff	LcNewString@new_s,_s_ptr
   788                           
   789                           ;LcTLCD.c: 240:     nou_s = 1;
   790  0009B0  825C               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
   791  0009B2  0012               	return		;funcret
   792  0009B4                     __end_of_LcNewString:
   793                           	callstack 0
   794                           
   795 ;; *************** function _LcLliure *****************
   796 ;; Defined at:
   797 ;;		line 264 in file "LcTLCD.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1
   811 ;;      Params:         0       0       0
   812 ;;      Locals:         0       0       0
   813 ;;      Temps:          0       0       0
   814 ;;      Totals:         0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_menu
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text4
   826  000994                     __ptext4:
   827                           	callstack 0
   828  000994                     _LcLliure:
   829                           	callstack 27
   830                           
   831                           ;LcTLCD.c: 265:     return !nou_s;
   832                           
   833                           ;incstack = 0
   834  000994  A25C               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
   835  000996  D002               	goto	l1224
   836  000998  90D8               	bcf	status,0,c
   837  00099A  0012               	return	
   838  00099C                     l1224:
   839  00099C  80D8               	bsf	status,0,c
   840  00099E  0012               	return		;funcret
   841  0009A0                     __end_of_LcLliure:
   842                           	callstack 0
   843                           
   844 ;; *************** function _LcClear *****************
   845 ;; Defined at:
   846 ;;		line 82 in file "LcTLCD.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1
   860 ;;      Params:         0       0       0
   861 ;;      Locals:         0       0       0
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 4
   867 ;; This function calls:
   868 ;;		_CantaIR
   869 ;;		_Espera
   870 ;;		_WaitForBusy
   871 ;; This function is called by:
   872 ;;		_menu
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text5
   877  000962                     __ptext5:
   878                           	callstack 0
   879  000962                     _LcClear:
   880                           	callstack 25
   881                           
   882                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
   883                           
   884                           ;incstack = 0
   885  000962  EC7B  F003         	call	_WaitForBusy	;wreg free
   886  000966  0E01               	movlw	1
   887  000968  EC28  F004         	call	_CantaIR
   888                           
   889                           ;LcTLCD.c: 86:  Espera(Timer, 3);
   890  00096C  0E00               	movlw	0
   891  00096E  6E54               	movwf	(Espera@ms+1)^0,c
   892  000970  0E03               	movlw	3
   893  000972  6E53               	movwf	Espera@ms^0,c
   894  000974  5027               	movf	_Timer^0,w,c
   895  000976  EC83  F004         	call	_Espera
   896  00097A  0012               	return		;funcret
   897  00097C                     __end_of_LcClear:
   898                           	callstack 0
   899                           
   900 ;; *************** function _init_ports *****************
   901 ;; Defined at:
   902 ;;		line 18 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1
   916 ;;      Params:         0       0       0
   917 ;;      Locals:         0       0       0
   918 ;;      Temps:          0       0       0
   919 ;;      Totals:         0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 2
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text6
   931  00092A                     __ptext6:
   932                           	callstack 0
   933  00092A                     _init_ports:
   934                           	callstack 28
   935                           
   936                           ;incstack = 0
   937  00092A  0E03               	movlw	3
   938  00092C  6E92               	movwf	146,c	;volatile
   939  00092E  0EE0               	movlw	224
   940  000930  6E93               	movwf	147,c	;volatile
   941  000932  968A               	bcf	138,3,c	;volatile
   942  000934  908A               	bcf	138,0,c	;volatile
   943  000936  928A               	bcf	138,1,c	;volatile
   944                           
   945                           ;main.c: 41:     TRISC = 0xC0;
   946  000938  0EC0               	movlw	192
   947  00093A  6E94               	movwf	148,c	;volatile
   948                           
   949                           ;main.c: 51:     TRISD = 0x8F;
   950  00093C  0E8F               	movlw	143
   951  00093E  6E95               	movwf	149,c	;volatile
   952                           
   953                           ;main.c: 52:     LATD = 0x00;
   954  000940  0E00               	movlw	0
   955  000942  6E8C               	movwf	140,c	;volatile
   956  000944  0012               	return		;funcret
   957  000946                     __end_of_init_ports:
   958                           	callstack 0
   959                           
   960 ;; *************** function _TiInitTimer *****************
   961 ;; Defined at:
   962 ;;		line 18 in file "TiTTimer.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1
   976 ;;      Params:         0       0       0
   977 ;;      Locals:         0       0       0
   978 ;;      Temps:          0       0       0
   979 ;;      Totals:         0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 2
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text7
   991  0007E6                     __ptext7:
   992                           	callstack 0
   993  0007E6                     _TiInitTimer:
   994                           	callstack 28
   995                           
   996                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
   997                           
   998                           ;incstack = 0
   999  0007E6  9ED0               	bcf	208,7,c	;volatile
  1000                           
  1001                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1002  0007E8  8EF2               	bsf	242,7,c	;volatile
  1003                           
  1004                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1005  0007EA  8CF2               	bsf	242,6,c	;volatile
  1006                           
  1007                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1008  0007EC  8AF2               	bsf	242,5,c	;volatile
  1009                           
  1010                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1011  0007EE  94F2               	bcf	242,2,c	;volatile
  1012                           
  1013                           ;TiTTimer.c: 25:     T0CON = 136;
  1014  0007F0  0E88               	movlw	136
  1015  0007F2  6ED5               	movwf	213,c	;volatile
  1016                           
  1017                           ;TiTTimer.c: 27:     TMR0H = 223;
  1018  0007F4  0EDF               	movlw	223
  1019  0007F6  6ED7               	movwf	215,c	;volatile
  1020                           
  1021                           ;TiTTimer.c: 28:     TMR0L = 148;
  1022  0007F8  0E94               	movlw	148
  1023  0007FA  6ED6               	movwf	214,c	;volatile
  1024                           
  1025                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1026  0007FC  8ED5               	bsf	213,7,c	;volatile
  1027                           
  1028                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1029  0007FE  0E00               	movlw	0
  1030  000800  6E1F               	movwf	_counter^0,c
  1031  000802                     l1334:
  1032  000802  0E07               	movlw	7
  1033  000804  641F               	cpfsgt	_counter^0,c
  1034  000806  D001               	goto	l1338
  1035  000808  0012               	return	
  1036  00080A                     l1338:
  1037                           
  1038                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1039  00080A  501F               	movf	_counter^0,w,c
  1040  00080C  0D03               	mullw	3
  1041  00080E  50F3               	movf	243,w,c
  1042  000810  0F03               	addlw	low (_s_Timers+2)
  1043  000812  6ED9               	movwf	fsr2l,c
  1044  000814  6ADA               	clrf	fsr2h,c
  1045  000816  0E00               	movlw	0
  1046  000818  6EDF               	movwf	indf2,c
  1047                           
  1048                           ;TiTTimer.c: 33:     }
  1049  00081A  2A1F               	incf	_counter^0,f,c
  1050  00081C  D7F2               	goto	l1334
  1051  00081E                     __end_of_TiInitTimer:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _TeTeclat *****************
  1055 ;; Defined at:
  1056 ;;		line 22 in file "TeTeclat.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1
  1070 ;;      Params:         0       0       0
  1071 ;;      Locals:         0       0       0
  1072 ;;      Temps:          3       0       0
  1073 ;;      Totals:         3       0       0
  1074 ;;Total ram usage:        3 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 3
  1077 ;; This function calls:
  1078 ;;		_SsetNovaTecla
  1079 ;;		_TiGetTics
  1080 ;;		_TiResetTics
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text8
  1087  000228                     __ptext8:
  1088                           	callstack 0
  1089  000228                     _TeTeclat:
  1090                           	callstack 27
  1091                           
  1092                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1093                           
  1094                           ;incstack = 0
  1095  000228  A083               	btfss	131,0,c	;volatile
  1096  00022A  D003               	goto	u990
  1097  00022C  6A53               	clrf	??_TeTeclat^0,c
  1098  00022E  2A53               	incf	??_TeTeclat^0,f,c
  1099  000230  D001               	goto	u998
  1100  000232                     u990:
  1101  000232  6A53               	clrf	??_TeTeclat^0,c
  1102  000234                     u998:
  1103  000234  A283               	btfss	131,1,c	;volatile
  1104  000236  D002               	goto	u1000
  1105  000238  0E01               	movlw	1
  1106  00023A  D001               	goto	u1006
  1107  00023C                     u1000:
  1108  00023C  0E00               	movlw	0
  1109  00023E                     u1006:
  1110  00023E  0D02               	mullw	2
  1111  000240  CFF3 F054          	movff	prodl,??_TeTeclat+1
  1112  000244  A483               	btfss	131,2,c	;volatile
  1113  000246  D002               	goto	u1010
  1114  000248  0E01               	movlw	1
  1115  00024A  D001               	goto	u1016
  1116  00024C                     u1010:
  1117  00024C  0E00               	movlw	0
  1118  00024E                     u1016:
  1119  00024E  0D03               	mullw	3
  1120  000250  CFF3 F055          	movff	prodl,??_TeTeclat+2
  1121  000254  A683               	btfss	131,3,c	;volatile
  1122  000256  D002               	goto	u1020
  1123  000258  0E01               	movlw	1
  1124  00025A  D001               	goto	u1026
  1125  00025C                     u1020:
  1126  00025C  0E00               	movlw	0
  1127  00025E                     u1026:
  1128  00025E  0D04               	mullw	4
  1129  000260  50F3               	movf	243,w,c
  1130  000262  2455               	addwf	(??_TeTeclat+2)^0,w,c
  1131  000264  2454               	addwf	(??_TeTeclat+1)^0,w,c
  1132  000266  2453               	addwf	??_TeTeclat^0,w,c
  1133  000268  6E20               	movwf	TeTeclat@files^0,c
  1134                           
  1135                           ;TeTeclat.c: 27:  switch(state) {
  1136  00026A  D065               	goto	l1830
  1137  00026C                     l1756:
  1138                           
  1139                           ;TeTeclat.c: 29:    if (files==0) {
  1140  00026C  5020               	movf	TeTeclat@files^0,w,c
  1141  00026E  A4D8               	btfss	status,2,c
  1142  000270  D007               	goto	l1764
  1143                           
  1144                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1145  000272  888C               	bsf	140,4,c	;volatile
  1146                           
  1147                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1148  000274  9A8C               	bcf	140,5,c	;volatile
  1149                           
  1150                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1151  000276  9C8C               	bcf	140,6,c	;volatile
  1152                           
  1153                           ;TeTeclat.c: 33:     cols=0;
  1154  000278  0E00               	movlw	0
  1155  00027A  6E21               	movwf	TeTeclat@cols^0,c
  1156  00027C                     l1762:
  1157                           
  1158                           ;TeTeclat.c: 34:     state++;
  1159  00027C  2A22               	incf	TeTeclat@state^0,f,c
  1160                           
  1161                           ;TeTeclat.c: 35:    }
  1162  00027E  0012               	return	
  1163  000280                     l1764:
  1164  000280  5020               	movf	TeTeclat@files^0,w,c
  1165  000282  B4D8               	btfsc	status,2,c
  1166  000284  0012               	return	
  1167                           
  1168                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1169  000286  5023               	movf	_tiTeclat^0,w,c
  1170  000288  ECBE  F004         	call	_TiResetTics
  1171  00028C                     l1768:
  1172                           
  1173                           ;TeTeclat.c: 38:     state = 3;
  1174  00028C  0E03               	movlw	3
  1175  00028E  6E22               	movwf	TeTeclat@state^0,c
  1176  000290  0012               	return	
  1177  000292                     l1770:
  1178                           
  1179                           ;TeTeclat.c: 42:    if (files==0) {
  1180  000292  5020               	movf	TeTeclat@files^0,w,c
  1181  000294  A4D8               	btfss	status,2,c
  1182  000296  D005               	goto	l1778
  1183                           
  1184                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  1185  000298  988C               	bcf	140,4,c	;volatile
  1186                           
  1187                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  1188  00029A  8A8C               	bsf	140,5,c	;volatile
  1189                           
  1190                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  1191  00029C  9C8C               	bcf	140,6,c	;volatile
  1192                           
  1193                           ;TeTeclat.c: 46:     cols=1;
  1194  00029E  0E01               	movlw	1
  1195  0002A0  D7EC               	goto	L1
  1196  0002A2                     l1778:
  1197  0002A2  5020               	movf	TeTeclat@files^0,w,c
  1198  0002A4  B4D8               	btfsc	status,2,c
  1199  0002A6  0012               	return	
  1200                           
  1201                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  1202  0002A8  5023               	movf	_tiTeclat^0,w,c
  1203  0002AA  ECBE  F004         	call	_TiResetTics
  1204  0002AE  D7EE               	goto	l1768
  1205  0002B0                     l1784:
  1206                           
  1207                           ;TeTeclat.c: 55:    if (files==0) {
  1208  0002B0  5020               	movf	TeTeclat@files^0,w,c
  1209  0002B2  A4D8               	btfss	status,2,c
  1210  0002B4  D008               	goto	l1790
  1211                           
  1212                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  1213  0002B6  988C               	bcf	140,4,c	;volatile
  1214                           
  1215                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  1216  0002B8  9A8C               	bcf	140,5,c	;volatile
  1217                           
  1218                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  1219  0002BA  8C8C               	bsf	140,6,c	;volatile
  1220                           
  1221                           ;TeTeclat.c: 59:     cols=2;
  1222  0002BC  0E02               	movlw	2
  1223  0002BE  6E21               	movwf	TeTeclat@cols^0,c
  1224                           
  1225                           ;TeTeclat.c: 60:     state = 0;
  1226  0002C0  0E00               	movlw	0
  1227  0002C2  6E22               	movwf	TeTeclat@state^0,c
  1228                           
  1229                           ;TeTeclat.c: 61:    }
  1230  0002C4  0012               	return	
  1231  0002C6                     l1790:
  1232  0002C6  5020               	movf	TeTeclat@files^0,w,c
  1233  0002C8  B4D8               	btfsc	status,2,c
  1234  0002CA  0012               	return	
  1235                           
  1236                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  1237  0002CC  5023               	movf	_tiTeclat^0,w,c
  1238  0002CE  ECBE  F004         	call	_TiResetTics
  1239  0002D2  D7D4               	goto	l1762
  1240  0002D4                     l1796:
  1241                           
  1242                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  1243  0002D4  5023               	movf	_tiTeclat^0,w,c
  1244  0002D6  EC59  F004         	call	_TiGetTics
  1245  0002DA  BE4D               	btfsc	(?_TiGetTics+1)^0,7,c
  1246  0002DC  0012               	return	
  1247  0002DE  D7CE               	goto	l1762
  1248  0002E0                     l1800:
  1249                           
  1250                           ;TeTeclat.c: 73:    if (files==0) {
  1251  0002E0  5020               	movf	TeTeclat@files^0,w,c
  1252  0002E2  A4D8               	btfss	status,2,c
  1253  0002E4  D003               	goto	l1804
  1254                           
  1255                           ;TeTeclat.c: 74:     state = 1;
  1256  0002E6  0E01               	movlw	1
  1257  0002E8  6E22               	movwf	TeTeclat@state^0,c
  1258                           
  1259                           ;TeTeclat.c: 75:    }
  1260  0002EA  0012               	return	
  1261  0002EC                     l1804:
  1262  0002EC  5020               	movf	TeTeclat@files^0,w,c
  1263  0002EE  B4D8               	btfsc	status,2,c
  1264  0002F0  0012               	return	
  1265                           
  1266                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1267  0002F2  5020               	movf	TeTeclat@files^0,w,c
  1268  0002F4  0D03               	mullw	3
  1269  0002F6  50F3               	movf	243,w,c
  1270  0002F8  0F38               	addlw	low (_teclaPremuda+253)
  1271  0002FA  2421               	addwf	TeTeclat@cols^0,w,c
  1272  0002FC  6ED9               	movwf	fsr2l,c
  1273  0002FE  6ADA               	clrf	fsr2h,c
  1274  000300  50DF               	movf	indf2,w,c
  1275  000302  ECDA  F004         	call	_SsetNovaTecla
  1276  000306  D7BA               	goto	l1762
  1277  000308                     l1810:
  1278                           
  1279                           ;TeTeclat.c: 84:    if (files==0) {
  1280  000308  5020               	movf	TeTeclat@files^0,w,c
  1281  00030A  A4D8               	btfss	status,2,c
  1282  00030C  0012               	return	
  1283                           
  1284                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  1285  00030E  5023               	movf	_tiTeclat^0,w,c
  1286  000310  ECBE  F004         	call	_TiResetTics
  1287  000314  D7B3               	goto	l1762
  1288  000316                     l1816:
  1289                           
  1290                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  1291  000316  5023               	movf	_tiTeclat^0,w,c
  1292  000318  EC59  F004         	call	_TiGetTics
  1293  00031C  D7DE               	goto	L2
  1294  00031E                     l1820:
  1295                           
  1296                           ;TeTeclat.c: 95:    if (files!=0) {
  1297  00031E  5020               	movf	TeTeclat@files^0,w,c
  1298  000320  B4D8               	btfsc	status,2,c
  1299  000322  D003               	goto	l1824
  1300                           
  1301                           ;TeTeclat.c: 96:     state = 5;
  1302  000324  0E05               	movlw	5
  1303  000326  6E22               	movwf	TeTeclat@state^0,c
  1304                           
  1305                           ;TeTeclat.c: 97:    }
  1306  000328  0012               	return	
  1307  00032A                     l1824:
  1308  00032A  5020               	movf	TeTeclat@files^0,w,c
  1309  00032C  A4D8               	btfss	status,2,c
  1310  00032E  0012               	return	
  1311                           
  1312                           ;TeTeclat.c: 99:     state = 0;
  1313  000330  0E00               	movlw	0
  1314  000332  6E22               	movwf	TeTeclat@state^0,c
  1315  000334  0012               	return	
  1316  000336                     l1830:
  1317  000336  5022               	movf	TeTeclat@state^0,w,c
  1318  000338  6E53               	movwf	??_TeTeclat^0,c
  1319  00033A  6A54               	clrf	(??_TeTeclat+1)^0,c
  1320                           
  1321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1322                           ; Switch size 1, requested type "simple"
  1323                           ; Number of cases is 1, Range of values is 0 to 0
  1324                           ; switch strategies available:
  1325                           ; Name         Instructions Cycles
  1326                           ; simple_byte            4     3 (average)
  1327                           ;	Chosen strategy is simple_byte
  1328  00033C  5054               	movf	(??_TeTeclat+1)^0,w,c
  1329  00033E  0A00               	xorlw	0	; case 0
  1330  000340  A4D8               	btfss	status,2,c
  1331  000342  0012               	return	
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 8, Range of values is 0 to 7
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte           25    13 (average)
  1338                           ;	Chosen strategy is simple_byte
  1339  000344  5053               	movf	??_TeTeclat^0,w,c
  1340  000346  0A00               	xorlw	0	; case 0
  1341  000348  B4D8               	btfsc	status,2,c
  1342  00034A  D790               	goto	l1756
  1343  00034C  0A01               	xorlw	1	; case 1
  1344  00034E  B4D8               	btfsc	status,2,c
  1345  000350  D7A0               	goto	l1770
  1346  000352  0A03               	xorlw	3	; case 2
  1347  000354  B4D8               	btfsc	status,2,c
  1348  000356  D7AC               	goto	l1784
  1349  000358  0A01               	xorlw	1	; case 3
  1350  00035A  B4D8               	btfsc	status,2,c
  1351  00035C  D7BB               	goto	l1796
  1352  00035E  0A07               	xorlw	7	; case 4
  1353  000360  B4D8               	btfsc	status,2,c
  1354  000362  D7BE               	goto	l1800
  1355  000364  0A01               	xorlw	1	; case 5
  1356  000366  B4D8               	btfsc	status,2,c
  1357  000368  D7CF               	goto	l1810
  1358  00036A  0A03               	xorlw	3	; case 6
  1359  00036C  B4D8               	btfsc	status,2,c
  1360  00036E  D7D3               	goto	l1816
  1361  000370  0A01               	xorlw	1	; case 7
  1362  000372  A4D8               	btfss	status,2,c
  1363  000374  0012               	return	
  1364  000376  D7D3               	goto	l1820
  1365  000378                     __end_of_TeTeclat:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _SsetNovaTecla *****************
  1369 ;; Defined at:
  1370 ;;		line 109 in file "Ssms.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  tecla           1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  tecla           1    5[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1
  1384 ;;      Params:         0       0       0
  1385 ;;      Locals:         1       0       0
  1386 ;;      Temps:          0       0       0
  1387 ;;      Totals:         1       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 2
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_TeTeclat
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text9
  1399  0009B4                     __ptext9:
  1400                           	callstack 0
  1401  0009B4                     _SsetNovaTecla:
  1402                           	callstack 27
  1403                           
  1404                           ;incstack = 0
  1405                           ;SsetNovaTecla@tecla stored from wreg
  1406  0009B4  6E4C               	movwf	SsetNovaTecla@tecla^0,c
  1407                           
  1408                           ;Ssms.c: 110:     novaTecla = tecla;
  1409  0009B6  C04C  F039         	movff	SsetNovaTecla@tecla,_novaTecla
  1410  0009BA  0012               	return		;funcret
  1411  0009BC                     __end_of_SsetNovaTecla:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _TeInit *****************
  1415 ;; Defined at:
  1416 ;;		line 18 in file "TeTeclat.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1
  1430 ;;      Params:         0       0       0
  1431 ;;      Locals:         0       0       0
  1432 ;;      Temps:          0       0       0
  1433 ;;      Totals:         0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 3
  1437 ;; This function calls:
  1438 ;;		_TiGetTimer
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text10
  1445  0009BC                     __ptext10:
  1446                           	callstack 0
  1447  0009BC                     _TeInit:
  1448                           	callstack 27
  1449                           
  1450                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  1451                           
  1452                           ;incstack = 0
  1453  0009BC  ECD6  F003         	call	_TiGetTimer	;wreg free
  1454  0009C0  6E23               	movwf	_tiTeclat^0,c
  1455  0009C2  0012               	return		;funcret
  1456  0009C4                     __end_of_TeInit:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _Minit *****************
  1460 ;; Defined at:
  1461 ;;		line 12 in file "Menu.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1
  1475 ;;      Params:         0       0       0
  1476 ;;      Locals:         0       0       0
  1477 ;;      Temps:          0       0       0
  1478 ;;      Totals:         0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 3
  1482 ;; This function calls:
  1483 ;;		_TiGetTimer
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text11
  1490  0009C4                     __ptext11:
  1491                           	callstack 0
  1492  0009C4                     _Minit:
  1493                           	callstack 27
  1494                           
  1495                           ;Menu.c: 13:     timerMenu = TiGetTimer();
  1496                           
  1497                           ;incstack = 0
  1498  0009C4  ECD6  F003         	call	_TiGetTimer	;wreg free
  1499  0009C8  6E1D               	movwf	_timerMenu^0,c
  1500  0009CA  0012               	return		;funcret
  1501  0009CC                     __end_of_Minit:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _LcLCD *****************
  1505 ;; Defined at:
  1506 ;;		line 253 in file "LcTLCD.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1
  1520 ;;      Params:         0       0       0
  1521 ;;      Locals:         0       0       0
  1522 ;;      Temps:          0       0       0
  1523 ;;      Totals:         0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 6
  1527 ;; This function calls:
  1528 ;;		_LcPutChar
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text12
  1535  000882                     __ptext12:
  1536                           	callstack 0
  1537  000882                     _LcLCD:
  1538                           	callstack 24
  1539                           
  1540                           ;LcTLCD.c: 254:     if(nou_s == 1){
  1541                           
  1542                           ;incstack = 0
  1543  000882  A25C               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1544  000884  0012               	return	
  1545                           
  1546                           ;LcTLCD.c: 255:         LcPutChar(*s_ptr);
  1547  000886  C026  FFF6         	movff	_s_ptr,tblptrl
  1548  00088A                     	if	1	;There is more than 1 active tblptr byte
  1549  00088A  0E02               	movlw	high __smallconst
  1550  00088C  6EF7               	movwf	tblptrh,c
  1551  00088E                     	endif
  1552  00088E                     	if	0	;tblptru may be non-zero
  1553  00088E                     	endif
  1554  00088E                     	if	0	;tblptru may be non-zero
  1555  00088E                     	endif
  1556  00088E  0008               	tblrd		*
  1557  000890  50F5               	movf	tablat,w,c
  1558  000892  EC52  F003         	call	_LcPutChar
  1559                           
  1560                           ;LcTLCD.c: 256:         s_ptr++;
  1561  000896  2A26               	incf	_s_ptr^0,f,c
  1562                           
  1563                           ;LcTLCD.c: 257:         if(*s_ptr == '\0'){
  1564  000898  C026  FFF6         	movff	_s_ptr,tblptrl
  1565  00089C                     	if	1	;There is more than 1 active tblptr byte
  1566  00089C  0E02               	movlw	high __smallconst
  1567  00089E  6EF7               	movwf	tblptrh,c
  1568  0008A0                     	endif
  1569  0008A0                     	if	0	;tblptru may be non-zero
  1570  0008A0                     	endif
  1571  0008A0                     	if	0	;tblptru may be non-zero
  1572  0008A0                     	endif
  1573  0008A0  0008               	tblrd		*
  1574  0008A2  50F5               	movf	tablat,w,c
  1575  0008A4  0900               	iorlw	0
  1576  0008A6  A4D8               	btfss	status,2,c
  1577  0008A8  0012               	return	
  1578                           
  1579                           ;LcTLCD.c: 258:             nou_s = 0;
  1580  0008AA  925C               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1581                           
  1582                           ;LcTLCD.c: 259:             s_ptr=0;
  1583  0008AC  0E00               	movlw	0
  1584  0008AE  6E26               	movwf	_s_ptr^0,c
  1585  0008B0  0012               	return		;funcret
  1586  0008B2                     __end_of_LcLCD:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _LcPutChar *****************
  1590 ;; Defined at:
  1591 ;;		line 131 in file "LcTLCD.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  c               1    wreg     unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  c               1   19[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1
  1605 ;;      Params:         0       0       0
  1606 ;;      Locals:         1       0       0
  1607 ;;      Temps:          0       0       0
  1608 ;;      Totals:         1       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 5
  1612 ;; This function calls:
  1613 ;;		_CantaData
  1614 ;;		_LcGotoXY
  1615 ;;		_WaitForBusy
  1616 ;; This function is called by:
  1617 ;;		_LcLCD
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text13
  1622  0006A4                     __ptext13:
  1623                           	callstack 0
  1624  0006A4                     _LcPutChar:
  1625                           	callstack 24
  1626                           
  1627                           ;incstack = 0
  1628                           ;LcPutChar@c stored from wreg
  1629  0006A4  6E5A               	movwf	LcPutChar@c^0,c
  1630                           
  1631                           ;LcTLCD.c: 133:  WaitForBusy(); CantaData(c);
  1632  0006A6  EC7B  F003         	call	_WaitForBusy	;wreg free
  1633  0006AA  505A               	movf	LcPutChar@c^0,w,c
  1634  0006AC  EC0F  F004         	call	_CantaData
  1635                           
  1636                           ;LcTLCD.c: 135:  ++ColumnAct;
  1637  0006B0  2A28               	incf	_ColumnAct^0,f,c
  1638                           
  1639                           ;LcTLCD.c: 137:  if (Rows == 2) {
  1640  0006B2  0E02               	movlw	2
  1641  0006B4  182B               	xorwf	_Rows^0,w,c
  1642  0006B6  A4D8               	btfss	status,2,c
  1643  0006B8  D010               	goto	l1630
  1644                           
  1645                           ;LcTLCD.c: 138:   if (ColumnAct >= 40) {
  1646  0006BA  0E27               	movlw	39
  1647  0006BC  6428               	cpfsgt	_ColumnAct^0,c
  1648  0006BE  D00D               	goto	l1630
  1649                           
  1650                           ;LcTLCD.c: 139:    ColumnAct = 0;
  1651  0006C0  0E00               	movlw	0
  1652  0006C2  6E28               	movwf	_ColumnAct^0,c
  1653                           
  1654                           ;LcTLCD.c: 140:    if (++RowAct >= 2) RowAct = 0;
  1655  0006C4  2A29               	incf	_RowAct^0,f,c
  1656  0006C6  0E01               	movlw	1
  1657  0006C8  6429               	cpfsgt	_RowAct^0,c
  1658  0006CA  D002               	goto	l1628
  1659  0006CC  0E00               	movlw	0
  1660  0006CE  6E29               	movwf	_RowAct^0,c
  1661  0006D0                     l1628:
  1662                           
  1663                           ;LcTLCD.c: 141:    LcGotoXY(ColumnAct, RowAct);
  1664  0006D0  C029  F054         	movff	_RowAct,LcGotoXY@Row
  1665  0006D4  5028               	movf	_ColumnAct^0,w,c
  1666  0006D6  ECB9  F003         	call	_LcGotoXY
  1667  0006DA                     l1630:
  1668                           
  1669                           ;LcTLCD.c: 152:  if (RowAct == 1) {
  1670  0006DA  0429               	decf	_RowAct^0,w,c
  1671  0006DC  A4D8               	btfss	status,2,c
  1672  0006DE  0012               	return	
  1673                           
  1674                           ;LcTLCD.c: 153:   if (ColumnAct >= 40) ColumnAct = 0;
  1675  0006E0  0E27               	movlw	39
  1676  0006E2  6428               	cpfsgt	_ColumnAct^0,c
  1677  0006E4  D002               	goto	l1636
  1678  0006E6  0E00               	movlw	0
  1679  0006E8  6E28               	movwf	_ColumnAct^0,c
  1680  0006EA                     l1636:
  1681                           
  1682                           ;LcTLCD.c: 154:   LcGotoXY(ColumnAct, RowAct);
  1683  0006EA  C029  F054         	movff	_RowAct,LcGotoXY@Row
  1684  0006EE  5028               	movf	_ColumnAct^0,w,c
  1685  0006F0  ECB9  F003         	call	_LcGotoXY
  1686  0006F4  0012               	return		;funcret
  1687  0006F6                     __end_of_LcPutChar:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _LcGotoXY *****************
  1691 ;; Defined at:
  1692 ;;		line 103 in file "LcTLCD.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  Column          1    wreg     unsigned char 
  1695 ;;  Row             1   13[COMRAM] unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  Column          1   18[COMRAM] unsigned char 
  1698 ;;  Fisics          2   14[COMRAM] int 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1
  1708 ;;      Params:         1       0       0
  1709 ;;      Locals:         5       0       0
  1710 ;;      Temps:          0       0       0
  1711 ;;      Totals:         6       0       0
  1712 ;;Total ram usage:        6 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 4
  1715 ;; This function calls:
  1716 ;;		_CantaIR
  1717 ;;		_WaitForBusy
  1718 ;; This function is called by:
  1719 ;;		_LcPutChar
  1720 ;;		_menu
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text14
  1725  000772                     __ptext14:
  1726                           	callstack 0
  1727  000772                     _LcGotoXY:
  1728                           	callstack 25
  1729                           
  1730                           ;incstack = 0
  1731                           ;LcGotoXY@Column stored from wreg
  1732  000772  6E59               	movwf	LcGotoXY@Column^0,c
  1733                           
  1734                           ;LcTLCD.c: 107:  int Fisics;;LcTLCD.c: 111:    Fisics = Column + (!Row ? 0 : 0x40);
  1735  000774  5054               	movf	LcGotoXY@Row^0,w,c
  1736  000776  B4D8               	btfsc	status,2,c
  1737  000778  D004               	goto	l1572
  1738  00077A  0E00               	movlw	0
  1739  00077C  6E58               	movwf	(_LcGotoXY$336+1)^0,c
  1740  00077E  0E40               	movlw	64
  1741  000780  D003               	goto	L3
  1742  000782                     l1572:
  1743  000782  0E00               	movlw	0
  1744  000784  6E58               	movwf	(_LcGotoXY$336+1)^0,c
  1745  000786  0E00               	movlw	0
  1746  000788                     L3:
  1747  000788  6E57               	movwf	_LcGotoXY$336^0,c
  1748  00078A  5059               	movf	LcGotoXY@Column^0,w,c
  1749  00078C  2457               	addwf	_LcGotoXY$336^0,w,c
  1750  00078E  6E55               	movwf	LcGotoXY@Fisics^0,c
  1751  000790  0E00               	movlw	0
  1752  000792  2058               	addwfc	(_LcGotoXY$336+1)^0,w,c
  1753  000794  6E56               	movwf	(LcGotoXY@Fisics+1)^0,c
  1754                           
  1755                           ;LcTLCD.c: 124:  WaitForBusy();
  1756  000796  EC7B  F003         	call	_WaitForBusy	;wreg free
  1757                           
  1758                           ;LcTLCD.c: 125:  CantaIR(0x80 | Fisics);
  1759  00079A  5055               	movf	LcGotoXY@Fisics^0,w,c
  1760  00079C  0980               	iorlw	128
  1761  00079E  EC28  F004         	call	_CantaIR
  1762                           
  1763                           ;LcTLCD.c: 127:  RowAct = Row;
  1764  0007A2  C054  F029         	movff	LcGotoXY@Row,_RowAct
  1765                           
  1766                           ;LcTLCD.c: 128:  ColumnAct = Column;
  1767  0007A6  C059  F028         	movff	LcGotoXY@Column,_ColumnAct
  1768  0007AA  0012               	return		;funcret
  1769  0007AC                     __end_of_LcGotoXY:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _CantaData *****************
  1773 ;; Defined at:
  1774 ;;		line 193 in file "LcTLCD.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  Data            1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  Data            1    7[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1
  1788 ;;      Params:         0       0       0
  1789 ;;      Locals:         1       0       0
  1790 ;;      Temps:          0       0       0
  1791 ;;      Totals:         1       0       0
  1792 ;;Total ram usage:        1 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 3
  1795 ;; This function calls:
  1796 ;;		_CantaPartAlta
  1797 ;;		_CantaPartBaixa
  1798 ;; This function is called by:
  1799 ;;		_LcPutChar
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text15
  1804  00081E                     __ptext15:
  1805                           	callstack 0
  1806  00081E                     _CantaData:
  1807                           	callstack 25
  1808                           
  1809                           ;incstack = 0
  1810                           ;CantaData@Data stored from wreg
  1811  00081E  6E4E               	movwf	CantaData@Data^0,c
  1812                           
  1813                           ;LcTLCD.c: 194:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  1814  000820  9694               	bcf	148,3,c	;volatile
  1815  000822  9494               	bcf	148,2,c	;volatile
  1816  000824  9294               	bcf	148,1,c	;volatile
  1817  000826  9094               	bcf	148,0,c	;volatile
  1818                           
  1819                           ;LcTLCD.c: 195:  (LATCbits.LATC5 = 1);
  1820  000828  8A8B               	bsf	139,5,c	;volatile
  1821                           
  1822                           ;LcTLCD.c: 196:  (LATDbits.LATD7 = 0);
  1823  00082A  9E8C               	bcf	140,7,c	;volatile
  1824                           
  1825                           ;LcTLCD.c: 197:  (LATCbits.LATC4 = 1);
  1826  00082C  888B               	bsf	139,4,c	;volatile
  1827                           
  1828                           ;LcTLCD.c: 198:  CantaPartAlta(Data);
  1829  00082E  504E               	movf	CantaData@Data^0,w,c
  1830  000830  ECF1  F002         	call	_CantaPartAlta
  1831                           
  1832                           ;LcTLCD.c: 199:  (LATCbits.LATC4 = 1);
  1833  000834  888B               	bsf	139,4,c	;volatile
  1834                           
  1835                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 0);
  1836  000836  988B               	bcf	139,4,c	;volatile
  1837                           
  1838                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  1839  000838  988B               	bcf	139,4,c	;volatile
  1840                           
  1841                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  1842  00083A  888B               	bsf	139,4,c	;volatile
  1843                           
  1844                           ;LcTLCD.c: 203:  CantaPartBaixa(Data);
  1845  00083C  504E               	movf	CantaData@Data^0,w,c
  1846  00083E  ECBD  F002         	call	_CantaPartBaixa
  1847                           
  1848                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 1);
  1849  000842  888B               	bsf	139,4,c	;volatile
  1850                           
  1851                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 0);
  1852  000844  988B               	bcf	139,4,c	;volatile
  1853                           
  1854                           ;LcTLCD.c: 206:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  1855  000846  8694               	bsf	148,3,c	;volatile
  1856  000848  8494               	bsf	148,2,c	;volatile
  1857  00084A  8294               	bsf	148,1,c	;volatile
  1858  00084C  8094               	bsf	148,0,c	;volatile
  1859  00084E  0012               	return		;funcret
  1860  000850                     __end_of_CantaData:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _LcInit *****************
  1864 ;; Defined at:
  1865 ;;		line 41 in file "LcTLCD.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  rows            1    wreg     unsigned char 
  1868 ;;  columns         1   16[COMRAM] unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  rows            1   17[COMRAM] unsigned char 
  1871 ;;  i               2   18[COMRAM] int 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1
  1881 ;;      Params:         1       0       0
  1882 ;;      Locals:         3       0       0
  1883 ;;      Temps:          0       0       0
  1884 ;;      Totals:         4       0       0
  1885 ;;Total ram usage:        4 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 5
  1888 ;; This function calls:
  1889 ;;		_CantaIR
  1890 ;;		_EscriuPrimeraOrdre
  1891 ;;		_Espera
  1892 ;;		_LcCursorOff
  1893 ;;		_TiGetTimer
  1894 ;;		_WaitForBusy
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text16
  1901  000378                     __ptext16:
  1902                           	callstack 0
  1903  000378                     _LcInit:
  1904                           	callstack 25
  1905                           
  1906                           ;incstack = 0
  1907                           ;LcInit@rows stored from wreg
  1908  000378  6E58               	movwf	LcInit@rows^0,c
  1909                           
  1910                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  1911  00037A  ECD6  F003         	call	_TiGetTimer	;wreg free
  1912  00037E  6E27               	movwf	_Timer^0,c
  1913                           
  1914                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  1915  000380  C058  F02B         	movff	LcInit@rows,_Rows
  1916  000384  C057  F02A         	movff	LcInit@columns,_Columns
  1917                           
  1918                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  1919  000388  0E00               	movlw	0
  1920  00038A  6E28               	movwf	_ColumnAct^0,c
  1921  00038C  C028  F029         	movff	_ColumnAct,_RowAct
  1922                           
  1923                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  1924  000390  9894               	bcf	148,4,c	;volatile
  1925  000392  9E95               	bcf	149,7,c	;volatile
  1926  000394  9A94               	bcf	148,5,c	;volatile
  1927                           
  1928                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  1929  000396  0E00               	movlw	0
  1930  000398  6E5A               	movwf	(LcInit@i+1)^0,c
  1931  00039A  0E00               	movlw	0
  1932  00039C  6E59               	movwf	LcInit@i^0,c
  1933  00039E                     l1658:
  1934                           
  1935                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  1936  00039E  0E00               	movlw	0
  1937  0003A0  6E54               	movwf	(Espera@ms+1)^0,c
  1938  0003A2  0E64               	movlw	100
  1939  0003A4  6E53               	movwf	Espera@ms^0,c
  1940  0003A6  5027               	movf	_Timer^0,w,c
  1941  0003A8  EC83  F004         	call	_Espera
  1942                           
  1943                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  1944  0003AC  0E03               	movlw	3
  1945  0003AE  EC80  F002         	call	_EscriuPrimeraOrdre
  1946                           
  1947                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  1948  0003B2  0E00               	movlw	0
  1949  0003B4  6E54               	movwf	(Espera@ms+1)^0,c
  1950  0003B6  0E05               	movlw	5
  1951  0003B8  6E53               	movwf	Espera@ms^0,c
  1952  0003BA  5027               	movf	_Timer^0,w,c
  1953  0003BC  EC83  F004         	call	_Espera
  1954                           
  1955                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  1956  0003C0  0E03               	movlw	3
  1957  0003C2  EC80  F002         	call	_EscriuPrimeraOrdre
  1958                           
  1959                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  1960  0003C6  0E00               	movlw	0
  1961  0003C8  6E54               	movwf	(Espera@ms+1)^0,c
  1962  0003CA  0E01               	movlw	1
  1963  0003CC  6E53               	movwf	Espera@ms^0,c
  1964  0003CE  5027               	movf	_Timer^0,w,c
  1965  0003D0  EC83  F004         	call	_Espera
  1966                           
  1967                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  1968  0003D4  0E03               	movlw	3
  1969  0003D6  EC80  F002         	call	_EscriuPrimeraOrdre
  1970                           
  1971                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  1972  0003DA  0E00               	movlw	0
  1973  0003DC  6E54               	movwf	(Espera@ms+1)^0,c
  1974  0003DE  0E01               	movlw	1
  1975  0003E0  6E53               	movwf	Espera@ms^0,c
  1976  0003E2  5027               	movf	_Timer^0,w,c
  1977  0003E4  EC83  F004         	call	_Espera
  1978                           
  1979                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  1980  0003E8  0E02               	movlw	2
  1981  0003EA  EC80  F002         	call	_EscriuPrimeraOrdre
  1982                           
  1983                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  1984  0003EE  0E00               	movlw	0
  1985  0003F0  6E54               	movwf	(Espera@ms+1)^0,c
  1986  0003F2  0E04               	movlw	4
  1987  0003F4  6E53               	movwf	Espera@ms^0,c
  1988  0003F6  5027               	movf	_Timer^0,w,c
  1989  0003F8  EC83  F004         	call	_Espera
  1990                           
  1991                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  1992  0003FC  0E28               	movlw	40
  1993  0003FE  EC28  F004         	call	_CantaIR
  1994                           
  1995                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  1996  000402  EC7B  F003         	call	_WaitForBusy	;wreg free
  1997  000406  0E08               	movlw	8
  1998  000408  EC28  F004         	call	_CantaIR
  1999                           
  2000                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  2001  00040C  EC7B  F003         	call	_WaitForBusy	;wreg free
  2002  000410  0E01               	movlw	1
  2003  000412  EC28  F004         	call	_CantaIR
  2004                           
  2005                           ;LcTLCD.c: 71:   Espera(Timer,3);
  2006  000416  0E00               	movlw	0
  2007  000418  6E54               	movwf	(Espera@ms+1)^0,c
  2008  00041A  0E03               	movlw	3
  2009  00041C  6E53               	movwf	Espera@ms^0,c
  2010  00041E  5027               	movf	_Timer^0,w,c
  2011  000420  EC83  F004         	call	_Espera
  2012                           
  2013                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  2014  000424  EC7B  F003         	call	_WaitForBusy	;wreg free
  2015  000428  0E06               	movlw	6
  2016  00042A  EC28  F004         	call	_CantaIR
  2017                           
  2018                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  2019  00042E  EC7B  F003         	call	_WaitForBusy	;wreg free
  2020  000432  0E0F               	movlw	15
  2021  000434  EC28  F004         	call	_CantaIR
  2022                           
  2023                           ;LcTLCD.c: 74:  }
  2024  000438  4A59               	infsnz	LcInit@i^0,f,c
  2025  00043A  2A5A               	incf	(LcInit@i+1)^0,f,c
  2026  00043C  BE5A               	btfsc	(LcInit@i+1)^0,7,c
  2027  00043E  D7AF               	goto	l1658
  2028  000440  505A               	movf	(LcInit@i+1)^0,w,c
  2029  000442  E104               	bnz	u910
  2030  000444  0E02               	movlw	2
  2031  000446  5C59               	subwf	LcInit@i^0,w,c
  2032  000448  A0D8               	btfss	status,0,c
  2033  00044A  D7A9               	goto	l1658
  2034  00044C                     u910:
  2035                           
  2036                           ;LcTLCD.c: 79:     LcCursorOff();
  2037  00044C  ECD0  F004         	call	_LcCursorOff	;wreg free
  2038  000450  0012               	return		;funcret
  2039  000452                     __end_of_LcInit:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _TiGetTimer *****************
  2043 ;; Defined at:
  2044 ;;		line 70 in file "TiTTimer.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1
  2058 ;;      Params:         0       0       0
  2059 ;;      Locals:         0       0       0
  2060 ;;      Temps:          1       0       0
  2061 ;;      Totals:         1       0       0
  2062 ;;Total ram usage:        1 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_LcInit
  2069 ;;		_TeInit
  2070 ;;		_Minit
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text17
  2075  0007AC                     __ptext17:
  2076                           	callstack 0
  2077  0007AC                     _TiGetTimer:
  2078                           	callstack 27
  2079                           
  2080                           ;TiTTimer.c: 74:     counter=0;
  2081                           
  2082                           ;incstack = 0
  2083  0007AC  0E00               	movlw	0
  2084  0007AE  6E1F               	movwf	_counter^0,c
  2085                           
  2086                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  2087  0007B0  D007               	goto	l1166
  2088  0007B2                     l1158:
  2089                           
  2090                           ;TiTTimer.c: 76:         counter++;
  2091  0007B2  2A1F               	incf	_counter^0,f,c
  2092                           
  2093                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  2094  0007B4  0E08               	movlw	8
  2095  0007B6  181F               	xorwf	_counter^0,w,c
  2096  0007B8  A4D8               	btfss	status,2,c
  2097  0007BA  D002               	goto	l1166
  2098  0007BC  0EFF               	movlw	255
  2099  0007BE  0012               	return	
  2100  0007C0                     l1166:
  2101                           
  2102                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  2103  0007C0  501F               	movf	_counter^0,w,c
  2104  0007C2  0D03               	mullw	3
  2105  0007C4  50F3               	movf	243,w,c
  2106  0007C6  0F03               	addlw	low (_s_Timers+2)
  2107  0007C8  6ED9               	movwf	fsr2l,c
  2108  0007CA  6ADA               	clrf	fsr2h,c
  2109  0007CC  04DE               	decf	postinc2,w,c
  2110  0007CE  B4D8               	btfsc	status,2,c
  2111  0007D0  D7F0               	goto	l1158
  2112                           
  2113                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  2114  0007D2  501F               	movf	_counter^0,w,c
  2115  0007D4  0D03               	mullw	3
  2116  0007D6  50F3               	movf	243,w,c
  2117  0007D8  0F03               	addlw	low (_s_Timers+2)
  2118  0007DA  6ED9               	movwf	fsr2l,c
  2119  0007DC  6ADA               	clrf	fsr2h,c
  2120  0007DE  0E01               	movlw	1
  2121  0007E0  6EDF               	movwf	indf2,c
  2122                           
  2123                           ;TiTTimer.c: 80:     return (counter);
  2124  0007E2  501F               	movf	_counter^0,w,c
  2125  0007E4  0012               	return		;funcret
  2126  0007E6                     __end_of_TiGetTimer:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _LcCursorOff *****************
  2130 ;; Defined at:
  2131 ;;		line 96 in file "LcTLCD.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1
  2145 ;;      Params:         0       0       0
  2146 ;;      Locals:         0       0       0
  2147 ;;      Temps:          0       0       0
  2148 ;;      Totals:         0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 4
  2152 ;; This function calls:
  2153 ;;		_CantaIR
  2154 ;;		_WaitForBusy
  2155 ;; This function is called by:
  2156 ;;		_LcInit
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text18
  2161  0009A0                     __ptext18:
  2162                           	callstack 0
  2163  0009A0                     _LcCursorOff:
  2164                           	callstack 25
  2165                           
  2166                           ;LcTLCD.c: 99:  WaitForBusy();
  2167                           
  2168                           ;incstack = 0
  2169  0009A0  EC7B  F003         	call	_WaitForBusy	;wreg free
  2170                           
  2171                           ;LcTLCD.c: 100:  CantaIR(0x08 | 0x04);
  2172  0009A4  0E0C               	movlw	12
  2173  0009A6  EC28  F004         	call	_CantaIR
  2174  0009AA  0012               	return		;funcret
  2175  0009AC                     __end_of_LcCursorOff:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _WaitForBusy *****************
  2179 ;; Defined at:
  2180 ;;		line 209 in file "LcTLCD.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  Busy            1   12[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1
  2194 ;;      Params:         0       0       0
  2195 ;;      Locals:         1       0       0
  2196 ;;      Temps:          0       0       0
  2197 ;;      Totals:         1       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 3
  2201 ;; This function calls:
  2202 ;;		_TiGetTics
  2203 ;;		_TiResetTics
  2204 ;; This function is called by:
  2205 ;;		_LcInit
  2206 ;;		_LcClear
  2207 ;;		_LcCursorOff
  2208 ;;		_LcGotoXY
  2209 ;;		_LcPutChar
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text19
  2214  0006F6                     __ptext19:
  2215                           	callstack 0
  2216  0006F6                     _WaitForBusy:
  2217                           	callstack 25
  2218                           
  2219                           ;LcTLCD.c: 210:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2220                           
  2221                           ;incstack = 0
  2222  0006F6  8694               	bsf	148,3,c	;volatile
  2223  0006F8  8494               	bsf	148,2,c	;volatile
  2224  0006FA  8294               	bsf	148,1,c	;volatile
  2225  0006FC  8094               	bsf	148,0,c	;volatile
  2226                           
  2227                           ;LcTLCD.c: 211:  (LATCbits.LATC5 = 0);
  2228  0006FE  9A8B               	bcf	139,5,c	;volatile
  2229                           
  2230                           ;LcTLCD.c: 212:  (LATDbits.LATD7 = 1);
  2231  000700  8E8C               	bsf	140,7,c	;volatile
  2232                           
  2233                           ;LcTLCD.c: 213:  TiResetTics(Timer);
  2234  000702  5027               	movf	_Timer^0,w,c
  2235  000704  ECBE  F004         	call	_TiResetTics
  2236  000708                     l1540:
  2237                           
  2238                           ;LcTLCD.c: 215:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  2239  000708  888B               	bsf	139,4,c	;volatile
  2240  00070A  888B               	bsf	139,4,c	;volatile
  2241                           
  2242                           ;LcTLCD.c: 216:   Busy = (PORTCbits.RC3);
  2243  00070C  0E00               	movlw	0
  2244  00070E  B682               	btfsc	130,3,c	;volatile
  2245  000710  0E01               	movlw	1
  2246  000712  6E53               	movwf	WaitForBusy@Busy^0,c
  2247                           
  2248                           ;LcTLCD.c: 217:   (LATCbits.LATC4 = 0);
  2249  000714  988B               	bcf	139,4,c	;volatile
  2250                           
  2251                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  2252  000716  988B               	bcf	139,4,c	;volatile
  2253                           
  2254                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  2255  000718  888B               	bsf	139,4,c	;volatile
  2256  00071A  888B               	bsf	139,4,c	;volatile
  2257                           
  2258                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  2259  00071C  988B               	bcf	139,4,c	;volatile
  2260                           
  2261                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  2262  00071E  988B               	bcf	139,4,c	;volatile
  2263                           
  2264                           ;LcTLCD.c: 223:   if (TiGetTics(Timer)) break;
  2265  000720  5027               	movf	_Timer^0,w,c
  2266  000722  EC59  F004         	call	_TiGetTics
  2267  000726  504C               	movf	?_TiGetTics^0,w,c
  2268  000728  104D               	iorwf	(?_TiGetTics+1)^0,w,c
  2269  00072A  A4D8               	btfss	status,2,c
  2270  00072C  0012               	return	
  2271                           
  2272                           ;LcTLCD.c: 224:  } while(Busy);
  2273  00072E  5053               	movf	WaitForBusy@Busy^0,w,c
  2274  000730  B4D8               	btfsc	status,2,c
  2275  000732  0012               	return	
  2276  000734  D7E9               	goto	l1540
  2277  000736                     __end_of_WaitForBusy:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _CantaIR *****************
  2281 ;; Defined at:
  2282 ;;		line 177 in file "LcTLCD.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  IR              1    wreg     unsigned char 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  IR              1    7[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1
  2296 ;;      Params:         0       0       0
  2297 ;;      Locals:         1       0       0
  2298 ;;      Temps:          0       0       0
  2299 ;;      Totals:         1       0       0
  2300 ;;Total ram usage:        1 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 3
  2303 ;; This function calls:
  2304 ;;		_CantaPartAlta
  2305 ;;		_CantaPartBaixa
  2306 ;; This function is called by:
  2307 ;;		_LcInit
  2308 ;;		_LcClear
  2309 ;;		_LcCursorOff
  2310 ;;		_LcGotoXY
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text20
  2315  000850                     __ptext20:
  2316                           	callstack 0
  2317  000850                     _CantaIR:
  2318                           	callstack 25
  2319                           
  2320                           ;incstack = 0
  2321                           ;CantaIR@IR stored from wreg
  2322  000850  6E4E               	movwf	CantaIR@IR^0,c
  2323                           
  2324                           ;LcTLCD.c: 178:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  2325  000852  9694               	bcf	148,3,c	;volatile
  2326  000854  9494               	bcf	148,2,c	;volatile
  2327  000856  9294               	bcf	148,1,c	;volatile
  2328  000858  9094               	bcf	148,0,c	;volatile
  2329                           
  2330                           ;LcTLCD.c: 179:  (LATCbits.LATC5 = 0);
  2331  00085A  9A8B               	bcf	139,5,c	;volatile
  2332                           
  2333                           ;LcTLCD.c: 180:  (LATDbits.LATD7 = 0);
  2334  00085C  9E8C               	bcf	140,7,c	;volatile
  2335                           
  2336                           ;LcTLCD.c: 181:  (LATCbits.LATC4 = 1);
  2337  00085E  888B               	bsf	139,4,c	;volatile
  2338                           
  2339                           ;LcTLCD.c: 182:  CantaPartAlta(IR);
  2340  000860  504E               	movf	CantaIR@IR^0,w,c
  2341  000862  ECF1  F002         	call	_CantaPartAlta
  2342                           
  2343                           ;LcTLCD.c: 183:  (LATCbits.LATC4 = 1);
  2344  000866  888B               	bsf	139,4,c	;volatile
  2345                           
  2346                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 0);
  2347  000868  988B               	bcf	139,4,c	;volatile
  2348                           
  2349                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  2350  00086A  988B               	bcf	139,4,c	;volatile
  2351                           
  2352                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  2353  00086C  888B               	bsf	139,4,c	;volatile
  2354                           
  2355                           ;LcTLCD.c: 187:  CantaPartBaixa(IR);
  2356  00086E  504E               	movf	CantaIR@IR^0,w,c
  2357  000870  ECBD  F002         	call	_CantaPartBaixa
  2358                           
  2359                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
  2360  000874  888B               	bsf	139,4,c	;volatile
  2361                           
  2362                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
  2363  000876  988B               	bcf	139,4,c	;volatile
  2364                           
  2365                           ;LcTLCD.c: 190:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2366  000878  8694               	bsf	148,3,c	;volatile
  2367  00087A  8494               	bsf	148,2,c	;volatile
  2368  00087C  8294               	bsf	148,1,c	;volatile
  2369  00087E  8094               	bsf	148,0,c	;volatile
  2370  000880  0012               	return		;funcret
  2371  000882                     __end_of_CantaIR:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _CantaPartBaixa *****************
  2375 ;; Defined at:
  2376 ;;		line 170 in file "LcTLCD.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  c               1    wreg     unsigned char 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  c               1    6[COMRAM] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1
  2390 ;;      Params:         0       0       0
  2391 ;;      Locals:         1       0       0
  2392 ;;      Temps:          1       0       0
  2393 ;;      Totals:         2       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels used: 1
  2396 ;; Hardware stack levels required when called: 2
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_CantaIR
  2401 ;;		_CantaData
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text21
  2406  00057A                     __ptext21:
  2407                           	callstack 0
  2408  00057A                     _CantaPartBaixa:
  2409                           	callstack 25
  2410                           
  2411                           ;incstack = 0
  2412                           ;CantaPartBaixa@c stored from wreg
  2413  00057A  6E4D               	movwf	CantaPartBaixa@c^0,c
  2414                           
  2415                           ;LcTLCD.c: 171:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  2416  00057C  A64D               	btfss	CantaPartBaixa@c^0,3,c
  2417  00057E  D003               	goto	u740
  2418  000580  6A4C               	clrf	??_CantaPartBaixa^0,c
  2419  000582  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2420  000584  D001               	goto	u758
  2421  000586                     u740:
  2422  000586  6A4C               	clrf	??_CantaPartBaixa^0,c
  2423  000588                     u758:
  2424  000588  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2425  00058A  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2426  00058C  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2427  00058E  508B               	movf	139,w,c	;volatile
  2428  000590  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2429  000592  0BF7               	andlw	-9
  2430  000594  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2431  000596  6E8B               	movwf	139,c	;volatile
  2432                           
  2433                           ;LcTLCD.c: 172:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  2434  000598  A44D               	btfss	CantaPartBaixa@c^0,2,c
  2435  00059A  D003               	goto	u760
  2436  00059C  6A4C               	clrf	??_CantaPartBaixa^0,c
  2437  00059E  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2438  0005A0  D001               	goto	u778
  2439  0005A2                     u760:
  2440  0005A2  6A4C               	clrf	??_CantaPartBaixa^0,c
  2441  0005A4                     u778:
  2442  0005A4  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2443  0005A6  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2444  0005A8  508B               	movf	139,w,c	;volatile
  2445  0005AA  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2446  0005AC  0BFB               	andlw	-5
  2447  0005AE  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2448  0005B0  6E8B               	movwf	139,c	;volatile
  2449                           
  2450                           ;LcTLCD.c: 173:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  2451  0005B2  A24D               	btfss	CantaPartBaixa@c^0,1,c
  2452  0005B4  D003               	goto	u780
  2453  0005B6  6A4C               	clrf	??_CantaPartBaixa^0,c
  2454  0005B8  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2455  0005BA  D001               	goto	u798
  2456  0005BC                     u780:
  2457  0005BC  6A4C               	clrf	??_CantaPartBaixa^0,c
  2458  0005BE                     u798:
  2459  0005BE  464C               	rlncf	??_CantaPartBaixa^0,f,c
  2460  0005C0  508B               	movf	139,w,c	;volatile
  2461  0005C2  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2462  0005C4  0BFD               	andlw	-3
  2463  0005C6  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2464  0005C8  6E8B               	movwf	139,c	;volatile
  2465                           
  2466                           ;LcTLCD.c: 174:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  2467  0005CA  A04D               	btfss	CantaPartBaixa@c^0,0,c
  2468  0005CC  D003               	goto	u800
  2469  0005CE  6A4C               	clrf	??_CantaPartBaixa^0,c
  2470  0005D0  2A4C               	incf	??_CantaPartBaixa^0,f,c
  2471  0005D2  D001               	goto	u818
  2472  0005D4                     u800:
  2473  0005D4  6A4C               	clrf	??_CantaPartBaixa^0,c
  2474  0005D6                     u818:
  2475  0005D6  508B               	movf	139,w,c	;volatile
  2476  0005D8  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2477  0005DA  0BFE               	andlw	-2
  2478  0005DC  184C               	xorwf	??_CantaPartBaixa^0,w,c
  2479  0005DE  6E8B               	movwf	139,c	;volatile
  2480  0005E0  0012               	return		;funcret
  2481  0005E2                     __end_of_CantaPartBaixa:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _CantaPartAlta *****************
  2485 ;; Defined at:
  2486 ;;		line 163 in file "LcTLCD.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  c               1    wreg     unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  c               1    6[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1
  2500 ;;      Params:         0       0       0
  2501 ;;      Locals:         1       0       0
  2502 ;;      Temps:          1       0       0
  2503 ;;      Totals:         2       0       0
  2504 ;;Total ram usage:        2 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 2
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_CantaIR
  2511 ;;		_CantaData
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text22
  2516  0005E2                     __ptext22:
  2517                           	callstack 0
  2518  0005E2                     _CantaPartAlta:
  2519                           	callstack 25
  2520                           
  2521                           ;incstack = 0
  2522                           ;CantaPartAlta@c stored from wreg
  2523  0005E2  6E4D               	movwf	CantaPartAlta@c^0,c
  2524                           
  2525                           ;LcTLCD.c: 164:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  2526  0005E4  AE4D               	btfss	CantaPartAlta@c^0,7,c
  2527  0005E6  D003               	goto	u660
  2528  0005E8  6A4C               	clrf	??_CantaPartAlta^0,c
  2529  0005EA  2A4C               	incf	??_CantaPartAlta^0,f,c
  2530  0005EC  D001               	goto	u678
  2531  0005EE                     u660:
  2532  0005EE  6A4C               	clrf	??_CantaPartAlta^0,c
  2533  0005F0                     u678:
  2534  0005F0  464C               	rlncf	??_CantaPartAlta^0,f,c
  2535  0005F2  464C               	rlncf	??_CantaPartAlta^0,f,c
  2536  0005F4  464C               	rlncf	??_CantaPartAlta^0,f,c
  2537  0005F6  508B               	movf	139,w,c	;volatile
  2538  0005F8  184C               	xorwf	??_CantaPartAlta^0,w,c
  2539  0005FA  0BF7               	andlw	-9
  2540  0005FC  184C               	xorwf	??_CantaPartAlta^0,w,c
  2541  0005FE  6E8B               	movwf	139,c	;volatile
  2542                           
  2543                           ;LcTLCD.c: 165:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  2544  000600  AC4D               	btfss	CantaPartAlta@c^0,6,c
  2545  000602  D003               	goto	u680
  2546  000604  6A4C               	clrf	??_CantaPartAlta^0,c
  2547  000606  2A4C               	incf	??_CantaPartAlta^0,f,c
  2548  000608  D001               	goto	u698
  2549  00060A                     u680:
  2550  00060A  6A4C               	clrf	??_CantaPartAlta^0,c
  2551  00060C                     u698:
  2552  00060C  464C               	rlncf	??_CantaPartAlta^0,f,c
  2553  00060E  464C               	rlncf	??_CantaPartAlta^0,f,c
  2554  000610  508B               	movf	139,w,c	;volatile
  2555  000612  184C               	xorwf	??_CantaPartAlta^0,w,c
  2556  000614  0BFB               	andlw	-5
  2557  000616  184C               	xorwf	??_CantaPartAlta^0,w,c
  2558  000618  6E8B               	movwf	139,c	;volatile
  2559                           
  2560                           ;LcTLCD.c: 166:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  2561  00061A  AA4D               	btfss	CantaPartAlta@c^0,5,c
  2562  00061C  D003               	goto	u700
  2563  00061E  6A4C               	clrf	??_CantaPartAlta^0,c
  2564  000620  2A4C               	incf	??_CantaPartAlta^0,f,c
  2565  000622  D001               	goto	u718
  2566  000624                     u700:
  2567  000624  6A4C               	clrf	??_CantaPartAlta^0,c
  2568  000626                     u718:
  2569  000626  464C               	rlncf	??_CantaPartAlta^0,f,c
  2570  000628  508B               	movf	139,w,c	;volatile
  2571  00062A  184C               	xorwf	??_CantaPartAlta^0,w,c
  2572  00062C  0BFD               	andlw	-3
  2573  00062E  184C               	xorwf	??_CantaPartAlta^0,w,c
  2574  000630  6E8B               	movwf	139,c	;volatile
  2575                           
  2576                           ;LcTLCD.c: 167:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  2577  000632  A84D               	btfss	CantaPartAlta@c^0,4,c
  2578  000634  D003               	goto	u720
  2579  000636  6A4C               	clrf	??_CantaPartAlta^0,c
  2580  000638  2A4C               	incf	??_CantaPartAlta^0,f,c
  2581  00063A  D001               	goto	u738
  2582  00063C                     u720:
  2583  00063C  6A4C               	clrf	??_CantaPartAlta^0,c
  2584  00063E                     u738:
  2585  00063E  508B               	movf	139,w,c	;volatile
  2586  000640  184C               	xorwf	??_CantaPartAlta^0,w,c
  2587  000642  0BFE               	andlw	-2
  2588  000644  184C               	xorwf	??_CantaPartAlta^0,w,c
  2589  000646  6E8B               	movwf	139,c	;volatile
  2590  000648  0012               	return		;funcret
  2591  00064A                     __end_of_CantaPartAlta:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _Espera *****************
  2595 ;; Defined at:
  2596 ;;		line 158 in file "LcTLCD.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  Timer           1    wreg     unsigned char 
  2599 ;;  ms              2   12[COMRAM] int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  Timer           1   15[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1
  2611 ;;      Params:         2       0       0
  2612 ;;      Locals:         1       0       0
  2613 ;;      Temps:          1       0       0
  2614 ;;      Totals:         4       0       0
  2615 ;;Total ram usage:        4 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 3
  2618 ;; This function calls:
  2619 ;;		_TiGetTics
  2620 ;;		_TiResetTics
  2621 ;; This function is called by:
  2622 ;;		_LcInit
  2623 ;;		_LcClear
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text23
  2628  000906                     __ptext23:
  2629                           	callstack 0
  2630  000906                     _Espera:
  2631                           	callstack 25
  2632                           
  2633                           ;incstack = 0
  2634                           ;Espera@Timer stored from wreg
  2635  000906  6E56               	movwf	Espera@Timer^0,c
  2636                           
  2637                           ;LcTLCD.c: 159:  TiResetTics(Timer);
  2638  000908  5056               	movf	Espera@Timer^0,w,c
  2639  00090A  ECBE  F004         	call	_TiResetTics
  2640  00090E                     l1566:
  2641  00090E  5056               	movf	Espera@Timer^0,w,c
  2642  000910  EC59  F004         	call	_TiGetTics
  2643  000914  5053               	movf	Espera@ms^0,w,c
  2644  000916  5C4C               	subwf	?_TiGetTics^0,w,c
  2645  000918  504D               	movf	(?_TiGetTics+1)^0,w,c
  2646  00091A  0A80               	xorlw	128
  2647  00091C  6E55               	movwf	??_Espera^0,c
  2648  00091E  5054               	movf	(Espera@ms+1)^0,w,c
  2649  000920  0A80               	xorlw	128
  2650  000922  5855               	subwfb	??_Espera^0,w,c
  2651  000924  B0D8               	btfsc	status,0,c
  2652  000926  0012               	return	
  2653  000928  D7F2               	goto	l1566
  2654  00092A                     __end_of_Espera:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _TiResetTics *****************
  2658 ;; Defined at:
  2659 ;;		line 55 in file "TiTTimer.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  Handle          1    wreg     unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  Handle          1    5[COMRAM] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1
  2673 ;;      Params:         0       0       0
  2674 ;;      Locals:         1       0       0
  2675 ;;      Temps:          0       0       0
  2676 ;;      Totals:         1       0       0
  2677 ;;Total ram usage:        1 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 2
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_Espera
  2684 ;;		_WaitForBusy
  2685 ;;		_TeTeclat
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text24
  2690  00097C                     __ptext24:
  2691                           	callstack 0
  2692  00097C                     _TiResetTics:
  2693                           	callstack 25
  2694                           
  2695                           ;incstack = 0
  2696                           ;TiResetTics@Handle stored from wreg
  2697  00097C  6E4C               	movwf	TiResetTics@Handle^0,c
  2698                           
  2699                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  2700  00097E  504C               	movf	TiResetTics@Handle^0,w,c
  2701  000980  0D03               	mullw	3
  2702  000982  50F3               	movf	243,w,c
  2703  000984  0F01               	addlw	low _s_Timers
  2704  000986  6ED9               	movwf	fsr2l,c
  2705  000988  6ADA               	clrf	fsr2h,c
  2706  00098A  C019  FFDE         	movff	_h_Tics,postinc2
  2707  00098E  C01A  FFDD         	movff	_h_Tics+1,postdec2
  2708  000992  0012               	return		;funcret
  2709  000994                     __end_of_TiResetTics:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _TiGetTics *****************
  2713 ;; Defined at:
  2714 ;;		line 61 in file "TiTTimer.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  Handle          1    wreg     unsigned char 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  Handle          1    9[COMRAM] unsigned char 
  2719 ;;  actual          2   10[COMRAM] volatile unsigned int 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    5[COMRAM] int 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1
  2729 ;;      Params:         2       0       0
  2730 ;;      Locals:         3       0       0
  2731 ;;      Temps:          2       0       0
  2732 ;;      Totals:         7       0       0
  2733 ;;Total ram usage:        7 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 2
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_Espera
  2740 ;;		_WaitForBusy
  2741 ;;		_TeTeclat
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text25
  2746  0008B2                     __ptext25:
  2747                           	callstack 0
  2748  0008B2                     _TiGetTics:
  2749                           	callstack 25
  2750                           
  2751                           ;incstack = 0
  2752                           ;TiGetTics@Handle stored from wreg
  2753  0008B2  6E50               	movwf	TiGetTics@Handle^0,c
  2754                           
  2755                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  2756  0008B4  C019  F051         	movff	_h_Tics,TiGetTics@actual	;volatile
  2757  0008B8  C01A  F052         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  2758                           
  2759                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  2760  0008BC  5050               	movf	TiGetTics@Handle^0,w,c
  2761  0008BE  0D03               	mullw	3
  2762  0008C0  50F3               	movf	243,w,c
  2763  0008C2  0F01               	addlw	low _s_Timers
  2764  0008C4  6ED9               	movwf	fsr2l,c
  2765  0008C6  6ADA               	clrf	fsr2h,c
  2766  0008C8  CFDE F04E          	movff	postinc2,??_TiGetTics
  2767  0008CC  CFDD F04F          	movff	postdec2,??_TiGetTics+1
  2768  0008D0  504E               	movf	??_TiGetTics^0,w,c
  2769  0008D2  5C51               	subwf	TiGetTics@actual^0,w,c	;volatile
  2770  0008D4  6E4C               	movwf	?_TiGetTics^0,c
  2771  0008D6  504F               	movf	(??_TiGetTics+1)^0,w,c
  2772  0008D8  5852               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  2773  0008DA  6E4D               	movwf	(?_TiGetTics+1)^0,c
  2774  0008DC  0012               	return		;funcret
  2775  0008DE                     __end_of_TiGetTics:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _EscriuPrimeraOrdre *****************
  2779 ;; Defined at:
  2780 ;;		line 227 in file "LcTLCD.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  ordre           1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  ordre           1    6[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1
  2794 ;;      Params:         0       0       0
  2795 ;;      Locals:         1       0       0
  2796 ;;      Temps:          1       0       0
  2797 ;;      Totals:         2       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 2
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_LcInit
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text26
  2809  000500                     __ptext26:
  2810                           	callstack 0
  2811  000500                     _EscriuPrimeraOrdre:
  2812                           	callstack 27
  2813                           
  2814                           ;incstack = 0
  2815                           ;EscriuPrimeraOrdre@ordre stored from wreg
  2816  000500  6E4D               	movwf	EscriuPrimeraOrdre@ordre^0,c
  2817                           
  2818                           ;LcTLCD.c: 229:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  2819  000502  9694               	bcf	148,3,c	;volatile
  2820  000504  9494               	bcf	148,2,c	;volatile
  2821  000506  9294               	bcf	148,1,c	;volatile
  2822  000508  9094               	bcf	148,0,c	;volatile
  2823  00050A  9A8B               	bcf	139,5,c	;volatile
  2824  00050C  9E8C               	bcf	140,7,c	;volatile
  2825                           
  2826                           ;LcTLCD.c: 230:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  2827  00050E  888B               	bsf	139,4,c	;volatile
  2828  000510  888B               	bsf	139,4,c	;volatile
  2829                           
  2830                           ;LcTLCD.c: 231:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  2831  000512  A64D               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  2832  000514  D003               	goto	u230
  2833  000516  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2834  000518  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  2835  00051A  D001               	goto	u248
  2836  00051C                     u230:
  2837  00051C  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2838  00051E                     u248:
  2839  00051E  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2840  000520  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2841  000522  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2842  000524  508B               	movf	139,w,c	;volatile
  2843  000526  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2844  000528  0BF7               	andlw	-9
  2845  00052A  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2846  00052C  6E8B               	movwf	139,c	;volatile
  2847                           
  2848                           ;LcTLCD.c: 232:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  2849  00052E  A44D               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  2850  000530  D003               	goto	u250
  2851  000532  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2852  000534  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  2853  000536  D001               	goto	u268
  2854  000538                     u250:
  2855  000538  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2856  00053A                     u268:
  2857  00053A  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2858  00053C  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2859  00053E  508B               	movf	139,w,c	;volatile
  2860  000540  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2861  000542  0BFB               	andlw	-5
  2862  000544  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2863  000546  6E8B               	movwf	139,c	;volatile
  2864                           
  2865                           ;LcTLCD.c: 233:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  2866  000548  A24D               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  2867  00054A  D003               	goto	u270
  2868  00054C  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2869  00054E  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  2870  000550  D001               	goto	u288
  2871  000552                     u270:
  2872  000552  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2873  000554                     u288:
  2874  000554  464C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  2875  000556  508B               	movf	139,w,c	;volatile
  2876  000558  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2877  00055A  0BFD               	andlw	-3
  2878  00055C  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2879  00055E  6E8B               	movwf	139,c	;volatile
  2880                           
  2881                           ;LcTLCD.c: 234:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  2882  000560  A04D               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  2883  000562  D003               	goto	u290
  2884  000564  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2885  000566  2A4C               	incf	??_EscriuPrimeraOrdre^0,f,c
  2886  000568  D001               	goto	u308
  2887  00056A                     u290:
  2888  00056A  6A4C               	clrf	??_EscriuPrimeraOrdre^0,c
  2889  00056C                     u308:
  2890  00056C  508B               	movf	139,w,c	;volatile
  2891  00056E  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2892  000570  0BFE               	andlw	-2
  2893  000572  184C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  2894  000574  6E8B               	movwf	139,c	;volatile
  2895                           
  2896                           ;LcTLCD.c: 235:  (LATCbits.LATC4 = 0);
  2897  000576  988B               	bcf	139,4,c	;volatile
  2898  000578  0012               	return		;funcret
  2899  00057A                     __end_of_EscriuPrimeraOrdre:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _high_rsi *****************
  2903 ;; Defined at:
  2904 ;;		line 14 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1
  2918 ;;      Params:         0       0       0
  2919 ;;      Locals:         0       0       0
  2920 ;;      Temps:          4       0       0
  2921 ;;      Totals:         4       0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 1
  2925 ;; This function calls:
  2926 ;;		__TiRSITimer
  2927 ;; This function is called by:
  2928 ;;		Interrupt level 2
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	intcode
  2933  000008                     __pintcode:
  2934                           	callstack 0
  2935  000008                     _high_rsi:
  2936                           	callstack 24
  2937                           
  2938                           ;incstack = 0
  2939  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2940  00000A  CFD9 F048          	movff	fsr2l,??_high_rsi
  2941  00000E  CFDA F049          	movff	fsr2h,??_high_rsi+1
  2942  000012  CFF3 F04A          	movff	prodl,??_high_rsi+2
  2943  000016  CFF4 F04B          	movff	prodh,??_high_rsi+3
  2944                           
  2945                           ;main.c: 15:     LATBbits.LATB3 = 0;
  2946  00001A  EC25  F003         	call	__TiRSITimer	;wreg free
  2947  00001E  C04B  FFF4         	movff	??_high_rsi+3,prodh
  2948  000022  C04A  FFF3         	movff	??_high_rsi+2,prodl
  2949  000026  C049  FFDA         	movff	??_high_rsi+1,fsr2h
  2950  00002A  C048  FFD9         	movff	??_high_rsi,fsr2l
  2951  00002E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2952  000030  0011               	retfie		f
  2953  000032                     __end_of_high_rsi:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function __TiRSITimer *****************
  2957 ;; Defined at:
  2958 ;;		line 37 in file "TiTTimer.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1
  2972 ;;      Params:         0       0       0
  2973 ;;      Locals:         0       0       0
  2974 ;;      Temps:          1       0       0
  2975 ;;      Totals:         1       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_high_rsi
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text28
  2986  00064A                     __ptext28:
  2987                           	callstack 0
  2988  00064A                     __TiRSITimer:
  2989                           	callstack 24
  2990                           
  2991                           ;TiTTimer.c: 39:     TMR0H = 223;
  2992                           
  2993                           ;incstack = 0
  2994  00064A  0EDF               	movlw	223
  2995  00064C  6ED7               	movwf	215,c	;volatile
  2996                           
  2997                           ;TiTTimer.c: 40:     TMR0L = 148;
  2998  00064E  0E94               	movlw	148
  2999  000650  6ED6               	movwf	214,c	;volatile
  3000                           
  3001                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  3002  000652  94F2               	bcf	242,2,c	;volatile
  3003                           
  3004                           ;TiTTimer.c: 42:     h_Tics++;
  3005  000654  4A19               	infsnz	_h_Tics^0,f,c
  3006  000656  2A1A               	incf	(_h_Tics+1)^0,f,c
  3007                           
  3008                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  3009  000658  0E48               	movlw	72
  3010  00065A  5C19               	subwf	_h_Tics^0,w,c
  3011  00065C  0EEE               	movlw	238
  3012  00065E  581A               	subwfb	(_h_Tics+1)^0,w,c
  3013  000660  A0D8               	btfss	status,0,c
  3014  000662  0012               	return	
  3015                           
  3016                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  3017  000664  0E00               	movlw	0
  3018  000666  6E1F               	movwf	_counter^0,c
  3019  000668                     i2l1306:
  3020  000668  0E07               	movlw	7
  3021  00066A  641F               	cpfsgt	_counter^0,c
  3022  00066C  D001               	goto	i2l1310
  3023  00066E  D015               	goto	i2l1318
  3024  000670                     i2l1310:
  3025                           
  3026                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  3027  000670  501F               	movf	_counter^0,w,c
  3028  000672  0D03               	mullw	3
  3029  000674  50F3               	movf	243,w,c
  3030  000676  0F03               	addlw	low (_s_Timers+2)
  3031  000678  6ED9               	movwf	fsr2l,c
  3032  00067A  6ADA               	clrf	fsr2h,c
  3033  00067C  04DE               	decf	postinc2,w,c
  3034  00067E  A4D8               	btfss	status,2,c
  3035  000680  D00A               	goto	i2l1314
  3036                           
  3037                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  3038  000682  501F               	movf	_counter^0,w,c
  3039  000684  0D03               	mullw	3
  3040  000686  50F3               	movf	243,w,c
  3041  000688  0F01               	addlw	low _s_Timers
  3042  00068A  6ED9               	movwf	fsr2l,c
  3043  00068C  6ADA               	clrf	fsr2h,c
  3044  00068E  5019               	movf	_h_Tics^0,w,c
  3045  000690  5EDE               	subwf	postinc2,f,c
  3046  000692  501A               	movf	(_h_Tics+1)^0,w,c
  3047  000694  5ADD               	subwfb	postdec2,f,c
  3048  000696                     i2l1314:
  3049                           
  3050                           ;TiTTimer.c: 50:         }
  3051  000696  2A1F               	incf	_counter^0,f,c
  3052  000698  D7E7               	goto	i2l1306
  3053  00069A                     i2l1318:
  3054                           
  3055                           ;TiTTimer.c: 51:         h_Tics=0;
  3056  00069A  0E00               	movlw	0
  3057  00069C  6E1A               	movwf	(_h_Tics+1)^0,c
  3058  00069E  0E00               	movlw	0
  3059  0006A0  6E19               	movwf	_h_Tics^0,c
  3060  0006A2  0012               	return		;funcret
  3061  0006A4                     __end_of__TiRSITimer:
  3062                           	callstack 0
  3063                           
  3064                           	psect	rparam
  3065  0000                     
  3066                           	psect	temp
  3067  00005D                     btemp:
  3068                           	callstack 0
  3069  00005D                     	ds	1
  3070  0000                     int$flags	set	btemp
  3071  0000                     wtemp8	set	btemp+1
  3072  0000                     ttemp5	set	btemp+1
  3073  0000                     ttemp6	set	btemp+4
  3074  0000                     ttemp7	set	btemp+8
  3075                           
  3076                           	psect	idloc
  3077                           
  3078                           ;Config register IDLOC0 @ 0x200000
  3079                           ;	unspecified, using default values
  3080  200000                     	org	2097152
  3081  200000  FF                 	db	255
  3082                           
  3083                           ;Config register IDLOC1 @ 0x200001
  3084                           ;	unspecified, using default values
  3085  200001                     	org	2097153
  3086  200001  FF                 	db	255
  3087                           
  3088                           ;Config register IDLOC2 @ 0x200002
  3089                           ;	unspecified, using default values
  3090  200002                     	org	2097154
  3091  200002  FF                 	db	255
  3092                           
  3093                           ;Config register IDLOC3 @ 0x200003
  3094                           ;	unspecified, using default values
  3095  200003                     	org	2097155
  3096  200003  FF                 	db	255
  3097                           
  3098                           ;Config register IDLOC4 @ 0x200004
  3099                           ;	unspecified, using default values
  3100  200004                     	org	2097156
  3101  200004  FF                 	db	255
  3102                           
  3103                           ;Config register IDLOC5 @ 0x200005
  3104                           ;	unspecified, using default values
  3105  200005                     	org	2097157
  3106  200005  FF                 	db	255
  3107                           
  3108                           ;Config register IDLOC6 @ 0x200006
  3109                           ;	unspecified, using default values
  3110  200006                     	org	2097158
  3111  200006  FF                 	db	255
  3112                           
  3113                           ;Config register IDLOC7 @ 0x200007
  3114                           ;	unspecified, using default values
  3115  200007                     	org	2097159
  3116  200007  FF                 	db	255
  3117                           
  3118                           	psect	config
  3119                           
  3120                           ; Padding undefined space
  3121  300000                     	org	3145728
  3122  300000  FF                 	db	255
  3123                           
  3124                           ;Config register CONFIG1H @ 0x300001
  3125                           ;	Oscillator
  3126                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3127                           ;	Fail-Safe Clock Monitor Enable bit
  3128                           ;	FCMEN = 0x0, unprogrammed default
  3129                           ;	Internal/External Oscillator Switchover bit
  3130                           ;	IESO = 0x0, unprogrammed default
  3131  300001                     	org	3145729
  3132  300001  06                 	db	6
  3133                           
  3134                           ;Config register CONFIG2L @ 0x300002
  3135                           ;	unspecified, using default values
  3136                           ;	Power-up Timer Enable bit
  3137                           ;	PWRT = 0x1, unprogrammed default
  3138                           ;	Brown-out Reset Enable bits
  3139                           ;	BOR = 0x3, unprogrammed default
  3140                           ;	Brown-out Reset Voltage bits
  3141                           ;	BORV = 0x3, unprogrammed default
  3142  300002                     	org	3145730
  3143  300002  1F                 	db	31
  3144                           
  3145                           ;Config register CONFIG2H @ 0x300003
  3146                           ;	Watchdog Timer Enable bit
  3147                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3148                           ;	Watchdog Timer Postscale Select bits
  3149                           ;	WDTPS = 0xF, unprogrammed default
  3150  300003                     	org	3145731
  3151  300003  1E                 	db	30
  3152                           
  3153                           ; Padding undefined space
  3154  300004                     	org	3145732
  3155  300004  FF                 	db	255
  3156                           
  3157                           ;Config register CONFIG3H @ 0x300005
  3158                           ;	CCP2 MUX bit
  3159                           ;	CCP2MX = 0x1, unprogrammed default
  3160                           ;	PORTB A/D Enable bit
  3161                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  3162                           ;	Low-Power Timer1 Oscillator Enable bit
  3163                           ;	LPT1OSC = 0x0, unprogrammed default
  3164                           ;	MCLR Pin Enable bit
  3165                           ;	MCLRE = 0x1, unprogrammed default
  3166  300005                     	org	3145733
  3167  300005  81                 	db	129
  3168                           
  3169                           ;Config register CONFIG4L @ 0x300006
  3170                           ;	Stack Full/Underflow Reset Enable bit
  3171                           ;	STVREN = 0x1, unprogrammed default
  3172                           ;	Single-Supply ICSP Enable bit
  3173                           ;	LVP = OFF, Single-Supply ICSP disabled
  3174                           ;	Boot Block Size Select bits
  3175                           ;	BBSIZ = 0x0, unprogrammed default
  3176                           ;	Extended Instruction Set Enable bit
  3177                           ;	XINST = 0x0, unprogrammed default
  3178                           ;	Background Debugger Enable bit
  3179                           ;	DEBUG = 0x1, unprogrammed default
  3180  300006                     	org	3145734
  3181  300006  81                 	db	129
  3182                           
  3183                           ; Padding undefined space
  3184  300007                     	org	3145735
  3185  300007  FF                 	db	255
  3186                           
  3187                           ;Config register CONFIG5L @ 0x300008
  3188                           ;	unspecified, using default values
  3189                           ;	Code Protection bit
  3190                           ;	CP0 = 0x1, unprogrammed default
  3191                           ;	Code Protection bit
  3192                           ;	CP1 = 0x1, unprogrammed default
  3193  300008                     	org	3145736
  3194  300008  03                 	db	3
  3195                           
  3196                           ;Config register CONFIG5H @ 0x300009
  3197                           ;	unspecified, using default values
  3198                           ;	Boot Block Code Protection bitProtect Boot
  3199                           ;	CPB = 0x1, unprogrammed default
  3200                           ;	Data EEPROM Code Protection bit
  3201                           ;	CPD = 0x1, unprogrammed default
  3202  300009                     	org	3145737
  3203  300009  C0                 	db	192
  3204                           
  3205                           ;Config register CONFIG6L @ 0x30000A
  3206                           ;	unspecified, using default values
  3207                           ;	Write Protection bit
  3208                           ;	WRT0 = 0x1, unprogrammed default
  3209                           ;	Write Protection bit
  3210                           ;	WRT1 = 0x1, unprogrammed default
  3211  30000A                     	org	3145738
  3212  30000A  03                 	db	3
  3213                           
  3214                           ;Config register CONFIG6H @ 0x30000B
  3215                           ;	unspecified, using default values
  3216                           ;	Configuration Register Write Protection bit
  3217                           ;	WRTC = 0x1, unprogrammed default
  3218                           ;	Boot Block Write Protection bit
  3219                           ;	WRTB = 0x1, unprogrammed default
  3220                           ;	Data EEPROM Write Protection bit
  3221                           ;	WRTD = 0x1, unprogrammed default
  3222  30000B                     	org	3145739
  3223  30000B  E0                 	db	224
  3224                           
  3225                           ;Config register CONFIG7L @ 0x30000C
  3226                           ;	unspecified, using default values
  3227                           ;	Table Read Protection bit
  3228                           ;	EBTR0 = 0x1, unprogrammed default
  3229                           ;	Table Read Protection bit
  3230                           ;	EBTR1 = 0x1, unprogrammed default
  3231  30000C                     	org	3145740
  3232  30000C  03                 	db	3
  3233                           
  3234                           ;Config register CONFIG7H @ 0x30000D
  3235                           ;	unspecified, using default values
  3236                           ;	Boot Block Table Read Protection bit
  3237                           ;	EBTRB = 0x1, unprogrammed default
  3238  30000D                     	org	3145741
  3239  30000D  40                 	db	64
  3240                           tosu	equ	0xFFF
  3241                           tosh	equ	0xFFE
  3242                           tosl	equ	0xFFD
  3243                           stkptr	equ	0xFFC
  3244                           pclatu	equ	0xFFB
  3245                           pclath	equ	0xFFA
  3246                           pcl	equ	0xFF9
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           indf0	equ	0xFEF
  3254                           postinc0	equ	0xFEE
  3255                           postdec0	equ	0xFED
  3256                           preinc0	equ	0xFEC
  3257                           plusw0	equ	0xFEB
  3258                           fsr0h	equ	0xFEA
  3259                           fsr0l	equ	0xFE9
  3260                           wreg	equ	0xFE8
  3261                           indf1	equ	0xFE7
  3262                           postinc1	equ	0xFE6
  3263                           postdec1	equ	0xFE5
  3264                           preinc1	equ	0xFE4
  3265                           plusw1	equ	0xFE3
  3266                           fsr1h	equ	0xFE2
  3267                           fsr1l	equ	0xFE1
  3268                           bsr	equ	0xFE0
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           preinc2	equ	0xFDC
  3273                           plusw2	equ	0xFDB
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        27
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21      92
    BANK0           128      0       0
    BANK1           244      0       0

Pointer List with Targets:

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcGotoXY
    _LcClear->_Espera
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4698
                             _LcInit
                              _LcLCD
                              _Minit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    2037
                                             19 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0     975
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      82
                                             12 COMRAM     3     3      0
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1068
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1068
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1     736
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     15      5C       1       73.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C       7        0.0%
DATA                 0      0      5C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 20 11:53:58 2022

          TiResetTics@Handle 004C                          u230 051C                          u250 0538  
                        u308 056C                          u270 0552                          u248 051E  
                        u290 056A                          u268 053A                          u700 0624  
                        u288 0554                          u720 063C                          u800 05D4  
                        u660 05EE                          u740 0586                          u718 0626  
                        u910 044C                          u680 060A                          u760 05A2  
                        u738 063E                          u818 05D6                          u780 05BC  
                        u678 05F0                          u758 0588                          u698 060C  
                        u778 05A4                          u798 05BE                          u990 0232  
                        u998 0234             ??_CantaPartBaixa 004C                          wreg 000FE8  
                _ultimaTecla 0037                         l1224 099C                         l1158 07B2  
                       l1166 07C0                         l1334 0802                         l1338 080A  
                       l1540 0708                         l1630 06DA                         l1800 02E0  
                       l1712 0466                         l1810 0308                         l1722 0488  
                       l1706 0454                         l1572 0782                         l1636 06EA  
                       l1628 06D0                         l1820 031E                         l1804 02EC  
                       l1566 090E                         l1830 0336                         l1734 04AC  
                       l1824 032A                         l1816 0316                         l1658 039E  
                       l1770 0292                         l1762 027C                         l1764 0280  
                       l1756 026C                         l1748 04D4                         l1790 02C6  
                       l1846 08F8                         l1784 02B0                         l1768 028C  
                       l1778 02A2                         l1796 02D4                         STR_1 021E  
                       STR_2 0201                         STR_3 020C                         STR_4 0215  
                       u1000 023C                         u1010 024C                         u1020 025C  
                       u1006 023E                         u1016 024E                         u1026 025E  
                       _LATD 000F8C              ??_SsetNovaTecla 004C                         _Rows 002B  
                       _main 08DE                         _menu 0452                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 005D                         prodh 000FF4                         prodl 000FF3  
            __end_of_LcClear 097C                         start 0032              __end_of_CantaIR 0882  
              LcInit@columns 0057                 ___param_bank 000000                  Espera@Timer 0056  
                      ?_main 0047                        ?_menu 0047                ??_TiInitTimer 004C  
                      _T0CON 000FD5                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _LcLCD 0882                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _Minit 09C4  
                      _Timer 0027                        _s_ptr 0026                        _nou_s 02E1  
                _LcCursorOff 09A0               __pbitbssCOMRAM 02E0                        tablat 000FF5  
                _LcNewString 09AC                ??_TiResetTics 004C                        ttemp5 005E  
                      ttemp6 0061                        ttemp7 0065                        status 000FD8  
                      wtemp8 005E             __end_of_LcGotoXY 07AC             __end_of_LcLliure 09A0  
              ??__TiRSITimer 0047                   _TiGetTimer 07AC      EscriuPrimeraOrdre@ordre 004D  
            __initialization 0736           __size_of_CantaData 0032                 __end_of_main 0906  
               __end_of_menu 0500             __end_of_TeTeclat 0378                       ??_main 005C  
                     ??_menu 005A           __size_of_LcPutChar 0052                __activetblptr 000002  
                     ?_LcLCD 0047                       ?_Minit 0047          __end_of_TiInitTimer 081E  
                  ??_LcClear 0057                    ??_CantaIR 004E                       i2l1310 0670  
                     i2l1314 0696                       i2l1306 0668                       i2l1318 069A  
             LcGotoXY@Fisics 0055               LcGotoXY@Column 0059                ??_WaitForBusy 0053  
         __size_of_TiGetTics 002C               _sumaPulsacions 0025                       _LcInit 0378  
             _UgetNumUsuaris 09CC                       _TeInit 09BC                       _Espera 0906  
               _LcGotoXY$336 0057                       _RowAct 0029          __end_of_TiResetTics 0994  
           __end_of_high_rsi 0032                       _h_Tics 0019          __end_of__TiRSITimer 06A4  
                     clear_0 075E                       isa$std 000001  __size_of_EscriuPrimeraOrdre 007A  
               __pdataCOMRAM 002C       __size_of_CantaPartAlta 0068                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
          __end_of_CantaData 0850                 TeTeclat@cols 0021                   __accesstop 0080  
    __end_of__initialization 0764       __end_of_UgetNumUsuaris 09D0            __end_of_LcPutChar 06F6  
              ___rparam_used 000001                __end_of_LcLCD 08B2                  ?_TiGetTimer 0047  
             __pcstackCOMRAM 0047                __end_of_Minit 09CC          __end_of_WaitForBusy 0736  
          __end_of_TiGetTics 08DE                  _TiInitTimer 07E6                      ??_LcLCD 005B  
                  ?_LcGotoXY 0054                    ?_LcLliure 0047                      ??_Minit 004D  
                  ?_TeTeclat 0047                  _TiResetTics 097C              ?_UgetNumUsuaris 0047  
                    ?_LcInit 0057                _CantaPartAlta 05E2                      ?_TeInit 0047  
                    ?_Espera 0053                  __TiRSITimer 064A                      LcInit@i 0059  
                 ??_LcGotoXY 0055                   ??_LcLliure 004C          __size_of_TiGetTimer 003A  
               ?_LcCursorOff 0047                    ?_high_rsi 0047                      _LcClear 0962  
                    _CantaIR 0850                 ?_LcNewString 004C                   ??_TeTeclat 0053  
                _WaitForBusy 06F6               ?_CantaPartAlta 0047                      _Columns 002A  
      __end_of_SsetNovaTecla 09BC              __size_of_LcInit 00DA                      __Hparam 0000  
            __size_of_TeInit 0008              __size_of_Espera 0024                      __Lparam 0000  
               __psmallconst 0200                      __pcinit 0736                   _init_ports 092A  
                    __ramtop 0200                      __ptext0 08DE                      __ptext1 0452  
                    __ptext2 09CC                      __ptext3 09AC                      __ptext4 0994  
                    __ptext5 0962                      __ptext6 092A                      __ptext7 07E6  
                    __ptext8 0228                      __ptext9 09B4                    _T0CONbits 000FD5  
                  CantaIR@IR 004E                      _counter 001F             LcNewString@new_s 004C  
            WaitForBusy@Busy 0053                   ??_high_rsi 0048         end_of_initialization 0764  
    __size_of_CantaPartBaixa 0068                __Lmediumconst 0000              TiGetTics@Handle 0050  
                 _novaLletra 0035              TiGetTics@actual 0051                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
                 _numUsuaris 001B                TeTeclat@files 0020                TeTeclat@state 0022  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _TRISCbits 000F94  
                  _TRISDbits 000F95              ??_CantaPartAlta 004C                    _CantaData 081E  
               ??_TiGetTimer 004C               __end_of_LcInit 0452                    _LcPutChar 06A4  
             __end_of_TeInit 09C4               __end_of_Espera 092A   __end_of_EscriuPrimeraOrdre 057A  
              __pidataCOMRAM 0946                  ?_init_ports 0047                    _ColumnAct 0028  
               ?_TiInitTimer 0047          start_initialization 0736                    _TiGetTics 08B2  
           ??_UgetNumUsuaris 004C            __size_of_LcGotoXY 003A           __end_of_TiGetTimer 07E6  
          __size_of_LcLliure 000C                 ?_TiResetTics 0047         __size_of_LcCursorOff 000C  
                 ?_CantaData 0047         __size_of_LcNewString 0008                     ??_LcInit 0058  
                  _NovaTecla 0036            __size_of_TeTeclat 0150                     ??_TeInit 004D  
               ?__TiRSITimer 0047                     ??_Espera 0055                   ?_LcPutChar 0047  
                __pbssCOMRAM 0001                   ?_TiGetTics 004C                     ?_LcClear 0047  
                   ?_CantaIR 0047               _CantaPartBaixa 057A            __size_of_high_rsi 002A  
               ?_WaitForBusy 0047          __size_of_init_ports 001C           SsetNovaTecla@tecla 004C  
                  __pintcode 0008              CantaPartBaixa@c 004D                  __smallconst 0200  
             __size_of_LcLCD 0030               __size_of_Minit 0008       __end_of_CantaPartBaixa 05E2  
                ??_CantaData 004E                     _LATBbits 000F8A                     _LATCbits 000F8B  
                   _LATDbits 000F8C                    _novaTecla 0039                  ??_LcPutChar 005A  
                   _RCONbits 000FD0                    _timerMenu 001D       __size_of_SsetNovaTecla 0008  
                   Espera@ms 0053                     _LcGotoXY 0772                     _LcLliure 0994  
                ??_TiGetTics 004E         __size_of_TiInitTimer 0038                 _teclaPremuda 003B  
                LcGotoXY@Row 0054                    copy_data0 074A              ?_CantaPartBaixa 0047  
           __size_of_LcClear 001A             __size_of_CantaIR 0032                     _TeTeclat 0228  
       __size_of_TiResetTics 0018                     __Hrparam 0000                    menu@state 001C  
                   __Lrparam 0000         __size_of__TiRSITimer 005A                 ??_init_ports 004C  
                   __ptext10 09BC                     __ptext11 09C4           _EscriuPrimeraOrdre 0500  
                   __ptext20 0850                     __ptext12 0882                     __ptext21 057A  
                   __ptext13 06A4                     __ptext22 05E2                     __ptext14 0772  
                   __ptext23 0906                     __ptext15 081E                     __ptext24 097C  
                   __ptext16 0378                     __ptext25 08B2                     __ptext17 07AC  
                   __ptext26 0500                     __ptext18 09A0                     __ptext19 06F6  
                   __ptext28 064A               CantaPartAlta@c 004D                  _lletraASCII 003A  
                   _high_rsi 0008                     _s_Timers 0001                  _lletraInici 002C  
                   _menuDalt 001E          ?_EscriuPrimeraOrdre 0047                __size_of_main 0028  
              __size_of_menu 00AE        __end_of_CantaPartAlta 064A                CantaData@Data 004E  
                   _tiTeclat 0023           __end_of_init_ports 0946                     _setSMSon 02E0  
              _SsetNovaTecla 09B4         __size_of_WaitForBusy 0040                     _timerSMS 0038  
                   isa$xinst 000000                     int$flags 005D         ??_EscriuPrimeraOrdre 004C  
                 LcInit@rows 0058                   _INTCONbits 000FF2                ??_LcCursorOff 0054  
              ??_LcNewString 004D                     intlevel2 0000                   LcPutChar@c 005A  
             ?_SsetNovaTecla 0047          __end_of_LcCursorOff 09AC                  SMotor@state 0024  
    __size_of_UgetNumUsuaris 0004          __end_of_LcNewString 09B4  
