

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 26 20:47:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.32
    65                           ; Generated 02/02/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4321 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataCOMRAM
   101  000F58                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _lletraInici
   105  000F58  41                 	db	65
   106  000F59  44                 	db	68
   107  000F5A  47                 	db	71
   108  000F5B  4A                 	db	74
   109  000F5C  4D                 	db	77
   110  000F5D  50                 	db	80
   111  000F5E  54                 	db	84
   112  000F5F  57                 	db	87
   113  000F60  00                 	db	0
   114                           
   115                           ;initializer for _novaLletra
   116  000F61  FF                 	db	255
   117                           
   118                           ;initializer for _NovaTecla
   119  000F62  FF                 	db	255
   120                           
   121                           ;initializer for _ultimaTecla
   122  000F63  FF                 	db	255
   123                           
   124                           ;initializer for _timerSMS
   125  000F64  FF                 	db	255
   126                           
   127                           ;initializer for _novaTecla
   128  000F65  FF                 	db	255
   129                           
   130                           ;initializer for _lletraASCII
   131  000F66  FF                 	db	255
   132                           
   133                           ;initializer for _teclaPremuda
   134  000F67  01                 	db	1
   135  000F68  02                 	db	2
   136  000F69  03                 	db	3
   137  000F6A  04                 	db	4
   138  000F6B  05                 	db	5
   139  000F6C  06                 	db	6
   140  000F6D  07                 	db	7
   141  000F6E  08                 	db	8
   142  000F6F  09                 	db	9
   143  000F70  0A                 	db	10
   144  000F71  00                 	db	0
   145  000F72  0B                 	db	11
   146  0000                     _PORTDbits	set	3971
   147  0000                     _LATD	set	3980
   148  0000                     _TRISD	set	3989
   149  0000                     _TRISC	set	3988
   150  0000                     _LATBbits	set	3978
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISA	set	3986
   153  0000                     _PORTCbits	set	3970
   154  0000                     _LATDbits	set	3980
   155  0000                     _LATCbits	set	3979
   156  0000                     _TRISDbits	set	3989
   157  0000                     _TRISCbits	set	3988
   158  0000                     _EECON2	set	4007
   159  0000                     _EEDATA	set	4008
   160  0000                     _EEADR	set	4009
   161  0000                     _RCONbits	set	4048
   162  0000                     _EECON1bits	set	4006
   163  0000                     _T0CONbits	set	4053
   164  0000                     _TMR0L	set	4054
   165  0000                     _TMR0H	set	4055
   166  0000                     _T0CON	set	4053
   167  0000                     _INTCONbits	set	4082
   168                           
   169                           	psect	smallconst
   170  000200                     __psmallconst:
   171                           	callstack 0
   172  000200  00                 	db	0
   173  000201                     STR_2:
   174  000201  32                 	db	50	;'2'
   175  000202  2E                 	db	46
   176  000203  52                 	db	82	;'R'
   177  000204  45                 	db	69	;'E'
   178  000205  47                 	db	71	;'G'
   179  000206  49                 	db	73	;'I'
   180  000207  53                 	db	83	;'S'
   181  000208  54                 	db	84	;'T'
   182  000209  45                 	db	69	;'E'
   183  00020A  52                 	db	82	;'R'
   184  00020B  00                 	db	0
   185  00020C                     STR_1:
   186  00020C  31                 	db	49	;'1'
   187  00020D  2E                 	db	46
   188  00020E  4C                 	db	76	;'L'
   189  00020F  4F                 	db	79	;'O'
   190  000210  47                 	db	71	;'G'
   191  000211  49                 	db	73	;'I'
   192  000212  4E                 	db	78	;'N'
   193  000213  00                 	db	0
   194  000214                     STR_4:
   195  000214  50                 	db	80	;'P'
   196  000215  53                 	db	83	;'S'
   197  000216  57                 	db	87	;'W'
   198  000217  44                 	db	68	;'D'
   199  000218  3A                 	db	58	;':'
   200  000219  20                 	db	32
   201  00021A  00                 	db	0
   202  00021B                     STR_3:
   203  00021B  55                 	db	85	;'U'
   204  00021C  53                 	db	83	;'S'
   205  00021D  45                 	db	69	;'E'
   206  00021E  52                 	db	82	;'R'
   207  00021F  3A                 	db	58	;':'
   208  000220  20                 	db	32
   209  000221  00                 	db	0
   210  000222  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215  000C24                     __pcinit:
   216                           	callstack 0
   217  000C24                     start_initialization:
   218                           	callstack 0
   219  000C24                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Initialize objects allocated to COMRAM (27 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224  000C24  0E58               	movlw	low __pidataCOMRAM
   225  000C26  6EF6               	movwf	tblptrl,c
   226  000C28  0E0F               	movlw	high __pidataCOMRAM
   227  000C2A  6EF7               	movwf	tblptrh,c
   228  000C2C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229  000C2E  6EF8               	movwf	tblptru,c
   230  000C30  EE00  F043         	lfsr	0,__pdataCOMRAM
   231  000C34  EE10 F01B          	lfsr	1,27
   232  000C38                     copy_data0:
   233  000C38  0009               	tblrd		*+
   234  000C3A  CFF5 FFEE          	movff	tablat,postinc0
   235  000C3E  50E5               	movf	postdec1,w,c
   236  000C40  50E1               	movf	fsr1l,w,c
   237  000C42  E1FA               	bnz	copy_data0
   238                           
   239                           ; Clear objects allocated to BANK1 (184 bytes)
   240  000C44  EE01  F000         	lfsr	0,__pbssBANK1
   241  000C48  0EB8               	movlw	184
   242  000C4A                     clear_0:
   243  000C4A  6AEE               	clrf	postinc0,c
   244  000C4C  06E8               	decf	wreg,f,c
   245  000C4E  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   248  000C50  6A74               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   249                           
   250                           ; Clear objects allocated to COMRAM (66 bytes)
   251  000C52  EE00  F001         	lfsr	0,__pbssCOMRAM
   252  000C56  0E42               	movlw	66
   253  000C58                     clear_1:
   254  000C58  6AEE               	clrf	postinc0,c
   255  000C5A  06E8               	decf	wreg,f,c
   256  000C5C  E1FD               	bnz	clear_1
   257  000C5E                     end_of_initialization:
   258                           	callstack 0
   259  000C5E                     __end_of__initialization:
   260                           	callstack 0
   261  000C5E  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  000C60  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  000C62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  000C64  6EF8               	movwf	tblptru,c
   265  000C66  0100               	movlb	0
   266  000C68  EF59  F006         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bitbssCOMRAM
   269  0003A0                     __pbitbssCOMRAM:
   270                           	callstack 0
   271  0003A0                     _do_register:
   272                           	callstack 0
   273  0003A0                     	ds	1
   274  0003A1                     _return_error:
   275                           	callstack 0
   276  0003A1                     	ds	1
   277  0003A2                     _do_check_exists:
   278                           	callstack 0
   279  0003A2                     	ds	1
   280  0003A3                     _loginNOTRegister:
   281                           	callstack 0
   282  0003A3                     	ds	1
   283  0003A4                     _setSMSon:
   284                           	callstack 0
   285  0003A4                     	ds	1
   286  0003A5                     _nou_s:
   287                           	callstack 0
   288  0003A5                     	ds	1
   289                           
   290                           	psect	bssCOMRAM
   291  000001                     __pbssCOMRAM:
   292                           	callstack 0
   293  000001                     _s_Timers:
   294                           	callstack 0
   295  000001                     	ds	24
   296  000019                     _tmpPassword:
   297                           	callstack 0
   298  000019                     	ds	9
   299  000022                     _h_Tics:
   300                           	callstack 0
   301  000022                     	ds	2
   302  000024                     UmotorUsers@state:
   303                           	callstack 0
   304  000024                     	ds	1
   305  000025                     _j:
   306                           	callstack 0
   307  000025                     	ds	1
   308  000026                     _i:
   309                           	callstack 0
   310  000026                     	ds	1
   311  000027                     _indexNextUser:
   312                           	callstack 0
   313  000027                     	ds	1
   314  000028                     _numUsuaris:
   315                           	callstack 0
   316  000028                     	ds	1
   317  000029                     _currentUsrIndex:
   318                           	callstack 0
   319  000029                     	ds	1
   320  00002A                     menu@state:
   321                           	callstack 0
   322  00002A                     	ds	1
   323  00002B                     _timerMenu:
   324                           	callstack 0
   325  00002B                     	ds	1
   326  00002C                     _tmp:
   327                           	callstack 0
   328  00002C                     	ds	1
   329  00002D                     _counter:
   330                           	callstack 0
   331  00002D                     	ds	1
   332  00002E                     TeTeclat@files:
   333                           	callstack 0
   334  00002E                     	ds	1
   335  00002F                     TeTeclat@cols:
   336                           	callstack 0
   337  00002F                     	ds	1
   338  000030                     TeTeclat@state:
   339                           	callstack 0
   340  000030                     	ds	1
   341  000031                     _tiTeclat:
   342                           	callstack 0
   343  000031                     	ds	1
   344  000032                     SMotor@state:
   345                           	callstack 0
   346  000032                     	ds	1
   347  000033                     _sumaPulsacions:
   348                           	callstack 0
   349  000033                     	ds	1
   350  000034                     _s_ptr:
   351                           	callstack 0
   352  000034                     	ds	1
   353  000035                     _Timer:
   354                           	callstack 0
   355  000035                     	ds	1
   356  000036                     _ColumnAct:
   357                           	callstack 0
   358  000036                     	ds	1
   359  000037                     _RowAct:
   360                           	callstack 0
   361  000037                     	ds	1
   362  000038                     _Columns:
   363                           	callstack 0
   364  000038                     	ds	1
   365  000039                     _Rows:
   366                           	callstack 0
   367  000039                     	ds	1
   368  00003A                     _tmpUsername:
   369                           	callstack 0
   370  00003A                     	ds	9
   371                           
   372                           	psect	dataCOMRAM
   373  000043                     __pdataCOMRAM:
   374                           	callstack 0
   375  000043                     _lletraInici:
   376                           	callstack 0
   377  000043                     	ds	9
   378  00004C                     _novaLletra:
   379                           	callstack 0
   380  00004C                     	ds	1
   381  00004D                     _NovaTecla:
   382                           	callstack 0
   383  00004D                     	ds	1
   384  00004E                     _ultimaTecla:
   385                           	callstack 0
   386  00004E                     	ds	1
   387  00004F                     _timerSMS:
   388                           	callstack 0
   389  00004F                     	ds	1
   390  000050                     _novaTecla:
   391                           	callstack 0
   392  000050                     	ds	1
   393  000051                     _lletraASCII:
   394                           	callstack 0
   395  000051                     	ds	1
   396  000052                     _teclaPremuda:
   397                           	callstack 0
   398  000052                     	ds	12
   399                           
   400                           	psect	bssBANK1
   401  000100                     __pbssBANK1:
   402                           	callstack 0
   403  000100                     _usuaris:
   404                           	callstack 0
   405  000100                     	ds	184
   406                           
   407                           	psect	cstackCOMRAM
   408  00005E                     __pcstackCOMRAM:
   409                           	callstack 0
   410  00005E                     
   411                           ; 1 bytes @ 0x0
   412  00005E                     	ds	1
   413  00005F                     ??_high_rsi:
   414                           
   415                           ; 1 bytes @ 0x1
   416  00005F                     	ds	4
   417  000063                     ??_EscriuPrimeraOrdre:
   418  000063                     ??_Uinit:
   419  000063                     ??_CantaPartAlta:
   420  000063                     ??_CantaPartBaixa:
   421  000063                     ?_TiGetTics:
   422                           	callstack 0
   423  000063                     LcNewString@new_s:
   424                           	callstack 0
   425  000063                     SsetNovaTecla@tecla:
   426                           	callstack 0
   427  000063                     TiResetTics@Handle:
   428                           	callstack 0
   429  000063                     MsetNovaTecla@tecla:
   430                           	callstack 0
   431  000063                     MNovaLletra@lletra:
   432                           	callstack 0
   433  000063                     UenviaChar@pos:
   434                           	callstack 0
   435  000063                     UenviaPas@pos:
   436                           	callstack 0
   437  000063                     escriureCharEEPROM@pos:
   438                           	callstack 0
   439  000063                     compareStrings@a:
   440                           	callstack 0
   441  000063                     escriureEEPROM@caca:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000063                     	ds	1
   446  000064                     CantaPartAlta@c:
   447                           	callstack 0
   448  000064                     CantaPartBaixa@c:
   449                           	callstack 0
   450  000064                     EscriuPrimeraOrdre@ordre:
   451                           	callstack 0
   452  000064                     UenviaChar@c:
   453                           	callstack 0
   454  000064                     UenviaPas@c:
   455                           	callstack 0
   456  000064                     escriureCharEEPROM@c:
   457                           	callstack 0
   458  000064                     compareStrings@b:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462  000064                     	ds	1
   463  000065                     ??_TiGetTics:
   464  000065                     CantaIR@IR:
   465                           	callstack 0
   466  000065                     CantaData@Data:
   467                           	callstack 0
   468  000065                     Uinit@i:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x7
   472  000065                     	ds	1
   473  000066                     ??_compareStrings:
   474  000066                     Uinit@j:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x8
   478  000066                     	ds	1
   479  000067                     TiGetTics@Handle:
   480                           	callstack 0
   481  000067                     Uinit@j_1016:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x9
   485  000067                     	ds	1
   486  000068                     ??_UmotorUsers:
   487  000068                     TiGetTics@actual:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  000068                     	ds	2
   492  00006A                     ??_SMotor:
   493  00006A                     ??_TeTeclat:
   494  00006A                     WaitForBusy@Busy:
   495                           	callstack 0
   496  00006A                     Espera@ms:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xC
   500  00006A                     	ds	1
   501  00006B                     LcGotoXY@Row:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xD
   505  00006B                     	ds	1
   506  00006C                     ??_Espera:
   507  00006C                     LcGotoXY@Fisics:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xE
   511  00006C                     	ds	1
   512  00006D                     Espera@Timer:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0xF
   516  00006D                     	ds	1
   517  00006E                     LcInit@columns:
   518                           	callstack 0
   519  00006E                     _LcGotoXY$342:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x10
   523  00006E                     	ds	1
   524  00006F                     LcInit@rows:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528  00006F                     	ds	1
   529  000070                     LcGotoXY@Column:
   530                           	callstack 0
   531  000070                     LcInit@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x12
   535  000070                     	ds	1
   536  000071                     LcPutChar@c:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540  000071                     	ds	1
   541  000072                     ??_menu:
   542  000072                     
   543                           ; 1 bytes @ 0x14
   544  000072                     	ds	2
   545  000074                     
   546                           ; 1 bytes @ 0x16
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 69 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1
   566 ;;      Params:         0       0       0
   567 ;;      Locals:         0       0       0
   568 ;;      Temps:          0       0       0
   569 ;;      Totals:         0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels required when called: 7
   572 ;; This function calls:
   573 ;;		_LcInit
   574 ;;		_LcLCD
   575 ;;		_Minit
   576 ;;		_SMotor
   577 ;;		_Sinit
   578 ;;		_TeInit
   579 ;;		_TeTeclat
   580 ;;		_TiInitTimer
   581 ;;		_Uinit
   582 ;;		_UmotorUsers
   583 ;;		_escriureEEPROM
   584 ;;		_init_ports
   585 ;;		_menu
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  000CB2                     __ptext0:
   593                           	callstack 0
   594  000CB2                     _main:
   595                           	callstack 24
   596                           
   597                           ;main.c: 70:     init_ports();
   598                           
   599                           ;incstack = 0
   600  000CB2  EC9C  F007         	call	_init_ports	;wreg free
   601                           
   602                           ;main.c: 71:     escriureEEPROM();
   603  000CB6  EC39  F007         	call	_escriureEEPROM	;wreg free
   604                           
   605                           ;main.c: 72:     TiInitTimer();
   606  000CBA  ECD3  F006         	call	_TiInitTimer	;wreg free
   607                           
   608                           ;main.c: 73:     TeInit();
   609  000CBE  ECFA  F007         	call	_TeInit	;wreg free
   610                           
   611                           ;main.c: 74:     Sinit();
   612  000CC2  ECFE  F007         	call	_Sinit	;wreg free
   613                           
   614                           ;main.c: 75:     SMotor();
   615  000CC6  EC44  F002         	call	_SMotor	;wreg free
   616                           
   617                           ;main.c: 76:     Uinit();
   618  000CCA  ECBD  F004         	call	_Uinit	;wreg free
   619                           
   620                           ;main.c: 78:     LcInit(2,16);
   621  000CCE  0E10               	movlw	16
   622  000CD0  6E6E               	movwf	LcInit@columns^0,c
   623  000CD2  0E02               	movlw	2
   624  000CD4  EC50  F004         	call	_LcInit
   625                           
   626                           ;main.c: 79:     Minit();
   627  000CD8  EC06  F008         	call	_Minit	;wreg free
   628  000CDC                     l2914:
   629                           
   630                           ;main.c: 83:         menu();
   631  000CDC  EC12  F001         	call	_menu	;wreg free
   632                           
   633                           ;main.c: 85:         UmotorUsers();
   634  000CE0  ECCC  F003         	call	_UmotorUsers	;wreg free
   635                           
   636                           ;main.c: 86:         TeTeclat();
   637  000CE4  EC1A  F003         	call	_TeTeclat	;wreg free
   638                           
   639                           ;main.c: 87:         SMotor();
   640  000CE8  EC44  F002         	call	_SMotor	;wreg free
   641                           
   642                           ;main.c: 88:         LcLCD();
   643  000CEC  EC21  F007         	call	_LcLCD	;wreg free
   644  000CF0  D7F5               	goto	l2914
   645  000CF2                     __end_of_main:
   646                           	callstack 0
   647                           
   648 ;; *************** function _menu *****************
   649 ;; Defined at:
   650 ;;		line 25 in file "Menu.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1
   664 ;;      Params:         0       0       0
   665 ;;      Locals:         0       0       0
   666 ;;      Temps:          2       0       0
   667 ;;      Totals:         2       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 6
   671 ;; This function calls:
   672 ;;		_LcClear
   673 ;;		_LcGotoXY
   674 ;;		_LcLliure
   675 ;;		_LcNewString
   676 ;;		_LcPutChar
   677 ;;		_SMSoff
   678 ;;		_SMSon
   679 ;;		_UcheckExists
   680 ;;		_UcheckExistsGetError
   681 ;;		_UcheckExistsNotFinished
   682 ;;		_UenviaChar
   683 ;;		_UenviaPas
   684 ;;		_UgetNumUsuaris
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text1
   691  000224                     __ptext1:
   692                           	callstack 0
   693  000224                     _menu:
   694                           	callstack 24
   695                           
   696                           ;Menu.c: 26:   static char state = 0;;Menu.c: 28:  switch(state) {
   697                           
   698                           ;incstack = 0
   699  000224  D100               	goto	l2736
   700  000226                     l2576:
   701                           
   702                           ;Menu.c: 30:    LcClear();
   703  000226  EC66  F007         	call	_LcClear	;wreg free
   704                           
   705                           ;Menu.c: 31:    LcNewString("1.LOGIN");
   706  00022A  0E0C               	movlw	low STR_1
   707  00022C  6E63               	movwf	LcNewString@new_s^0,c
   708  00022E  ECEE  F007         	call	_LcNewString	;wreg free
   709                           
   710                           ;Menu.c: 32:    state = 1;
   711  000232  0E01               	movlw	1
   712  000234  6E2A               	movwf	menu@state^0,c
   713                           
   714                           ;Menu.c: 33:   break;
   715  000236  0012               	return	
   716  000238                     l2582:
   717                           
   718                           ;Menu.c: 35:    if (LcLliure()) {
   719  000238  ECE2  F007         	call	_LcLliure	;wreg free
   720  00023C  A0D8               	btfss	status,0,c
   721  00023E  0012               	return	
   722                           
   723                           ;Menu.c: 36:     LcGotoXY(0,1);
   724  000240  0E01               	movlw	1
   725  000242  6E6B               	movwf	LcGotoXY@Row^0,c
   726  000244  0E00               	movlw	0
   727  000246  EC99  F006         	call	_LcGotoXY
   728                           
   729                           ;Menu.c: 37:     LcNewString("2.REGISTER");
   730  00024A  0E01               	movlw	low STR_2
   731  00024C  6E63               	movwf	LcNewString@new_s^0,c
   732  00024E  ECEE  F007         	call	_LcNewString	;wreg free
   733                           
   734                           ;Menu.c: 38:     NovaTecla = -1;
   735  000252  684D               	setf	_NovaTecla^0,c
   736                           
   737                           ;Menu.c: 39:     state = 2;
   738  000254  0E02               	movlw	2
   739  000256  6E2A               	movwf	menu@state^0,c
   740  000258  0012               	return	
   741  00025A                     l2592:
   742                           
   743                           ;Menu.c: 43:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   744  00025A  044D               	decf	_NovaTecla^0,w,c
   745  00025C  A4D8               	btfss	status,2,c
   746  00025E  D009               	goto	l2600
   747  000260  EC10  F008         	call	_UgetNumUsuaris	;wreg free
   748  000264  0900               	iorlw	0
   749  000266  B4D8               	btfsc	status,2,c
   750  000268  D004               	goto	l2600
   751                           
   752                           ;Menu.c: 44:     loginNOTRegister = 1;
   753  00026A  8674               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   754  00026C                     l2598:
   755                           
   756                           ;Menu.c: 45:     state = 3;
   757  00026C  0E03               	movlw	3
   758  00026E  6E2A               	movwf	menu@state^0,c
   759                           
   760                           ;Menu.c: 46:    }
   761  000270  0012               	return	
   762  000272                     l2600:
   763  000272  0E02               	movlw	2
   764  000274  184D               	xorwf	_NovaTecla^0,w,c
   765  000276  A4D8               	btfss	status,2,c
   766  000278  0012               	return	
   767                           
   768                           ;Menu.c: 48:     loginNOTRegister = 0;
   769  00027A  9674               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   770  00027C  D7F7               	goto	l2598
   771  00027E                     l419:
   772                           
   773                           ;Menu.c: 53:    NovaTecla = -1;
   774  00027E  684D               	setf	_NovaTecla^0,c
   775                           
   776                           ;Menu.c: 54:    novaLletra = -1;
   777  000280  684C               	setf	_novaLletra^0,c
   778                           
   779                           ;Menu.c: 55:    LcClear();
   780  000282  EC66  F007         	call	_LcClear	;wreg free
   781                           
   782                           ;Menu.c: 56:    LcNewString("USER: ");
   783  000286  0E1B               	movlw	low STR_3
   784  000288  6E63               	movwf	LcNewString@new_s^0,c
   785  00028A  ECEE  F007         	call	_LcNewString	;wreg free
   786                           
   787                           ;Menu.c: 57:    state = 4;
   788  00028E  0E04               	movlw	4
   789  000290  6E2A               	movwf	menu@state^0,c
   790                           
   791                           ;Menu.c: 58:   break;
   792  000292  0012               	return	
   793  000294                     l2612:
   794                           
   795                           ;Menu.c: 60:    if (LcLliure()) {
   796  000294  ECE2  F007         	call	_LcLliure	;wreg free
   797  000298  A0D8               	btfss	status,0,c
   798  00029A  0012               	return	
   799                           
   800                           ;Menu.c: 61:     LcGotoXY(0,1);
   801  00029C  0E01               	movlw	1
   802  00029E  6E6B               	movwf	LcGotoXY@Row^0,c
   803  0002A0  0E00               	movlw	0
   804  0002A2  EC99  F006         	call	_LcGotoXY
   805                           
   806                           ;Menu.c: 62:     LcNewString("PSWD: ");
   807  0002A6  0E14               	movlw	low STR_4
   808  0002A8  6E63               	movwf	LcNewString@new_s^0,c
   809  0002AA  ECEE  F007         	call	_LcNewString	;wreg free
   810                           
   811                           ;Menu.c: 63:     state = 5;
   812  0002AE  0E05               	movlw	5
   813  0002B0  6E2A               	movwf	menu@state^0,c
   814  0002B2  0012               	return	
   815  0002B4                     l2620:
   816                           
   817                           ;Menu.c: 67:    if (LcLliure()) {
   818  0002B4  ECE2  F007         	call	_LcLliure	;wreg free
   819  0002B8  A0D8               	btfss	status,0,c
   820  0002BA  0012               	return	
   821                           
   822                           ;Menu.c: 68:     LcGotoXY(6,0);
   823  0002BC  0E00               	movlw	0
   824  0002BE  6E6B               	movwf	LcGotoXY@Row^0,c
   825  0002C0  0E06               	movlw	6
   826  0002C2  EC99  F006         	call	_LcGotoXY
   827                           
   828                           ;Menu.c: 69:     SMSon();
   829  0002C6  EC0A  F008         	call	_SMSon	;wreg free
   830                           
   831                           ;Menu.c: 70:     tmp =0;
   832  0002CA  0E00               	movlw	0
   833  0002CC  6E2C               	movwf	_tmp^0,c
   834  0002CE                     l2628:
   835                           
   836                           ;Menu.c: 71:     state = 6;
   837  0002CE  0E06               	movlw	6
   838  0002D0  6E2A               	movwf	menu@state^0,c
   839  0002D2  0012               	return	
   840  0002D4                     l2630:
   841                           
   842                           ;Menu.c: 75:    if (novaLletra > 47 && NovaTecla != 10) {
   843  0002D4  504C               	movf	_novaLletra^0,w,c
   844  0002D6  0A80               	xorlw	128
   845  0002D8  0F50               	addlw	-176
   846  0002DA  A0D8               	btfss	status,0,c
   847  0002DC  D00F               	goto	l2640
   848  0002DE  0E0A               	movlw	10
   849  0002E0  184D               	xorwf	_NovaTecla^0,w,c
   850  0002E2  B4D8               	btfsc	status,2,c
   851  0002E4  D00B               	goto	l2640
   852                           
   853                           ;Menu.c: 76:     LcPutChar(novaLletra);
   854  0002E6  504C               	movf	_novaLletra^0,w,c
   855  0002E8  ECE9  F005         	call	_LcPutChar
   856                           
   857                           ;Menu.c: 77:     UenviaChar(novaLletra,tmp);
   858  0002EC  C02C  F063         	movff	_tmp,UenviaChar@pos
   859  0002F0  504C               	movf	_novaLletra^0,w,c
   860  0002F2  ECCE  F007         	call	_UenviaChar
   861  0002F6                     l2638:
   862                           
   863                           ;Menu.c: 78:     state = 7;
   864  0002F6  0E07               	movlw	7
   865  0002F8  6E2A               	movwf	menu@state^0,c
   866                           
   867                           ;Menu.c: 79:    }
   868  0002FA  0012               	return	
   869  0002FC                     l2640:
   870  0002FC  0E0B               	movlw	11
   871  0002FE  184D               	xorwf	_NovaTecla^0,w,c
   872  000300  A4D8               	btfss	status,2,c
   873  000302  0012               	return	
   874  000304  D7F8               	goto	l2638
   875  000306                     l2644:
   876                           
   877                           ;Menu.c: 85:    if (tmp != 7 && NovaTecla != 11) {
   878  000306  0E07               	movlw	7
   879  000308  182C               	xorwf	_tmp^0,w,c
   880  00030A  B4D8               	btfsc	status,2,c
   881  00030C  D008               	goto	l2656
   882  00030E  0E0B               	movlw	11
   883  000310  184D               	xorwf	_NovaTecla^0,w,c
   884  000312  B4D8               	btfsc	status,2,c
   885  000314  D004               	goto	l2656
   886                           
   887                           ;Menu.c: 86:     tmp++;
   888  000316  2A2C               	incf	_tmp^0,f,c
   889                           
   890                           ;Menu.c: 87:     NovaTecla = -1;
   891  000318  684D               	setf	_NovaTecla^0,c
   892                           
   893                           ;Menu.c: 88:     novaLletra = -1;
   894  00031A  684C               	setf	_novaLletra^0,c
   895  00031C  D7D8               	goto	l2628
   896  00031E                     l2656:
   897  00031E  0E07               	movlw	7
   898  000320  182C               	xorwf	_tmp^0,w,c
   899  000322  B4D8               	btfsc	status,2,c
   900  000324  D004               	goto	u2120
   901  000326  0E0B               	movlw	11
   902  000328  184D               	xorwf	_NovaTecla^0,w,c
   903  00032A  A4D8               	btfss	status,2,c
   904  00032C  0012               	return	
   905  00032E                     u2120:
   906                           
   907                           ;Menu.c: 92:     LcGotoXY(6,1);
   908  00032E  0E01               	movlw	1
   909  000330  6E6B               	movwf	LcGotoXY@Row^0,c
   910  000332  0E06               	movlw	6
   911  000334  EC99  F006         	call	_LcGotoXY
   912                           
   913                           ;Menu.c: 93:     UenviaChar('\0',tmp);
   914  000338  C02C  F063         	movff	_tmp,UenviaChar@pos
   915  00033C  0E00               	movlw	0
   916  00033E  ECCE  F007         	call	_UenviaChar
   917                           
   918                           ;Menu.c: 94:     NovaTecla = -1;
   919  000342  684D               	setf	_NovaTecla^0,c
   920                           
   921                           ;Menu.c: 95:     novaLletra = -1;
   922  000344  684C               	setf	_novaLletra^0,c
   923                           
   924                           ;Menu.c: 96:     tmp = 0;
   925  000346  0E00               	movlw	0
   926  000348  6E2C               	movwf	_tmp^0,c
   927  00034A                     l2670:
   928                           
   929                           ;Menu.c: 97:     state = 8;
   930  00034A  0E08               	movlw	8
   931  00034C  6E2A               	movwf	menu@state^0,c
   932  00034E  0012               	return	
   933  000350                     l2672:
   934                           
   935                           ;Menu.c: 101:    if (novaLletra > 47 && NovaTecla != 10) {
   936  000350  504C               	movf	_novaLletra^0,w,c
   937  000352  0A80               	xorlw	128
   938  000354  0F50               	addlw	-176
   939  000356  A0D8               	btfss	status,0,c
   940  000358  D00F               	goto	l2682
   941  00035A  0E0A               	movlw	10
   942  00035C  184D               	xorwf	_NovaTecla^0,w,c
   943  00035E  B4D8               	btfsc	status,2,c
   944  000360  D00B               	goto	l2682
   945                           
   946                           ;Menu.c: 102:     LcPutChar(novaLletra);
   947  000362  504C               	movf	_novaLletra^0,w,c
   948  000364  ECE9  F005         	call	_LcPutChar
   949                           
   950                           ;Menu.c: 103:     UenviaPas(novaLletra,tmp);
   951  000368  C02C  F063         	movff	_tmp,UenviaPas@pos
   952  00036C  504C               	movf	_novaLletra^0,w,c
   953  00036E  ECC6  F007         	call	_UenviaPas
   954  000372                     l2680:
   955                           
   956                           ;Menu.c: 104:     state = 9;
   957  000372  0E09               	movlw	9
   958  000374  6E2A               	movwf	menu@state^0,c
   959                           
   960                           ;Menu.c: 105:    }
   961  000376  0012               	return	
   962  000378                     l2682:
   963  000378  0E0B               	movlw	11
   964  00037A  184D               	xorwf	_NovaTecla^0,w,c
   965  00037C  A4D8               	btfss	status,2,c
   966  00037E  0012               	return	
   967  000380  D7F8               	goto	l2680
   968  000382                     l2686:
   969                           
   970                           ;Menu.c: 111:    if (tmp != 7 && NovaTecla != 11) {
   971  000382  0E07               	movlw	7
   972  000384  182C               	xorwf	_tmp^0,w,c
   973  000386  B4D8               	btfsc	status,2,c
   974  000388  D008               	goto	l2698
   975  00038A  0E0B               	movlw	11
   976  00038C  184D               	xorwf	_NovaTecla^0,w,c
   977  00038E  B4D8               	btfsc	status,2,c
   978  000390  D004               	goto	l2698
   979                           
   980                           ;Menu.c: 112:     tmp++;
   981  000392  2A2C               	incf	_tmp^0,f,c
   982                           
   983                           ;Menu.c: 113:     NovaTecla = -1;
   984  000394  684D               	setf	_NovaTecla^0,c
   985                           
   986                           ;Menu.c: 114:     novaLletra = -1;
   987  000396  684C               	setf	_novaLletra^0,c
   988  000398  D7D8               	goto	l2670
   989  00039A                     l2698:
   990  00039A  0E07               	movlw	7
   991  00039C  182C               	xorwf	_tmp^0,w,c
   992  00039E  B4D8               	btfsc	status,2,c
   993  0003A0  D004               	goto	u2190
   994  0003A2  0E0B               	movlw	11
   995  0003A4  184D               	xorwf	_NovaTecla^0,w,c
   996  0003A6  A4D8               	btfss	status,2,c
   997  0003A8  0012               	return	
   998  0003AA                     u2190:
   999                           
  1000                           ;Menu.c: 118:     UenviaPas('\0',tmp);
  1001  0003AA  C02C  F063         	movff	_tmp,UenviaPas@pos
  1002  0003AE  0E00               	movlw	0
  1003  0003B0  ECC6  F007         	call	_UenviaPas
  1004                           
  1005                           ;Menu.c: 119:     NovaTecla = -1;
  1006  0003B4  684D               	setf	_NovaTecla^0,c
  1007                           
  1008                           ;Menu.c: 120:     novaLletra = -1;
  1009  0003B6  684C               	setf	_novaLletra^0,c
  1010                           
  1011                           ;Menu.c: 121:     tmp = 0;
  1012  0003B8  0E00               	movlw	0
  1013  0003BA  6E2C               	movwf	_tmp^0,c
  1014                           
  1015                           ;Menu.c: 122:     LcClear();
  1016  0003BC  EC66  F007         	call	_LcClear	;wreg free
  1017                           
  1018                           ;Menu.c: 123:     UcheckExists();
  1019  0003C0  EC12  F008         	call	_UcheckExists	;wreg free
  1020                           
  1021                           ;Menu.c: 124:     SMSoff();
  1022  0003C4  EC0D  F008         	call	_SMSoff	;wreg free
  1023                           
  1024                           ;Menu.c: 125:     state = 10;
  1025  0003C8  0E0A               	movlw	10
  1026  0003CA  6E2A               	movwf	menu@state^0,c
  1027  0003CC  0012               	return	
  1028  0003CE                     l2718:
  1029                           
  1030                           ;Menu.c: 129:    if (!UcheckExistsNotFinished()) {
  1031  0003CE  ECD6  F007         	call	_UcheckExistsNotFinished	;wreg free
  1032  0003D2  B0D8               	btfsc	status,0,c
  1033  0003D4  0012               	return	
  1034                           
  1035                           ;Menu.c: 130:     state = 11;
  1036  0003D6  0E0B               	movlw	11
  1037  0003D8  6E2A               	movwf	menu@state^0,c
  1038  0003DA  0012               	return	
  1039  0003DC                     l446:
  1040                           
  1041                           ;Menu.c: 134:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1042  0003DC  B674               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1043  0003DE  D007               	goto	l447
  1044  0003E0  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1045  0003E4  B0D8               	btfsc	status,0,c
  1046  0003E6  D003               	goto	l447
  1047                           
  1048                           ;Menu.c: 135:     state = 12;
  1049  0003E8  0E0C               	movlw	12
  1050  0003EA  6E2A               	movwf	menu@state^0,c
  1051                           
  1052                           ;Menu.c: 136:    }
  1053  0003EC  0012               	return	
  1054  0003EE                     l447:
  1055  0003EE  A674               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1056  0003F0  D007               	goto	l2730
  1057  0003F2  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1058  0003F6  A0D8               	btfss	status,0,c
  1059  0003F8  D003               	goto	l2730
  1060                           
  1061                           ;Menu.c: 138:     state = 13;
  1062  0003FA  0E0D               	movlw	13
  1063  0003FC  6E2A               	movwf	menu@state^0,c
  1064                           
  1065                           ;Menu.c: 139:    }
  1066  0003FE  0012               	return	
  1067  000400                     l2730:
  1068  000400  A674               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1069  000402  D002               	goto	u2250
  1070  000404  0E01               	movlw	1
  1071  000406  D001               	goto	u2252
  1072  000408                     u2250:
  1073  000408  0E00               	movlw	0
  1074  00040A                     u2252:
  1075  00040A  6E72               	movwf	??_menu^0,c
  1076  00040C  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1077  000410  A0D8               	btfss	status,0,c
  1078  000412  D002               	goto	u2260
  1079  000414  0E01               	movlw	1
  1080  000416  D001               	goto	u2262
  1081  000418                     u2260:
  1082  000418  0E00               	movlw	0
  1083  00041A                     u2262:
  1084  00041A  1A72               	xorwf	??_menu^0,f,c
  1085  00041C  B4D8               	btfsc	status,2,c
  1086  00041E  0012               	return	
  1087                           
  1088                           ;Menu.c: 141:     state = 0;
  1089  000420  0E00               	movlw	0
  1090  000422  6E2A               	movwf	menu@state^0,c
  1091  000424  0012               	return	
  1092  000426                     l2736:
  1093  000426  502A               	movf	menu@state^0,w,c
  1094  000428  6E72               	movwf	??_menu^0,c
  1095  00042A  6A73               	clrf	(??_menu+1)^0,c
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104  00042C  5073               	movf	(??_menu+1)^0,w,c
  1105  00042E  0A00               	xorlw	0	; case 0
  1106  000430  A4D8               	btfss	status,2,c
  1107  000432  0012               	return	
  1108                           
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 14, Range of values is 0 to 13
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte           43    22 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  000434  5072               	movf	??_menu^0,w,c
  1116  000436  0A00               	xorlw	0	; case 0
  1117  000438  B4D8               	btfsc	status,2,c
  1118  00043A  D6F5               	goto	l2576
  1119  00043C  0A01               	xorlw	1	; case 1
  1120  00043E  B4D8               	btfsc	status,2,c
  1121  000440  D6FB               	goto	l2582
  1122  000442  0A03               	xorlw	3	; case 2
  1123  000444  B4D8               	btfsc	status,2,c
  1124  000446  D709               	goto	l2592
  1125  000448  0A01               	xorlw	1	; case 3
  1126  00044A  B4D8               	btfsc	status,2,c
  1127  00044C  D718               	goto	l419
  1128  00044E  0A07               	xorlw	7	; case 4
  1129  000450  B4D8               	btfsc	status,2,c
  1130  000452  D720               	goto	l2612
  1131  000454  0A01               	xorlw	1	; case 5
  1132  000456  B4D8               	btfsc	status,2,c
  1133  000458  D72D               	goto	l2620
  1134  00045A  0A03               	xorlw	3	; case 6
  1135  00045C  B4D8               	btfsc	status,2,c
  1136  00045E  D73A               	goto	l2630
  1137  000460  0A01               	xorlw	1	; case 7
  1138  000462  B4D8               	btfsc	status,2,c
  1139  000464  D750               	goto	l2644
  1140  000466  0A0F               	xorlw	15	; case 8
  1141  000468  B4D8               	btfsc	status,2,c
  1142  00046A  D772               	goto	l2672
  1143  00046C  0A01               	xorlw	1	; case 9
  1144  00046E  B4D8               	btfsc	status,2,c
  1145  000470  D788               	goto	l2686
  1146  000472  0A03               	xorlw	3	; case 10
  1147  000474  B4D8               	btfsc	status,2,c
  1148  000476  D7AB               	goto	l2718
  1149  000478  0A01               	xorlw	1	; case 11
  1150  00047A  B4D8               	btfsc	status,2,c
  1151  00047C  D7AF               	goto	l446
  1152  00047E  0A07               	xorlw	7	; case 12
  1153  000480  B4D8               	btfsc	status,2,c
  1154  000482  0012               	return	
  1155  000484  0A01               	xorlw	1	; case 13
  1156  000486  0012               	return	
  1157  000488                     __end_of_menu:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _UgetNumUsuaris *****************
  1161 ;; Defined at:
  1162 ;;		line 25 in file "Usuaris.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      unsigned char 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1
  1176 ;;      Params:         0       0       0
  1177 ;;      Locals:         0       0       0
  1178 ;;      Temps:          0       0       0
  1179 ;;      Totals:         0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 2
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_menu
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text2
  1191  001020                     __ptext2:
  1192                           	callstack 0
  1193  001020                     _UgetNumUsuaris:
  1194                           	callstack 27
  1195                           
  1196                           ;Usuaris.c: 26:     return numUsuaris;
  1197                           
  1198                           ;incstack = 0
  1199  001020  5028               	movf	_numUsuaris^0,w,c
  1200  001022  0012               	return		;funcret
  1201  001024                     __end_of_UgetNumUsuaris:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _UenviaPas *****************
  1205 ;; Defined at:
  1206 ;;		line 41 in file "Usuaris.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  c               1    wreg     unsigned char 
  1209 ;;  pos             1    5[COMRAM] unsigned char 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  c               1    6[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1
  1221 ;;      Params:         1       0       0
  1222 ;;      Locals:         1       0       0
  1223 ;;      Temps:          0       0       0
  1224 ;;      Totals:         2       0       0
  1225 ;;Total ram usage:        2 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 2
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_menu
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text3
  1236  000F8C                     __ptext3:
  1237                           	callstack 0
  1238  000F8C                     _UenviaPas:
  1239                           	callstack 27
  1240                           
  1241                           ;incstack = 0
  1242                           ;UenviaPas@c stored from wreg
  1243  000F8C  6E64               	movwf	UenviaPas@c^0,c
  1244                           
  1245                           ;Usuaris.c: 42:     tmpPassword[pos] = c;
  1246  000F8E  5063               	movf	UenviaPas@pos^0,w,c
  1247  000F90  0F19               	addlw	low _tmpPassword
  1248  000F92  6ED9               	movwf	fsr2l,c
  1249  000F94  6ADA               	clrf	fsr2h,c
  1250  000F96  C064  FFDF         	movff	UenviaPas@c,indf2
  1251  000F9A  0012               	return		;funcret
  1252  000F9C                     __end_of_UenviaPas:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _UenviaChar *****************
  1256 ;; Defined at:
  1257 ;;		line 38 in file "Usuaris.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  c               1    wreg     unsigned char 
  1260 ;;  pos             1    5[COMRAM] unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  c               1    6[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1
  1272 ;;      Params:         1       0       0
  1273 ;;      Locals:         1       0       0
  1274 ;;      Temps:          0       0       0
  1275 ;;      Totals:         2       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_menu
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text4
  1287  000F9C                     __ptext4:
  1288                           	callstack 0
  1289  000F9C                     _UenviaChar:
  1290                           	callstack 27
  1291                           
  1292                           ;incstack = 0
  1293                           ;UenviaChar@c stored from wreg
  1294  000F9C  6E64               	movwf	UenviaChar@c^0,c
  1295                           
  1296                           ;Usuaris.c: 39:     tmpUsername[pos] = c;
  1297  000F9E  5063               	movf	UenviaChar@pos^0,w,c
  1298  000FA0  0F3A               	addlw	low _tmpUsername
  1299  000FA2  6ED9               	movwf	fsr2l,c
  1300  000FA4  6ADA               	clrf	fsr2h,c
  1301  000FA6  C064  FFDF         	movff	UenviaChar@c,indf2
  1302  000FAA  0012               	return		;funcret
  1303  000FAC                     __end_of_UenviaChar:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _UcheckExistsNotFinished *****************
  1307 ;; Defined at:
  1308 ;;		line 32 in file "Usuaris.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;		None               void
  1315 ;; Registers used:
  1316 ;;		status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1
  1322 ;;      Params:         0       0       0
  1323 ;;      Locals:         0       0       0
  1324 ;;      Temps:          0       0       0
  1325 ;;      Totals:         0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 2
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_menu
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text5
  1337  000FAC                     __ptext5:
  1338                           	callstack 0
  1339  000FAC                     _UcheckExistsNotFinished:
  1340                           	callstack 27
  1341                           
  1342                           ;Usuaris.c: 33:     return do_check_exists;
  1343                           
  1344                           ;incstack = 0
  1345  000FAC  B474               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1346  000FAE  D002               	goto	l1462
  1347  000FB0  90D8               	bcf	status,0,c
  1348  000FB2  0012               	return	
  1349  000FB4                     l1462:
  1350  000FB4  80D8               	bsf	status,0,c
  1351  000FB6  0012               	return		;funcret
  1352  000FB8                     __end_of_UcheckExistsNotFinished:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _UcheckExistsGetError *****************
  1356 ;; Defined at:
  1357 ;;		line 35 in file "Usuaris.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1
  1371 ;;      Params:         0       0       0
  1372 ;;      Locals:         0       0       0
  1373 ;;      Temps:          0       0       0
  1374 ;;      Totals:         0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 2
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_menu
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text6
  1386  000FB8                     __ptext6:
  1387                           	callstack 0
  1388  000FB8                     _UcheckExistsGetError:
  1389                           	callstack 27
  1390                           
  1391                           ;Usuaris.c: 36:     return return_error;
  1392                           
  1393                           ;incstack = 0
  1394  000FB8  B274               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1395  000FBA  D002               	goto	l1470
  1396  000FBC  90D8               	bcf	status,0,c
  1397  000FBE  0012               	return	
  1398  000FC0                     l1470:
  1399  000FC0  80D8               	bsf	status,0,c
  1400  000FC2  0012               	return		;funcret
  1401  000FC4                     __end_of_UcheckExistsGetError:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _UcheckExists *****************
  1405 ;; Defined at:
  1406 ;;		line 29 in file "Usuaris.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		None
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1
  1420 ;;      Params:         0       0       0
  1421 ;;      Locals:         0       0       0
  1422 ;;      Temps:          0       0       0
  1423 ;;      Totals:         0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 2
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_menu
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text7
  1435  001024                     __ptext7:
  1436                           	callstack 0
  1437  001024                     _UcheckExists:
  1438                           	callstack 27
  1439                           
  1440                           ;Usuaris.c: 30:     do_check_exists = 1;
  1441                           
  1442                           ;incstack = 0
  1443  001024  8474               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1444  001026  0012               	return		;funcret
  1445  001028                     __end_of_UcheckExists:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function _SMSon *****************
  1449 ;; Defined at:
  1450 ;;		line 114 in file "Ssms.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		None
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1
  1464 ;;      Params:         0       0       0
  1465 ;;      Locals:         0       0       0
  1466 ;;      Temps:          0       0       0
  1467 ;;      Totals:         0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 2
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_menu
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text8
  1479  001014                     __ptext8:
  1480                           	callstack 0
  1481  001014                     _SMSon:
  1482                           	callstack 27
  1483                           
  1484                           ;Ssms.c: 115:     setSMSon = 1;
  1485                           
  1486                           ;incstack = 0
  1487  001014  8874               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1488                           
  1489                           ;Ssms.c: 116:     novaTecla = -1;
  1490  001016  6850               	setf	_novaTecla^0,c
  1491  001018  0012               	return		;funcret
  1492  00101A                     __end_of_SMSon:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _SMSoff *****************
  1496 ;; Defined at:
  1497 ;;		line 119 in file "Ssms.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		None
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1
  1511 ;;      Params:         0       0       0
  1512 ;;      Locals:         0       0       0
  1513 ;;      Temps:          0       0       0
  1514 ;;      Totals:         0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 2
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_menu
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text9
  1526  00101A                     __ptext9:
  1527                           	callstack 0
  1528  00101A                     _SMSoff:
  1529                           	callstack 27
  1530                           
  1531                           ;Ssms.c: 120:     setSMSon = 0;
  1532                           
  1533                           ;incstack = 0
  1534  00101A  9874               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1535                           
  1536                           ;Ssms.c: 121:     novaTecla = -1;
  1537  00101C  6850               	setf	_novaTecla^0,c
  1538  00101E  0012               	return		;funcret
  1539  001020                     __end_of_SMSoff:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _LcNewString *****************
  1543 ;; Defined at:
  1544 ;;		line 239 in file "LcTLCD.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1547 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1
  1559 ;;      Params:         1       0       0
  1560 ;;      Locals:         0       0       0
  1561 ;;      Temps:          0       0       0
  1562 ;;      Totals:         1       0       0
  1563 ;;Total ram usage:        1 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 2
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_menu
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text10
  1574  000FDC                     __ptext10:
  1575                           	callstack 0
  1576  000FDC                     _LcNewString:
  1577                           	callstack 27
  1578                           
  1579                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1580                           
  1581                           ;incstack = 0
  1582  000FDC  C063  F034         	movff	LcNewString@new_s,_s_ptr
  1583                           
  1584                           ;LcTLCD.c: 241:     nou_s = 1;
  1585  000FE0  8A74               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1586  000FE2  0012               	return		;funcret
  1587  000FE4                     __end_of_LcNewString:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _LcLliure *****************
  1591 ;; Defined at:
  1592 ;;		line 265 in file "LcTLCD.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;		None               void
  1599 ;; Registers used:
  1600 ;;		status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1
  1606 ;;      Params:         0       0       0
  1607 ;;      Locals:         0       0       0
  1608 ;;      Temps:          0       0       0
  1609 ;;      Totals:         0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 2
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_menu
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text11
  1621  000FC4                     __ptext11:
  1622                           	callstack 0
  1623  000FC4                     _LcLliure:
  1624                           	callstack 27
  1625                           
  1626                           ;LcTLCD.c: 266:     return !nou_s;
  1627                           
  1628                           ;incstack = 0
  1629  000FC4  AA74               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1630  000FC6  D002               	goto	l1434
  1631  000FC8  90D8               	bcf	status,0,c
  1632  000FCA  0012               	return	
  1633  000FCC                     l1434:
  1634  000FCC  80D8               	bsf	status,0,c
  1635  000FCE  0012               	return		;funcret
  1636  000FD0                     __end_of_LcLliure:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _LcClear *****************
  1640 ;; Defined at:
  1641 ;;		line 82 in file "LcTLCD.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1
  1655 ;;      Params:         0       0       0
  1656 ;;      Locals:         0       0       0
  1657 ;;      Temps:          0       0       0
  1658 ;;      Totals:         0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 5
  1662 ;; This function calls:
  1663 ;;		_CantaIR
  1664 ;;		_Espera
  1665 ;;		_LcGotoXY
  1666 ;;		_WaitForBusy
  1667 ;; This function is called by:
  1668 ;;		_menu
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text12
  1673  000ECC                     __ptext12:
  1674                           	callstack 0
  1675  000ECC                     _LcClear:
  1676                           	callstack 24
  1677                           
  1678                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1679                           
  1680                           ;incstack = 0
  1681  000ECC  EC79  F006         	call	_WaitForBusy	;wreg free
  1682  000ED0  0E01               	movlw	1
  1683  000ED2  EC08  F007         	call	_CantaIR
  1684                           
  1685                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1686  000ED6  0E00               	movlw	0
  1687  000ED8  6E6B               	movwf	(Espera@ms+1)^0,c
  1688  000EDA  0E03               	movlw	3
  1689  000EDC  6E6A               	movwf	Espera@ms^0,c
  1690  000EDE  5035               	movf	_Timer^0,w,c
  1691  000EE0  EC8A  F007         	call	_Espera
  1692                           
  1693                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1694  000EE4  0E00               	movlw	0
  1695  000EE6  6E6B               	movwf	LcGotoXY@Row^0,c
  1696  000EE8  0E00               	movlw	0
  1697  000EEA  EC99  F006         	call	_LcGotoXY
  1698  000EEE  0012               	return		;funcret
  1699  000EF0                     __end_of_LcClear:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _init_ports *****************
  1703 ;; Defined at:
  1704 ;;		line 19 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1
  1718 ;;      Params:         0       0       0
  1719 ;;      Locals:         0       0       0
  1720 ;;      Temps:          0       0       0
  1721 ;;      Totals:         0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 2
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text13
  1733  000F38                     __ptext13:
  1734                           	callstack 0
  1735  000F38                     _init_ports:
  1736                           	callstack 28
  1737                           
  1738                           ;incstack = 0
  1739  000F38  0E03               	movlw	3
  1740  000F3A  6E92               	movwf	146,c	;volatile
  1741  000F3C  0EE0               	movlw	224
  1742  000F3E  6E93               	movwf	147,c	;volatile
  1743  000F40  968A               	bcf	138,3,c	;volatile
  1744  000F42  908A               	bcf	138,0,c	;volatile
  1745  000F44  928A               	bcf	138,1,c	;volatile
  1746                           
  1747                           ;main.c: 42:     TRISC = 0xC0;
  1748  000F46  0EC0               	movlw	192
  1749  000F48  6E94               	movwf	148,c	;volatile
  1750                           
  1751                           ;main.c: 52:     TRISD = 0x8F;
  1752  000F4A  0E8F               	movlw	143
  1753  000F4C  6E95               	movwf	149,c	;volatile
  1754                           
  1755                           ;main.c: 53:     LATD = 0x00;
  1756  000F4E  0E00               	movlw	0
  1757  000F50  6E8C               	movwf	140,c	;volatile
  1758                           
  1759                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1760  000F52  8EA6               	bsf	166,7,c	;volsfr
  1761                           
  1762                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1763  000F54  9CA6               	bcf	166,6,c	;volsfr
  1764  000F56  0012               	return		;funcret
  1765  000F58                     __end_of_init_ports:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _escriureEEPROM *****************
  1769 ;; Defined at:
  1770 ;;		line 176 in file "Usuaris.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  caca            1    5[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1
  1784 ;;      Params:         0       0       0
  1785 ;;      Locals:         1       0       0
  1786 ;;      Temps:          0       0       0
  1787 ;;      Totals:         1       0       0
  1788 ;;Total ram usage:        1 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 2
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text14
  1799  000E72                     __ptext14:
  1800                           	callstack 0
  1801  000E72                     _escriureEEPROM:
  1802                           	callstack 28
  1803                           
  1804                           ;Usuaris.c: 177:     for(unsigned char caca = 0; caca < 160; caca++){
  1805                           
  1806                           ;incstack = 0
  1807  000E72  0E00               	movlw	0
  1808  000E74  6E63               	movwf	escriureEEPROM@caca^0,c
  1809  000E76                     l1610:
  1810                           
  1811                           ;Usuaris.c: 178:         EEADR = 0;
  1812  000E76  0E00               	movlw	0
  1813  000E78  6EA9               	movwf	169,c	;volatile
  1814                           
  1815                           ;Usuaris.c: 179:         EEDATA = 0;
  1816  000E7A  0E00               	movlw	0
  1817  000E7C  6EA8               	movwf	168,c	;volatile
  1818                           
  1819                           ;Usuaris.c: 180:         EECON1bits.EEPGD = 0;
  1820  000E7E  9EA6               	bcf	166,7,c	;volsfr
  1821                           
  1822                           ;Usuaris.c: 181:         EECON1bits.CFGS = 0;
  1823  000E80  9CA6               	bcf	166,6,c	;volsfr
  1824                           
  1825                           ;Usuaris.c: 182:         EECON1bits.WREN = 1;
  1826  000E82  84A6               	bsf	166,2,c	;volsfr
  1827                           
  1828                           ;Usuaris.c: 183:         INTCONbits.GIE = 0;
  1829  000E84  9EF2               	bcf	242,7,c	;volatile
  1830                           
  1831                           ;Usuaris.c: 184:         EECON2 = 85;
  1832  000E86  0E55               	movlw	85
  1833  000E88  6EA7               	movwf	167,c	;volsfr
  1834                           
  1835                           ;Usuaris.c: 185:         EECON2 = 170;
  1836  000E8A  0EAA               	movlw	170
  1837  000E8C  6EA7               	movwf	167,c	;volsfr
  1838                           
  1839                           ;Usuaris.c: 186:          EECON1bits.WR = 1;
  1840  000E8E  82A6               	bsf	166,1,c	;volsfr
  1841  000E90                     l589:
  1842                           
  1843                           ;Usuaris.c: 187:         while(EECON1bits.WR){
  1844  000E90  B2A6               	btfsc	166,1,c	;volsfr
  1845  000E92  D7FE               	goto	l589
  1846                           
  1847                           ;Usuaris.c: 192:     }
  1848  000E94  2A63               	incf	escriureEEPROM@caca^0,f,c
  1849  000E96  0E9F               	movlw	159
  1850  000E98  6463               	cpfsgt	escriureEEPROM@caca^0,c
  1851  000E9A  D7ED               	goto	l1610
  1852                           
  1853                           ;Usuaris.c: 193:    INTCONbits.GIE = 1;
  1854  000E9C  8EF2               	bsf	242,7,c	;volatile
  1855  000E9E  0012               	return		;funcret
  1856  000EA0                     __end_of_escriureEEPROM:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _UmotorUsers *****************
  1860 ;; Defined at:
  1861 ;;		line 117 in file "Usuaris.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1
  1875 ;;      Params:         0       0       0
  1876 ;;      Locals:         0       0       0
  1877 ;;      Temps:          2       0       0
  1878 ;;      Totals:         2       0       0
  1879 ;;Total ram usage:        2 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 3
  1882 ;; This function calls:
  1883 ;;		_compareStrings
  1884 ;;		_escriureCharEEPROM
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text15
  1891  000798                     __ptext15:
  1892                           	callstack 0
  1893  000798                     _UmotorUsers:
  1894                           	callstack 27
  1895                           
  1896                           ;Usuaris.c: 118: static char state = 0;;Usuaris.c: 120:  switch(state) {
  1897                           
  1898                           ;incstack = 0
  1899  000798  D06E               	goto	l2808
  1900  00079A                     l563:
  1901                           
  1902                           ;Usuaris.c: 122:    if (!do_check_exists && !do_register) {
  1903  00079A  A474               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1904  00079C  B074               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  1905  00079E  D005               	goto	l564
  1906                           
  1907                           ;Usuaris.c: 123:     i = 0;
  1908  0007A0  0E00               	movlw	0
  1909  0007A2  6E26               	movwf	_i^0,c
  1910                           
  1911                           ;Usuaris.c: 124:     j = 0;
  1912  0007A4  0E00               	movlw	0
  1913  0007A6  6E25               	movwf	_j^0,c
  1914                           
  1915                           ;Usuaris.c: 125:    }
  1916  0007A8  0012               	return	
  1917  0007AA                     l564:
  1918  0007AA  A474               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1919  0007AC  D004               	goto	l566
  1920                           
  1921                           ;Usuaris.c: 127:     return_error = 0;
  1922  0007AE  9274               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1923  0007B0                     l2750:
  1924                           
  1925                           ;Usuaris.c: 128:     state = 1;
  1926  0007B0  0E01               	movlw	1
  1927  0007B2  6E24               	movwf	UmotorUsers@state^0,c
  1928                           
  1929                           ;Usuaris.c: 129:    }
  1930  0007B4  0012               	return	
  1931  0007B6                     l566:
  1932  0007B6  A074               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  1933  0007B8  0012               	return	
  1934  0007BA                     u2310:
  1935                           
  1936                           ;Usuaris.c: 131:     state = 2;
  1937  0007BA  0E02               	movlw	2
  1938  0007BC  6E24               	movwf	UmotorUsers@state^0,c
  1939                           
  1940                           ;Usuaris.c: 133:   break;
  1941  0007BE  0012               	return	
  1942  0007C0                     l2754:
  1943                           
  1944                           ;Usuaris.c: 135:    if (i < numUsuaris) {
  1945  0007C0  5028               	movf	_numUsuaris^0,w,c
  1946  0007C2  5C26               	subwf	_i^0,w,c
  1947  0007C4  B0D8               	btfsc	status,0,c
  1948  0007C6  D016               	goto	l2764
  1949                           
  1950                           ;Usuaris.c: 136:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  1951  0007C8  0E3A               	movlw	low _tmpUsername
  1952  0007CA  6E63               	movwf	compareStrings@a^0,c
  1953  0007CC  5026               	movf	_i^0,w,c
  1954  0007CE  0D17               	mullw	23
  1955  0007D0  0E00               	movlw	low _usuaris
  1956  0007D2  24F3               	addwf	243,w,c
  1957  0007D4  6E64               	movwf	compareStrings@b^0,c
  1958  0007D6  0E01               	movlw	high _usuaris
  1959  0007D8  20F4               	addwfc	prodh,w,c
  1960  0007DA  6E65               	movwf	(compareStrings@b+1)^0,c
  1961  0007DC  EC36  F006         	call	_compareStrings	;wreg free
  1962  0007E0  0900               	iorlw	0
  1963  0007E2  A4D8               	btfss	status,2,c
  1964  0007E4  D005               	goto	u2355
  1965                           
  1966                           ;Usuaris.c: 137:      return_error = i;
  1967  0007E6  A026               	btfss	_i^0,0,c
  1968  0007E8  D002               	goto	u2340
  1969  0007EA  8274               	bsf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1970  0007EC  D001               	goto	u2355
  1971  0007EE                     u2340:
  1972  0007EE  9274               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1973  0007F0                     u2355:
  1974                           
  1975                           ;Usuaris.c: 140:     i++;
  1976  0007F0  2A26               	incf	_i^0,f,c
  1977  0007F2  D7DE               	goto	l2750
  1978  0007F4                     l2764:
  1979  0007F4  5028               	movf	_numUsuaris^0,w,c
  1980  0007F6  1826               	xorwf	_i^0,w,c
  1981  0007F8  A4D8               	btfss	status,2,c
  1982  0007FA  0012               	return	
  1983                           
  1984                           ;Usuaris.c: 144:     do_check_exists = 0;
  1985  0007FC  9474               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1986  0007FE                     l2768:
  1987                           
  1988                           ;Usuaris.c: 145:     state = 0;
  1989  0007FE  0E00               	movlw	0
  1990  000800  6E24               	movwf	UmotorUsers@state^0,c
  1991  000802  0012               	return	
  1992  000804                     l2770:
  1993                           
  1994                           ;Usuaris.c: 149:    if (i != 8) {
  1995  000804  0E08               	movlw	8
  1996  000806  1826               	xorwf	_i^0,w,c
  1997  000808  B4D8               	btfsc	status,2,c
  1998  00080A  D00C               	goto	l2780
  1999                           
  2000                           ;Usuaris.c: 150:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2001  00080C  C027  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  2002  000810  5026               	movf	_i^0,w,c
  2003  000812  0F3A               	addlw	low _tmpUsername
  2004  000814  6ED9               	movwf	fsr2l,c
  2005  000816  6ADA               	clrf	fsr2h,c
  2006  000818  50DF               	movf	indf2,w,c
  2007  00081A  EC78  F007         	call	_escriureCharEEPROM
  2008  00081E  2A27               	incf	_indexNextUser^0,f,c
  2009                           
  2010                           ;Usuaris.c: 151:     i++;
  2011  000820  2A26               	incf	_i^0,f,c
  2012  000822  D7CB               	goto	u2310
  2013  000824                     l2780:
  2014  000824  0E08               	movlw	8
  2015  000826  1826               	xorwf	_i^0,w,c
  2016  000828  A4D8               	btfss	status,2,c
  2017  00082A  0012               	return	
  2018                           
  2019                           ;Usuaris.c: 155:     i = 0;
  2020  00082C  0E00               	movlw	0
  2021  00082E  6E26               	movwf	_i^0,c
  2022                           
  2023                           ;Usuaris.c: 156:     state = 3;
  2024  000830  0E03               	movlw	3
  2025  000832  6E24               	movwf	UmotorUsers@state^0,c
  2026  000834  0012               	return	
  2027  000836                     l2784:
  2028                           
  2029                           ;Usuaris.c: 160:    if (i != 8) {
  2030  000836  0E08               	movlw	8
  2031  000838  1826               	xorwf	_i^0,w,c
  2032  00083A  B4D8               	btfsc	status,2,c
  2033  00083C  D00E               	goto	l2794
  2034                           
  2035                           ;Usuaris.c: 161:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2036  00083E  C027  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  2037  000842  5026               	movf	_i^0,w,c
  2038  000844  0F19               	addlw	low _tmpPassword
  2039  000846  6ED9               	movwf	fsr2l,c
  2040  000848  6ADA               	clrf	fsr2h,c
  2041  00084A  50DF               	movf	indf2,w,c
  2042  00084C  EC78  F007         	call	_escriureCharEEPROM
  2043  000850  2A27               	incf	_indexNextUser^0,f,c
  2044                           
  2045                           ;Usuaris.c: 162:     i++;
  2046  000852  2A26               	incf	_i^0,f,c
  2047                           
  2048                           ;Usuaris.c: 163:     state = 3;
  2049  000854  0E03               	movlw	3
  2050  000856  6E24               	movwf	UmotorUsers@state^0,c
  2051                           
  2052                           ;Usuaris.c: 164:    }
  2053  000858  0012               	return	
  2054  00085A                     l2794:
  2055  00085A  0E08               	movlw	8
  2056  00085C  1826               	xorwf	_i^0,w,c
  2057  00085E  A4D8               	btfss	status,2,c
  2058  000860  0012               	return	
  2059                           
  2060                           ;Usuaris.c: 166:     do_register = 0;
  2061  000862  9074               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2062                           
  2063                           ;Usuaris.c: 167:     indexNextUser = ++indexNextUser;
  2064  000864  2A27               	incf	_indexNextUser^0,f,c
  2065  000866  C027  F027         	movff	_indexNextUser,_indexNextUser
  2066                           
  2067                           ;Usuaris.c: 168:     if(numUsuaris != 8) numUsuaris++;
  2068  00086A  0E08               	movlw	8
  2069  00086C  1828               	xorwf	_numUsuaris^0,w,c
  2070  00086E  B4D8               	btfsc	status,2,c
  2071  000870  D7C6               	goto	l2768
  2072  000872  2A28               	incf	_numUsuaris^0,f,c
  2073  000874  D7C4               	goto	l2768
  2074  000876                     l2808:
  2075  000876  5024               	movf	UmotorUsers@state^0,w,c
  2076  000878  6E68               	movwf	??_UmotorUsers^0,c
  2077  00087A  6A69               	clrf	(??_UmotorUsers+1)^0,c
  2078                           
  2079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 1, Range of values is 0 to 0
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            4     3 (average)
  2085                           ;	Chosen strategy is simple_byte
  2086  00087C  5069               	movf	(??_UmotorUsers+1)^0,w,c
  2087  00087E  0A00               	xorlw	0	; case 0
  2088  000880  A4D8               	btfss	status,2,c
  2089  000882  0012               	return	
  2090                           
  2091                           ; Switch size 1, requested type "simple"
  2092                           ; Number of cases is 4, Range of values is 0 to 3
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte           13     7 (average)
  2096                           ;	Chosen strategy is simple_byte
  2097  000884  5068               	movf	??_UmotorUsers^0,w,c
  2098  000886  0A00               	xorlw	0	; case 0
  2099  000888  B4D8               	btfsc	status,2,c
  2100  00088A  D787               	goto	l563
  2101  00088C  0A01               	xorlw	1	; case 1
  2102  00088E  B4D8               	btfsc	status,2,c
  2103  000890  D797               	goto	l2754
  2104  000892  0A03               	xorlw	3	; case 2
  2105  000894  B4D8               	btfsc	status,2,c
  2106  000896  D7B6               	goto	l2770
  2107  000898  0A01               	xorlw	1	; case 3
  2108  00089A  A4D8               	btfss	status,2,c
  2109  00089C  0012               	return	
  2110  00089E  D7CB               	goto	l2784
  2111  0008A0                     __end_of_UmotorUsers:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _escriureCharEEPROM *****************
  2115 ;; Defined at:
  2116 ;;		line 51 in file "Usuaris.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  c               1    wreg     unsigned char 
  2119 ;;  pos             1    5[COMRAM] unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  c               1    6[COMRAM] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1
  2131 ;;      Params:         1       0       0
  2132 ;;      Locals:         1       0       0
  2133 ;;      Temps:          0       0       0
  2134 ;;      Totals:         2       0       0
  2135 ;;Total ram usage:        2 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_UmotorUsers
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text16
  2146  000EF0                     __ptext16:
  2147                           	callstack 0
  2148  000EF0                     _escriureCharEEPROM:
  2149                           	callstack 27
  2150                           
  2151                           ;incstack = 0
  2152                           ;escriureCharEEPROM@c stored from wreg
  2153  000EF0  6E64               	movwf	escriureCharEEPROM@c^0,c
  2154                           
  2155                           ;Usuaris.c: 52:     EEADR = c;
  2156  000EF2  C064  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2157                           
  2158                           ;Usuaris.c: 53:     EEDATA = pos;
  2159  000EF6  C063  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2160                           
  2161                           ;Usuaris.c: 54:     EECON1bits.EEPGD = 0;
  2162  000EFA  9EA6               	bcf	166,7,c	;volsfr
  2163                           
  2164                           ;Usuaris.c: 55:     EECON1bits.CFGS = 0;
  2165  000EFC  9CA6               	bcf	166,6,c	;volsfr
  2166                           
  2167                           ;Usuaris.c: 56:     EECON1bits.WREN = 1;
  2168  000EFE  84A6               	bsf	166,2,c	;volsfr
  2169                           
  2170                           ;Usuaris.c: 57:     INTCONbits.GIE = 0;
  2171  000F00  9EF2               	bcf	242,7,c	;volatile
  2172                           
  2173                           ;Usuaris.c: 58:     EECON2 = 85;
  2174  000F02  0E55               	movlw	85
  2175  000F04  6EA7               	movwf	167,c	;volsfr
  2176                           
  2177                           ;Usuaris.c: 59:     EECON2 = 170;
  2178  000F06  0EAA               	movlw	170
  2179  000F08  6EA7               	movwf	167,c	;volsfr
  2180                           
  2181                           ;Usuaris.c: 60:      EECON1bits.WR = 1;
  2182  000F0A  82A6               	bsf	166,1,c	;volsfr
  2183  000F0C                     l525:
  2184  000F0C  B2A6               	btfsc	166,1,c	;volsfr
  2185  000F0E  D7FE               	goto	l525
  2186                           
  2187                           ;Usuaris.c: 62:    INTCONbits.GIE = 1;
  2188  000F10  8EF2               	bsf	242,7,c	;volatile
  2189  000F12  0012               	return		;funcret
  2190  000F14                     __end_of_escriureCharEEPROM:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _compareStrings *****************
  2194 ;; Defined at:
  2195 ;;		line 107 in file "Usuaris.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2198 ;;		 -> tmpUsername(9), 
  2199 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2200 ;;		 -> usuaris.username(9), usuaris(184), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      unsigned char 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1
  2212 ;;      Params:         3       0       0
  2213 ;;      Locals:         0       0       0
  2214 ;;      Temps:          2       0       0
  2215 ;;      Totals:         5       0       0
  2216 ;;Total ram usage:        5 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_UmotorUsers
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text17
  2227  000C6C                     __ptext17:
  2228                           	callstack 0
  2229  000C6C                     _compareStrings:
  2230                           	callstack 27
  2231                           
  2232                           ;Usuaris.c: 108:     while (*a){
  2233                           
  2234                           ;incstack = 0
  2235  000C6C  D00E               	goto	l2370
  2236  000C6E                     l2364:
  2237                           
  2238                           ;Usuaris.c: 109:         if (*a != *b)break;
  2239  000C6E  C064  FFD9         	movff	compareStrings@b,fsr2l
  2240  000C72  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  2241  000C76  5063               	movf	compareStrings@a^0,w,c
  2242  000C78  6EE1               	movwf	fsr1l,c
  2243  000C7A  6AE2               	clrf	fsr1h,c
  2244  000C7C  50DE               	movf	postinc2,w,c
  2245  000C7E  18E6               	xorwf	postinc1,w,c
  2246  000C80  A4D8               	btfss	status,2,c
  2247  000C82  D009               	goto	u1700
  2248                           
  2249                           ;Usuaris.c: 110:         a++;
  2250  000C84  2A63               	incf	compareStrings@a^0,f,c
  2251                           
  2252                           ;Usuaris.c: 111:         b++;
  2253  000C86  4A64               	infsnz	compareStrings@b^0,f,c
  2254  000C88  2A65               	incf	(compareStrings@b+1)^0,f,c
  2255  000C8A                     l2370:
  2256                           
  2257                           ;Usuaris.c: 108:     while (*a){
  2258  000C8A  5063               	movf	compareStrings@a^0,w,c
  2259  000C8C  6ED9               	movwf	fsr2l,c
  2260  000C8E  6ADA               	clrf	fsr2h,c
  2261  000C90  50DF               	movf	indf2,w,c
  2262  000C92  A4D8               	btfss	status,2,c
  2263  000C94  D7EC               	goto	l2364
  2264  000C96                     u1700:
  2265                           
  2266                           ;Usuaris.c: 113:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2267  000C96  C064  FFD9         	movff	compareStrings@b,fsr2l
  2268  000C9A  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  2269  000C9E  50DF               	movf	indf2,w,c
  2270  000CA0  6E66               	movwf	??_compareStrings^0,c
  2271  000CA2  5063               	movf	compareStrings@a^0,w,c
  2272  000CA4  6ED9               	movwf	fsr2l,c
  2273  000CA6  6ADA               	clrf	fsr2h,c
  2274  000CA8  50DF               	movf	indf2,w,c
  2275  000CAA  6E67               	movwf	(??_compareStrings+1)^0,c
  2276  000CAC  5066               	movf	??_compareStrings^0,w,c
  2277  000CAE  5C67               	subwf	(??_compareStrings+1)^0,w,c
  2278  000CB0  0012               	return		;funcret
  2279  000CB2                     __end_of_compareStrings:
  2280                           	callstack 0
  2281                           
  2282 ;; *************** function _Uinit *****************
  2283 ;; Defined at:
  2284 ;;		line 64 in file "Usuaris.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  j               1    9[COMRAM] unsigned char 
  2289 ;;  j               1    8[COMRAM] unsigned char 
  2290 ;;  i               1    7[COMRAM] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1
  2300 ;;      Params:         0       0       0
  2301 ;;      Locals:         3       0       0
  2302 ;;      Temps:          2       0       0
  2303 ;;      Totals:         5       0       0
  2304 ;;Total ram usage:        5 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 2
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text18
  2315  00097A                     __ptext18:
  2316                           	callstack 0
  2317  00097A                     _Uinit:
  2318                           	callstack 28
  2319                           
  2320                           ;Usuaris.c: 69:     EEADR = 0;
  2321                           
  2322                           ;incstack = 0
  2323  00097A  0E00               	movlw	0
  2324  00097C  6EA9               	movwf	169,c	;volatile
  2325                           
  2326                           ;Usuaris.c: 70:     EECON1bits.EEPGD = 0;
  2327  00097E  9EA6               	bcf	166,7,c	;volsfr
  2328                           
  2329                           ;Usuaris.c: 71:     EECON1bits.CFGS = 0;
  2330  000980  9CA6               	bcf	166,6,c	;volsfr
  2331                           
  2332                           ;Usuaris.c: 72:     EECON1bits.RD = 1;
  2333  000982  80A6               	bsf	166,0,c	;volsfr
  2334  000984                     l531:
  2335  000984  B0A6               	btfsc	166,0,c	;volsfr
  2336  000986  D7FE               	goto	l531
  2337                           
  2338                           ;Usuaris.c: 74:     numUsuaris = EEDATA;
  2339  000988  CFA8 F028          	movff	4008,_numUsuaris	;volatile
  2340                           
  2341                           ;Usuaris.c: 78:     EEADR++;
  2342  00098C  2AA9               	incf	169,f,c	;volatile
  2343                           
  2344                           ;Usuaris.c: 79:     EECON1bits.EEPGD = 0;
  2345  00098E  9EA6               	bcf	166,7,c	;volsfr
  2346                           
  2347                           ;Usuaris.c: 80:     EECON1bits.CFGS = 0;
  2348  000990  9CA6               	bcf	166,6,c	;volsfr
  2349  000992                     l534:
  2350  000992  B0A6               	btfsc	166,0,c	;volsfr
  2351  000994  D7FE               	goto	l534
  2352                           
  2353                           ;Usuaris.c: 83:     indexNextUser = EEDATA;
  2354  000996  CFA8 F027          	movff	4008,_indexNextUser	;volatile
  2355                           
  2356                           ;Usuaris.c: 84:     EEADR++;
  2357  00099A  2AA9               	incf	169,f,c	;volatile
  2358                           
  2359                           ;Usuaris.c: 86:     for(char i = 0; i< numUsuaris; i++){
  2360  00099C  0E00               	movlw	0
  2361  00099E  6E65               	movwf	Uinit@i^0,c
  2362  0009A0  D041               	goto	l1830
  2363  0009A2                     l1800:
  2364                           
  2365                           ;Usuaris.c: 87:         for(char j = 0; j<9; j++){
  2366  0009A2  0E00               	movlw	0
  2367  0009A4  6E66               	movwf	Uinit@j^0,c
  2368  0009A6                     l539:
  2369                           
  2370                           ;Usuaris.c: 88:             EECON1bits.EEPGD = 0;
  2371  0009A6  9EA6               	bcf	166,7,c	;volsfr
  2372                           
  2373                           ;Usuaris.c: 89:             EECON1bits.CFGS = 0;
  2374  0009A8  9CA6               	bcf	166,6,c	;volsfr
  2375                           
  2376                           ;Usuaris.c: 90:             EECON1bits.RD = 1;
  2377  0009AA  80A6               	bsf	166,0,c	;volsfr
  2378  0009AC                     l541:
  2379  0009AC  B0A6               	btfsc	166,0,c	;volsfr
  2380  0009AE  D7FE               	goto	l541
  2381                           
  2382                           ;Usuaris.c: 92:             usuaris[i].username[j] = EEDATA;
  2383  0009B0  5065               	movf	Uinit@i^0,w,c
  2384  0009B2  0D17               	mullw	23
  2385  0009B4  0E00               	movlw	low _usuaris
  2386  0009B6  6E63               	movwf	??_Uinit^0,c
  2387  0009B8  0E01               	movlw	high _usuaris
  2388  0009BA  6E64               	movwf	(??_Uinit+1)^0,c
  2389  0009BC  50F3               	movf	243,w,c
  2390  0009BE  2663               	addwf	??_Uinit^0,f,c
  2391  0009C0  50F4               	movf	244,w,c
  2392  0009C2  2264               	addwfc	(??_Uinit+1)^0,f,c
  2393  0009C4  5066               	movf	Uinit@j^0,w,c
  2394  0009C6  2463               	addwf	??_Uinit^0,w,c
  2395  0009C8  6ED9               	movwf	fsr2l,c
  2396  0009CA  0E00               	movlw	0
  2397  0009CC  2064               	addwfc	(??_Uinit+1)^0,w,c
  2398  0009CE  6EDA               	movwf	fsr2h,c
  2399  0009D0  CFA8 FFDF          	movff	4008,indf2	;volatile
  2400                           
  2401                           ;Usuaris.c: 93:             EEADR++;
  2402  0009D4  2AA9               	incf	169,f,c	;volatile
  2403                           
  2404                           ;Usuaris.c: 94:         }
  2405  0009D6  2A66               	incf	Uinit@j^0,f,c
  2406  0009D8  0E08               	movlw	8
  2407  0009DA  6466               	cpfsgt	Uinit@j^0,c
  2408  0009DC  D7E4               	goto	l539
  2409                           
  2410                           ;Usuaris.c: 95:         for(char j = 0; j<9; j++){
  2411  0009DE  0E00               	movlw	0
  2412  0009E0  6E67               	movwf	Uinit@j_1016^0,c
  2413  0009E2                     l544:
  2414                           
  2415                           ;Usuaris.c: 96:             EECON1bits.EEPGD = 0;
  2416  0009E2  9EA6               	bcf	166,7,c	;volsfr
  2417                           
  2418                           ;Usuaris.c: 97:             EECON1bits.CFGS = 0;
  2419  0009E4  9CA6               	bcf	166,6,c	;volsfr
  2420                           
  2421                           ;Usuaris.c: 98:             EECON1bits.RD = 1;
  2422  0009E6  80A6               	bsf	166,0,c	;volsfr
  2423  0009E8                     l546:
  2424  0009E8  B0A6               	btfsc	166,0,c	;volsfr
  2425  0009EA  D7FE               	goto	l546
  2426                           
  2427                           ;Usuaris.c: 100:             usuaris[i].password[j] = EEDATA;
  2428  0009EC  5065               	movf	Uinit@i^0,w,c
  2429  0009EE  0D17               	mullw	23
  2430  0009F0  0E00               	movlw	low _usuaris
  2431  0009F2  6E63               	movwf	??_Uinit^0,c
  2432  0009F4  0E01               	movlw	high _usuaris
  2433  0009F6  6E64               	movwf	(??_Uinit+1)^0,c
  2434  0009F8  0E09               	movlw	9
  2435  0009FA  2663               	addwf	??_Uinit^0,f,c
  2436  0009FC  0E00               	movlw	0
  2437  0009FE  2264               	addwfc	(??_Uinit+1)^0,f,c
  2438  000A00  50F3               	movf	243,w,c
  2439  000A02  2663               	addwf	??_Uinit^0,f,c
  2440  000A04  50F4               	movf	244,w,c
  2441  000A06  2264               	addwfc	(??_Uinit+1)^0,f,c
  2442  000A08  5067               	movf	Uinit@j_1016^0,w,c
  2443  000A0A  2463               	addwf	??_Uinit^0,w,c
  2444  000A0C  6ED9               	movwf	fsr2l,c
  2445  000A0E  0E00               	movlw	0
  2446  000A10  2064               	addwfc	(??_Uinit+1)^0,w,c
  2447  000A12  6EDA               	movwf	fsr2h,c
  2448  000A14  CFA8 FFDF          	movff	4008,indf2	;volatile
  2449                           
  2450                           ;Usuaris.c: 101:             EEADR++;
  2451  000A18  2AA9               	incf	169,f,c	;volatile
  2452                           
  2453                           ;Usuaris.c: 102:         }
  2454  000A1A  2A67               	incf	Uinit@j_1016^0,f,c
  2455  000A1C  0E08               	movlw	8
  2456  000A1E  6467               	cpfsgt	Uinit@j_1016^0,c
  2457  000A20  D7E0               	goto	l544
  2458                           
  2459                           ;Usuaris.c: 103:     }
  2460  000A22  2A65               	incf	Uinit@i^0,f,c
  2461  000A24                     l1830:
  2462  000A24  5028               	movf	_numUsuaris^0,w,c
  2463  000A26  5C65               	subwf	Uinit@i^0,w,c
  2464  000A28  B0D8               	btfsc	status,0,c
  2465  000A2A  0012               	return	
  2466  000A2C  D7BA               	goto	l1800
  2467  000A2E                     __end_of_Uinit:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _TiInitTimer *****************
  2471 ;; Defined at:
  2472 ;;		line 18 in file "TiTTimer.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1
  2486 ;;      Params:         0       0       0
  2487 ;;      Locals:         0       0       0
  2488 ;;      Temps:          0       0       0
  2489 ;;      Totals:         0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 2
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text19
  2501  000DA6                     __ptext19:
  2502                           	callstack 0
  2503  000DA6                     _TiInitTimer:
  2504                           	callstack 28
  2505                           
  2506                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  2507                           
  2508                           ;incstack = 0
  2509  000DA6  9ED0               	bcf	208,7,c	;volatile
  2510                           
  2511                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  2512  000DA8  8EF2               	bsf	242,7,c	;volatile
  2513                           
  2514                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  2515  000DAA  8CF2               	bsf	242,6,c	;volatile
  2516                           
  2517                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  2518  000DAC  8AF2               	bsf	242,5,c	;volatile
  2519                           
  2520                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  2521  000DAE  94F2               	bcf	242,2,c	;volatile
  2522                           
  2523                           ;TiTTimer.c: 25:     T0CON = 136;
  2524  000DB0  0E88               	movlw	136
  2525  000DB2  6ED5               	movwf	213,c	;volatile
  2526                           
  2527                           ;TiTTimer.c: 27:     TMR0H = 223;
  2528  000DB4  0EDF               	movlw	223
  2529  000DB6  6ED7               	movwf	215,c	;volatile
  2530                           
  2531                           ;TiTTimer.c: 28:     TMR0L = 148;
  2532  000DB8  0E94               	movlw	148
  2533  000DBA  6ED6               	movwf	214,c	;volatile
  2534                           
  2535                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  2536  000DBC  8ED5               	bsf	213,7,c	;volatile
  2537                           
  2538                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  2539  000DBE  0E00               	movlw	0
  2540  000DC0  6E2D               	movwf	_counter^0,c
  2541  000DC2                     l1632:
  2542  000DC2  0E07               	movlw	7
  2543  000DC4  642D               	cpfsgt	_counter^0,c
  2544  000DC6  D001               	goto	l1636
  2545  000DC8  0012               	return	
  2546  000DCA                     l1636:
  2547                           
  2548                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  2549  000DCA  502D               	movf	_counter^0,w,c
  2550  000DCC  0D03               	mullw	3
  2551  000DCE  50F3               	movf	243,w,c
  2552  000DD0  0F03               	addlw	low (_s_Timers+2)
  2553  000DD2  6ED9               	movwf	fsr2l,c
  2554  000DD4  6ADA               	clrf	fsr2h,c
  2555  000DD6  0E00               	movlw	0
  2556  000DD8  6EDF               	movwf	indf2,c
  2557                           
  2558                           ;TiTTimer.c: 33:     }
  2559  000DDA  2A2D               	incf	_counter^0,f,c
  2560  000DDC  D7F2               	goto	l1632
  2561  000DDE                     __end_of_TiInitTimer:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _TeTeclat *****************
  2565 ;; Defined at:
  2566 ;;		line 22 in file "TeTeclat.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1
  2580 ;;      Params:         0       0       0
  2581 ;;      Locals:         0       0       0
  2582 ;;      Temps:          3       0       0
  2583 ;;      Totals:         3       0       0
  2584 ;;Total ram usage:        3 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 3
  2587 ;; This function calls:
  2588 ;;		_MsetNovaTecla
  2589 ;;		_SsetNovaTecla
  2590 ;;		_TiGetTics
  2591 ;;		_TiResetTics
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text20
  2598  000634                     __ptext20:
  2599                           	callstack 0
  2600  000634                     _TeTeclat:
  2601                           	callstack 27
  2602                           
  2603                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  2604                           
  2605                           ;incstack = 0
  2606  000634  A083               	btfss	131,0,c	;volatile
  2607  000636  D003               	goto	u2420
  2608  000638  6A6A               	clrf	??_TeTeclat^0,c
  2609  00063A  2A6A               	incf	??_TeTeclat^0,f,c
  2610  00063C  D001               	goto	u2428
  2611  00063E                     u2420:
  2612  00063E  6A6A               	clrf	??_TeTeclat^0,c
  2613  000640                     u2428:
  2614  000640  A283               	btfss	131,1,c	;volatile
  2615  000642  D002               	goto	u2430
  2616  000644  0E01               	movlw	1
  2617  000646  D001               	goto	u2436
  2618  000648                     u2430:
  2619  000648  0E00               	movlw	0
  2620  00064A                     u2436:
  2621  00064A  0D02               	mullw	2
  2622  00064C  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  2623  000650  A483               	btfss	131,2,c	;volatile
  2624  000652  D002               	goto	u2440
  2625  000654  0E01               	movlw	1
  2626  000656  D001               	goto	u2446
  2627  000658                     u2440:
  2628  000658  0E00               	movlw	0
  2629  00065A                     u2446:
  2630  00065A  0D03               	mullw	3
  2631  00065C  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  2632  000660  A683               	btfss	131,3,c	;volatile
  2633  000662  D002               	goto	u2450
  2634  000664  0E01               	movlw	1
  2635  000666  D001               	goto	u2456
  2636  000668                     u2450:
  2637  000668  0E00               	movlw	0
  2638  00066A                     u2456:
  2639  00066A  0D04               	mullw	4
  2640  00066C  50F3               	movf	243,w,c
  2641  00066E  246C               	addwf	(??_TeTeclat+2)^0,w,c
  2642  000670  246B               	addwf	(??_TeTeclat+1)^0,w,c
  2643  000672  246A               	addwf	??_TeTeclat^0,w,c
  2644  000674  6E2E               	movwf	TeTeclat@files^0,c
  2645                           
  2646                           ;TeTeclat.c: 27:  switch(state) {
  2647  000676  D06F               	goto	l2890
  2648  000678                     l2816:
  2649                           
  2650                           ;TeTeclat.c: 29:    if (files==0) {
  2651  000678  502E               	movf	TeTeclat@files^0,w,c
  2652  00067A  A4D8               	btfss	status,2,c
  2653  00067C  D007               	goto	l2824
  2654                           
  2655                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  2656  00067E  888C               	bsf	140,4,c	;volatile
  2657                           
  2658                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  2659  000680  9A8C               	bcf	140,5,c	;volatile
  2660                           
  2661                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  2662  000682  9C8C               	bcf	140,6,c	;volatile
  2663                           
  2664                           ;TeTeclat.c: 33:     cols=0;
  2665  000684  0E00               	movlw	0
  2666  000686  6E2F               	movwf	TeTeclat@cols^0,c
  2667  000688                     l2822:
  2668                           
  2669                           ;TeTeclat.c: 34:     state++;
  2670  000688  2A30               	incf	TeTeclat@state^0,f,c
  2671                           
  2672                           ;TeTeclat.c: 35:    }
  2673  00068A  0012               	return	
  2674  00068C                     l2824:
  2675  00068C  502E               	movf	TeTeclat@files^0,w,c
  2676  00068E  B4D8               	btfsc	status,2,c
  2677  000690  0012               	return	
  2678                           
  2679                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  2680  000692  5031               	movf	_tiTeclat^0,w,c
  2681  000694  ECBA  F007         	call	_TiResetTics
  2682  000698                     l2828:
  2683                           
  2684                           ;TeTeclat.c: 38:     state = 3;
  2685  000698  0E03               	movlw	3
  2686  00069A  6E30               	movwf	TeTeclat@state^0,c
  2687  00069C  0012               	return	
  2688  00069E                     l2830:
  2689                           
  2690                           ;TeTeclat.c: 42:    if (files==0) {
  2691  00069E  502E               	movf	TeTeclat@files^0,w,c
  2692  0006A0  A4D8               	btfss	status,2,c
  2693  0006A2  D005               	goto	l2838
  2694                           
  2695                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  2696  0006A4  988C               	bcf	140,4,c	;volatile
  2697                           
  2698                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  2699  0006A6  8A8C               	bsf	140,5,c	;volatile
  2700                           
  2701                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  2702  0006A8  9C8C               	bcf	140,6,c	;volatile
  2703                           
  2704                           ;TeTeclat.c: 46:     cols=1;
  2705  0006AA  0E01               	movlw	1
  2706  0006AC  D7EC               	goto	L1
  2707  0006AE                     l2838:
  2708  0006AE  502E               	movf	TeTeclat@files^0,w,c
  2709  0006B0  B4D8               	btfsc	status,2,c
  2710  0006B2  0012               	return	
  2711                           
  2712                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  2713  0006B4  5031               	movf	_tiTeclat^0,w,c
  2714  0006B6  ECBA  F007         	call	_TiResetTics
  2715  0006BA  D7EE               	goto	l2828
  2716  0006BC                     l2844:
  2717                           
  2718                           ;TeTeclat.c: 55:    if (files==0) {
  2719  0006BC  502E               	movf	TeTeclat@files^0,w,c
  2720  0006BE  A4D8               	btfss	status,2,c
  2721  0006C0  D008               	goto	l2850
  2722                           
  2723                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  2724  0006C2  988C               	bcf	140,4,c	;volatile
  2725                           
  2726                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  2727  0006C4  9A8C               	bcf	140,5,c	;volatile
  2728                           
  2729                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  2730  0006C6  8C8C               	bsf	140,6,c	;volatile
  2731                           
  2732                           ;TeTeclat.c: 59:     cols=2;
  2733  0006C8  0E02               	movlw	2
  2734  0006CA  6E2F               	movwf	TeTeclat@cols^0,c
  2735                           
  2736                           ;TeTeclat.c: 60:     state = 0;
  2737  0006CC  0E00               	movlw	0
  2738  0006CE  6E30               	movwf	TeTeclat@state^0,c
  2739                           
  2740                           ;TeTeclat.c: 61:    }
  2741  0006D0  0012               	return	
  2742  0006D2                     l2850:
  2743  0006D2  502E               	movf	TeTeclat@files^0,w,c
  2744  0006D4  B4D8               	btfsc	status,2,c
  2745  0006D6  0012               	return	
  2746                           
  2747                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  2748  0006D8  5031               	movf	_tiTeclat^0,w,c
  2749  0006DA  ECBA  F007         	call	_TiResetTics
  2750  0006DE  D7D4               	goto	l2822
  2751  0006E0                     l2856:
  2752                           
  2753                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  2754  0006E0  5031               	movf	_tiTeclat^0,w,c
  2755  0006E2  EC50  F007         	call	_TiGetTics
  2756  0006E6  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2757  0006E8  0012               	return	
  2758  0006EA  D7CE               	goto	l2822
  2759  0006EC                     l2860:
  2760                           
  2761                           ;TeTeclat.c: 73:    if (files==0) {
  2762  0006EC  502E               	movf	TeTeclat@files^0,w,c
  2763  0006EE  A4D8               	btfss	status,2,c
  2764  0006F0  D003               	goto	l2864
  2765                           
  2766                           ;TeTeclat.c: 74:     state = 1;
  2767  0006F2  0E01               	movlw	1
  2768  0006F4  6E30               	movwf	TeTeclat@state^0,c
  2769                           
  2770                           ;TeTeclat.c: 75:    }
  2771  0006F6  0012               	return	
  2772  0006F8                     l2864:
  2773  0006F8  502E               	movf	TeTeclat@files^0,w,c
  2774  0006FA  B4D8               	btfsc	status,2,c
  2775  0006FC  0012               	return	
  2776                           
  2777                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  2778  0006FE  502E               	movf	TeTeclat@files^0,w,c
  2779  000700  0D03               	mullw	3
  2780  000702  50F3               	movf	243,w,c
  2781  000704  0F4F               	addlw	low (_teclaPremuda+253)
  2782  000706  242F               	addwf	TeTeclat@cols^0,w,c
  2783  000708  6ED9               	movwf	fsr2l,c
  2784  00070A  6ADA               	clrf	fsr2h,c
  2785  00070C  50DF               	movf	indf2,w,c
  2786  00070E  ECF6  F007         	call	_MsetNovaTecla
  2787                           
  2788                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  2789  000712  502E               	movf	TeTeclat@files^0,w,c
  2790  000714  0D03               	mullw	3
  2791  000716  50F3               	movf	243,w,c
  2792  000718  0F4F               	addlw	low (_teclaPremuda+253)
  2793  00071A  242F               	addwf	TeTeclat@cols^0,w,c
  2794  00071C  6ED9               	movwf	fsr2l,c
  2795  00071E  6ADA               	clrf	fsr2h,c
  2796  000720  50DF               	movf	indf2,w,c
  2797  000722  ECF2  F007         	call	_SsetNovaTecla
  2798  000726  D7B0               	goto	l2822
  2799  000728                     l2870:
  2800                           
  2801                           ;TeTeclat.c: 84:    if (files==0) {
  2802  000728  502E               	movf	TeTeclat@files^0,w,c
  2803  00072A  A4D8               	btfss	status,2,c
  2804  00072C  0012               	return	
  2805                           
  2806                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  2807  00072E  5031               	movf	_tiTeclat^0,w,c
  2808  000730  ECBA  F007         	call	_TiResetTics
  2809  000734  D7A9               	goto	l2822
  2810  000736                     l2876:
  2811                           
  2812                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  2813  000736  5031               	movf	_tiTeclat^0,w,c
  2814  000738  EC50  F007         	call	_TiGetTics
  2815  00073C  D7D4               	goto	L2
  2816  00073E                     l2880:
  2817                           
  2818                           ;TeTeclat.c: 95:    if (files!=0) {
  2819  00073E  502E               	movf	TeTeclat@files^0,w,c
  2820  000740  B4D8               	btfsc	status,2,c
  2821  000742  D003               	goto	l2884
  2822                           
  2823                           ;TeTeclat.c: 96:     state = 5;
  2824  000744  0E05               	movlw	5
  2825  000746  6E30               	movwf	TeTeclat@state^0,c
  2826                           
  2827                           ;TeTeclat.c: 97:    }
  2828  000748  0012               	return	
  2829  00074A                     l2884:
  2830  00074A  502E               	movf	TeTeclat@files^0,w,c
  2831  00074C  A4D8               	btfss	status,2,c
  2832  00074E  0012               	return	
  2833                           
  2834                           ;TeTeclat.c: 99:     state = 0;
  2835  000750  0E00               	movlw	0
  2836  000752  6E30               	movwf	TeTeclat@state^0,c
  2837  000754  0012               	return	
  2838  000756                     l2890:
  2839  000756  5030               	movf	TeTeclat@state^0,w,c
  2840  000758  6E6A               	movwf	??_TeTeclat^0,c
  2841  00075A  6A6B               	clrf	(??_TeTeclat+1)^0,c
  2842                           
  2843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2844                           ; Switch size 1, requested type "simple"
  2845                           ; Number of cases is 1, Range of values is 0 to 0
  2846                           ; switch strategies available:
  2847                           ; Name         Instructions Cycles
  2848                           ; simple_byte            4     3 (average)
  2849                           ;	Chosen strategy is simple_byte
  2850  00075C  506B               	movf	(??_TeTeclat+1)^0,w,c
  2851  00075E  0A00               	xorlw	0	; case 0
  2852  000760  A4D8               	btfss	status,2,c
  2853  000762  0012               	return	
  2854                           
  2855                           ; Switch size 1, requested type "simple"
  2856                           ; Number of cases is 8, Range of values is 0 to 7
  2857                           ; switch strategies available:
  2858                           ; Name         Instructions Cycles
  2859                           ; simple_byte           25    13 (average)
  2860                           ;	Chosen strategy is simple_byte
  2861  000764  506A               	movf	??_TeTeclat^0,w,c
  2862  000766  0A00               	xorlw	0	; case 0
  2863  000768  B4D8               	btfsc	status,2,c
  2864  00076A  D786               	goto	l2816
  2865  00076C  0A01               	xorlw	1	; case 1
  2866  00076E  B4D8               	btfsc	status,2,c
  2867  000770  D796               	goto	l2830
  2868  000772  0A03               	xorlw	3	; case 2
  2869  000774  B4D8               	btfsc	status,2,c
  2870  000776  D7A2               	goto	l2844
  2871  000778  0A01               	xorlw	1	; case 3
  2872  00077A  B4D8               	btfsc	status,2,c
  2873  00077C  D7B1               	goto	l2856
  2874  00077E  0A07               	xorlw	7	; case 4
  2875  000780  B4D8               	btfsc	status,2,c
  2876  000782  D7B4               	goto	l2860
  2877  000784  0A01               	xorlw	1	; case 5
  2878  000786  B4D8               	btfsc	status,2,c
  2879  000788  D7CF               	goto	l2870
  2880  00078A  0A03               	xorlw	3	; case 6
  2881  00078C  B4D8               	btfsc	status,2,c
  2882  00078E  D7D3               	goto	l2876
  2883  000790  0A01               	xorlw	1	; case 7
  2884  000792  A4D8               	btfss	status,2,c
  2885  000794  0012               	return	
  2886  000796  D7D3               	goto	l2880
  2887  000798                     __end_of_TeTeclat:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _SsetNovaTecla *****************
  2891 ;; Defined at:
  2892 ;;		line 110 in file "Ssms.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  tecla           1    wreg     unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  tecla           1    5[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1
  2906 ;;      Params:         0       0       0
  2907 ;;      Locals:         1       0       0
  2908 ;;      Temps:          0       0       0
  2909 ;;      Totals:         1       0       0
  2910 ;;Total ram usage:        1 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_TeTeclat
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text21
  2921  000FE4                     __ptext21:
  2922                           	callstack 0
  2923  000FE4                     _SsetNovaTecla:
  2924                           	callstack 27
  2925                           
  2926                           ;incstack = 0
  2927                           ;SsetNovaTecla@tecla stored from wreg
  2928  000FE4  6E63               	movwf	SsetNovaTecla@tecla^0,c
  2929                           
  2930                           ;Ssms.c: 111:     novaTecla = tecla;
  2931  000FE6  C063  F050         	movff	SsetNovaTecla@tecla,_novaTecla
  2932  000FEA  0012               	return		;funcret
  2933  000FEC                     __end_of_SsetNovaTecla:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function _MsetNovaTecla *****************
  2937 ;; Defined at:
  2938 ;;		line 17 in file "Menu.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  tecla           1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  tecla           1    5[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1
  2952 ;;      Params:         0       0       0
  2953 ;;      Locals:         1       0       0
  2954 ;;      Temps:          0       0       0
  2955 ;;      Totals:         1       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 2
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_TeTeclat
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text22
  2967  000FEC                     __ptext22:
  2968                           	callstack 0
  2969  000FEC                     _MsetNovaTecla:
  2970                           	callstack 27
  2971                           
  2972                           ;incstack = 0
  2973                           ;MsetNovaTecla@tecla stored from wreg
  2974  000FEC  6E63               	movwf	MsetNovaTecla@tecla^0,c
  2975                           
  2976                           ;Menu.c: 18:     NovaTecla = tecla;
  2977  000FEE  C063  F04D         	movff	MsetNovaTecla@tecla,_NovaTecla
  2978  000FF2  0012               	return		;funcret
  2979  000FF4                     __end_of_MsetNovaTecla:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _TeInit *****************
  2983 ;; Defined at:
  2984 ;;		line 18 in file "TeTeclat.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1
  2998 ;;      Params:         0       0       0
  2999 ;;      Locals:         0       0       0
  3000 ;;      Temps:          0       0       0
  3001 ;;      Totals:         0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 3
  3005 ;; This function calls:
  3006 ;;		_TiGetTimer
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text23
  3013  000FF4                     __ptext23:
  3014                           	callstack 0
  3015  000FF4                     _TeInit:
  3016                           	callstack 27
  3017                           
  3018                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3019                           
  3020                           ;incstack = 0
  3021  000FF4  ECB6  F006         	call	_TiGetTimer	;wreg free
  3022  000FF8  6E31               	movwf	_tiTeclat^0,c
  3023  000FFA  0012               	return		;funcret
  3024  000FFC                     __end_of_TeInit:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _Sinit *****************
  3028 ;; Defined at:
  3029 ;;		line 16 in file "Ssms.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1
  3043 ;;      Params:         0       0       0
  3044 ;;      Locals:         0       0       0
  3045 ;;      Temps:          0       0       0
  3046 ;;      Totals:         0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 3
  3050 ;; This function calls:
  3051 ;;		_TiGetTimer
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text24
  3058  000FFC                     __ptext24:
  3059                           	callstack 0
  3060  000FFC                     _Sinit:
  3061                           	callstack 27
  3062                           
  3063                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3064                           
  3065                           ;incstack = 0
  3066  000FFC  ECB6  F006         	call	_TiGetTimer	;wreg free
  3067  001000  6E4F               	movwf	_timerSMS^0,c
  3068  001002  0012               	return		;funcret
  3069  001004                     __end_of_Sinit:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _SMotor *****************
  3073 ;; Defined at:
  3074 ;;		line 21 in file "Ssms.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1
  3088 ;;      Params:         0       0       0
  3089 ;;      Locals:         0       0       0
  3090 ;;      Temps:          2       0       0
  3091 ;;      Totals:         2       0       0
  3092 ;;Total ram usage:        2 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 3
  3095 ;; This function calls:
  3096 ;;		_MNovaLletra
  3097 ;;		_TiGetTics
  3098 ;;		_TiResetTics
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text25
  3105  000488                     __ptext25:
  3106                           	callstack 0
  3107  000488                     _SMotor:
  3108                           	callstack 27
  3109                           
  3110                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3111                           
  3112                           ;incstack = 0
  3113  000488  D0B7               	goto	l2568
  3114  00048A                     l2440:
  3115                           
  3116                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3117  00048A  2850               	incf	_novaTecla^0,w,c
  3118  00048C  A4D8               	btfss	status,2,c
  3119  00048E  A874               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3120  000490  D006               	goto	l2448
  3121                           
  3122                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3123  000492  504F               	movf	_timerSMS^0,w,c
  3124  000494  ECBA  F007         	call	_TiResetTics
  3125                           
  3126                           ;Ssms.c: 27:     state = 3;
  3127  000498  0E03               	movlw	3
  3128  00049A  6E32               	movwf	SMotor@state^0,c
  3129                           
  3130                           ;Ssms.c: 28:    }
  3131  00049C  0012               	return	
  3132  00049E                     l2448:
  3133  00049E  2850               	incf	_novaTecla^0,w,c
  3134  0004A0  A4D8               	btfss	status,2,c
  3135  0004A2  0012               	return	
  3136  0004A4  504F               	movf	_timerSMS^0,w,c
  3137  0004A6  EC50  F007         	call	_TiGetTics
  3138  0004AA  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3139  0004AC  0012               	return	
  3140  0004AE  0E5A               	movlw	90
  3141  0004B0  5C63               	subwf	?_TiGetTics^0,w,c
  3142  0004B2  0E02               	movlw	2
  3143  0004B4  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3144  0004B6  A0D8               	btfss	status,0,c
  3145  0004B8  0012               	return	
  3146  0004BA  2851               	incf	_lletraASCII^0,w,c
  3147  0004BC  B4D8               	btfsc	status,2,c
  3148  0004BE  0012               	return	
  3149  0004C0  A874               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3150  0004C2  0012               	return	
  3151                           
  3152                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3153  0004C4  5051               	movf	_lletraASCII^0,w,c
  3154  0004C6  EC02  F008         	call	_MNovaLletra
  3155                           
  3156                           ;Ssms.c: 31:     lletraASCII = -1;
  3157  0004CA  6851               	setf	_lletraASCII^0,c
  3158                           
  3159                           ;Ssms.c: 32:     ultimaTecla = -1;
  3160  0004CC  684E               	setf	_ultimaTecla^0,c
  3161  0004CE  0012               	return	
  3162  0004D0                     l2462:
  3163                           
  3164                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3165  0004D0  504E               	movf	_ultimaTecla^0,w,c
  3166  0004D2  1850               	xorwf	_novaTecla^0,w,c
  3167  0004D4  A4D8               	btfss	status,2,c
  3168  0004D6  D010               	goto	l2470
  3169  0004D8  504F               	movf	_timerSMS^0,w,c
  3170  0004DA  EC50  F007         	call	_TiGetTics
  3171  0004DE  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3172  0004E0  D006               	goto	u1810
  3173  0004E2  0E5A               	movlw	90
  3174  0004E4  5C63               	subwf	?_TiGetTics^0,w,c
  3175  0004E6  0E02               	movlw	2
  3176  0004E8  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3177  0004EA  B0D8               	btfsc	status,0,c
  3178  0004EC  D005               	goto	l2470
  3179  0004EE                     u1810:
  3180                           
  3181                           ;Ssms.c: 37:     novaTecla = -1;
  3182  0004EE  6850               	setf	_novaTecla^0,c
  3183                           
  3184                           ;Ssms.c: 38:     sumaPulsacions++;
  3185  0004F0  2A33               	incf	_sumaPulsacions^0,f,c
  3186                           
  3187                           ;Ssms.c: 39:     lletraASCII++;
  3188  0004F2  2A51               	incf	_lletraASCII^0,f,c
  3189                           
  3190                           ;Ssms.c: 40:     state++;
  3191  0004F4  2A32               	incf	SMotor@state^0,f,c
  3192                           
  3193                           ;Ssms.c: 41:    }
  3194  0004F6  0012               	return	
  3195  0004F8                     l2470:
  3196  0004F8  2850               	incf	_novaTecla^0,w,c
  3197  0004FA  B4D8               	btfsc	status,2,c
  3198  0004FC  0012               	return	
  3199  0004FE  504E               	movf	_ultimaTecla^0,w,c
  3200  000500  1850               	xorwf	_novaTecla^0,w,c
  3201  000502  B4D8               	btfsc	status,2,c
  3202  000504  0012               	return	
  3203                           
  3204                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  3205  000506  5051               	movf	_lletraASCII^0,w,c
  3206  000508  EC02  F008         	call	_MNovaLletra
  3207                           
  3208                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  3209  00050C  5050               	movf	_novaTecla^0,w,c
  3210  00050E  0F41               	addlw	low (_lletraInici+254)
  3211  000510  6ED9               	movwf	fsr2l,c
  3212  000512  6ADA               	clrf	fsr2h,c
  3213  000514  50DF               	movf	indf2,w,c
  3214  000516  6E51               	movwf	_lletraASCII^0,c
  3215                           
  3216                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  3217  000518  C050  F04E         	movff	_novaTecla,_ultimaTecla
  3218                           
  3219                           ;Ssms.c: 46:     sumaPulsacions = 0;
  3220  00051C  0E00               	movlw	0
  3221  00051E  6E33               	movwf	_sumaPulsacions^0,c
  3222                           
  3223                           ;Ssms.c: 47:     novaTecla = -1;
  3224  000520  6850               	setf	_novaTecla^0,c
  3225                           
  3226                           ;Ssms.c: 48:     state--;
  3227  000522  0632               	decf	SMotor@state^0,f,c
  3228  000524  0012               	return	
  3229  000526                     l2486:
  3230                           
  3231                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  3232  000526  0E07               	movlw	7
  3233  000528  184E               	xorwf	_ultimaTecla^0,w,c
  3234  00052A  B4D8               	btfsc	status,2,c
  3235  00052C  D007               	goto	l2492
  3236  00052E  0E09               	movlw	9
  3237  000530  184E               	xorwf	_ultimaTecla^0,w,c
  3238  000532  B4D8               	btfsc	status,2,c
  3239  000534  D003               	goto	l2492
  3240                           
  3241                           ;Ssms.c: 53:     state = 5;
  3242  000536  0E05               	movlw	5
  3243  000538  6E32               	movwf	SMotor@state^0,c
  3244                           
  3245                           ;Ssms.c: 54:    }
  3246  00053A  0012               	return	
  3247  00053C                     l2492:
  3248  00053C  0E07               	movlw	7
  3249  00053E  184E               	xorwf	_ultimaTecla^0,w,c
  3250  000540  B4D8               	btfsc	status,2,c
  3251  000542  D004               	goto	u1870
  3252  000544  0E09               	movlw	9
  3253  000546  184E               	xorwf	_ultimaTecla^0,w,c
  3254  000548  A4D8               	btfss	status,2,c
  3255  00054A  0012               	return	
  3256  00054C                     u1870:
  3257                           
  3258                           ;Ssms.c: 56:     state = 6;
  3259  00054C  0E06               	movlw	6
  3260  00054E  6E32               	movwf	SMotor@state^0,c
  3261  000550  0012               	return	
  3262  000552                     l2498:
  3263                           
  3264                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  3265  000552  5050               	movf	_novaTecla^0,w,c
  3266  000554  0A80               	xorlw	128
  3267  000556  0F7E               	addlw	-130
  3268  000558  A0D8               	btfss	status,0,c
  3269  00055A  D008               	goto	l2504
  3270  00055C  5050               	movf	_novaTecla^0,w,c
  3271  00055E  0A80               	xorlw	128
  3272  000560  0F76               	addlw	-138
  3273  000562  B0D8               	btfsc	status,0,c
  3274  000564  D003               	goto	l2504
  3275                           
  3276                           ;Ssms.c: 61:     state = 1;
  3277  000566  0E01               	movlw	1
  3278  000568  6E32               	movwf	SMotor@state^0,c
  3279                           
  3280                           ;Ssms.c: 62:    }
  3281  00056A  0012               	return	
  3282  00056C                     l2504:
  3283  00056C  5050               	movf	_novaTecla^0,w,c
  3284  00056E  0A80               	xorlw	128
  3285  000570  0F7E               	addlw	-130
  3286  000572  B0D8               	btfsc	status,0,c
  3287  000574  D00B               	goto	l2514
  3288  000576  2851               	incf	_lletraASCII^0,w,c
  3289  000578  A4D8               	btfss	status,2,c
  3290  00057A  D008               	goto	l2514
  3291                           
  3292                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  3293  00057C  5050               	movf	_novaTecla^0,w,c
  3294  00057E  0F30               	addlw	48
  3295  000580  EC02  F008         	call	_MNovaLletra
  3296  000584                     l2510:
  3297                           
  3298                           ;Ssms.c: 65:     novaTecla = -1;
  3299  000584  6850               	setf	_novaTecla^0,c
  3300  000586                     l2512:
  3301                           
  3302                           ;Ssms.c: 66:     state = 0;
  3303  000586  0E00               	movlw	0
  3304  000588  6E32               	movwf	SMotor@state^0,c
  3305                           
  3306                           ;Ssms.c: 67:    }
  3307  00058A  0012               	return	
  3308  00058C                     l2514:
  3309  00058C  5050               	movf	_novaTecla^0,w,c
  3310  00058E  0A80               	xorlw	128
  3311  000590  0F7E               	addlw	-130
  3312  000592  B0D8               	btfsc	status,0,c
  3313  000594  0012               	return	
  3314  000596  2851               	incf	_lletraASCII^0,w,c
  3315  000598  B4D8               	btfsc	status,2,c
  3316  00059A  0012               	return	
  3317                           
  3318                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  3319  00059C  5051               	movf	_lletraASCII^0,w,c
  3320  00059E  EC02  F008         	call	_MNovaLletra
  3321                           
  3322                           ;Ssms.c: 70:     lletraASCII = -1;
  3323  0005A2  6851               	setf	_lletraASCII^0,c
  3324                           
  3325                           ;Ssms.c: 71:     state++;
  3326  0005A4  2A32               	incf	SMotor@state^0,f,c
  3327  0005A6  0012               	return	
  3328  0005A8                     l2524:
  3329                           
  3330                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  3331  0005A8  5050               	movf	_novaTecla^0,w,c
  3332  0005AA  0F30               	addlw	48
  3333  0005AC  EC02  F008         	call	_MNovaLletra
  3334  0005B0  D7E9               	goto	l2510
  3335  0005B2                     l2530:
  3336                           
  3337                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  3338  0005B2  0E04               	movlw	4
  3339  0005B4  1833               	xorwf	_sumaPulsacions^0,w,c
  3340  0005B6  A4D8               	btfss	status,2,c
  3341  0005B8  D009               	goto	l2538
  3342  0005BA                     u1940:
  3343                           
  3344                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  3345  0005BA  504E               	movf	_ultimaTecla^0,w,c
  3346  0005BC  0F41               	addlw	low (_lletraInici+254)
  3347  0005BE  6ED9               	movwf	fsr2l,c
  3348  0005C0  6ADA               	clrf	fsr2h,c
  3349  0005C2  50DF               	movf	indf2,w,c
  3350  0005C4  6E51               	movwf	_lletraASCII^0,c
  3351                           
  3352                           ;Ssms.c: 82:     sumaPulsacions = 0;
  3353  0005C6  0E00               	movlw	0
  3354  0005C8  6E33               	movwf	_sumaPulsacions^0,c
  3355  0005CA  D7DD               	goto	l2512
  3356  0005CC                     l2538:
  3357  0005CC  0E03               	movlw	3
  3358  0005CE  1833               	xorwf	_sumaPulsacions^0,w,c
  3359  0005D0  A4D8               	btfss	status,2,c
  3360  0005D2  D004               	goto	l2544
  3361  0005D4                     u1950:
  3362                           
  3363                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  3364  0005D4  504E               	movf	_ultimaTecla^0,w,c
  3365  0005D6  0F30               	addlw	48
  3366  0005D8  6E51               	movwf	_lletraASCII^0,c
  3367  0005DA  D7D5               	goto	l2512
  3368  0005DC                     l2544:
  3369  0005DC  0E03               	movlw	3
  3370  0005DE  6033               	cpfslt	_sumaPulsacions^0,c
  3371  0005E0  0012               	return	
  3372  0005E2  D7D1               	goto	l2512
  3373  0005E4                     l2548:
  3374                           
  3375                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  3376  0005E4  0E04               	movlw	4
  3377  0005E6  1833               	xorwf	_sumaPulsacions^0,w,c
  3378  0005E8  B4D8               	btfsc	status,2,c
  3379  0005EA  D7F4               	goto	u1950
  3380  0005EC  0E05               	movlw	5
  3381  0005EE  1833               	xorwf	_sumaPulsacions^0,w,c
  3382  0005F0  B4D8               	btfsc	status,2,c
  3383  0005F2  D7E3               	goto	u1940
  3384  0005F4  0E04               	movlw	4
  3385  0005F6  D7F3               	goto	L3
  3386  0005F8                     l2568:
  3387  0005F8  5032               	movf	SMotor@state^0,w,c
  3388  0005FA  6E6A               	movwf	??_SMotor^0,c
  3389  0005FC  6A6B               	clrf	(??_SMotor+1)^0,c
  3390                           
  3391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 1, Range of values is 0 to 0
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte            4     3 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398  0005FE  506B               	movf	(??_SMotor+1)^0,w,c
  3399  000600  0A00               	xorlw	0	; case 0
  3400  000602  A4D8               	btfss	status,2,c
  3401  000604  0012               	return	
  3402                           
  3403                           ; Switch size 1, requested type "simple"
  3404                           ; Number of cases is 7, Range of values is 0 to 6
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte           22    12 (average)
  3408                           ;	Chosen strategy is simple_byte
  3409  000606  506A               	movf	??_SMotor^0,w,c
  3410  000608  0A00               	xorlw	0	; case 0
  3411  00060A  B4D8               	btfsc	status,2,c
  3412  00060C  D73E               	goto	l2440
  3413  00060E  0A01               	xorlw	1	; case 1
  3414  000610  B4D8               	btfsc	status,2,c
  3415  000612  D75E               	goto	l2462
  3416  000614  0A03               	xorlw	3	; case 2
  3417  000616  B4D8               	btfsc	status,2,c
  3418  000618  D786               	goto	l2486
  3419  00061A  0A01               	xorlw	1	; case 3
  3420  00061C  B4D8               	btfsc	status,2,c
  3421  00061E  D799               	goto	l2498
  3422  000620  0A07               	xorlw	7	; case 4
  3423  000622  B4D8               	btfsc	status,2,c
  3424  000624  D7C1               	goto	l2524
  3425  000626  0A01               	xorlw	1	; case 5
  3426  000628  B4D8               	btfsc	status,2,c
  3427  00062A  D7C3               	goto	l2530
  3428  00062C  0A03               	xorlw	3	; case 6
  3429  00062E  A4D8               	btfss	status,2,c
  3430  000630  0012               	return	
  3431  000632  D7D8               	goto	l2548
  3432  000634                     __end_of_SMotor:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _MNovaLletra *****************
  3436 ;; Defined at:
  3437 ;;		line 21 in file "Menu.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  lletra          1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  lletra          1    5[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1
  3451 ;;      Params:         0       0       0
  3452 ;;      Locals:         1       0       0
  3453 ;;      Temps:          0       0       0
  3454 ;;      Totals:         1       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 2
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_SMotor
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text26
  3466  001004                     __ptext26:
  3467                           	callstack 0
  3468  001004                     _MNovaLletra:
  3469                           	callstack 27
  3470                           
  3471                           ;incstack = 0
  3472                           ;MNovaLletra@lletra stored from wreg
  3473  001004  6E63               	movwf	MNovaLletra@lletra^0,c
  3474                           
  3475                           ;Menu.c: 22:     novaLletra = lletra;
  3476  001006  C063  F04C         	movff	MNovaLletra@lletra,_novaLletra
  3477  00100A  0012               	return		;funcret
  3478  00100C                     __end_of_MNovaLletra:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _Minit *****************
  3482 ;; Defined at:
  3483 ;;		line 14 in file "Menu.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1
  3497 ;;      Params:         0       0       0
  3498 ;;      Locals:         0       0       0
  3499 ;;      Temps:          0       0       0
  3500 ;;      Totals:         0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 3
  3504 ;; This function calls:
  3505 ;;		_TiGetTimer
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text27
  3512  00100C                     __ptext27:
  3513                           	callstack 0
  3514  00100C                     _Minit:
  3515                           	callstack 27
  3516                           
  3517                           ;Menu.c: 15:     timerMenu = TiGetTimer();
  3518                           
  3519                           ;incstack = 0
  3520  00100C  ECB6  F006         	call	_TiGetTimer	;wreg free
  3521  001010  6E2B               	movwf	_timerMenu^0,c
  3522  001012  0012               	return		;funcret
  3523  001014                     __end_of_Minit:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _LcLCD *****************
  3527 ;; Defined at:
  3528 ;;		line 254 in file "LcTLCD.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1
  3542 ;;      Params:         0       0       0
  3543 ;;      Locals:         0       0       0
  3544 ;;      Temps:          0       0       0
  3545 ;;      Totals:         0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 6
  3549 ;; This function calls:
  3550 ;;		_LcPutChar
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text28
  3557  000E42                     __ptext28:
  3558                           	callstack 0
  3559  000E42                     _LcLCD:
  3560                           	callstack 24
  3561                           
  3562                           ;LcTLCD.c: 255:     if(nou_s == 1){
  3563                           
  3564                           ;incstack = 0
  3565  000E42  AA74               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3566  000E44  0012               	return	
  3567                           
  3568                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  3569  000E46  C034  FFF6         	movff	_s_ptr,tblptrl
  3570  000E4A                     	if	1	;There is more than 1 active tblptr byte
  3571  000E4A  0E02               	movlw	high __smallconst
  3572  000E4C  6EF7               	movwf	tblptrh,c
  3573  000E4E                     	endif
  3574  000E4E                     	if	0	;tblptru may be non-zero
  3575  000E4E                     	endif
  3576  000E4E                     	if	0	;tblptru may be non-zero
  3577  000E4E                     	endif
  3578  000E4E  0008               	tblrd		*
  3579  000E50  50F5               	movf	tablat,w,c
  3580  000E52  ECE9  F005         	call	_LcPutChar
  3581                           
  3582                           ;LcTLCD.c: 257:         s_ptr++;
  3583  000E56  2A34               	incf	_s_ptr^0,f,c
  3584                           
  3585                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  3586  000E58  C034  FFF6         	movff	_s_ptr,tblptrl
  3587  000E5C                     	if	1	;There is more than 1 active tblptr byte
  3588  000E5C  0E02               	movlw	high __smallconst
  3589  000E5E  6EF7               	movwf	tblptrh,c
  3590  000E60                     	endif
  3591  000E60                     	if	0	;tblptru may be non-zero
  3592  000E60                     	endif
  3593  000E60                     	if	0	;tblptru may be non-zero
  3594  000E60                     	endif
  3595  000E60  0008               	tblrd		*
  3596  000E62  50F5               	movf	tablat,w,c
  3597  000E64  0900               	iorlw	0
  3598  000E66  A4D8               	btfss	status,2,c
  3599  000E68  0012               	return	
  3600                           
  3601                           ;LcTLCD.c: 259:             nou_s = 0;
  3602  000E6A  9A74               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3603                           
  3604                           ;LcTLCD.c: 260:             s_ptr=0;
  3605  000E6C  0E00               	movlw	0
  3606  000E6E  6E34               	movwf	_s_ptr^0,c
  3607  000E70  0012               	return		;funcret
  3608  000E72                     __end_of_LcLCD:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _LcPutChar *****************
  3612 ;; Defined at:
  3613 ;;		line 132 in file "LcTLCD.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  c               1    wreg     unsigned char 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  c               1   19[COMRAM] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1
  3627 ;;      Params:         0       0       0
  3628 ;;      Locals:         1       0       0
  3629 ;;      Temps:          0       0       0
  3630 ;;      Totals:         1       0       0
  3631 ;;Total ram usage:        1 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 5
  3634 ;; This function calls:
  3635 ;;		_CantaData
  3636 ;;		_LcGotoXY
  3637 ;;		_WaitForBusy
  3638 ;; This function is called by:
  3639 ;;		_LcLCD
  3640 ;;		_menu
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text29
  3645  000BD2                     __ptext29:
  3646                           	callstack 0
  3647  000BD2                     _LcPutChar:
  3648                           	callstack 24
  3649                           
  3650                           ;incstack = 0
  3651                           ;LcPutChar@c stored from wreg
  3652  000BD2  6E71               	movwf	LcPutChar@c^0,c
  3653                           
  3654                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  3655  000BD4  EC79  F006         	call	_WaitForBusy	;wreg free
  3656  000BD8  5071               	movf	LcPutChar@c^0,w,c
  3657  000BDA  ECEF  F006         	call	_CantaData
  3658                           
  3659                           ;LcTLCD.c: 136:  ++ColumnAct;
  3660  000BDE  2A36               	incf	_ColumnAct^0,f,c
  3661                           
  3662                           ;LcTLCD.c: 138:  if (Rows == 2) {
  3663  000BE0  0E02               	movlw	2
  3664  000BE2  1839               	xorwf	_Rows^0,w,c
  3665  000BE4  A4D8               	btfss	status,2,c
  3666  000BE6  D010               	goto	l2328
  3667                           
  3668                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  3669  000BE8  0E27               	movlw	39
  3670  000BEA  6436               	cpfsgt	_ColumnAct^0,c
  3671  000BEC  D00D               	goto	l2328
  3672                           
  3673                           ;LcTLCD.c: 140:    ColumnAct = 0;
  3674  000BEE  0E00               	movlw	0
  3675  000BF0  6E36               	movwf	_ColumnAct^0,c
  3676                           
  3677                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  3678  000BF2  2A37               	incf	_RowAct^0,f,c
  3679  000BF4  0E01               	movlw	1
  3680  000BF6  6437               	cpfsgt	_RowAct^0,c
  3681  000BF8  D002               	goto	l2326
  3682  000BFA  0E00               	movlw	0
  3683  000BFC  6E37               	movwf	_RowAct^0,c
  3684  000BFE                     l2326:
  3685                           
  3686                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  3687  000BFE  C037  F06B         	movff	_RowAct,LcGotoXY@Row
  3688  000C02  5036               	movf	_ColumnAct^0,w,c
  3689  000C04  EC99  F006         	call	_LcGotoXY
  3690  000C08                     l2328:
  3691                           
  3692                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  3693  000C08  0437               	decf	_RowAct^0,w,c
  3694  000C0A  A4D8               	btfss	status,2,c
  3695  000C0C  0012               	return	
  3696                           
  3697                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  3698  000C0E  0E27               	movlw	39
  3699  000C10  6436               	cpfsgt	_ColumnAct^0,c
  3700  000C12  D002               	goto	l2334
  3701  000C14  0E00               	movlw	0
  3702  000C16  6E36               	movwf	_ColumnAct^0,c
  3703  000C18                     l2334:
  3704                           
  3705                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  3706  000C18  C037  F06B         	movff	_RowAct,LcGotoXY@Row
  3707  000C1C  5036               	movf	_ColumnAct^0,w,c
  3708  000C1E  EC99  F006         	call	_LcGotoXY
  3709  000C22  0012               	return		;funcret
  3710  000C24                     __end_of_LcPutChar:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _LcGotoXY *****************
  3714 ;; Defined at:
  3715 ;;		line 104 in file "LcTLCD.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  Column          1    wreg     unsigned char 
  3718 ;;  Row             1   13[COMRAM] unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  Column          1   18[COMRAM] unsigned char 
  3721 ;;  Fisics          2   14[COMRAM] int 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1
  3731 ;;      Params:         1       0       0
  3732 ;;      Locals:         5       0       0
  3733 ;;      Temps:          0       0       0
  3734 ;;      Totals:         6       0       0
  3735 ;;Total ram usage:        6 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 4
  3738 ;; This function calls:
  3739 ;;		_CantaIR
  3740 ;;		_WaitForBusy
  3741 ;; This function is called by:
  3742 ;;		_LcClear
  3743 ;;		_LcPutChar
  3744 ;;		_menu
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text30
  3749  000D32                     __ptext30:
  3750                           	callstack 0
  3751  000D32                     _LcGotoXY:
  3752                           	callstack 24
  3753                           
  3754                           ;incstack = 0
  3755                           ;LcGotoXY@Column stored from wreg
  3756  000D32  6E70               	movwf	LcGotoXY@Column^0,c
  3757                           
  3758                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  3759  000D34  506B               	movf	LcGotoXY@Row^0,w,c
  3760  000D36  B4D8               	btfsc	status,2,c
  3761  000D38  D004               	goto	l2268
  3762  000D3A  0E00               	movlw	0
  3763  000D3C  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  3764  000D3E  0E40               	movlw	64
  3765  000D40  D003               	goto	L4
  3766  000D42                     l2268:
  3767  000D42  0E00               	movlw	0
  3768  000D44  6E6F               	movwf	(_LcGotoXY$342+1)^0,c
  3769  000D46  0E00               	movlw	0
  3770  000D48                     L4:
  3771  000D48  6E6E               	movwf	_LcGotoXY$342^0,c
  3772  000D4A  5070               	movf	LcGotoXY@Column^0,w,c
  3773  000D4C  246E               	addwf	_LcGotoXY$342^0,w,c
  3774  000D4E  6E6C               	movwf	LcGotoXY@Fisics^0,c
  3775  000D50  0E00               	movlw	0
  3776  000D52  206F               	addwfc	(_LcGotoXY$342+1)^0,w,c
  3777  000D54  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  3778                           
  3779                           ;LcTLCD.c: 125:  WaitForBusy();
  3780  000D56  EC79  F006         	call	_WaitForBusy	;wreg free
  3781                           
  3782                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  3783  000D5A  506C               	movf	LcGotoXY@Fisics^0,w,c
  3784  000D5C  0980               	iorlw	128
  3785  000D5E  EC08  F007         	call	_CantaIR
  3786                           
  3787                           ;LcTLCD.c: 128:  RowAct = Row;
  3788  000D62  C06B  F037         	movff	LcGotoXY@Row,_RowAct
  3789                           
  3790                           ;LcTLCD.c: 129:  ColumnAct = Column;
  3791  000D66  C070  F036         	movff	LcGotoXY@Column,_ColumnAct
  3792  000D6A  0012               	return		;funcret
  3793  000D6C                     __end_of_LcGotoXY:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _CantaData *****************
  3797 ;; Defined at:
  3798 ;;		line 194 in file "LcTLCD.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  Data            1    wreg     unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  Data            1    7[COMRAM] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1
  3812 ;;      Params:         0       0       0
  3813 ;;      Locals:         1       0       0
  3814 ;;      Temps:          0       0       0
  3815 ;;      Totals:         1       0       0
  3816 ;;Total ram usage:        1 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 3
  3819 ;; This function calls:
  3820 ;;		_CantaPartAlta
  3821 ;;		_CantaPartBaixa
  3822 ;; This function is called by:
  3823 ;;		_LcPutChar
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text31
  3828  000DDE                     __ptext31:
  3829                           	callstack 0
  3830  000DDE                     _CantaData:
  3831                           	callstack 25
  3832                           
  3833                           ;incstack = 0
  3834                           ;CantaData@Data stored from wreg
  3835  000DDE  6E65               	movwf	CantaData@Data^0,c
  3836                           
  3837                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3838  000DE0  9694               	bcf	148,3,c	;volatile
  3839  000DE2  9494               	bcf	148,2,c	;volatile
  3840  000DE4  9294               	bcf	148,1,c	;volatile
  3841  000DE6  9094               	bcf	148,0,c	;volatile
  3842                           
  3843                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  3844  000DE8  8A8B               	bsf	139,5,c	;volatile
  3845                           
  3846                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  3847  000DEA  9E8C               	bcf	140,7,c	;volatile
  3848                           
  3849                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  3850  000DEC  888B               	bsf	139,4,c	;volatile
  3851                           
  3852                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  3853  000DEE  5065               	movf	CantaData@Data^0,w,c
  3854  000DF0  EC88  F005         	call	_CantaPartAlta
  3855                           
  3856                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  3857  000DF4  888B               	bsf	139,4,c	;volatile
  3858                           
  3859                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  3860  000DF6  988B               	bcf	139,4,c	;volatile
  3861                           
  3862                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  3863  000DF8  988B               	bcf	139,4,c	;volatile
  3864                           
  3865                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  3866  000DFA  888B               	bsf	139,4,c	;volatile
  3867                           
  3868                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  3869  000DFC  5065               	movf	CantaData@Data^0,w,c
  3870  000DFE  EC54  F005         	call	_CantaPartBaixa
  3871                           
  3872                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  3873  000E02  888B               	bsf	139,4,c	;volatile
  3874                           
  3875                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3876  000E04  988B               	bcf	139,4,c	;volatile
  3877                           
  3878                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3879  000E06  8694               	bsf	148,3,c	;volatile
  3880  000E08  8494               	bsf	148,2,c	;volatile
  3881  000E0A  8294               	bsf	148,1,c	;volatile
  3882  000E0C  8094               	bsf	148,0,c	;volatile
  3883  000E0E  0012               	return		;funcret
  3884  000E10                     __end_of_CantaData:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _LcInit *****************
  3888 ;; Defined at:
  3889 ;;		line 41 in file "LcTLCD.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  rows            1    wreg     unsigned char 
  3892 ;;  columns         1   16[COMRAM] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  rows            1   17[COMRAM] unsigned char 
  3895 ;;  i               2   18[COMRAM] int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1
  3905 ;;      Params:         1       0       0
  3906 ;;      Locals:         3       0       0
  3907 ;;      Temps:          0       0       0
  3908 ;;      Totals:         4       0       0
  3909 ;;Total ram usage:        4 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 5
  3912 ;; This function calls:
  3913 ;;		_CantaIR
  3914 ;;		_EscriuPrimeraOrdre
  3915 ;;		_Espera
  3916 ;;		_LcCursorOff
  3917 ;;		_TiGetTimer
  3918 ;;		_WaitForBusy
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text32
  3925  0008A0                     __ptext32:
  3926                           	callstack 0
  3927  0008A0                     _LcInit:
  3928                           	callstack 25
  3929                           
  3930                           ;incstack = 0
  3931                           ;LcInit@rows stored from wreg
  3932  0008A0  6E6F               	movwf	LcInit@rows^0,c
  3933                           
  3934                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3935  0008A2  ECB6  F006         	call	_TiGetTimer	;wreg free
  3936  0008A6  6E35               	movwf	_Timer^0,c
  3937                           
  3938                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3939  0008A8  C06F  F039         	movff	LcInit@rows,_Rows
  3940  0008AC  C06E  F038         	movff	LcInit@columns,_Columns
  3941                           
  3942                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3943  0008B0  0E00               	movlw	0
  3944  0008B2  6E36               	movwf	_ColumnAct^0,c
  3945  0008B4  C036  F037         	movff	_ColumnAct,_RowAct
  3946                           
  3947                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3948  0008B8  9894               	bcf	148,4,c	;volatile
  3949  0008BA  9E95               	bcf	149,7,c	;volatile
  3950  0008BC  9A94               	bcf	148,5,c	;volatile
  3951                           
  3952                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3953  0008BE  0E00               	movlw	0
  3954  0008C0  6E71               	movwf	(LcInit@i+1)^0,c
  3955  0008C2  0E00               	movlw	0
  3956  0008C4  6E70               	movwf	LcInit@i^0,c
  3957  0008C6                     l2392:
  3958                           
  3959                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3960  0008C6  0E00               	movlw	0
  3961  0008C8  6E6B               	movwf	(Espera@ms+1)^0,c
  3962  0008CA  0E64               	movlw	100
  3963  0008CC  6E6A               	movwf	Espera@ms^0,c
  3964  0008CE  5035               	movf	_Timer^0,w,c
  3965  0008D0  EC8A  F007         	call	_Espera
  3966                           
  3967                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3968  0008D4  0E03               	movlw	3
  3969  0008D6  EC17  F005         	call	_EscriuPrimeraOrdre
  3970                           
  3971                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3972  0008DA  0E00               	movlw	0
  3973  0008DC  6E6B               	movwf	(Espera@ms+1)^0,c
  3974  0008DE  0E05               	movlw	5
  3975  0008E0  6E6A               	movwf	Espera@ms^0,c
  3976  0008E2  5035               	movf	_Timer^0,w,c
  3977  0008E4  EC8A  F007         	call	_Espera
  3978                           
  3979                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3980  0008E8  0E03               	movlw	3
  3981  0008EA  EC17  F005         	call	_EscriuPrimeraOrdre
  3982                           
  3983                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3984  0008EE  0E00               	movlw	0
  3985  0008F0  6E6B               	movwf	(Espera@ms+1)^0,c
  3986  0008F2  0E01               	movlw	1
  3987  0008F4  6E6A               	movwf	Espera@ms^0,c
  3988  0008F6  5035               	movf	_Timer^0,w,c
  3989  0008F8  EC8A  F007         	call	_Espera
  3990                           
  3991                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3992  0008FC  0E03               	movlw	3
  3993  0008FE  EC17  F005         	call	_EscriuPrimeraOrdre
  3994                           
  3995                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3996  000902  0E00               	movlw	0
  3997  000904  6E6B               	movwf	(Espera@ms+1)^0,c
  3998  000906  0E01               	movlw	1
  3999  000908  6E6A               	movwf	Espera@ms^0,c
  4000  00090A  5035               	movf	_Timer^0,w,c
  4001  00090C  EC8A  F007         	call	_Espera
  4002                           
  4003                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4004  000910  0E02               	movlw	2
  4005  000912  EC17  F005         	call	_EscriuPrimeraOrdre
  4006                           
  4007                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4008  000916  0E00               	movlw	0
  4009  000918  6E6B               	movwf	(Espera@ms+1)^0,c
  4010  00091A  0E04               	movlw	4
  4011  00091C  6E6A               	movwf	Espera@ms^0,c
  4012  00091E  5035               	movf	_Timer^0,w,c
  4013  000920  EC8A  F007         	call	_Espera
  4014                           
  4015                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4016  000924  0E28               	movlw	40
  4017  000926  EC08  F007         	call	_CantaIR
  4018                           
  4019                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4020  00092A  EC79  F006         	call	_WaitForBusy	;wreg free
  4021  00092E  0E08               	movlw	8
  4022  000930  EC08  F007         	call	_CantaIR
  4023                           
  4024                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4025  000934  EC79  F006         	call	_WaitForBusy	;wreg free
  4026  000938  0E01               	movlw	1
  4027  00093A  EC08  F007         	call	_CantaIR
  4028                           
  4029                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4030  00093E  0E00               	movlw	0
  4031  000940  6E6B               	movwf	(Espera@ms+1)^0,c
  4032  000942  0E03               	movlw	3
  4033  000944  6E6A               	movwf	Espera@ms^0,c
  4034  000946  5035               	movf	_Timer^0,w,c
  4035  000948  EC8A  F007         	call	_Espera
  4036                           
  4037                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4038  00094C  EC79  F006         	call	_WaitForBusy	;wreg free
  4039  000950  0E06               	movlw	6
  4040  000952  EC08  F007         	call	_CantaIR
  4041                           
  4042                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4043  000956  EC79  F006         	call	_WaitForBusy	;wreg free
  4044  00095A  0E0F               	movlw	15
  4045  00095C  EC08  F007         	call	_CantaIR
  4046                           
  4047                           ;LcTLCD.c: 74:  }
  4048  000960  4A70               	infsnz	LcInit@i^0,f,c
  4049  000962  2A71               	incf	(LcInit@i+1)^0,f,c
  4050  000964  BE71               	btfsc	(LcInit@i+1)^0,7,c
  4051  000966  D7AF               	goto	l2392
  4052  000968  5071               	movf	(LcInit@i+1)^0,w,c
  4053  00096A  E104               	bnz	u1710
  4054  00096C  0E02               	movlw	2
  4055  00096E  5C70               	subwf	LcInit@i^0,w,c
  4056  000970  A0D8               	btfss	status,0,c
  4057  000972  D7A9               	goto	l2392
  4058  000974                     u1710:
  4059                           
  4060                           ;LcTLCD.c: 79:     LcCursorOff();
  4061  000974  ECE8  F007         	call	_LcCursorOff	;wreg free
  4062  000978  0012               	return		;funcret
  4063  00097A                     __end_of_LcInit:
  4064                           	callstack 0
  4065                           
  4066 ;; *************** function _TiGetTimer *****************
  4067 ;; Defined at:
  4068 ;;		line 70 in file "TiTTimer.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      unsigned char 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1
  4082 ;;      Params:         0       0       0
  4083 ;;      Locals:         0       0       0
  4084 ;;      Temps:          1       0       0
  4085 ;;      Totals:         1       0       0
  4086 ;;Total ram usage:        1 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 2
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_LcInit
  4093 ;;		_Sinit
  4094 ;;		_TeInit
  4095 ;;		_Minit
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text33
  4100  000D6C                     __ptext33:
  4101                           	callstack 0
  4102  000D6C                     _TiGetTimer:
  4103                           	callstack 27
  4104                           
  4105                           ;TiTTimer.c: 74:     counter=0;
  4106                           
  4107                           ;incstack = 0
  4108  000D6C  0E00               	movlw	0
  4109  000D6E  6E2D               	movwf	_counter^0,c
  4110                           
  4111                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4112  000D70  D007               	goto	l1374
  4113  000D72                     l1366:
  4114                           
  4115                           ;TiTTimer.c: 76:         counter++;
  4116  000D72  2A2D               	incf	_counter^0,f,c
  4117                           
  4118                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  4119  000D74  0E08               	movlw	8
  4120  000D76  182D               	xorwf	_counter^0,w,c
  4121  000D78  A4D8               	btfss	status,2,c
  4122  000D7A  D002               	goto	l1374
  4123  000D7C  0EFF               	movlw	255
  4124  000D7E  0012               	return	
  4125  000D80                     l1374:
  4126                           
  4127                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4128  000D80  502D               	movf	_counter^0,w,c
  4129  000D82  0D03               	mullw	3
  4130  000D84  50F3               	movf	243,w,c
  4131  000D86  0F03               	addlw	low (_s_Timers+2)
  4132  000D88  6ED9               	movwf	fsr2l,c
  4133  000D8A  6ADA               	clrf	fsr2h,c
  4134  000D8C  04DE               	decf	postinc2,w,c
  4135  000D8E  B4D8               	btfsc	status,2,c
  4136  000D90  D7F0               	goto	l1366
  4137                           
  4138                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  4139  000D92  502D               	movf	_counter^0,w,c
  4140  000D94  0D03               	mullw	3
  4141  000D96  50F3               	movf	243,w,c
  4142  000D98  0F03               	addlw	low (_s_Timers+2)
  4143  000D9A  6ED9               	movwf	fsr2l,c
  4144  000D9C  6ADA               	clrf	fsr2h,c
  4145  000D9E  0E01               	movlw	1
  4146  000DA0  6EDF               	movwf	indf2,c
  4147                           
  4148                           ;TiTTimer.c: 80:     return (counter);
  4149  000DA2  502D               	movf	_counter^0,w,c
  4150  000DA4  0012               	return		;funcret
  4151  000DA6                     __end_of_TiGetTimer:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _LcCursorOff *****************
  4155 ;; Defined at:
  4156 ;;		line 97 in file "LcTLCD.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1
  4170 ;;      Params:         0       0       0
  4171 ;;      Locals:         0       0       0
  4172 ;;      Temps:          0       0       0
  4173 ;;      Totals:         0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 4
  4177 ;; This function calls:
  4178 ;;		_CantaIR
  4179 ;;		_WaitForBusy
  4180 ;; This function is called by:
  4181 ;;		_LcInit
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text34
  4186  000FD0                     __ptext34:
  4187                           	callstack 0
  4188  000FD0                     _LcCursorOff:
  4189                           	callstack 25
  4190                           
  4191                           ;LcTLCD.c: 100:  WaitForBusy();
  4192                           
  4193                           ;incstack = 0
  4194  000FD0  EC79  F006         	call	_WaitForBusy	;wreg free
  4195                           
  4196                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4197  000FD4  0E0C               	movlw	12
  4198  000FD6  EC08  F007         	call	_CantaIR
  4199  000FDA  0012               	return		;funcret
  4200  000FDC                     __end_of_LcCursorOff:
  4201                           	callstack 0
  4202                           
  4203 ;; *************** function _WaitForBusy *****************
  4204 ;; Defined at:
  4205 ;;		line 210 in file "LcTLCD.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  Busy            1   12[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1
  4219 ;;      Params:         0       0       0
  4220 ;;      Locals:         1       0       0
  4221 ;;      Temps:          0       0       0
  4222 ;;      Totals:         1       0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 3
  4226 ;; This function calls:
  4227 ;;		_TiGetTics
  4228 ;;		_TiResetTics
  4229 ;; This function is called by:
  4230 ;;		_LcInit
  4231 ;;		_LcClear
  4232 ;;		_LcCursorOff
  4233 ;;		_LcGotoXY
  4234 ;;		_LcPutChar
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text35
  4239  000CF2                     __ptext35:
  4240                           	callstack 0
  4241  000CF2                     _WaitForBusy:
  4242                           	callstack 25
  4243                           
  4244                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4245                           
  4246                           ;incstack = 0
  4247  000CF2  8694               	bsf	148,3,c	;volatile
  4248  000CF4  8494               	bsf	148,2,c	;volatile
  4249  000CF6  8294               	bsf	148,1,c	;volatile
  4250  000CF8  8094               	bsf	148,0,c	;volatile
  4251                           
  4252                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  4253  000CFA  9A8B               	bcf	139,5,c	;volatile
  4254                           
  4255                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  4256  000CFC  8E8C               	bsf	140,7,c	;volatile
  4257                           
  4258                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  4259  000CFE  5035               	movf	_Timer^0,w,c
  4260  000D00  ECBA  F007         	call	_TiResetTics
  4261  000D04                     l2236:
  4262                           
  4263                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4264  000D04  888B               	bsf	139,4,c	;volatile
  4265  000D06  888B               	bsf	139,4,c	;volatile
  4266                           
  4267                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  4268  000D08  0E00               	movlw	0
  4269  000D0A  B682               	btfsc	130,3,c	;volatile
  4270  000D0C  0E01               	movlw	1
  4271  000D0E  6E6A               	movwf	WaitForBusy@Busy^0,c
  4272                           
  4273                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  4274  000D10  988B               	bcf	139,4,c	;volatile
  4275                           
  4276                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  4277  000D12  988B               	bcf	139,4,c	;volatile
  4278                           
  4279                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4280  000D14  888B               	bsf	139,4,c	;volatile
  4281  000D16  888B               	bsf	139,4,c	;volatile
  4282                           
  4283                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  4284  000D18  988B               	bcf	139,4,c	;volatile
  4285                           
  4286                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  4287  000D1A  988B               	bcf	139,4,c	;volatile
  4288                           
  4289                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  4290  000D1C  5035               	movf	_Timer^0,w,c
  4291  000D1E  EC50  F007         	call	_TiGetTics
  4292  000D22  5063               	movf	?_TiGetTics^0,w,c
  4293  000D24  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  4294  000D26  A4D8               	btfss	status,2,c
  4295  000D28  0012               	return	
  4296                           
  4297                           ;LcTLCD.c: 225:  } while(Busy);
  4298  000D2A  506A               	movf	WaitForBusy@Busy^0,w,c
  4299  000D2C  B4D8               	btfsc	status,2,c
  4300  000D2E  0012               	return	
  4301  000D30  D7E9               	goto	l2236
  4302  000D32                     __end_of_WaitForBusy:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _CantaIR *****************
  4306 ;; Defined at:
  4307 ;;		line 178 in file "LcTLCD.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  IR              1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  IR              1    7[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1
  4321 ;;      Params:         0       0       0
  4322 ;;      Locals:         1       0       0
  4323 ;;      Temps:          0       0       0
  4324 ;;      Totals:         1       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 3
  4328 ;; This function calls:
  4329 ;;		_CantaPartAlta
  4330 ;;		_CantaPartBaixa
  4331 ;; This function is called by:
  4332 ;;		_LcInit
  4333 ;;		_LcClear
  4334 ;;		_LcCursorOff
  4335 ;;		_LcGotoXY
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text36
  4340  000E10                     __ptext36:
  4341                           	callstack 0
  4342  000E10                     _CantaIR:
  4343                           	callstack 24
  4344                           
  4345                           ;incstack = 0
  4346                           ;CantaIR@IR stored from wreg
  4347  000E10  6E65               	movwf	CantaIR@IR^0,c
  4348                           
  4349                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  4350  000E12  9694               	bcf	148,3,c	;volatile
  4351  000E14  9494               	bcf	148,2,c	;volatile
  4352  000E16  9294               	bcf	148,1,c	;volatile
  4353  000E18  9094               	bcf	148,0,c	;volatile
  4354                           
  4355                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  4356  000E1A  9A8B               	bcf	139,5,c	;volatile
  4357                           
  4358                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  4359  000E1C  9E8C               	bcf	140,7,c	;volatile
  4360                           
  4361                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  4362  000E1E  888B               	bsf	139,4,c	;volatile
  4363                           
  4364                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  4365  000E20  5065               	movf	CantaIR@IR^0,w,c
  4366  000E22  EC88  F005         	call	_CantaPartAlta
  4367                           
  4368                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  4369  000E26  888B               	bsf	139,4,c	;volatile
  4370                           
  4371                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  4372  000E28  988B               	bcf	139,4,c	;volatile
  4373                           
  4374                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  4375  000E2A  988B               	bcf	139,4,c	;volatile
  4376                           
  4377                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  4378  000E2C  888B               	bsf	139,4,c	;volatile
  4379                           
  4380                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  4381  000E2E  5065               	movf	CantaIR@IR^0,w,c
  4382  000E30  EC54  F005         	call	_CantaPartBaixa
  4383                           
  4384                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  4385  000E34  888B               	bsf	139,4,c	;volatile
  4386                           
  4387                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  4388  000E36  988B               	bcf	139,4,c	;volatile
  4389                           
  4390                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4391  000E38  8694               	bsf	148,3,c	;volatile
  4392  000E3A  8494               	bsf	148,2,c	;volatile
  4393  000E3C  8294               	bsf	148,1,c	;volatile
  4394  000E3E  8094               	bsf	148,0,c	;volatile
  4395  000E40  0012               	return		;funcret
  4396  000E42                     __end_of_CantaIR:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _CantaPartBaixa *****************
  4400 ;; Defined at:
  4401 ;;		line 171 in file "LcTLCD.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  c               1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  c               1    6[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1
  4415 ;;      Params:         0       0       0
  4416 ;;      Locals:         1       0       0
  4417 ;;      Temps:          1       0       0
  4418 ;;      Totals:         2       0       0
  4419 ;;Total ram usage:        2 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 2
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_CantaIR
  4426 ;;		_CantaData
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text37
  4431  000AA8                     __ptext37:
  4432                           	callstack 0
  4433  000AA8                     _CantaPartBaixa:
  4434                           	callstack 24
  4435                           
  4436                           ;incstack = 0
  4437                           ;CantaPartBaixa@c stored from wreg
  4438  000AA8  6E64               	movwf	CantaPartBaixa@c^0,c
  4439                           
  4440                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  4441  000AAA  A664               	btfss	CantaPartBaixa@c^0,3,c
  4442  000AAC  D003               	goto	u1510
  4443  000AAE  6A63               	clrf	??_CantaPartBaixa^0,c
  4444  000AB0  2A63               	incf	??_CantaPartBaixa^0,f,c
  4445  000AB2  D001               	goto	u1528
  4446  000AB4                     u1510:
  4447  000AB4  6A63               	clrf	??_CantaPartBaixa^0,c
  4448  000AB6                     u1528:
  4449  000AB6  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4450  000AB8  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4451  000ABA  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4452  000ABC  508B               	movf	139,w,c	;volatile
  4453  000ABE  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4454  000AC0  0BF7               	andlw	-9
  4455  000AC2  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4456  000AC4  6E8B               	movwf	139,c	;volatile
  4457                           
  4458                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  4459  000AC6  A464               	btfss	CantaPartBaixa@c^0,2,c
  4460  000AC8  D003               	goto	u1530
  4461  000ACA  6A63               	clrf	??_CantaPartBaixa^0,c
  4462  000ACC  2A63               	incf	??_CantaPartBaixa^0,f,c
  4463  000ACE  D001               	goto	u1548
  4464  000AD0                     u1530:
  4465  000AD0  6A63               	clrf	??_CantaPartBaixa^0,c
  4466  000AD2                     u1548:
  4467  000AD2  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4468  000AD4  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4469  000AD6  508B               	movf	139,w,c	;volatile
  4470  000AD8  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4471  000ADA  0BFB               	andlw	-5
  4472  000ADC  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4473  000ADE  6E8B               	movwf	139,c	;volatile
  4474                           
  4475                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  4476  000AE0  A264               	btfss	CantaPartBaixa@c^0,1,c
  4477  000AE2  D003               	goto	u1550
  4478  000AE4  6A63               	clrf	??_CantaPartBaixa^0,c
  4479  000AE6  2A63               	incf	??_CantaPartBaixa^0,f,c
  4480  000AE8  D001               	goto	u1568
  4481  000AEA                     u1550:
  4482  000AEA  6A63               	clrf	??_CantaPartBaixa^0,c
  4483  000AEC                     u1568:
  4484  000AEC  4663               	rlncf	??_CantaPartBaixa^0,f,c
  4485  000AEE  508B               	movf	139,w,c	;volatile
  4486  000AF0  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4487  000AF2  0BFD               	andlw	-3
  4488  000AF4  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4489  000AF6  6E8B               	movwf	139,c	;volatile
  4490                           
  4491                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  4492  000AF8  A064               	btfss	CantaPartBaixa@c^0,0,c
  4493  000AFA  D003               	goto	u1570
  4494  000AFC  6A63               	clrf	??_CantaPartBaixa^0,c
  4495  000AFE  2A63               	incf	??_CantaPartBaixa^0,f,c
  4496  000B00  D001               	goto	u1588
  4497  000B02                     u1570:
  4498  000B02  6A63               	clrf	??_CantaPartBaixa^0,c
  4499  000B04                     u1588:
  4500  000B04  508B               	movf	139,w,c	;volatile
  4501  000B06  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4502  000B08  0BFE               	andlw	-2
  4503  000B0A  1863               	xorwf	??_CantaPartBaixa^0,w,c
  4504  000B0C  6E8B               	movwf	139,c	;volatile
  4505  000B0E  0012               	return		;funcret
  4506  000B10                     __end_of_CantaPartBaixa:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _CantaPartAlta *****************
  4510 ;; Defined at:
  4511 ;;		line 164 in file "LcTLCD.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  c               1    wreg     unsigned char 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  c               1    6[COMRAM] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1
  4525 ;;      Params:         0       0       0
  4526 ;;      Locals:         1       0       0
  4527 ;;      Temps:          1       0       0
  4528 ;;      Totals:         2       0       0
  4529 ;;Total ram usage:        2 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 2
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_CantaIR
  4536 ;;		_CantaData
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text38
  4541  000B10                     __ptext38:
  4542                           	callstack 0
  4543  000B10                     _CantaPartAlta:
  4544                           	callstack 24
  4545                           
  4546                           ;incstack = 0
  4547                           ;CantaPartAlta@c stored from wreg
  4548  000B10  6E64               	movwf	CantaPartAlta@c^0,c
  4549                           
  4550                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  4551  000B12  AE64               	btfss	CantaPartAlta@c^0,7,c
  4552  000B14  D003               	goto	u1430
  4553  000B16  6A63               	clrf	??_CantaPartAlta^0,c
  4554  000B18  2A63               	incf	??_CantaPartAlta^0,f,c
  4555  000B1A  D001               	goto	u1448
  4556  000B1C                     u1430:
  4557  000B1C  6A63               	clrf	??_CantaPartAlta^0,c
  4558  000B1E                     u1448:
  4559  000B1E  4663               	rlncf	??_CantaPartAlta^0,f,c
  4560  000B20  4663               	rlncf	??_CantaPartAlta^0,f,c
  4561  000B22  4663               	rlncf	??_CantaPartAlta^0,f,c
  4562  000B24  508B               	movf	139,w,c	;volatile
  4563  000B26  1863               	xorwf	??_CantaPartAlta^0,w,c
  4564  000B28  0BF7               	andlw	-9
  4565  000B2A  1863               	xorwf	??_CantaPartAlta^0,w,c
  4566  000B2C  6E8B               	movwf	139,c	;volatile
  4567                           
  4568                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  4569  000B2E  AC64               	btfss	CantaPartAlta@c^0,6,c
  4570  000B30  D003               	goto	u1450
  4571  000B32  6A63               	clrf	??_CantaPartAlta^0,c
  4572  000B34  2A63               	incf	??_CantaPartAlta^0,f,c
  4573  000B36  D001               	goto	u1468
  4574  000B38                     u1450:
  4575  000B38  6A63               	clrf	??_CantaPartAlta^0,c
  4576  000B3A                     u1468:
  4577  000B3A  4663               	rlncf	??_CantaPartAlta^0,f,c
  4578  000B3C  4663               	rlncf	??_CantaPartAlta^0,f,c
  4579  000B3E  508B               	movf	139,w,c	;volatile
  4580  000B40  1863               	xorwf	??_CantaPartAlta^0,w,c
  4581  000B42  0BFB               	andlw	-5
  4582  000B44  1863               	xorwf	??_CantaPartAlta^0,w,c
  4583  000B46  6E8B               	movwf	139,c	;volatile
  4584                           
  4585                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  4586  000B48  AA64               	btfss	CantaPartAlta@c^0,5,c
  4587  000B4A  D003               	goto	u1470
  4588  000B4C  6A63               	clrf	??_CantaPartAlta^0,c
  4589  000B4E  2A63               	incf	??_CantaPartAlta^0,f,c
  4590  000B50  D001               	goto	u1488
  4591  000B52                     u1470:
  4592  000B52  6A63               	clrf	??_CantaPartAlta^0,c
  4593  000B54                     u1488:
  4594  000B54  4663               	rlncf	??_CantaPartAlta^0,f,c
  4595  000B56  508B               	movf	139,w,c	;volatile
  4596  000B58  1863               	xorwf	??_CantaPartAlta^0,w,c
  4597  000B5A  0BFD               	andlw	-3
  4598  000B5C  1863               	xorwf	??_CantaPartAlta^0,w,c
  4599  000B5E  6E8B               	movwf	139,c	;volatile
  4600                           
  4601                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  4602  000B60  A864               	btfss	CantaPartAlta@c^0,4,c
  4603  000B62  D003               	goto	u1490
  4604  000B64  6A63               	clrf	??_CantaPartAlta^0,c
  4605  000B66  2A63               	incf	??_CantaPartAlta^0,f,c
  4606  000B68  D001               	goto	u1508
  4607  000B6A                     u1490:
  4608  000B6A  6A63               	clrf	??_CantaPartAlta^0,c
  4609  000B6C                     u1508:
  4610  000B6C  508B               	movf	139,w,c	;volatile
  4611  000B6E  1863               	xorwf	??_CantaPartAlta^0,w,c
  4612  000B70  0BFE               	andlw	-2
  4613  000B72  1863               	xorwf	??_CantaPartAlta^0,w,c
  4614  000B74  6E8B               	movwf	139,c	;volatile
  4615  000B76  0012               	return		;funcret
  4616  000B78                     __end_of_CantaPartAlta:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _Espera *****************
  4620 ;; Defined at:
  4621 ;;		line 159 in file "LcTLCD.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  Timer           1    wreg     unsigned char 
  4624 ;;  ms              2   12[COMRAM] int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  Timer           1   15[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1
  4636 ;;      Params:         2       0       0
  4637 ;;      Locals:         1       0       0
  4638 ;;      Temps:          1       0       0
  4639 ;;      Totals:         4       0       0
  4640 ;;Total ram usage:        4 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 3
  4643 ;; This function calls:
  4644 ;;		_TiGetTics
  4645 ;;		_TiResetTics
  4646 ;; This function is called by:
  4647 ;;		_LcInit
  4648 ;;		_LcClear
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text39
  4653  000F14                     __ptext39:
  4654                           	callstack 0
  4655  000F14                     _Espera:
  4656                           	callstack 25
  4657                           
  4658                           ;incstack = 0
  4659                           ;Espera@Timer stored from wreg
  4660  000F14  6E6D               	movwf	Espera@Timer^0,c
  4661                           
  4662                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  4663  000F16  506D               	movf	Espera@Timer^0,w,c
  4664  000F18  ECBA  F007         	call	_TiResetTics
  4665  000F1C                     l2262:
  4666  000F1C  506D               	movf	Espera@Timer^0,w,c
  4667  000F1E  EC50  F007         	call	_TiGetTics
  4668  000F22  506A               	movf	Espera@ms^0,w,c
  4669  000F24  5C63               	subwf	?_TiGetTics^0,w,c
  4670  000F26  5064               	movf	(?_TiGetTics+1)^0,w,c
  4671  000F28  0A80               	xorlw	128
  4672  000F2A  6E6C               	movwf	??_Espera^0,c
  4673  000F2C  506B               	movf	(Espera@ms+1)^0,w,c
  4674  000F2E  0A80               	xorlw	128
  4675  000F30  586C               	subwfb	??_Espera^0,w,c
  4676  000F32  B0D8               	btfsc	status,0,c
  4677  000F34  0012               	return	
  4678  000F36  D7F2               	goto	l2262
  4679  000F38                     __end_of_Espera:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _TiResetTics *****************
  4683 ;; Defined at:
  4684 ;;		line 55 in file "TiTTimer.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  Handle          1    wreg     unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  Handle          1    5[COMRAM] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1
  4698 ;;      Params:         0       0       0
  4699 ;;      Locals:         1       0       0
  4700 ;;      Temps:          0       0       0
  4701 ;;      Totals:         1       0       0
  4702 ;;Total ram usage:        1 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 2
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_Espera
  4709 ;;		_WaitForBusy
  4710 ;;		_SMotor
  4711 ;;		_TeTeclat
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text40
  4716  000F74                     __ptext40:
  4717                           	callstack 0
  4718  000F74                     _TiResetTics:
  4719                           	callstack 25
  4720                           
  4721                           ;incstack = 0
  4722                           ;TiResetTics@Handle stored from wreg
  4723  000F74  6E63               	movwf	TiResetTics@Handle^0,c
  4724                           
  4725                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  4726  000F76  5063               	movf	TiResetTics@Handle^0,w,c
  4727  000F78  0D03               	mullw	3
  4728  000F7A  50F3               	movf	243,w,c
  4729  000F7C  0F01               	addlw	low _s_Timers
  4730  000F7E  6ED9               	movwf	fsr2l,c
  4731  000F80  6ADA               	clrf	fsr2h,c
  4732  000F82  C022  FFDE         	movff	_h_Tics,postinc2
  4733  000F86  C023  FFDD         	movff	_h_Tics+1,postdec2
  4734  000F8A  0012               	return		;funcret
  4735  000F8C                     __end_of_TiResetTics:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _TiGetTics *****************
  4739 ;; Defined at:
  4740 ;;		line 61 in file "TiTTimer.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  Handle          1    wreg     unsigned char 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  Handle          1    9[COMRAM] unsigned char 
  4745 ;;  actual          2   10[COMRAM] volatile unsigned int 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  2    5[COMRAM] int 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1
  4755 ;;      Params:         2       0       0
  4756 ;;      Locals:         3       0       0
  4757 ;;      Temps:          2       0       0
  4758 ;;      Totals:         7       0       0
  4759 ;;Total ram usage:        7 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 2
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_Espera
  4766 ;;		_WaitForBusy
  4767 ;;		_SMotor
  4768 ;;		_TeTeclat
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text41
  4773  000EA0                     __ptext41:
  4774                           	callstack 0
  4775  000EA0                     _TiGetTics:
  4776                           	callstack 25
  4777                           
  4778                           ;incstack = 0
  4779                           ;TiGetTics@Handle stored from wreg
  4780  000EA0  6E67               	movwf	TiGetTics@Handle^0,c
  4781                           
  4782                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  4783  000EA2  C022  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  4784  000EA6  C023  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  4785                           
  4786                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  4787  000EAA  5067               	movf	TiGetTics@Handle^0,w,c
  4788  000EAC  0D03               	mullw	3
  4789  000EAE  50F3               	movf	243,w,c
  4790  000EB0  0F01               	addlw	low _s_Timers
  4791  000EB2  6ED9               	movwf	fsr2l,c
  4792  000EB4  6ADA               	clrf	fsr2h,c
  4793  000EB6  CFDE F065          	movff	postinc2,??_TiGetTics
  4794  000EBA  CFDD F066          	movff	postdec2,??_TiGetTics+1
  4795  000EBE  5065               	movf	??_TiGetTics^0,w,c
  4796  000EC0  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  4797  000EC2  6E63               	movwf	?_TiGetTics^0,c
  4798  000EC4  5066               	movf	(??_TiGetTics+1)^0,w,c
  4799  000EC6  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  4800  000EC8  6E64               	movwf	(?_TiGetTics+1)^0,c
  4801  000ECA  0012               	return		;funcret
  4802  000ECC                     __end_of_TiGetTics:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _EscriuPrimeraOrdre *****************
  4806 ;; Defined at:
  4807 ;;		line 228 in file "LcTLCD.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  ordre           1    wreg     unsigned char 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  ordre           1    6[COMRAM] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1
  4821 ;;      Params:         0       0       0
  4822 ;;      Locals:         1       0       0
  4823 ;;      Temps:          1       0       0
  4824 ;;      Totals:         2       0       0
  4825 ;;Total ram usage:        2 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 2
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_LcInit
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text42
  4836  000A2E                     __ptext42:
  4837                           	callstack 0
  4838  000A2E                     _EscriuPrimeraOrdre:
  4839                           	callstack 27
  4840                           
  4841                           ;incstack = 0
  4842                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4843  000A2E  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4844                           
  4845                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4846  000A30  9694               	bcf	148,3,c	;volatile
  4847  000A32  9494               	bcf	148,2,c	;volatile
  4848  000A34  9294               	bcf	148,1,c	;volatile
  4849  000A36  9094               	bcf	148,0,c	;volatile
  4850  000A38  9A8B               	bcf	139,5,c	;volatile
  4851  000A3A  9E8C               	bcf	140,7,c	;volatile
  4852                           
  4853                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4854  000A3C  888B               	bsf	139,4,c	;volatile
  4855  000A3E  888B               	bsf	139,4,c	;volatile
  4856                           
  4857                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4858  000A40  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4859  000A42  D003               	goto	u230
  4860  000A44  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4861  000A46  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4862  000A48  D001               	goto	u248
  4863  000A4A                     u230:
  4864  000A4A  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4865  000A4C                     u248:
  4866  000A4C  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4867  000A4E  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4868  000A50  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4869  000A52  508B               	movf	139,w,c	;volatile
  4870  000A54  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4871  000A56  0BF7               	andlw	-9
  4872  000A58  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4873  000A5A  6E8B               	movwf	139,c	;volatile
  4874                           
  4875                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4876  000A5C  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4877  000A5E  D003               	goto	u250
  4878  000A60  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4879  000A62  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4880  000A64  D001               	goto	u268
  4881  000A66                     u250:
  4882  000A66  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4883  000A68                     u268:
  4884  000A68  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4885  000A6A  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4886  000A6C  508B               	movf	139,w,c	;volatile
  4887  000A6E  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4888  000A70  0BFB               	andlw	-5
  4889  000A72  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4890  000A74  6E8B               	movwf	139,c	;volatile
  4891                           
  4892                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4893  000A76  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4894  000A78  D003               	goto	u270
  4895  000A7A  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4896  000A7C  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4897  000A7E  D001               	goto	u288
  4898  000A80                     u270:
  4899  000A80  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4900  000A82                     u288:
  4901  000A82  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4902  000A84  508B               	movf	139,w,c	;volatile
  4903  000A86  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4904  000A88  0BFD               	andlw	-3
  4905  000A8A  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4906  000A8C  6E8B               	movwf	139,c	;volatile
  4907                           
  4908                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4909  000A8E  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4910  000A90  D003               	goto	u290
  4911  000A92  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4912  000A94  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  4913  000A96  D001               	goto	u308
  4914  000A98                     u290:
  4915  000A98  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  4916  000A9A                     u308:
  4917  000A9A  508B               	movf	139,w,c	;volatile
  4918  000A9C  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4919  000A9E  0BFE               	andlw	-2
  4920  000AA0  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4921  000AA2  6E8B               	movwf	139,c	;volatile
  4922                           
  4923                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4924  000AA4  988B               	bcf	139,4,c	;volatile
  4925  000AA6  0012               	return		;funcret
  4926  000AA8                     __end_of_EscriuPrimeraOrdre:
  4927                           	callstack 0
  4928                           
  4929 ;; *************** function _high_rsi *****************
  4930 ;; Defined at:
  4931 ;;		line 15 in file "main.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1
  4945 ;;      Params:         0       0       0
  4946 ;;      Locals:         0       0       0
  4947 ;;      Temps:          4       0       0
  4948 ;;      Totals:         4       0       0
  4949 ;;Total ram usage:        4 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 1
  4952 ;; This function calls:
  4953 ;;		__TiRSITimer
  4954 ;; This function is called by:
  4955 ;;		Interrupt level 2
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	intcode
  4960  000008                     __pintcode:
  4961                           	callstack 0
  4962  000008                     _high_rsi:
  4963                           	callstack 24
  4964                           
  4965                           ;incstack = 0
  4966  000008  8275               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4967  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
  4968  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
  4969  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
  4970  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
  4971                           
  4972                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4973  00001A  ECBC  F005         	call	__TiRSITimer	;wreg free
  4974  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
  4975  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
  4976  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
  4977  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
  4978  00002E  9275               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4979  000030  0011               	retfie		f
  4980  000032                     __end_of_high_rsi:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function __TiRSITimer *****************
  4984 ;; Defined at:
  4985 ;;		line 37 in file "TiTTimer.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1
  4999 ;;      Params:         0       0       0
  5000 ;;      Locals:         0       0       0
  5001 ;;      Temps:          1       0       0
  5002 ;;      Totals:         1       0       0
  5003 ;;Total ram usage:        1 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_high_rsi
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text44
  5013  000B78                     __ptext44:
  5014                           	callstack 0
  5015  000B78                     __TiRSITimer:
  5016                           	callstack 24
  5017                           
  5018                           ;TiTTimer.c: 39:     TMR0H = 223;
  5019                           
  5020                           ;incstack = 0
  5021  000B78  0EDF               	movlw	223
  5022  000B7A  6ED7               	movwf	215,c	;volatile
  5023                           
  5024                           ;TiTTimer.c: 40:     TMR0L = 148;
  5025  000B7C  0E94               	movlw	148
  5026  000B7E  6ED6               	movwf	214,c	;volatile
  5027                           
  5028                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  5029  000B80  94F2               	bcf	242,2,c	;volatile
  5030                           
  5031                           ;TiTTimer.c: 42:     h_Tics++;
  5032  000B82  4A22               	infsnz	_h_Tics^0,f,c
  5033  000B84  2A23               	incf	(_h_Tics+1)^0,f,c
  5034                           
  5035                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  5036  000B86  0E48               	movlw	72
  5037  000B88  5C22               	subwf	_h_Tics^0,w,c
  5038  000B8A  0EEE               	movlw	238
  5039  000B8C  5823               	subwfb	(_h_Tics+1)^0,w,c
  5040  000B8E  A0D8               	btfss	status,0,c
  5041  000B90  0012               	return	
  5042                           
  5043                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  5044  000B92  0E00               	movlw	0
  5045  000B94  6E2D               	movwf	_counter^0,c
  5046  000B96                     i2l1578:
  5047  000B96  0E07               	movlw	7
  5048  000B98  642D               	cpfsgt	_counter^0,c
  5049  000B9A  D001               	goto	i2l1582
  5050  000B9C  D015               	goto	i2l1590
  5051  000B9E                     i2l1582:
  5052                           
  5053                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  5054  000B9E  502D               	movf	_counter^0,w,c
  5055  000BA0  0D03               	mullw	3
  5056  000BA2  50F3               	movf	243,w,c
  5057  000BA4  0F03               	addlw	low (_s_Timers+2)
  5058  000BA6  6ED9               	movwf	fsr2l,c
  5059  000BA8  6ADA               	clrf	fsr2h,c
  5060  000BAA  04DE               	decf	postinc2,w,c
  5061  000BAC  A4D8               	btfss	status,2,c
  5062  000BAE  D00A               	goto	i2l1586
  5063                           
  5064                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  5065  000BB0  502D               	movf	_counter^0,w,c
  5066  000BB2  0D03               	mullw	3
  5067  000BB4  50F3               	movf	243,w,c
  5068  000BB6  0F01               	addlw	low _s_Timers
  5069  000BB8  6ED9               	movwf	fsr2l,c
  5070  000BBA  6ADA               	clrf	fsr2h,c
  5071  000BBC  5022               	movf	_h_Tics^0,w,c
  5072  000BBE  5EDE               	subwf	postinc2,f,c
  5073  000BC0  5023               	movf	(_h_Tics+1)^0,w,c
  5074  000BC2  5ADD               	subwfb	postdec2,f,c
  5075  000BC4                     i2l1586:
  5076                           
  5077                           ;TiTTimer.c: 50:         }
  5078  000BC4  2A2D               	incf	_counter^0,f,c
  5079  000BC6  D7E7               	goto	i2l1578
  5080  000BC8                     i2l1590:
  5081                           
  5082                           ;TiTTimer.c: 51:         h_Tics=0;
  5083  000BC8  0E00               	movlw	0
  5084  000BCA  6E23               	movwf	(_h_Tics+1)^0,c
  5085  000BCC  0E00               	movlw	0
  5086  000BCE  6E22               	movwf	_h_Tics^0,c
  5087  000BD0  0012               	return		;funcret
  5088  000BD2                     __end_of__TiRSITimer:
  5089                           	callstack 0
  5090                           
  5091                           	psect	rparam
  5092  0000                     
  5093                           	psect	temp
  5094  000075                     btemp:
  5095                           	callstack 0
  5096  000075                     	ds	1
  5097  0000                     int$flags	set	btemp
  5098  0000                     wtemp8	set	btemp+1
  5099  0000                     ttemp5	set	btemp+1
  5100  0000                     ttemp6	set	btemp+4
  5101  0000                     ttemp7	set	btemp+8
  5102                           
  5103                           	psect	idloc
  5104                           
  5105                           ;Config register IDLOC0 @ 0x200000
  5106                           ;	unspecified, using default values
  5107  200000                     	org	2097152
  5108  200000  FF                 	db	255
  5109                           
  5110                           ;Config register IDLOC1 @ 0x200001
  5111                           ;	unspecified, using default values
  5112  200001                     	org	2097153
  5113  200001  FF                 	db	255
  5114                           
  5115                           ;Config register IDLOC2 @ 0x200002
  5116                           ;	unspecified, using default values
  5117  200002                     	org	2097154
  5118  200002  FF                 	db	255
  5119                           
  5120                           ;Config register IDLOC3 @ 0x200003
  5121                           ;	unspecified, using default values
  5122  200003                     	org	2097155
  5123  200003  FF                 	db	255
  5124                           
  5125                           ;Config register IDLOC4 @ 0x200004
  5126                           ;	unspecified, using default values
  5127  200004                     	org	2097156
  5128  200004  FF                 	db	255
  5129                           
  5130                           ;Config register IDLOC5 @ 0x200005
  5131                           ;	unspecified, using default values
  5132  200005                     	org	2097157
  5133  200005  FF                 	db	255
  5134                           
  5135                           ;Config register IDLOC6 @ 0x200006
  5136                           ;	unspecified, using default values
  5137  200006                     	org	2097158
  5138  200006  FF                 	db	255
  5139                           
  5140                           ;Config register IDLOC7 @ 0x200007
  5141                           ;	unspecified, using default values
  5142  200007                     	org	2097159
  5143  200007  FF                 	db	255
  5144                           
  5145                           	psect	config
  5146                           
  5147                           ; Padding undefined space
  5148  300000                     	org	3145728
  5149  300000  FF                 	db	255
  5150                           
  5151                           ;Config register CONFIG1H @ 0x300001
  5152                           ;	Oscillator
  5153                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5154                           ;	Fail-Safe Clock Monitor Enable bit
  5155                           ;	FCMEN = 0x0, unprogrammed default
  5156                           ;	Internal/External Oscillator Switchover bit
  5157                           ;	IESO = 0x0, unprogrammed default
  5158  300001                     	org	3145729
  5159  300001  06                 	db	6
  5160                           
  5161                           ;Config register CONFIG2L @ 0x300002
  5162                           ;	unspecified, using default values
  5163                           ;	Power-up Timer Enable bit
  5164                           ;	PWRT = 0x1, unprogrammed default
  5165                           ;	Brown-out Reset Enable bits
  5166                           ;	BOR = 0x3, unprogrammed default
  5167                           ;	Brown-out Reset Voltage bits
  5168                           ;	BORV = 0x3, unprogrammed default
  5169  300002                     	org	3145730
  5170  300002  1F                 	db	31
  5171                           
  5172                           ;Config register CONFIG2H @ 0x300003
  5173                           ;	Watchdog Timer Enable bit
  5174                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5175                           ;	Watchdog Timer Postscale Select bits
  5176                           ;	WDTPS = 0xF, unprogrammed default
  5177  300003                     	org	3145731
  5178  300003  1E                 	db	30
  5179                           
  5180                           ; Padding undefined space
  5181  300004                     	org	3145732
  5182  300004  FF                 	db	255
  5183                           
  5184                           ;Config register CONFIG3H @ 0x300005
  5185                           ;	CCP2 MUX bit
  5186                           ;	CCP2MX = 0x1, unprogrammed default
  5187                           ;	PORTB A/D Enable bit
  5188                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5189                           ;	Low-Power Timer1 Oscillator Enable bit
  5190                           ;	LPT1OSC = 0x0, unprogrammed default
  5191                           ;	MCLR Pin Enable bit
  5192                           ;	MCLRE = 0x1, unprogrammed default
  5193  300005                     	org	3145733
  5194  300005  81                 	db	129
  5195                           
  5196                           ;Config register CONFIG4L @ 0x300006
  5197                           ;	Stack Full/Underflow Reset Enable bit
  5198                           ;	STVREN = 0x1, unprogrammed default
  5199                           ;	Single-Supply ICSP Enable bit
  5200                           ;	LVP = OFF, Single-Supply ICSP disabled
  5201                           ;	Boot Block Size Select bits
  5202                           ;	BBSIZ = 0x0, unprogrammed default
  5203                           ;	Extended Instruction Set Enable bit
  5204                           ;	XINST = 0x0, unprogrammed default
  5205                           ;	Background Debugger Enable bit
  5206                           ;	DEBUG = 0x1, unprogrammed default
  5207  300006                     	org	3145734
  5208  300006  81                 	db	129
  5209                           
  5210                           ; Padding undefined space
  5211  300007                     	org	3145735
  5212  300007  FF                 	db	255
  5213                           
  5214                           ;Config register CONFIG5L @ 0x300008
  5215                           ;	unspecified, using default values
  5216                           ;	Code Protection bit
  5217                           ;	CP0 = 0x1, unprogrammed default
  5218                           ;	Code Protection bit
  5219                           ;	CP1 = 0x1, unprogrammed default
  5220  300008                     	org	3145736
  5221  300008  03                 	db	3
  5222                           
  5223                           ;Config register CONFIG5H @ 0x300009
  5224                           ;	unspecified, using default values
  5225                           ;	Boot Block Code Protection bitProtect Boot
  5226                           ;	CPB = 0x1, unprogrammed default
  5227                           ;	Data EEPROM Code Protection bit
  5228                           ;	CPD = 0x1, unprogrammed default
  5229  300009                     	org	3145737
  5230  300009  C0                 	db	192
  5231                           
  5232                           ;Config register CONFIG6L @ 0x30000A
  5233                           ;	unspecified, using default values
  5234                           ;	Write Protection bit
  5235                           ;	WRT0 = 0x1, unprogrammed default
  5236                           ;	Write Protection bit
  5237                           ;	WRT1 = 0x1, unprogrammed default
  5238  30000A                     	org	3145738
  5239  30000A  03                 	db	3
  5240                           
  5241                           ;Config register CONFIG6H @ 0x30000B
  5242                           ;	unspecified, using default values
  5243                           ;	Configuration Register Write Protection bit
  5244                           ;	WRTC = 0x1, unprogrammed default
  5245                           ;	Boot Block Write Protection bit
  5246                           ;	WRTB = 0x1, unprogrammed default
  5247                           ;	Data EEPROM Write Protection bit
  5248                           ;	WRTD = 0x1, unprogrammed default
  5249  30000B                     	org	3145739
  5250  30000B  E0                 	db	224
  5251                           
  5252                           ;Config register CONFIG7L @ 0x30000C
  5253                           ;	unspecified, using default values
  5254                           ;	Table Read Protection bit
  5255                           ;	EBTR0 = 0x1, unprogrammed default
  5256                           ;	Table Read Protection bit
  5257                           ;	EBTR1 = 0x1, unprogrammed default
  5258  30000C                     	org	3145740
  5259  30000C  03                 	db	3
  5260                           
  5261                           ;Config register CONFIG7H @ 0x30000D
  5262                           ;	unspecified, using default values
  5263                           ;	Boot Block Table Read Protection bit
  5264                           ;	EBTRB = 0x1, unprogrammed default
  5265  30000D                     	org	3145741
  5266  30000D  40                 	db	64
  5267                           tosu	equ	0xFFF
  5268                           tosh	equ	0xFFE
  5269                           tosl	equ	0xFFD
  5270                           stkptr	equ	0xFFC
  5271                           pclatu	equ	0xFFB
  5272                           pclath	equ	0xFFA
  5273                           pcl	equ	0xFF9
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           indf0	equ	0xFEF
  5281                           postinc0	equ	0xFEE
  5282                           postdec0	equ	0xFED
  5283                           preinc0	equ	0xFEC
  5284                           plusw0	equ	0xFEB
  5285                           fsr0h	equ	0xFEA
  5286                           fsr0l	equ	0xFE9
  5287                           wreg	equ	0xFE8
  5288                           indf1	equ	0xFE7
  5289                           postinc1	equ	0xFE6
  5290                           postdec1	equ	0xFE5
  5291                           preinc1	equ	0xFE4
  5292                           plusw1	equ	0xFE3
  5293                           fsr1h	equ	0xFE2
  5294                           fsr1l	equ	0xFE1
  5295                           bsr	equ	0xFE0
  5296                           indf2	equ	0xFDF
  5297                           postinc2	equ	0xFDE
  5298                           postdec2	equ	0xFDD
  5299                           preinc2	equ	0xFDC
  5300                           plusw2	equ	0xFDB
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         250
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     116
    BANK0           128      0       0
    BANK1           244      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8832
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    5145
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      B8       6       75.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      74       1       92.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C       7        0.0%
DATA                 0      0     12C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 26 20:47:13 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03A3  
                               _i 0026                                 _j 0025  
       ??_UcheckExistsNotFinished 0063            __end_of_compareStrings 0CB2  
                             l531 0984                               l419 027E  
                             l541 09AC                               l525 0F0C  
                             l534 0992                               l446 03DC  
                             l447 03EE                               l544 09E2  
                             l546 09E8                               l539 09A6  
                             l563 079A                               l564 07AA  
                             l566 07B6                               l589 0E90  
                             u230 0A4A                               u250 0A66  
                             u308 0A9A                               u270 0A80  
                             u248 0A4C                               u290 0A98  
                             u268 0A68                               u288 0A82  
                             _tmp 002C                  ??_CantaPartBaixa 0063  
                             prod 000FF3                               wreg 000FE8  
                     _ultimaTecla 004E                              l1610 0E76  
                            l1434 0FCC                              l2236 0D04  
                            l2262 0F1C                              l1366 0D72  
                            l1374 0D80                              l2334 0C18  
                            l2326 0BFE                              l2510 0584  
                            l1470 0FC0                              l1462 0FB4  
                            l2328 0C08                              l2512 0586  
                            l2504 056C                              l2440 048A  
                            l1632 0DC2                              l1800 09A2  
                            l2600 0272                              l2530 05B2  
                            l2514 058C                              l2370 0C8A  
                            l2268 0D42                              l2524 05A8  
                            l1636 0DCA                              l2364 0C6E  
                            l2620 02B4                              l2612 0294  
                            l2470 04F8                              l2462 04D0  
                            l1830 0A24                              l2630 02D4  
                            l2392 08C6                              l2544 05DC  
                            l2448 049E                              l2640 02FC  
                            l2538 05CC                              l2730 0400  
                            l2548 05E4                              l2492 053C  
                            l2644 0306                              l2628 02CE  
                            l2486 0526                              l2830 069E  
                            l2822 0688                              l2750 07B0  
                            l2718 03CE                              l2670 034A  
                            l2638 02F6                              l2582 0238  
                            l2568 05F8                              l2824 068C  
                            l2816 0678                              l2808 0876  
                            l2680 0372                              l2672 0350  
                            l2656 031E                              l2592 025A  
                            l2576 0226                              l2736 0426  
                            l2498 0552                              l2850 06D2  
                            l2770 0804                              l2754 07C0  
                            l2682 0378                              l2914 0CDC  
                            l2860 06EC                              l2844 06BC  
                            l2828 0698                              l2780 0824  
                            l2764 07F4                              l2870 0728  
                            l2838 06AE                              l2686 0382  
                            l2598 026C                              l2880 073E  
                            l2864 06F8                              l2856 06E0  
                            l2784 0836                              l2768 07FE  
                            l2890 0756                              l2794 085A  
                            l2698 039A                              l2884 074A  
                            l2876 0736                              STR_1 020C  
                            STR_2 0201                              STR_3 021B  
                            STR_4 0214                              u2120 032E  
                            u1430 0B1C                              u1510 0AB4  
                            u2310 07BA                              _LATD 000F8C  
                            u1450 0B38                              u1530 0AD0  
                            u2250 0408                              u1508 0B6C  
                            u2420 063E                              u1700 0C96  
                            u2340 07EE                              u2260 0418  
                            u2252 040A                              u1470 0B52  
                            u1550 0AEA                              u1710 0974  
                            u2430 0648                              u2262 041A  
                            u2190 03AA                              u1448 0B1E  
                            u1528 0AB6                              u2440 0658  
                            u1490 0B6A                              u1570 0B02  
                            u1810 04EE                              u2450 0668  
                            u2355 07F0                              u1468 0B3A  
                            u1548 0AD2                              u2436 064A  
                            u2428 0640                              u2446 065A  
                            u1488 0B54                              u1568 0AEC  
                            u2456 066A                              u1588 0B04  
                            u1940 05BA                              u1950 05D4  
                            u1870 054C                   ??_SsetNovaTecla 0063  
                            _Rows 0039                              _main 0CB2  
                            _menu 0224                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0075                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 0EF0  
                            start 0032                   __end_of_CantaIR 0E42  
                   LcInit@columns 006E                      ___param_bank 000000  
                     Espera@Timer 006D                             ?_main 005E  
         __size_of_escriureEEPROM 002E                             ?_menu 005E  
                           _EEADR 000FA9                     ??_TiInitTimer 0063  
                           _T0CON 000FD5                   ?_compareStrings 0063  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 0E42                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 1014  
                     _MNovaLletra 1004                             _Minit 100C  
                           _Sinit 0FFC                             _Timer 0035  
                           _Uinit 097A                             _s_ptr 0034  
                           _nou_s 03A5                       _LcCursorOff 0FD0  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03A0  
                           tablat 000FF5                       _LcNewString 0FDC  
                   ??_TiResetTics 0063                             ttemp5 0076  
                           ttemp6 0079                             ttemp7 007D  
                           status 000FD8                             wtemp8 0076  
   __size_of_UcheckExistsGetError 000C                  __end_of_LcGotoXY 0D6C  
                __end_of_LcLliure 0FD0                     ??__TiRSITimer 005E  
                      _TiGetTimer 0D6C           EscriuPrimeraOrdre@ordre 0064  
                 __initialization 0C24                __size_of_CantaData 0032  
                    __end_of_main 0CF2                      __end_of_menu 0488  
                __end_of_TeTeclat 0798                     _indexNextUser 0027  
                          ??_main 0074                            ??_menu 0072  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                          ?_LcLCD 005E                            ?_SMSon 005E  
                          ?_Minit 005E                            ?_Sinit 005E  
                          ?_Uinit 005E               __end_of_TiInitTimer 0DDE  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                       ??_LcClear 0071                         ??_CantaIR 0065  
                          i2l1590 0BC8                            i2l1582 0B9E  
                          i2l1586 0BC4                            i2l1578 0B96  
                  LcGotoXY@Fisics 006C                    LcGotoXY@Column 0070  
                   ??_WaitForBusy 006A                __size_of_TiGetTics 002C  
                  _sumaPulsacions 0033                            _SMSoff 101A  
                          _LcInit 08A0                    _UgetNumUsuaris 1020  
                          _SMotor 0488               escriureCharEEPROM@c 0064  
                          _TeInit 0FF4                            _Espera 0F14  
                    _LcGotoXY$342 006E                            _RowAct 0037  
             __end_of_TiResetTics 0F8C                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 0022               __end_of__TiRSITimer 0BD2  
                          clear_0 0C4A                            clear_1 0C58  
                      _UenviaChar 0F9C                            isa$std 000001  
                      UenviaPas@c 0064       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 0043            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0029  
               __end_of_CantaData 0E10                      TeTeclat@cols 002F  
                   ?_UcheckExists 005E                        __accesstop 0080  
         __end_of__initialization 0C5E            __end_of_UgetNumUsuaris 1024  
               __end_of_LcPutChar 0C24                     ___rparam_used 000001  
                   __end_of_LcLCD 0E72                       ?_TiGetTimer 005E  
                   __end_of_SMSon 101A                    __pcstackCOMRAM 005E  
                   __end_of_Minit 1014               __end_of_WaitForBusy 0D32  
                   __end_of_Sinit 1004                     __end_of_Uinit 0A2E  
                  _escriureEEPROM 0E72                 __end_of_TiGetTics 0ECC  
                     _TiInitTimer 0DA6                           ??_LcLCD 0072  
                         ??_SMSon 0063                         ?_LcGotoXY 006B  
                       ?_LcLliure 005E                           ??_Minit 0064  
                         ??_Sinit 0064                           ??_Uinit 0063  
                  ??_UcheckExists 0063                        __pbssBANK1 0100  
                       ?_TeTeclat 005E                       _TiResetTics 0F74  
                 ?_UgetNumUsuaris 005E                     ??_UmotorUsers 0068  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 0B10                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 0F9C                       __TiRSITimer 0B78  
                ??_compareStrings 0066            __end_of_escriureEEPROM 0EA0  
                     ?_UenviaChar 0063            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0070                        ??_LcGotoXY 006C  
                    ?_MNovaLletra 005E                        ??_LcLliure 0063  
             __size_of_TiGetTimer 003A                      ?_LcCursorOff 005E  
                       ?_high_rsi 005E                           _LcClear 0ECC  
                         _CantaIR 0E10                      ?_LcNewString 0063  
                      ??_TeTeclat 006A                       _WaitForBusy 0CF2  
                  ?_CantaPartAlta 005E                           _Columns 0038  
           __end_of_SsetNovaTecla 0FEC                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00DA                           __Hparam 0000  
                 __size_of_SMotor 01AC                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
             __end_of_UmotorUsers 08A0          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                      __psmallconst 0200  
                         __pcinit 0C24      __end_of_UcheckExistsGetError 0FC4  
                      _init_ports 0F38                           __ramtop 0200  
                         __ptext0 0CB2                           __ptext1 0224  
                         __ptext2 1020                           __ptext3 0F8C  
                         __ptext4 0F9C                           __ptext5 0FAC  
                         __ptext6 0FB8                           __ptext7 1024  
                         __ptext8 1014                           __ptext9 101A  
                       _T0CONbits 000FD5                         CantaIR@IR 0065  
                         _counter 002D                       UenviaChar@c 0064  
      __end_of_escriureCharEEPROM 0F14                  LcNewString@new_s 0063  
                 WaitForBusy@Busy 006A                       Uinit@j_1016 0067  
                      ??_high_rsi 005F              end_of_initialization 0C5E  
                         _usuaris 0100           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 0067  
                   _MsetNovaTecla 0FEC               __size_of_UenviaChar 0010  
                      _novaLletra 004C                   TiGetTics@actual 0068  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        _numUsuaris 0028  
            __end_of_UcheckExists 1028                     TeTeclat@files 002E  
                   TeTeclat@state 0030                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _TRISCbits 000F94  
                       _TRISDbits 000F95                   ??_CantaPartAlta 0063  
                  ?_MsetNovaTecla 005E                         _CantaData 0DDE  
                     _UmotorUsers 0798   __end_of_UcheckExistsNotFinished 0FB8  
                  __end_of_SMSoff 1020                      ??_TiGetTimer 0063  
                  __end_of_LcInit 097A                    __end_of_SMotor 0634  
                       _LcPutChar 0BD2                    __end_of_TeInit 0FFC  
                  __end_of_Espera 0F38        __end_of_EscriuPrimeraOrdre 0AA8  
                   __pidataCOMRAM 0F58                       ?_init_ports 005E  
                       _ColumnAct 0036                      ?_TiInitTimer 005E  
             start_initialization 0C24                         _TiGetTics 0EA0  
                ??_UgetNumUsuaris 0063                  UmotorUsers@state 0024  
               __size_of_LcGotoXY 003A                __end_of_TiGetTimer 0DA6  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                    ?_TiResetTics 005E              __size_of_LcCursorOff 000C  
                      ?_CantaData 005E              _UcheckExistsGetError 0FB8  
            __size_of_LcNewString 0008                          ??_SMSoff 0063  
                        ??_LcInit 006F                         _NovaTecla 004D  
               __size_of_TeTeclat 0164                          ??_SMotor 006A  
                        ??_TeInit 0064                      ?__TiRSITimer 005E  
                        ??_Espera 006C                        ?_LcPutChar 005E  
                       _UenviaPas 0F8C                      ??_UenviaChar 0064  
                     __pbssCOMRAM 0001                        ?_TiGetTics 0063  
                 ??_MsetNovaTecla 0063                          ?_LcClear 005E  
                        ?_CantaIR 005E                    _CantaPartBaixa 0AA8  
           ?_UcheckExistsGetError 005E                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005E               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 0063                SsetNovaTecla@tecla 0063  
              __end_of_UenviaChar 0FAC                  ??_escriureEEPROM 0063  
           __size_of_UcheckExists 0004                         __pintcode 0008  
                      ?_UenviaPas 0063                   CantaPartBaixa@c 0064  
                     __smallconst 0200                    __size_of_LcLCD 0030  
                  __size_of_SMSon 0006  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008                    __size_of_Sinit 0008  
                  __size_of_Uinit 00B4            __end_of_CantaPartBaixa 0B10  
              escriureEEPROM@caca 0063                       _do_register 03A0  
                    _UcheckExists 1024                       ??_CantaData 0065  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     UenviaChar@pos 0063  
              _escriureCharEEPROM 0EF0                         _novaTecla 0050  
                     ??_LcPutChar 0071                          _RCONbits 000FD0  
                       _timerMenu 002B               ?_escriureCharEEPROM 0063  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006A  
                        _LcGotoXY 0D32                          _LcLliure 0FC4  
                     ??_TiGetTics 0065           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                      _teclaPremuda 0052  
                     LcGotoXY@Row 006B                         copy_data0 0C38  
            ??_escriureCharEEPROM 0064                   ?_CantaPartBaixa 005E  
          ??_UcheckExistsGetError 0063             escriureCharEEPROM@pos 0063  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0634                      ?_UmotorUsers 005E  
                      _EECON1bits 000FA6              __size_of_TiResetTics 0018  
                        __Hrparam 0000                         menu@state 002A  
                        __Lrparam 0000              __size_of__TiRSITimer 005A  
                     ??_UenviaPas 0064                      ??_init_ports 0063  
                 _do_check_exists 03A2                          __ptext10 0FDC  
                        __ptext11 0FC4                _EscriuPrimeraOrdre 0A2E  
                        __ptext20 0634                          __ptext12 0ECC  
                        __ptext21 0FE4                          __ptext13 0F38  
                        __ptext30 0D32                          __ptext22 0FEC  
                        __ptext14 0E72                          __ptext31 0DDE  
                        __ptext23 0FF4                          __ptext15 0798  
                        __ptext40 0F74                          __ptext32 08A0  
                        __ptext24 0FFC                          __ptext16 0EF0  
                        __ptext41 0EA0                          __ptext33 0D6C  
                        __ptext25 0488                          __ptext17 0C6C  
                        __ptext42 0A2E                          __ptext34 0FD0  
                        __ptext26 1004                          __ptext18 097A  
                        __ptext35 0CF2                          __ptext27 100C  
                        __ptext19 0DA6                          __ptext44 0B78  
                        __ptext36 0E10                          __ptext28 0E42  
                        __ptext37 0AA8                          __ptext29 0BD2  
                        __ptext38 0B10                          __ptext39 0F14  
                  CantaPartAlta@c 0064                       _lletraASCII 0051  
                        _high_rsi 0008                          _s_Timers 0001  
                     _lletraInici 0043               ?_EscriuPrimeraOrdre 005E  
                   __size_of_main 0040                     __size_of_menu 0264  
           __end_of_CantaPartAlta 0B78                     CantaData@Data 0065  
                        _tiTeclat 0031                __end_of_init_ports 0F58  
                        _setSMSon 03A4                     _SsetNovaTecla 0FE4  
            __size_of_WaitForBusy 0040                          _timerSMS 004F  
                        isa$xinst 000000                          int$flags 0075  
                    UenviaPas@pos 0063              ??_EscriuPrimeraOrdre 0063  
                      LcInit@rows 006F           _UcheckExistsNotFinished 0FAC  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0063  
                   ??_LcCursorOff 006B                     ??_LcNewString 0064  
                        intlevel2 0000                        LcPutChar@c 0071  
                  ?_SsetNovaTecla 005E                 MNovaLletra@lletra 0063  
                 compareStrings@a 0063                   compareStrings@b 0064  
                    _return_error 03A1                    _compareStrings 0C6C  
                     _tmpPassword 0019               __end_of_MNovaLletra 100C  
           __end_of_MsetNovaTecla 0FF4                       _tmpUsername 003A  
             __end_of_LcCursorOff 0FDC                       SMotor@state 0032  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 0FE4  
            __size_of_UmotorUsers 0108  
