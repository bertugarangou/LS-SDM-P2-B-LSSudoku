

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 27 13:11:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.32
    75                           ; Generated 02/02/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4321 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataCOMRAM
   111  0000'                    __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _lletraInici
   115  0000' 41                 	db	65
   116  0001' 44                 	db	68
   117  0002' 47                 	db	71
   118  0003' 4A                 	db	74
   119  0004' 4D                 	db	77
   120  0005' 50                 	db	80
   121  0006' 54                 	db	84
   122  0007' 57                 	db	87
   123  0008' 00                 	db	0
   124                           
   125                           ;initializer for GLCDMotor@max2
   126  0009' 0F                 	db	15
   127                           
   128                           ;initializer for GLCDMotor@max1
   129  000A' 0F                 	db	15
   130                           
   131                           ;initializer for _novaLletra
   132  000B' FF                 	db	255
   133                           
   134                           ;initializer for _NovaTecla
   135  000C' FF                 	db	255
   136                           
   137                           ;initializer for _ultimaTecla
   138  000D' FF                 	db	255
   139                           
   140                           ;initializer for _timerSMS
   141  000E' FF                 	db	255
   142                           
   143                           ;initializer for _novaTecla
   144  000F' FF                 	db	255
   145                           
   146                           ;initializer for _lletraASCII
   147  0010' FF                 	db	255
   148                           
   149                           	psect	idataBANK0
   150  0000'                    __pidataBANK0:
   151                           	callstack 0
   152                           
   153                           ;initializer for _teclaPremuda
   154  0000' 01                 	db	1
   155  0001' 02                 	db	2
   156  0002' 03                 	db	3
   157  0003' 04                 	db	4
   158  0004' 05                 	db	5
   159  0005' 06                 	db	6
   160  0006' 07                 	db	7
   161  0007' 08                 	db	8
   162  0008' 09                 	db	9
   163  0009' 0A                 	db	10
   164  000A' 00                 	db	0
   165  000B' 0B                 	db	11
   166                           
   167                           	psect	smallconst
   168  0000'                    __psmallconst:
   169                           	callstack 0
   170  0000' 00                 	db	0
   171  0001'                    _menu:
   172                           	callstack 0
   173  0001' 31                 	db	49
   174  0002' 2E                 	db	46
   175  0003' 20                 	db	32
   176  0004' 50                 	db	80
   177  0005' 6C                 	db	108
   178  0006' 61                 	db	97
   179  0007' 79                 	db	121
   180  0008' 20                 	db	32
   181  0009' 61                 	db	97
   182  000A' 20                 	db	32
   183  000B' 47                 	db	71
   184  000C' 61                 	db	97
   185  000D' 6D                 	db	109
   186  000E' 65                 	db	101
   187  000F' 00                 	db	0
   188  0010' 00                 	db	0
   189  0011' 00                 	db	0
   190  0012' 00                 	db	0
   191  0013' 00                 	db	0
   192  0014' 00                 	db	0
   193  0015' 00                 	db	0
   194  0016' 00                 	db	0
   195  0017' 32                 	db	50
   196  0018' 2E                 	db	46
   197  0019' 20                 	db	32
   198  001A' 4D                 	db	77
   199  001B' 6F                 	db	111
   200  001C' 64                 	db	100
   201  001D' 69                 	db	105
   202  001E' 66                 	db	102
   203  001F' 79                 	db	121
   204  0020' 20                 	db	32
   205  0021' 54                 	db	84
   206  0022' 69                 	db	105
   207  0023' 6D                 	db	109
   208  0024' 65                 	db	101
   209  0025' 00                 	db	0
   210  0026' 00                 	db	0
   211  0027' 00                 	db	0
   212  0028' 00                 	db	0
   213  0029' 00                 	db	0
   214  002A' 00                 	db	0
   215  002B' 00                 	db	0
   216  002C' 00                 	db	0
   217  002D' 33                 	db	51
   218  002E' 2E                 	db	46
   219  002F' 20                 	db	32
   220  0030' 53                 	db	83
   221  0031' 68                 	db	104
   222  0032' 6F                 	db	111
   223  0033' 77                 	db	119
   224  0034' 20                 	db	32
   225  0035' 47                 	db	71
   226  0036' 65                 	db	101
   227  0037' 6E                 	db	110
   228  0038' 65                 	db	101
   229  0039' 72                 	db	114
   230  003A' 61                 	db	97
   231  003B' 6C                 	db	108
   232  003C' 20                 	db	32
   233  003D' 54                 	db	84
   234  003E' 6F                 	db	111
   235  003F' 70                 	db	112
   236  0040' 20                 	db	32
   237  0041' 35                 	db	53
   238  0042' 20                 	db	32
   239  0043' 34                 	db	52
   240  0044' 2E                 	db	46
   241  0045' 20                 	db	32
   242  0046' 4C                 	db	76
   243  0047' 6F                 	db	111
   244  0048' 67                 	db	103
   245  0049' 6F                 	db	111
   246  004A' 75                 	db	117
   247  004B' 74                 	db	116
   248  004C' 00                 	db	0
   249  004D' 00                 	db	0
   250  004E' 00                 	db	0
   251  004F' 00                 	db	0
   252  0050' 00                 	db	0
   253  0051' 00                 	db	0
   254  0052' 00                 	db	0
   255  0053' 00                 	db	0
   256  0054' 00                 	db	0
   257  0055' 00                 	db	0
   258  0056' 00                 	db	0
   259  0057' 00                 	db	0
   260  0058' 00                 	db	0
   261  0059' 35                 	db	53
   262  005A' 2E                 	db	46
   263  005B' 20                 	db	32
   264  005C' 53                 	db	83
   265  005D' 68                 	db	104
   266  005E' 6F                 	db	111
   267  005F' 77                 	db	119
   268  0060' 20                 	db	32
   269  0061' 41                 	db	65
   270  0062' 6C                 	db	108
   271  0063' 6C                 	db	108
   272  0064' 20                 	db	32
   273  0065' 55                 	db	85
   274  0066' 73                 	db	115
   275  0067' 65                 	db	101
   276  0068' 72                 	db	114
   277  0069' 73                 	db	115
   278  006A' 00                 	db	0
   279  006B' 00                 	db	0
   280  006C' 00                 	db	0
   281  006D' 00                 	db	0
   282  006E' 00                 	db	0
   283  006F'                    __end_of_menu:
   284                           	callstack 0
   285  0000                     _EECON2	set	4007
   286  0000                     _EEDATA	set	4008
   287  0000                     _EEADR	set	4009
   288  0000                     _T0CONbits	set	4053
   289  0000                     _TMR0L	set	4054
   290  0000                     _TMR0H	set	4055
   291  0000                     _T0CON	set	4053
   292  0000                     _INTCONbits	set	4082
   293  0000                     _RCONbits	set	4048
   294  0000                     _PORTDbits	set	3971
   295  0000                     _EECON1bits	set	4006
   296  0000                     _LATD	set	3980
   297  0000                     _TRISD	set	3989
   298  0000                     _TRISC	set	3988
   299  0000                     _LATBbits	set	3978
   300  0000                     _TRISB	set	3987
   301  0000                     _TRISA	set	3986
   302  0000                     _PORTCbits	set	3970
   303  0000                     _LATDbits	set	3980
   304  0000                     _LATCbits	set	3979
   305  0000                     _TRISDbits	set	3989
   306  0000                     _TRISCbits	set	3988
   307  006F'                    STR_2:
   308  006F' 32                 	db	50	;'2'
   309  0070' 2E                 	db	46
   310  0071' 52                 	db	82	;'R'
   311  0072' 45                 	db	69	;'E'
   312  0073' 47                 	db	71	;'G'
   313  0074' 49                 	db	73	;'I'
   314  0075' 53                 	db	83	;'S'
   315  0076' 54                 	db	84	;'T'
   316  0077' 45                 	db	69	;'E'
   317  0078' 52                 	db	82	;'R'
   318  0079' 00                 	db	0
   319  007A'                    STR_1:
   320  007A' 31                 	db	49	;'1'
   321  007B' 2E                 	db	46
   322  007C' 4C                 	db	76	;'L'
   323  007D' 4F                 	db	79	;'O'
   324  007E' 47                 	db	71	;'G'
   325  007F' 49                 	db	73	;'I'
   326  0080' 4E                 	db	78	;'N'
   327  0081' 00                 	db	0
   328  0082'                    STR_4:
   329  0082' 50                 	db	80	;'P'
   330  0083' 53                 	db	83	;'S'
   331  0084' 57                 	db	87	;'W'
   332  0085' 44                 	db	68	;'D'
   333  0086' 3A                 	db	58	;':'
   334  0087' 20                 	db	32
   335  0088' 00                 	db	0
   336  0089'                    STR_3:
   337  0089' 55                 	db	85	;'U'
   338  008A' 53                 	db	83	;'S'
   339  008B' 45                 	db	69	;'E'
   340  008C' 52                 	db	82	;'R'
   341  008D' 3A                 	db	58	;':'
   342  008E' 20                 	db	32
   343  008F' 00                 	db	0
   344  0090' 00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           ; #config settings
   347                           
   348                           	psect	cinit
   349  0000'                    __pcinit:
   350                           	callstack 0
   351  0000'                    start_initialization:
   352                           	callstack 0
   353  0000'                    __initialization:
   354                           	callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK0 (12 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358  0000' 0E00'              	movlw	low __pidataBANK0
   359  0002' 6EF6               	movwf	tblptrl,c
   360  0004' 0E00'              	movlw	high __pidataBANK0
   361  0006' 6EF7               	movwf	tblptrh,c
   362  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   363  000A' 6EF8               	movwf	tblptru,c
   364  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   365  0010' EE10 F00C          	lfsr	1,12
   366  0014'                    copy_data0:
   367  0014' 0009               	tblrd		*+
   368  0016' CFF5 FFEE          	movff	tablat,postinc0
   369  001A' 50E5               	movf	postdec1,w,c
   370  001C' 50E1               	movf	fsr1l,w,c
   371  001E' E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to COMRAM (17 bytes)
   374                           ; load TBLPTR registers with __pidataCOMRAM
   375  0020' 0E00'              	movlw	low __pidataCOMRAM
   376  0022' 6EF6               	movwf	tblptrl,c
   377  0024' 0E00'              	movlw	high __pidataCOMRAM
   378  0026' 6EF7               	movwf	tblptrh,c
   379  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   380  002A' 6EF8               	movwf	tblptru,c
   381  002C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   382  0030' EE10 F011          	lfsr	1,17
   383  0034'                    copy_data1:
   384  0034' 0009               	tblrd		*+
   385  0036' CFF5 FFEE          	movff	tablat,postinc0
   386  003A' 50E5               	movf	postdec1,w,c
   387  003C' 50E1               	movf	fsr1l,w,c
   388  003E' E1FA               	bnz	copy_data1
   389                           
   390                           ; Clear objects allocated to BANK1 (184 bytes)
   391  0040' EE00' F000'        	lfsr	0,__pbssBANK1
   392  0044' 0EB8               	movlw	184
   393  0046'                    clear_0:
   394  0046' 6AEE               	clrf	postinc0,c
   395  0048' 06E8               	decf	wreg,f,c
   396  004A' E1FD               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   399  004C' 6A00'              	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   400                           
   401                           ; Clear objects allocated to COMRAM (83 bytes)
   402  004E' EE00' F000'        	lfsr	0,__pbssCOMRAM
   403  0052' 0E53               	movlw	83
   404  0054'                    clear_1:
   405  0054' 6AEE               	clrf	postinc0,c
   406  0056' 06E8               	decf	wreg,f,c
   407  0058' E1FD               	bnz	clear_1
   408  005A'                    end_of_initialization:
   409                           	callstack 0
   410  005A'                    __end_of__initialization:
   411                           	callstack 0
   412  005A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   413  005C' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   414  005E' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   415  0060' 6EF8               	movwf	tblptru,c
   416  0062' 0100               	movlb	0
   417  0064' EF00' F000'        	goto	_main	;jump to C main() function
   418                           
   419                           	psect	bitbssCOMRAM
   420  0000'                    __pbitbssCOMRAM:
   421                           	callstack 0
   422  0000'                    _newString:
   423                           	callstack 0
   424  0000'                    	ds	1
   425  0001'                    _ferMenu:
   426                           	callstack 0
   427  0001'                    	ds	1
   428  0002'                    _reproduir:
   429                           	callstack 0
   430  0002'                    	ds	1
   431  0003'                    _do_register:
   432                           	callstack 0
   433  0003'                    	ds	1
   434  0004'                    _do_check_exists:
   435                           	callstack 0
   436  0004'                    	ds	1
   437  0005'                    _loginNOTRegister:
   438                           	callstack 0
   439  0005'                    	ds	1
   440  0006'                    _setSMSon:
   441                           	callstack 0
   442  0006'                    	ds	1
   443  0007'                    _nou_s:
   444                           	callstack 0
   445  0007'                    	ds	1
   446                           
   447                           	psect	bssCOMRAM
   448  0000'                    __pbssCOMRAM:
   449                           	callstack 0
   450  0000'                    _s_Timers:
   451                           	callstack 0
   452  0000'                    	ds	24
   453  0018'                    _tmpPassword:
   454                           	callstack 0
   455  0018'                    	ds	9
   456  0021'                    _h_Tics:
   457                           	callstack 0
   458  0021'                    	ds	2
   459  0023'                    GLCDMotor@length2:
   460                           	callstack 0
   461  0023'                    	ds	1
   462  0024'                    GLCDMotor@length1:
   463                           	callstack 0
   464  0024'                    	ds	1
   465  0025'                    GLCDMotor@k2:
   466                           	callstack 0
   467  0025'                    	ds	1
   468  0026'                    GLCDMotor@k1:
   469                           	callstack 0
   470  0026'                    	ds	1
   471  0027'                    GLCDMotor@min2:
   472                           	callstack 0
   473  0027'                    	ds	1
   474  0028'                    GLCDMotor@min1:
   475                           	callstack 0
   476  0028'                    	ds	1
   477  0029'                    GLCDMotor@j:
   478                           	callstack 0
   479  0029'                    	ds	1
   480  002A'                    GLCDMotor@state:
   481                           	callstack 0
   482  002A'                    	ds	1
   483  002B'                    _menuDaltGLCD:
   484                           	callstack 0
   485  002B'                    	ds	1
   486  002C'                    _timerGLCD:
   487                           	callstack 0
   488  002C'                    	ds	1
   489  002D'                    motorAltaveu@state:
   490                           	callstack 0
   491  002D'                    	ds	1
   492  002E'                    _copsNota:
   493                           	callstack 0
   494  002E'                    	ds	1
   495  002F'                    _timerAltaveu:
   496                           	callstack 0
   497  002F'                    	ds	1
   498  0030'                    _nota:
   499                           	callstack 0
   500  0030'                    	ds	1
   501  0031'                    UmotorUsers@state:
   502                           	callstack 0
   503  0031'                    	ds	1
   504  0032'                    _usuariLoguejat:
   505                           	callstack 0
   506  0032'                    	ds	1
   507  0033'                    _j:
   508                           	callstack 0
   509  0033'                    	ds	1
   510  0034'                    _i:
   511                           	callstack 0
   512  0034'                    	ds	1
   513  0035'                    _indexNextUserStruct:
   514                           	callstack 0
   515  0035'                    	ds	1
   516  0036'                    _indexNextUser:
   517                           	callstack 0
   518  0036'                    	ds	1
   519  0037'                    _numUsuaris:
   520                           	callstack 0
   521  0037'                    	ds	1
   522  0038'                    _currentUsrIndex:
   523                           	callstack 0
   524  0038'                    	ds	1
   525  0039'                    menu@state:
   526                           	callstack 0
   527  0039'                    	ds	1
   528  003A'                    _menuDalt:
   529                           	callstack 0
   530  003A'                    	ds	1
   531  003B'                    _timerMenu:
   532                           	callstack 0
   533  003B'                    	ds	1
   534  003C'                    _tmp:
   535                           	callstack 0
   536  003C'                    	ds	1
   537  003D'                    _counter:
   538                           	callstack 0
   539  003D'                    	ds	1
   540  003E'                    TeTeclat@files:
   541                           	callstack 0
   542  003E'                    	ds	1
   543  003F'                    TeTeclat@cols:
   544                           	callstack 0
   545  003F'                    	ds	1
   546  0040'                    TeTeclat@state:
   547                           	callstack 0
   548  0040'                    	ds	1
   549  0041'                    _tiTeclat:
   550                           	callstack 0
   551  0041'                    	ds	1
   552  0042'                    SMotor@state:
   553                           	callstack 0
   554  0042'                    	ds	1
   555  0043'                    _sumaPulsacions:
   556                           	callstack 0
   557  0043'                    	ds	1
   558  0044'                    _s_ptr:
   559                           	callstack 0
   560  0044'                    	ds	1
   561  0045'                    _Timer:
   562                           	callstack 0
   563  0045'                    	ds	1
   564  0046'                    _ColumnAct:
   565                           	callstack 0
   566  0046'                    	ds	1
   567  0047'                    _RowAct:
   568                           	callstack 0
   569  0047'                    	ds	1
   570  0048'                    _Columns:
   571                           	callstack 0
   572  0048'                    	ds	1
   573  0049'                    _Rows:
   574                           	callstack 0
   575  0049'                    	ds	1
   576  004A'                    _tmpUsername:
   577                           	callstack 0
   578  004A'                    	ds	9
   579                           
   580                           	psect	dataCOMRAM
   581  0000'                    __pdataCOMRAM:
   582                           	callstack 0
   583  0000'                    _lletraInici:
   584                           	callstack 0
   585  0000'                    	ds	9
   586  0009'                    GLCDMotor@max2:
   587                           	callstack 0
   588  0009'                    	ds	1
   589  000A'                    GLCDMotor@max1:
   590                           	callstack 0
   591  000A'                    	ds	1
   592  000B'                    _novaLletra:
   593                           	callstack 0
   594  000B'                    	ds	1
   595  000C'                    _NovaTecla:
   596                           	callstack 0
   597  000C'                    	ds	1
   598  000D'                    _ultimaTecla:
   599                           	callstack 0
   600  000D'                    	ds	1
   601  000E'                    _timerSMS:
   602                           	callstack 0
   603  000E'                    	ds	1
   604  000F'                    _novaTecla:
   605                           	callstack 0
   606  000F'                    	ds	1
   607  0010'                    _lletraASCII:
   608                           	callstack 0
   609  0010'                    	ds	1
   610                           
   611                           	psect	dataBANK0
   612  0000'                    __pdataBANK0:
   613                           	callstack 0
   614  0000'                    _teclaPremuda:
   615                           	callstack 0
   616  0000'                    	ds	12
   617                           
   618                           	psect	bssBANK1
   619  0000'                    __pbssBANK1:
   620                           	callstack 0
   621  0000'                    _usuaris:
   622                           	callstack 0
   623  0000'                    	ds	184
   624                           
   625                           	psect	cstackBANK0
   626  0000'                    __pcstackBANK0:
   627                           	callstack 0
   628  0000'                    ??_menu:
   629  0000'                    ??_GLCDMotor:
   630                           
   631                           ; 1 bytes @ 0x0
   632  0000'                    	ds	2
   633                           
   634                           	psect	cstackCOMRAM
   635  0000'                    __pcstackCOMRAM:
   636                           	callstack 0
   637  0000'                    
   638                           ; 1 bytes @ 0x0
   639  0000'                    	ds	1
   640  0001'                    ??_high_rsi:
   641                           
   642                           ; 1 bytes @ 0x1
   643  0001'                    	ds	4
   644  0005'                    ??_EscriuPrimeraOrdre:
   645  0005'                    ??_Uinit:
   646  0005'                    ??_UcheckExistsGetError:
   647  0005'                    ??_CantaPartAlta:
   648  0005'                    ??_CantaPartBaixa:
   649  0005'                    ?_TiGetTics:
   650                           	callstack 0
   651  0005'                    LcNewString@new_s:
   652                           	callstack 0
   653  0005'                    SsetNovaTecla@tecla:
   654                           	callstack 0
   655  0005'                    TiResetTics@Handle:
   656                           	callstack 0
   657  0005'                    MsetNovaTecla@tecla:
   658                           	callstack 0
   659  0005'                    MNovaLletra@lletra:
   660                           	callstack 0
   661  0005'                    UenviaChar@pos:
   662                           	callstack 0
   663  0005'                    UenviaPas@pos:
   664                           	callstack 0
   665  0005'                    escriureCharEEPROM@pos:
   666                           	callstack 0
   667  0005'                    compareStrings@a:
   668                           	callstack 0
   669  0005'                    escriureEEPROM@caca:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x5
   673  0005'                    	ds	1
   674  0006'                    CantaPartAlta@c:
   675                           	callstack 0
   676  0006'                    CantaPartBaixa@c:
   677                           	callstack 0
   678  0006'                    EscriuPrimeraOrdre@ordre:
   679                           	callstack 0
   680  0006'                    UenviaChar@c:
   681                           	callstack 0
   682  0006'                    UenviaPas@c:
   683                           	callstack 0
   684  0006'                    escriureCharEEPROM@c:
   685                           	callstack 0
   686  0006'                    compareStrings@b:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x6
   690  0006'                    	ds	1
   691  0007'                    ??_TiGetTics:
   692  0007'                    CantaIR@IR:
   693                           	callstack 0
   694  0007'                    CantaData@Data:
   695                           	callstack 0
   696  0007'                    Uinit@i:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x7
   700  0007'                    	ds	1
   701  0008'                    ??_compareStrings:
   702  0008'                    Uinit@j:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x8
   706  0008'                    	ds	1
   707  0009'                    TiGetTics@Handle:
   708                           	callstack 0
   709  0009'                    Uinit@j_1034:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x9
   713  0009'                    	ds	1
   714  000A'                    ??_UmotorUsers:
   715  000A'                    TiGetTics@actual:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0xA
   719  000A'                    	ds	2
   720  000C'                    ??_SMotor:
   721  000C'                    ??_motorAltaveu:
   722  000C'                    ??_TeTeclat:
   723  000C'                    WaitForBusy@Busy:
   724                           	callstack 0
   725  000C'                    Espera@ms:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0xC
   729  000C'                    	ds	1
   730  000D'                    LcGotoXY@Row:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0xD
   734  000D'                    	ds	1
   735  000E'                    ??_Espera:
   736  000E'                    LcGotoXY@Fisics:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0xE
   740  000E'                    	ds	1
   741  000F'                    Espera@Timer:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0xF
   745  000F'                    	ds	1
   746  0010'                    LcInit@columns:
   747                           	callstack 0
   748  0010'                    _LcGotoXY$342:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x10
   752  0010'                    	ds	1
   753  0011'                    LcInit@rows:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x11
   757  0011'                    	ds	1
   758  0012'                    LcGotoXY@Column:
   759                           	callstack 0
   760  0012'                    LcInit@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x12
   764  0012'                    	ds	1
   765  0013'                    LcPutChar@c:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x13
   769  0013'                    	ds	1
   770  0014'                    
   771                           ; 1 bytes @ 0x14
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 71 in file "main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1
   791 ;;      Params:         0       0       0
   792 ;;      Locals:         0       0       0
   793 ;;      Temps:          0       0       0
   794 ;;      Totals:         0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels required when called: 9
   797 ;; This function calls:
   798 ;;		_GLCDInit
   799 ;;		_GLCDMotor
   800 ;;		_LcInit
   801 ;;		_LcLCD
   802 ;;		_Minit
   803 ;;		_SMotor
   804 ;;		_Sinit
   805 ;;		_TeInit
   806 ;;		_TeTeclat
   807 ;;		_TiInitTimer
   808 ;;		_Uinit
   809 ;;		_UmotorUsers
   810 ;;		_escriureEEPROM
   811 ;;		_initAltaveu
   812 ;;		_init_ports
   813 ;;		_menu
   814 ;;		_motorAltaveu
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text0
   821  0000'                    __ptext0:
   822                           	callstack 0
   823  0000'                    _main:
   824                           	callstack 22
   825                           
   826                           ;main.c: 72:     init_ports();
   827                           
   828                           ;incstack = 0
   829  0000' EC00' F000'        	call	_init_ports	;wreg free
   830                           
   831                           ;main.c: 73:     escriureEEPROM();
   832  0004' EC00' F000'        	call	_escriureEEPROM	;wreg free
   833                           
   834                           ;main.c: 74:     TiInitTimer();
   835  0008' EC00' F000'        	call	_TiInitTimer	;wreg free
   836                           
   837                           ;main.c: 75:     TeInit();
   838  000C' EC00' F000'        	call	_TeInit	;wreg free
   839                           
   840                           ;main.c: 76:     Sinit();
   841  0010' EC00' F000'        	call	_Sinit	;wreg free
   842                           
   843                           ;main.c: 77:     SMotor();
   844  0014' EC00' F000'        	call	_SMotor	;wreg free
   845                           
   846                           ;main.c: 78:     Uinit();
   847  0018' EC00' F000'        	call	_Uinit	;wreg free
   848                           
   849                           ;main.c: 79:     initAltaveu();
   850  001C' EC00' F000'        	call	_initAltaveu	;wreg free
   851                           
   852                           ;main.c: 80:     GLCDInit();
   853  0020' EC00' F000'        	call	_GLCDInit	;wreg free
   854                           
   855                           ;main.c: 82:     LcInit(2,16);
   856  0024' 0E10               	movlw	16
   857  0026' 6E00'              	movwf	LcInit@columns^0,c
   858  0028' 0E02               	movlw	2
   859  002A' EC00' F000'        	call	_LcInit
   860                           
   861                           ;main.c: 83:     Minit();
   862  002E' EC00' F000'        	call	_Minit	;wreg free
   863  0032'                    l4926:
   864                           
   865                           ;main.c: 88:         menu();
   866  0032' EC00' F000'        	call	_menu	;wreg free
   867                           
   868                           ;main.c: 89:         motorAltaveu();
   869  0036' EC00' F000'        	call	_motorAltaveu	;wreg free
   870                           
   871                           ;main.c: 90:         UmotorUsers();
   872  003A' EC00' F000'        	call	_UmotorUsers	;wreg free
   873                           
   874                           ;main.c: 91:         GLCDMotor();
   875  003E' EC00' F000'        	call	_GLCDMotor	;wreg free
   876                           
   877                           ;main.c: 92:         TeTeclat();
   878  0042' EC00' F000'        	call	_TeTeclat	;wreg free
   879                           
   880                           ;main.c: 93:         SMotor();
   881  0046' EC00' F000'        	call	_SMotor	;wreg free
   882                           
   883                           ;main.c: 94:         LcLCD();
   884  004A' EC00' F000'        	call	_LcLCD	;wreg free
   885  004E' D7F1               	goto	l4926
   886  0050'                    __end_of_main:
   887                           	callstack 0
   888                           
   889 ;; *************** function _motorAltaveu *****************
   890 ;; Defined at:
   891 ;;		line 17 in file "Altaveu.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1
   905 ;;      Params:         0       0       0
   906 ;;      Locals:         0       0       0
   907 ;;      Temps:          3       0       0
   908 ;;      Totals:         3       0       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 3
   912 ;; This function calls:
   913 ;;		_TiGetTics
   914 ;;		_TiResetTics
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text1
   921  0000'                    __ptext1:
   922                           	callstack 0
   923  0000'                    _motorAltaveu:
   924                           	callstack 27
   925                           
   926                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
   927                           
   928                           ;incstack = 0
   929  0000' D048               	goto	l4536
   930  0002'                    l645:
   931                           
   932                           ;Altaveu.c: 22:    if (reproduir) {
   933  0002' A000'              	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   934  0004' 0012               	return	
   935                           
   936                           ;Altaveu.c: 23:     nota = 1;
   937  0006' 0E01               	movlw	1
   938  0008' 6E00'              	movwf	_nota^0,c
   939                           
   940                           ;Altaveu.c: 24:     copsNota = 0;
   941  000A' 0E00               	movlw	0
   942  000C' 6E00'              	movwf	_copsNota^0,c
   943                           
   944                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
   945  000E' 5000'              	movf	_timerAltaveu^0,w,c
   946  0010' EC00' F000'        	call	_TiResetTics
   947  0014'                    l4500:
   948                           
   949                           ;Altaveu.c: 26:     state = 1;
   950  0014' 0E01               	movlw	1
   951  0016' 6E00'              	movwf	motorAltaveu@state^0,c
   952  0018' 0012               	return	
   953  001A'                    l4502:
   954                           
   955                           ;Altaveu.c: 30:    if (nota > 5) {
   956  001A' 0E05               	movlw	5
   957  001C' 6400'              	cpfsgt	_nota^0,c
   958  001E' D004               	goto	l4508
   959                           
   960                           ;Altaveu.c: 31:     reproduir = 0;
   961  0020' 9000'              	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   962                           
   963                           ;Altaveu.c: 32:     state = 0;
   964  0022' 0E00               	movlw	0
   965  0024' 6E00'              	movwf	motorAltaveu@state^0,c
   966                           
   967                           ;Altaveu.c: 33:    }
   968  0026' 0012               	return	
   969  0028'                    l4508:
   970  0028' 0EA8               	movlw	168
   971  002A' 1800'              	xorwf	_copsNota^0,w,c
   972  002C' A4D8               	btfss	status,2,c
   973  002E' D004               	goto	l4516
   974                           
   975                           ;Altaveu.c: 35:     nota++;
   976  0030' 2A00'              	incf	_nota^0,f,c
   977                           
   978                           ;Altaveu.c: 36:     copsNota = 0;
   979  0032' 0E00               	movlw	0
   980  0034' 6E00'              	movwf	_copsNota^0,c
   981  0036' D7EE               	goto	l4500
   982  0038'                    l4516:
   983  0038' 5000'              	movf	_timerAltaveu^0,w,c
   984  003A' EC00' F000'        	call	_TiGetTics
   985  003E' 5000'              	movf	_nota^0,w,c
   986  0040' 6E00'              	movwf	??_motorAltaveu^0,c
   987  0042' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
   988  0044' 5000'              	movf	?_TiGetTics^0,w,c
   989  0046' 5C00'              	subwf	??_motorAltaveu^0,w,c
   990  0048' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
   991  004A' 0A80               	xorlw	128
   992  004C' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
   993  004E' 5000'              	movf	(?_TiGetTics+1)^0,w,c
   994  0050' 0A80               	xorlw	128
   995  0052' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
   996  0054' B0D8               	btfsc	status,0,c
   997  0056' 0012               	return	
   998                           
   999                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1000  0058' 808A               	bsf	138,0,c	;volatile
  1001                           
  1002                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1003  005A' 5000'              	movf	_timerAltaveu^0,w,c
  1004  005C' EC00' F000'        	call	_TiResetTics
  1005                           
  1006                           ;Altaveu.c: 42:     state = 2;
  1007  0060' 0E02               	movlw	2
  1008  0062' 6E00'              	movwf	motorAltaveu@state^0,c
  1009  0064' 0012               	return	
  1010  0066'                    l4524:
  1011                           
  1012                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1013  0066' 5000'              	movf	_timerAltaveu^0,w,c
  1014  0068' EC00' F000'        	call	_TiGetTics
  1015  006C' 5000'              	movf	_nota^0,w,c
  1016  006E' 6E00'              	movwf	??_motorAltaveu^0,c
  1017  0070' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  1018  0072' 5000'              	movf	?_TiGetTics^0,w,c
  1019  0074' 5C00'              	subwf	??_motorAltaveu^0,w,c
  1020  0076' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  1021  0078' 0A80               	xorlw	128
  1022  007A' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
  1023  007C' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  1024  007E' 0A80               	xorlw	128
  1025  0080' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
  1026  0082' B0D8               	btfsc	status,0,c
  1027  0084' 0012               	return	
  1028                           
  1029                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1030  0086' 908A               	bcf	138,0,c	;volatile
  1031                           
  1032                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1033  0088' 5000'              	movf	_timerAltaveu^0,w,c
  1034  008A' EC00' F000'        	call	_TiResetTics
  1035                           
  1036                           ;Altaveu.c: 49:     copsNota++;
  1037  008E' 2A00'              	incf	_copsNota^0,f,c
  1038  0090' D7C1               	goto	l4500
  1039  0092'                    l4536:
  1040  0092' 5000'              	movf	motorAltaveu@state^0,w,c
  1041  0094' 6E00'              	movwf	??_motorAltaveu^0,c
  1042  0096' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  1043                           
  1044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1045                           ; Switch size 1, requested type "simple"
  1046                           ; Number of cases is 1, Range of values is 0 to 0
  1047                           ; switch strategies available:
  1048                           ; Name         Instructions Cycles
  1049                           ; simple_byte            4     3 (average)
  1050                           ;	Chosen strategy is simple_byte
  1051  0098' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  1052  009A' 0A00               	xorlw	0	; case 0
  1053  009C' A4D8               	btfss	status,2,c
  1054  009E' 0012               	return	
  1055                           
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 3, Range of values is 0 to 2
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte           10     6 (average)
  1061                           ;	Chosen strategy is simple_byte
  1062  00A0' 5000'              	movf	??_motorAltaveu^0,w,c
  1063  00A2' 0A00               	xorlw	0	; case 0
  1064  00A4' B4D8               	btfsc	status,2,c
  1065  00A6' D7AD               	goto	l645
  1066  00A8' 0A01               	xorlw	1	; case 1
  1067  00AA' B4D8               	btfsc	status,2,c
  1068  00AC' D7B6               	goto	l4502
  1069  00AE' 0A03               	xorlw	3	; case 2
  1070  00B0' A4D8               	btfss	status,2,c
  1071  00B2' 0012               	return	
  1072  00B4' D7D8               	goto	l4524
  1073  00B6'                    __end_of_motorAltaveu:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _menu *****************
  1077 ;; Defined at:
  1078 ;;		line 6 in file "GestioLCD.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1
  1092 ;;      Params:         0       0       0
  1093 ;;      Locals:         0       0       0
  1094 ;;      Temps:          0       2       0
  1095 ;;      Totals:         0       2       0
  1096 ;;Total ram usage:        2 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 6
  1099 ;; This function calls:
  1100 ;;		_LcClear
  1101 ;;		_LcGotoXY
  1102 ;;		_LcLliure
  1103 ;;		_LcNewString
  1104 ;;		_LcPutChar
  1105 ;;		_SMSoff
  1106 ;;		_SMSon
  1107 ;;		_UcheckExists
  1108 ;;		_UcheckExistsGetError
  1109 ;;		_UcheckExistsNotFinished
  1110 ;;		_UenviaChar
  1111 ;;		_UenviaPas
  1112 ;;		_UgetNumUsuaris
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;;		_motorAltaveu
  1116 ;;		_UgetNumUsuaris
  1117 ;;		_UenviaPas
  1118 ;;		_UenviaChar
  1119 ;;		_UcheckExistsNotFinished
  1120 ;;		_UcheckExistsGetError
  1121 ;;		_UcheckExists
  1122 ;;		_SMSon
  1123 ;;		_SMSoff
  1124 ;;		_init_ports
  1125 ;;		_initAltaveu
  1126 ;;		_escriureEEPROM
  1127 ;;		_UmotorUsers
  1128 ;;		_escriureCharEEPROM
  1129 ;;		_compareStrings
  1130 ;;		_Uinit
  1131 ;;		_TiInitTimer
  1132 ;;		_TeTeclat
  1133 ;;		_SsetNovaTecla
  1134 ;;		_MsetNovaTecla
  1135 ;;		_TeInit
  1136 ;;		_Sinit
  1137 ;;		_SMotor
  1138 ;;		_MNovaLletra
  1139 ;;		_Minit
  1140 ;;		_LcLCD
  1141 ;;		_LcInit
  1142 ;;		_LcCursorOff
  1143 ;;		_EscriuPrimeraOrdre
  1144 ;;		_GLCDMotor
  1145 ;;		_LcPutFletxa
  1146 ;;		_LcInsertFletxa
  1147 ;;		_LcPutChar
  1148 ;;		_CantaData
  1149 ;;		_LcNewString
  1150 ;;		_LcLliure
  1151 ;;		_LcClear
  1152 ;;		_LcGotoXY
  1153 ;;		_WaitForBusy
  1154 ;;		_CantaIR
  1155 ;;		_CantaPartBaixa
  1156 ;;		_CantaPartAlta
  1157 ;;		_Espera
  1158 ;;		_TiResetTics
  1159 ;;		_TiGetTics
  1160 ;;		_GLCDInit
  1161 ;;		_TiGetTimer
  1162 ;;		_GLCDMotor
  1163 ;;		_LcLCD
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text2
  1168  0000'                    __ptext2:
  1169                           	callstack 0
  1170  0000'                    _menu:
  1171                           	callstack 24
  1172                           
  1173                           ;Menu.c: 27:   static char state = 0;;Menu.c: 29:  switch(state) {
  1174                           
  1175                           ;incstack = 0
  1176  0000' D102               	goto	l4486
  1177  0002'                    l4326:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;Menu.c: 31:    LcClear();
  1181  0002' EC00' F000'        	call	_LcClear	;wreg free
  1182                           
  1183                           ;Menu.c: 32:    LcNewString("1.LOGIN");
  1184  0006' 0E00'              	movlw	low STR_1
  1185  0008' 6E00'              	movwf	LcNewString@new_s^0,c
  1186  000A' EC00' F000'        	call	_LcNewString	;wreg free
  1187                           
  1188                           ;Menu.c: 33:    state = 1;
  1189  000E' 0E01               	movlw	1
  1190  0010' 6E00'              	movwf	menu@state^0,c
  1191                           
  1192                           ;Menu.c: 34:   break;
  1193  0012' 0012               	return	
  1194  0014'                    l4332:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;Menu.c: 36:    if (LcLliure()) {
  1198  0014' EC00' F000'        	call	_LcLliure	;wreg free
  1199  0018' A0D8               	btfss	status,0,c
  1200  001A' 0012               	return	
  1201                           
  1202                           ;Menu.c: 37:     LcGotoXY(0,1);
  1203  001C' 0E01               	movlw	1
  1204  001E' 6E00'              	movwf	LcGotoXY@Row^0,c
  1205  0020' 0E00               	movlw	0
  1206  0022' EC00' F000'        	call	_LcGotoXY
  1207                           
  1208                           ;Menu.c: 38:     LcNewString("2.REGISTER");
  1209  0026' 0E00'              	movlw	low STR_2
  1210  0028' 6E00'              	movwf	LcNewString@new_s^0,c
  1211  002A' EC00' F000'        	call	_LcNewString	;wreg free
  1212                           
  1213                           ;Menu.c: 39:     NovaTecla = -1;
  1214  002E' 6800'              	setf	_NovaTecla^0,c
  1215                           
  1216                           ;Menu.c: 40:     state = 2;
  1217  0030' 0E02               	movlw	2
  1218  0032' 6E00'              	movwf	menu@state^0,c
  1219  0034' 0012               	return	
  1220  0036'                    l4342:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;Menu.c: 44:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1224  0036' 0400'              	decf	_NovaTecla^0,w,c
  1225  0038' A4D8               	btfss	status,2,c
  1226  003A' D009               	goto	l4350
  1227                           
  1228                           ; BSR set to: 0
  1229  003C' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  1230  0040' 0900               	iorlw	0
  1231  0042' B4D8               	btfsc	status,2,c
  1232  0044' D004               	goto	l4350
  1233                           
  1234                           ;Menu.c: 45:     loginNOTRegister = 1;
  1235  0046' 8000'              	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1236  0048'                    l4348:
  1237                           
  1238                           ;Menu.c: 46:     state = 3;
  1239  0048' 0E03               	movlw	3
  1240  004A' 6E00'              	movwf	menu@state^0,c
  1241                           
  1242                           ;Menu.c: 47:    }
  1243  004C' 0012               	return	
  1244  004E'                    l4350:
  1245  004E' 0E02               	movlw	2
  1246  0050' 1800'              	xorwf	_NovaTecla^0,w,c
  1247  0052' A4D8               	btfss	status,2,c
  1248  0054' 0012               	return	
  1249                           
  1250                           ;Menu.c: 49:     loginNOTRegister = 0;
  1251  0056' 9000'              	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1252  0058' D7F7               	goto	l4348
  1253  005A'                    l444:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;Menu.c: 54:    NovaTecla = -1;
  1257  005A' 6800'              	setf	_NovaTecla^0,c
  1258                           
  1259                           ;Menu.c: 55:    novaLletra = -1;
  1260  005C' 6800'              	setf	_novaLletra^0,c
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;Menu.c: 56:    LcClear();
  1264  005E' EC00' F000'        	call	_LcClear	;wreg free
  1265                           
  1266                           ;Menu.c: 57:    LcNewString("USER: ");
  1267  0062' 0E00'              	movlw	low STR_3
  1268  0064' 6E00'              	movwf	LcNewString@new_s^0,c
  1269  0066' EC00' F000'        	call	_LcNewString	;wreg free
  1270                           
  1271                           ;Menu.c: 58:    state = 4;
  1272  006A' 0E04               	movlw	4
  1273  006C' 6E00'              	movwf	menu@state^0,c
  1274                           
  1275                           ;Menu.c: 59:   break;
  1276  006E' 0012               	return	
  1277  0070'                    l4362:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;Menu.c: 61:    if (LcLliure()) {
  1281  0070' EC00' F000'        	call	_LcLliure	;wreg free
  1282  0074' A0D8               	btfss	status,0,c
  1283  0076' 0012               	return	
  1284                           
  1285                           ;Menu.c: 62:     LcGotoXY(0,1);
  1286  0078' 0E01               	movlw	1
  1287  007A' 6E00'              	movwf	LcGotoXY@Row^0,c
  1288  007C' 0E00               	movlw	0
  1289  007E' EC00' F000'        	call	_LcGotoXY
  1290                           
  1291                           ;Menu.c: 63:     LcNewString("PSWD: ");
  1292  0082' 0E00'              	movlw	low STR_4
  1293  0084' 6E00'              	movwf	LcNewString@new_s^0,c
  1294  0086' EC00' F000'        	call	_LcNewString	;wreg free
  1295                           
  1296                           ;Menu.c: 64:     state = 5;
  1297  008A' 0E05               	movlw	5
  1298  008C' 6E00'              	movwf	menu@state^0,c
  1299  008E' 0012               	return	
  1300  0090'                    l4370:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Menu.c: 68:    if (LcLliure()) {
  1304  0090' EC00' F000'        	call	_LcLliure	;wreg free
  1305  0094' A0D8               	btfss	status,0,c
  1306  0096' 0012               	return	
  1307                           
  1308                           ;Menu.c: 69:     LcGotoXY(6,0);
  1309  0098' 0E00               	movlw	0
  1310  009A' 6E00'              	movwf	LcGotoXY@Row^0,c
  1311  009C' 0E06               	movlw	6
  1312  009E' EC00' F000'        	call	_LcGotoXY
  1313                           
  1314                           ;Menu.c: 70:     SMSon();
  1315  00A2' EC00' F000'        	call	_SMSon	;wreg free
  1316                           
  1317                           ;Menu.c: 71:     tmp =0;
  1318  00A6' 0E00               	movlw	0
  1319  00A8' 6E00'              	movwf	_tmp^0,c
  1320  00AA'                    l4378:
  1321                           
  1322                           ;Menu.c: 72:     state = 6;
  1323  00AA' 0E06               	movlw	6
  1324  00AC' 6E00'              	movwf	menu@state^0,c
  1325  00AE' 0012               	return	
  1326  00B0'                    l4380:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;Menu.c: 76:    if (novaLletra > 47 && NovaTecla != 10) {
  1330  00B0' 5000'              	movf	_novaLletra^0,w,c
  1331  00B2' 0A80               	xorlw	128
  1332  00B4' 0F50               	addlw	-176
  1333  00B6' A0D8               	btfss	status,0,c
  1334  00B8' D00F               	goto	l4390
  1335                           
  1336                           ; BSR set to: 0
  1337  00BA' 0E0A               	movlw	10
  1338  00BC' 1800'              	xorwf	_NovaTecla^0,w,c
  1339  00BE' B4D8               	btfsc	status,2,c
  1340  00C0' D00B               	goto	l4390
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;Menu.c: 77:     LcPutChar(novaLletra);
  1344  00C2' 5000'              	movf	_novaLletra^0,w,c
  1345  00C4' EC00' F000'        	call	_LcPutChar
  1346                           
  1347                           ;Menu.c: 78:     UenviaChar(novaLletra,tmp);
  1348  00C8' C03C' F005'        	movff	_tmp,UenviaChar@pos
  1349  00CC' 5000'              	movf	_novaLletra^0,w,c
  1350  00CE' EC00' F000'        	call	_UenviaChar
  1351  00D2'                    l4388:
  1352                           
  1353                           ;Menu.c: 79:     state = 7;
  1354  00D2' 0E07               	movlw	7
  1355  00D4' 6E00'              	movwf	menu@state^0,c
  1356                           
  1357                           ;Menu.c: 80:    }
  1358  00D6' 0012               	return	
  1359  00D8'                    l4390:
  1360                           
  1361                           ; BSR set to: 0
  1362  00D8' 0E0B               	movlw	11
  1363  00DA' 1800'              	xorwf	_NovaTecla^0,w,c
  1364  00DC' A4D8               	btfss	status,2,c
  1365  00DE' 0012               	return	
  1366  00E0' D7F8               	goto	l4388
  1367  00E2'                    l4394:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;Menu.c: 86:    if (tmp != 7 && NovaTecla != 11) {
  1371  00E2' 0E07               	movlw	7
  1372  00E4' 1800'              	xorwf	_tmp^0,w,c
  1373  00E6' B4D8               	btfsc	status,2,c
  1374  00E8' D008               	goto	l4406
  1375                           
  1376                           ; BSR set to: 0
  1377  00EA' 0E0B               	movlw	11
  1378  00EC' 1800'              	xorwf	_NovaTecla^0,w,c
  1379  00EE' B4D8               	btfsc	status,2,c
  1380  00F0' D004               	goto	l4406
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;Menu.c: 87:     tmp++;
  1384  00F2' 2A00'              	incf	_tmp^0,f,c
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;Menu.c: 88:     NovaTecla = -1;
  1388  00F4' 6800'              	setf	_NovaTecla^0,c
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;Menu.c: 89:     novaLletra = -1;
  1392  00F6' 6800'              	setf	_novaLletra^0,c
  1393  00F8' D7D8               	goto	l4378
  1394  00FA'                    l4406:
  1395                           
  1396                           ; BSR set to: 0
  1397  00FA' 0E07               	movlw	7
  1398  00FC' 1800'              	xorwf	_tmp^0,w,c
  1399  00FE' B4D8               	btfsc	status,2,c
  1400  0100' D004               	goto	u4150
  1401                           
  1402                           ; BSR set to: 0
  1403  0102' 0E0B               	movlw	11
  1404  0104' 1800'              	xorwf	_NovaTecla^0,w,c
  1405  0106' A4D8               	btfss	status,2,c
  1406  0108' 0012               	return	
  1407  010A'                    u4150:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;Menu.c: 93:     LcGotoXY(6,1);
  1411  010A' 0E01               	movlw	1
  1412  010C' 6E00'              	movwf	LcGotoXY@Row^0,c
  1413  010E' 0E06               	movlw	6
  1414  0110' EC00' F000'        	call	_LcGotoXY
  1415                           
  1416                           ;Menu.c: 94:     UenviaChar('\0',tmp);
  1417  0114' C03C' F005'        	movff	_tmp,UenviaChar@pos
  1418  0118' 0E00               	movlw	0
  1419  011A' EC00' F000'        	call	_UenviaChar
  1420                           
  1421                           ;Menu.c: 95:     NovaTecla = -1;
  1422  011E' 6800'              	setf	_NovaTecla^0,c
  1423                           
  1424                           ;Menu.c: 96:     novaLletra = -1;
  1425  0120' 6800'              	setf	_novaLletra^0,c
  1426                           
  1427                           ;Menu.c: 97:     tmp = 0;
  1428  0122' 0E00               	movlw	0
  1429  0124' 6E00'              	movwf	_tmp^0,c
  1430  0126'                    l4420:
  1431                           
  1432                           ;Menu.c: 98:     state = 8;
  1433  0126' 0E08               	movlw	8
  1434  0128' 6E00'              	movwf	menu@state^0,c
  1435  012A' 0012               	return	
  1436  012C'                    l4422:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;Menu.c: 102:    if (novaLletra > 47 && NovaTecla != 10) {
  1440  012C' 5000'              	movf	_novaLletra^0,w,c
  1441  012E' 0A80               	xorlw	128
  1442  0130' 0F50               	addlw	-176
  1443  0132' A0D8               	btfss	status,0,c
  1444  0134' D00F               	goto	l4432
  1445                           
  1446                           ; BSR set to: 0
  1447  0136' 0E0A               	movlw	10
  1448  0138' 1800'              	xorwf	_NovaTecla^0,w,c
  1449  013A' B4D8               	btfsc	status,2,c
  1450  013C' D00B               	goto	l4432
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;Menu.c: 103:     LcPutChar(novaLletra);
  1454  013E' 5000'              	movf	_novaLletra^0,w,c
  1455  0140' EC00' F000'        	call	_LcPutChar
  1456                           
  1457                           ;Menu.c: 104:     UenviaPas(novaLletra,tmp);
  1458  0144' C03C' F005'        	movff	_tmp,UenviaPas@pos
  1459  0148' 5000'              	movf	_novaLletra^0,w,c
  1460  014A' EC00' F000'        	call	_UenviaPas
  1461  014E'                    l4430:
  1462                           
  1463                           ;Menu.c: 105:     state = 9;
  1464  014E' 0E09               	movlw	9
  1465  0150' 6E00'              	movwf	menu@state^0,c
  1466                           
  1467                           ;Menu.c: 106:    }
  1468  0152' 0012               	return	
  1469  0154'                    l4432:
  1470                           
  1471                           ; BSR set to: 0
  1472  0154' 0E0B               	movlw	11
  1473  0156' 1800'              	xorwf	_NovaTecla^0,w,c
  1474  0158' A4D8               	btfss	status,2,c
  1475  015A' 0012               	return	
  1476  015C' D7F8               	goto	l4430
  1477  015E'                    l4436:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;Menu.c: 112:    if (tmp != 7 && NovaTecla != 11) {
  1481  015E' 0E07               	movlw	7
  1482  0160' 1800'              	xorwf	_tmp^0,w,c
  1483  0162' B4D8               	btfsc	status,2,c
  1484  0164' D008               	goto	l4448
  1485                           
  1486                           ; BSR set to: 0
  1487  0166' 0E0B               	movlw	11
  1488  0168' 1800'              	xorwf	_NovaTecla^0,w,c
  1489  016A' B4D8               	btfsc	status,2,c
  1490  016C' D004               	goto	l4448
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;Menu.c: 113:     tmp++;
  1494  016E' 2A00'              	incf	_tmp^0,f,c
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;Menu.c: 114:     NovaTecla = -1;
  1498  0170' 6800'              	setf	_NovaTecla^0,c
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;Menu.c: 115:     novaLletra = -1;
  1502  0172' 6800'              	setf	_novaLletra^0,c
  1503  0174' D7D8               	goto	l4420
  1504  0176'                    l4448:
  1505                           
  1506                           ; BSR set to: 0
  1507  0176' 0E07               	movlw	7
  1508  0178' 1800'              	xorwf	_tmp^0,w,c
  1509  017A' B4D8               	btfsc	status,2,c
  1510  017C' D004               	goto	u4220
  1511                           
  1512                           ; BSR set to: 0
  1513  017E' 0E0B               	movlw	11
  1514  0180' 1800'              	xorwf	_NovaTecla^0,w,c
  1515  0182' A4D8               	btfss	status,2,c
  1516  0184' 0012               	return	
  1517  0186'                    u4220:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;Menu.c: 119:     UenviaPas('\0',tmp);
  1521  0186' C03C' F005'        	movff	_tmp,UenviaPas@pos
  1522  018A' 0E00               	movlw	0
  1523  018C' EC00' F000'        	call	_UenviaPas
  1524                           
  1525                           ;Menu.c: 120:     NovaTecla = -1;
  1526  0190' 6800'              	setf	_NovaTecla^0,c
  1527                           
  1528                           ;Menu.c: 121:     novaLletra = -1;
  1529  0192' 6800'              	setf	_novaLletra^0,c
  1530                           
  1531                           ;Menu.c: 122:     tmp = 0;
  1532  0194' 0E00               	movlw	0
  1533  0196' 6E00'              	movwf	_tmp^0,c
  1534                           
  1535                           ;Menu.c: 123:     LcClear();
  1536  0198' EC00' F000'        	call	_LcClear	;wreg free
  1537                           
  1538                           ;Menu.c: 124:     UcheckExists();
  1539  019C' EC00' F000'        	call	_UcheckExists	;wreg free
  1540                           
  1541                           ;Menu.c: 125:     SMSoff();
  1542  01A0' EC00' F000'        	call	_SMSoff	;wreg free
  1543                           
  1544                           ;Menu.c: 126:     state = 10;
  1545  01A4' 0E0A               	movlw	10
  1546  01A6' 6E00'              	movwf	menu@state^0,c
  1547  01A8' 0012               	return	
  1548  01AA'                    l4468:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;Menu.c: 130:    if (!UcheckExistsNotFinished()) {
  1552  01AA' EC00' F000'        	call	_UcheckExistsNotFinished	;wreg free
  1553  01AE' B0D8               	btfsc	status,0,c
  1554  01B0' 0012               	return	
  1555                           
  1556                           ;Menu.c: 131:     state = 11;
  1557  01B2' 0E0B               	movlw	11
  1558  01B4' 6E00'              	movwf	menu@state^0,c
  1559  01B6' 0012               	return	
  1560  01B8'                    l471:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;Menu.c: 135:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1564  01B8' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1565  01BA' D007               	goto	l472
  1566                           
  1567                           ; BSR set to: 0
  1568  01BC' EC00' F000'        	call	_UcheckExistsGetError	;wreg free
  1569  01C0' B0D8               	btfsc	status,0,c
  1570  01C2' D003               	goto	l472
  1571                           
  1572                           ;Menu.c: 136:     state = 12;
  1573  01C4' 0E0C               	movlw	12
  1574  01C6' 6E00'              	movwf	menu@state^0,c
  1575                           
  1576                           ;Menu.c: 137:    }
  1577  01C8' 0012               	return	
  1578  01CA'                    l472:
  1579  01CA' A000'              	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1580  01CC' D007               	goto	l4480
  1581  01CE' EC00' F000'        	call	_UcheckExistsGetError	;wreg free
  1582  01D2' A0D8               	btfss	status,0,c
  1583  01D4' D003               	goto	l4480
  1584                           
  1585                           ;Menu.c: 139:     state = 13;
  1586  01D6' 0E0D               	movlw	13
  1587  01D8' 6E00'              	movwf	menu@state^0,c
  1588                           
  1589                           ;Menu.c: 140:    }
  1590  01DA' 0012               	return	
  1591  01DC'                    l4480:
  1592  01DC' A000'              	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1593  01DE' D002               	goto	u4280
  1594  01E0' 0E01               	movlw	1
  1595  01E2' D001               	goto	u4282
  1596  01E4'                    u4280:
  1597  01E4' 0E00               	movlw	0
  1598  01E6'                    u4282:
  1599  01E6' 0100               	movlb	0	; () banked
  1600  01E8' 6F00'              	movwf	??_menu& (0+255),b
  1601  01EA' EC00' F000'        	call	_UcheckExistsGetError	;wreg free
  1602  01EE' A0D8               	btfss	status,0,c
  1603  01F0' D002               	goto	u4290
  1604  01F2' 0E01               	movlw	1
  1605  01F4' D001               	goto	u4292
  1606  01F6'                    u4290:
  1607  01F6' 0E00               	movlw	0
  1608  01F8'                    u4292:
  1609  01F8' 0100               	movlb	0	; () banked
  1610  01FA' 1B00'              	xorwf	??_menu& (0+255),f,b
  1611  01FC' B4D8               	btfsc	status,2,c
  1612  01FE' 0012               	return	
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;Menu.c: 142:     state = 0;
  1616  0200' 0E00               	movlw	0
  1617  0202' 6E00'              	movwf	menu@state^0,c
  1618  0204' 0012               	return	
  1619  0206'                    l4486:
  1620  0206' 5000'              	movf	menu@state^0,w,c
  1621  0208' 0100               	movlb	0	; () banked
  1622  020A' 6F00'              	movwf	??_menu& (0+255),b
  1623  020C' 6B00'              	clrf	(??_menu+1)& (0+255),b
  1624                           
  1625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 1, Range of values is 0 to 0
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte            4     3 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632  020E' 5100'              	movf	(??_menu+1)& (0+255),w,b
  1633  0210' 0A00               	xorlw	0	; case 0
  1634  0212' A4D8               	btfss	status,2,c
  1635  0214' 0012               	return	
  1636                           
  1637                           ; BSR set to: 0
  1638                           ; Switch size 1, requested type "simple"
  1639                           ; Number of cases is 14, Range of values is 0 to 13
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte           43    22 (average)
  1643                           ;	Chosen strategy is simple_byte
  1644  0216' 5100'              	movf	??_menu& (0+255),w,b
  1645  0218' 0A00               	xorlw	0	; case 0
  1646  021A' B4D8               	btfsc	status,2,c
  1647  021C' D6F2               	goto	l4326
  1648  021E' 0A01               	xorlw	1	; case 1
  1649  0220' B4D8               	btfsc	status,2,c
  1650  0222' D6F8               	goto	l4332
  1651  0224' 0A03               	xorlw	3	; case 2
  1652  0226' B4D8               	btfsc	status,2,c
  1653  0228' D706               	goto	l4342
  1654  022A' 0A01               	xorlw	1	; case 3
  1655  022C' B4D8               	btfsc	status,2,c
  1656  022E' D715               	goto	l444
  1657  0230' 0A07               	xorlw	7	; case 4
  1658  0232' B4D8               	btfsc	status,2,c
  1659  0234' D71D               	goto	l4362
  1660  0236' 0A01               	xorlw	1	; case 5
  1661  0238' B4D8               	btfsc	status,2,c
  1662  023A' D72A               	goto	l4370
  1663  023C' 0A03               	xorlw	3	; case 6
  1664  023E' B4D8               	btfsc	status,2,c
  1665  0240' D737               	goto	l4380
  1666  0242' 0A01               	xorlw	1	; case 7
  1667  0244' B4D8               	btfsc	status,2,c
  1668  0246' D74D               	goto	l4394
  1669  0248' 0A0F               	xorlw	15	; case 8
  1670  024A' B4D8               	btfsc	status,2,c
  1671  024C' D76F               	goto	l4422
  1672  024E' 0A01               	xorlw	1	; case 9
  1673  0250' B4D8               	btfsc	status,2,c
  1674  0252' D785               	goto	l4436
  1675  0254' 0A03               	xorlw	3	; case 10
  1676  0256' B4D8               	btfsc	status,2,c
  1677  0258' D7A8               	goto	l4468
  1678  025A' 0A01               	xorlw	1	; case 11
  1679  025C' B4D8               	btfsc	status,2,c
  1680  025E' D7AC               	goto	l471
  1681  0260' 0A07               	xorlw	7	; case 12
  1682  0262' B4D8               	btfsc	status,2,c
  1683  0264' 0012               	return	
  1684  0266' 0A01               	xorlw	1	; case 13
  1685  0268' 0012               	return	
  1686  026A'                    __end_of_menu:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _UgetNumUsuaris *****************
  1690 ;; Defined at:
  1691 ;;		line 26 in file "Usuaris.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1
  1705 ;;      Params:         0       0       0
  1706 ;;      Locals:         0       0       0
  1707 ;;      Temps:          0       0       0
  1708 ;;      Totals:         0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 2
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_menu
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text3
  1720  0000'                    __ptext3:
  1721                           	callstack 0
  1722  0000'                    _UgetNumUsuaris:
  1723                           	callstack 27
  1724                           
  1725                           ;Usuaris.c: 27:     return numUsuaris;
  1726                           
  1727                           ;incstack = 0
  1728  0000' 5000'              	movf	_numUsuaris^0,w,c
  1729  0002' 0012               	return		;funcret
  1730  0004'                    __end_of_UgetNumUsuaris:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _UenviaPas *****************
  1734 ;; Defined at:
  1735 ;;		line 42 in file "Usuaris.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  c               1    wreg     unsigned char 
  1738 ;;  pos             1    5[COMRAM] unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  c               1    6[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1
  1750 ;;      Params:         1       0       0
  1751 ;;      Locals:         1       0       0
  1752 ;;      Temps:          0       0       0
  1753 ;;      Totals:         2       0       0
  1754 ;;Total ram usage:        2 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_menu
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text4
  1765  0000'                    __ptext4:
  1766                           	callstack 0
  1767  0000'                    _UenviaPas:
  1768                           	callstack 27
  1769                           
  1770                           ;incstack = 0
  1771                           ;UenviaPas@c stored from wreg
  1772  0000' 6E00'              	movwf	UenviaPas@c^0,c
  1773                           
  1774                           ;Usuaris.c: 43:     tmpPassword[pos] = c;
  1775  0002' 5000'              	movf	UenviaPas@pos^0,w,c
  1776  0004' 0F00'              	addlw	low _tmpPassword
  1777  0006' 6ED9               	movwf	fsr2l,c
  1778  0008' 6ADA               	clrf	fsr2h,c
  1779  000A' C006' FFDF         	movff	UenviaPas@c,indf2
  1780  000E' 0012               	return		;funcret
  1781  0010'                    __end_of_UenviaPas:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _UenviaChar *****************
  1785 ;; Defined at:
  1786 ;;		line 39 in file "Usuaris.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  c               1    wreg     unsigned char 
  1789 ;;  pos             1    5[COMRAM] unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  c               1    6[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1
  1801 ;;      Params:         1       0       0
  1802 ;;      Locals:         1       0       0
  1803 ;;      Temps:          0       0       0
  1804 ;;      Totals:         2       0       0
  1805 ;;Total ram usage:        2 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_menu
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text5
  1816  0000'                    __ptext5:
  1817                           	callstack 0
  1818  0000'                    _UenviaChar:
  1819                           	callstack 27
  1820                           
  1821                           ;incstack = 0
  1822                           ;UenviaChar@c stored from wreg
  1823  0000' 6E00'              	movwf	UenviaChar@c^0,c
  1824                           
  1825                           ;Usuaris.c: 40:     tmpUsername[pos] = c;
  1826  0002' 5000'              	movf	UenviaChar@pos^0,w,c
  1827  0004' 0F00'              	addlw	low _tmpUsername
  1828  0006' 6ED9               	movwf	fsr2l,c
  1829  0008' 6ADA               	clrf	fsr2h,c
  1830  000A' C006' FFDF         	movff	UenviaChar@c,indf2
  1831  000E' 0012               	return		;funcret
  1832  0010'                    __end_of_UenviaChar:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _UcheckExistsNotFinished *****************
  1836 ;; Defined at:
  1837 ;;		line 33 in file "Usuaris.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1
  1851 ;;      Params:         0       0       0
  1852 ;;      Locals:         0       0       0
  1853 ;;      Temps:          0       0       0
  1854 ;;      Totals:         0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 2
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_menu
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866  0000'                    __ptext6:
  1867                           	callstack 0
  1868  0000'                    _UcheckExistsNotFinished:
  1869                           	callstack 27
  1870                           
  1871                           ;Usuaris.c: 34:     return do_check_exists;
  1872                           
  1873                           ;incstack = 0
  1874  0000' B000'              	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1875  0002' D002               	goto	l3938
  1876  0004' 90D8               	bcf	status,0,c
  1877  0006' 0012               	return	
  1878  0008'                    l3938:
  1879  0008' 80D8               	bsf	status,0,c
  1880  000A' 0012               	return		;funcret
  1881  000C'                    __end_of_UcheckExistsNotFinished:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _UcheckExistsGetError *****************
  1885 ;; Defined at:
  1886 ;;		line 36 in file "Usuaris.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;		None               void
  1893 ;; Registers used:
  1894 ;;		wreg, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         0       0       0
  1902 ;;      Temps:          1       0       0
  1903 ;;      Totals:         1       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_menu
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text7
  1915  0000'                    __ptext7:
  1916                           	callstack 0
  1917  0000'                    _UcheckExistsGetError:
  1918                           	callstack 27
  1919                           
  1920                           ;Usuaris.c: 37:     return usuariLoguejat;
  1921                           
  1922                           ;incstack = 0
  1923  0000' C032' F005'        	movff	_usuariLoguejat,??_UcheckExistsGetError
  1924  0004' 3000'              	rrcf	??_UcheckExistsGetError^0,w,c
  1925  0006' 0012               	return		;funcret
  1926  0008'                    __end_of_UcheckExistsGetError:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _UcheckExists *****************
  1930 ;; Defined at:
  1931 ;;		line 30 in file "Usuaris.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1
  1945 ;;      Params:         0       0       0
  1946 ;;      Locals:         0       0       0
  1947 ;;      Temps:          0       0       0
  1948 ;;      Totals:         0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_menu
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text8
  1960  0000'                    __ptext8:
  1961                           	callstack 0
  1962  0000'                    _UcheckExists:
  1963                           	callstack 27
  1964                           
  1965                           ;Usuaris.c: 31:     do_check_exists = 1;
  1966                           
  1967                           ;incstack = 0
  1968  0000' 8000'              	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1969  0002' 0012               	return		;funcret
  1970  0004'                    __end_of_UcheckExists:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _SMSon *****************
  1974 ;; Defined at:
  1975 ;;		line 139 in file "Ssms.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1
  1989 ;;      Params:         0       0       0
  1990 ;;      Locals:         0       0       0
  1991 ;;      Temps:          0       0       0
  1992 ;;      Totals:         0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 2
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_menu
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004  0000'                    __ptext9:
  2005                           	callstack 0
  2006  0000'                    _SMSon:
  2007                           	callstack 27
  2008                           
  2009                           ;Ssms.c: 140:     setSMSon = 1;
  2010                           
  2011                           ;incstack = 0
  2012  0000' 8000'              	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2013                           
  2014                           ;Ssms.c: 141:     novaTecla = -1;
  2015  0002' 6800'              	setf	_novaTecla^0,c
  2016  0004' 0012               	return		;funcret
  2017  0006'                    __end_of_SMSon:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _SMSoff *****************
  2021 ;; Defined at:
  2022 ;;		line 144 in file "Ssms.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		None
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1
  2036 ;;      Params:         0       0       0
  2037 ;;      Locals:         0       0       0
  2038 ;;      Temps:          0       0       0
  2039 ;;      Totals:         0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_menu
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text10
  2051  0000'                    __ptext10:
  2052                           	callstack 0
  2053  0000'                    _SMSoff:
  2054                           	callstack 27
  2055                           
  2056                           ;Ssms.c: 145:     setSMSon = 0;
  2057                           
  2058                           ;incstack = 0
  2059  0000' 9000'              	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2060                           
  2061                           ;Ssms.c: 146:     novaTecla = -1;
  2062  0002' 6800'              	setf	_novaTecla^0,c
  2063  0004' 0012               	return		;funcret
  2064  0006'                    __end_of_SMSoff:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _init_ports *****************
  2068 ;; Defined at:
  2069 ;;		line 21 in file "main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1
  2083 ;;      Params:         0       0       0
  2084 ;;      Locals:         0       0       0
  2085 ;;      Temps:          0       0       0
  2086 ;;      Totals:         0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 2
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text11
  2098  0000'                    __ptext11:
  2099                           	callstack 0
  2100  0000'                    _init_ports:
  2101                           	callstack 28
  2102                           
  2103                           ;incstack = 0
  2104  0000' 0E03               	movlw	3
  2105  0002' 6E92               	movwf	146,c	;volatile
  2106  0004' 0EE0               	movlw	224
  2107  0006' 6E93               	movwf	147,c	;volatile
  2108  0008' 968A               	bcf	138,3,c	;volatile
  2109  000A' 908A               	bcf	138,0,c	;volatile
  2110  000C' 928A               	bcf	138,1,c	;volatile
  2111                           
  2112                           ;main.c: 44:     TRISC = 0xC0;
  2113  000E' 0EC0               	movlw	192
  2114  0010' 6E94               	movwf	148,c	;volatile
  2115                           
  2116                           ;main.c: 54:     TRISD = 0x8F;
  2117  0012' 0E8F               	movlw	143
  2118  0014' 6E95               	movwf	149,c	;volatile
  2119                           
  2120                           ;main.c: 55:     LATD = 0x00;
  2121  0016' 0E00               	movlw	0
  2122  0018' 6E8C               	movwf	140,c	;volatile
  2123                           
  2124                           ;main.c: 58:     EECON1bits.EEPGD = 1;
  2125  001A' 8EA6               	bsf	166,7,c	;volsfr
  2126                           
  2127                           ;main.c: 59:     EECON1bits.CFGS = 0;
  2128  001C' 9CA6               	bcf	166,6,c	;volsfr
  2129  001E' 0012               	return		;funcret
  2130  0020'                    __end_of_init_ports:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _initAltaveu *****************
  2134 ;; Defined at:
  2135 ;;		line 10 in file "Altaveu.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1
  2149 ;;      Params:         0       0       0
  2150 ;;      Locals:         0       0       0
  2151 ;;      Temps:          0       0       0
  2152 ;;      Totals:         0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 3
  2156 ;; This function calls:
  2157 ;;		_TiGetTimer
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text12
  2164  0000'                    __ptext12:
  2165                           	callstack 0
  2166  0000'                    _initAltaveu:
  2167                           	callstack 27
  2168                           
  2169                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2170                           
  2171                           ;incstack = 0
  2172  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  2173  0004' 6E00'              	movwf	_timerAltaveu^0,c
  2174  0006' 0012               	return		;funcret
  2175  0008'                    __end_of_initAltaveu:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _escriureEEPROM *****************
  2179 ;; Defined at:
  2180 ;;		line 182 in file "Usuaris.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  caca            1    5[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1
  2194 ;;      Params:         0       0       0
  2195 ;;      Locals:         1       0       0
  2196 ;;      Temps:          0       0       0
  2197 ;;      Totals:         1       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text13
  2209  0000'                    __ptext13:
  2210                           	callstack 0
  2211  0000'                    _escriureEEPROM:
  2212                           	callstack 28
  2213                           
  2214                           ;Usuaris.c: 183:     for(unsigned char caca = 0; caca < 160; caca++){
  2215                           
  2216                           ;incstack = 0
  2217  0000' 0E00               	movlw	0
  2218  0002' 6E00'              	movwf	escriureEEPROM@caca^0,c
  2219  0004'                    l4058:
  2220                           
  2221                           ;Usuaris.c: 184:         EEADR = 0;
  2222  0004' 0E00               	movlw	0
  2223  0006' 6EA9               	movwf	169,c	;volatile
  2224                           
  2225                           ;Usuaris.c: 185:         EEDATA = 0;
  2226  0008' 0E00               	movlw	0
  2227  000A' 6EA8               	movwf	168,c	;volatile
  2228                           
  2229                           ;Usuaris.c: 186:         EECON1bits.EEPGD = 0;
  2230  000C' 9EA6               	bcf	166,7,c	;volsfr
  2231                           
  2232                           ;Usuaris.c: 187:         EECON1bits.CFGS = 0;
  2233  000E' 9CA6               	bcf	166,6,c	;volsfr
  2234                           
  2235                           ;Usuaris.c: 188:         EECON1bits.WREN = 1;
  2236  0010' 84A6               	bsf	166,2,c	;volsfr
  2237                           
  2238                           ;Usuaris.c: 189:         INTCONbits.GIE = 0;
  2239  0012' 9EF2               	bcf	242,7,c	;volatile
  2240                           
  2241                           ;Usuaris.c: 190:         EECON2 = 85;
  2242  0014' 0E55               	movlw	85
  2243  0016' 6EA7               	movwf	167,c	;volsfr
  2244                           
  2245                           ;Usuaris.c: 191:         EECON2 = 170;
  2246  0018' 0EAA               	movlw	170
  2247  001A' 6EA7               	movwf	167,c	;volsfr
  2248                           
  2249                           ;Usuaris.c: 192:          EECON1bits.WR = 1;
  2250  001C' 82A6               	bsf	166,1,c	;volsfr
  2251  001E'                    l614:
  2252                           
  2253                           ;Usuaris.c: 193:         while(EECON1bits.WR){
  2254  001E' B2A6               	btfsc	166,1,c	;volsfr
  2255  0020' D7FE               	goto	l614
  2256                           
  2257                           ;Usuaris.c: 198:     }
  2258  0022' 2A00'              	incf	escriureEEPROM@caca^0,f,c
  2259  0024' 0E9F               	movlw	159
  2260  0026' 6400'              	cpfsgt	escriureEEPROM@caca^0,c
  2261  0028' D7ED               	goto	l4058
  2262                           
  2263                           ;Usuaris.c: 199:    INTCONbits.GIE = 1;
  2264  002A' 8EF2               	bsf	242,7,c	;volatile
  2265  002C' 0012               	return		;funcret
  2266  002E'                    __end_of_escriureEEPROM:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _UmotorUsers *****************
  2270 ;; Defined at:
  2271 ;;		line 118 in file "Usuaris.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1
  2285 ;;      Params:         0       0       0
  2286 ;;      Locals:         0       0       0
  2287 ;;      Temps:          2       0       0
  2288 ;;      Totals:         2       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 3
  2292 ;; This function calls:
  2293 ;;		_compareStrings
  2294 ;;		_escriureCharEEPROM
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text14
  2301  0000'                    __ptext14:
  2302                           	callstack 0
  2303  0000'                    _UmotorUsers:
  2304                           	callstack 27
  2305                           
  2306                           ;Usuaris.c: 119: static char state = 0;;Usuaris.c: 121:  switch(state) {
  2307                           
  2308                           ;incstack = 0
  2309  0000' D0A8               	goto	l4620
  2310  0002'                    l586:
  2311                           
  2312                           ;Usuaris.c: 123:    if (!do_check_exists && !do_register) {
  2313  0002' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2314  0004' B000'              	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2315  0006' D005               	goto	l587
  2316                           
  2317                           ;Usuaris.c: 124:     i = 0;
  2318  0008' 0E00               	movlw	0
  2319  000A' 6E00'              	movwf	_i^0,c
  2320                           
  2321                           ;Usuaris.c: 125:     j = 0;
  2322  000C' 0E00               	movlw	0
  2323  000E' 6E00'              	movwf	_j^0,c
  2324                           
  2325                           ;Usuaris.c: 126:    }
  2326  0010' 0012               	return	
  2327  0012'                    l587:
  2328  0012' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2329  0014' D005               	goto	l589
  2330                           
  2331                           ;Usuaris.c: 128:     usuariLoguejat = 0;
  2332  0016' 0E00               	movlw	0
  2333  0018' 6E00'              	movwf	_usuariLoguejat^0,c
  2334                           
  2335                           ;Usuaris.c: 129:     state = 1;
  2336  001A' 0E01               	movlw	1
  2337  001C' 6E00'              	movwf	UmotorUsers@state^0,c
  2338                           
  2339                           ;Usuaris.c: 130:    }
  2340  001E' 0012               	return	
  2341  0020'                    l589:
  2342  0020' A000'              	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2343  0022' 0012               	return	
  2344  0024'                    u4390:
  2345                           
  2346                           ;Usuaris.c: 132:     state = 2;
  2347  0024' 0E02               	movlw	2
  2348  0026' 6E00'              	movwf	UmotorUsers@state^0,c
  2349                           
  2350                           ;Usuaris.c: 134:   break;
  2351  0028' 0012               	return	
  2352  002A'                    l4552:
  2353                           
  2354                           ;Usuaris.c: 136:    if (i < numUsuaris) {
  2355  002A' 5000'              	movf	_numUsuaris^0,w,c
  2356  002C' 5C00'              	subwf	_i^0,w,c
  2357  002E' B0D8               	btfsc	status,0,c
  2358  0030' D014               	goto	l4562
  2359                           
  2360                           ;Usuaris.c: 137:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2361  0032' 0E00'              	movlw	low _tmpUsername
  2362  0034' 6E00'              	movwf	compareStrings@a^0,c
  2363  0036' 5000'              	movf	_i^0,w,c
  2364  0038' 0D17               	mullw	23
  2365  003A' 0E00'              	movlw	low _usuaris
  2366  003C' 24F3               	addwf	243,w,c
  2367  003E' 6E00'              	movwf	compareStrings@b^0,c
  2368  0040' 0E00'              	movlw	high _usuaris
  2369  0042' 20F4               	addwfc	prodh,w,c
  2370  0044' 6E00'              	movwf	(compareStrings@b+1)^0,c
  2371  0046' EC00' F000'        	call	_compareStrings	;wreg free
  2372  004A' 0900               	iorlw	0
  2373  004C' B4D8               	btfsc	status,2,c
  2374                           
  2375                           ;Usuaris.c: 138:      usuariLoguejat = i;
  2376  004E' C034' F032'        	movff	_i,_usuariLoguejat
  2377                           
  2378                           ;Usuaris.c: 141:     i++;
  2379  0052' 2A00'              	incf	_i^0,f,c
  2380                           
  2381                           ;Usuaris.c: 142:     state = 1;
  2382  0054' 0E01               	movlw	1
  2383  0056' 6E00'              	movwf	UmotorUsers@state^0,c
  2384                           
  2385                           ;Usuaris.c: 143:    }
  2386  0058' 0012               	return	
  2387  005A'                    l4562:
  2388  005A' 5000'              	movf	_numUsuaris^0,w,c
  2389  005C' 1800'              	xorwf	_i^0,w,c
  2390  005E' A4D8               	btfss	status,2,c
  2391  0060' 0012               	return	
  2392                           
  2393                           ;Usuaris.c: 145:     do_check_exists = 0;
  2394  0062' 9000'              	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2395  0064'                    l4566:
  2396                           
  2397                           ;Usuaris.c: 146:     state = 0;
  2398  0064' 0E00               	movlw	0
  2399  0066' 6E00'              	movwf	UmotorUsers@state^0,c
  2400  0068' 0012               	return	
  2401  006A'                    l4568:
  2402                           
  2403                           ;Usuaris.c: 150:    if (i != 8) {
  2404  006A' 0E08               	movlw	8
  2405  006C' 1800'              	xorwf	_i^0,w,c
  2406  006E' B4D8               	btfsc	status,2,c
  2407  0070' D022               	goto	l4580
  2408                           
  2409                           ;Usuaris.c: 151:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2410  0072' C036' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  2411  0076' 5000'              	movf	_i^0,w,c
  2412  0078' 0F00'              	addlw	low _tmpUsername
  2413  007A' 6ED9               	movwf	fsr2l,c
  2414  007C' 6ADA               	clrf	fsr2h,c
  2415  007E' 50DF               	movf	indf2,w,c
  2416  0080' EC00' F000'        	call	_escriureCharEEPROM
  2417  0084' 2A00'              	incf	_indexNextUser^0,f,c
  2418                           
  2419                           ;Usuaris.c: 152:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  2420  0086' 5000'              	movf	_i^0,w,c
  2421  0088' 0F00'              	addlw	low _tmpUsername
  2422  008A' 6ED9               	movwf	fsr2l,c
  2423  008C' 6ADA               	clrf	fsr2h,c
  2424  008E' 5000'              	movf	_indexNextUserStruct^0,w,c
  2425  0090' 0D17               	mullw	23
  2426  0092' 0E00'              	movlw	low _usuaris
  2427  0094' 6E00'              	movwf	??_UmotorUsers^0,c
  2428  0096' 0E00'              	movlw	high _usuaris
  2429  0098' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  2430  009A' 50F3               	movf	243,w,c
  2431  009C' 2600'              	addwf	??_UmotorUsers^0,f,c
  2432  009E' 50F4               	movf	244,w,c
  2433  00A0' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  2434  00A2' 5000'              	movf	_i^0,w,c
  2435  00A4' 2400'              	addwf	??_UmotorUsers^0,w,c
  2436  00A6' 6EE1               	movwf	fsr1l,c
  2437  00A8' 0E00               	movlw	0
  2438  00AA' 2000'              	addwfc	(??_UmotorUsers+1)^0,w,c
  2439  00AC' 6EE2               	movwf	fsr1h,c
  2440  00AE' CFDF FFE7          	movff	indf2,indf1
  2441                           
  2442                           ;Usuaris.c: 153:     i++;
  2443  00B2' 2A00'              	incf	_i^0,f,c
  2444  00B4' D7B7               	goto	u4390
  2445  00B6'                    l4580:
  2446  00B6' 0E08               	movlw	8
  2447  00B8' 1800'              	xorwf	_i^0,w,c
  2448  00BA' A4D8               	btfss	status,2,c
  2449  00BC' 0012               	return	
  2450                           
  2451                           ;Usuaris.c: 157:     i = 0;
  2452  00BE' 0E00               	movlw	0
  2453  00C0' 6E00'              	movwf	_i^0,c
  2454                           
  2455                           ;Usuaris.c: 158:     state = 3;
  2456  00C2' 0E03               	movlw	3
  2457  00C4' 6E00'              	movwf	UmotorUsers@state^0,c
  2458  00C6' 0012               	return	
  2459  00C8'                    l4584:
  2460                           
  2461                           ;Usuaris.c: 162:    if (i != 8) {
  2462  00C8' 0E08               	movlw	8
  2463  00CA' 1800'              	xorwf	_i^0,w,c
  2464  00CC' B4D8               	btfsc	status,2,c
  2465  00CE' D028               	goto	l4596
  2466                           
  2467                           ;Usuaris.c: 163:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2468  00D0' C036' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  2469  00D4' 5000'              	movf	_i^0,w,c
  2470  00D6' 0F00'              	addlw	low _tmpPassword
  2471  00D8' 6ED9               	movwf	fsr2l,c
  2472  00DA' 6ADA               	clrf	fsr2h,c
  2473  00DC' 50DF               	movf	indf2,w,c
  2474  00DE' EC00' F000'        	call	_escriureCharEEPROM
  2475  00E2' 2A00'              	incf	_indexNextUser^0,f,c
  2476                           
  2477                           ;Usuaris.c: 164:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  2478  00E4' 5000'              	movf	_i^0,w,c
  2479  00E6' 0F00'              	addlw	low _tmpPassword
  2480  00E8' 6ED9               	movwf	fsr2l,c
  2481  00EA' 6ADA               	clrf	fsr2h,c
  2482  00EC' 5000'              	movf	_indexNextUserStruct^0,w,c
  2483  00EE' 0D17               	mullw	23
  2484  00F0' 0E00'              	movlw	low _usuaris
  2485  00F2' 6E00'              	movwf	??_UmotorUsers^0,c
  2486  00F4' 0E00'              	movlw	high _usuaris
  2487  00F6' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  2488  00F8' 0E09               	movlw	9
  2489  00FA' 2600'              	addwf	??_UmotorUsers^0,f,c
  2490  00FC' 0E00               	movlw	0
  2491  00FE' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  2492  0100' 50F3               	movf	243,w,c
  2493  0102' 2600'              	addwf	??_UmotorUsers^0,f,c
  2494  0104' 50F4               	movf	244,w,c
  2495  0106' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  2496  0108' 5000'              	movf	_i^0,w,c
  2497  010A' 2400'              	addwf	??_UmotorUsers^0,w,c
  2498  010C' 6EE1               	movwf	fsr1l,c
  2499  010E' 0E00               	movlw	0
  2500  0110' 2000'              	addwfc	(??_UmotorUsers+1)^0,w,c
  2501  0112' 6EE2               	movwf	fsr1h,c
  2502  0114' CFDF FFE7          	movff	indf2,indf1
  2503                           
  2504                           ;Usuaris.c: 165:     i++;
  2505  0118' 2A00'              	incf	_i^0,f,c
  2506                           
  2507                           ;Usuaris.c: 166:     state = 3;
  2508  011A' 0E03               	movlw	3
  2509  011C' 6E00'              	movwf	UmotorUsers@state^0,c
  2510                           
  2511                           ;Usuaris.c: 167:    }
  2512  011E' 0012               	return	
  2513  0120'                    l4596:
  2514  0120' 0E08               	movlw	8
  2515  0122' 1800'              	xorwf	_i^0,w,c
  2516  0124' A4D8               	btfss	status,2,c
  2517  0126' 0012               	return	
  2518                           
  2519                           ;Usuaris.c: 169:     do_register = 0;
  2520  0128' 9000'              	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2521                           
  2522                           ;Usuaris.c: 170:     indexNextUser++;
  2523  012A' 2A00'              	incf	_indexNextUser^0,f,c
  2524                           
  2525                           ;Usuaris.c: 171:     if(indexNextUser == 159) indexNextUser = 16;
  2526  012C' 0E9F               	movlw	159
  2527  012E' 1800'              	xorwf	_indexNextUser^0,w,c
  2528  0130' A4D8               	btfss	status,2,c
  2529  0132' D002               	goto	l4606
  2530  0134' 0E10               	movlw	16
  2531  0136' 6E00'              	movwf	_indexNextUser^0,c
  2532  0138'                    l4606:
  2533                           
  2534                           ;Usuaris.c: 172:     indexNextUserStruct++;
  2535  0138' 2A00'              	incf	_indexNextUserStruct^0,f,c
  2536                           
  2537                           ;Usuaris.c: 173:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  2538  013A' 0E08               	movlw	8
  2539  013C' 1800'              	xorwf	_indexNextUserStruct^0,w,c
  2540  013E' A4D8               	btfss	status,2,c
  2541  0140' D002               	goto	l4612
  2542  0142' 0E00               	movlw	0
  2543  0144' 6E00'              	movwf	_indexNextUserStruct^0,c
  2544  0146'                    l4612:
  2545                           
  2546                           ;Usuaris.c: 174:     if(numUsuaris != 8) numUsuaris++;
  2547  0146' 0E08               	movlw	8
  2548  0148' 1800'              	xorwf	_numUsuaris^0,w,c
  2549  014A' B4D8               	btfsc	status,2,c
  2550  014C' D78B               	goto	l4566
  2551  014E' 2A00'              	incf	_numUsuaris^0,f,c
  2552  0150' D789               	goto	l4566
  2553  0152'                    l4620:
  2554  0152' 5000'              	movf	UmotorUsers@state^0,w,c
  2555  0154' 6E00'              	movwf	??_UmotorUsers^0,c
  2556  0156' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  2557                           
  2558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2559                           ; Switch size 1, requested type "simple"
  2560                           ; Number of cases is 1, Range of values is 0 to 0
  2561                           ; switch strategies available:
  2562                           ; Name         Instructions Cycles
  2563                           ; simple_byte            4     3 (average)
  2564                           ;	Chosen strategy is simple_byte
  2565  0158' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  2566  015A' 0A00               	xorlw	0	; case 0
  2567  015C' A4D8               	btfss	status,2,c
  2568  015E' 0012               	return	
  2569                           
  2570                           ; Switch size 1, requested type "simple"
  2571                           ; Number of cases is 4, Range of values is 0 to 3
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte           13     7 (average)
  2575                           ;	Chosen strategy is simple_byte
  2576  0160' 5000'              	movf	??_UmotorUsers^0,w,c
  2577  0162' 0A00               	xorlw	0	; case 0
  2578  0164' B4D8               	btfsc	status,2,c
  2579  0166' D74D               	goto	l586
  2580  0168' 0A01               	xorlw	1	; case 1
  2581  016A' B4D8               	btfsc	status,2,c
  2582  016C' D75E               	goto	l4552
  2583  016E' 0A03               	xorlw	3	; case 2
  2584  0170' B4D8               	btfsc	status,2,c
  2585  0172' D77B               	goto	l4568
  2586  0174' 0A01               	xorlw	1	; case 3
  2587  0176' A4D8               	btfss	status,2,c
  2588  0178' 0012               	return	
  2589  017A' D7A6               	goto	l4584
  2590  017C'                    __end_of_UmotorUsers:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _escriureCharEEPROM *****************
  2594 ;; Defined at:
  2595 ;;		line 52 in file "Usuaris.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  c               1    wreg     unsigned char 
  2598 ;;  pos             1    5[COMRAM] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  c               1    6[COMRAM] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1
  2610 ;;      Params:         1       0       0
  2611 ;;      Locals:         1       0       0
  2612 ;;      Temps:          0       0       0
  2613 ;;      Totals:         2       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_UmotorUsers
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text15
  2625  0000'                    __ptext15:
  2626                           	callstack 0
  2627  0000'                    _escriureCharEEPROM:
  2628                           	callstack 27
  2629                           
  2630                           ;incstack = 0
  2631                           ;escriureCharEEPROM@c stored from wreg
  2632  0000' 6E00'              	movwf	escriureCharEEPROM@c^0,c
  2633                           
  2634                           ;Usuaris.c: 53:     EEADR = c;
  2635  0002' C006' FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2636                           
  2637                           ;Usuaris.c: 54:     EEDATA = pos;
  2638  0006' C005' FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2639                           
  2640                           ;Usuaris.c: 55:     EECON1bits.EEPGD = 0;
  2641  000A' 9EA6               	bcf	166,7,c	;volsfr
  2642                           
  2643                           ;Usuaris.c: 56:     EECON1bits.CFGS = 0;
  2644  000C' 9CA6               	bcf	166,6,c	;volsfr
  2645                           
  2646                           ;Usuaris.c: 57:     EECON1bits.WREN = 1;
  2647  000E' 84A6               	bsf	166,2,c	;volsfr
  2648                           
  2649                           ;Usuaris.c: 58:     INTCONbits.GIE = 0;
  2650  0010' 9EF2               	bcf	242,7,c	;volatile
  2651                           
  2652                           ;Usuaris.c: 59:     EECON2 = 85;
  2653  0012' 0E55               	movlw	85
  2654  0014' 6EA7               	movwf	167,c	;volsfr
  2655                           
  2656                           ;Usuaris.c: 60:     EECON2 = 170;
  2657  0016' 0EAA               	movlw	170
  2658  0018' 6EA7               	movwf	167,c	;volsfr
  2659                           
  2660                           ;Usuaris.c: 61:      EECON1bits.WR = 1;
  2661  001A' 82A6               	bsf	166,1,c	;volsfr
  2662  001C'                    l548:
  2663  001C' B2A6               	btfsc	166,1,c	;volsfr
  2664  001E' D7FE               	goto	l548
  2665                           
  2666                           ;Usuaris.c: 63:    INTCONbits.GIE = 1;
  2667  0020' 8EF2               	bsf	242,7,c	;volatile
  2668  0022' 0012               	return		;funcret
  2669  0024'                    __end_of_escriureCharEEPROM:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _compareStrings *****************
  2673 ;; Defined at:
  2674 ;;		line 108 in file "Usuaris.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2677 ;;		 -> tmpUsername(9), 
  2678 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2679 ;;		 -> usuaris.username(9), usuaris(184), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      unsigned char 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1
  2691 ;;      Params:         3       0       0
  2692 ;;      Locals:         0       0       0
  2693 ;;      Temps:          2       0       0
  2694 ;;      Totals:         5       0       0
  2695 ;;Total ram usage:        5 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 2
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_UmotorUsers
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text16
  2706  0000'                    __ptext16:
  2707                           	callstack 0
  2708  0000'                    _compareStrings:
  2709                           	callstack 27
  2710                           
  2711                           ;Usuaris.c: 109:     while (*a){
  2712                           
  2713                           ;incstack = 0
  2714  0000' D00E               	goto	l3972
  2715  0002'                    l3966:
  2716                           
  2717                           ;Usuaris.c: 110:         if (*a != *b)break;
  2718  0002' C006' FFD9         	movff	compareStrings@b,fsr2l
  2719  0006' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  2720  000A' 5000'              	movf	compareStrings@a^0,w,c
  2721  000C' 6EE1               	movwf	fsr1l,c
  2722  000E' 6AE2               	clrf	fsr1h,c
  2723  0010' 50DE               	movf	postinc2,w,c
  2724  0012' 18E6               	xorwf	postinc1,w,c
  2725  0014' A4D8               	btfss	status,2,c
  2726  0016' D009               	goto	u3530
  2727                           
  2728                           ;Usuaris.c: 111:         a++;
  2729  0018' 2A00'              	incf	compareStrings@a^0,f,c
  2730                           
  2731                           ;Usuaris.c: 112:         b++;
  2732  001A' 4A00'              	infsnz	compareStrings@b^0,f,c
  2733  001C' 2A00'              	incf	(compareStrings@b+1)^0,f,c
  2734  001E'                    l3972:
  2735                           
  2736                           ;Usuaris.c: 109:     while (*a){
  2737  001E' 5000'              	movf	compareStrings@a^0,w,c
  2738  0020' 6ED9               	movwf	fsr2l,c
  2739  0022' 6ADA               	clrf	fsr2h,c
  2740  0024' 50DF               	movf	indf2,w,c
  2741  0026' A4D8               	btfss	status,2,c
  2742  0028' D7EC               	goto	l3966
  2743  002A'                    u3530:
  2744                           
  2745                           ;Usuaris.c: 114:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2746  002A' C006' FFD9         	movff	compareStrings@b,fsr2l
  2747  002E' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  2748  0032' 50DF               	movf	indf2,w,c
  2749  0034' 6E00'              	movwf	??_compareStrings^0,c
  2750  0036' 5000'              	movf	compareStrings@a^0,w,c
  2751  0038' 6ED9               	movwf	fsr2l,c
  2752  003A' 6ADA               	clrf	fsr2h,c
  2753  003C' 50DF               	movf	indf2,w,c
  2754  003E' 6E00'              	movwf	(??_compareStrings+1)^0,c
  2755  0040' 5000'              	movf	??_compareStrings^0,w,c
  2756  0042' 5C00'              	subwf	(??_compareStrings+1)^0,w,c
  2757  0044' 0012               	return		;funcret
  2758  0046'                    __end_of_compareStrings:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _Uinit *****************
  2762 ;; Defined at:
  2763 ;;		line 65 in file "Usuaris.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  j               1    9[COMRAM] unsigned char 
  2768 ;;  j               1    8[COMRAM] unsigned char 
  2769 ;;  i               1    7[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1
  2779 ;;      Params:         0       0       0
  2780 ;;      Locals:         3       0       0
  2781 ;;      Temps:          2       0       0
  2782 ;;      Totals:         5       0       0
  2783 ;;Total ram usage:        5 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 2
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text17
  2794  0000'                    __ptext17:
  2795                           	callstack 0
  2796  0000'                    _Uinit:
  2797                           	callstack 28
  2798                           
  2799                           ;Usuaris.c: 70:     EEADR = 0;
  2800                           
  2801                           ;incstack = 0
  2802  0000' 0E00               	movlw	0
  2803  0002' 6EA9               	movwf	169,c	;volatile
  2804                           
  2805                           ;Usuaris.c: 71:     EECON1bits.EEPGD = 0;
  2806  0004' 9EA6               	bcf	166,7,c	;volsfr
  2807                           
  2808                           ;Usuaris.c: 72:     EECON1bits.CFGS = 0;
  2809  0006' 9CA6               	bcf	166,6,c	;volsfr
  2810                           
  2811                           ;Usuaris.c: 73:     EECON1bits.RD = 1;
  2812  0008' 80A6               	bsf	166,0,c	;volsfr
  2813  000A'                    l554:
  2814  000A' B0A6               	btfsc	166,0,c	;volsfr
  2815  000C' D7FE               	goto	l554
  2816                           
  2817                           ;Usuaris.c: 75:     numUsuaris = EEDATA;
  2818  000E' CFA8 F037'         	movff	4008,_numUsuaris	;volatile
  2819                           
  2820                           ;Usuaris.c: 79:     EEADR++;
  2821  0012' 2AA9               	incf	169,f,c	;volatile
  2822                           
  2823                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  2824  0014' 9EA6               	bcf	166,7,c	;volsfr
  2825                           
  2826                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  2827  0016' 9CA6               	bcf	166,6,c	;volsfr
  2828  0018'                    l557:
  2829  0018' B0A6               	btfsc	166,0,c	;volsfr
  2830  001A' D7FE               	goto	l557
  2831                           
  2832                           ;Usuaris.c: 84:     indexNextUser = EEDATA;
  2833  001C' CFA8 F036'         	movff	4008,_indexNextUser	;volatile
  2834                           
  2835                           ;Usuaris.c: 85:     EEADR++;
  2836  0020' 2AA9               	incf	169,f,c	;volatile
  2837                           
  2838                           ;Usuaris.c: 87:     for(char i = 0; i< numUsuaris; i++){
  2839  0022' 0E00               	movlw	0
  2840  0024' 6E00'              	movwf	Uinit@i^0,c
  2841  0026' D041               	goto	l4316
  2842  0028'                    l4286:
  2843                           
  2844                           ;Usuaris.c: 88:         for(char j = 0; j<9; j++){
  2845  0028' 0E00               	movlw	0
  2846  002A' 6E00'              	movwf	Uinit@j^0,c
  2847  002C'                    l562:
  2848                           
  2849                           ;Usuaris.c: 89:             EECON1bits.EEPGD = 0;
  2850  002C' 9EA6               	bcf	166,7,c	;volsfr
  2851                           
  2852                           ;Usuaris.c: 90:             EECON1bits.CFGS = 0;
  2853  002E' 9CA6               	bcf	166,6,c	;volsfr
  2854                           
  2855                           ;Usuaris.c: 91:             EECON1bits.RD = 1;
  2856  0030' 80A6               	bsf	166,0,c	;volsfr
  2857  0032'                    l564:
  2858  0032' B0A6               	btfsc	166,0,c	;volsfr
  2859  0034' D7FE               	goto	l564
  2860                           
  2861                           ;Usuaris.c: 93:             usuaris[i].username[j] = EEDATA;
  2862  0036' 5000'              	movf	Uinit@i^0,w,c
  2863  0038' 0D17               	mullw	23
  2864  003A' 0E00'              	movlw	low _usuaris
  2865  003C' 6E00'              	movwf	??_Uinit^0,c
  2866  003E' 0E00'              	movlw	high _usuaris
  2867  0040' 6E00'              	movwf	(??_Uinit+1)^0,c
  2868  0042' 50F3               	movf	243,w,c
  2869  0044' 2600'              	addwf	??_Uinit^0,f,c
  2870  0046' 50F4               	movf	244,w,c
  2871  0048' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  2872  004A' 5000'              	movf	Uinit@j^0,w,c
  2873  004C' 2400'              	addwf	??_Uinit^0,w,c
  2874  004E' 6ED9               	movwf	fsr2l,c
  2875  0050' 0E00               	movlw	0
  2876  0052' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  2877  0054' 6EDA               	movwf	fsr2h,c
  2878  0056' CFA8 FFDF          	movff	4008,indf2	;volatile
  2879                           
  2880                           ;Usuaris.c: 94:             EEADR++;
  2881  005A' 2AA9               	incf	169,f,c	;volatile
  2882                           
  2883                           ;Usuaris.c: 95:         }
  2884  005C' 2A00'              	incf	Uinit@j^0,f,c
  2885  005E' 0E08               	movlw	8
  2886  0060' 6400'              	cpfsgt	Uinit@j^0,c
  2887  0062' D7E4               	goto	l562
  2888                           
  2889                           ;Usuaris.c: 96:         for(char j = 0; j<9; j++){
  2890  0064' 0E00               	movlw	0
  2891  0066' 6E00'              	movwf	Uinit@j_1034^0,c
  2892  0068'                    l567:
  2893                           
  2894                           ;Usuaris.c: 97:             EECON1bits.EEPGD = 0;
  2895  0068' 9EA6               	bcf	166,7,c	;volsfr
  2896                           
  2897                           ;Usuaris.c: 98:             EECON1bits.CFGS = 0;
  2898  006A' 9CA6               	bcf	166,6,c	;volsfr
  2899                           
  2900                           ;Usuaris.c: 99:             EECON1bits.RD = 1;
  2901  006C' 80A6               	bsf	166,0,c	;volsfr
  2902  006E'                    l569:
  2903  006E' B0A6               	btfsc	166,0,c	;volsfr
  2904  0070' D7FE               	goto	l569
  2905                           
  2906                           ;Usuaris.c: 101:             usuaris[i].password[j] = EEDATA;
  2907  0072' 5000'              	movf	Uinit@i^0,w,c
  2908  0074' 0D17               	mullw	23
  2909  0076' 0E00'              	movlw	low _usuaris
  2910  0078' 6E00'              	movwf	??_Uinit^0,c
  2911  007A' 0E00'              	movlw	high _usuaris
  2912  007C' 6E00'              	movwf	(??_Uinit+1)^0,c
  2913  007E' 0E09               	movlw	9
  2914  0080' 2600'              	addwf	??_Uinit^0,f,c
  2915  0082' 0E00               	movlw	0
  2916  0084' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  2917  0086' 50F3               	movf	243,w,c
  2918  0088' 2600'              	addwf	??_Uinit^0,f,c
  2919  008A' 50F4               	movf	244,w,c
  2920  008C' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  2921  008E' 5000'              	movf	Uinit@j_1034^0,w,c
  2922  0090' 2400'              	addwf	??_Uinit^0,w,c
  2923  0092' 6ED9               	movwf	fsr2l,c
  2924  0094' 0E00               	movlw	0
  2925  0096' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  2926  0098' 6EDA               	movwf	fsr2h,c
  2927  009A' CFA8 FFDF          	movff	4008,indf2	;volatile
  2928                           
  2929                           ;Usuaris.c: 102:             EEADR++;
  2930  009E' 2AA9               	incf	169,f,c	;volatile
  2931                           
  2932                           ;Usuaris.c: 103:         }
  2933  00A0' 2A00'              	incf	Uinit@j_1034^0,f,c
  2934  00A2' 0E08               	movlw	8
  2935  00A4' 6400'              	cpfsgt	Uinit@j_1034^0,c
  2936  00A6' D7E0               	goto	l567
  2937                           
  2938                           ;Usuaris.c: 104:     }
  2939  00A8' 2A00'              	incf	Uinit@i^0,f,c
  2940  00AA'                    l4316:
  2941  00AA' 5000'              	movf	_numUsuaris^0,w,c
  2942  00AC' 5C00'              	subwf	Uinit@i^0,w,c
  2943  00AE' B0D8               	btfsc	status,0,c
  2944  00B0' 0012               	return	
  2945  00B2' D7BA               	goto	l4286
  2946  00B4'                    __end_of_Uinit:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _TiInitTimer *****************
  2950 ;; Defined at:
  2951 ;;		line 18 in file "TiTTimer.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1
  2965 ;;      Params:         0       0       0
  2966 ;;      Locals:         0       0       0
  2967 ;;      Temps:          0       0       0
  2968 ;;      Totals:         0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text18
  2980  0000'                    __ptext18:
  2981                           	callstack 0
  2982  0000'                    _TiInitTimer:
  2983                           	callstack 28
  2984                           
  2985                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  2986                           
  2987                           ;incstack = 0
  2988  0000' 9ED0               	bcf	208,7,c	;volatile
  2989                           
  2990                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  2991  0002' 8EF2               	bsf	242,7,c	;volatile
  2992                           
  2993                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  2994  0004' 8CF2               	bsf	242,6,c	;volatile
  2995                           
  2996                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  2997  0006' 8AF2               	bsf	242,5,c	;volatile
  2998                           
  2999                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3000  0008' 94F2               	bcf	242,2,c	;volatile
  3001                           
  3002                           ;TiTTimer.c: 25:     T0CON = 136;
  3003  000A' 0E88               	movlw	136
  3004  000C' 6ED5               	movwf	213,c	;volatile
  3005                           
  3006                           ;TiTTimer.c: 27:     TMR0H = 223;
  3007  000E' 0EDF               	movlw	223
  3008  0010' 6ED7               	movwf	215,c	;volatile
  3009                           
  3010                           ;TiTTimer.c: 28:     TMR0L = 148;
  3011  0012' 0E94               	movlw	148
  3012  0014' 6ED6               	movwf	214,c	;volatile
  3013                           
  3014                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  3015  0016' 8ED5               	bsf	213,7,c	;volatile
  3016                           
  3017                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  3018  0018' 0E00               	movlw	0
  3019  001A' 6E00'              	movwf	_counter^0,c
  3020  001C'                    l4080:
  3021  001C' 0E07               	movlw	7
  3022  001E' 6400'              	cpfsgt	_counter^0,c
  3023  0020' D001               	goto	l4084
  3024  0022' 0012               	return	
  3025  0024'                    l4084:
  3026                           
  3027                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  3028  0024' 5000'              	movf	_counter^0,w,c
  3029  0026' 0D03               	mullw	3
  3030  0028' 50F3               	movf	243,w,c
  3031  002A' 0F00'              	addlw	low (_s_Timers+2)
  3032  002C' 6ED9               	movwf	fsr2l,c
  3033  002E' 6ADA               	clrf	fsr2h,c
  3034  0030' 0E00               	movlw	0
  3035  0032' 6EDF               	movwf	indf2,c
  3036                           
  3037                           ;TiTTimer.c: 33:     }
  3038  0034' 2A00'              	incf	_counter^0,f,c
  3039  0036' D7F2               	goto	l4080
  3040  0038'                    __end_of_TiInitTimer:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _TeTeclat *****************
  3044 ;; Defined at:
  3045 ;;		line 22 in file "TeTeclat.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1
  3059 ;;      Params:         0       0       0
  3060 ;;      Locals:         0       0       0
  3061 ;;      Temps:          3       0       0
  3062 ;;      Totals:         3       0       0
  3063 ;;Total ram usage:        3 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		_MsetNovaTecla
  3068 ;;		_SsetNovaTecla
  3069 ;;		_TiGetTics
  3070 ;;		_TiResetTics
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text19
  3077  0000'                    __ptext19:
  3078                           	callstack 0
  3079  0000'                    _TeTeclat:
  3080                           	callstack 27
  3081                           
  3082                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  3083                           
  3084                           ;incstack = 0
  3085  0000' A083               	btfss	131,0,c	;volatile
  3086  0002' D003               	goto	u4660
  3087  0004' 6A00'              	clrf	??_TeTeclat^0,c
  3088  0006' 2A00'              	incf	??_TeTeclat^0,f,c
  3089  0008' D001               	goto	u4668
  3090  000A'                    u4660:
  3091  000A' 6A00'              	clrf	??_TeTeclat^0,c
  3092  000C'                    u4668:
  3093  000C' A283               	btfss	131,1,c	;volatile
  3094  000E' D002               	goto	u4670
  3095  0010' 0E01               	movlw	1
  3096  0012' D001               	goto	u4676
  3097  0014'                    u4670:
  3098  0014' 0E00               	movlw	0
  3099  0016'                    u4676:
  3100  0016' 0D02               	mullw	2
  3101  0018' CFF3 F00D'         	movff	prodl,??_TeTeclat+1
  3102  001C' A483               	btfss	131,2,c	;volatile
  3103  001E' D002               	goto	u4680
  3104  0020' 0E01               	movlw	1
  3105  0022' D001               	goto	u4686
  3106  0024'                    u4680:
  3107  0024' 0E00               	movlw	0
  3108  0026'                    u4686:
  3109  0026' 0D03               	mullw	3
  3110  0028' CFF3 F00E'         	movff	prodl,??_TeTeclat+2
  3111  002C' A683               	btfss	131,3,c	;volatile
  3112  002E' D002               	goto	u4690
  3113  0030' 0E01               	movlw	1
  3114  0032' D001               	goto	u4696
  3115  0034'                    u4690:
  3116  0034' 0E00               	movlw	0
  3117  0036'                    u4696:
  3118  0036' 0D04               	mullw	4
  3119  0038' 50F3               	movf	243,w,c
  3120  003A' 2400'              	addwf	(??_TeTeclat+2)^0,w,c
  3121  003C' 2400'              	addwf	(??_TeTeclat+1)^0,w,c
  3122  003E' 2400'              	addwf	??_TeTeclat^0,w,c
  3123  0040' 6E00'              	movwf	TeTeclat@files^0,c
  3124                           
  3125                           ;TeTeclat.c: 27:  switch(state) {
  3126  0042' D06F               	goto	l4898
  3127  0044'                    l4824:
  3128                           
  3129                           ;TeTeclat.c: 29:    if (files==0) {
  3130  0044' 5000'              	movf	TeTeclat@files^0,w,c
  3131  0046' A4D8               	btfss	status,2,c
  3132  0048' D007               	goto	l4832
  3133                           
  3134                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  3135  004A' 888C               	bsf	140,4,c	;volatile
  3136                           
  3137                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  3138  004C' 9A8C               	bcf	140,5,c	;volatile
  3139                           
  3140                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  3141  004E' 9C8C               	bcf	140,6,c	;volatile
  3142                           
  3143                           ;TeTeclat.c: 33:     cols=0;
  3144  0050' 0E00               	movlw	0
  3145  0052' 6E00'              	movwf	TeTeclat@cols^0,c
  3146  0054'                    l4830:
  3147                           
  3148                           ;TeTeclat.c: 34:     state++;
  3149  0054' 2A00'              	incf	TeTeclat@state^0,f,c
  3150                           
  3151                           ;TeTeclat.c: 35:    }
  3152  0056' 0012               	return	
  3153  0058'                    l4832:
  3154  0058' 5000'              	movf	TeTeclat@files^0,w,c
  3155  005A' B4D8               	btfsc	status,2,c
  3156  005C' 0012               	return	
  3157                           
  3158                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  3159  005E' 5000'              	movf	_tiTeclat^0,w,c
  3160  0060' EC00' F000'        	call	_TiResetTics
  3161  0064'                    l4836:
  3162                           
  3163                           ;TeTeclat.c: 38:     state = 3;
  3164  0064' 0E03               	movlw	3
  3165  0066' 6E00'              	movwf	TeTeclat@state^0,c
  3166  0068' 0012               	return	
  3167  006A'                    l4838:
  3168                           
  3169                           ;TeTeclat.c: 42:    if (files==0) {
  3170  006A' 5000'              	movf	TeTeclat@files^0,w,c
  3171  006C' A4D8               	btfss	status,2,c
  3172  006E' D005               	goto	l4846
  3173                           
  3174                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3175  0070' 988C               	bcf	140,4,c	;volatile
  3176                           
  3177                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3178  0072' 8A8C               	bsf	140,5,c	;volatile
  3179                           
  3180                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3181  0074' 9C8C               	bcf	140,6,c	;volatile
  3182                           
  3183                           ;TeTeclat.c: 46:     cols=1;
  3184  0076' 0E01               	movlw	1
  3185  0078' D7EC               	goto	L1
  3186  007A'                    l4846:
  3187  007A' 5000'              	movf	TeTeclat@files^0,w,c
  3188  007C' B4D8               	btfsc	status,2,c
  3189  007E' 0012               	return	
  3190                           
  3191                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3192  0080' 5000'              	movf	_tiTeclat^0,w,c
  3193  0082' EC00' F000'        	call	_TiResetTics
  3194  0086' D7EE               	goto	l4836
  3195  0088'                    l4852:
  3196                           
  3197                           ;TeTeclat.c: 55:    if (files==0) {
  3198  0088' 5000'              	movf	TeTeclat@files^0,w,c
  3199  008A' A4D8               	btfss	status,2,c
  3200  008C' D008               	goto	l4858
  3201                           
  3202                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3203  008E' 988C               	bcf	140,4,c	;volatile
  3204                           
  3205                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3206  0090' 9A8C               	bcf	140,5,c	;volatile
  3207                           
  3208                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3209  0092' 8C8C               	bsf	140,6,c	;volatile
  3210                           
  3211                           ;TeTeclat.c: 59:     cols=2;
  3212  0094' 0E02               	movlw	2
  3213  0096' 6E00'              	movwf	TeTeclat@cols^0,c
  3214                           
  3215                           ;TeTeclat.c: 60:     state = 0;
  3216  0098' 0E00               	movlw	0
  3217  009A' 6E00'              	movwf	TeTeclat@state^0,c
  3218                           
  3219                           ;TeTeclat.c: 61:    }
  3220  009C' 0012               	return	
  3221  009E'                    l4858:
  3222  009E' 5000'              	movf	TeTeclat@files^0,w,c
  3223  00A0' B4D8               	btfsc	status,2,c
  3224  00A2' 0012               	return	
  3225                           
  3226                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3227  00A4' 5000'              	movf	_tiTeclat^0,w,c
  3228  00A6' EC00' F000'        	call	_TiResetTics
  3229  00AA' D7D4               	goto	l4830
  3230  00AC'                    l4864:
  3231                           
  3232                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3233  00AC' 5000'              	movf	_tiTeclat^0,w,c
  3234  00AE' EC00' F000'        	call	_TiGetTics
  3235  00B2' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  3236  00B4' 0012               	return	
  3237  00B6' D7CE               	goto	l4830
  3238  00B8'                    l4868:
  3239                           
  3240                           ;TeTeclat.c: 73:    if (files==0) {
  3241  00B8' 5000'              	movf	TeTeclat@files^0,w,c
  3242  00BA' A4D8               	btfss	status,2,c
  3243  00BC' D003               	goto	l4872
  3244                           
  3245                           ;TeTeclat.c: 74:     state = 1;
  3246  00BE' 0E01               	movlw	1
  3247  00C0' 6E00'              	movwf	TeTeclat@state^0,c
  3248                           
  3249                           ;TeTeclat.c: 75:    }
  3250  00C2' 0012               	return	
  3251  00C4'                    l4872:
  3252  00C4' 5000'              	movf	TeTeclat@files^0,w,c
  3253  00C6' B4D8               	btfsc	status,2,c
  3254  00C8' 0012               	return	
  3255                           
  3256                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3257  00CA' 5000'              	movf	TeTeclat@files^0,w,c
  3258  00CC' 0D03               	mullw	3
  3259  00CE' 50F3               	movf	243,w,c
  3260  00D0' 0F00'              	addlw	low (_teclaPremuda+253)
  3261  00D2' 2400'              	addwf	TeTeclat@cols^0,w,c
  3262  00D4' 6ED9               	movwf	fsr2l,c
  3263  00D6' 6ADA               	clrf	fsr2h,c
  3264  00D8' 50DF               	movf	indf2,w,c
  3265  00DA' EC00' F000'        	call	_MsetNovaTecla
  3266                           
  3267                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3268  00DE' 5000'              	movf	TeTeclat@files^0,w,c
  3269  00E0' 0D03               	mullw	3
  3270  00E2' 50F3               	movf	243,w,c
  3271  00E4' 0F00'              	addlw	low (_teclaPremuda+253)
  3272  00E6' 2400'              	addwf	TeTeclat@cols^0,w,c
  3273  00E8' 6ED9               	movwf	fsr2l,c
  3274  00EA' 6ADA               	clrf	fsr2h,c
  3275  00EC' 50DF               	movf	indf2,w,c
  3276  00EE' EC00' F000'        	call	_SsetNovaTecla
  3277  00F2' D7B0               	goto	l4830
  3278  00F4'                    l4878:
  3279                           
  3280                           ;TeTeclat.c: 84:    if (files==0) {
  3281  00F4' 5000'              	movf	TeTeclat@files^0,w,c
  3282  00F6' A4D8               	btfss	status,2,c
  3283  00F8' 0012               	return	
  3284                           
  3285                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3286  00FA' 5000'              	movf	_tiTeclat^0,w,c
  3287  00FC' EC00' F000'        	call	_TiResetTics
  3288  0100' D7A9               	goto	l4830
  3289  0102'                    l4884:
  3290                           
  3291                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3292  0102' 5000'              	movf	_tiTeclat^0,w,c
  3293  0104' EC00' F000'        	call	_TiGetTics
  3294  0108' D7D4               	goto	L2
  3295  010A'                    l4888:
  3296                           
  3297                           ;TeTeclat.c: 95:    if (files!=0) {
  3298  010A' 5000'              	movf	TeTeclat@files^0,w,c
  3299  010C' B4D8               	btfsc	status,2,c
  3300  010E' D003               	goto	l4892
  3301                           
  3302                           ;TeTeclat.c: 96:     state = 5;
  3303  0110' 0E05               	movlw	5
  3304  0112' 6E00'              	movwf	TeTeclat@state^0,c
  3305                           
  3306                           ;TeTeclat.c: 97:    }
  3307  0114' 0012               	return	
  3308  0116'                    l4892:
  3309  0116' 5000'              	movf	TeTeclat@files^0,w,c
  3310  0118' A4D8               	btfss	status,2,c
  3311  011A' 0012               	return	
  3312                           
  3313                           ;TeTeclat.c: 99:     state = 0;
  3314  011C' 0E00               	movlw	0
  3315  011E' 6E00'              	movwf	TeTeclat@state^0,c
  3316  0120' 0012               	return	
  3317  0122'                    l4898:
  3318  0122' 5000'              	movf	TeTeclat@state^0,w,c
  3319  0124' 6E00'              	movwf	??_TeTeclat^0,c
  3320  0126' 6A00'              	clrf	(??_TeTeclat+1)^0,c
  3321                           
  3322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3323                           ; Switch size 1, requested type "simple"
  3324                           ; Number of cases is 1, Range of values is 0 to 0
  3325                           ; switch strategies available:
  3326                           ; Name         Instructions Cycles
  3327                           ; simple_byte            4     3 (average)
  3328                           ;	Chosen strategy is simple_byte
  3329  0128' 5000'              	movf	(??_TeTeclat+1)^0,w,c
  3330  012A' 0A00               	xorlw	0	; case 0
  3331  012C' A4D8               	btfss	status,2,c
  3332  012E' 0012               	return	
  3333                           
  3334                           ; Switch size 1, requested type "simple"
  3335                           ; Number of cases is 8, Range of values is 0 to 7
  3336                           ; switch strategies available:
  3337                           ; Name         Instructions Cycles
  3338                           ; simple_byte           25    13 (average)
  3339                           ;	Chosen strategy is simple_byte
  3340  0130' 5000'              	movf	??_TeTeclat^0,w,c
  3341  0132' 0A00               	xorlw	0	; case 0
  3342  0134' B4D8               	btfsc	status,2,c
  3343  0136' D786               	goto	l4824
  3344  0138' 0A01               	xorlw	1	; case 1
  3345  013A' B4D8               	btfsc	status,2,c
  3346  013C' D796               	goto	l4838
  3347  013E' 0A03               	xorlw	3	; case 2
  3348  0140' B4D8               	btfsc	status,2,c
  3349  0142' D7A2               	goto	l4852
  3350  0144' 0A01               	xorlw	1	; case 3
  3351  0146' B4D8               	btfsc	status,2,c
  3352  0148' D7B1               	goto	l4864
  3353  014A' 0A07               	xorlw	7	; case 4
  3354  014C' B4D8               	btfsc	status,2,c
  3355  014E' D7B4               	goto	l4868
  3356  0150' 0A01               	xorlw	1	; case 5
  3357  0152' B4D8               	btfsc	status,2,c
  3358  0154' D7CF               	goto	l4878
  3359  0156' 0A03               	xorlw	3	; case 6
  3360  0158' B4D8               	btfsc	status,2,c
  3361  015A' D7D3               	goto	l4884
  3362  015C' 0A01               	xorlw	1	; case 7
  3363  015E' A4D8               	btfss	status,2,c
  3364  0160' 0012               	return	
  3365  0162' D7D3               	goto	l4888
  3366  0164'                    __end_of_TeTeclat:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _SsetNovaTecla *****************
  3370 ;; Defined at:
  3371 ;;		line 135 in file "Ssms.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  tecla           1    wreg     unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  tecla           1    5[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1
  3385 ;;      Params:         0       0       0
  3386 ;;      Locals:         1       0       0
  3387 ;;      Temps:          0       0       0
  3388 ;;      Totals:         1       0       0
  3389 ;;Total ram usage:        1 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 2
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_TeTeclat
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text20
  3400  0000'                    __ptext20:
  3401                           	callstack 0
  3402  0000'                    _SsetNovaTecla:
  3403                           	callstack 27
  3404                           
  3405                           ;incstack = 0
  3406                           ;SsetNovaTecla@tecla stored from wreg
  3407  0000' 6E00'              	movwf	SsetNovaTecla@tecla^0,c
  3408                           
  3409                           ;Ssms.c: 136:     novaTecla = tecla;
  3410  0002' C005' F00F'        	movff	SsetNovaTecla@tecla,_novaTecla
  3411  0006' 0012               	return		;funcret
  3412  0008'                    __end_of_SsetNovaTecla:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _MsetNovaTecla *****************
  3416 ;; Defined at:
  3417 ;;		line 18 in file "Menu.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  tecla           1    wreg     unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  tecla           1    5[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1
  3431 ;;      Params:         0       0       0
  3432 ;;      Locals:         1       0       0
  3433 ;;      Temps:          0       0       0
  3434 ;;      Totals:         1       0       0
  3435 ;;Total ram usage:        1 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 2
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_TeTeclat
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text21
  3446  0000'                    __ptext21:
  3447                           	callstack 0
  3448  0000'                    _MsetNovaTecla:
  3449                           	callstack 27
  3450                           
  3451                           ;incstack = 0
  3452                           ;MsetNovaTecla@tecla stored from wreg
  3453  0000' 6E00'              	movwf	MsetNovaTecla@tecla^0,c
  3454                           
  3455                           ;Menu.c: 19:     NovaTecla = tecla;
  3456  0002' C005' F00C'        	movff	MsetNovaTecla@tecla,_NovaTecla
  3457  0006' 0012               	return		;funcret
  3458  0008'                    __end_of_MsetNovaTecla:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _TeInit *****************
  3462 ;; Defined at:
  3463 ;;		line 18 in file "TeTeclat.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1
  3477 ;;      Params:         0       0       0
  3478 ;;      Locals:         0       0       0
  3479 ;;      Temps:          0       0       0
  3480 ;;      Totals:         0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 3
  3484 ;; This function calls:
  3485 ;;		_TiGetTimer
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text22
  3492  0000'                    __ptext22:
  3493                           	callstack 0
  3494  0000'                    _TeInit:
  3495                           	callstack 27
  3496                           
  3497                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3498                           
  3499                           ;incstack = 0
  3500  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  3501  0004' 6E00'              	movwf	_tiTeclat^0,c
  3502  0006' 0012               	return		;funcret
  3503  0008'                    __end_of_TeInit:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _Sinit *****************
  3507 ;; Defined at:
  3508 ;;		line 16 in file "Ssms.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1
  3522 ;;      Params:         0       0       0
  3523 ;;      Locals:         0       0       0
  3524 ;;      Temps:          0       0       0
  3525 ;;      Totals:         0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 3
  3529 ;; This function calls:
  3530 ;;		_TiGetTimer
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text23
  3537  0000'                    __ptext23:
  3538                           	callstack 0
  3539  0000'                    _Sinit:
  3540                           	callstack 27
  3541                           
  3542                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3543                           
  3544                           ;incstack = 0
  3545  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  3546  0004' 6E00'              	movwf	_timerSMS^0,c
  3547  0006' 0012               	return		;funcret
  3548  0008'                    __end_of_Sinit:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _SMotor *****************
  3552 ;; Defined at:
  3553 ;;		line 20 in file "Ssms.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1
  3567 ;;      Params:         0       0       0
  3568 ;;      Locals:         0       0       0
  3569 ;;      Temps:          2       0       0
  3570 ;;      Totals:         2       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 3
  3574 ;; This function calls:
  3575 ;;		_MNovaLletra
  3576 ;;		_TiGetTics
  3577 ;;		_TiResetTics
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text24
  3584  0000'                    __ptext24:
  3585                           	callstack 0
  3586  0000'                    _SMotor:
  3587                           	callstack 27
  3588                           
  3589                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3590                           
  3591                           ;incstack = 0
  3592  0000' D0EA               	goto	l4262
  3593  0002'                    l4096:
  3594                           
  3595                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3596  0002' 2800'              	incf	_novaTecla^0,w,c
  3597  0004' A4D8               	btfss	status,2,c
  3598  0006' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3599  0008' D006               	goto	l4104
  3600                           
  3601                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3602  000A' 5000'              	movf	_timerSMS^0,w,c
  3603  000C' EC00' F000'        	call	_TiResetTics
  3604                           
  3605                           ;Ssms.c: 27:     state = 3;
  3606  0010' 0E03               	movlw	3
  3607  0012' 6E00'              	movwf	SMotor@state^0,c
  3608                           
  3609                           ;Ssms.c: 28:    }
  3610  0014' 0012               	return	
  3611  0016'                    l4104:
  3612  0016' 2800'              	incf	_novaTecla^0,w,c
  3613  0018' A4D8               	btfss	status,2,c
  3614  001A' 0012               	return	
  3615  001C' 5000'              	movf	_timerSMS^0,w,c
  3616  001E' EC00' F000'        	call	_TiGetTics
  3617  0022' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  3618  0024' 0012               	return	
  3619  0026' 0E5A               	movlw	90
  3620  0028' 5C00'              	subwf	?_TiGetTics^0,w,c
  3621  002A' 0E02               	movlw	2
  3622  002C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  3623  002E' A0D8               	btfss	status,0,c
  3624  0030' 0012               	return	
  3625  0032' 2800'              	incf	_lletraASCII^0,w,c
  3626  0034' B4D8               	btfsc	status,2,c
  3627  0036' 0012               	return	
  3628  0038' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3629  003A' 0012               	return	
  3630                           
  3631                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3632  003C' 5000'              	movf	_lletraASCII^0,w,c
  3633  003E' EC00' F000'        	call	_MNovaLletra
  3634                           
  3635                           ;Ssms.c: 31:     lletraASCII = -1;
  3636  0042' 6800'              	setf	_lletraASCII^0,c
  3637                           
  3638                           ;Ssms.c: 32:     ultimaTecla = -1;
  3639  0044' 6800'              	setf	_ultimaTecla^0,c
  3640  0046'                    l4118:
  3641                           
  3642                           ;Ssms.c: 33:     state = 0;
  3643  0046' 0E00               	movlw	0
  3644  0048' 6E00'              	movwf	SMotor@state^0,c
  3645  004A' 0012               	return	
  3646  004C'                    l4120:
  3647                           
  3648                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3649  004C' 5000'              	movf	_ultimaTecla^0,w,c
  3650  004E' 1800'              	xorwf	_novaTecla^0,w,c
  3651  0050' A4D8               	btfss	status,2,c
  3652  0052' D018               	goto	l4136
  3653  0054' 5000'              	movf	_timerSMS^0,w,c
  3654  0056' EC00' F000'        	call	_TiGetTics
  3655  005A' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  3656  005C' D006               	goto	u3670
  3657  005E' 0E5A               	movlw	90
  3658  0060' 5C00'              	subwf	?_TiGetTics^0,w,c
  3659  0062' 0E02               	movlw	2
  3660  0064' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  3661  0066' B0D8               	btfsc	status,0,c
  3662  0068' D00D               	goto	l4136
  3663  006A'                    u3670:
  3664                           
  3665                           ;Ssms.c: 38:     novaTecla = -1;
  3666  006A' 6800'              	setf	_novaTecla^0,c
  3667                           
  3668                           ;Ssms.c: 39:     sumaPulsacions++;
  3669  006C' 2A00'              	incf	_sumaPulsacions^0,f,c
  3670                           
  3671                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  3672  006E' 0E30               	movlw	48
  3673  0070' 1800'              	xorwf	_lletraASCII^0,w,c
  3674  0072' B4D8               	btfsc	status,2,c
  3675  0074' D004               	goto	l4134
  3676  0076' 0E20               	movlw	32
  3677  0078' 1800'              	xorwf	_lletraASCII^0,w,c
  3678  007A' A4D8               	btfss	status,2,c
  3679                           
  3680                           ;Ssms.c: 41:       lletraASCII++;
  3681  007C' 2A00'              	incf	_lletraASCII^0,f,c
  3682  007E'                    l4134:
  3683                           
  3684                           ;Ssms.c: 43:     state = 2;
  3685  007E' 0E02               	movlw	2
  3686  0080' 6E00'              	movwf	SMotor@state^0,c
  3687                           
  3688                           ;Ssms.c: 44:    }
  3689  0082' 0012               	return	
  3690  0084'                    l4136:
  3691  0084' 2800'              	incf	_novaTecla^0,w,c
  3692  0086' B4D8               	btfsc	status,2,c
  3693  0088' 0012               	return	
  3694  008A' 5000'              	movf	_ultimaTecla^0,w,c
  3695  008C' 1800'              	xorwf	_novaTecla^0,w,c
  3696  008E' B4D8               	btfsc	status,2,c
  3697  0090' 0012               	return	
  3698                           
  3699                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  3700  0092' 5000'              	movf	_lletraASCII^0,w,c
  3701  0094' EC00' F000'        	call	_MNovaLletra
  3702                           
  3703                           ;Ssms.c: 47:     if(novaTecla == 0){
  3704  0098' 5000'              	movf	_novaTecla^0,w,c
  3705  009A' A4D8               	btfss	status,2,c
  3706  009C' D007               	goto	l4150
  3707                           
  3708                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  3709  009E' 0400'              	decf	_sumaPulsacions^0,w,c
  3710  00A0' A4D8               	btfss	status,2,c
  3711  00A2' D002               	goto	l4148
  3712  00A4' 0E30               	movlw	48
  3713  00A6' D007               	goto	L3
  3714  00A8'                    l4148:
  3715  00A8' 0E20               	movlw	32
  3716  00AA' D005               	goto	L3
  3717  00AC'                    l4150:
  3718                           
  3719                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  3720  00AC' 5000'              	movf	_novaTecla^0,w,c
  3721  00AE' 0F00'              	addlw	low (_lletraInici+254)
  3722  00B0' 6ED9               	movwf	fsr2l,c
  3723  00B2' 6ADA               	clrf	fsr2h,c
  3724  00B4' 50DF               	movf	indf2,w,c
  3725  00B6'                    L3:
  3726  00B6' 6E00'              	movwf	_lletraASCII^0,c
  3727                           
  3728                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  3729  00B8' C00F' F00D'        	movff	_novaTecla,_ultimaTecla
  3730                           
  3731                           ;Ssms.c: 54:     sumaPulsacions = 0;
  3732  00BC' 0E00               	movlw	0
  3733  00BE' 6E00'              	movwf	_sumaPulsacions^0,c
  3734  00C0'                    l4156:
  3735                           
  3736                           ;Ssms.c: 55:     novaTecla = -1;
  3737  00C0' 6800'              	setf	_novaTecla^0,c
  3738  00C2' D7C1               	goto	l4118
  3739  00C4'                    l4160:
  3740                           
  3741                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  3742  00C4' 0E07               	movlw	7
  3743  00C6' 1800'              	xorwf	_ultimaTecla^0,w,c
  3744  00C8' B4D8               	btfsc	status,2,c
  3745  00CA' D00A               	goto	l4168
  3746  00CC' 0E09               	movlw	9
  3747  00CE' 1800'              	xorwf	_ultimaTecla^0,w,c
  3748  00D0' B4D8               	btfsc	status,2,c
  3749  00D2' D006               	goto	l4168
  3750  00D4' 5000'              	movf	_ultimaTecla^0,w,c
  3751  00D6' B4D8               	btfsc	status,2,c
  3752  00D8' D003               	goto	l4168
  3753                           
  3754                           ;Ssms.c: 61:     state = 5;
  3755  00DA' 0E05               	movlw	5
  3756  00DC' 6E00'              	movwf	SMotor@state^0,c
  3757                           
  3758                           ;Ssms.c: 62:    }
  3759  00DE' 0012               	return	
  3760  00E0'                    l4168:
  3761  00E0' 0E07               	movlw	7
  3762  00E2' 1800'              	xorwf	_ultimaTecla^0,w,c
  3763  00E4' B4D8               	btfsc	status,2,c
  3764  00E6' D004               	goto	u3780
  3765  00E8' 0E09               	movlw	9
  3766  00EA' 1800'              	xorwf	_ultimaTecla^0,w,c
  3767  00EC' A4D8               	btfss	status,2,c
  3768  00EE' D003               	goto	l4174
  3769  00F0'                    u3780:
  3770                           
  3771                           ;Ssms.c: 64:     state = 6;
  3772  00F0' 0E06               	movlw	6
  3773  00F2' 6E00'              	movwf	SMotor@state^0,c
  3774                           
  3775                           ;Ssms.c: 65:    }
  3776  00F4' 0012               	return	
  3777  00F6'                    l4174:
  3778  00F6' 5000'              	movf	_ultimaTecla^0,w,c
  3779  00F8' A4D8               	btfss	status,2,c
  3780  00FA' 0012               	return	
  3781                           
  3782                           ;Ssms.c: 67:     state = 7;
  3783  00FC' 0E07               	movlw	7
  3784  00FE' 6E00'              	movwf	SMotor@state^0,c
  3785  0100' 0012               	return	
  3786  0102'                    l4178:
  3787                           
  3788                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  3789  0102' 5000'              	movf	_novaTecla^0,w,c
  3790  0104' 0A80               	xorlw	128
  3791  0106' 0F7E               	addlw	-130
  3792  0108' B0D8               	btfsc	status,0,c
  3793  010A' D003               	goto	u3810
  3794  010C' 5000'              	movf	_novaTecla^0,w,c
  3795  010E' A4D8               	btfss	status,2,c
  3796  0110' D008               	goto	l4186
  3797  0112'                    u3810:
  3798  0112' 5000'              	movf	_novaTecla^0,w,c
  3799  0114' 0A80               	xorlw	128
  3800  0116' 0F76               	addlw	-138
  3801  0118' B0D8               	btfsc	status,0,c
  3802  011A' D003               	goto	l4186
  3803                           
  3804                           ;Ssms.c: 72:     state = 1;
  3805  011C' 0E01               	movlw	1
  3806  011E' 6E00'              	movwf	SMotor@state^0,c
  3807                           
  3808                           ;Ssms.c: 73:    }
  3809  0120' 0012               	return	
  3810  0122'                    l4186:
  3811  0122' 5000'              	movf	_novaTecla^0,w,c
  3812  0124' 0A80               	xorlw	128
  3813  0126' 0F7E               	addlw	-130
  3814  0128' B0D8               	btfsc	status,0,c
  3815  012A' D008               	goto	l4196
  3816  012C' 2800'              	incf	_lletraASCII^0,w,c
  3817  012E' A4D8               	btfss	status,2,c
  3818  0130' D005               	goto	l4196
  3819                           
  3820                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  3821  0132' 5000'              	movf	_novaTecla^0,w,c
  3822  0134' 0F30               	addlw	48
  3823  0136' EC00' F000'        	call	_MNovaLletra
  3824  013A' D7C2               	goto	l4156
  3825  013C'                    l4196:
  3826  013C' 5000'              	movf	_novaTecla^0,w,c
  3827  013E' 0A80               	xorlw	128
  3828  0140' 0F7E               	addlw	-130
  3829  0142' B0D8               	btfsc	status,0,c
  3830  0144' 0012               	return	
  3831  0146' 2800'              	incf	_lletraASCII^0,w,c
  3832  0148' B4D8               	btfsc	status,2,c
  3833  014A' 0012               	return	
  3834                           
  3835                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  3836  014C' 5000'              	movf	_lletraASCII^0,w,c
  3837  014E' EC00' F000'        	call	_MNovaLletra
  3838                           
  3839                           ;Ssms.c: 81:     lletraASCII = -1;
  3840  0152' 6800'              	setf	_lletraASCII^0,c
  3841                           
  3842                           ;Ssms.c: 82:     state = 4;
  3843  0154' 0E04               	movlw	4
  3844  0156' 6E00'              	movwf	SMotor@state^0,c
  3845  0158' 0012               	return	
  3846  015A'                    l4206:
  3847                           
  3848                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  3849  015A' 5000'              	movf	_novaTecla^0,w,c
  3850  015C' 0F30               	addlw	48
  3851  015E' EC00' F000'        	call	_MNovaLletra
  3852  0162' D7AE               	goto	l4156
  3853  0164'                    l4212:
  3854                           
  3855                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  3856  0164' 0E04               	movlw	4
  3857  0166' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3858  0168' A4D8               	btfss	status,2,c
  3859  016A' D009               	goto	l4220
  3860  016C'                    u3870:
  3861                           
  3862                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  3863  016C' 5000'              	movf	_ultimaTecla^0,w,c
  3864  016E' 0F00'              	addlw	low (_lletraInici+254)
  3865  0170' 6ED9               	movwf	fsr2l,c
  3866  0172' 6ADA               	clrf	fsr2h,c
  3867  0174' 50DF               	movf	indf2,w,c
  3868  0176' 6E00'              	movwf	_lletraASCII^0,c
  3869                           
  3870                           ;Ssms.c: 93:     sumaPulsacions = 0;
  3871  0178' 0E00               	movlw	0
  3872  017A' 6E00'              	movwf	_sumaPulsacions^0,c
  3873  017C' D764               	goto	l4118
  3874  017E'                    l4220:
  3875  017E' 0E03               	movlw	3
  3876  0180' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3877  0182' A4D8               	btfss	status,2,c
  3878  0184' D004               	goto	l4226
  3879  0186'                    u3880:
  3880                           
  3881                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  3882  0186' 5000'              	movf	_ultimaTecla^0,w,c
  3883  0188' 0F30               	addlw	48
  3884  018A' 6E00'              	movwf	_lletraASCII^0,c
  3885  018C' D75C               	goto	l4118
  3886  018E'                    l4226:
  3887  018E' 0E03               	movlw	3
  3888  0190'                    L4:
  3889  0190' 6000'              	cpfslt	_sumaPulsacions^0,c
  3890  0192' 0012               	return	
  3891  0194' D758               	goto	l4118
  3892  0196'                    l4230:
  3893                           
  3894                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  3895  0196' 0E04               	movlw	4
  3896  0198' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3897  019A' B4D8               	btfsc	status,2,c
  3898  019C' D7F4               	goto	u3880
  3899  019E' 0E05               	movlw	5
  3900  01A0' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3901  01A2' B4D8               	btfsc	status,2,c
  3902  01A4' D7E3               	goto	u3870
  3903  01A6' 0E04               	movlw	4
  3904  01A8' D7F3               	goto	L4
  3905  01AA'                    l4248:
  3906                           
  3907                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  3908  01AA' 0E02               	movlw	2
  3909  01AC' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3910  01AE' A4D8               	btfss	status,2,c
  3911  01B0' D005               	goto	l4252
  3912                           
  3913                           ;Ssms.c: 120:     lletraASCII = ' ';
  3914  01B2' 0E20               	movlw	32
  3915  01B4' 6E00'              	movwf	_lletraASCII^0,c
  3916                           
  3917                           ;Ssms.c: 121:     state = 0;
  3918  01B6' 0E00               	movlw	0
  3919  01B8' 6E00'              	movwf	SMotor@state^0,c
  3920                           
  3921                           ;Ssms.c: 122:    }
  3922  01BA' 0012               	return	
  3923  01BC'                    l4252:
  3924  01BC' 0E03               	movlw	3
  3925  01BE' 1800'              	xorwf	_sumaPulsacions^0,w,c
  3926  01C0' A4D8               	btfss	status,2,c
  3927  01C2' D007               	goto	l4256
  3928                           
  3929                           ;Ssms.c: 124:     lletraASCII = '0';
  3930  01C4' 0E30               	movlw	48
  3931  01C6' 6E00'              	movwf	_lletraASCII^0,c
  3932                           
  3933                           ;Ssms.c: 125:     sumaPulsacions = 0;
  3934  01C8' 0E00               	movlw	0
  3935  01CA' 6E00'              	movwf	_sumaPulsacions^0,c
  3936                           
  3937                           ;Ssms.c: 126:     state = 0;
  3938  01CC' 0E00               	movlw	0
  3939  01CE' 6E00'              	movwf	SMotor@state^0,c
  3940                           
  3941                           ;Ssms.c: 127:    }
  3942  01D0' 0012               	return	
  3943  01D2'                    l4256:
  3944  01D2' 0E02               	movlw	2
  3945  01D4' D7DD               	goto	L4
  3946  01D6'                    l4262:
  3947  01D6' 5000'              	movf	SMotor@state^0,w,c
  3948  01D8' 6E00'              	movwf	??_SMotor^0,c
  3949  01DA' 6A00'              	clrf	(??_SMotor+1)^0,c
  3950                           
  3951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3952                           ; Switch size 1, requested type "simple"
  3953                           ; Number of cases is 1, Range of values is 0 to 0
  3954                           ; switch strategies available:
  3955                           ; Name         Instructions Cycles
  3956                           ; simple_byte            4     3 (average)
  3957                           ;	Chosen strategy is simple_byte
  3958  01DC' 5000'              	movf	(??_SMotor+1)^0,w,c
  3959  01DE' 0A00               	xorlw	0	; case 0
  3960  01E0' A4D8               	btfss	status,2,c
  3961  01E2' 0012               	return	
  3962                           
  3963                           ; Switch size 1, requested type "simple"
  3964                           ; Number of cases is 8, Range of values is 0 to 7
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte           25    13 (average)
  3968                           ;	Chosen strategy is simple_byte
  3969  01E4' 5000'              	movf	??_SMotor^0,w,c
  3970  01E6' 0A00               	xorlw	0	; case 0
  3971  01E8' B4D8               	btfsc	status,2,c
  3972  01EA' D70B               	goto	l4096
  3973  01EC' 0A01               	xorlw	1	; case 1
  3974  01EE' B4D8               	btfsc	status,2,c
  3975  01F0' D72D               	goto	l4120
  3976  01F2' 0A03               	xorlw	3	; case 2
  3977  01F4' B4D8               	btfsc	status,2,c
  3978  01F6' D766               	goto	l4160
  3979  01F8' 0A01               	xorlw	1	; case 3
  3980  01FA' B4D8               	btfsc	status,2,c
  3981  01FC' D782               	goto	l4178
  3982  01FE' 0A07               	xorlw	7	; case 4
  3983  0200' B4D8               	btfsc	status,2,c
  3984  0202' D7AB               	goto	l4206
  3985  0204' 0A01               	xorlw	1	; case 5
  3986  0206' B4D8               	btfsc	status,2,c
  3987  0208' D7AD               	goto	l4212
  3988  020A' 0A03               	xorlw	3	; case 6
  3989  020C' B4D8               	btfsc	status,2,c
  3990  020E' D7C3               	goto	l4230
  3991  0210' 0A01               	xorlw	1	; case 7
  3992  0212' A4D8               	btfss	status,2,c
  3993  0214' 0012               	return	
  3994  0216' D7C9               	goto	l4248
  3995  0218'                    __end_of_SMotor:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _MNovaLletra *****************
  3999 ;; Defined at:
  4000 ;;		line 22 in file "Menu.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  lletra          1    wreg     unsigned char 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  lletra          1    5[COMRAM] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1
  4014 ;;      Params:         0       0       0
  4015 ;;      Locals:         1       0       0
  4016 ;;      Temps:          0       0       0
  4017 ;;      Totals:         1       0       0
  4018 ;;Total ram usage:        1 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 2
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_SMotor
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text25
  4029  0000'                    __ptext25:
  4030                           	callstack 0
  4031  0000'                    _MNovaLletra:
  4032                           	callstack 27
  4033                           
  4034                           ;incstack = 0
  4035                           ;MNovaLletra@lletra stored from wreg
  4036  0000' 6E00'              	movwf	MNovaLletra@lletra^0,c
  4037                           
  4038                           ;Menu.c: 23:     novaLletra = lletra;
  4039  0002' C005' F00B'        	movff	MNovaLletra@lletra,_novaLletra
  4040  0006' 0012               	return		;funcret
  4041  0008'                    __end_of_MNovaLletra:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _Minit *****************
  4045 ;; Defined at:
  4046 ;;		line 15 in file "Menu.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1
  4060 ;;      Params:         0       0       0
  4061 ;;      Locals:         0       0       0
  4062 ;;      Temps:          0       0       0
  4063 ;;      Totals:         0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 3
  4067 ;; This function calls:
  4068 ;;		_TiGetTimer
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text26
  4075  0000'                    __ptext26:
  4076                           	callstack 0
  4077  0000'                    _Minit:
  4078                           	callstack 27
  4079                           
  4080                           ;Menu.c: 16:     timerMenu = TiGetTimer();
  4081                           
  4082                           ;incstack = 0
  4083  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  4084  0004' 6E00'              	movwf	_timerMenu^0,c
  4085  0006' 0012               	return		;funcret
  4086  0008'                    __end_of_Minit:
  4087                           	callstack 0
  4088                           
  4089 ;; *************** function _LcLCD *****************
  4090 ;; Defined at:
  4091 ;;		line 254 in file "LcTLCD.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1
  4105 ;;      Params:         0       0       0
  4106 ;;      Locals:         0       0       0
  4107 ;;      Temps:          0       0       0
  4108 ;;      Totals:         0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; Hardware stack levels required when called: 6
  4112 ;; This function calls:
  4113 ;;		_LcPutChar
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text27
  4120  0000'                    __ptext27:
  4121                           	callstack 0
  4122  0000'                    _LcLCD:
  4123                           	callstack 24
  4124                           
  4125                           ;LcTLCD.c: 255:     if(nou_s == 1){
  4126                           
  4127                           ;incstack = 0
  4128  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4129  0002' 0012               	return	
  4130                           
  4131                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  4132  0004' C044' FFF6         	movff	_s_ptr,tblptrl
  4133  0008'                    	if	1	;There is more than 1 active tblptr byte
  4134  0008' 0E00'              	movlw	high __smallconst
  4135  000A' 6EF7               	movwf	tblptrh,c
  4136  000C'                    	endif
  4137  000C'                    	if	0	;tblptru may be non-zero
  4138  000C'                    	endif
  4139  000C'                    	if	0	;tblptru may be non-zero
  4140  000C'                    	endif
  4141  000C' 0008               	tblrd		*
  4142  000E' 50F5               	movf	tablat,w,c
  4143  0010' EC00' F000'        	call	_LcPutChar
  4144                           
  4145                           ;LcTLCD.c: 257:         s_ptr++;
  4146  0014' 2A00'              	incf	_s_ptr^0,f,c
  4147                           
  4148                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  4149  0016' C044' FFF6         	movff	_s_ptr,tblptrl
  4150  001A'                    	if	1	;There is more than 1 active tblptr byte
  4151  001A' 0E00'              	movlw	high __smallconst
  4152  001C' 6EF7               	movwf	tblptrh,c
  4153  001E'                    	endif
  4154  001E'                    	if	0	;tblptru may be non-zero
  4155  001E'                    	endif
  4156  001E'                    	if	0	;tblptru may be non-zero
  4157  001E'                    	endif
  4158  001E' 0008               	tblrd		*
  4159  0020' 50F5               	movf	tablat,w,c
  4160  0022' 0900               	iorlw	0
  4161  0024' A4D8               	btfss	status,2,c
  4162  0026' 0012               	return	
  4163                           
  4164                           ;LcTLCD.c: 259:             nou_s = 0;
  4165  0028' 9000'              	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4166                           
  4167                           ;LcTLCD.c: 260:             s_ptr=0;
  4168  002A' 0E00               	movlw	0
  4169  002C' 6E00'              	movwf	_s_ptr^0,c
  4170  002E' 0012               	return		;funcret
  4171  0030'                    __end_of_LcLCD:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _LcInit *****************
  4175 ;; Defined at:
  4176 ;;		line 41 in file "LcTLCD.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  rows            1    wreg     unsigned char 
  4179 ;;  columns         1   16[COMRAM] unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  rows            1   17[COMRAM] unsigned char 
  4182 ;;  i               2   18[COMRAM] int 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1
  4192 ;;      Params:         1       0       0
  4193 ;;      Locals:         3       0       0
  4194 ;;      Temps:          0       0       0
  4195 ;;      Totals:         4       0       0
  4196 ;;Total ram usage:        4 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 5
  4199 ;; This function calls:
  4200 ;;		_CantaIR
  4201 ;;		_EscriuPrimeraOrdre
  4202 ;;		_Espera
  4203 ;;		_LcCursorOff
  4204 ;;		_TiGetTimer
  4205 ;;		_WaitForBusy
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text28
  4212  0000'                    __ptext28:
  4213                           	callstack 0
  4214  0000'                    _LcInit:
  4215                           	callstack 25
  4216                           
  4217                           ;incstack = 0
  4218                           ;LcInit@rows stored from wreg
  4219  0000' 6E00'              	movwf	LcInit@rows^0,c
  4220                           
  4221                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4222  0002' EC00' F000'        	call	_TiGetTimer	;wreg free
  4223  0006' 6E00'              	movwf	_Timer^0,c
  4224                           
  4225                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4226  0008' C011' F049'        	movff	LcInit@rows,_Rows
  4227  000C' C010' F048'        	movff	LcInit@columns,_Columns
  4228                           
  4229                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4230  0010' 0E00               	movlw	0
  4231  0012' 6E00'              	movwf	_ColumnAct^0,c
  4232  0014' C046' F047'        	movff	_ColumnAct,_RowAct
  4233                           
  4234                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4235  0018' 9894               	bcf	148,4,c	;volatile
  4236  001A' 9E95               	bcf	149,7,c	;volatile
  4237  001C' 9A94               	bcf	148,5,c	;volatile
  4238                           
  4239                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4240  001E' 0E00               	movlw	0
  4241  0020' 6E00'              	movwf	(LcInit@i+1)^0,c
  4242  0022' 0E00               	movlw	0
  4243  0024' 6E00'              	movwf	LcInit@i^0,c
  4244  0026'                    l3994:
  4245                           
  4246                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4247  0026' 0E00               	movlw	0
  4248  0028' 6E00'              	movwf	(Espera@ms+1)^0,c
  4249  002A' 0E64               	movlw	100
  4250  002C' 6E00'              	movwf	Espera@ms^0,c
  4251  002E' 5000'              	movf	_Timer^0,w,c
  4252  0030' EC00' F000'        	call	_Espera
  4253                           
  4254                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4255  0034' 0E03               	movlw	3
  4256  0036' EC00' F000'        	call	_EscriuPrimeraOrdre
  4257                           
  4258                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4259  003A' 0E00               	movlw	0
  4260  003C' 6E00'              	movwf	(Espera@ms+1)^0,c
  4261  003E' 0E05               	movlw	5
  4262  0040' 6E00'              	movwf	Espera@ms^0,c
  4263  0042' 5000'              	movf	_Timer^0,w,c
  4264  0044' EC00' F000'        	call	_Espera
  4265                           
  4266                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4267  0048' 0E03               	movlw	3
  4268  004A' EC00' F000'        	call	_EscriuPrimeraOrdre
  4269                           
  4270                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4271  004E' 0E00               	movlw	0
  4272  0050' 6E00'              	movwf	(Espera@ms+1)^0,c
  4273  0052' 0E01               	movlw	1
  4274  0054' 6E00'              	movwf	Espera@ms^0,c
  4275  0056' 5000'              	movf	_Timer^0,w,c
  4276  0058' EC00' F000'        	call	_Espera
  4277                           
  4278                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4279  005C' 0E03               	movlw	3
  4280  005E' EC00' F000'        	call	_EscriuPrimeraOrdre
  4281                           
  4282                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4283  0062' 0E00               	movlw	0
  4284  0064' 6E00'              	movwf	(Espera@ms+1)^0,c
  4285  0066' 0E01               	movlw	1
  4286  0068' 6E00'              	movwf	Espera@ms^0,c
  4287  006A' 5000'              	movf	_Timer^0,w,c
  4288  006C' EC00' F000'        	call	_Espera
  4289                           
  4290                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4291  0070' 0E02               	movlw	2
  4292  0072' EC00' F000'        	call	_EscriuPrimeraOrdre
  4293                           
  4294                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4295  0076' 0E00               	movlw	0
  4296  0078' 6E00'              	movwf	(Espera@ms+1)^0,c
  4297  007A' 0E04               	movlw	4
  4298  007C' 6E00'              	movwf	Espera@ms^0,c
  4299  007E' 5000'              	movf	_Timer^0,w,c
  4300  0080' EC00' F000'        	call	_Espera
  4301                           
  4302                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4303  0084' 0E28               	movlw	40
  4304  0086' EC00' F000'        	call	_CantaIR
  4305                           
  4306                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4307  008A' EC00' F000'        	call	_WaitForBusy	;wreg free
  4308  008E' 0E08               	movlw	8
  4309  0090' EC00' F000'        	call	_CantaIR
  4310                           
  4311                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4312  0094' EC00' F000'        	call	_WaitForBusy	;wreg free
  4313  0098' 0E01               	movlw	1
  4314  009A' EC00' F000'        	call	_CantaIR
  4315                           
  4316                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4317  009E' 0E00               	movlw	0
  4318  00A0' 6E00'              	movwf	(Espera@ms+1)^0,c
  4319  00A2' 0E03               	movlw	3
  4320  00A4' 6E00'              	movwf	Espera@ms^0,c
  4321  00A6' 5000'              	movf	_Timer^0,w,c
  4322  00A8' EC00' F000'        	call	_Espera
  4323                           
  4324                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4325  00AC' EC00' F000'        	call	_WaitForBusy	;wreg free
  4326  00B0' 0E06               	movlw	6
  4327  00B2' EC00' F000'        	call	_CantaIR
  4328                           
  4329                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4330  00B6' EC00' F000'        	call	_WaitForBusy	;wreg free
  4331  00BA' 0E0F               	movlw	15
  4332  00BC' EC00' F000'        	call	_CantaIR
  4333                           
  4334                           ;LcTLCD.c: 74:  }
  4335  00C0' 4A00'              	infsnz	LcInit@i^0,f,c
  4336  00C2' 2A00'              	incf	(LcInit@i+1)^0,f,c
  4337  00C4' BE00'              	btfsc	(LcInit@i+1)^0,7,c
  4338  00C6' D7AF               	goto	l3994
  4339  00C8' 5000'              	movf	(LcInit@i+1)^0,w,c
  4340  00CA' E104               	bnz	u3540
  4341  00CC' 0E02               	movlw	2
  4342  00CE' 5C00'              	subwf	LcInit@i^0,w,c
  4343  00D0' A0D8               	btfss	status,0,c
  4344  00D2' D7A9               	goto	l3994
  4345  00D4'                    u3540:
  4346                           
  4347                           ;LcTLCD.c: 79:     LcCursorOff();
  4348  00D4' EC00' F000'        	call	_LcCursorOff	;wreg free
  4349  00D8' 0012               	return		;funcret
  4350  00DA'                    __end_of_LcInit:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _LcCursorOff *****************
  4354 ;; Defined at:
  4355 ;;		line 97 in file "LcTLCD.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1
  4369 ;;      Params:         0       0       0
  4370 ;;      Locals:         0       0       0
  4371 ;;      Temps:          0       0       0
  4372 ;;      Totals:         0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 4
  4376 ;; This function calls:
  4377 ;;		_CantaIR
  4378 ;;		_WaitForBusy
  4379 ;; This function is called by:
  4380 ;;		_LcInit
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text29
  4385  0000'                    __ptext29:
  4386                           	callstack 0
  4387  0000'                    _LcCursorOff:
  4388                           	callstack 25
  4389                           
  4390                           ;LcTLCD.c: 100:  WaitForBusy();
  4391                           
  4392                           ;incstack = 0
  4393  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
  4394                           
  4395                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4396  0004' 0E0C               	movlw	12
  4397  0006' EC00' F000'        	call	_CantaIR
  4398  000A' 0012               	return		;funcret
  4399  000C'                    __end_of_LcCursorOff:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function _EscriuPrimeraOrdre *****************
  4403 ;; Defined at:
  4404 ;;		line 228 in file "LcTLCD.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  ordre           1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  ordre           1    6[COMRAM] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1
  4418 ;;      Params:         0       0       0
  4419 ;;      Locals:         1       0       0
  4420 ;;      Temps:          1       0       0
  4421 ;;      Totals:         2       0       0
  4422 ;;Total ram usage:        2 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 2
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_LcInit
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text30
  4433  0000'                    __ptext30:
  4434                           	callstack 0
  4435  0000'                    _EscriuPrimeraOrdre:
  4436                           	callstack 27
  4437                           
  4438                           ;incstack = 0
  4439                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4440  0000' 6E00'              	movwf	EscriuPrimeraOrdre@ordre^0,c
  4441                           
  4442                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4443  0002' 9694               	bcf	148,3,c	;volatile
  4444  0004' 9494               	bcf	148,2,c	;volatile
  4445  0006' 9294               	bcf	148,1,c	;volatile
  4446  0008' 9094               	bcf	148,0,c	;volatile
  4447  000A' 9A8B               	bcf	139,5,c	;volatile
  4448  000C' 9E8C               	bcf	140,7,c	;volatile
  4449                           
  4450                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4451  000E' 888B               	bsf	139,4,c	;volatile
  4452  0010' 888B               	bsf	139,4,c	;volatile
  4453                           
  4454                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4455  0012' A600'              	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4456  0014' D003               	goto	u3410
  4457  0016' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4458  0018' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  4459  001A' D001               	goto	u3428
  4460  001C'                    u3410:
  4461  001C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4462  001E'                    u3428:
  4463  001E' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4464  0020' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4465  0022' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4466  0024' 508B               	movf	139,w,c	;volatile
  4467  0026' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4468  0028' 0BF7               	andlw	-9
  4469  002A' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4470  002C' 6E8B               	movwf	139,c	;volatile
  4471                           
  4472                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4473  002E' A400'              	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4474  0030' D003               	goto	u3430
  4475  0032' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4476  0034' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  4477  0036' D001               	goto	u3448
  4478  0038'                    u3430:
  4479  0038' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4480  003A'                    u3448:
  4481  003A' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4482  003C' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4483  003E' 508B               	movf	139,w,c	;volatile
  4484  0040' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4485  0042' 0BFB               	andlw	-5
  4486  0044' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4487  0046' 6E8B               	movwf	139,c	;volatile
  4488                           
  4489                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4490  0048' A200'              	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4491  004A' D003               	goto	u3450
  4492  004C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4493  004E' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  4494  0050' D001               	goto	u3468
  4495  0052'                    u3450:
  4496  0052' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4497  0054'                    u3468:
  4498  0054' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4499  0056' 508B               	movf	139,w,c	;volatile
  4500  0058' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4501  005A' 0BFD               	andlw	-3
  4502  005C' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4503  005E' 6E8B               	movwf	139,c	;volatile
  4504                           
  4505                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4506  0060' A000'              	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4507  0062' D003               	goto	u3470
  4508  0064' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4509  0066' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  4510  0068' D001               	goto	u3488
  4511  006A'                    u3470:
  4512  006A' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  4513  006C'                    u3488:
  4514  006C' 508B               	movf	139,w,c	;volatile
  4515  006E' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4516  0070' 0BFE               	andlw	-2
  4517  0072' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4518  0074' 6E8B               	movwf	139,c	;volatile
  4519                           
  4520                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4521  0076' 988B               	bcf	139,4,c	;volatile
  4522  0078' 0012               	return		;funcret
  4523  007A'                    __end_of_EscriuPrimeraOrdre:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _GLCDMotor *****************
  4527 ;; Defined at:
  4528 ;;		line 36 in file "GestioLCD.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1
  4542 ;;      Params:         0       0       0
  4543 ;;      Locals:         0       0       0
  4544 ;;      Temps:          0       2       0
  4545 ;;      Totals:         0       2       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 8
  4549 ;; This function calls:
  4550 ;;		_LcClear
  4551 ;;		_LcGotoXY
  4552 ;;		_LcLliure
  4553 ;;		_LcNewString
  4554 ;;		_LcPutChar
  4555 ;;		_LcPutFletxa
  4556 ;;		_TiGetTics
  4557 ;;		_TiResetTics
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text31
  4564  0000'                    __ptext31:
  4565                           	callstack 0
  4566  0000'                    _GLCDMotor:
  4567                           	callstack 22
  4568                           
  4569                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  4570                           
  4571                           ;incstack = 0
  4572  0000' D10E               	goto	l4814
  4573  0002'                    l4644:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;GestioLCD.c: 60:    if (j>=16) {
  4577  0002' 0E0F               	movlw	15
  4578  0004' 6400'              	cpfsgt	GLCDMotor@j^0,c
  4579  0006' D025               	goto	l4658
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;GestioLCD.c: 61:     min1++;
  4583  0008' 2A00'              	incf	GLCDMotor@min1^0,f,c
  4584                           
  4585                           ;GestioLCD.c: 62:     max1++;
  4586  000A' 2A00'              	incf	GLCDMotor@max1^0,f,c
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;GestioLCD.c: 63:     if (menu[menuDaltGLCD][max1] == '\0') max1=0;
  4590  000C' 5000'              	movf	GLCDMotor@max1^0,w,c
  4591  000E' 0F00'              	addlw	low _menu
  4592  0010' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4593  0012' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4594  0016'                    	if	1	;There is more than 1 active tblptr byte
  4595  0016' 0E00'              	movlw	high __smallconst
  4596  0018' 6EF7               	movwf	tblptrh,c
  4597  001A'                    	endif
  4598  001A'                    	if	0	;tblptru may be non-zero
  4599  001A'                    	endif
  4600  001A'                    	if	0	;tblptru may be non-zero
  4601  001A'                    	endif
  4602  001A' 0008               	tblrd		*
  4603  001C' 50F5               	movf	tablat,w,c
  4604  001E' 0900               	iorlw	0
  4605  0020' A4D8               	btfss	status,2,c
  4606  0022' D002               	goto	l4652
  4607                           
  4608                           ; BSR set to: 0
  4609  0024' 0E00               	movlw	0
  4610  0026' 6E00'              	movwf	GLCDMotor@max1^0,c
  4611  0028'                    l4652:
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;GestioLCD.c: 64:     if (menu[menuDaltGLCD][min1] == '\0') min1=0;
  4615  0028' 5000'              	movf	GLCDMotor@min1^0,w,c
  4616  002A' 0F00'              	addlw	low _menu
  4617  002C' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4618  002E' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4619  0032'                    	if	1	;There is more than 1 active tblptr byte
  4620  0032' 0E00'              	movlw	high __smallconst
  4621  0034' 6EF7               	movwf	tblptrh,c
  4622  0036'                    	endif
  4623  0036'                    	if	0	;tblptru may be non-zero
  4624  0036'                    	endif
  4625  0036'                    	if	0	;tblptru may be non-zero
  4626  0036'                    	endif
  4627  0036' 0008               	tblrd		*
  4628  0038' 50F5               	movf	tablat,w,c
  4629  003A' 0900               	iorlw	0
  4630  003C' A4D8               	btfss	status,2,c
  4631  003E' D002               	goto	l728
  4632                           
  4633                           ; BSR set to: 0
  4634  0040' 0E00               	movlw	0
  4635  0042' 6E00'              	movwf	GLCDMotor@min1^0,c
  4636  0044'                    l728:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;GestioLCD.c: 65:     j=0;
  4640  0044' 0E00               	movlw	0
  4641  0046' 6E00'              	movwf	GLCDMotor@j^0,c
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;GestioLCD.c: 66:     k1=min1;
  4645  0048' C028' F026'        	movff	GLCDMotor@min1,GLCDMotor@k1
  4646                           
  4647                           ;GestioLCD.c: 67:     state = 6;
  4648  004C' 0E06               	movlw	6
  4649  004E' 6E00'              	movwf	GLCDMotor@state^0,c
  4650                           
  4651                           ;GestioLCD.c: 68:    }
  4652  0050' 0012               	return	
  4653  0052'                    l4658:
  4654                           
  4655                           ; BSR set to: 0
  4656  0052' 0E10               	movlw	16
  4657  0054' 6000'              	cpfslt	GLCDMotor@j^0,c
  4658  0056' 0012               	return	
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  4662  0058' 0E00               	movlw	0
  4663  005A' 6E00'              	movwf	LcGotoXY@Row^0,c
  4664  005C' 5000'              	movf	GLCDMotor@j^0,w,c
  4665  005E' EC00' F000'        	call	_LcGotoXY
  4666                           
  4667                           ;GestioLCD.c: 71:     LcPutChar(menu[menuDaltGLCD][k1]);
  4668  0062' 5000'              	movf	GLCDMotor@k1^0,w,c
  4669  0064' 0F00'              	addlw	low _menu
  4670  0066' 0100               	movlb	0	; () banked
  4671  0068' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4672  006A' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4673  006E'                    	if	1	;There is more than 1 active tblptr byte
  4674  006E' 0E00'              	movlw	high __smallconst
  4675  0070' 6EF7               	movwf	tblptrh,c
  4676  0072'                    	endif
  4677  0072'                    	if	0	;tblptru may be non-zero
  4678  0072'                    	endif
  4679  0072'                    	if	0	;tblptru may be non-zero
  4680  0072'                    	endif
  4681  0072' 0008               	tblrd		*
  4682  0074' 50F5               	movf	tablat,w,c
  4683  0076' EC00' F000'        	call	_LcPutChar
  4684                           
  4685                           ;GestioLCD.c: 72:     j++;
  4686  007A' 2A00'              	incf	GLCDMotor@j^0,f,c
  4687                           
  4688                           ;GestioLCD.c: 73:     k1++;
  4689  007C' 2A00'              	incf	GLCDMotor@k1^0,f,c
  4690                           
  4691                           ;GestioLCD.c: 74:     if(menu[menuDaltGLCD][k1] == '\0') k1 = 0;
  4692  007E' 5000'              	movf	GLCDMotor@k1^0,w,c
  4693  0080' 0F00'              	addlw	low _menu
  4694  0082' 0100               	movlb	0	; () banked
  4695  0084' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4696  0086' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4697  008A'                    	if	1	;There is more than 1 active tblptr byte
  4698  008A' 0E00'              	movlw	high __smallconst
  4699  008C' 6EF7               	movwf	tblptrh,c
  4700  008E'                    	endif
  4701  008E'                    	if	0	;tblptru may be non-zero
  4702  008E'                    	endif
  4703  008E'                    	if	0	;tblptru may be non-zero
  4704  008E'                    	endif
  4705  008E' 0008               	tblrd		*
  4706  0090' 50F5               	movf	tablat,w,c
  4707  0092' 0900               	iorlw	0
  4708  0094' A4D8               	btfss	status,2,c
  4709  0096' 0012               	return	
  4710                           
  4711                           ; BSR set to: 0
  4712  0098' 0E00               	movlw	0
  4713  009A' 6E00'              	movwf	GLCDMotor@k1^0,c
  4714  009C' 0012               	return	
  4715  009E'                    l4672:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;GestioLCD.c: 79:     LcPutFletxa();
  4719  009E' EC00' F000'        	call	_LcPutFletxa	;wreg free
  4720  00A2'                    l4674:
  4721                           
  4722                           ;GestioLCD.c: 80:     state++;
  4723  00A2' 2A00'              	incf	GLCDMotor@state^0,f,c
  4724                           
  4725                           ;GestioLCD.c: 81:    }
  4726  00A4' 0012               	return	
  4727  00A6'                    l4680:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;GestioLCD.c: 88:    if (LcLliure() && menuDaltGLCD<5) {
  4731  00A6' EC00' F000'        	call	_LcLliure	;wreg free
  4732  00AA' A0D8               	btfss	status,0,c
  4733  00AC' D005               	goto	l4686
  4734                           
  4735                           ;GestioLCD.c: 89:     LcPutFletxa();
  4736  00AE' EC00' F000'        	call	_LcPutFletxa	;wreg free
  4737                           
  4738                           ;GestioLCD.c: 90:     state = 7;
  4739  00B2' 0E07               	movlw	7
  4740  00B4' 6E00'              	movwf	GLCDMotor@state^0,c
  4741                           
  4742                           ;GestioLCD.c: 91:    }
  4743  00B6' 0012               	return	
  4744  00B8'                    l4686:
  4745  00B8' EC00' F000'        	call	_LcLliure	;wreg free
  4746  00BC' 0012               	return	
  4747  00BE'                    l4718:
  4748                           
  4749                           ; BSR set to: 0
  4750                           
  4751                           ; BSR set to: 0
  4752  00BE' 5000'              	movf	GLCDMotor@length1^0,w,c
  4753  00C0' 0F00'              	addlw	low _menu
  4754  00C2' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4755  00C4' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4756  00C8'                    	if	1	;There is more than 1 active tblptr byte
  4757  00C8' 0E00'              	movlw	high __smallconst
  4758  00CA' 6EF7               	movwf	tblptrh,c
  4759  00CC'                    	endif
  4760  00CC'                    	if	0	;tblptru may be non-zero
  4761  00CC'                    	endif
  4762  00CC'                    	if	0	;tblptru may be non-zero
  4763  00CC'                    	endif
  4764  00CC' 0008               	tblrd		*
  4765  00CE' 50F5               	movf	tablat,w,c
  4766  00D0' 0900               	iorlw	0
  4767  00D2' B4D8               	btfsc	status,2,c
  4768  00D4' D002               	goto	l4728
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;GestioLCD.c: 118:     length1++;
  4772  00D6' 2A00'              	incf	GLCDMotor@length1^0,f,c
  4773                           
  4774                           ;GestioLCD.c: 119:    }
  4775  00D8' 0012               	return	
  4776  00DA'                    l4728:
  4777                           
  4778                           ; BSR set to: 0
  4779  00DA' 5000'              	movf	GLCDMotor@length1^0,w,c
  4780  00DC' 0F00'              	addlw	low _menu
  4781  00DE' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  4782  00E0' C000' FFF6         	movff	??_GLCDMotor,tblptrl
  4783  00E4'                    	if	1	;There is more than 1 active tblptr byte
  4784  00E4' 0E00'              	movlw	high __smallconst
  4785  00E6' 6EF7               	movwf	tblptrh,c
  4786  00E8'                    	endif
  4787  00E8'                    	if	0	;tblptru may be non-zero
  4788  00E8'                    	endif
  4789  00E8'                    	if	0	;tblptru may be non-zero
  4790  00E8'                    	endif
  4791  00E8' 0008               	tblrd		*
  4792  00EA' 50F5               	movf	tablat,w,c
  4793  00EC' 0900               	iorlw	0
  4794  00EE' A4D8               	btfss	status,2,c
  4795  00F0' 0012               	return	
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;GestioLCD.c: 121:     state = 13;
  4799  00F2' 0E0D               	movlw	13
  4800  00F4' 6E00'              	movwf	GLCDMotor@state^0,c
  4801  00F6' 0012               	return	
  4802  00F8'                    l4748:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;GestioLCD.c: 135:    if (j<16) {
  4806  00F8' 0E10               	movlw	16
  4807  00FA' 6000'              	cpfslt	GLCDMotor@j^0,c
  4808  00FC' D02B               	goto	l4762
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;GestioLCD.c: 136:     LcGotoXY(j,1);
  4812  00FE' 0E01               	movlw	1
  4813  0100' 6E00'              	movwf	LcGotoXY@Row^0,c
  4814  0102' 5000'              	movf	GLCDMotor@j^0,w,c
  4815  0104' EC00' F000'        	call	_LcGotoXY
  4816                           
  4817                           ;GestioLCD.c: 137:     LcPutChar(menu[menuDaltGLCD+1][k2]);
  4818  0108' C025' F000'        	movff	GLCDMotor@k2,??_GLCDMotor
  4819  010C' 0E16               	movlw	22
  4820  010E' 0100               	movlb	0	; () banked
  4821  0110' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  4822  0112' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  4823  0114' 0F00'              	addlw	low _menu
  4824  0116' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  4825  0118' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  4826  011C'                    	if	1	;There is more than 1 active tblptr byte
  4827  011C' 0E00'              	movlw	high __smallconst
  4828  011E' 6EF7               	movwf	tblptrh,c
  4829  0120'                    	endif
  4830  0120'                    	if	0	;tblptru may be non-zero
  4831  0120'                    	endif
  4832  0120'                    	if	0	;tblptru may be non-zero
  4833  0120'                    	endif
  4834  0120' 0008               	tblrd		*
  4835  0122' 50F5               	movf	tablat,w,c
  4836  0124' EC00' F000'        	call	_LcPutChar
  4837                           
  4838                           ;GestioLCD.c: 138:     j++;
  4839  0128' 2A00'              	incf	GLCDMotor@j^0,f,c
  4840                           
  4841                           ;GestioLCD.c: 139:     k2++;
  4842  012A' 2A00'              	incf	GLCDMotor@k2^0,f,c
  4843                           
  4844                           ;GestioLCD.c: 140:     if(menu[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  4845  012C' C025' F000'        	movff	GLCDMotor@k2,??_GLCDMotor
  4846  0130' 0E16               	movlw	22
  4847  0132' 0100               	movlb	0	; () banked
  4848  0134' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  4849  0136' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  4850  0138' 0F00'              	addlw	low _menu
  4851  013A' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  4852  013C' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  4853  0140'                    	if	1	;There is more than 1 active tblptr byte
  4854  0140' 0E00'              	movlw	high __smallconst
  4855  0142' 6EF7               	movwf	tblptrh,c
  4856  0144'                    	endif
  4857  0144'                    	if	0	;tblptru may be non-zero
  4858  0144'                    	endif
  4859  0144'                    	if	0	;tblptru may be non-zero
  4860  0144'                    	endif
  4861  0144' 0008               	tblrd		*
  4862  0146' 50F5               	movf	tablat,w,c
  4863  0148' 0900               	iorlw	0
  4864  014A' A4D8               	btfss	status,2,c
  4865  014C' 0012               	return	
  4866                           
  4867                           ; BSR set to: 0
  4868  014E' 0E00               	movlw	0
  4869  0150' 6E00'              	movwf	GLCDMotor@k2^0,c
  4870  0152' 0012               	return	
  4871  0154'                    l4762:
  4872                           
  4873                           ; BSR set to: 0
  4874  0154' 0E0F               	movlw	15
  4875  0156' 6400'              	cpfsgt	GLCDMotor@j^0,c
  4876  0158' 0012               	return	
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;GestioLCD.c: 143:     min2++;
  4880  015A' 2A00'              	incf	GLCDMotor@min2^0,f,c
  4881                           
  4882                           ;GestioLCD.c: 144:     max2++;
  4883  015C' 2A00'              	incf	GLCDMotor@max2^0,f,c
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;GestioLCD.c: 145:     if (menu[menuDaltGLCD+1][max2] == '\0') max2=0;
  4887  015E' C009' F000'        	movff	GLCDMotor@max2,??_GLCDMotor
  4888  0162' 0E16               	movlw	22
  4889  0164' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  4890  0166' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  4891  0168' 0F00'              	addlw	low _menu
  4892  016A' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  4893  016C' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  4894  0170'                    	if	1	;There is more than 1 active tblptr byte
  4895  0170' 0E00'              	movlw	high __smallconst
  4896  0172' 6EF7               	movwf	tblptrh,c
  4897  0174'                    	endif
  4898  0174'                    	if	0	;tblptru may be non-zero
  4899  0174'                    	endif
  4900  0174'                    	if	0	;tblptru may be non-zero
  4901  0174'                    	endif
  4902  0174' 0008               	tblrd		*
  4903  0176' 50F5               	movf	tablat,w,c
  4904  0178' 0900               	iorlw	0
  4905  017A' A4D8               	btfss	status,2,c
  4906  017C' D002               	goto	l4770
  4907                           
  4908                           ; BSR set to: 0
  4909  017E' 0E00               	movlw	0
  4910  0180' 6E00'              	movwf	GLCDMotor@max2^0,c
  4911  0182'                    l4770:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;GestioLCD.c: 146:     if (menu[menuDaltGLCD+1][min2] == '\0') min2=0;
  4915  0182' C027' F000'        	movff	GLCDMotor@min2,??_GLCDMotor
  4916  0186' 0E16               	movlw	22
  4917  0188' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  4918  018A' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  4919  018C' 0F00'              	addlw	low _menu
  4920  018E' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  4921  0190' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  4922  0194'                    	if	1	;There is more than 1 active tblptr byte
  4923  0194' 0E00'              	movlw	high __smallconst
  4924  0196' 6EF7               	movwf	tblptrh,c
  4925  0198'                    	endif
  4926  0198'                    	if	0	;tblptru may be non-zero
  4927  0198'                    	endif
  4928  0198'                    	if	0	;tblptru may be non-zero
  4929  0198'                    	endif
  4930  0198' 0008               	tblrd		*
  4931  019A' 50F5               	movf	tablat,w,c
  4932  019C' 0900               	iorlw	0
  4933  019E' A4D8               	btfss	status,2,c
  4934  01A0' D002               	goto	l758
  4935                           
  4936                           ; BSR set to: 0
  4937  01A2' 0E00               	movlw	0
  4938  01A4' 6E00'              	movwf	GLCDMotor@min2^0,c
  4939  01A6'                    l758:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;GestioLCD.c: 147:     j=0;
  4943  01A6' 0E00               	movlw	0
  4944  01A8' 6E00'              	movwf	GLCDMotor@j^0,c
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;GestioLCD.c: 148:     k2=min2;
  4948  01AA' C027' F025'        	movff	GLCDMotor@min2,GLCDMotor@k2
  4949  01AE' D779               	goto	l4674
  4950  01B0'                    l4778:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;GestioLCD.c: 153:    if (TiGetTics(timerGLCD)>= 2000 && newString == 0 && ferMenu == 1)
      +                           {
  4954  01B0' 5000'              	movf	_timerGLCD^0,w,c
  4955  01B2' EC00' F000'        	call	_TiGetTics
  4956  01B6' 0012               	return	
  4957  01B8'                    l4794:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;GestioLCD.c: 163:    TiResetTics(timerGLCD);
  4961  01B8' 5000'              	movf	_timerGLCD^0,w,c
  4962  01BA' EC00' F000'        	call	_TiResetTics
  4963  01BE' D771               	goto	l4674
  4964  01C0'                    l4798:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;GestioLCD.c: 167:    if (LcLliure()) {
  4968  01C0' EC00' F000'        	call	_LcLliure	;wreg free
  4969  01C4' A0D8               	btfss	status,0,c
  4970  01C6' 0012               	return	
  4971                           
  4972                           ;GestioLCD.c: 168:     TiResetTics(timerGLCD);
  4973  01C8' 5000'              	movf	_timerGLCD^0,w,c
  4974  01CA' EC00' F000'        	call	_TiResetTics
  4975                           
  4976                           ;GestioLCD.c: 169:     state = 11;
  4977  01CE' 0E0B               	movlw	11
  4978  01D0' 6E00'              	movwf	GLCDMotor@state^0,c
  4979  01D2' 0012               	return	
  4980  01D4'                    l4804:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;GestioLCD.c: 173:    if (menu[menuDaltGLCD+1][length2] != '\0') {
  4984  01D4' C023' F000'        	movff	GLCDMotor@length2,??_GLCDMotor
  4985  01D8' 0E16               	movlw	22
  4986  01DA' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  4987  01DC' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  4988  01DE' 0F00'              	addlw	low _menu
  4989  01E0' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  4990  01E2' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  4991  01E6'                    	if	1	;There is more than 1 active tblptr byte
  4992  01E6' 0E00'              	movlw	high __smallconst
  4993  01E8' 6EF7               	movwf	tblptrh,c
  4994  01EA'                    	endif
  4995  01EA'                    	if	0	;tblptru may be non-zero
  4996  01EA'                    	endif
  4997  01EA'                    	if	0	;tblptru may be non-zero
  4998  01EA'                    	endif
  4999  01EA' 0008               	tblrd		*
  5000  01EC' 50F5               	movf	tablat,w,c
  5001  01EE' 0900               	iorlw	0
  5002  01F0' B4D8               	btfsc	status,2,c
  5003  01F2' D002               	goto	l4808
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;GestioLCD.c: 174:     length2++;
  5007  01F4' 2A00'              	incf	GLCDMotor@length2^0,f,c
  5008                           
  5009                           ;GestioLCD.c: 175:    }
  5010  01F6' 0012               	return	
  5011  01F8'                    l4808:
  5012                           
  5013                           ; BSR set to: 0
  5014  01F8' C023' F000'        	movff	GLCDMotor@length2,??_GLCDMotor
  5015  01FC' 0E16               	movlw	22
  5016  01FE' 2700'              	addwf	??_GLCDMotor& (0+255),f,b
  5017  0200' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  5018  0202' 0F00'              	addlw	low _menu
  5019  0204' 6F00'              	movwf	(??_GLCDMotor+1)& (0+255),b
  5020  0206' C001' FFF6         	movff	??_GLCDMotor+1,tblptrl
  5021  020A'                    	if	1	;There is more than 1 active tblptr byte
  5022  020A' 0E00'              	movlw	high __smallconst
  5023  020C' 6EF7               	movwf	tblptrh,c
  5024  020E'                    	endif
  5025  020E'                    	if	0	;tblptru may be non-zero
  5026  020E'                    	endif
  5027  020E'                    	if	0	;tblptru may be non-zero
  5028  020E'                    	endif
  5029  020E' 0008               	tblrd		*
  5030  0210' 50F5               	movf	tablat,w,c
  5031  0212' 0900               	iorlw	0
  5032  0214' A4D8               	btfss	status,2,c
  5033  0216' 0012               	return	
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;GestioLCD.c: 177:     state = 2;
  5037  0218' 0E02               	movlw	2
  5038  021A' 6E00'              	movwf	GLCDMotor@state^0,c
  5039  021C' 0012               	return	
  5040  021E'                    l4814:
  5041  021E' 5000'              	movf	GLCDMotor@state^0,w,c
  5042  0220' 0100               	movlb	0	; () banked
  5043  0222' 6F00'              	movwf	??_GLCDMotor& (0+255),b
  5044  0224' 6B00'              	clrf	(??_GLCDMotor+1)& (0+255),b
  5045                           
  5046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 1, Range of values is 0 to 0
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte            4     3 (average)
  5052                           ;	Chosen strategy is simple_byte
  5053  0226' 5100'              	movf	(??_GLCDMotor+1)& (0+255),w,b
  5054  0228' 0A00               	xorlw	0	; case 0
  5055  022A' A4D8               	btfss	status,2,c
  5056  022C' 0012               	return	
  5057                           
  5058                           ; BSR set to: 0
  5059                           ; Switch size 1, requested type "simple"
  5060                           ; Number of cases is 12, Range of values is 0 to 13
  5061                           ; switch strategies available:
  5062                           ; Name         Instructions Cycles
  5063                           ; simple_byte           37    19 (average)
  5064                           ;	Chosen strategy is simple_byte
  5065  022E' 5100'              	movf	??_GLCDMotor& (0+255),w,b
  5066  0230' 0A00               	xorlw	0	; case 0
  5067  0232' B4D8               	btfsc	status,2,c
  5068  0234' 0012               	return	
  5069  0236' 0A01               	xorlw	1	; case 1
  5070  0238' B4D8               	btfsc	status,2,c
  5071  023A' D741               	goto	l4718
  5072  023C' 0A03               	xorlw	3	; case 2
  5073  023E' B4D8               	btfsc	status,2,c
  5074  0240' 0012               	return	
  5075  0242' 0A01               	xorlw	1	; case 3
  5076  0244' B4D8               	btfsc	status,2,c
  5077  0246' D6DD               	goto	l4644
  5078  0248' 0A06               	xorlw	6	; case 5
  5079  024A' B4D8               	btfsc	status,2,c
  5080  024C' D72C               	goto	l4680
  5081  024E' 0A03               	xorlw	3	; case 6
  5082  0250' B4D8               	btfsc	status,2,c
  5083  0252' D725               	goto	l4672
  5084  0254' 0A01               	xorlw	1	; case 7
  5085  0256' B4D8               	btfsc	status,2,c
  5086  0258' 0012               	return	
  5087  025A' 0A0F               	xorlw	15	; case 8
  5088  025C' B4D8               	btfsc	status,2,c
  5089  025E' D7B0               	goto	l4798
  5090  0260' 0A01               	xorlw	1	; case 9
  5091  0262' B4D8               	btfsc	status,2,c
  5092  0264' D749               	goto	l4748
  5093  0266' 0A03               	xorlw	3	; case 10
  5094  0268' B4D8               	btfsc	status,2,c
  5095  026A' D7A6               	goto	l4794
  5096  026C' 0A01               	xorlw	1	; case 11
  5097  026E' B4D8               	btfsc	status,2,c
  5098  0270' D79F               	goto	l4778
  5099  0272' 0A06               	xorlw	6	; case 13
  5100  0274' A4D8               	btfss	status,2,c
  5101  0276' 0012               	return	
  5102  0278' D7AD               	goto	l4804
  5103  027A'                    __end_of_GLCDMotor:
  5104                           	callstack 0
  5105                           
  5106 ;; *************** function _LcPutFletxa *****************
  5107 ;; Defined at:
  5108 ;;		line 247 in file "LcTLCD.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1
  5122 ;;      Params:         0       0       0
  5123 ;;      Locals:         0       0       0
  5124 ;;      Temps:          0       0       0
  5125 ;;      Totals:         0       0       0
  5126 ;;Total ram usage:        0 bytes
  5127 ;; Hardware stack levels used: 1
  5128 ;; Hardware stack levels required when called: 7
  5129 ;; This function calls:
  5130 ;;		_LcGotoXY
  5131 ;;		_LcInsertFletxa
  5132 ;; This function is called by:
  5133 ;;		_GLCDMotor
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text32
  5138  0000'                    __ptext32:
  5139                           	callstack 0
  5140  0000'                    _LcPutFletxa:
  5141                           	callstack 22
  5142                           
  5143                           ;LcTLCD.c: 248:     LcGotoXY(0,0);
  5144                           
  5145                           ;incstack = 0
  5146  0000' 0E00               	movlw	0
  5147  0002' 6E00'              	movwf	LcGotoXY@Row^0,c
  5148  0004' 0E00               	movlw	0
  5149  0006' EC00' F000'        	call	_LcGotoXY
  5150                           
  5151                           ;LcTLCD.c: 250:     LcInsertFletxa();
  5152  000A' EC00' F000'        	call	_LcInsertFletxa	;wreg free
  5153  000E' 0012               	return		;funcret
  5154  0010'                    __end_of_LcPutFletxa:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function _LcInsertFletxa *****************
  5158 ;; Defined at:
  5159 ;;		line 243 in file "LcTLCD.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1
  5173 ;;      Params:         0       0       0
  5174 ;;      Locals:         0       0       0
  5175 ;;      Temps:          0       0       0
  5176 ;;      Totals:         0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 6
  5180 ;; This function calls:
  5181 ;;		_LcPutChar
  5182 ;; This function is called by:
  5183 ;;		_LcPutFletxa
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text33
  5188  0000'                    __ptext33:
  5189                           	callstack 0
  5190  0000'                    _LcInsertFletxa:
  5191                           	callstack 22
  5192                           
  5193                           ;LcTLCD.c: 244:     LcPutChar('-');
  5194                           
  5195                           ;incstack = 0
  5196  0000' 0E2D               	movlw	45
  5197  0002' EC00' F000'        	call	_LcPutChar
  5198                           
  5199                           ;LcTLCD.c: 245:     LcPutChar('>');
  5200  0006' 0E3E               	movlw	62
  5201  0008' EC00' F000'        	call	_LcPutChar
  5202  000C' 0012               	return		;funcret
  5203  000E'                    __end_of_LcInsertFletxa:
  5204                           	callstack 0
  5205                           
  5206 ;; *************** function _LcPutChar *****************
  5207 ;; Defined at:
  5208 ;;		line 132 in file "LcTLCD.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  c               1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  c               1   19[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1
  5222 ;;      Params:         0       0       0
  5223 ;;      Locals:         1       0       0
  5224 ;;      Temps:          0       0       0
  5225 ;;      Totals:         1       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 5
  5229 ;; This function calls:
  5230 ;;		_CantaData
  5231 ;;		_LcGotoXY
  5232 ;;		_WaitForBusy
  5233 ;; This function is called by:
  5234 ;;		_LcInsertFletxa
  5235 ;;		_LcLCD
  5236 ;;		_menu
  5237 ;;		_GLCDMotor
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text34
  5242  0000'                    __ptext34:
  5243                           	callstack 0
  5244  0000'                    _LcPutChar:
  5245                           	callstack 24
  5246                           
  5247                           ;incstack = 0
  5248                           ;LcPutChar@c stored from wreg
  5249  0000' 6E00'              	movwf	LcPutChar@c^0,c
  5250                           
  5251                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  5252  0002' EC00' F000'        	call	_WaitForBusy	;wreg free
  5253  0006' 5000'              	movf	LcPutChar@c^0,w,c
  5254  0008' EC00' F000'        	call	_CantaData
  5255                           
  5256                           ;LcTLCD.c: 136:  ++ColumnAct;
  5257  000C' 2A00'              	incf	_ColumnAct^0,f,c
  5258                           
  5259                           ;LcTLCD.c: 138:  if (Rows == 2) {
  5260  000E' 0E02               	movlw	2
  5261  0010' 1800'              	xorwf	_Rows^0,w,c
  5262  0012' A4D8               	btfss	status,2,c
  5263  0014' D010               	goto	l3850
  5264                           
  5265                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  5266  0016' 0E27               	movlw	39
  5267  0018' 6400'              	cpfsgt	_ColumnAct^0,c
  5268  001A' D00D               	goto	l3850
  5269                           
  5270                           ;LcTLCD.c: 140:    ColumnAct = 0;
  5271  001C' 0E00               	movlw	0
  5272  001E' 6E00'              	movwf	_ColumnAct^0,c
  5273                           
  5274                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  5275  0020' 2A00'              	incf	_RowAct^0,f,c
  5276  0022' 0E01               	movlw	1
  5277  0024' 6400'              	cpfsgt	_RowAct^0,c
  5278  0026' D002               	goto	l3848
  5279  0028' 0E00               	movlw	0
  5280  002A' 6E00'              	movwf	_RowAct^0,c
  5281  002C'                    l3848:
  5282                           
  5283                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  5284  002C' C047' F00D'        	movff	_RowAct,LcGotoXY@Row
  5285  0030' 5000'              	movf	_ColumnAct^0,w,c
  5286  0032' EC00' F000'        	call	_LcGotoXY
  5287  0036'                    l3850:
  5288                           
  5289                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  5290  0036' 0400'              	decf	_RowAct^0,w,c
  5291  0038' A4D8               	btfss	status,2,c
  5292  003A' 0012               	return	
  5293                           
  5294                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  5295  003C' 0E27               	movlw	39
  5296  003E' 6400'              	cpfsgt	_ColumnAct^0,c
  5297  0040' D002               	goto	l3856
  5298  0042' 0E00               	movlw	0
  5299  0044' 6E00'              	movwf	_ColumnAct^0,c
  5300  0046'                    l3856:
  5301                           
  5302                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  5303  0046' C047' F00D'        	movff	_RowAct,LcGotoXY@Row
  5304  004A' 5000'              	movf	_ColumnAct^0,w,c
  5305  004C' EC00' F000'        	call	_LcGotoXY
  5306  0050' 0012               	return		;funcret
  5307  0052'                    __end_of_LcPutChar:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function _CantaData *****************
  5311 ;; Defined at:
  5312 ;;		line 194 in file "LcTLCD.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  Data            1    wreg     unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  Data            1    7[COMRAM] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1
  5326 ;;      Params:         0       0       0
  5327 ;;      Locals:         1       0       0
  5328 ;;      Temps:          0       0       0
  5329 ;;      Totals:         1       0       0
  5330 ;;Total ram usage:        1 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 3
  5333 ;; This function calls:
  5334 ;;		_CantaPartAlta
  5335 ;;		_CantaPartBaixa
  5336 ;; This function is called by:
  5337 ;;		_LcPutChar
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text35
  5342  0000'                    __ptext35:
  5343                           	callstack 0
  5344  0000'                    _CantaData:
  5345                           	callstack 25
  5346                           
  5347                           ;incstack = 0
  5348                           ;CantaData@Data stored from wreg
  5349  0000' 6E00'              	movwf	CantaData@Data^0,c
  5350                           
  5351                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5352  0002' 9694               	bcf	148,3,c	;volatile
  5353  0004' 9494               	bcf	148,2,c	;volatile
  5354  0006' 9294               	bcf	148,1,c	;volatile
  5355  0008' 9094               	bcf	148,0,c	;volatile
  5356                           
  5357                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  5358  000A' 8A8B               	bsf	139,5,c	;volatile
  5359                           
  5360                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  5361  000C' 9E8C               	bcf	140,7,c	;volatile
  5362                           
  5363                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  5364  000E' 888B               	bsf	139,4,c	;volatile
  5365                           
  5366                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  5367  0010' 5000'              	movf	CantaData@Data^0,w,c
  5368  0012' EC00' F000'        	call	_CantaPartAlta
  5369                           
  5370                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  5371  0016' 888B               	bsf	139,4,c	;volatile
  5372                           
  5373                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  5374  0018' 988B               	bcf	139,4,c	;volatile
  5375                           
  5376                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  5377  001A' 988B               	bcf	139,4,c	;volatile
  5378                           
  5379                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  5380  001C' 888B               	bsf	139,4,c	;volatile
  5381                           
  5382                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  5383  001E' 5000'              	movf	CantaData@Data^0,w,c
  5384  0020' EC00' F000'        	call	_CantaPartBaixa
  5385                           
  5386                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  5387  0024' 888B               	bsf	139,4,c	;volatile
  5388                           
  5389                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  5390  0026' 988B               	bcf	139,4,c	;volatile
  5391                           
  5392                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5393  0028' 8694               	bsf	148,3,c	;volatile
  5394  002A' 8494               	bsf	148,2,c	;volatile
  5395  002C' 8294               	bsf	148,1,c	;volatile
  5396  002E' 8094               	bsf	148,0,c	;volatile
  5397  0030' 0012               	return		;funcret
  5398  0032'                    __end_of_CantaData:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _LcNewString *****************
  5402 ;; Defined at:
  5403 ;;		line 239 in file "LcTLCD.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  5406 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  5407 ;;		 -> menu(110), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1
  5419 ;;      Params:         1       0       0
  5420 ;;      Locals:         0       0       0
  5421 ;;      Temps:          0       0       0
  5422 ;;      Totals:         1       0       0
  5423 ;;Total ram usage:        1 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 2
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_menu
  5430 ;;		_GLCDMotor
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text36
  5435  0000'                    __ptext36:
  5436                           	callstack 0
  5437  0000'                    _LcNewString:
  5438                           	callstack 27
  5439                           
  5440                           ;LcTLCD.c: 240:     s_ptr = new_s;
  5441                           
  5442                           ;incstack = 0
  5443  0000' C005' F044'        	movff	LcNewString@new_s,_s_ptr
  5444                           
  5445                           ;LcTLCD.c: 241:     nou_s = 1;
  5446  0004' 8000'              	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5447  0006' 0012               	return		;funcret
  5448  0008'                    __end_of_LcNewString:
  5449                           	callstack 0
  5450                           
  5451 ;; *************** function _LcLliure *****************
  5452 ;; Defined at:
  5453 ;;		line 265 in file "LcTLCD.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1
  5467 ;;      Params:         0       0       0
  5468 ;;      Locals:         0       0       0
  5469 ;;      Temps:          0       0       0
  5470 ;;      Totals:         0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used: 1
  5473 ;; Hardware stack levels required when called: 2
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_menu
  5478 ;;		_GLCDMotor
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text37
  5483  0000'                    __ptext37:
  5484                           	callstack 0
  5485  0000'                    _LcLliure:
  5486                           	callstack 27
  5487                           
  5488                           ;LcTLCD.c: 266:     return !nou_s;
  5489                           
  5490                           ;incstack = 0
  5491  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5492  0002' D002               	goto	l3910
  5493  0004' 90D8               	bcf	status,0,c
  5494  0006' 0012               	return	
  5495  0008'                    l3910:
  5496  0008' 80D8               	bsf	status,0,c
  5497  000A' 0012               	return		;funcret
  5498  000C'                    __end_of_LcLliure:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _LcClear *****************
  5502 ;; Defined at:
  5503 ;;		line 82 in file "LcTLCD.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1
  5517 ;;      Params:         0       0       0
  5518 ;;      Locals:         0       0       0
  5519 ;;      Temps:          0       0       0
  5520 ;;      Totals:         0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 5
  5524 ;; This function calls:
  5525 ;;		_CantaIR
  5526 ;;		_Espera
  5527 ;;		_LcGotoXY
  5528 ;;		_WaitForBusy
  5529 ;; This function is called by:
  5530 ;;		_menu
  5531 ;;		_GLCDMotor
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text38
  5536  0000'                    __ptext38:
  5537                           	callstack 0
  5538  0000'                    _LcClear:
  5539                           	callstack 24
  5540                           
  5541                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  5542                           
  5543                           ;incstack = 0
  5544  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
  5545  0004' 0E01               	movlw	1
  5546  0006' EC00' F000'        	call	_CantaIR
  5547                           
  5548                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  5549  000A' 0E00               	movlw	0
  5550  000C' 6E00'              	movwf	(Espera@ms+1)^0,c
  5551  000E' 0E03               	movlw	3
  5552  0010' 6E00'              	movwf	Espera@ms^0,c
  5553  0012' 5000'              	movf	_Timer^0,w,c
  5554  0014' EC00' F000'        	call	_Espera
  5555                           
  5556                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  5557  0018' 0E00               	movlw	0
  5558  001A' 6E00'              	movwf	LcGotoXY@Row^0,c
  5559  001C' 0E00               	movlw	0
  5560  001E' EC00' F000'        	call	_LcGotoXY
  5561  0022' 0012               	return		;funcret
  5562  0024'                    __end_of_LcClear:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _LcGotoXY *****************
  5566 ;; Defined at:
  5567 ;;		line 104 in file "LcTLCD.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  Column          1    wreg     unsigned char 
  5570 ;;  Row             1   13[COMRAM] unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  Column          1   18[COMRAM] unsigned char 
  5573 ;;  Fisics          2   14[COMRAM] int 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1
  5583 ;;      Params:         1       0       0
  5584 ;;      Locals:         5       0       0
  5585 ;;      Temps:          0       0       0
  5586 ;;      Totals:         6       0       0
  5587 ;;Total ram usage:        6 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		_CantaIR
  5592 ;;		_WaitForBusy
  5593 ;; This function is called by:
  5594 ;;		_LcClear
  5595 ;;		_LcPutChar
  5596 ;;		_LcPutFletxa
  5597 ;;		_menu
  5598 ;;		_GLCDMotor
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text39
  5603  0000'                    __ptext39:
  5604                           	callstack 0
  5605  0000'                    _LcGotoXY:
  5606                           	callstack 24
  5607                           
  5608                           ;incstack = 0
  5609                           ;LcGotoXY@Column stored from wreg
  5610  0000' 6E00'              	movwf	LcGotoXY@Column^0,c
  5611                           
  5612                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  5613  0002' 5000'              	movf	LcGotoXY@Row^0,w,c
  5614  0004' B4D8               	btfsc	status,2,c
  5615  0006' D004               	goto	l3802
  5616  0008' 0E00               	movlw	0
  5617  000A' 6E00'              	movwf	(_LcGotoXY$342+1)^0,c
  5618  000C' 0E40               	movlw	64
  5619  000E' D003               	goto	L5
  5620  0010'                    l3802:
  5621  0010' 0E00               	movlw	0
  5622  0012' 6E00'              	movwf	(_LcGotoXY$342+1)^0,c
  5623  0014' 0E00               	movlw	0
  5624  0016'                    L5:
  5625  0016' 6E00'              	movwf	_LcGotoXY$342^0,c
  5626  0018' 5000'              	movf	LcGotoXY@Column^0,w,c
  5627  001A' 2400'              	addwf	_LcGotoXY$342^0,w,c
  5628  001C' 6E00'              	movwf	LcGotoXY@Fisics^0,c
  5629  001E' 0E00               	movlw	0
  5630  0020' 2000'              	addwfc	(_LcGotoXY$342+1)^0,w,c
  5631  0022' 6E00'              	movwf	(LcGotoXY@Fisics+1)^0,c
  5632                           
  5633                           ;LcTLCD.c: 125:  WaitForBusy();
  5634  0024' EC00' F000'        	call	_WaitForBusy	;wreg free
  5635                           
  5636                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  5637  0028' 5000'              	movf	LcGotoXY@Fisics^0,w,c
  5638  002A' 0980               	iorlw	128
  5639  002C' EC00' F000'        	call	_CantaIR
  5640                           
  5641                           ;LcTLCD.c: 128:  RowAct = Row;
  5642  0030' C00D' F047'        	movff	LcGotoXY@Row,_RowAct
  5643                           
  5644                           ;LcTLCD.c: 129:  ColumnAct = Column;
  5645  0034' C012' F046'        	movff	LcGotoXY@Column,_ColumnAct
  5646  0038' 0012               	return		;funcret
  5647  003A'                    __end_of_LcGotoXY:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _WaitForBusy *****************
  5651 ;; Defined at:
  5652 ;;		line 210 in file "LcTLCD.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  Busy            1   12[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1
  5666 ;;      Params:         0       0       0
  5667 ;;      Locals:         1       0       0
  5668 ;;      Temps:          0       0       0
  5669 ;;      Totals:         1       0       0
  5670 ;;Total ram usage:        1 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 3
  5673 ;; This function calls:
  5674 ;;		_TiGetTics
  5675 ;;		_TiResetTics
  5676 ;; This function is called by:
  5677 ;;		_LcInit
  5678 ;;		_LcClear
  5679 ;;		_LcCursorOff
  5680 ;;		_LcGotoXY
  5681 ;;		_LcPutChar
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text40
  5686  0000'                    __ptext40:
  5687                           	callstack 0
  5688  0000'                    _WaitForBusy:
  5689                           	callstack 25
  5690                           
  5691                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5692                           
  5693                           ;incstack = 0
  5694  0000' 8694               	bsf	148,3,c	;volatile
  5695  0002' 8494               	bsf	148,2,c	;volatile
  5696  0004' 8294               	bsf	148,1,c	;volatile
  5697  0006' 8094               	bsf	148,0,c	;volatile
  5698                           
  5699                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  5700  0008' 9A8B               	bcf	139,5,c	;volatile
  5701                           
  5702                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  5703  000A' 8E8C               	bsf	140,7,c	;volatile
  5704                           
  5705                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  5706  000C' 5000'              	movf	_Timer^0,w,c
  5707  000E' EC00' F000'        	call	_TiResetTics
  5708  0012'                    l3774:
  5709                           
  5710                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  5711  0012' 888B               	bsf	139,4,c	;volatile
  5712  0014' 888B               	bsf	139,4,c	;volatile
  5713                           
  5714                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  5715  0016' 0E00               	movlw	0
  5716  0018' B682               	btfsc	130,3,c	;volatile
  5717  001A' 0E01               	movlw	1
  5718  001C' 6E00'              	movwf	WaitForBusy@Busy^0,c
  5719                           
  5720                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  5721  001E' 988B               	bcf	139,4,c	;volatile
  5722                           
  5723                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  5724  0020' 988B               	bcf	139,4,c	;volatile
  5725                           
  5726                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  5727  0022' 888B               	bsf	139,4,c	;volatile
  5728  0024' 888B               	bsf	139,4,c	;volatile
  5729                           
  5730                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  5731  0026' 988B               	bcf	139,4,c	;volatile
  5732                           
  5733                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  5734  0028' 988B               	bcf	139,4,c	;volatile
  5735                           
  5736                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  5737  002A' 5000'              	movf	_Timer^0,w,c
  5738  002C' EC00' F000'        	call	_TiGetTics
  5739  0030' 5000'              	movf	?_TiGetTics^0,w,c
  5740  0032' 1000'              	iorwf	(?_TiGetTics+1)^0,w,c
  5741  0034' A4D8               	btfss	status,2,c
  5742  0036' 0012               	return	
  5743                           
  5744                           ;LcTLCD.c: 225:  } while(Busy);
  5745  0038' 5000'              	movf	WaitForBusy@Busy^0,w,c
  5746  003A' B4D8               	btfsc	status,2,c
  5747  003C' 0012               	return	
  5748  003E' D7E9               	goto	l3774
  5749  0040'                    __end_of_WaitForBusy:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function _CantaIR *****************
  5753 ;; Defined at:
  5754 ;;		line 178 in file "LcTLCD.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  IR              1    wreg     unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  IR              1    7[COMRAM] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1
  5768 ;;      Params:         0       0       0
  5769 ;;      Locals:         1       0       0
  5770 ;;      Temps:          0       0       0
  5771 ;;      Totals:         1       0       0
  5772 ;;Total ram usage:        1 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; Hardware stack levels required when called: 3
  5775 ;; This function calls:
  5776 ;;		_CantaPartAlta
  5777 ;;		_CantaPartBaixa
  5778 ;; This function is called by:
  5779 ;;		_LcInit
  5780 ;;		_LcClear
  5781 ;;		_LcCursorOff
  5782 ;;		_LcGotoXY
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text41
  5787  0000'                    __ptext41:
  5788                           	callstack 0
  5789  0000'                    _CantaIR:
  5790                           	callstack 24
  5791                           
  5792                           ;incstack = 0
  5793                           ;CantaIR@IR stored from wreg
  5794  0000' 6E00'              	movwf	CantaIR@IR^0,c
  5795                           
  5796                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5797  0002' 9694               	bcf	148,3,c	;volatile
  5798  0004' 9494               	bcf	148,2,c	;volatile
  5799  0006' 9294               	bcf	148,1,c	;volatile
  5800  0008' 9094               	bcf	148,0,c	;volatile
  5801                           
  5802                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  5803  000A' 9A8B               	bcf	139,5,c	;volatile
  5804                           
  5805                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  5806  000C' 9E8C               	bcf	140,7,c	;volatile
  5807                           
  5808                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  5809  000E' 888B               	bsf	139,4,c	;volatile
  5810                           
  5811                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  5812  0010' 5000'              	movf	CantaIR@IR^0,w,c
  5813  0012' EC00' F000'        	call	_CantaPartAlta
  5814                           
  5815                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  5816  0016' 888B               	bsf	139,4,c	;volatile
  5817                           
  5818                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  5819  0018' 988B               	bcf	139,4,c	;volatile
  5820                           
  5821                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  5822  001A' 988B               	bcf	139,4,c	;volatile
  5823                           
  5824                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  5825  001C' 888B               	bsf	139,4,c	;volatile
  5826                           
  5827                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  5828  001E' 5000'              	movf	CantaIR@IR^0,w,c
  5829  0020' EC00' F000'        	call	_CantaPartBaixa
  5830                           
  5831                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  5832  0024' 888B               	bsf	139,4,c	;volatile
  5833                           
  5834                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  5835  0026' 988B               	bcf	139,4,c	;volatile
  5836                           
  5837                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5838  0028' 8694               	bsf	148,3,c	;volatile
  5839  002A' 8494               	bsf	148,2,c	;volatile
  5840  002C' 8294               	bsf	148,1,c	;volatile
  5841  002E' 8094               	bsf	148,0,c	;volatile
  5842  0030' 0012               	return		;funcret
  5843  0032'                    __end_of_CantaIR:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _CantaPartBaixa *****************
  5847 ;; Defined at:
  5848 ;;		line 171 in file "LcTLCD.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  c               1    wreg     unsigned char 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  c               1    6[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1
  5862 ;;      Params:         0       0       0
  5863 ;;      Locals:         1       0       0
  5864 ;;      Temps:          1       0       0
  5865 ;;      Totals:         2       0       0
  5866 ;;Total ram usage:        2 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 2
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_CantaIR
  5873 ;;		_CantaData
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text42
  5878  0000'                    __ptext42:
  5879                           	callstack 0
  5880  0000'                    _CantaPartBaixa:
  5881                           	callstack 24
  5882                           
  5883                           ;incstack = 0
  5884                           ;CantaPartBaixa@c stored from wreg
  5885  0000' 6E00'              	movwf	CantaPartBaixa@c^0,c
  5886                           
  5887                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  5888  0002' A600'              	btfss	CantaPartBaixa@c^0,3,c
  5889  0004' D003               	goto	u3220
  5890  0006' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5891  0008' 2A00'              	incf	??_CantaPartBaixa^0,f,c
  5892  000A' D001               	goto	u3238
  5893  000C'                    u3220:
  5894  000C' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5895  000E'                    u3238:
  5896  000E' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5897  0010' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5898  0012' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5899  0014' 508B               	movf	139,w,c	;volatile
  5900  0016' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5901  0018' 0BF7               	andlw	-9
  5902  001A' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5903  001C' 6E8B               	movwf	139,c	;volatile
  5904                           
  5905                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  5906  001E' A400'              	btfss	CantaPartBaixa@c^0,2,c
  5907  0020' D003               	goto	u3240
  5908  0022' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5909  0024' 2A00'              	incf	??_CantaPartBaixa^0,f,c
  5910  0026' D001               	goto	u3258
  5911  0028'                    u3240:
  5912  0028' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5913  002A'                    u3258:
  5914  002A' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5915  002C' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5916  002E' 508B               	movf	139,w,c	;volatile
  5917  0030' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5918  0032' 0BFB               	andlw	-5
  5919  0034' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5920  0036' 6E8B               	movwf	139,c	;volatile
  5921                           
  5922                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  5923  0038' A200'              	btfss	CantaPartBaixa@c^0,1,c
  5924  003A' D003               	goto	u3260
  5925  003C' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5926  003E' 2A00'              	incf	??_CantaPartBaixa^0,f,c
  5927  0040' D001               	goto	u3278
  5928  0042'                    u3260:
  5929  0042' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5930  0044'                    u3278:
  5931  0044' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
  5932  0046' 508B               	movf	139,w,c	;volatile
  5933  0048' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5934  004A' 0BFD               	andlw	-3
  5935  004C' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5936  004E' 6E8B               	movwf	139,c	;volatile
  5937                           
  5938                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  5939  0050' A000'              	btfss	CantaPartBaixa@c^0,0,c
  5940  0052' D003               	goto	u3280
  5941  0054' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5942  0056' 2A00'              	incf	??_CantaPartBaixa^0,f,c
  5943  0058' D001               	goto	u3298
  5944  005A'                    u3280:
  5945  005A' 6A00'              	clrf	??_CantaPartBaixa^0,c
  5946  005C'                    u3298:
  5947  005C' 508B               	movf	139,w,c	;volatile
  5948  005E' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5949  0060' 0BFE               	andlw	-2
  5950  0062' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
  5951  0064' 6E8B               	movwf	139,c	;volatile
  5952  0066' 0012               	return		;funcret
  5953  0068'                    __end_of_CantaPartBaixa:
  5954                           	callstack 0
  5955                           
  5956 ;; *************** function _CantaPartAlta *****************
  5957 ;; Defined at:
  5958 ;;		line 164 in file "LcTLCD.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  c               1    wreg     unsigned char 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  c               1    6[COMRAM] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1
  5972 ;;      Params:         0       0       0
  5973 ;;      Locals:         1       0       0
  5974 ;;      Temps:          1       0       0
  5975 ;;      Totals:         2       0       0
  5976 ;;Total ram usage:        2 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 2
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_CantaIR
  5983 ;;		_CantaData
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text43
  5988  0000'                    __ptext43:
  5989                           	callstack 0
  5990  0000'                    _CantaPartAlta:
  5991                           	callstack 24
  5992                           
  5993                           ;incstack = 0
  5994                           ;CantaPartAlta@c stored from wreg
  5995  0000' 6E00'              	movwf	CantaPartAlta@c^0,c
  5996                           
  5997                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  5998  0002' AE00'              	btfss	CantaPartAlta@c^0,7,c
  5999  0004' D003               	goto	u3140
  6000  0006' 6A00'              	clrf	??_CantaPartAlta^0,c
  6001  0008' 2A00'              	incf	??_CantaPartAlta^0,f,c
  6002  000A' D001               	goto	u3158
  6003  000C'                    u3140:
  6004  000C' 6A00'              	clrf	??_CantaPartAlta^0,c
  6005  000E'                    u3158:
  6006  000E' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6007  0010' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6008  0012' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6009  0014' 508B               	movf	139,w,c	;volatile
  6010  0016' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6011  0018' 0BF7               	andlw	-9
  6012  001A' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6013  001C' 6E8B               	movwf	139,c	;volatile
  6014                           
  6015                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6016  001E' AC00'              	btfss	CantaPartAlta@c^0,6,c
  6017  0020' D003               	goto	u3160
  6018  0022' 6A00'              	clrf	??_CantaPartAlta^0,c
  6019  0024' 2A00'              	incf	??_CantaPartAlta^0,f,c
  6020  0026' D001               	goto	u3178
  6021  0028'                    u3160:
  6022  0028' 6A00'              	clrf	??_CantaPartAlta^0,c
  6023  002A'                    u3178:
  6024  002A' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6025  002C' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6026  002E' 508B               	movf	139,w,c	;volatile
  6027  0030' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6028  0032' 0BFB               	andlw	-5
  6029  0034' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6030  0036' 6E8B               	movwf	139,c	;volatile
  6031                           
  6032                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6033  0038' AA00'              	btfss	CantaPartAlta@c^0,5,c
  6034  003A' D003               	goto	u3180
  6035  003C' 6A00'              	clrf	??_CantaPartAlta^0,c
  6036  003E' 2A00'              	incf	??_CantaPartAlta^0,f,c
  6037  0040' D001               	goto	u3198
  6038  0042'                    u3180:
  6039  0042' 6A00'              	clrf	??_CantaPartAlta^0,c
  6040  0044'                    u3198:
  6041  0044' 4600'              	rlncf	??_CantaPartAlta^0,f,c
  6042  0046' 508B               	movf	139,w,c	;volatile
  6043  0048' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6044  004A' 0BFD               	andlw	-3
  6045  004C' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6046  004E' 6E8B               	movwf	139,c	;volatile
  6047                           
  6048                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6049  0050' A800'              	btfss	CantaPartAlta@c^0,4,c
  6050  0052' D003               	goto	u3200
  6051  0054' 6A00'              	clrf	??_CantaPartAlta^0,c
  6052  0056' 2A00'              	incf	??_CantaPartAlta^0,f,c
  6053  0058' D001               	goto	u3218
  6054  005A'                    u3200:
  6055  005A' 6A00'              	clrf	??_CantaPartAlta^0,c
  6056  005C'                    u3218:
  6057  005C' 508B               	movf	139,w,c	;volatile
  6058  005E' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6059  0060' 0BFE               	andlw	-2
  6060  0062' 1800'              	xorwf	??_CantaPartAlta^0,w,c
  6061  0064' 6E8B               	movwf	139,c	;volatile
  6062  0066' 0012               	return		;funcret
  6063  0068'                    __end_of_CantaPartAlta:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _Espera *****************
  6067 ;; Defined at:
  6068 ;;		line 159 in file "LcTLCD.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  Timer           1    wreg     unsigned char 
  6071 ;;  ms              2   12[COMRAM] int 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  Timer           1   15[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1
  6083 ;;      Params:         2       0       0
  6084 ;;      Locals:         1       0       0
  6085 ;;      Temps:          1       0       0
  6086 ;;      Totals:         4       0       0
  6087 ;;Total ram usage:        4 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 3
  6090 ;; This function calls:
  6091 ;;		_TiGetTics
  6092 ;;		_TiResetTics
  6093 ;; This function is called by:
  6094 ;;		_LcInit
  6095 ;;		_LcClear
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text44
  6100  0000'                    __ptext44:
  6101                           	callstack 0
  6102  0000'                    _Espera:
  6103                           	callstack 25
  6104                           
  6105                           ;incstack = 0
  6106                           ;Espera@Timer stored from wreg
  6107  0000' 6E00'              	movwf	Espera@Timer^0,c
  6108                           
  6109                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  6110  0002' 5000'              	movf	Espera@Timer^0,w,c
  6111  0004' EC00' F000'        	call	_TiResetTics
  6112  0008'                    l3860:
  6113  0008' 5000'              	movf	Espera@Timer^0,w,c
  6114  000A' EC00' F000'        	call	_TiGetTics
  6115  000E' 5000'              	movf	Espera@ms^0,w,c
  6116  0010' 5C00'              	subwf	?_TiGetTics^0,w,c
  6117  0012' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  6118  0014' 0A80               	xorlw	128
  6119  0016' 6E00'              	movwf	??_Espera^0,c
  6120  0018' 5000'              	movf	(Espera@ms+1)^0,w,c
  6121  001A' 0A80               	xorlw	128
  6122  001C' 5800'              	subwfb	??_Espera^0,w,c
  6123  001E' B0D8               	btfsc	status,0,c
  6124  0020' 0012               	return	
  6125  0022' D7F2               	goto	l3860
  6126  0024'                    __end_of_Espera:
  6127                           	callstack 0
  6128                           
  6129 ;; *************** function _TiResetTics *****************
  6130 ;; Defined at:
  6131 ;;		line 55 in file "TiTTimer.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  Handle          1    wreg     unsigned char 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  Handle          1    5[COMRAM] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1
  6145 ;;      Params:         0       0       0
  6146 ;;      Locals:         1       0       0
  6147 ;;      Temps:          0       0       0
  6148 ;;      Totals:         1       0       0
  6149 ;;Total ram usage:        1 bytes
  6150 ;; Hardware stack levels used: 1
  6151 ;; Hardware stack levels required when called: 2
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_Espera
  6156 ;;		_WaitForBusy
  6157 ;;		_SMotor
  6158 ;;		_TeTeclat
  6159 ;;		_motorAltaveu
  6160 ;;		_GLCDMotor
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text45
  6165  0000'                    __ptext45:
  6166                           	callstack 0
  6167  0000'                    _TiResetTics:
  6168                           	callstack 27
  6169                           
  6170                           ;incstack = 0
  6171                           ;TiResetTics@Handle stored from wreg
  6172  0000' 6E00'              	movwf	TiResetTics@Handle^0,c
  6173                           
  6174                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  6175  0002' 5000'              	movf	TiResetTics@Handle^0,w,c
  6176  0004' 0D03               	mullw	3
  6177  0006' 50F3               	movf	243,w,c
  6178  0008' 0F00'              	addlw	low _s_Timers
  6179  000A' 6ED9               	movwf	fsr2l,c
  6180  000C' 6ADA               	clrf	fsr2h,c
  6181  000E' C021' FFDE         	movff	_h_Tics,postinc2
  6182  0012' C022' FFDD         	movff	_h_Tics+1,postdec2
  6183  0016' 0012               	return		;funcret
  6184  0018'                    __end_of_TiResetTics:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function _TiGetTics *****************
  6188 ;; Defined at:
  6189 ;;		line 61 in file "TiTTimer.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  Handle          1    wreg     unsigned char 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  Handle          1    9[COMRAM] unsigned char 
  6194 ;;  actual          2   10[COMRAM] volatile unsigned int 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2    5[COMRAM] int 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1
  6204 ;;      Params:         2       0       0
  6205 ;;      Locals:         3       0       0
  6206 ;;      Temps:          2       0       0
  6207 ;;      Totals:         7       0       0
  6208 ;;Total ram usage:        7 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 2
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_Espera
  6215 ;;		_WaitForBusy
  6216 ;;		_SMotor
  6217 ;;		_TeTeclat
  6218 ;;		_motorAltaveu
  6219 ;;		_GLCDMotor
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text46
  6224  0000'                    __ptext46:
  6225                           	callstack 0
  6226  0000'                    _TiGetTics:
  6227                           	callstack 27
  6228                           
  6229                           ;incstack = 0
  6230                           ;TiGetTics@Handle stored from wreg
  6231  0000' 6E00'              	movwf	TiGetTics@Handle^0,c
  6232                           
  6233                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  6234  0002' C021' F00A'        	movff	_h_Tics,TiGetTics@actual	;volatile
  6235  0006' C022' F00B'        	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  6236                           
  6237                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  6238  000A' 5000'              	movf	TiGetTics@Handle^0,w,c
  6239  000C' 0D03               	mullw	3
  6240  000E' 50F3               	movf	243,w,c
  6241  0010' 0F00'              	addlw	low _s_Timers
  6242  0012' 6ED9               	movwf	fsr2l,c
  6243  0014' 6ADA               	clrf	fsr2h,c
  6244  0016' CFDE F007'         	movff	postinc2,??_TiGetTics
  6245  001A' CFDD F008'         	movff	postdec2,??_TiGetTics+1
  6246  001E' 5000'              	movf	??_TiGetTics^0,w,c
  6247  0020' 5C00'              	subwf	TiGetTics@actual^0,w,c	;volatile
  6248  0022' 6E00'              	movwf	?_TiGetTics^0,c
  6249  0024' 5000'              	movf	(??_TiGetTics+1)^0,w,c
  6250  0026' 5800'              	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  6251  0028' 6E00'              	movwf	(?_TiGetTics+1)^0,c
  6252  002A' 0012               	return		;funcret
  6253  002C'                    __end_of_TiGetTics:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _GLCDInit *****************
  6257 ;; Defined at:
  6258 ;;		line 26 in file "GestioLCD.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1
  6272 ;;      Params:         0       0       0
  6273 ;;      Locals:         0       0       0
  6274 ;;      Temps:          0       0       0
  6275 ;;      Totals:         0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 3
  6279 ;; This function calls:
  6280 ;;		_TiGetTimer
  6281 ;; This function is called by:
  6282 ;;		_main
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text47
  6287  0000'                    __ptext47:
  6288                           	callstack 0
  6289  0000'                    _GLCDInit:
  6290                           	callstack 27
  6291                           
  6292                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  6293                           
  6294                           ;incstack = 0
  6295  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6296  0004' 6E00'              	movwf	_timerGLCD^0,c
  6297  0006' 0012               	return		;funcret
  6298  0008'                    __end_of_GLCDInit:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _TiGetTimer *****************
  6302 ;; Defined at:
  6303 ;;		line 70 in file "TiTTimer.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      unsigned char 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1
  6317 ;;      Params:         0       0       0
  6318 ;;      Locals:         0       0       0
  6319 ;;      Temps:          1       0       0
  6320 ;;      Totals:         1       0       0
  6321 ;;Total ram usage:        1 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 2
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_LcInit
  6328 ;;		_Sinit
  6329 ;;		_TeInit
  6330 ;;		_Minit
  6331 ;;		_initAltaveu
  6332 ;;		_GLCDInit
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text48
  6337  0000'                    __ptext48:
  6338                           	callstack 0
  6339  0000'                    _TiGetTimer:
  6340                           	callstack 27
  6341                           
  6342                           ;TiTTimer.c: 74:     counter=0;
  6343                           
  6344                           ;incstack = 0
  6345  0000' 0E00               	movlw	0
  6346  0002' 6E00'              	movwf	_counter^0,c
  6347                           
  6348                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6349  0004' D007               	goto	l3874
  6350  0006'                    l3866:
  6351                           
  6352                           ;TiTTimer.c: 76:         counter++;
  6353  0006' 2A00'              	incf	_counter^0,f,c
  6354                           
  6355                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  6356  0008' 0E08               	movlw	8
  6357  000A' 1800'              	xorwf	_counter^0,w,c
  6358  000C' A4D8               	btfss	status,2,c
  6359  000E' D002               	goto	l3874
  6360  0010' 0EFF               	movlw	255
  6361  0012' 0012               	return	
  6362  0014'                    l3874:
  6363                           
  6364                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6365  0014' 5000'              	movf	_counter^0,w,c
  6366  0016' 0D03               	mullw	3
  6367  0018' 50F3               	movf	243,w,c
  6368  001A' 0F00'              	addlw	low (_s_Timers+2)
  6369  001C' 6ED9               	movwf	fsr2l,c
  6370  001E' 6ADA               	clrf	fsr2h,c
  6371  0020' 04DE               	decf	postinc2,w,c
  6372  0022' B4D8               	btfsc	status,2,c
  6373  0024' D7F0               	goto	l3866
  6374                           
  6375                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  6376  0026' 5000'              	movf	_counter^0,w,c
  6377  0028' 0D03               	mullw	3
  6378  002A' 50F3               	movf	243,w,c
  6379  002C' 0F00'              	addlw	low (_s_Timers+2)
  6380  002E' 6ED9               	movwf	fsr2l,c
  6381  0030' 6ADA               	clrf	fsr2h,c
  6382  0032' 0E01               	movlw	1
  6383  0034' 6EDF               	movwf	indf2,c
  6384                           
  6385                           ;TiTTimer.c: 80:     return (counter);
  6386  0036' 5000'              	movf	_counter^0,w,c
  6387  0038' 0012               	return		;funcret
  6388  003A'                    __end_of_TiGetTimer:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function _high_rsi *****************
  6392 ;; Defined at:
  6393 ;;		line 17 in file "main.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1
  6407 ;;      Params:         0       0       0
  6408 ;;      Locals:         0       0       0
  6409 ;;      Temps:          4       0       0
  6410 ;;      Totals:         4       0       0
  6411 ;;Total ram usage:        4 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; Hardware stack levels required when called: 1
  6414 ;; This function calls:
  6415 ;;		__TiRSITimer
  6416 ;; This function is called by:
  6417 ;;		Interrupt level 2
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	intcode
  6422  0000'                    __pintcode:
  6423                           	callstack 0
  6424  0000'                    _high_rsi:
  6425                           	callstack 22
  6426                           
  6427                           ;incstack = 0
  6428  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6429  0002' CFD9 F001'         	movff	fsr2l,??_high_rsi
  6430  0006' CFDA F002'         	movff	fsr2h,??_high_rsi+1
  6431  000A' CFF3 F003'         	movff	prodl,??_high_rsi+2
  6432  000E' CFF4 F004'         	movff	prodh,??_high_rsi+3
  6433  0012' EC00' F000'        	call	__TiRSITimer	;wreg free
  6434  0016' C004' FFF4         	movff	??_high_rsi+3,prodh
  6435  001A' C003' FFF3         	movff	??_high_rsi+2,prodl
  6436  001E' C002' FFDA         	movff	??_high_rsi+1,fsr2h
  6437  0022' C001' FFD9         	movff	??_high_rsi,fsr2l
  6438  0026' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6439  0028' 0011               	retfie		f
  6440  002A'                    __end_of_high_rsi:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function __TiRSITimer *****************
  6444 ;; Defined at:
  6445 ;;		line 37 in file "TiTTimer.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1
  6459 ;;      Params:         0       0       0
  6460 ;;      Locals:         0       0       0
  6461 ;;      Temps:          1       0       0
  6462 ;;      Totals:         1       0       0
  6463 ;;Total ram usage:        1 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_high_rsi
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text50
  6473  0000'                    __ptext50:
  6474                           	callstack 0
  6475  0000'                    __TiRSITimer:
  6476                           	callstack 22
  6477                           
  6478                           ;TiTTimer.c: 39:     TMR0H = 223;
  6479                           
  6480                           ;incstack = 0
  6481  0000' 0EDF               	movlw	223
  6482  0002' 6ED7               	movwf	215,c	;volatile
  6483                           
  6484                           ;TiTTimer.c: 40:     TMR0L = 148;
  6485  0004' 0E94               	movlw	148
  6486  0006' 6ED6               	movwf	214,c	;volatile
  6487                           
  6488                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  6489  0008' 94F2               	bcf	242,2,c	;volatile
  6490                           
  6491                           ;TiTTimer.c: 42:     h_Tics++;
  6492  000A' 4A00'              	infsnz	_h_Tics^0,f,c
  6493  000C' 2A00'              	incf	(_h_Tics+1)^0,f,c
  6494                           
  6495                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  6496  000E' 0E48               	movlw	72
  6497  0010' 5C00'              	subwf	_h_Tics^0,w,c
  6498  0012' 0EEE               	movlw	238
  6499  0014' 5800'              	subwfb	(_h_Tics+1)^0,w,c
  6500  0016' A0D8               	btfss	status,0,c
  6501  0018' 0012               	return	
  6502                           
  6503                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  6504  001A' 0E00               	movlw	0
  6505  001C' 6E00'              	movwf	_counter^0,c
  6506  001E'                    i2l1756:
  6507  001E' 0E07               	movlw	7
  6508  0020' 6400'              	cpfsgt	_counter^0,c
  6509  0022' D001               	goto	i2l1760
  6510  0024' D015               	goto	i2l1768
  6511  0026'                    i2l1760:
  6512                           
  6513                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  6514  0026' 5000'              	movf	_counter^0,w,c
  6515  0028' 0D03               	mullw	3
  6516  002A' 50F3               	movf	243,w,c
  6517  002C' 0F00'              	addlw	low (_s_Timers+2)
  6518  002E' 6ED9               	movwf	fsr2l,c
  6519  0030' 6ADA               	clrf	fsr2h,c
  6520  0032' 04DE               	decf	postinc2,w,c
  6521  0034' A4D8               	btfss	status,2,c
  6522  0036' D00A               	goto	i2l1764
  6523                           
  6524                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  6525  0038' 5000'              	movf	_counter^0,w,c
  6526  003A' 0D03               	mullw	3
  6527  003C' 50F3               	movf	243,w,c
  6528  003E' 0F00'              	addlw	low _s_Timers
  6529  0040' 6ED9               	movwf	fsr2l,c
  6530  0042' 6ADA               	clrf	fsr2h,c
  6531  0044' 5000'              	movf	_h_Tics^0,w,c
  6532  0046' 5EDE               	subwf	postinc2,f,c
  6533  0048' 5000'              	movf	(_h_Tics+1)^0,w,c
  6534  004A' 5ADD               	subwfb	postdec2,f,c
  6535  004C'                    i2l1764:
  6536                           
  6537                           ;TiTTimer.c: 50:         }
  6538  004C' 2A00'              	incf	_counter^0,f,c
  6539  004E' D7E7               	goto	i2l1756
  6540  0050'                    i2l1768:
  6541                           
  6542                           ;TiTTimer.c: 51:         h_Tics=0;
  6543  0050' 0E00               	movlw	0
  6544  0052' 6E00'              	movwf	(_h_Tics+1)^0,c
  6545  0054' 0E00               	movlw	0
  6546  0056' 6E00'              	movwf	_h_Tics^0,c
  6547  0058' 0012               	return		;funcret
  6548  005A'                    __end_of__TiRSITimer:
  6549                           	callstack 0
  6550                           
  6551                           	psect	text51
  6552  0000'                    __ptext51:
  6553                           	callstack 0
  6554                           
  6555                           	psect	rparam
  6556  0000                     
  6557                           	psect	temp
  6558  0000'                    btemp:
  6559                           	callstack 0
  6560  0000'                    	ds	1
  6561  0000                     int$flags	set	btemp
  6562  0000                     wtemp8	set	btemp+1
  6563  0000                     ttemp5	set	btemp+1
  6564  0000                     ttemp6	set	btemp+4
  6565  0000                     ttemp7	set	btemp+8
  6566                           
  6567                           	psect	idloc
  6568                           
  6569                           ;Config register IDLOC0 @ 0x200000
  6570                           ;	unspecified, using default values
  6571  200000                     	org	2097152
  6572  200000  FF                 	db	255
  6573                           
  6574                           ;Config register IDLOC1 @ 0x200001
  6575                           ;	unspecified, using default values
  6576  200001                     	org	2097153
  6577  200001  FF                 	db	255
  6578                           
  6579                           ;Config register IDLOC2 @ 0x200002
  6580                           ;	unspecified, using default values
  6581  200002                     	org	2097154
  6582  200002  FF                 	db	255
  6583                           
  6584                           ;Config register IDLOC3 @ 0x200003
  6585                           ;	unspecified, using default values
  6586  200003                     	org	2097155
  6587  200003  FF                 	db	255
  6588                           
  6589                           ;Config register IDLOC4 @ 0x200004
  6590                           ;	unspecified, using default values
  6591  200004                     	org	2097156
  6592  200004  FF                 	db	255
  6593                           
  6594                           ;Config register IDLOC5 @ 0x200005
  6595                           ;	unspecified, using default values
  6596  200005                     	org	2097157
  6597  200005  FF                 	db	255
  6598                           
  6599                           ;Config register IDLOC6 @ 0x200006
  6600                           ;	unspecified, using default values
  6601  200006                     	org	2097158
  6602  200006  FF                 	db	255
  6603                           
  6604                           ;Config register IDLOC7 @ 0x200007
  6605                           ;	unspecified, using default values
  6606  200007                     	org	2097159
  6607  200007  FF                 	db	255
  6608                           
  6609                           	psect	config
  6610                           
  6611                           ; Padding undefined space
  6612  300000                     	org	3145728
  6613  300000  FF                 	db	255
  6614                           
  6615                           ;Config register CONFIG1H @ 0x300001
  6616                           ;	Oscillator
  6617                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  6618                           ;	Fail-Safe Clock Monitor Enable bit
  6619                           ;	FCMEN = 0x0, unprogrammed default
  6620                           ;	Internal/External Oscillator Switchover bit
  6621                           ;	IESO = 0x0, unprogrammed default
  6622  300001                     	org	3145729
  6623  300001  06                 	db	6
  6624                           
  6625                           ;Config register CONFIG2L @ 0x300002
  6626                           ;	unspecified, using default values
  6627                           ;	Power-up Timer Enable bit
  6628                           ;	PWRT = 0x1, unprogrammed default
  6629                           ;	Brown-out Reset Enable bits
  6630                           ;	BOR = 0x3, unprogrammed default
  6631                           ;	Brown-out Reset Voltage bits
  6632                           ;	BORV = 0x3, unprogrammed default
  6633  300002                     	org	3145730
  6634  300002  1F                 	db	31
  6635                           
  6636                           ;Config register CONFIG2H @ 0x300003
  6637                           ;	Watchdog Timer Enable bit
  6638                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6639                           ;	Watchdog Timer Postscale Select bits
  6640                           ;	WDTPS = 0xF, unprogrammed default
  6641  300003                     	org	3145731
  6642  300003  1E                 	db	30
  6643                           
  6644                           ; Padding undefined space
  6645  300004                     	org	3145732
  6646  300004  FF                 	db	255
  6647                           
  6648                           ;Config register CONFIG3H @ 0x300005
  6649                           ;	CCP2 MUX bit
  6650                           ;	CCP2MX = 0x1, unprogrammed default
  6651                           ;	PORTB A/D Enable bit
  6652                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6653                           ;	Low-Power Timer1 Oscillator Enable bit
  6654                           ;	LPT1OSC = 0x0, unprogrammed default
  6655                           ;	MCLR Pin Enable bit
  6656                           ;	MCLRE = 0x1, unprogrammed default
  6657  300005                     	org	3145733
  6658  300005  81                 	db	129
  6659                           
  6660                           ;Config register CONFIG4L @ 0x300006
  6661                           ;	Stack Full/Underflow Reset Enable bit
  6662                           ;	STVREN = 0x1, unprogrammed default
  6663                           ;	Single-Supply ICSP Enable bit
  6664                           ;	LVP = OFF, Single-Supply ICSP disabled
  6665                           ;	Boot Block Size Select bits
  6666                           ;	BBSIZ = 0x0, unprogrammed default
  6667                           ;	Extended Instruction Set Enable bit
  6668                           ;	XINST = 0x0, unprogrammed default
  6669                           ;	Background Debugger Enable bit
  6670                           ;	DEBUG = 0x1, unprogrammed default
  6671  300006                     	org	3145734
  6672  300006  81                 	db	129
  6673                           
  6674                           ; Padding undefined space
  6675  300007                     	org	3145735
  6676  300007  FF                 	db	255
  6677                           
  6678                           ;Config register CONFIG5L @ 0x300008
  6679                           ;	unspecified, using default values
  6680                           ;	Code Protection bit
  6681                           ;	CP0 = 0x1, unprogrammed default
  6682                           ;	Code Protection bit
  6683                           ;	CP1 = 0x1, unprogrammed default
  6684  300008                     	org	3145736
  6685  300008  03                 	db	3
  6686                           
  6687                           ;Config register CONFIG5H @ 0x300009
  6688                           ;	unspecified, using default values
  6689                           ;	Boot Block Code Protection bitProtect Boot
  6690                           ;	CPB = 0x1, unprogrammed default
  6691                           ;	Data EEPROM Code Protection bit
  6692                           ;	CPD = 0x1, unprogrammed default
  6693  300009                     	org	3145737
  6694  300009  C0                 	db	192
  6695                           
  6696                           ;Config register CONFIG6L @ 0x30000A
  6697                           ;	unspecified, using default values
  6698                           ;	Write Protection bit
  6699                           ;	WRT0 = 0x1, unprogrammed default
  6700                           ;	Write Protection bit
  6701                           ;	WRT1 = 0x1, unprogrammed default
  6702  30000A                     	org	3145738
  6703  30000A  03                 	db	3
  6704                           
  6705                           ;Config register CONFIG6H @ 0x30000B
  6706                           ;	unspecified, using default values
  6707                           ;	Configuration Register Write Protection bit
  6708                           ;	WRTC = 0x1, unprogrammed default
  6709                           ;	Boot Block Write Protection bit
  6710                           ;	WRTB = 0x1, unprogrammed default
  6711                           ;	Data EEPROM Write Protection bit
  6712                           ;	WRTD = 0x1, unprogrammed default
  6713  30000B                     	org	3145739
  6714  30000B  E0                 	db	224
  6715                           
  6716                           ;Config register CONFIG7L @ 0x30000C
  6717                           ;	unspecified, using default values
  6718                           ;	Table Read Protection bit
  6719                           ;	EBTR0 = 0x1, unprogrammed default
  6720                           ;	Table Read Protection bit
  6721                           ;	EBTR1 = 0x1, unprogrammed default
  6722  30000C                     	org	3145740
  6723  30000C  03                 	db	3
  6724                           
  6725                           ;Config register CONFIG7H @ 0x30000D
  6726                           ;	unspecified, using default values
  6727                           ;	Boot Block Table Read Protection bit
  6728                           ;	EBTRB = 0x1, unprogrammed default
  6729  30000D                     	org	3145741
  6730  30000D  40                 	db	64
  6731                           tosu	equ	0xFFF
  6732                           tosh	equ	0xFFE
  6733                           tosl	equ	0xFFD
  6734                           stkptr	equ	0xFFC
  6735                           pclatu	equ	0xFFB
  6736                           pclath	equ	0xFFA
  6737                           pcl	equ	0xFF9
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           indf0	equ	0xFEF
  6745                           postinc0	equ	0xFEE
  6746                           postdec0	equ	0xFED
  6747                           preinc0	equ	0xFEC
  6748                           plusw0	equ	0xFEB
  6749                           fsr0h	equ	0xFEA
  6750                           fsr0l	equ	0xFE9
  6751                           wreg	equ	0xFE8
  6752                           indf1	equ	0xFE7
  6753                           postinc1	equ	0xFE6
  6754                           postdec1	equ	0xFE5
  6755                           preinc1	equ	0xFE4
  6756                           plusw1	equ	0xFE3
  6757                           fsr1h	equ	0xFE2
  6758                           fsr1l	equ	0xFE1
  6759                           bsr	equ	0xFE0
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           preinc2	equ	0xFDC
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    110
    Data        29
    BSS         267
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     121
    BANK0           128      2      14
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 110
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> menu(CODE[110]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 110
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> menu(CODE[110]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _GLCDMotor->_LcPutChar
    _LcInsertFletxa->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24973
                           _GLCDInit
                          _GLCDMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    7880
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     210
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     210
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      68
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     583
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     242
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     341
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     297
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     158
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     127
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2212
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    2043
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     440
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0   11509
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                        _LcPutFletxa
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutFletxa                                          0     0      0    3953
                           _LcGotoXY
                     _LcInsertFletxa
 ---------------------------------------------------------------------------------
 (3) _LcInsertFletxa                                       0     0      0    2212
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2212
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     507
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3000
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1741
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (9) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _LcPutFletxa
       _LcGotoXY
       _LcInsertFletxa
         _LcPutChar
     _TiGetTics
     _TiResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
   _motorAltaveu
     _TiGetTics
     _TiResetTics

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2       E       4       10.9%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F       7        0.0%
DATA                 0      0     13F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 27 13:11:04 2022

               TiResetTics@Handle 000005                  _loginNOTRegister 000005  
                               _i 000034                                 _j 000033  
       ??_UcheckExistsNotFinished 000005            __end_of_compareStrings 000046  
                             l444 00005A                               l614 00001E  
                             l471 0001B8                               l472 0001CA  
                             l562 00002C                               l554 00000A  
                             l564 000032                               l548 00001C  
                             l557 000018                               l645 000002  
                             l567 000068                               l728 000044  
                             l569 00006E                               l586 000002  
                             l587 000012                               l589 000020  
                             l758 0001A6               __end_of_LcPutFletxa 000010  
                             _tmp 00003C                  ??_CantaPartBaixa 000005  
                             prod 000FF3                               wreg 000FE8  
                     _ultimaTecla 00000D                __size_of_GLCDMotor 000000  
                            l4120 00004C                              l4104 000016  
                            l4220 00017E                              l4212 000164  
                            l4230 000196                              l4206 00015A  
                            l4150 0000AC                              l4134 00007E  
                            l4118 000046                              l4160 0000C4  
                            l4136 000084                              l4080 00001C  
                            l4226 00018E                              l4058 000004  
                            l4252 0001BC                              l4156 0000C0  
                            l4148 0000A8                              l4084 000024  
                            l4316 0000AA                              l4420 000126  
                            l4332 000014                              l4500 000014  
                            l4174 0000F6                              l4262 0001D6  
                            l4430 00014E                              l4422 00012C  
                            l4406 0000FA                              l4350 00004E  
                            l4342 000036                              l4326 000002  
                            l4502 00001A                              l4256 0001D2  
                            l4248 0001AA                              l4168 0000E0  
                            l4096 000002                              l4432 000154  
                            l3802 000010                              l4186 000122  
                            l4178 000102                              l4370 000090  
                            l4362 000070                              l4196 00013C  
                            l4612 000146                              l4620 000152  
                            l4436 00015E                              l4380 0000B0  
                            l4348 000048                              l4524 000066  
                            l4516 000038                              l4508 000028  
                            l3910 000008                              l4286 000028  
                            l4606 000138                              l4390 0000D8  
                            l4552 00002A                              l4480 0001DC  
                            l4448 000176                              l4536 000092  
                            l3850 000036                              l4562 00005A  
                            l4394 0000E2                              l4378 0000AA  
                 ?_LcInsertFletxa 000000                              l3860 000008  
                            l4804 0001D4                              l4652 000028  
                            l4644 000002                              l4580 0000B6  
                            l4468 0001AA                              l4388 0000D2  
                            l3774 000012                              l4718 0000BE  
                            l4814 00021E                              l4830 000054  
                            l4566 000064                              l4486 000206  
                            l3856 000046                              l3848 00002C  
                            l4808 0001F8                              l4728 0000DA  
                            l4680 0000A6                              l4672 00009E  
                            l4832 000058                              l4824 000044  
                            l4584 0000C8                              l4568 00006A  
                            l3866 000006                              l3874 000014  
                            l4770 000182                              l4762 000154  
                            l4674 0000A2                              l4658 000052  
                            l3938 000008                              l4748 0000F8  
                            l4852 000088                              l4836 000064  
                            l3972 00001E                              l4596 000120  
                            l4686 0000B8                              l4846 00007A  
                            l4838 00006A                              l3966 000002  
                            l4926 000032                              l4872 0000C4  
                            l4864 0000AC                              l4794 0001B8  
                            l4778 0001B0                              l3994 000026  
                            l4858 00009E                              l4892 000116  
                            l4884 000102                              l4868 0000B8  
                            l4798 0001C0                              l4878 0000F4  
                            l4888 00010A                              l4898 000122  
                            STR_1 00007A                              STR_2 00006F  
                            STR_3 000089                              STR_4 000082  
                            u3200 00005A                              _LATD 000F8C  
                            u3140 00000C                              u3220 00000C  
                            u3160 000028                              u3240 000028  
                            u3218 00005C                              u3410 00001C  
                            u3180 000042                              u3260 000042  
                            u4220 000186                              u3158 00000E  
                            u3238 00000E                              u3430 000038  
                            u4150 00010A                              u3280 00005A  
                            u3178 00002A                              u3258 00002A  
                            u3450 000052                              u3530 00002A  
                            u3428 00001E                              u3540 0000D4  
                            u3198 000044                              u3278 000044  
                            u3470 00006A                              u3448 00003A  
                            u4280 0001E4                              u3298 00005C  
                            u3810 000112                              u4290 0001F6  
                            u4282 0001E6                              u3468 000054  
                            u4292 0001F8                              u3670 00006A  
                            u4390 000024                              u3488 00006C  
                            u3780 0000F0                              u4660 00000A  
                            u3870 00016C                              u4670 000014  
                            u3880 000186                              u4680 000024  
                            u4690 000034                              u4676 000016  
                            u4668 00000C                              u4686 000026  
                            u4696 000036                   ??_SsetNovaTecla 000005  
                            _Rows 000049                              _main 000000  
                            _menu 000000                              _nota 000030  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 000000                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 000024  
                            start 000000*                  __end_of_CantaIR 000032  
                    ?_initAltaveu 000000                     LcInit@columns 000010  
                    ___param_bank 000000                  __end_of_GLCDInit 000008  
                     Espera@Timer 00000F                             ?_main 000000  
         __size_of_escriureEEPROM 000000                             ?_menu 000000  
                           _EEADR 000FA9                     ??_TiInitTimer 000005  
                           _T0CON 000FD5                   ?_compareStrings 000005  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _LcLCD 000000                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _SMSon 000000  
                     _MNovaLletra 000000                             _Minit 000000  
                           _Sinit 000000                             _Timer 000045  
                           _Uinit 000000                             _s_ptr 000044  
                           _nou_s 000007                       _LcCursorOff 000000  
     __size_of_escriureCharEEPROM 000000                    __pbitbssCOMRAM 000000  
                           tablat 000FF5                       _LcNewString 000000  
                   ??_TiResetTics 000005                             ttemp5 000001  
                           ttemp6 000004                             ttemp7 000008  
                           status 000FD8                             wtemp8 000001  
   __size_of_UcheckExistsGetError 000000                  __end_of_LcGotoXY 00003A  
                __end_of_LcLliure 00000C                     ??__TiRSITimer 000000  
                      _TiGetTimer 000000           EscriuPrimeraOrdre@ordre 000006  
                 __initialization 000000                __size_of_CantaData 000000  
                    __end_of_main 000050                      __end_of_menu 00026A  
               __end_of_GLCDMotor 00027A                       _LcPutFletxa 000000  
                __end_of_TeTeclat 000164                     _indexNextUser 000036  
                          ??_main 000014                            ??_menu 000000  
              __size_of_LcPutChar 000000                     __activetblptr 000002  
                GLCDMotor@length1 000024                  GLCDMotor@length2 000023  
                          ?_LcLCD 000000                            ?_SMSon 000000  
                          ?_Minit 000000                            ?_Sinit 000000  
                          ?_Uinit 000000               __end_of_TiInitTimer 000038  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                       ??_LcClear 000013                         ??_CantaIR 000007  
                          i2l1760 000026                            i2l1764 00004C  
                          i2l1756 00001E                            i2l1768 000050  
                  LcGotoXY@Fisics 00000E                    LcGotoXY@Column 000012  
                   ??_WaitForBusy 00000C                __size_of_TiGetTics 000000  
                  _sumaPulsacions 000043                            _SMSoff 000000  
                          _LcInit 000000                    _UgetNumUsuaris 000000  
                          _SMotor 000000               escriureCharEEPROM@c 000006  
                          _TeInit 000000                            _Espera 000000  
                    _LcGotoXY$342 000010                            _RowAct 000047  
             __end_of_TiResetTics 000018                            Uinit@i 000007  
                          Uinit@j 000008                  __end_of_high_rsi 00002A  
                          _h_Tics 000021               __end_of__TiRSITimer 00005A  
                          clear_0 000046                            clear_1 000054  
                      _UenviaChar 000000                            isa$std 000001  
                      UenviaPas@c 000006       __size_of_EscriuPrimeraOrdre 000000  
                    __pdataCOMRAM 000000            __size_of_CantaPartAlta 000000  
              __size_of_UenviaPas 000000                      __mediumconst 000000* 
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 000038  
               __end_of_CantaData 000032                      TeTeclat@cols 00003F  
                       ?_GLCDInit 000000                     ?_UcheckExists 000000  
                      __accesstop 000000*          __end_of__initialization 00005A  
          __end_of_UgetNumUsuaris 000004                 __end_of_LcPutChar 000052  
                   ___rparam_used 000001                     __end_of_LcLCD 000030  
                     ?_TiGetTimer 000000                     __end_of_SMSon 000006  
                  __pcstackCOMRAM 000000                     __end_of_Minit 000008  
             __end_of_WaitForBusy 000040                     __end_of_Sinit 000008  
                   __end_of_Uinit 0000B4                      __pidataBANK0 000000  
            __size_of_initAltaveu 000000                    _escriureEEPROM 000000  
               __end_of_TiGetTics 00002C                       _TiInitTimer 000000  
                         ??_LcLCD 000014                           ??_SMSon 000005  
                ??_LcInsertFletxa 000014                         ?_LcGotoXY 00000D  
                       ?_LcLliure 000000                           ??_Minit 000006  
                         ??_Sinit 000006                           ??_Uinit 000005  
                  ??_UcheckExists 000005                        ??_GLCDInit 000006  
                      __pbssBANK1 000000                         ?_TeTeclat 000000  
                     _TiResetTics 000000                   ?_UgetNumUsuaris 000000  
                   ??_UmotorUsers 00000A                           ?_SMSoff 000000  
                         ?_LcInit 000010                     _CantaPartAlta 000000  
                         ?_SMotor 000000                           ?_TeInit 000000  
                         ?_Espera 00000C                 __end_of_UenviaPas 000010  
                     __TiRSITimer 000000               _indexNextUserStruct 000035  
                ??_compareStrings 000008            __end_of_escriureEEPROM 00002E  
                     ?_UenviaChar 000005            __size_of_MsetNovaTecla 000000  
                         LcInit@i 000012                        ??_LcGotoXY 00000E  
                    ?_MNovaLletra 000000                        ??_LcLliure 000005  
             __size_of_TiGetTimer 000000                      ?_LcCursorOff 000000  
                       ?_high_rsi 000000                           _LcClear 000000  
                         _CantaIR 000000                      ?_LcNewString 000005  
                      ??_TeTeclat 00000C                       _WaitForBusy 000000  
                  ?_CantaPartAlta 000000                           _Columns 000048  
           __end_of_SsetNovaTecla 000008                   __size_of_SMSoff 000000  
                 __size_of_LcInit 000000                           __Hparam 000000  
                 __size_of_SMotor 000000                   __size_of_TeInit 000000  
                 __size_of_Espera 000000                           __Lparam 000000  
             __end_of_UmotorUsers 00017C          ?_UcheckExistsNotFinished 000000  
                    ?_LcPutFletxa 000000                   ?_escriureEEPROM 000000  
                   ?_motorAltaveu 000000                      __psmallconst 000000  
                         __pcinit 000000      __end_of_UcheckExistsGetError 000008  
                         _ferMenu 000001                        _init_ports 000000  
                         __ramtop 000000*                          __ptext0 000000  
                         __ptext1 000000                           __ptext2 000000  
                         __ptext3 000000                           __ptext4 000000  
                         __ptext5 000000                           __ptext6 000000  
                         __ptext7 000000                           __ptext8 000000  
                         __ptext9 000000                         _T0CONbits 000FD5  
                       _GLCDMotor 000000                         CantaIR@IR 000007  
                         _counter 00003D                       UenviaChar@c 000006  
      __end_of_escriureCharEEPROM 000024                  LcNewString@new_s 000005  
                 WaitForBusy@Busy 00000C                       Uinit@j_1034 000009  
                      ??_high_rsi 000001              end_of_initialization 00005A  
                         _usuaris 000000           __size_of_CantaPartBaixa 000000  
                   __Lmediumconst 000000*                  TiGetTics@Handle 000009  
                   _MsetNovaTecla 000000               __size_of_UenviaChar 000000  
                      _novaLletra 00000B                   TiGetTics@actual 00000A  
                      GLCDMotor@j 000029                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 00000C                        _numUsuaris 000037  
            __end_of_UcheckExists 000004                     TeTeclat@files 00003E  
                   TeTeclat@state 000040                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 000000  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                 ??_CantaPartAlta 000005                    ?_MsetNovaTecla 000000  
                       _CantaData 000000                 __size_of_GLCDInit 000000  
                     _UmotorUsers 000000   __end_of_UcheckExistsNotFinished 00000C  
                  __end_of_SMSoff 000006                      ??_TiGetTimer 000005  
                  __end_of_LcInit 0000DA                    __end_of_SMotor 000218  
                       _LcPutChar 000000                    __end_of_TeInit 000008  
               motorAltaveu@state 00002D                    __end_of_Espera 000024  
                  GLCDMotor@state 00002A        __end_of_EscriuPrimeraOrdre 00007A  
                   __pidataCOMRAM 000000                       ?_init_ports 000000  
                       _ColumnAct 000046                      ?_TiInitTimer 000000  
             start_initialization 000000                         _TiGetTics 000000  
                ??_UgetNumUsuaris 000005                  UmotorUsers@state 000031  
               __size_of_LcGotoXY 000000                __end_of_TiGetTimer 00003A  
            __size_of_MNovaLletra 000000                 __size_of_LcLliure 000000  
                    ?_TiResetTics 000000              __size_of_LcCursorOff 000000  
                      ?_CantaData 000000              _UcheckExistsGetError 000000  
            __size_of_LcNewString 000000                          ??_SMSoff 000005  
                        ??_LcInit 000011                         _NovaTecla 00000C  
               __size_of_TeTeclat 000000                          ??_SMotor 00000C  
                        ??_TeInit 000006                      ?__TiRSITimer 000000  
                   ??_initAltaveu 000006                          ??_Espera 00000E  
                      ?_LcPutChar 000000                         _UenviaPas 000000  
                     __pdataBANK0 000000                      _menuDaltGLCD 00002B  
                    ??_UenviaChar 000006              __size_of_LcPutFletxa 000000  
                     ??_GLCDMotor 000000                       __pbssCOMRAM 000000  
                   __pcstackBANK0 000000                        ?_TiGetTics 000005  
                 ??_MsetNovaTecla 000005              __end_of_motorAltaveu 0000B6  
                        ?_LcClear 000000                          ?_CantaIR 000000  
                  _CantaPartBaixa 000000             ?_UcheckExistsGetError 000000  
               __size_of_high_rsi 000000                      ?_WaitForBusy 000000  
             __size_of_init_ports 000000                MsetNovaTecla@tecla 000005  
              SsetNovaTecla@tecla 000005                __end_of_UenviaChar 000010  
                ??_escriureEEPROM 000005             __size_of_UcheckExists 000000  
                       __pintcode 000000                        ?_UenviaPas 000005  
                 CantaPartBaixa@c 000006               __end_of_initAltaveu 000008  
                     __smallconst 000000*                   __size_of_LcLCD 000000  
                  __size_of_SMSon 000000  __size_of_UcheckExistsNotFinished 000000  
                  __size_of_Minit 000000                    __size_of_Sinit 000000  
                  __size_of_Uinit 000000            __end_of_CantaPartBaixa 000068  
                        _GLCDInit 000000                escriureEEPROM@caca 000005  
                     _do_register 000003                         _newString 000000  
                    _UcheckExists 000000                       ??_CantaData 000007  
         __size_of_LcInsertFletxa 000000                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   UenviaChar@pos 000005                _escriureCharEEPROM 000000  
                       _novaTecla 00000F                       ??_LcPutChar 000013  
                       _timerGLCD 00002C                          _RCONbits 000FD0  
                       _reproduir 000002                         _timerMenu 00003B  
             ?_escriureCharEEPROM 000005            __size_of_SsetNovaTecla 000000  
                        Espera@ms 00000C                          _LcGotoXY 000000  
                  _usuariLoguejat 000032                          _LcLliure 000000  
                     ??_TiGetTics 000007           __size_of_compareStrings 000000  
            __size_of_TiInitTimer 000000                     GLCDMotor@max1 00000A  
                   GLCDMotor@max2 000009                     GLCDMotor@min1 000028  
                   GLCDMotor@min2 000027                      _teclaPremuda 000000  
                     LcGotoXY@Row 00000D                         copy_data0 000014  
                       copy_data1 000034              ??_escriureCharEEPROM 000006  
                 ?_CantaPartBaixa 000000            ??_UcheckExistsGetError 000005  
           escriureCharEEPROM@pos 000005                  __size_of_LcClear 000000  
                __size_of_CantaIR 000000                          _TeTeclat 000000  
                    ?_UmotorUsers 000000                        _EECON1bits 000FA6  
            __size_of_TiResetTics 000000                          __Hrparam 000000* 
                     _initAltaveu 000000                         menu@state 000039  
                        __Lrparam 000000*             __size_of__TiRSITimer 000000  
                     ??_UenviaPas 000006                      ??_init_ports 000005  
           __size_of_motorAltaveu 000000                   _do_check_exists 000004  
                        __ptext10 000000                          __ptext11 000000  
              _EscriuPrimeraOrdre 000000                          __ptext20 000000  
                        __ptext12 000000                          __ptext21 000000  
                        __ptext13 000000                          __ptext30 000000  
                        __ptext22 000000                          __ptext14 000000  
                        __ptext31 000000                          __ptext23 000000  
                        __ptext15 000000                          __ptext40 000000  
                        __ptext32 000000                          __ptext24 000000  
                        __ptext16 000000                          __ptext41 000000  
                        __ptext33 000000                          __ptext25 000000  
                        __ptext17 000000                          __ptext50 000000  
                        __ptext42 000000                          __ptext34 000000  
                        __ptext26 000000                          __ptext18 000000  
                        __ptext51 000000                          __ptext43 000000  
                        __ptext35 000000                          __ptext27 000000  
                        __ptext19 000000                          __ptext44 000000  
                        __ptext36 000000                          __ptext28 000000  
                        __ptext45 000000                          __ptext37 000000  
                        __ptext29 000000                          __ptext46 000000  
                        __ptext38 000000                          __ptext47 000000  
                        __ptext39 000000                          __ptext48 000000  
                  CantaPartAlta@c 000006                       _lletraASCII 000010  
                        _high_rsi 000000                          _copsNota 00002E  
                        _s_Timers 000000                       _lletraInici 000000  
                        _menuDalt 00003A               ?_EscriuPrimeraOrdre 000000  
                   __size_of_main 000000                     __size_of_menu 000000  
           __end_of_CantaPartAlta 000068                     CantaData@Data 000007  
                        _tiTeclat 000041                __end_of_init_ports 000020  
                        _setSMSon 000006                     _SsetNovaTecla 000000  
            __size_of_WaitForBusy 000000                          _timerSMS 00000E  
                        isa$xinst 000000                          int$flags 000000  
                    UenviaPas@pos 000005                      _motorAltaveu 000000  
            ??_EscriuPrimeraOrdre 000005                        LcInit@rows 000011  
         _UcheckExistsNotFinished 000000                        _INTCONbits 000FF2  
                   ??_MNovaLletra 000005                     ??_LcCursorOff 00000D  
                   ??_LcNewString 000006                          intlevel2 000000* 
                    _timerAltaveu 00002F                    _LcInsertFletxa 000000  
                      LcPutChar@c 000013                    ?_SsetNovaTecla 000000  
               MNovaLletra@lletra 000005                   compareStrings@a 000005  
                 compareStrings@b 000006                     ??_LcPutFletxa 000014  
                     GLCDMotor@k1 000026                       GLCDMotor@k2 000025  
                  _compareStrings 000000                       _tmpPassword 000018  
          __end_of_LcInsertFletxa 00000E               __end_of_MNovaLletra 000008  
           __end_of_MsetNovaTecla 000008                       _tmpUsername 00004A  
             __end_of_LcCursorOff 00000C                       SMotor@state 000042  
         __size_of_UgetNumUsuaris 000000               __end_of_LcNewString 000008  
            __size_of_UmotorUsers 000000  
